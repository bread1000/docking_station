
F429_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001b914  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003144  0801bac4  0801bac4  0002bac4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000356  0801ec08  0801ec08  0002ec08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 TextFlashSection 00000018  0801ef60  0801ef60  0002ef60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  0801ef78  0801ef78  00030104  2**0
                  CONTENTS
  6 .ARM          00000008  0801ef78  0801ef78  0002ef78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  0801ef80  0801ef80  00030104  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000014  0801ef80  0801ef80  0002ef80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  0801ef94  0801ef94  0002ef94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000104  20000000  0801ef9c  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00001678  20000104  0801f0a0  00030104  2**2
                  ALLOC
 12 ._user_heap_stack 00000604  2000177c  0801f0a0  0003177c  2**0
                  ALLOC
 13 .ARM.attributes 00000030  00000000  00000000  00030104  2**0
                  CONTENTS, READONLY
 14 .debug_info   0003cbc0  00000000  00000000  00030134  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 0000b15f  00000000  00000000  0006ccf4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00002820  00000000  00000000  00077e58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 000024b0  00000000  00000000  0007a678  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0002e0b0  00000000  00000000  0007cb28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0002bfb1  00000000  00000000  000aabd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000f597a  00000000  00000000  000d6b89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .comment      000000cf  00000000  00000000  001cc503  2**0
                  CONTENTS, READONLY
 22 .debug_frame  0000b254  00000000  00000000  001cc5d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000104 	.word	0x20000104
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801baac 	.word	0x0801baac

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000108 	.word	0x20000108
 80001ec:	0801baac 	.word	0x0801baac

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <line_append>:
static uint32_t line_length;
static uint8_t TX_BUFFER[BUFFER_LEN] = {0};

//Funkcja dodająca kolejne przychodzące znaki jednej linii do bufora
void line_append(uint8_t value)
{
 8000594:	b580      	push	{r7, lr}
 8000596:	b082      	sub	sp, #8
 8000598:	af00      	add	r7, sp, #0
 800059a:	4603      	mov	r3, r0
 800059c:	71fb      	strb	r3, [r7, #7]
	//odebrano znak końca linii
	if (value == '\r' || value == '\n')
 800059e:	79fb      	ldrb	r3, [r7, #7]
 80005a0:	2b0d      	cmp	r3, #13
 80005a2:	d002      	beq.n	80005aa <line_append+0x16>
 80005a4:	79fb      	ldrb	r3, [r7, #7]
 80005a6:	2b0a      	cmp	r3, #10
 80005a8:	d110      	bne.n	80005cc <line_append+0x38>
	{
		if (line_length > 0)
 80005aa:	4b12      	ldr	r3, [pc, #72]	; (80005f4 <line_append+0x60>)
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	2b00      	cmp	r3, #0
 80005b0:	d01c      	beq.n	80005ec <line_append+0x58>
		{
			line_buffer[line_length] = '\0';		//jeśli bufor nie jest pusty - dodaj 0 na końcu linii
 80005b2:	4b10      	ldr	r3, [pc, #64]	; (80005f4 <line_append+0x60>)
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	4a10      	ldr	r2, [pc, #64]	; (80005f8 <line_append+0x64>)
 80005b8:	2100      	movs	r1, #0
 80005ba:	54d1      	strb	r1, [r2, r3]
			printf("Otrzymano: %s\n", line_buffer);
 80005bc:	490e      	ldr	r1, [pc, #56]	; (80005f8 <line_append+0x64>)
 80005be:	480f      	ldr	r0, [pc, #60]	; (80005fc <line_append+0x68>)
 80005c0:	f01a fe0e 	bl	801b1e0 <iprintf>
			line_length = 0;						//zbieranie danych od nowa
 80005c4:	4b0b      	ldr	r3, [pc, #44]	; (80005f4 <line_append+0x60>)
 80005c6:	2200      	movs	r2, #0
 80005c8:	601a      	str	r2, [r3, #0]
		if (line_length > 0)
 80005ca:	e00f      	b.n	80005ec <line_append+0x58>
		}
	//odebrano znak inny niż końca linii
	}else{
		//jeśli odebrano za dużo danych
		if (line_length >= LINE_MAX_LENGTH)
 80005cc:	4b09      	ldr	r3, [pc, #36]	; (80005f4 <line_append+0x60>)
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	2b13      	cmp	r3, #19
 80005d2:	d902      	bls.n	80005da <line_append+0x46>
			line_length = 0;				//usunięcie danych odebranych dotychczas
 80005d4:	4b07      	ldr	r3, [pc, #28]	; (80005f4 <line_append+0x60>)
 80005d6:	2200      	movs	r2, #0
 80005d8:	601a      	str	r2, [r3, #0]

		line_buffer[line_length++] = value;	//dopisanie odebranej wartości do bufora
 80005da:	4b06      	ldr	r3, [pc, #24]	; (80005f4 <line_append+0x60>)
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	1c5a      	adds	r2, r3, #1
 80005e0:	4904      	ldr	r1, [pc, #16]	; (80005f4 <line_append+0x60>)
 80005e2:	600a      	str	r2, [r1, #0]
 80005e4:	4904      	ldr	r1, [pc, #16]	; (80005f8 <line_append+0x64>)
 80005e6:	79fa      	ldrb	r2, [r7, #7]
 80005e8:	54ca      	strb	r2, [r1, r3]
	}
}
 80005ea:	bf00      	nop
 80005ec:	bf00      	nop
 80005ee:	3708      	adds	r7, #8
 80005f0:	46bd      	mov	sp, r7
 80005f2:	bd80      	pop	{r7, pc}
 80005f4:	2000044c 	.word	0x2000044c
 80005f8:	20000434 	.word	0x20000434
 80005fc:	0801bac4 	.word	0x0801bac4

08000600 <__io_putchar>:

//Funkcja umożliwiająca wysyłanie znaków przez uart za pomocą funkcji 'printf()'
int __io_putchar(int ch)
{
 8000600:	b580      	push	{r7, lr}
 8000602:	b084      	sub	sp, #16
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
	//znak końca linii
    if (ch == '\n')
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	2b0a      	cmp	r3, #10
 800060c:	d109      	bne.n	8000622 <__io_putchar+0x22>
    {
        uint8_t ch2 = '\r';									//dodanie znaku powrotu karetki
 800060e:	230d      	movs	r3, #13
 8000610:	73fb      	strb	r3, [r7, #15]
        HAL_UART_Transmit(&huart1, &ch2, 1, HAL_MAX_DELAY);	//wysłanie dodanego znaku przez uart
 8000612:	f107 010f 	add.w	r1, r7, #15
 8000616:	f04f 33ff 	mov.w	r3, #4294967295
 800061a:	2201      	movs	r2, #1
 800061c:	4807      	ldr	r0, [pc, #28]	; (800063c <__io_putchar+0x3c>)
 800061e:	f005 ff58 	bl	80064d2 <HAL_UART_Transmit>
    }

    HAL_UART_Transmit(&huart1, (uint8_t*)&ch, 1, HAL_MAX_DELAY); //wyslanie danej przez uart
 8000622:	1d39      	adds	r1, r7, #4
 8000624:	f04f 33ff 	mov.w	r3, #4294967295
 8000628:	2201      	movs	r2, #1
 800062a:	4804      	ldr	r0, [pc, #16]	; (800063c <__io_putchar+0x3c>)
 800062c:	f005 ff51 	bl	80064d2 <HAL_UART_Transmit>
    return 1;
 8000630:	2301      	movs	r3, #1
}
 8000632:	4618      	mov	r0, r3
 8000634:	3710      	adds	r7, #16
 8000636:	46bd      	mov	sp, r7
 8000638:	bd80      	pop	{r7, pc}
 800063a:	bf00      	nop
 800063c:	20000370 	.word	0x20000370

08000640 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000640:	b580      	push	{r7, lr}
 8000642:	b084      	sub	sp, #16
 8000644:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000646:	f001 fd31 	bl	80020ac <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800064a:	f000 f8d3 	bl	80007f4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800064e:	f000 fe5b 	bl	8001308 <MX_GPIO_Init>
  MX_CRC_Init();
 8000652:	f000 f9ab 	bl	80009ac <MX_CRC_Init>
  MX_DMA2D_Init();
 8000656:	f000 f9bd 	bl	80009d4 <MX_DMA2D_Init>
  MX_FMC_Init();
 800065a:	f000 fdad 	bl	80011b8 <MX_FMC_Init>
  MX_LTDC_Init();
 800065e:	f000 f9eb 	bl	8000a38 <MX_LTDC_Init>
  MX_SPI5_Init();
 8000662:	f000 fa69 	bl	8000b38 <MX_SPI5_Init>
  MX_TIM1_Init();
 8000666:	f000 fbe3 	bl	8000e30 <MX_TIM1_Init>
  MX_ADC1_Init();
 800066a:	f000 f94d 	bl	8000908 <MX_ADC1_Init>
  MX_TIM3_Init();
 800066e:	f000 fca5 	bl	8000fbc <MX_TIM3_Init>
  MX_TIM2_Init();
 8000672:	f000 fc2d 	bl	8000ed0 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 8000676:	f000 fd4b 	bl	8001110 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 800067a:	f000 fd73 	bl	8001164 <MX_USART2_UART_Init>
  MX_TouchGFX_Init();
 800067e:	f006 fec0 	bl	8007402 <MX_TouchGFX_Init>

  /* USER CODE BEGIN 2 */
  //Zegar obsługujący czujnik odległości HC-SR04
  HAL_TIM_IC_Start(&htim3, TIM_CHANNEL_1);
 8000682:	2100      	movs	r1, #0
 8000684:	4852      	ldr	r0, [pc, #328]	; (80007d0 <main+0x190>)
 8000686:	f004 fe50 	bl	800532a <HAL_TIM_IC_Start>
  HAL_TIM_IC_Start(&htim3, TIM_CHANNEL_2);
 800068a:	2104      	movs	r1, #4
 800068c:	4850      	ldr	r0, [pc, #320]	; (80007d0 <main+0x190>)
 800068e:	f004 fe4c 	bl	800532a <HAL_TIM_IC_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 8000692:	2108      	movs	r1, #8
 8000694:	484e      	ldr	r0, [pc, #312]	; (80007d0 <main+0x190>)
 8000696:	f004 fdd5 	bl	8005244 <HAL_TIM_PWM_Start>

  //Zegar generujący sygnał 36kHz dla diód IR
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 800069a:	2100      	movs	r1, #0
 800069c:	484d      	ldr	r0, [pc, #308]	; (80007d4 <main+0x194>)
 800069e:	f004 fdd1 	bl	8005244 <HAL_TIM_PWM_Start>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  uint8_t read;
  uint8_t distance = 0;
 80006a2:	2300      	movs	r3, #0
 80006a4:	737b      	strb	r3, [r7, #13]
  uint8_t prev_distance = 0;
 80006a6:	2300      	movs	r3, #0
 80006a8:	73fb      	strb	r3, [r7, #15]
  bool ROBOT = false;
 80006aa:	2300      	movs	r3, #0
 80006ac:	73bb      	strb	r3, [r7, #14]
  uint8_t value = 0;
 80006ae:	2300      	movs	r3, #0
 80006b0:	733b      	strb	r3, [r7, #12]
  float voltage = 0;
 80006b2:	f04f 0300 	mov.w	r3, #0
 80006b6:	60bb      	str	r3, [r7, #8]
  uint8_t start = 0;
 80006b8:	2300      	movs	r3, #0
 80006ba:	71fb      	strb	r3, [r7, #7]
  uint8_t stop = 0;
 80006bc:	2300      	movs	r3, #0
 80006be:	71bb      	strb	r3, [r7, #6]
  uint8_t uart1;

  while (1)
  {
	  /*----Czytanie danych odebranych przez UART-moduł bluetooth---*/
	  if (HAL_UART_Receive(&huart2, &read, 1, 0) == HAL_OK)
 80006c0:	1d79      	adds	r1, r7, #5
 80006c2:	2300      	movs	r3, #0
 80006c4:	2201      	movs	r2, #1
 80006c6:	4844      	ldr	r0, [pc, #272]	; (80007d8 <main+0x198>)
 80006c8:	f005 ff9c 	bl	8006604 <HAL_UART_Receive>
 80006cc:	4603      	mov	r3, r0
 80006ce:	2b00      	cmp	r3, #0
 80006d0:	d103      	bne.n	80006da <main+0x9a>
		  line_append(read);
 80006d2:	797b      	ldrb	r3, [r7, #5]
 80006d4:	4618      	mov	r0, r3
 80006d6:	f7ff ff5d 	bl	8000594 <line_append>

	  /*---------------Pomiar napięcia na stykach-ADC------------PA2*/
	  HAL_ADC_Start(&hadc1);
 80006da:	4840      	ldr	r0, [pc, #256]	; (80007dc <main+0x19c>)
 80006dc:	f001 fd90 	bl	8002200 <HAL_ADC_Start>
	  HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80006e0:	f04f 31ff 	mov.w	r1, #4294967295
 80006e4:	483d      	ldr	r0, [pc, #244]	; (80007dc <main+0x19c>)
 80006e6:	f001 fe51 	bl	800238c <HAL_ADC_PollForConversion>

	  value = HAL_ADC_GetValue(&hadc1);
 80006ea:	483c      	ldr	r0, [pc, #240]	; (80007dc <main+0x19c>)
 80006ec:	f001 fed2 	bl	8002494 <HAL_ADC_GetValue>
 80006f0:	4603      	mov	r3, r0
 80006f2:	733b      	strb	r3, [r7, #12]
	  voltage = 3.3f * value / 4096.0f;
 80006f4:	7b3b      	ldrb	r3, [r7, #12]
 80006f6:	ee07 3a90 	vmov	s15, r3
 80006fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80006fe:	ed9f 7a38 	vldr	s14, [pc, #224]	; 80007e0 <main+0x1a0>
 8000702:	ee27 7a87 	vmul.f32	s14, s15, s14
 8000706:	eddf 6a37 	vldr	s13, [pc, #220]	; 80007e4 <main+0x1a4>
 800070a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800070e:	edc7 7a02 	vstr	s15, [r7, #8]

	  //printf("ADC = %lu (%.3f V)\n", value, voltage);
	  //HAL_Delay(250);

	  /*----------------Czujnik odległości-HC-SR04------------------*/
	  start = HAL_TIM_ReadCapturedValue(&htim3, TIM_CHANNEL_1);
 8000712:	2100      	movs	r1, #0
 8000714:	482e      	ldr	r0, [pc, #184]	; (80007d0 <main+0x190>)
 8000716:	f005 f959 	bl	80059cc <HAL_TIM_ReadCapturedValue>
 800071a:	4603      	mov	r3, r0
 800071c:	71fb      	strb	r3, [r7, #7]
	  stop = HAL_TIM_ReadCapturedValue(&htim3, TIM_CHANNEL_2);
 800071e:	2104      	movs	r1, #4
 8000720:	482b      	ldr	r0, [pc, #172]	; (80007d0 <main+0x190>)
 8000722:	f005 f953 	bl	80059cc <HAL_TIM_ReadCapturedValue>
 8000726:	4603      	mov	r3, r0
 8000728:	71bb      	strb	r3, [r7, #6]
	  distance = (stop - start) / 58;
 800072a:	79ba      	ldrb	r2, [r7, #6]
 800072c:	79fb      	ldrb	r3, [r7, #7]
 800072e:	1ad3      	subs	r3, r2, r3
 8000730:	4a2d      	ldr	r2, [pc, #180]	; (80007e8 <main+0x1a8>)
 8000732:	fb82 1203 	smull	r1, r2, r2, r3
 8000736:	441a      	add	r2, r3
 8000738:	1152      	asrs	r2, r2, #5
 800073a:	17db      	asrs	r3, r3, #31
 800073c:	1ad3      	subs	r3, r2, r3
 800073e:	737b      	strb	r3, [r7, #13]
	  //printf("STACJA: %u\n", distance);

	  if (prev_distance != distance)
 8000740:	7bfa      	ldrb	r2, [r7, #15]
 8000742:	7b7b      	ldrb	r3, [r7, #13]
 8000744:	429a      	cmp	r2, r3
 8000746:	d001      	beq.n	800074c <main+0x10c>
	  	  	  prev_distance = distance;
 8000748:	7b7b      	ldrb	r3, [r7, #13]
 800074a:	73fb      	strb	r3, [r7, #15]

	  if (ROBOT == false && prev_distance < 5)
 800074c:	7bbb      	ldrb	r3, [r7, #14]
 800074e:	f083 0301 	eor.w	r3, r3, #1
 8000752:	b2db      	uxtb	r3, r3
 8000754:	2b00      	cmp	r3, #0
 8000756:	d00f      	beq.n	8000778 <main+0x138>
 8000758:	7bfb      	ldrb	r3, [r7, #15]
 800075a:	2b04      	cmp	r3, #4
 800075c:	d80c      	bhi.n	8000778 <main+0x138>
	  {
		  ROBOT = true;
 800075e:	2301      	movs	r3, #1
 8000760:	73bb      	strb	r3, [r7, #14]

		  //wysłanie informacji do robota, że czujnik wykrył go przed stykami
		  TX_BUFFER[0] = '1';
 8000762:	4b22      	ldr	r3, [pc, #136]	; (80007ec <main+0x1ac>)
 8000764:	2231      	movs	r2, #49	; 0x31
 8000766:	701a      	strb	r2, [r3, #0]
		  HAL_UART_Transmit(&huart2, TX_BUFFER, sizeof(TX_BUFFER), HAL_MAX_DELAY);
 8000768:	f04f 33ff 	mov.w	r3, #4294967295
 800076c:	2201      	movs	r2, #1
 800076e:	491f      	ldr	r1, [pc, #124]	; (80007ec <main+0x1ac>)
 8000770:	4819      	ldr	r0, [pc, #100]	; (80007d8 <main+0x198>)
 8000772:	f005 feae 	bl	80064d2 <HAL_UART_Transmit>
 8000776:	e011      	b.n	800079c <main+0x15c>
	  }
	  else if (ROBOT == true && prev_distance > 4)
 8000778:	7bbb      	ldrb	r3, [r7, #14]
 800077a:	2b00      	cmp	r3, #0
 800077c:	d00e      	beq.n	800079c <main+0x15c>
 800077e:	7bfb      	ldrb	r3, [r7, #15]
 8000780:	2b04      	cmp	r3, #4
 8000782:	d90b      	bls.n	800079c <main+0x15c>
	  {
		  ROBOT = false;
 8000784:	2300      	movs	r3, #0
 8000786:	73bb      	strb	r3, [r7, #14]

		  //wysłanie informacji do robota, że czujnik przestał wykrywać go przed stykami
		  TX_BUFFER[0] = '2';
 8000788:	4b18      	ldr	r3, [pc, #96]	; (80007ec <main+0x1ac>)
 800078a:	2232      	movs	r2, #50	; 0x32
 800078c:	701a      	strb	r2, [r3, #0]
		  HAL_UART_Transmit(&huart2, TX_BUFFER, sizeof(TX_BUFFER), HAL_MAX_DELAY);
 800078e:	f04f 33ff 	mov.w	r3, #4294967295
 8000792:	2201      	movs	r2, #1
 8000794:	4915      	ldr	r1, [pc, #84]	; (80007ec <main+0x1ac>)
 8000796:	4810      	ldr	r0, [pc, #64]	; (80007d8 <main+0x198>)
 8000798:	f005 fe9b 	bl	80064d2 <HAL_UART_Transmit>
	  }

	  /*-------Sterowanie robota z poziomu komputera-USB-UART-------*/
	  if (HAL_UART_Receive(&huart1, &uart1, 1, 0) == HAL_OK)
 800079c:	1d39      	adds	r1, r7, #4
 800079e:	2300      	movs	r3, #0
 80007a0:	2201      	movs	r2, #1
 80007a2:	4813      	ldr	r0, [pc, #76]	; (80007f0 <main+0x1b0>)
 80007a4:	f005 ff2e 	bl	8006604 <HAL_UART_Receive>
 80007a8:	4603      	mov	r3, r0
 80007aa:	2b00      	cmp	r3, #0
 80007ac:	d10d      	bne.n	80007ca <main+0x18a>
	  {
		  line_append(uart1);
 80007ae:	793b      	ldrb	r3, [r7, #4]
 80007b0:	4618      	mov	r0, r3
 80007b2:	f7ff feef 	bl	8000594 <line_append>

		  TX_BUFFER[0] = uart1;
 80007b6:	793a      	ldrb	r2, [r7, #4]
 80007b8:	4b0c      	ldr	r3, [pc, #48]	; (80007ec <main+0x1ac>)
 80007ba:	701a      	strb	r2, [r3, #0]
		  HAL_UART_Transmit(&huart2, TX_BUFFER, 1, HAL_MAX_DELAY);
 80007bc:	f04f 33ff 	mov.w	r3, #4294967295
 80007c0:	2201      	movs	r2, #1
 80007c2:	490a      	ldr	r1, [pc, #40]	; (80007ec <main+0x1ac>)
 80007c4:	4804      	ldr	r0, [pc, #16]	; (80007d8 <main+0x198>)
 80007c6:	f005 fe84 	bl	80064d2 <HAL_UART_Transmit>
	  }
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80007ca:	f006 fe20 	bl	800740e <MX_TouchGFX_Process>
	  if (HAL_UART_Receive(&huart2, &read, 1, 0) == HAL_OK)
 80007ce:	e777      	b.n	80006c0 <main+0x80>
 80007d0:	20000330 	.word	0x20000330
 80007d4:	200002f0 	.word	0x200002f0
 80007d8:	200003b0 	.word	0x200003b0
 80007dc:	20000120 	.word	0x20000120
 80007e0:	40533333 	.word	0x40533333
 80007e4:	45800000 	.word	0x45800000
 80007e8:	8d3dcb09 	.word	0x8d3dcb09
 80007ec:	20000450 	.word	0x20000450
 80007f0:	20000370 	.word	0x20000370

080007f4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80007f4:	b580      	push	{r7, lr}
 80007f6:	b0a0      	sub	sp, #128	; 0x80
 80007f8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80007fa:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80007fe:	2230      	movs	r2, #48	; 0x30
 8000800:	2100      	movs	r1, #0
 8000802:	4618      	mov	r0, r3
 8000804:	f01a f916 	bl	801aa34 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000808:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800080c:	2200      	movs	r2, #0
 800080e:	601a      	str	r2, [r3, #0]
 8000810:	605a      	str	r2, [r3, #4]
 8000812:	609a      	str	r2, [r3, #8]
 8000814:	60da      	str	r2, [r3, #12]
 8000816:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000818:	f107 030c 	add.w	r3, r7, #12
 800081c:	2230      	movs	r2, #48	; 0x30
 800081e:	2100      	movs	r1, #0
 8000820:	4618      	mov	r0, r3
 8000822:	f01a f907 	bl	801aa34 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000826:	2300      	movs	r3, #0
 8000828:	60bb      	str	r3, [r7, #8]
 800082a:	4b35      	ldr	r3, [pc, #212]	; (8000900 <SystemClock_Config+0x10c>)
 800082c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800082e:	4a34      	ldr	r2, [pc, #208]	; (8000900 <SystemClock_Config+0x10c>)
 8000830:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000834:	6413      	str	r3, [r2, #64]	; 0x40
 8000836:	4b32      	ldr	r3, [pc, #200]	; (8000900 <SystemClock_Config+0x10c>)
 8000838:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800083a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800083e:	60bb      	str	r3, [r7, #8]
 8000840:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000842:	2300      	movs	r3, #0
 8000844:	607b      	str	r3, [r7, #4]
 8000846:	4b2f      	ldr	r3, [pc, #188]	; (8000904 <SystemClock_Config+0x110>)
 8000848:	681b      	ldr	r3, [r3, #0]
 800084a:	4a2e      	ldr	r2, [pc, #184]	; (8000904 <SystemClock_Config+0x110>)
 800084c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000850:	6013      	str	r3, [r2, #0]
 8000852:	4b2c      	ldr	r3, [pc, #176]	; (8000904 <SystemClock_Config+0x110>)
 8000854:	681b      	ldr	r3, [r3, #0]
 8000856:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800085a:	607b      	str	r3, [r7, #4]
 800085c:	687b      	ldr	r3, [r7, #4]
  /** Initializes the CPU, AHB and APB busses clocks
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800085e:	2301      	movs	r3, #1
 8000860:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000862:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000866:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000868:	2302      	movs	r3, #2
 800086a:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800086c:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000870:	66fb      	str	r3, [r7, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000872:	2304      	movs	r3, #4
 8000874:	673b      	str	r3, [r7, #112]	; 0x70
  RCC_OscInitStruct.PLL.PLLN = 180;
 8000876:	23b4      	movs	r3, #180	; 0xb4
 8000878:	677b      	str	r3, [r7, #116]	; 0x74
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800087a:	2302      	movs	r3, #2
 800087c:	67bb      	str	r3, [r7, #120]	; 0x78
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800087e:	2304      	movs	r3, #4
 8000880:	67fb      	str	r3, [r7, #124]	; 0x7c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000882:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000886:	4618      	mov	r0, r3
 8000888:	f003 fb14 	bl	8003eb4 <HAL_RCC_OscConfig>
 800088c:	4603      	mov	r3, r0
 800088e:	2b00      	cmp	r3, #0
 8000890:	d001      	beq.n	8000896 <SystemClock_Config+0xa2>
  {
    Error_Handler();
 8000892:	f000 fe45 	bl	8001520 <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000896:	f003 fabd 	bl	8003e14 <HAL_PWREx_EnableOverDrive>
 800089a:	4603      	mov	r3, r0
 800089c:	2b00      	cmp	r3, #0
 800089e:	d001      	beq.n	80008a4 <SystemClock_Config+0xb0>
  {
    Error_Handler();
 80008a0:	f000 fe3e 	bl	8001520 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80008a4:	230f      	movs	r3, #15
 80008a6:	63fb      	str	r3, [r7, #60]	; 0x3c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80008a8:	2302      	movs	r3, #2
 80008aa:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80008ac:	2300      	movs	r3, #0
 80008ae:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80008b0:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80008b4:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80008b6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80008ba:	64fb      	str	r3, [r7, #76]	; 0x4c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80008bc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80008c0:	2105      	movs	r1, #5
 80008c2:	4618      	mov	r0, r3
 80008c4:	f003 fd64 	bl	8004390 <HAL_RCC_ClockConfig>
 80008c8:	4603      	mov	r3, r0
 80008ca:	2b00      	cmp	r3, #0
 80008cc:	d001      	beq.n	80008d2 <SystemClock_Config+0xde>
  {
    Error_Handler();
 80008ce:	f000 fe27 	bl	8001520 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80008d2:	2308      	movs	r3, #8
 80008d4:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 54;
 80008d6:	2336      	movs	r3, #54	; 0x36
 80008d8:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 3;
 80008da:	2303      	movs	r3, #3
 80008dc:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 80008de:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80008e2:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80008e4:	f107 030c 	add.w	r3, r7, #12
 80008e8:	4618      	mov	r0, r3
 80008ea:	f003 ffa3 	bl	8004834 <HAL_RCCEx_PeriphCLKConfig>
 80008ee:	4603      	mov	r3, r0
 80008f0:	2b00      	cmp	r3, #0
 80008f2:	d001      	beq.n	80008f8 <SystemClock_Config+0x104>
  {
    Error_Handler();
 80008f4:	f000 fe14 	bl	8001520 <Error_Handler>
  }
}
 80008f8:	bf00      	nop
 80008fa:	3780      	adds	r7, #128	; 0x80
 80008fc:	46bd      	mov	sp, r7
 80008fe:	bd80      	pop	{r7, pc}
 8000900:	40023800 	.word	0x40023800
 8000904:	40007000 	.word	0x40007000

08000908 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000908:	b580      	push	{r7, lr}
 800090a:	b084      	sub	sp, #16
 800090c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800090e:	463b      	mov	r3, r7
 8000910:	2200      	movs	r2, #0
 8000912:	601a      	str	r2, [r3, #0]
 8000914:	605a      	str	r2, [r3, #4]
 8000916:	609a      	str	r2, [r3, #8]
 8000918:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC1_Init 1 */

  /* USER CODE END ADC1_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 800091a:	4b21      	ldr	r3, [pc, #132]	; (80009a0 <MX_ADC1_Init+0x98>)
 800091c:	4a21      	ldr	r2, [pc, #132]	; (80009a4 <MX_ADC1_Init+0x9c>)
 800091e:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000920:	4b1f      	ldr	r3, [pc, #124]	; (80009a0 <MX_ADC1_Init+0x98>)
 8000922:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000926:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000928:	4b1d      	ldr	r3, [pc, #116]	; (80009a0 <MX_ADC1_Init+0x98>)
 800092a:	2200      	movs	r2, #0
 800092c:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 800092e:	4b1c      	ldr	r3, [pc, #112]	; (80009a0 <MX_ADC1_Init+0x98>)
 8000930:	2200      	movs	r2, #0
 8000932:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000934:	4b1a      	ldr	r3, [pc, #104]	; (80009a0 <MX_ADC1_Init+0x98>)
 8000936:	2200      	movs	r2, #0
 8000938:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800093a:	4b19      	ldr	r3, [pc, #100]	; (80009a0 <MX_ADC1_Init+0x98>)
 800093c:	2200      	movs	r2, #0
 800093e:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000942:	4b17      	ldr	r3, [pc, #92]	; (80009a0 <MX_ADC1_Init+0x98>)
 8000944:	2200      	movs	r2, #0
 8000946:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000948:	4b15      	ldr	r3, [pc, #84]	; (80009a0 <MX_ADC1_Init+0x98>)
 800094a:	4a17      	ldr	r2, [pc, #92]	; (80009a8 <MX_ADC1_Init+0xa0>)
 800094c:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800094e:	4b14      	ldr	r3, [pc, #80]	; (80009a0 <MX_ADC1_Init+0x98>)
 8000950:	2200      	movs	r2, #0
 8000952:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8000954:	4b12      	ldr	r3, [pc, #72]	; (80009a0 <MX_ADC1_Init+0x98>)
 8000956:	2201      	movs	r2, #1
 8000958:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800095a:	4b11      	ldr	r3, [pc, #68]	; (80009a0 <MX_ADC1_Init+0x98>)
 800095c:	2200      	movs	r2, #0
 800095e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000962:	4b0f      	ldr	r3, [pc, #60]	; (80009a0 <MX_ADC1_Init+0x98>)
 8000964:	2201      	movs	r2, #1
 8000966:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000968:	480d      	ldr	r0, [pc, #52]	; (80009a0 <MX_ADC1_Init+0x98>)
 800096a:	f001 fc05 	bl	8002178 <HAL_ADC_Init>
 800096e:	4603      	mov	r3, r0
 8000970:	2b00      	cmp	r3, #0
 8000972:	d001      	beq.n	8000978 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8000974:	f000 fdd4 	bl	8001520 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_2;
 8000978:	2302      	movs	r3, #2
 800097a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 800097c:	2301      	movs	r3, #1
 800097e:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES;
 8000980:	2302      	movs	r3, #2
 8000982:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000984:	463b      	mov	r3, r7
 8000986:	4619      	mov	r1, r3
 8000988:	4805      	ldr	r0, [pc, #20]	; (80009a0 <MX_ADC1_Init+0x98>)
 800098a:	f001 fd91 	bl	80024b0 <HAL_ADC_ConfigChannel>
 800098e:	4603      	mov	r3, r0
 8000990:	2b00      	cmp	r3, #0
 8000992:	d001      	beq.n	8000998 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8000994:	f000 fdc4 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000998:	bf00      	nop
 800099a:	3710      	adds	r7, #16
 800099c:	46bd      	mov	sp, r7
 800099e:	bd80      	pop	{r7, pc}
 80009a0:	20000120 	.word	0x20000120
 80009a4:	40012000 	.word	0x40012000
 80009a8:	0f000001 	.word	0x0f000001

080009ac <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80009ac:	b580      	push	{r7, lr}
 80009ae:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80009b0:	4b06      	ldr	r3, [pc, #24]	; (80009cc <MX_CRC_Init+0x20>)
 80009b2:	4a07      	ldr	r2, [pc, #28]	; (80009d0 <MX_CRC_Init+0x24>)
 80009b4:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80009b6:	4805      	ldr	r0, [pc, #20]	; (80009cc <MX_CRC_Init+0x20>)
 80009b8:	f002 f8bc 	bl	8002b34 <HAL_CRC_Init>
 80009bc:	4603      	mov	r3, r0
 80009be:	2b00      	cmp	r3, #0
 80009c0:	d001      	beq.n	80009c6 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80009c2:	f000 fdad 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80009c6:	bf00      	nop
 80009c8:	bd80      	pop	{r7, pc}
 80009ca:	bf00      	nop
 80009cc:	20000168 	.word	0x20000168
 80009d0:	40023000 	.word	0x40023000

080009d4 <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 80009d4:	b580      	push	{r7, lr}
 80009d6:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 80009d8:	4b15      	ldr	r3, [pc, #84]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 80009da:	4a16      	ldr	r2, [pc, #88]	; (8000a34 <MX_DMA2D_Init+0x60>)
 80009dc:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 80009de:	4b14      	ldr	r3, [pc, #80]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 80009e0:	2200      	movs	r2, #0
 80009e2:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 80009e4:	4b12      	ldr	r3, [pc, #72]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 80009e6:	2202      	movs	r2, #2
 80009e8:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 80009ea:	4b11      	ldr	r3, [pc, #68]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 80009ec:	2200      	movs	r2, #0
 80009ee:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 80009f0:	4b0f      	ldr	r3, [pc, #60]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 80009f2:	2200      	movs	r2, #0
 80009f4:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80009f6:	4b0e      	ldr	r3, [pc, #56]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 80009f8:	2202      	movs	r2, #2
 80009fa:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80009fc:	4b0c      	ldr	r3, [pc, #48]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 80009fe:	2200      	movs	r2, #0
 8000a00:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000a02:	4b0b      	ldr	r3, [pc, #44]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 8000a04:	2200      	movs	r2, #0
 8000a06:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000a08:	4809      	ldr	r0, [pc, #36]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 8000a0a:	f002 f8af 	bl	8002b6c <HAL_DMA2D_Init>
 8000a0e:	4603      	mov	r3, r0
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d001      	beq.n	8000a18 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 8000a14:	f000 fd84 	bl	8001520 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000a18:	2101      	movs	r1, #1
 8000a1a:	4805      	ldr	r0, [pc, #20]	; (8000a30 <MX_DMA2D_Init+0x5c>)
 8000a1c:	f002 fb70 	bl	8003100 <HAL_DMA2D_ConfigLayer>
 8000a20:	4603      	mov	r3, r0
 8000a22:	2b00      	cmp	r3, #0
 8000a24:	d001      	beq.n	8000a2a <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 8000a26:	f000 fd7b 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 8000a2a:	bf00      	nop
 8000a2c:	bd80      	pop	{r7, pc}
 8000a2e:	bf00      	nop
 8000a30:	20000170 	.word	0x20000170
 8000a34:	4002b000 	.word	0x4002b000

08000a38 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 8000a38:	b580      	push	{r7, lr}
 8000a3a:	b08e      	sub	sp, #56	; 0x38
 8000a3c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000a3e:	1d3b      	adds	r3, r7, #4
 8000a40:	2234      	movs	r2, #52	; 0x34
 8000a42:	2100      	movs	r1, #0
 8000a44:	4618      	mov	r0, r3
 8000a46:	f019 fff5 	bl	801aa34 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8000a4a:	4b39      	ldr	r3, [pc, #228]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a4c:	4a39      	ldr	r2, [pc, #228]	; (8000b34 <MX_LTDC_Init+0xfc>)
 8000a4e:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000a50:	4b37      	ldr	r3, [pc, #220]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a52:	2200      	movs	r2, #0
 8000a54:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000a56:	4b36      	ldr	r3, [pc, #216]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a58:	2200      	movs	r2, #0
 8000a5a:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000a5c:	4b34      	ldr	r3, [pc, #208]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a5e:	2200      	movs	r2, #0
 8000a60:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000a62:	4b33      	ldr	r3, [pc, #204]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a64:	2200      	movs	r2, #0
 8000a66:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 9;
 8000a68:	4b31      	ldr	r3, [pc, #196]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a6a:	2209      	movs	r2, #9
 8000a6c:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 1;
 8000a6e:	4b30      	ldr	r3, [pc, #192]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a70:	2201      	movs	r2, #1
 8000a72:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 29;
 8000a74:	4b2e      	ldr	r3, [pc, #184]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a76:	221d      	movs	r2, #29
 8000a78:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 3;
 8000a7a:	4b2d      	ldr	r3, [pc, #180]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a7c:	2203      	movs	r2, #3
 8000a7e:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 269;
 8000a80:	4b2b      	ldr	r3, [pc, #172]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a82:	f240 120d 	movw	r2, #269	; 0x10d
 8000a86:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 8000a88:	4b29      	ldr	r3, [pc, #164]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a8a:	f240 1243 	movw	r2, #323	; 0x143
 8000a8e:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 279;
 8000a90:	4b27      	ldr	r3, [pc, #156]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a92:	f240 1217 	movw	r2, #279	; 0x117
 8000a96:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 327;
 8000a98:	4b25      	ldr	r3, [pc, #148]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000a9a:	f240 1247 	movw	r2, #327	; 0x147
 8000a9e:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 8000aa0:	4b23      	ldr	r3, [pc, #140]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000aa2:	2200      	movs	r2, #0
 8000aa4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8000aa8:	4b21      	ldr	r3, [pc, #132]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000aaa:	2200      	movs	r2, #0
 8000aac:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 8000ab0:	4b1f      	ldr	r3, [pc, #124]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000ab2:	2200      	movs	r2, #0
 8000ab4:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ab8:	481d      	ldr	r0, [pc, #116]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000aba:	f002 fe15 	bl	80036e8 <HAL_LTDC_Init>
 8000abe:	4603      	mov	r3, r0
 8000ac0:	2b00      	cmp	r3, #0
 8000ac2:	d001      	beq.n	8000ac8 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 8000ac4:	f000 fd2c 	bl	8001520 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8000ac8:	2300      	movs	r3, #0
 8000aca:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 240;
 8000acc:	23f0      	movs	r3, #240	; 0xf0
 8000ace:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 8000ad0:	2300      	movs	r3, #0
 8000ad2:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 320;
 8000ad4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000ad8:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ada:	2302      	movs	r3, #2
 8000adc:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 8000ade:	23ff      	movs	r3, #255	; 0xff
 8000ae0:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8000ae2:	2300      	movs	r3, #0
 8000ae4:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8000ae6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000aea:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000aec:	2305      	movs	r3, #5
 8000aee:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xd0000000;
 8000af0:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
 8000af4:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 240;
 8000af6:	23f0      	movs	r3, #240	; 0xf0
 8000af8:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 320;
 8000afa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000afe:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 8000b00:	2300      	movs	r3, #0
 8000b02:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 8000b06:	2300      	movs	r3, #0
 8000b08:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 8000b0c:	2300      	movs	r3, #0
 8000b0e:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000b12:	1d3b      	adds	r3, r7, #4
 8000b14:	2200      	movs	r2, #0
 8000b16:	4619      	mov	r1, r3
 8000b18:	4805      	ldr	r0, [pc, #20]	; (8000b30 <MX_LTDC_Init+0xf8>)
 8000b1a:	f002 ff6d 	bl	80039f8 <HAL_LTDC_ConfigLayer>
 8000b1e:	4603      	mov	r3, r0
 8000b20:	2b00      	cmp	r3, #0
 8000b22:	d001      	beq.n	8000b28 <MX_LTDC_Init+0xf0>
  {
    Error_Handler();
 8000b24:	f000 fcfc 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8000b28:	bf00      	nop
 8000b2a:	3738      	adds	r7, #56	; 0x38
 8000b2c:	46bd      	mov	sp, r7
 8000b2e:	bd80      	pop	{r7, pc}
 8000b30:	200001b0 	.word	0x200001b0
 8000b34:	40016800 	.word	0x40016800

08000b38 <MX_SPI5_Init>:
  * @brief SPI5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI5_Init(void)
{
 8000b38:	b580      	push	{r7, lr}
 8000b3a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  /* SPI5 parameter configuration*/
  hspi5.Instance = SPI5;
 8000b3c:	4bba      	ldr	r3, [pc, #744]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b3e:	4abb      	ldr	r2, [pc, #748]	; (8000e2c <MX_SPI5_Init+0x2f4>)
 8000b40:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000b42:	4bb9      	ldr	r3, [pc, #740]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b44:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000b48:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_1LINE;
 8000b4a:	4bb7      	ldr	r3, [pc, #732]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b4c:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8000b50:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000b52:	4bb5      	ldr	r3, [pc, #724]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b54:	2200      	movs	r2, #0
 8000b56:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000b58:	4bb3      	ldr	r3, [pc, #716]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000b5e:	4bb2      	ldr	r3, [pc, #712]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b60:	2200      	movs	r2, #0
 8000b62:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_SOFT;
 8000b64:	4bb0      	ldr	r3, [pc, #704]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b66:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000b6a:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000b6c:	4bae      	ldr	r3, [pc, #696]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b6e:	2200      	movs	r2, #0
 8000b70:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000b72:	4bad      	ldr	r3, [pc, #692]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b74:	2200      	movs	r2, #0
 8000b76:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000b78:	4bab      	ldr	r3, [pc, #684]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b7a:	2200      	movs	r2, #0
 8000b7c:	625a      	str	r2, [r3, #36]	; 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000b7e:	4baa      	ldr	r3, [pc, #680]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b80:	2200      	movs	r2, #0
 8000b82:	629a      	str	r2, [r3, #40]	; 0x28
  hspi5.Init.CRCPolynomial = 10;
 8000b84:	4ba8      	ldr	r3, [pc, #672]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b86:	220a      	movs	r2, #10
 8000b88:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000b8a:	48a7      	ldr	r0, [pc, #668]	; (8000e28 <MX_SPI5_Init+0x2f0>)
 8000b8c:	f004 f891 	bl	8004cb2 <HAL_SPI_Init>
 8000b90:	4603      	mov	r3, r0
 8000b92:	2b00      	cmp	r3, #0
 8000b94:	d001      	beq.n	8000b9a <MX_SPI5_Init+0x62>
  {
    Error_Handler();
 8000b96:	f000 fcc3 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */
  writeReg(0xCA);
 8000b9a:	20ca      	movs	r0, #202	; 0xca
 8000b9c:	f000 fc62 	bl	8001464 <writeReg>
  writeData(0xC3);
 8000ba0:	20c3      	movs	r0, #195	; 0xc3
 8000ba2:	f000 fc85 	bl	80014b0 <writeData>
  writeData(0x08);
 8000ba6:	2008      	movs	r0, #8
 8000ba8:	f000 fc82 	bl	80014b0 <writeData>
  writeData(0x50);
 8000bac:	2050      	movs	r0, #80	; 0x50
 8000bae:	f000 fc7f 	bl	80014b0 <writeData>
  writeReg(0xCF);
 8000bb2:	20cf      	movs	r0, #207	; 0xcf
 8000bb4:	f000 fc56 	bl	8001464 <writeReg>
  writeData(0x00);
 8000bb8:	2000      	movs	r0, #0
 8000bba:	f000 fc79 	bl	80014b0 <writeData>
  writeData(0xC1);
 8000bbe:	20c1      	movs	r0, #193	; 0xc1
 8000bc0:	f000 fc76 	bl	80014b0 <writeData>
  writeData(0x30);
 8000bc4:	2030      	movs	r0, #48	; 0x30
 8000bc6:	f000 fc73 	bl	80014b0 <writeData>
  writeReg(0xED);
 8000bca:	20ed      	movs	r0, #237	; 0xed
 8000bcc:	f000 fc4a 	bl	8001464 <writeReg>
  writeData(0x64);
 8000bd0:	2064      	movs	r0, #100	; 0x64
 8000bd2:	f000 fc6d 	bl	80014b0 <writeData>
  writeData(0x03);
 8000bd6:	2003      	movs	r0, #3
 8000bd8:	f000 fc6a 	bl	80014b0 <writeData>
  writeData(0x12);
 8000bdc:	2012      	movs	r0, #18
 8000bde:	f000 fc67 	bl	80014b0 <writeData>
  writeData(0x81);
 8000be2:	2081      	movs	r0, #129	; 0x81
 8000be4:	f000 fc64 	bl	80014b0 <writeData>
  writeReg(0xE8);
 8000be8:	20e8      	movs	r0, #232	; 0xe8
 8000bea:	f000 fc3b 	bl	8001464 <writeReg>
  writeData(0x85);
 8000bee:	2085      	movs	r0, #133	; 0x85
 8000bf0:	f000 fc5e 	bl	80014b0 <writeData>
  writeData(0x00);
 8000bf4:	2000      	movs	r0, #0
 8000bf6:	f000 fc5b 	bl	80014b0 <writeData>
  writeData(0x78);
 8000bfa:	2078      	movs	r0, #120	; 0x78
 8000bfc:	f000 fc58 	bl	80014b0 <writeData>
  writeReg(0xCB);
 8000c00:	20cb      	movs	r0, #203	; 0xcb
 8000c02:	f000 fc2f 	bl	8001464 <writeReg>
  writeData(0x39);
 8000c06:	2039      	movs	r0, #57	; 0x39
 8000c08:	f000 fc52 	bl	80014b0 <writeData>
  writeData(0x2C);
 8000c0c:	202c      	movs	r0, #44	; 0x2c
 8000c0e:	f000 fc4f 	bl	80014b0 <writeData>
  writeData(0x00);
 8000c12:	2000      	movs	r0, #0
 8000c14:	f000 fc4c 	bl	80014b0 <writeData>
  writeData(0x34);
 8000c18:	2034      	movs	r0, #52	; 0x34
 8000c1a:	f000 fc49 	bl	80014b0 <writeData>
  writeData(0x02);
 8000c1e:	2002      	movs	r0, #2
 8000c20:	f000 fc46 	bl	80014b0 <writeData>
  writeReg(0xF7);
 8000c24:	20f7      	movs	r0, #247	; 0xf7
 8000c26:	f000 fc1d 	bl	8001464 <writeReg>
  writeData(0x20);
 8000c2a:	2020      	movs	r0, #32
 8000c2c:	f000 fc40 	bl	80014b0 <writeData>
  writeReg(0xEA);
 8000c30:	20ea      	movs	r0, #234	; 0xea
 8000c32:	f000 fc17 	bl	8001464 <writeReg>
  writeData(0x00);
 8000c36:	2000      	movs	r0, #0
 8000c38:	f000 fc3a 	bl	80014b0 <writeData>
  writeData(0x00);
 8000c3c:	2000      	movs	r0, #0
 8000c3e:	f000 fc37 	bl	80014b0 <writeData>
  writeReg(0xB1);
 8000c42:	20b1      	movs	r0, #177	; 0xb1
 8000c44:	f000 fc0e 	bl	8001464 <writeReg>
  writeData(0x00);
 8000c48:	2000      	movs	r0, #0
 8000c4a:	f000 fc31 	bl	80014b0 <writeData>
  writeData(0x1B);
 8000c4e:	201b      	movs	r0, #27
 8000c50:	f000 fc2e 	bl	80014b0 <writeData>
  writeReg(0xB6);
 8000c54:	20b6      	movs	r0, #182	; 0xb6
 8000c56:	f000 fc05 	bl	8001464 <writeReg>
  writeData(0x0A);
 8000c5a:	200a      	movs	r0, #10
 8000c5c:	f000 fc28 	bl	80014b0 <writeData>
  writeData(0xA2);
 8000c60:	20a2      	movs	r0, #162	; 0xa2
 8000c62:	f000 fc25 	bl	80014b0 <writeData>
  writeReg(0xC0);
 8000c66:	20c0      	movs	r0, #192	; 0xc0
 8000c68:	f000 fbfc 	bl	8001464 <writeReg>
  writeData(0x10);
 8000c6c:	2010      	movs	r0, #16
 8000c6e:	f000 fc1f 	bl	80014b0 <writeData>
  writeReg(0xC1);
 8000c72:	20c1      	movs	r0, #193	; 0xc1
 8000c74:	f000 fbf6 	bl	8001464 <writeReg>
  writeData(0x10);
 8000c78:	2010      	movs	r0, #16
 8000c7a:	f000 fc19 	bl	80014b0 <writeData>
  writeReg(0xC5);
 8000c7e:	20c5      	movs	r0, #197	; 0xc5
 8000c80:	f000 fbf0 	bl	8001464 <writeReg>
  writeData(0x45);
 8000c84:	2045      	movs	r0, #69	; 0x45
 8000c86:	f000 fc13 	bl	80014b0 <writeData>
  writeData(0x15);
 8000c8a:	2015      	movs	r0, #21
 8000c8c:	f000 fc10 	bl	80014b0 <writeData>
  writeReg(0xC7);
 8000c90:	20c7      	movs	r0, #199	; 0xc7
 8000c92:	f000 fbe7 	bl	8001464 <writeReg>
  writeData(0x90);
 8000c96:	2090      	movs	r0, #144	; 0x90
 8000c98:	f000 fc0a 	bl	80014b0 <writeData>
  writeReg(0x36);
 8000c9c:	2036      	movs	r0, #54	; 0x36
 8000c9e:	f000 fbe1 	bl	8001464 <writeReg>
  writeData(0xC8);
 8000ca2:	20c8      	movs	r0, #200	; 0xc8
 8000ca4:	f000 fc04 	bl	80014b0 <writeData>
  writeReg(0xF2);
 8000ca8:	20f2      	movs	r0, #242	; 0xf2
 8000caa:	f000 fbdb 	bl	8001464 <writeReg>
  writeData(0x00);
 8000cae:	2000      	movs	r0, #0
 8000cb0:	f000 fbfe 	bl	80014b0 <writeData>
  writeReg(0xB0);
 8000cb4:	20b0      	movs	r0, #176	; 0xb0
 8000cb6:	f000 fbd5 	bl	8001464 <writeReg>
  writeData(0xC2);
 8000cba:	20c2      	movs	r0, #194	; 0xc2
 8000cbc:	f000 fbf8 	bl	80014b0 <writeData>
  writeReg(0xB6);
 8000cc0:	20b6      	movs	r0, #182	; 0xb6
 8000cc2:	f000 fbcf 	bl	8001464 <writeReg>
  writeData(0x0A);
 8000cc6:	200a      	movs	r0, #10
 8000cc8:	f000 fbf2 	bl	80014b0 <writeData>
  writeData(0xA7);
 8000ccc:	20a7      	movs	r0, #167	; 0xa7
 8000cce:	f000 fbef 	bl	80014b0 <writeData>
  writeData(0x27);
 8000cd2:	2027      	movs	r0, #39	; 0x27
 8000cd4:	f000 fbec 	bl	80014b0 <writeData>
  writeData(0x04);
 8000cd8:	2004      	movs	r0, #4
 8000cda:	f000 fbe9 	bl	80014b0 <writeData>

  /* Colomn address set */
  writeReg(0x2A);
 8000cde:	202a      	movs	r0, #42	; 0x2a
 8000ce0:	f000 fbc0 	bl	8001464 <writeReg>
  writeData(0x00);
 8000ce4:	2000      	movs	r0, #0
 8000ce6:	f000 fbe3 	bl	80014b0 <writeData>
  writeData(0x00);
 8000cea:	2000      	movs	r0, #0
 8000cec:	f000 fbe0 	bl	80014b0 <writeData>
  writeData(0x00);
 8000cf0:	2000      	movs	r0, #0
 8000cf2:	f000 fbdd 	bl	80014b0 <writeData>
  writeData(0xEF);
 8000cf6:	20ef      	movs	r0, #239	; 0xef
 8000cf8:	f000 fbda 	bl	80014b0 <writeData>
  /* Page address set */
  writeReg(0x2B);
 8000cfc:	202b      	movs	r0, #43	; 0x2b
 8000cfe:	f000 fbb1 	bl	8001464 <writeReg>
  writeData(0x00);
 8000d02:	2000      	movs	r0, #0
 8000d04:	f000 fbd4 	bl	80014b0 <writeData>
  writeData(0x00);
 8000d08:	2000      	movs	r0, #0
 8000d0a:	f000 fbd1 	bl	80014b0 <writeData>
  writeData(0x01);
 8000d0e:	2001      	movs	r0, #1
 8000d10:	f000 fbce 	bl	80014b0 <writeData>
  writeData(0x3F);
 8000d14:	203f      	movs	r0, #63	; 0x3f
 8000d16:	f000 fbcb 	bl	80014b0 <writeData>
  writeReg(0xF6);
 8000d1a:	20f6      	movs	r0, #246	; 0xf6
 8000d1c:	f000 fba2 	bl	8001464 <writeReg>
  writeData(0x01);
 8000d20:	2001      	movs	r0, #1
 8000d22:	f000 fbc5 	bl	80014b0 <writeData>
  writeData(0x00);
 8000d26:	2000      	movs	r0, #0
 8000d28:	f000 fbc2 	bl	80014b0 <writeData>
  writeData(0x06);
 8000d2c:	2006      	movs	r0, #6
 8000d2e:	f000 fbbf 	bl	80014b0 <writeData>

  writeReg(0x2C);
 8000d32:	202c      	movs	r0, #44	; 0x2c
 8000d34:	f000 fb96 	bl	8001464 <writeReg>
  HAL_Delay(200);
 8000d38:	20c8      	movs	r0, #200	; 0xc8
 8000d3a:	f001 f9f9 	bl	8002130 <HAL_Delay>

  writeReg(0x26);
 8000d3e:	2026      	movs	r0, #38	; 0x26
 8000d40:	f000 fb90 	bl	8001464 <writeReg>
  writeData(0x01);
 8000d44:	2001      	movs	r0, #1
 8000d46:	f000 fbb3 	bl	80014b0 <writeData>

  writeReg(0xE0);
 8000d4a:	20e0      	movs	r0, #224	; 0xe0
 8000d4c:	f000 fb8a 	bl	8001464 <writeReg>
  writeData(0x0F);
 8000d50:	200f      	movs	r0, #15
 8000d52:	f000 fbad 	bl	80014b0 <writeData>
  writeData(0x29);
 8000d56:	2029      	movs	r0, #41	; 0x29
 8000d58:	f000 fbaa 	bl	80014b0 <writeData>
  writeData(0x24);
 8000d5c:	2024      	movs	r0, #36	; 0x24
 8000d5e:	f000 fba7 	bl	80014b0 <writeData>
  writeData(0x0C);
 8000d62:	200c      	movs	r0, #12
 8000d64:	f000 fba4 	bl	80014b0 <writeData>
  writeData(0x0E);
 8000d68:	200e      	movs	r0, #14
 8000d6a:	f000 fba1 	bl	80014b0 <writeData>
  writeData(0x09);
 8000d6e:	2009      	movs	r0, #9
 8000d70:	f000 fb9e 	bl	80014b0 <writeData>
  writeData(0x4E);
 8000d74:	204e      	movs	r0, #78	; 0x4e
 8000d76:	f000 fb9b 	bl	80014b0 <writeData>
  writeData(0x78);
 8000d7a:	2078      	movs	r0, #120	; 0x78
 8000d7c:	f000 fb98 	bl	80014b0 <writeData>
  writeData(0x3C);
 8000d80:	203c      	movs	r0, #60	; 0x3c
 8000d82:	f000 fb95 	bl	80014b0 <writeData>
  writeData(0x09);
 8000d86:	2009      	movs	r0, #9
 8000d88:	f000 fb92 	bl	80014b0 <writeData>
  writeData(0x13);
 8000d8c:	2013      	movs	r0, #19
 8000d8e:	f000 fb8f 	bl	80014b0 <writeData>
  writeData(0x05);
 8000d92:	2005      	movs	r0, #5
 8000d94:	f000 fb8c 	bl	80014b0 <writeData>
  writeData(0x17);
 8000d98:	2017      	movs	r0, #23
 8000d9a:	f000 fb89 	bl	80014b0 <writeData>
  writeData(0x11);
 8000d9e:	2011      	movs	r0, #17
 8000da0:	f000 fb86 	bl	80014b0 <writeData>
  writeData(0x00);
 8000da4:	2000      	movs	r0, #0
 8000da6:	f000 fb83 	bl	80014b0 <writeData>
  writeReg(0xE1);
 8000daa:	20e1      	movs	r0, #225	; 0xe1
 8000dac:	f000 fb5a 	bl	8001464 <writeReg>
  writeData(0x00);
 8000db0:	2000      	movs	r0, #0
 8000db2:	f000 fb7d 	bl	80014b0 <writeData>
  writeData(0x16);
 8000db6:	2016      	movs	r0, #22
 8000db8:	f000 fb7a 	bl	80014b0 <writeData>
  writeData(0x1B);
 8000dbc:	201b      	movs	r0, #27
 8000dbe:	f000 fb77 	bl	80014b0 <writeData>
  writeData(0x04);
 8000dc2:	2004      	movs	r0, #4
 8000dc4:	f000 fb74 	bl	80014b0 <writeData>
  writeData(0x11);
 8000dc8:	2011      	movs	r0, #17
 8000dca:	f000 fb71 	bl	80014b0 <writeData>
  writeData(0x07);
 8000dce:	2007      	movs	r0, #7
 8000dd0:	f000 fb6e 	bl	80014b0 <writeData>
  writeData(0x31);
 8000dd4:	2031      	movs	r0, #49	; 0x31
 8000dd6:	f000 fb6b 	bl	80014b0 <writeData>
  writeData(0x33);
 8000dda:	2033      	movs	r0, #51	; 0x33
 8000ddc:	f000 fb68 	bl	80014b0 <writeData>
  writeData(0x42);
 8000de0:	2042      	movs	r0, #66	; 0x42
 8000de2:	f000 fb65 	bl	80014b0 <writeData>
  writeData(0x05);
 8000de6:	2005      	movs	r0, #5
 8000de8:	f000 fb62 	bl	80014b0 <writeData>
  writeData(0x0C);
 8000dec:	200c      	movs	r0, #12
 8000dee:	f000 fb5f 	bl	80014b0 <writeData>
  writeData(0x0A);
 8000df2:	200a      	movs	r0, #10
 8000df4:	f000 fb5c 	bl	80014b0 <writeData>
  writeData(0x28);
 8000df8:	2028      	movs	r0, #40	; 0x28
 8000dfa:	f000 fb59 	bl	80014b0 <writeData>
  writeData(0x2F);
 8000dfe:	202f      	movs	r0, #47	; 0x2f
 8000e00:	f000 fb56 	bl	80014b0 <writeData>
  writeData(0x0F);
 8000e04:	200f      	movs	r0, #15
 8000e06:	f000 fb53 	bl	80014b0 <writeData>

  writeReg(0x11);
 8000e0a:	2011      	movs	r0, #17
 8000e0c:	f000 fb2a 	bl	8001464 <writeReg>
  HAL_Delay(200);
 8000e10:	20c8      	movs	r0, #200	; 0xc8
 8000e12:	f001 f98d 	bl	8002130 <HAL_Delay>
  writeReg(0x29);
 8000e16:	2029      	movs	r0, #41	; 0x29
 8000e18:	f000 fb24 	bl	8001464 <writeReg>
  /* GRAM start writing */
  writeReg(0x2C);
 8000e1c:	202c      	movs	r0, #44	; 0x2c
 8000e1e:	f000 fb21 	bl	8001464 <writeReg>
  /* USER CODE END SPI5_Init 2 */

}
 8000e22:	bf00      	nop
 8000e24:	bd80      	pop	{r7, pc}
 8000e26:	bf00      	nop
 8000e28:	20000258 	.word	0x20000258
 8000e2c:	40015000 	.word	0x40015000

08000e30 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8000e30:	b580      	push	{r7, lr}
 8000e32:	b086      	sub	sp, #24
 8000e34:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000e36:	f107 0308 	add.w	r3, r7, #8
 8000e3a:	2200      	movs	r2, #0
 8000e3c:	601a      	str	r2, [r3, #0]
 8000e3e:	605a      	str	r2, [r3, #4]
 8000e40:	609a      	str	r2, [r3, #8]
 8000e42:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000e44:	463b      	mov	r3, r7
 8000e46:	2200      	movs	r2, #0
 8000e48:	601a      	str	r2, [r3, #0]
 8000e4a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000e4c:	4b1e      	ldr	r3, [pc, #120]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000e4e:	4a1f      	ldr	r2, [pc, #124]	; (8000ecc <MX_TIM1_Init+0x9c>)
 8000e50:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8000e52:	4b1d      	ldr	r3, [pc, #116]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000e54:	2200      	movs	r2, #0
 8000e56:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000e58:	4b1b      	ldr	r3, [pc, #108]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000e5a:	2200      	movs	r2, #0
 8000e5c:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 0;
 8000e5e:	4b1a      	ldr	r3, [pc, #104]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000e60:	2200      	movs	r2, #0
 8000e62:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000e64:	4b18      	ldr	r3, [pc, #96]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000e66:	2200      	movs	r2, #0
 8000e68:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000e6a:	4b17      	ldr	r3, [pc, #92]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000e6c:	2200      	movs	r2, #0
 8000e6e:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000e70:	4b15      	ldr	r3, [pc, #84]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000e72:	2200      	movs	r2, #0
 8000e74:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000e76:	4814      	ldr	r0, [pc, #80]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000e78:	f004 f960 	bl	800513c <HAL_TIM_Base_Init>
 8000e7c:	4603      	mov	r3, r0
 8000e7e:	2b00      	cmp	r3, #0
 8000e80:	d001      	beq.n	8000e86 <MX_TIM1_Init+0x56>
  {
    Error_Handler();
 8000e82:	f000 fb4d 	bl	8001520 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000e86:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000e8a:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8000e8c:	f107 0308 	add.w	r3, r7, #8
 8000e90:	4619      	mov	r1, r3
 8000e92:	480d      	ldr	r0, [pc, #52]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000e94:	f004 fcd6 	bl	8005844 <HAL_TIM_ConfigClockSource>
 8000e98:	4603      	mov	r3, r0
 8000e9a:	2b00      	cmp	r3, #0
 8000e9c:	d001      	beq.n	8000ea2 <MX_TIM1_Init+0x72>
  {
    Error_Handler();
 8000e9e:	f000 fb3f 	bl	8001520 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000eaa:	463b      	mov	r3, r7
 8000eac:	4619      	mov	r1, r3
 8000eae:	4806      	ldr	r0, [pc, #24]	; (8000ec8 <MX_TIM1_Init+0x98>)
 8000eb0:	f005 fa32 	bl	8006318 <HAL_TIMEx_MasterConfigSynchronization>
 8000eb4:	4603      	mov	r3, r0
 8000eb6:	2b00      	cmp	r3, #0
 8000eb8:	d001      	beq.n	8000ebe <MX_TIM1_Init+0x8e>
  {
    Error_Handler();
 8000eba:	f000 fb31 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8000ebe:	bf00      	nop
 8000ec0:	3718      	adds	r7, #24
 8000ec2:	46bd      	mov	sp, r7
 8000ec4:	bd80      	pop	{r7, pc}
 8000ec6:	bf00      	nop
 8000ec8:	200002b0 	.word	0x200002b0
 8000ecc:	40010000 	.word	0x40010000

08000ed0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000ed0:	b580      	push	{r7, lr}
 8000ed2:	b08e      	sub	sp, #56	; 0x38
 8000ed4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000ed6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000eda:	2200      	movs	r2, #0
 8000edc:	601a      	str	r2, [r3, #0]
 8000ede:	605a      	str	r2, [r3, #4]
 8000ee0:	609a      	str	r2, [r3, #8]
 8000ee2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000ee4:	f107 0320 	add.w	r3, r7, #32
 8000ee8:	2200      	movs	r2, #0
 8000eea:	601a      	str	r2, [r3, #0]
 8000eec:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000eee:	1d3b      	adds	r3, r7, #4
 8000ef0:	2200      	movs	r2, #0
 8000ef2:	601a      	str	r2, [r3, #0]
 8000ef4:	605a      	str	r2, [r3, #4]
 8000ef6:	609a      	str	r2, [r3, #8]
 8000ef8:	60da      	str	r2, [r3, #12]
 8000efa:	611a      	str	r2, [r3, #16]
 8000efc:	615a      	str	r2, [r3, #20]
 8000efe:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000f00:	4b2d      	ldr	r3, [pc, #180]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f02:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000f06:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1;
 8000f08:	4b2b      	ldr	r3, [pc, #172]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f0a:	2201      	movs	r2, #1
 8000f0c:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f0e:	4b2a      	ldr	r3, [pc, #168]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f10:	2200      	movs	r2, #0
 8000f12:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1249;
 8000f14:	4b28      	ldr	r3, [pc, #160]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f16:	f240 42e1 	movw	r2, #1249	; 0x4e1
 8000f1a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f1c:	4b26      	ldr	r3, [pc, #152]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f1e:	2200      	movs	r2, #0
 8000f20:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f22:	4b25      	ldr	r3, [pc, #148]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f24:	2200      	movs	r2, #0
 8000f26:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000f28:	4823      	ldr	r0, [pc, #140]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f2a:	f004 f907 	bl	800513c <HAL_TIM_Base_Init>
 8000f2e:	4603      	mov	r3, r0
 8000f30:	2b00      	cmp	r3, #0
 8000f32:	d001      	beq.n	8000f38 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8000f34:	f000 faf4 	bl	8001520 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f38:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000f3c:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000f3e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000f42:	4619      	mov	r1, r3
 8000f44:	481c      	ldr	r0, [pc, #112]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f46:	f004 fc7d 	bl	8005844 <HAL_TIM_ConfigClockSource>
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d001      	beq.n	8000f54 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8000f50:	f000 fae6 	bl	8001520 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8000f54:	4818      	ldr	r0, [pc, #96]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f56:	f004 f940 	bl	80051da <HAL_TIM_PWM_Init>
 8000f5a:	4603      	mov	r3, r0
 8000f5c:	2b00      	cmp	r3, #0
 8000f5e:	d001      	beq.n	8000f64 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8000f60:	f000 fade 	bl	8001520 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000f64:	2300      	movs	r3, #0
 8000f66:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f68:	2300      	movs	r3, #0
 8000f6a:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000f6c:	f107 0320 	add.w	r3, r7, #32
 8000f70:	4619      	mov	r1, r3
 8000f72:	4811      	ldr	r0, [pc, #68]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f74:	f005 f9d0 	bl	8006318 <HAL_TIMEx_MasterConfigSynchronization>
 8000f78:	4603      	mov	r3, r0
 8000f7a:	2b00      	cmp	r3, #0
 8000f7c:	d001      	beq.n	8000f82 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8000f7e:	f000 facf 	bl	8001520 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000f82:	2360      	movs	r3, #96	; 0x60
 8000f84:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 312;
 8000f86:	f44f 739c 	mov.w	r3, #312	; 0x138
 8000f8a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000f8c:	2300      	movs	r3, #0
 8000f8e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000f90:	2300      	movs	r3, #0
 8000f92:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000f94:	1d3b      	adds	r3, r7, #4
 8000f96:	2200      	movs	r2, #0
 8000f98:	4619      	mov	r1, r3
 8000f9a:	4807      	ldr	r0, [pc, #28]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000f9c:	f004 fb8c 	bl	80056b8 <HAL_TIM_PWM_ConfigChannel>
 8000fa0:	4603      	mov	r3, r0
 8000fa2:	2b00      	cmp	r3, #0
 8000fa4:	d001      	beq.n	8000faa <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8000fa6:	f000 fabb 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8000faa:	4803      	ldr	r0, [pc, #12]	; (8000fb8 <MX_TIM2_Init+0xe8>)
 8000fac:	f000 fd60 	bl	8001a70 <HAL_TIM_MspPostInit>

}
 8000fb0:	bf00      	nop
 8000fb2:	3738      	adds	r7, #56	; 0x38
 8000fb4:	46bd      	mov	sp, r7
 8000fb6:	bd80      	pop	{r7, pc}
 8000fb8:	200002f0 	.word	0x200002f0

08000fbc <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b092      	sub	sp, #72	; 0x48
 8000fc0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fc2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000fc6:	2200      	movs	r2, #0
 8000fc8:	601a      	str	r2, [r3, #0]
 8000fca:	605a      	str	r2, [r3, #4]
 8000fcc:	609a      	str	r2, [r3, #8]
 8000fce:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fd0:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	601a      	str	r2, [r3, #0]
 8000fd8:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8000fda:	f107 0320 	add.w	r3, r7, #32
 8000fde:	2200      	movs	r2, #0
 8000fe0:	601a      	str	r2, [r3, #0]
 8000fe2:	605a      	str	r2, [r3, #4]
 8000fe4:	609a      	str	r2, [r3, #8]
 8000fe6:	60da      	str	r2, [r3, #12]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000fe8:	1d3b      	adds	r3, r7, #4
 8000fea:	2200      	movs	r2, #0
 8000fec:	601a      	str	r2, [r3, #0]
 8000fee:	605a      	str	r2, [r3, #4]
 8000ff0:	609a      	str	r2, [r3, #8]
 8000ff2:	60da      	str	r2, [r3, #12]
 8000ff4:	611a      	str	r2, [r3, #16]
 8000ff6:	615a      	str	r2, [r3, #20]
 8000ff8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000ffa:	4b43      	ldr	r3, [pc, #268]	; (8001108 <MX_TIM3_Init+0x14c>)
 8000ffc:	4a43      	ldr	r2, [pc, #268]	; (800110c <MX_TIM3_Init+0x150>)
 8000ffe:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 179;
 8001000:	4b41      	ldr	r3, [pc, #260]	; (8001108 <MX_TIM3_Init+0x14c>)
 8001002:	22b3      	movs	r2, #179	; 0xb3
 8001004:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001006:	4b40      	ldr	r3, [pc, #256]	; (8001108 <MX_TIM3_Init+0x14c>)
 8001008:	2200      	movs	r2, #0
 800100a:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 30000;
 800100c:	4b3e      	ldr	r3, [pc, #248]	; (8001108 <MX_TIM3_Init+0x14c>)
 800100e:	f247 5230 	movw	r2, #30000	; 0x7530
 8001012:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001014:	4b3c      	ldr	r3, [pc, #240]	; (8001108 <MX_TIM3_Init+0x14c>)
 8001016:	2200      	movs	r2, #0
 8001018:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800101a:	4b3b      	ldr	r3, [pc, #236]	; (8001108 <MX_TIM3_Init+0x14c>)
 800101c:	2200      	movs	r2, #0
 800101e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001020:	4839      	ldr	r0, [pc, #228]	; (8001108 <MX_TIM3_Init+0x14c>)
 8001022:	f004 f88b 	bl	800513c <HAL_TIM_Base_Init>
 8001026:	4603      	mov	r3, r0
 8001028:	2b00      	cmp	r3, #0
 800102a:	d001      	beq.n	8001030 <MX_TIM3_Init+0x74>
  {
    Error_Handler();
 800102c:	f000 fa78 	bl	8001520 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001030:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001034:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001036:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800103a:	4619      	mov	r1, r3
 800103c:	4832      	ldr	r0, [pc, #200]	; (8001108 <MX_TIM3_Init+0x14c>)
 800103e:	f004 fc01 	bl	8005844 <HAL_TIM_ConfigClockSource>
 8001042:	4603      	mov	r3, r0
 8001044:	2b00      	cmp	r3, #0
 8001046:	d001      	beq.n	800104c <MX_TIM3_Init+0x90>
  {
    Error_Handler();
 8001048:	f000 fa6a 	bl	8001520 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 800104c:	482e      	ldr	r0, [pc, #184]	; (8001108 <MX_TIM3_Init+0x14c>)
 800104e:	f004 f937 	bl	80052c0 <HAL_TIM_IC_Init>
 8001052:	4603      	mov	r3, r0
 8001054:	2b00      	cmp	r3, #0
 8001056:	d001      	beq.n	800105c <MX_TIM3_Init+0xa0>
  {
    Error_Handler();
 8001058:	f000 fa62 	bl	8001520 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 800105c:	482a      	ldr	r0, [pc, #168]	; (8001108 <MX_TIM3_Init+0x14c>)
 800105e:	f004 f8bc 	bl	80051da <HAL_TIM_PWM_Init>
 8001062:	4603      	mov	r3, r0
 8001064:	2b00      	cmp	r3, #0
 8001066:	d001      	beq.n	800106c <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8001068:	f000 fa5a 	bl	8001520 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800106c:	2300      	movs	r3, #0
 800106e:	633b      	str	r3, [r7, #48]	; 0x30
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001070:	2300      	movs	r3, #0
 8001072:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001074:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001078:	4619      	mov	r1, r3
 800107a:	4823      	ldr	r0, [pc, #140]	; (8001108 <MX_TIM3_Init+0x14c>)
 800107c:	f005 f94c 	bl	8006318 <HAL_TIMEx_MasterConfigSynchronization>
 8001080:	4603      	mov	r3, r0
 8001082:	2b00      	cmp	r3, #0
 8001084:	d001      	beq.n	800108a <MX_TIM3_Init+0xce>
  {
    Error_Handler();
 8001086:	f000 fa4b 	bl	8001520 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 800108a:	2300      	movs	r3, #0
 800108c:	623b      	str	r3, [r7, #32]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 800108e:	2301      	movs	r3, #1
 8001090:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8001092:	2300      	movs	r3, #0
 8001094:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigIC.ICFilter = 0;
 8001096:	2300      	movs	r3, #0
 8001098:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 800109a:	f107 0320 	add.w	r3, r7, #32
 800109e:	2200      	movs	r2, #0
 80010a0:	4619      	mov	r1, r3
 80010a2:	4819      	ldr	r0, [pc, #100]	; (8001108 <MX_TIM3_Init+0x14c>)
 80010a4:	f004 fa6b 	bl	800557e <HAL_TIM_IC_ConfigChannel>
 80010a8:	4603      	mov	r3, r0
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d001      	beq.n	80010b2 <MX_TIM3_Init+0xf6>
  {
    Error_Handler();
 80010ae:	f000 fa37 	bl	8001520 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_FALLING;
 80010b2:	2302      	movs	r3, #2
 80010b4:	623b      	str	r3, [r7, #32]
  sConfigIC.ICSelection = TIM_ICSELECTION_INDIRECTTI;
 80010b6:	2302      	movs	r3, #2
 80010b8:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 80010ba:	f107 0320 	add.w	r3, r7, #32
 80010be:	2204      	movs	r2, #4
 80010c0:	4619      	mov	r1, r3
 80010c2:	4811      	ldr	r0, [pc, #68]	; (8001108 <MX_TIM3_Init+0x14c>)
 80010c4:	f004 fa5b 	bl	800557e <HAL_TIM_IC_ConfigChannel>
 80010c8:	4603      	mov	r3, r0
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	d001      	beq.n	80010d2 <MX_TIM3_Init+0x116>
  {
    Error_Handler();
 80010ce:	f000 fa27 	bl	8001520 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80010d2:	2360      	movs	r3, #96	; 0x60
 80010d4:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 10;
 80010d6:	230a      	movs	r3, #10
 80010d8:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80010da:	2300      	movs	r3, #0
 80010dc:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80010de:	2300      	movs	r3, #0
 80010e0:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80010e2:	1d3b      	adds	r3, r7, #4
 80010e4:	2208      	movs	r2, #8
 80010e6:	4619      	mov	r1, r3
 80010e8:	4807      	ldr	r0, [pc, #28]	; (8001108 <MX_TIM3_Init+0x14c>)
 80010ea:	f004 fae5 	bl	80056b8 <HAL_TIM_PWM_ConfigChannel>
 80010ee:	4603      	mov	r3, r0
 80010f0:	2b00      	cmp	r3, #0
 80010f2:	d001      	beq.n	80010f8 <MX_TIM3_Init+0x13c>
  {
    Error_Handler();
 80010f4:	f000 fa14 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80010f8:	4803      	ldr	r0, [pc, #12]	; (8001108 <MX_TIM3_Init+0x14c>)
 80010fa:	f000 fcb9 	bl	8001a70 <HAL_TIM_MspPostInit>

}
 80010fe:	bf00      	nop
 8001100:	3748      	adds	r7, #72	; 0x48
 8001102:	46bd      	mov	sp, r7
 8001104:	bd80      	pop	{r7, pc}
 8001106:	bf00      	nop
 8001108:	20000330 	.word	0x20000330
 800110c:	40000400 	.word	0x40000400

08001110 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001110:	b580      	push	{r7, lr}
 8001112:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001114:	4b11      	ldr	r3, [pc, #68]	; (800115c <MX_USART1_UART_Init+0x4c>)
 8001116:	4a12      	ldr	r2, [pc, #72]	; (8001160 <MX_USART1_UART_Init+0x50>)
 8001118:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800111a:	4b10      	ldr	r3, [pc, #64]	; (800115c <MX_USART1_UART_Init+0x4c>)
 800111c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001120:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001122:	4b0e      	ldr	r3, [pc, #56]	; (800115c <MX_USART1_UART_Init+0x4c>)
 8001124:	2200      	movs	r2, #0
 8001126:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001128:	4b0c      	ldr	r3, [pc, #48]	; (800115c <MX_USART1_UART_Init+0x4c>)
 800112a:	2200      	movs	r2, #0
 800112c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800112e:	4b0b      	ldr	r3, [pc, #44]	; (800115c <MX_USART1_UART_Init+0x4c>)
 8001130:	2200      	movs	r2, #0
 8001132:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001134:	4b09      	ldr	r3, [pc, #36]	; (800115c <MX_USART1_UART_Init+0x4c>)
 8001136:	220c      	movs	r2, #12
 8001138:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800113a:	4b08      	ldr	r3, [pc, #32]	; (800115c <MX_USART1_UART_Init+0x4c>)
 800113c:	2200      	movs	r2, #0
 800113e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001140:	4b06      	ldr	r3, [pc, #24]	; (800115c <MX_USART1_UART_Init+0x4c>)
 8001142:	2200      	movs	r2, #0
 8001144:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001146:	4805      	ldr	r0, [pc, #20]	; (800115c <MX_USART1_UART_Init+0x4c>)
 8001148:	f005 f976 	bl	8006438 <HAL_UART_Init>
 800114c:	4603      	mov	r3, r0
 800114e:	2b00      	cmp	r3, #0
 8001150:	d001      	beq.n	8001156 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001152:	f000 f9e5 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001156:	bf00      	nop
 8001158:	bd80      	pop	{r7, pc}
 800115a:	bf00      	nop
 800115c:	20000370 	.word	0x20000370
 8001160:	40011000 	.word	0x40011000

08001164 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001164:	b580      	push	{r7, lr}
 8001166:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001168:	4b11      	ldr	r3, [pc, #68]	; (80011b0 <MX_USART2_UART_Init+0x4c>)
 800116a:	4a12      	ldr	r2, [pc, #72]	; (80011b4 <MX_USART2_UART_Init+0x50>)
 800116c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800116e:	4b10      	ldr	r3, [pc, #64]	; (80011b0 <MX_USART2_UART_Init+0x4c>)
 8001170:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8001174:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001176:	4b0e      	ldr	r3, [pc, #56]	; (80011b0 <MX_USART2_UART_Init+0x4c>)
 8001178:	2200      	movs	r2, #0
 800117a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800117c:	4b0c      	ldr	r3, [pc, #48]	; (80011b0 <MX_USART2_UART_Init+0x4c>)
 800117e:	2200      	movs	r2, #0
 8001180:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001182:	4b0b      	ldr	r3, [pc, #44]	; (80011b0 <MX_USART2_UART_Init+0x4c>)
 8001184:	2200      	movs	r2, #0
 8001186:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001188:	4b09      	ldr	r3, [pc, #36]	; (80011b0 <MX_USART2_UART_Init+0x4c>)
 800118a:	220c      	movs	r2, #12
 800118c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800118e:	4b08      	ldr	r3, [pc, #32]	; (80011b0 <MX_USART2_UART_Init+0x4c>)
 8001190:	2200      	movs	r2, #0
 8001192:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001194:	4b06      	ldr	r3, [pc, #24]	; (80011b0 <MX_USART2_UART_Init+0x4c>)
 8001196:	2200      	movs	r2, #0
 8001198:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800119a:	4805      	ldr	r0, [pc, #20]	; (80011b0 <MX_USART2_UART_Init+0x4c>)
 800119c:	f005 f94c 	bl	8006438 <HAL_UART_Init>
 80011a0:	4603      	mov	r3, r0
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	d001      	beq.n	80011aa <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80011a6:	f000 f9bb 	bl	8001520 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80011aa:	bf00      	nop
 80011ac:	bd80      	pop	{r7, pc}
 80011ae:	bf00      	nop
 80011b0:	200003b0 	.word	0x200003b0
 80011b4:	40004400 	.word	0x40004400

080011b8 <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 80011b8:	b580      	push	{r7, lr}
 80011ba:	b088      	sub	sp, #32
 80011bc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 80011be:	1d3b      	adds	r3, r7, #4
 80011c0:	2200      	movs	r2, #0
 80011c2:	601a      	str	r2, [r3, #0]
 80011c4:	605a      	str	r2, [r3, #4]
 80011c6:	609a      	str	r2, [r3, #8]
 80011c8:	60da      	str	r2, [r3, #12]
 80011ca:	611a      	str	r2, [r3, #16]
 80011cc:	615a      	str	r2, [r3, #20]
 80011ce:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80011d0:	4b4a      	ldr	r3, [pc, #296]	; (80012fc <MX_FMC_Init+0x144>)
 80011d2:	4a4b      	ldr	r2, [pc, #300]	; (8001300 <MX_FMC_Init+0x148>)
 80011d4:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80011d6:	4b49      	ldr	r3, [pc, #292]	; (80012fc <MX_FMC_Init+0x144>)
 80011d8:	2201      	movs	r2, #1
 80011da:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80011dc:	4b47      	ldr	r3, [pc, #284]	; (80012fc <MX_FMC_Init+0x144>)
 80011de:	2200      	movs	r2, #0
 80011e0:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80011e2:	4b46      	ldr	r3, [pc, #280]	; (80012fc <MX_FMC_Init+0x144>)
 80011e4:	2204      	movs	r2, #4
 80011e6:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80011e8:	4b44      	ldr	r3, [pc, #272]	; (80012fc <MX_FMC_Init+0x144>)
 80011ea:	2210      	movs	r2, #16
 80011ec:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80011ee:	4b43      	ldr	r3, [pc, #268]	; (80012fc <MX_FMC_Init+0x144>)
 80011f0:	2240      	movs	r2, #64	; 0x40
 80011f2:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80011f4:	4b41      	ldr	r3, [pc, #260]	; (80012fc <MX_FMC_Init+0x144>)
 80011f6:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80011fa:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80011fc:	4b3f      	ldr	r3, [pc, #252]	; (80012fc <MX_FMC_Init+0x144>)
 80011fe:	2200      	movs	r2, #0
 8001200:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001202:	4b3e      	ldr	r3, [pc, #248]	; (80012fc <MX_FMC_Init+0x144>)
 8001204:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001208:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800120a:	4b3c      	ldr	r3, [pc, #240]	; (80012fc <MX_FMC_Init+0x144>)
 800120c:	2200      	movs	r2, #0
 800120e:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001210:	4b3a      	ldr	r3, [pc, #232]	; (80012fc <MX_FMC_Init+0x144>)
 8001212:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001216:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8001218:	2302      	movs	r3, #2
 800121a:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 800121c:	2307      	movs	r3, #7
 800121e:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001220:	2304      	movs	r3, #4
 8001222:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 7;
 8001224:	2307      	movs	r3, #7
 8001226:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 3;
 8001228:	2303      	movs	r3, #3
 800122a:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 800122c:	2302      	movs	r3, #2
 800122e:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 8001230:	2302      	movs	r3, #2
 8001232:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001234:	1d3b      	adds	r3, r7, #4
 8001236:	4619      	mov	r1, r3
 8001238:	4830      	ldr	r0, [pc, #192]	; (80012fc <MX_FMC_Init+0x144>)
 800123a:	f003 fcbb 	bl	8004bb4 <HAL_SDRAM_Init>
 800123e:	4603      	mov	r3, r0
 8001240:	2b00      	cmp	r3, #0
 8001242:	d001      	beq.n	8001248 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 8001244:	f000 f96c 	bl	8001520 <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */
  __IO uint32_t tmpmrd = 0;
 8001248:	2300      	movs	r3, #0
 800124a:	603b      	str	r3, [r7, #0]

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 800124c:	4b2d      	ldr	r3, [pc, #180]	; (8001304 <MX_FMC_Init+0x14c>)
 800124e:	2201      	movs	r2, #1
 8001250:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK2;
 8001252:	4b2c      	ldr	r3, [pc, #176]	; (8001304 <MX_FMC_Init+0x14c>)
 8001254:	2208      	movs	r2, #8
 8001256:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 1;
 8001258:	4b2a      	ldr	r3, [pc, #168]	; (8001304 <MX_FMC_Init+0x14c>)
 800125a:	2201      	movs	r2, #1
 800125c:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 800125e:	4b29      	ldr	r3, [pc, #164]	; (8001304 <MX_FMC_Init+0x14c>)
 8001260:	2200      	movs	r2, #0
 8001262:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8001264:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001268:	4926      	ldr	r1, [pc, #152]	; (8001304 <MX_FMC_Init+0x14c>)
 800126a:	4824      	ldr	r0, [pc, #144]	; (80012fc <MX_FMC_Init+0x144>)
 800126c:	f003 fcd6 	bl	8004c1c <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(100);
 8001270:	2064      	movs	r0, #100	; 0x64
 8001272:	f000 ff5d 	bl	8002130 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8001276:	4b23      	ldr	r3, [pc, #140]	; (8001304 <MX_FMC_Init+0x14c>)
 8001278:	2202      	movs	r2, #2
 800127a:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 800127c:	4b21      	ldr	r3, [pc, #132]	; (8001304 <MX_FMC_Init+0x14c>)
 800127e:	2208      	movs	r2, #8
 8001280:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 1;
 8001282:	4b20      	ldr	r3, [pc, #128]	; (8001304 <MX_FMC_Init+0x14c>)
 8001284:	2201      	movs	r2, #1
 8001286:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8001288:	4b1e      	ldr	r3, [pc, #120]	; (8001304 <MX_FMC_Init+0x14c>)
 800128a:	2200      	movs	r2, #0
 800128c:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 800128e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001292:	491c      	ldr	r1, [pc, #112]	; (8001304 <MX_FMC_Init+0x14c>)
 8001294:	4819      	ldr	r0, [pc, #100]	; (80012fc <MX_FMC_Init+0x144>)
 8001296:	f003 fcc1 	bl	8004c1c <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800129a:	4b1a      	ldr	r3, [pc, #104]	; (8001304 <MX_FMC_Init+0x14c>)
 800129c:	2203      	movs	r2, #3
 800129e:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 80012a0:	4b18      	ldr	r3, [pc, #96]	; (8001304 <MX_FMC_Init+0x14c>)
 80012a2:	2208      	movs	r2, #8
 80012a4:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 4;
 80012a6:	4b17      	ldr	r3, [pc, #92]	; (8001304 <MX_FMC_Init+0x14c>)
 80012a8:	2204      	movs	r2, #4
 80012aa:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 80012ac:	4b15      	ldr	r3, [pc, #84]	; (8001304 <MX_FMC_Init+0x14c>)
 80012ae:	2200      	movs	r2, #0
 80012b0:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80012b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80012b6:	4913      	ldr	r1, [pc, #76]	; (8001304 <MX_FMC_Init+0x14c>)
 80012b8:	4810      	ldr	r0, [pc, #64]	; (80012fc <MX_FMC_Init+0x144>)
 80012ba:	f003 fcaf 	bl	8004c1c <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 80012be:	f44f 730c 	mov.w	r3, #560	; 0x230
 80012c2:	603b      	str	r3, [r7, #0]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 80012c4:	4b0f      	ldr	r3, [pc, #60]	; (8001304 <MX_FMC_Init+0x14c>)
 80012c6:	2204      	movs	r2, #4
 80012c8:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 80012ca:	4b0e      	ldr	r3, [pc, #56]	; (8001304 <MX_FMC_Init+0x14c>)
 80012cc:	2208      	movs	r2, #8
 80012ce:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 1;
 80012d0:	4b0c      	ldr	r3, [pc, #48]	; (8001304 <MX_FMC_Init+0x14c>)
 80012d2:	2201      	movs	r2, #1
 80012d4:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = tmpmrd;
 80012d6:	683b      	ldr	r3, [r7, #0]
 80012d8:	4a0a      	ldr	r2, [pc, #40]	; (8001304 <MX_FMC_Init+0x14c>)
 80012da:	60d3      	str	r3, [r2, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80012dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80012e0:	4908      	ldr	r1, [pc, #32]	; (8001304 <MX_FMC_Init+0x14c>)
 80012e2:	4806      	ldr	r0, [pc, #24]	; (80012fc <MX_FMC_Init+0x144>)
 80012e4:	f003 fc9a 	bl	8004c1c <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 80012e8:	f240 516a 	movw	r1, #1386	; 0x56a
 80012ec:	4803      	ldr	r0, [pc, #12]	; (80012fc <MX_FMC_Init+0x144>)
 80012ee:	f003 fcc0 	bl	8004c72 <HAL_SDRAM_ProgramRefreshRate>
  /* USER CODE END FMC_Init 2 */
}
 80012f2:	bf00      	nop
 80012f4:	3720      	adds	r7, #32
 80012f6:	46bd      	mov	sp, r7
 80012f8:	bd80      	pop	{r7, pc}
 80012fa:	bf00      	nop
 80012fc:	200003f0 	.word	0x200003f0
 8001300:	a0000140 	.word	0xa0000140
 8001304:	20000424 	.word	0x20000424

08001308 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001308:	b580      	push	{r7, lr}
 800130a:	b08e      	sub	sp, #56	; 0x38
 800130c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800130e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001312:	2200      	movs	r2, #0
 8001314:	601a      	str	r2, [r3, #0]
 8001316:	605a      	str	r2, [r3, #4]
 8001318:	609a      	str	r2, [r3, #8]
 800131a:	60da      	str	r2, [r3, #12]
 800131c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800131e:	2300      	movs	r3, #0
 8001320:	623b      	str	r3, [r7, #32]
 8001322:	4b4d      	ldr	r3, [pc, #308]	; (8001458 <MX_GPIO_Init+0x150>)
 8001324:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001326:	4a4c      	ldr	r2, [pc, #304]	; (8001458 <MX_GPIO_Init+0x150>)
 8001328:	f043 0320 	orr.w	r3, r3, #32
 800132c:	6313      	str	r3, [r2, #48]	; 0x30
 800132e:	4b4a      	ldr	r3, [pc, #296]	; (8001458 <MX_GPIO_Init+0x150>)
 8001330:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001332:	f003 0320 	and.w	r3, r3, #32
 8001336:	623b      	str	r3, [r7, #32]
 8001338:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800133a:	2300      	movs	r3, #0
 800133c:	61fb      	str	r3, [r7, #28]
 800133e:	4b46      	ldr	r3, [pc, #280]	; (8001458 <MX_GPIO_Init+0x150>)
 8001340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001342:	4a45      	ldr	r2, [pc, #276]	; (8001458 <MX_GPIO_Init+0x150>)
 8001344:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001348:	6313      	str	r3, [r2, #48]	; 0x30
 800134a:	4b43      	ldr	r3, [pc, #268]	; (8001458 <MX_GPIO_Init+0x150>)
 800134c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800134e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001352:	61fb      	str	r3, [r7, #28]
 8001354:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001356:	2300      	movs	r3, #0
 8001358:	61bb      	str	r3, [r7, #24]
 800135a:	4b3f      	ldr	r3, [pc, #252]	; (8001458 <MX_GPIO_Init+0x150>)
 800135c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800135e:	4a3e      	ldr	r2, [pc, #248]	; (8001458 <MX_GPIO_Init+0x150>)
 8001360:	f043 0304 	orr.w	r3, r3, #4
 8001364:	6313      	str	r3, [r2, #48]	; 0x30
 8001366:	4b3c      	ldr	r3, [pc, #240]	; (8001458 <MX_GPIO_Init+0x150>)
 8001368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800136a:	f003 0304 	and.w	r3, r3, #4
 800136e:	61bb      	str	r3, [r7, #24]
 8001370:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001372:	2300      	movs	r3, #0
 8001374:	617b      	str	r3, [r7, #20]
 8001376:	4b38      	ldr	r3, [pc, #224]	; (8001458 <MX_GPIO_Init+0x150>)
 8001378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800137a:	4a37      	ldr	r2, [pc, #220]	; (8001458 <MX_GPIO_Init+0x150>)
 800137c:	f043 0301 	orr.w	r3, r3, #1
 8001380:	6313      	str	r3, [r2, #48]	; 0x30
 8001382:	4b35      	ldr	r3, [pc, #212]	; (8001458 <MX_GPIO_Init+0x150>)
 8001384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001386:	f003 0301 	and.w	r3, r3, #1
 800138a:	617b      	str	r3, [r7, #20]
 800138c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800138e:	2300      	movs	r3, #0
 8001390:	613b      	str	r3, [r7, #16]
 8001392:	4b31      	ldr	r3, [pc, #196]	; (8001458 <MX_GPIO_Init+0x150>)
 8001394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001396:	4a30      	ldr	r2, [pc, #192]	; (8001458 <MX_GPIO_Init+0x150>)
 8001398:	f043 0302 	orr.w	r3, r3, #2
 800139c:	6313      	str	r3, [r2, #48]	; 0x30
 800139e:	4b2e      	ldr	r3, [pc, #184]	; (8001458 <MX_GPIO_Init+0x150>)
 80013a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013a2:	f003 0302 	and.w	r3, r3, #2
 80013a6:	613b      	str	r3, [r7, #16]
 80013a8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80013aa:	2300      	movs	r3, #0
 80013ac:	60fb      	str	r3, [r7, #12]
 80013ae:	4b2a      	ldr	r3, [pc, #168]	; (8001458 <MX_GPIO_Init+0x150>)
 80013b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013b2:	4a29      	ldr	r2, [pc, #164]	; (8001458 <MX_GPIO_Init+0x150>)
 80013b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80013b8:	6313      	str	r3, [r2, #48]	; 0x30
 80013ba:	4b27      	ldr	r3, [pc, #156]	; (8001458 <MX_GPIO_Init+0x150>)
 80013bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80013c2:	60fb      	str	r3, [r7, #12]
 80013c4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013c6:	2300      	movs	r3, #0
 80013c8:	60bb      	str	r3, [r7, #8]
 80013ca:	4b23      	ldr	r3, [pc, #140]	; (8001458 <MX_GPIO_Init+0x150>)
 80013cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013ce:	4a22      	ldr	r2, [pc, #136]	; (8001458 <MX_GPIO_Init+0x150>)
 80013d0:	f043 0310 	orr.w	r3, r3, #16
 80013d4:	6313      	str	r3, [r2, #48]	; 0x30
 80013d6:	4b20      	ldr	r3, [pc, #128]	; (8001458 <MX_GPIO_Init+0x150>)
 80013d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013da:	f003 0310 	and.w	r3, r3, #16
 80013de:	60bb      	str	r3, [r7, #8]
 80013e0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013e2:	2300      	movs	r3, #0
 80013e4:	607b      	str	r3, [r7, #4]
 80013e6:	4b1c      	ldr	r3, [pc, #112]	; (8001458 <MX_GPIO_Init+0x150>)
 80013e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013ea:	4a1b      	ldr	r2, [pc, #108]	; (8001458 <MX_GPIO_Init+0x150>)
 80013ec:	f043 0308 	orr.w	r3, r3, #8
 80013f0:	6313      	str	r3, [r2, #48]	; 0x30
 80013f2:	4b19      	ldr	r3, [pc, #100]	; (8001458 <MX_GPIO_Init+0x150>)
 80013f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013f6:	f003 0308 	and.w	r3, r3, #8
 80013fa:	607b      	str	r3, [r7, #4]
 80013fc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 80013fe:	2200      	movs	r2, #0
 8001400:	2104      	movs	r1, #4
 8001402:	4816      	ldr	r0, [pc, #88]	; (800145c <MX_GPIO_Init+0x154>)
 8001404:	f002 f956 	bl	80036b4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DCX_GPIO_Port, DCX_Pin, GPIO_PIN_RESET);
 8001408:	2200      	movs	r2, #0
 800140a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800140e:	4814      	ldr	r0, [pc, #80]	; (8001460 <MX_GPIO_Init+0x158>)
 8001410:	f002 f950 	bl	80036b4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : CSX_Pin */
  GPIO_InitStruct.Pin = CSX_Pin;
 8001414:	2304      	movs	r3, #4
 8001416:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001418:	2301      	movs	r3, #1
 800141a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800141c:	2300      	movs	r3, #0
 800141e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001420:	2300      	movs	r3, #0
 8001422:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(CSX_GPIO_Port, &GPIO_InitStruct);
 8001424:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001428:	4619      	mov	r1, r3
 800142a:	480c      	ldr	r0, [pc, #48]	; (800145c <MX_GPIO_Init+0x154>)
 800142c:	f001 ff96 	bl	800335c <HAL_GPIO_Init>

  /*Configure GPIO pin : DCX_Pin */
  GPIO_InitStruct.Pin = DCX_Pin;
 8001430:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001434:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001436:	2301      	movs	r3, #1
 8001438:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800143a:	2300      	movs	r3, #0
 800143c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800143e:	2300      	movs	r3, #0
 8001440:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(DCX_GPIO_Port, &GPIO_InitStruct);
 8001442:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001446:	4619      	mov	r1, r3
 8001448:	4805      	ldr	r0, [pc, #20]	; (8001460 <MX_GPIO_Init+0x158>)
 800144a:	f001 ff87 	bl	800335c <HAL_GPIO_Init>

}
 800144e:	bf00      	nop
 8001450:	3738      	adds	r7, #56	; 0x38
 8001452:	46bd      	mov	sp, r7
 8001454:	bd80      	pop	{r7, pc}
 8001456:	bf00      	nop
 8001458:	40023800 	.word	0x40023800
 800145c:	40020800 	.word	0x40020800
 8001460:	40020c00 	.word	0x40020c00

08001464 <writeReg>:

/* USER CODE BEGIN 4 */
void writeReg(uint8_t reg)
{
 8001464:	b580      	push	{r7, lr}
 8001466:	b082      	sub	sp, #8
 8001468:	af00      	add	r7, sp, #0
 800146a:	4603      	mov	r3, r0
 800146c:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(DCX_GPIO_Port, DCX_Pin, GPIO_PIN_RESET);
 800146e:	2200      	movs	r2, #0
 8001470:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001474:	480b      	ldr	r0, [pc, #44]	; (80014a4 <writeReg+0x40>)
 8001476:	f002 f91d 	bl	80036b4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 800147a:	2200      	movs	r2, #0
 800147c:	2104      	movs	r1, #4
 800147e:	480a      	ldr	r0, [pc, #40]	; (80014a8 <writeReg+0x44>)
 8001480:	f002 f918 	bl	80036b4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &reg, 1, 10);
 8001484:	1df9      	adds	r1, r7, #7
 8001486:	230a      	movs	r3, #10
 8001488:	2201      	movs	r2, #1
 800148a:	4808      	ldr	r0, [pc, #32]	; (80014ac <writeReg+0x48>)
 800148c:	f003 fc75 	bl	8004d7a <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_SET);
 8001490:	2201      	movs	r2, #1
 8001492:	2104      	movs	r1, #4
 8001494:	4804      	ldr	r0, [pc, #16]	; (80014a8 <writeReg+0x44>)
 8001496:	f002 f90d 	bl	80036b4 <HAL_GPIO_WritePin>
}
 800149a:	bf00      	nop
 800149c:	3708      	adds	r7, #8
 800149e:	46bd      	mov	sp, r7
 80014a0:	bd80      	pop	{r7, pc}
 80014a2:	bf00      	nop
 80014a4:	40020c00 	.word	0x40020c00
 80014a8:	40020800 	.word	0x40020800
 80014ac:	20000258 	.word	0x20000258

080014b0 <writeData>:

void writeData(uint8_t data)
{
 80014b0:	b580      	push	{r7, lr}
 80014b2:	b082      	sub	sp, #8
 80014b4:	af00      	add	r7, sp, #0
 80014b6:	4603      	mov	r3, r0
 80014b8:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(DCX_GPIO_Port, DCX_Pin, GPIO_PIN_SET);
 80014ba:	2201      	movs	r2, #1
 80014bc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80014c0:	480b      	ldr	r0, [pc, #44]	; (80014f0 <writeData+0x40>)
 80014c2:	f002 f8f7 	bl	80036b4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 80014c6:	2200      	movs	r2, #0
 80014c8:	2104      	movs	r1, #4
 80014ca:	480a      	ldr	r0, [pc, #40]	; (80014f4 <writeData+0x44>)
 80014cc:	f002 f8f2 	bl	80036b4 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &data, 1, 10);
 80014d0:	1df9      	adds	r1, r7, #7
 80014d2:	230a      	movs	r3, #10
 80014d4:	2201      	movs	r2, #1
 80014d6:	4808      	ldr	r0, [pc, #32]	; (80014f8 <writeData+0x48>)
 80014d8:	f003 fc4f 	bl	8004d7a <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_SET);
 80014dc:	2201      	movs	r2, #1
 80014de:	2104      	movs	r1, #4
 80014e0:	4804      	ldr	r0, [pc, #16]	; (80014f4 <writeData+0x44>)
 80014e2:	f002 f8e7 	bl	80036b4 <HAL_GPIO_WritePin>
}
 80014e6:	bf00      	nop
 80014e8:	3708      	adds	r7, #8
 80014ea:	46bd      	mov	sp, r7
 80014ec:	bd80      	pop	{r7, pc}
 80014ee:	bf00      	nop
 80014f0:	40020c00 	.word	0x40020c00
 80014f4:	40020800 	.word	0x40020800
 80014f8:	20000258 	.word	0x20000258

080014fc <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80014fc:	b580      	push	{r7, lr}
 80014fe:	b082      	sub	sp, #8
 8001500:	af00      	add	r7, sp, #0
 8001502:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	4a04      	ldr	r2, [pc, #16]	; (800151c <HAL_TIM_PeriodElapsedCallback+0x20>)
 800150a:	4293      	cmp	r3, r2
 800150c:	d101      	bne.n	8001512 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 800150e:	f000 fdef 	bl	80020f0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001512:	bf00      	nop
 8001514:	3708      	adds	r7, #8
 8001516:	46bd      	mov	sp, r7
 8001518:	bd80      	pop	{r7, pc}
 800151a:	bf00      	nop
 800151c:	40001000 	.word	0x40001000

08001520 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001520:	b480      	push	{r7}
 8001522:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001524:	bf00      	nop
 8001526:	46bd      	mov	sp, r7
 8001528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800152c:	4770      	bx	lr
	...

08001530 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001530:	b480      	push	{r7}
 8001532:	b083      	sub	sp, #12
 8001534:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001536:	2300      	movs	r3, #0
 8001538:	607b      	str	r3, [r7, #4]
 800153a:	4b10      	ldr	r3, [pc, #64]	; (800157c <HAL_MspInit+0x4c>)
 800153c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800153e:	4a0f      	ldr	r2, [pc, #60]	; (800157c <HAL_MspInit+0x4c>)
 8001540:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001544:	6453      	str	r3, [r2, #68]	; 0x44
 8001546:	4b0d      	ldr	r3, [pc, #52]	; (800157c <HAL_MspInit+0x4c>)
 8001548:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800154a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800154e:	607b      	str	r3, [r7, #4]
 8001550:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001552:	2300      	movs	r3, #0
 8001554:	603b      	str	r3, [r7, #0]
 8001556:	4b09      	ldr	r3, [pc, #36]	; (800157c <HAL_MspInit+0x4c>)
 8001558:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800155a:	4a08      	ldr	r2, [pc, #32]	; (800157c <HAL_MspInit+0x4c>)
 800155c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001560:	6413      	str	r3, [r2, #64]	; 0x40
 8001562:	4b06      	ldr	r3, [pc, #24]	; (800157c <HAL_MspInit+0x4c>)
 8001564:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001566:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800156a:	603b      	str	r3, [r7, #0]
 800156c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800156e:	bf00      	nop
 8001570:	370c      	adds	r7, #12
 8001572:	46bd      	mov	sp, r7
 8001574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001578:	4770      	bx	lr
 800157a:	bf00      	nop
 800157c:	40023800 	.word	0x40023800

08001580 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001580:	b580      	push	{r7, lr}
 8001582:	b08a      	sub	sp, #40	; 0x28
 8001584:	af00      	add	r7, sp, #0
 8001586:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001588:	f107 0314 	add.w	r3, r7, #20
 800158c:	2200      	movs	r2, #0
 800158e:	601a      	str	r2, [r3, #0]
 8001590:	605a      	str	r2, [r3, #4]
 8001592:	609a      	str	r2, [r3, #8]
 8001594:	60da      	str	r2, [r3, #12]
 8001596:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	681b      	ldr	r3, [r3, #0]
 800159c:	4a17      	ldr	r2, [pc, #92]	; (80015fc <HAL_ADC_MspInit+0x7c>)
 800159e:	4293      	cmp	r3, r2
 80015a0:	d127      	bne.n	80015f2 <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80015a2:	2300      	movs	r3, #0
 80015a4:	613b      	str	r3, [r7, #16]
 80015a6:	4b16      	ldr	r3, [pc, #88]	; (8001600 <HAL_ADC_MspInit+0x80>)
 80015a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015aa:	4a15      	ldr	r2, [pc, #84]	; (8001600 <HAL_ADC_MspInit+0x80>)
 80015ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80015b0:	6453      	str	r3, [r2, #68]	; 0x44
 80015b2:	4b13      	ldr	r3, [pc, #76]	; (8001600 <HAL_ADC_MspInit+0x80>)
 80015b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80015ba:	613b      	str	r3, [r7, #16]
 80015bc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80015be:	2300      	movs	r3, #0
 80015c0:	60fb      	str	r3, [r7, #12]
 80015c2:	4b0f      	ldr	r3, [pc, #60]	; (8001600 <HAL_ADC_MspInit+0x80>)
 80015c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015c6:	4a0e      	ldr	r2, [pc, #56]	; (8001600 <HAL_ADC_MspInit+0x80>)
 80015c8:	f043 0301 	orr.w	r3, r3, #1
 80015cc:	6313      	str	r3, [r2, #48]	; 0x30
 80015ce:	4b0c      	ldr	r3, [pc, #48]	; (8001600 <HAL_ADC_MspInit+0x80>)
 80015d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015d2:	f003 0301 	and.w	r3, r3, #1
 80015d6:	60fb      	str	r3, [r7, #12]
 80015d8:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA2     ------> ADC1_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015da:	2304      	movs	r3, #4
 80015dc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80015de:	2303      	movs	r3, #3
 80015e0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e2:	2300      	movs	r3, #0
 80015e4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015e6:	f107 0314 	add.w	r3, r7, #20
 80015ea:	4619      	mov	r1, r3
 80015ec:	4805      	ldr	r0, [pc, #20]	; (8001604 <HAL_ADC_MspInit+0x84>)
 80015ee:	f001 feb5 	bl	800335c <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 80015f2:	bf00      	nop
 80015f4:	3728      	adds	r7, #40	; 0x28
 80015f6:	46bd      	mov	sp, r7
 80015f8:	bd80      	pop	{r7, pc}
 80015fa:	bf00      	nop
 80015fc:	40012000 	.word	0x40012000
 8001600:	40023800 	.word	0x40023800
 8001604:	40020000 	.word	0x40020000

08001608 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001608:	b480      	push	{r7}
 800160a:	b085      	sub	sp, #20
 800160c:	af00      	add	r7, sp, #0
 800160e:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001610:	687b      	ldr	r3, [r7, #4]
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	4a0b      	ldr	r2, [pc, #44]	; (8001644 <HAL_CRC_MspInit+0x3c>)
 8001616:	4293      	cmp	r3, r2
 8001618:	d10d      	bne.n	8001636 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800161a:	2300      	movs	r3, #0
 800161c:	60fb      	str	r3, [r7, #12]
 800161e:	4b0a      	ldr	r3, [pc, #40]	; (8001648 <HAL_CRC_MspInit+0x40>)
 8001620:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001622:	4a09      	ldr	r2, [pc, #36]	; (8001648 <HAL_CRC_MspInit+0x40>)
 8001624:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001628:	6313      	str	r3, [r2, #48]	; 0x30
 800162a:	4b07      	ldr	r3, [pc, #28]	; (8001648 <HAL_CRC_MspInit+0x40>)
 800162c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800162e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001632:	60fb      	str	r3, [r7, #12]
 8001634:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001636:	bf00      	nop
 8001638:	3714      	adds	r7, #20
 800163a:	46bd      	mov	sp, r7
 800163c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001640:	4770      	bx	lr
 8001642:	bf00      	nop
 8001644:	40023000 	.word	0x40023000
 8001648:	40023800 	.word	0x40023800

0800164c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 800164c:	b580      	push	{r7, lr}
 800164e:	b084      	sub	sp, #16
 8001650:	af00      	add	r7, sp, #0
 8001652:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8001654:	687b      	ldr	r3, [r7, #4]
 8001656:	681b      	ldr	r3, [r3, #0]
 8001658:	4a0e      	ldr	r2, [pc, #56]	; (8001694 <HAL_DMA2D_MspInit+0x48>)
 800165a:	4293      	cmp	r3, r2
 800165c:	d115      	bne.n	800168a <HAL_DMA2D_MspInit+0x3e>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800165e:	2300      	movs	r3, #0
 8001660:	60fb      	str	r3, [r7, #12]
 8001662:	4b0d      	ldr	r3, [pc, #52]	; (8001698 <HAL_DMA2D_MspInit+0x4c>)
 8001664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001666:	4a0c      	ldr	r2, [pc, #48]	; (8001698 <HAL_DMA2D_MspInit+0x4c>)
 8001668:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800166c:	6313      	str	r3, [r2, #48]	; 0x30
 800166e:	4b0a      	ldr	r3, [pc, #40]	; (8001698 <HAL_DMA2D_MspInit+0x4c>)
 8001670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001672:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001676:	60fb      	str	r3, [r7, #12]
 8001678:	68fb      	ldr	r3, [r7, #12]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 0, 0);
 800167a:	2200      	movs	r2, #0
 800167c:	2100      	movs	r1, #0
 800167e:	205a      	movs	r0, #90	; 0x5a
 8001680:	f001 fa20 	bl	8002ac4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001684:	205a      	movs	r0, #90	; 0x5a
 8001686:	f001 fa39 	bl	8002afc <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 800168a:	bf00      	nop
 800168c:	3710      	adds	r7, #16
 800168e:	46bd      	mov	sp, r7
 8001690:	bd80      	pop	{r7, pc}
 8001692:	bf00      	nop
 8001694:	4002b000 	.word	0x4002b000
 8001698:	40023800 	.word	0x40023800

0800169c <HAL_DMA2D_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
 800169c:	b580      	push	{r7, lr}
 800169e:	b082      	sub	sp, #8
 80016a0:	af00      	add	r7, sp, #0
 80016a2:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 80016a4:	687b      	ldr	r3, [r7, #4]
 80016a6:	681b      	ldr	r3, [r3, #0]
 80016a8:	4a07      	ldr	r2, [pc, #28]	; (80016c8 <HAL_DMA2D_MspDeInit+0x2c>)
 80016aa:	4293      	cmp	r3, r2
 80016ac:	d108      	bne.n	80016c0 <HAL_DMA2D_MspDeInit+0x24>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 80016ae:	4b07      	ldr	r3, [pc, #28]	; (80016cc <HAL_DMA2D_MspDeInit+0x30>)
 80016b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016b2:	4a06      	ldr	r2, [pc, #24]	; (80016cc <HAL_DMA2D_MspDeInit+0x30>)
 80016b4:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80016b8:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 80016ba:	205a      	movs	r0, #90	; 0x5a
 80016bc:	f001 fa2c 	bl	8002b18 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 80016c0:	bf00      	nop
 80016c2:	3708      	adds	r7, #8
 80016c4:	46bd      	mov	sp, r7
 80016c6:	bd80      	pop	{r7, pc}
 80016c8:	4002b000 	.word	0x4002b000
 80016cc:	40023800 	.word	0x40023800

080016d0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80016d0:	b580      	push	{r7, lr}
 80016d2:	b08e      	sub	sp, #56	; 0x38
 80016d4:	af00      	add	r7, sp, #0
 80016d6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016d8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80016dc:	2200      	movs	r2, #0
 80016de:	601a      	str	r2, [r3, #0]
 80016e0:	605a      	str	r2, [r3, #4]
 80016e2:	609a      	str	r2, [r3, #8]
 80016e4:	60da      	str	r2, [r3, #12]
 80016e6:	611a      	str	r2, [r3, #16]
  if(hltdc->Instance==LTDC)
 80016e8:	687b      	ldr	r3, [r7, #4]
 80016ea:	681b      	ldr	r3, [r3, #0]
 80016ec:	4a7b      	ldr	r2, [pc, #492]	; (80018dc <HAL_LTDC_MspInit+0x20c>)
 80016ee:	4293      	cmp	r3, r2
 80016f0:	f040 80ef 	bne.w	80018d2 <HAL_LTDC_MspInit+0x202>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016f4:	2300      	movs	r3, #0
 80016f6:	623b      	str	r3, [r7, #32]
 80016f8:	4b79      	ldr	r3, [pc, #484]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 80016fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016fc:	4a78      	ldr	r2, [pc, #480]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 80016fe:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001702:	6453      	str	r3, [r2, #68]	; 0x44
 8001704:	4b76      	ldr	r3, [pc, #472]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 8001706:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001708:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800170c:	623b      	str	r3, [r7, #32]
 800170e:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001710:	2300      	movs	r3, #0
 8001712:	61fb      	str	r3, [r7, #28]
 8001714:	4b72      	ldr	r3, [pc, #456]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 8001716:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001718:	4a71      	ldr	r2, [pc, #452]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 800171a:	f043 0320 	orr.w	r3, r3, #32
 800171e:	6313      	str	r3, [r2, #48]	; 0x30
 8001720:	4b6f      	ldr	r3, [pc, #444]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 8001722:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001724:	f003 0320 	and.w	r3, r3, #32
 8001728:	61fb      	str	r3, [r7, #28]
 800172a:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800172c:	2300      	movs	r3, #0
 800172e:	61bb      	str	r3, [r7, #24]
 8001730:	4b6b      	ldr	r3, [pc, #428]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 8001732:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001734:	4a6a      	ldr	r2, [pc, #424]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 8001736:	f043 0301 	orr.w	r3, r3, #1
 800173a:	6313      	str	r3, [r2, #48]	; 0x30
 800173c:	4b68      	ldr	r3, [pc, #416]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 800173e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001740:	f003 0301 	and.w	r3, r3, #1
 8001744:	61bb      	str	r3, [r7, #24]
 8001746:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001748:	2300      	movs	r3, #0
 800174a:	617b      	str	r3, [r7, #20]
 800174c:	4b64      	ldr	r3, [pc, #400]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 800174e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001750:	4a63      	ldr	r2, [pc, #396]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 8001752:	f043 0302 	orr.w	r3, r3, #2
 8001756:	6313      	str	r3, [r2, #48]	; 0x30
 8001758:	4b61      	ldr	r3, [pc, #388]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 800175a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800175c:	f003 0302 	and.w	r3, r3, #2
 8001760:	617b      	str	r3, [r7, #20]
 8001762:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001764:	2300      	movs	r3, #0
 8001766:	613b      	str	r3, [r7, #16]
 8001768:	4b5d      	ldr	r3, [pc, #372]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 800176a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800176c:	4a5c      	ldr	r2, [pc, #368]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 800176e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001772:	6313      	str	r3, [r2, #48]	; 0x30
 8001774:	4b5a      	ldr	r3, [pc, #360]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 8001776:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001778:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800177c:	613b      	str	r3, [r7, #16]
 800177e:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001780:	2300      	movs	r3, #0
 8001782:	60fb      	str	r3, [r7, #12]
 8001784:	4b56      	ldr	r3, [pc, #344]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 8001786:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001788:	4a55      	ldr	r2, [pc, #340]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 800178a:	f043 0304 	orr.w	r3, r3, #4
 800178e:	6313      	str	r3, [r2, #48]	; 0x30
 8001790:	4b53      	ldr	r3, [pc, #332]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 8001792:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001794:	f003 0304 	and.w	r3, r3, #4
 8001798:	60fb      	str	r3, [r7, #12]
 800179a:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800179c:	2300      	movs	r3, #0
 800179e:	60bb      	str	r3, [r7, #8]
 80017a0:	4b4f      	ldr	r3, [pc, #316]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 80017a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017a4:	4a4e      	ldr	r2, [pc, #312]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 80017a6:	f043 0308 	orr.w	r3, r3, #8
 80017aa:	6313      	str	r3, [r2, #48]	; 0x30
 80017ac:	4b4c      	ldr	r3, [pc, #304]	; (80018e0 <HAL_LTDC_MspInit+0x210>)
 80017ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017b0:	f003 0308 	and.w	r3, r3, #8
 80017b4:	60bb      	str	r3, [r7, #8]
 80017b6:	68bb      	ldr	r3, [r7, #8]
    PG11     ------> LTDC_B3
    PG12     ------> LTDC_B4
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80017b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80017bc:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017be:	2302      	movs	r3, #2
 80017c0:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017c2:	2300      	movs	r3, #0
 80017c4:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017c6:	2300      	movs	r3, #0
 80017c8:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017ca:	230e      	movs	r3, #14
 80017cc:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017ce:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80017d2:	4619      	mov	r1, r3
 80017d4:	4843      	ldr	r0, [pc, #268]	; (80018e4 <HAL_LTDC_MspInit+0x214>)
 80017d6:	f001 fdc1 	bl	800335c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017da:	f641 0358 	movw	r3, #6232	; 0x1858
 80017de:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017e0:	2302      	movs	r3, #2
 80017e2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017e4:	2300      	movs	r3, #0
 80017e6:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017e8:	2300      	movs	r3, #0
 80017ea:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017ec:	230e      	movs	r3, #14
 80017ee:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017f0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80017f4:	4619      	mov	r1, r3
 80017f6:	483c      	ldr	r0, [pc, #240]	; (80018e8 <HAL_LTDC_MspInit+0x218>)
 80017f8:	f001 fdb0 	bl	800335c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017fc:	2303      	movs	r3, #3
 80017fe:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001800:	2302      	movs	r3, #2
 8001802:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001804:	2300      	movs	r3, #0
 8001806:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001808:	2300      	movs	r3, #0
 800180a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800180c:	2309      	movs	r3, #9
 800180e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001810:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001814:	4619      	mov	r1, r3
 8001816:	4835      	ldr	r0, [pc, #212]	; (80018ec <HAL_LTDC_MspInit+0x21c>)
 8001818:	f001 fda0 	bl	800335c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800181c:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 8001820:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001822:	2302      	movs	r3, #2
 8001824:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001826:	2300      	movs	r3, #0
 8001828:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800182a:	2300      	movs	r3, #0
 800182c:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800182e:	230e      	movs	r3, #14
 8001830:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001832:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001836:	4619      	mov	r1, r3
 8001838:	482c      	ldr	r0, [pc, #176]	; (80018ec <HAL_LTDC_MspInit+0x21c>)
 800183a:	f001 fd8f 	bl	800335c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800183e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
 8001842:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001844:	2302      	movs	r3, #2
 8001846:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001848:	2300      	movs	r3, #0
 800184a:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800184c:	2300      	movs	r3, #0
 800184e:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001850:	230e      	movs	r3, #14
 8001852:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001854:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001858:	4619      	mov	r1, r3
 800185a:	4825      	ldr	r0, [pc, #148]	; (80018f0 <HAL_LTDC_MspInit+0x220>)
 800185c:	f001 fd7e 	bl	800335c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001860:	23c0      	movs	r3, #192	; 0xc0
 8001862:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001864:	2302      	movs	r3, #2
 8001866:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001868:	2300      	movs	r3, #0
 800186a:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800186c:	2300      	movs	r3, #0
 800186e:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001870:	230e      	movs	r3, #14
 8001872:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001874:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001878:	4619      	mov	r1, r3
 800187a:	481e      	ldr	r0, [pc, #120]	; (80018f4 <HAL_LTDC_MspInit+0x224>)
 800187c:	f001 fd6e 	bl	800335c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001880:	2308      	movs	r3, #8
 8001882:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001884:	2302      	movs	r3, #2
 8001886:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001888:	2300      	movs	r3, #0
 800188a:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800188c:	2300      	movs	r3, #0
 800188e:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001890:	230e      	movs	r3, #14
 8001892:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001894:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001898:	4619      	mov	r1, r3
 800189a:	4817      	ldr	r0, [pc, #92]	; (80018f8 <HAL_LTDC_MspInit+0x228>)
 800189c:	f001 fd5e 	bl	800335c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80018a0:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80018a4:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80018a6:	2302      	movs	r3, #2
 80018a8:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018aa:	2300      	movs	r3, #0
 80018ac:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018ae:	2300      	movs	r3, #0
 80018b0:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80018b2:	2309      	movs	r3, #9
 80018b4:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018b6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80018ba:	4619      	mov	r1, r3
 80018bc:	480c      	ldr	r0, [pc, #48]	; (80018f0 <HAL_LTDC_MspInit+0x220>)
 80018be:	f001 fd4d 	bl	800335c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 0, 0);
 80018c2:	2200      	movs	r2, #0
 80018c4:	2100      	movs	r1, #0
 80018c6:	2058      	movs	r0, #88	; 0x58
 80018c8:	f001 f8fc 	bl	8002ac4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80018cc:	2058      	movs	r0, #88	; 0x58
 80018ce:	f001 f915 	bl	8002afc <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80018d2:	bf00      	nop
 80018d4:	3738      	adds	r7, #56	; 0x38
 80018d6:	46bd      	mov	sp, r7
 80018d8:	bd80      	pop	{r7, pc}
 80018da:	bf00      	nop
 80018dc:	40016800 	.word	0x40016800
 80018e0:	40023800 	.word	0x40023800
 80018e4:	40021400 	.word	0x40021400
 80018e8:	40020000 	.word	0x40020000
 80018ec:	40020400 	.word	0x40020400
 80018f0:	40021800 	.word	0x40021800
 80018f4:	40020800 	.word	0x40020800
 80018f8:	40020c00 	.word	0x40020c00

080018fc <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80018fc:	b580      	push	{r7, lr}
 80018fe:	b08a      	sub	sp, #40	; 0x28
 8001900:	af00      	add	r7, sp, #0
 8001902:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001904:	f107 0314 	add.w	r3, r7, #20
 8001908:	2200      	movs	r2, #0
 800190a:	601a      	str	r2, [r3, #0]
 800190c:	605a      	str	r2, [r3, #4]
 800190e:	609a      	str	r2, [r3, #8]
 8001910:	60da      	str	r2, [r3, #12]
 8001912:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI5)
 8001914:	687b      	ldr	r3, [r7, #4]
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	4a19      	ldr	r2, [pc, #100]	; (8001980 <HAL_SPI_MspInit+0x84>)
 800191a:	4293      	cmp	r3, r2
 800191c:	d12c      	bne.n	8001978 <HAL_SPI_MspInit+0x7c>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 800191e:	2300      	movs	r3, #0
 8001920:	613b      	str	r3, [r7, #16]
 8001922:	4b18      	ldr	r3, [pc, #96]	; (8001984 <HAL_SPI_MspInit+0x88>)
 8001924:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001926:	4a17      	ldr	r2, [pc, #92]	; (8001984 <HAL_SPI_MspInit+0x88>)
 8001928:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800192c:	6453      	str	r3, [r2, #68]	; 0x44
 800192e:	4b15      	ldr	r3, [pc, #84]	; (8001984 <HAL_SPI_MspInit+0x88>)
 8001930:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001932:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001936:	613b      	str	r3, [r7, #16]
 8001938:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 800193a:	2300      	movs	r3, #0
 800193c:	60fb      	str	r3, [r7, #12]
 800193e:	4b11      	ldr	r3, [pc, #68]	; (8001984 <HAL_SPI_MspInit+0x88>)
 8001940:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001942:	4a10      	ldr	r2, [pc, #64]	; (8001984 <HAL_SPI_MspInit+0x88>)
 8001944:	f043 0320 	orr.w	r3, r3, #32
 8001948:	6313      	str	r3, [r2, #48]	; 0x30
 800194a:	4b0e      	ldr	r3, [pc, #56]	; (8001984 <HAL_SPI_MspInit+0x88>)
 800194c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800194e:	f003 0320 	and.w	r3, r3, #32
 8001952:	60fb      	str	r3, [r7, #12]
 8001954:	68fb      	ldr	r3, [r7, #12]
    /**SPI5 GPIO Configuration
    PF7     ------> SPI5_SCK
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_9;
 8001956:	f44f 7320 	mov.w	r3, #640	; 0x280
 800195a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800195c:	2302      	movs	r3, #2
 800195e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001960:	2300      	movs	r3, #0
 8001962:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001964:	2303      	movs	r3, #3
 8001966:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001968:	2305      	movs	r3, #5
 800196a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800196c:	f107 0314 	add.w	r3, r7, #20
 8001970:	4619      	mov	r1, r3
 8001972:	4805      	ldr	r0, [pc, #20]	; (8001988 <HAL_SPI_MspInit+0x8c>)
 8001974:	f001 fcf2 	bl	800335c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001978:	bf00      	nop
 800197a:	3728      	adds	r7, #40	; 0x28
 800197c:	46bd      	mov	sp, r7
 800197e:	bd80      	pop	{r7, pc}
 8001980:	40015000 	.word	0x40015000
 8001984:	40023800 	.word	0x40023800
 8001988:	40021400 	.word	0x40021400

0800198c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 800198c:	b580      	push	{r7, lr}
 800198e:	b08c      	sub	sp, #48	; 0x30
 8001990:	af00      	add	r7, sp, #0
 8001992:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001994:	f107 031c 	add.w	r3, r7, #28
 8001998:	2200      	movs	r2, #0
 800199a:	601a      	str	r2, [r3, #0]
 800199c:	605a      	str	r2, [r3, #4]
 800199e:	609a      	str	r2, [r3, #8]
 80019a0:	60da      	str	r2, [r3, #12]
 80019a2:	611a      	str	r2, [r3, #16]
  if(htim_base->Instance==TIM1)
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	4a2d      	ldr	r2, [pc, #180]	; (8001a60 <HAL_TIM_Base_MspInit+0xd4>)
 80019aa:	4293      	cmp	r3, r2
 80019ac:	d10e      	bne.n	80019cc <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80019ae:	2300      	movs	r3, #0
 80019b0:	61bb      	str	r3, [r7, #24]
 80019b2:	4b2c      	ldr	r3, [pc, #176]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 80019b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80019b6:	4a2b      	ldr	r2, [pc, #172]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 80019b8:	f043 0301 	orr.w	r3, r3, #1
 80019bc:	6453      	str	r3, [r2, #68]	; 0x44
 80019be:	4b29      	ldr	r3, [pc, #164]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 80019c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80019c2:	f003 0301 	and.w	r3, r3, #1
 80019c6:	61bb      	str	r3, [r7, #24]
 80019c8:	69bb      	ldr	r3, [r7, #24]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80019ca:	e044      	b.n	8001a56 <HAL_TIM_Base_MspInit+0xca>
  else if(htim_base->Instance==TIM2)
 80019cc:	687b      	ldr	r3, [r7, #4]
 80019ce:	681b      	ldr	r3, [r3, #0]
 80019d0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80019d4:	d10e      	bne.n	80019f4 <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM2_CLK_ENABLE();
 80019d6:	2300      	movs	r3, #0
 80019d8:	617b      	str	r3, [r7, #20]
 80019da:	4b22      	ldr	r3, [pc, #136]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 80019dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019de:	4a21      	ldr	r2, [pc, #132]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 80019e0:	f043 0301 	orr.w	r3, r3, #1
 80019e4:	6413      	str	r3, [r2, #64]	; 0x40
 80019e6:	4b1f      	ldr	r3, [pc, #124]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 80019e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019ea:	f003 0301 	and.w	r3, r3, #1
 80019ee:	617b      	str	r3, [r7, #20]
 80019f0:	697b      	ldr	r3, [r7, #20]
}
 80019f2:	e030      	b.n	8001a56 <HAL_TIM_Base_MspInit+0xca>
  else if(htim_base->Instance==TIM3)
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	681b      	ldr	r3, [r3, #0]
 80019f8:	4a1b      	ldr	r2, [pc, #108]	; (8001a68 <HAL_TIM_Base_MspInit+0xdc>)
 80019fa:	4293      	cmp	r3, r2
 80019fc:	d12b      	bne.n	8001a56 <HAL_TIM_Base_MspInit+0xca>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80019fe:	2300      	movs	r3, #0
 8001a00:	613b      	str	r3, [r7, #16]
 8001a02:	4b18      	ldr	r3, [pc, #96]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 8001a04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a06:	4a17      	ldr	r2, [pc, #92]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 8001a08:	f043 0302 	orr.w	r3, r3, #2
 8001a0c:	6413      	str	r3, [r2, #64]	; 0x40
 8001a0e:	4b15      	ldr	r3, [pc, #84]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 8001a10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a12:	f003 0302 	and.w	r3, r3, #2
 8001a16:	613b      	str	r3, [r7, #16]
 8001a18:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a1a:	2300      	movs	r3, #0
 8001a1c:	60fb      	str	r3, [r7, #12]
 8001a1e:	4b11      	ldr	r3, [pc, #68]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 8001a20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a22:	4a10      	ldr	r2, [pc, #64]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 8001a24:	f043 0302 	orr.w	r3, r3, #2
 8001a28:	6313      	str	r3, [r2, #48]	; 0x30
 8001a2a:	4b0e      	ldr	r3, [pc, #56]	; (8001a64 <HAL_TIM_Base_MspInit+0xd8>)
 8001a2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a2e:	f003 0302 	and.w	r3, r3, #2
 8001a32:	60fb      	str	r3, [r7, #12]
 8001a34:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001a36:	2310      	movs	r3, #16
 8001a38:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a3a:	2302      	movs	r3, #2
 8001a3c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a3e:	2300      	movs	r3, #0
 8001a40:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a42:	2300      	movs	r3, #0
 8001a44:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8001a46:	2302      	movs	r3, #2
 8001a48:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a4a:	f107 031c 	add.w	r3, r7, #28
 8001a4e:	4619      	mov	r1, r3
 8001a50:	4806      	ldr	r0, [pc, #24]	; (8001a6c <HAL_TIM_Base_MspInit+0xe0>)
 8001a52:	f001 fc83 	bl	800335c <HAL_GPIO_Init>
}
 8001a56:	bf00      	nop
 8001a58:	3730      	adds	r7, #48	; 0x30
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd80      	pop	{r7, pc}
 8001a5e:	bf00      	nop
 8001a60:	40010000 	.word	0x40010000
 8001a64:	40023800 	.word	0x40023800
 8001a68:	40000400 	.word	0x40000400
 8001a6c:	40020400 	.word	0x40020400

08001a70 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001a70:	b580      	push	{r7, lr}
 8001a72:	b08a      	sub	sp, #40	; 0x28
 8001a74:	af00      	add	r7, sp, #0
 8001a76:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a78:	f107 0314 	add.w	r3, r7, #20
 8001a7c:	2200      	movs	r2, #0
 8001a7e:	601a      	str	r2, [r3, #0]
 8001a80:	605a      	str	r2, [r3, #4]
 8001a82:	609a      	str	r2, [r3, #8]
 8001a84:	60da      	str	r2, [r3, #12]
 8001a86:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8001a88:	687b      	ldr	r3, [r7, #4]
 8001a8a:	681b      	ldr	r3, [r3, #0]
 8001a8c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001a90:	d11e      	bne.n	8001ad0 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a92:	2300      	movs	r3, #0
 8001a94:	613b      	str	r3, [r7, #16]
 8001a96:	4b22      	ldr	r3, [pc, #136]	; (8001b20 <HAL_TIM_MspPostInit+0xb0>)
 8001a98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a9a:	4a21      	ldr	r2, [pc, #132]	; (8001b20 <HAL_TIM_MspPostInit+0xb0>)
 8001a9c:	f043 0301 	orr.w	r3, r3, #1
 8001aa0:	6313      	str	r3, [r2, #48]	; 0x30
 8001aa2:	4b1f      	ldr	r3, [pc, #124]	; (8001b20 <HAL_TIM_MspPostInit+0xb0>)
 8001aa4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aa6:	f003 0301 	and.w	r3, r3, #1
 8001aaa:	613b      	str	r3, [r7, #16]
 8001aac:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA5     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001aae:	2320      	movs	r3, #32
 8001ab0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ab2:	2302      	movs	r3, #2
 8001ab4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ab6:	2300      	movs	r3, #0
 8001ab8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001aba:	2300      	movs	r3, #0
 8001abc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001abe:	2301      	movs	r3, #1
 8001ac0:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ac2:	f107 0314 	add.w	r3, r7, #20
 8001ac6:	4619      	mov	r1, r3
 8001ac8:	4816      	ldr	r0, [pc, #88]	; (8001b24 <HAL_TIM_MspPostInit+0xb4>)
 8001aca:	f001 fc47 	bl	800335c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8001ace:	e023      	b.n	8001b18 <HAL_TIM_MspPostInit+0xa8>
  else if(htim->Instance==TIM3)
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	4a14      	ldr	r2, [pc, #80]	; (8001b28 <HAL_TIM_MspPostInit+0xb8>)
 8001ad6:	4293      	cmp	r3, r2
 8001ad8:	d11e      	bne.n	8001b18 <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ada:	2300      	movs	r3, #0
 8001adc:	60fb      	str	r3, [r7, #12]
 8001ade:	4b10      	ldr	r3, [pc, #64]	; (8001b20 <HAL_TIM_MspPostInit+0xb0>)
 8001ae0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ae2:	4a0f      	ldr	r2, [pc, #60]	; (8001b20 <HAL_TIM_MspPostInit+0xb0>)
 8001ae4:	f043 0304 	orr.w	r3, r3, #4
 8001ae8:	6313      	str	r3, [r2, #48]	; 0x30
 8001aea:	4b0d      	ldr	r3, [pc, #52]	; (8001b20 <HAL_TIM_MspPostInit+0xb0>)
 8001aec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aee:	f003 0304 	and.w	r3, r3, #4
 8001af2:	60fb      	str	r3, [r7, #12]
 8001af4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001af6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001afa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001afc:	2302      	movs	r3, #2
 8001afe:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b00:	2300      	movs	r3, #0
 8001b02:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b04:	2300      	movs	r3, #0
 8001b06:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8001b08:	2302      	movs	r3, #2
 8001b0a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b0c:	f107 0314 	add.w	r3, r7, #20
 8001b10:	4619      	mov	r1, r3
 8001b12:	4806      	ldr	r0, [pc, #24]	; (8001b2c <HAL_TIM_MspPostInit+0xbc>)
 8001b14:	f001 fc22 	bl	800335c <HAL_GPIO_Init>
}
 8001b18:	bf00      	nop
 8001b1a:	3728      	adds	r7, #40	; 0x28
 8001b1c:	46bd      	mov	sp, r7
 8001b1e:	bd80      	pop	{r7, pc}
 8001b20:	40023800 	.word	0x40023800
 8001b24:	40020000 	.word	0x40020000
 8001b28:	40000400 	.word	0x40000400
 8001b2c:	40020800 	.word	0x40020800

08001b30 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001b30:	b580      	push	{r7, lr}
 8001b32:	b08c      	sub	sp, #48	; 0x30
 8001b34:	af00      	add	r7, sp, #0
 8001b36:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b38:	f107 031c 	add.w	r3, r7, #28
 8001b3c:	2200      	movs	r2, #0
 8001b3e:	601a      	str	r2, [r3, #0]
 8001b40:	605a      	str	r2, [r3, #4]
 8001b42:	609a      	str	r2, [r3, #8]
 8001b44:	60da      	str	r2, [r3, #12]
 8001b46:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	4a32      	ldr	r2, [pc, #200]	; (8001c18 <HAL_UART_MspInit+0xe8>)
 8001b4e:	4293      	cmp	r3, r2
 8001b50:	d12d      	bne.n	8001bae <HAL_UART_MspInit+0x7e>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001b52:	2300      	movs	r3, #0
 8001b54:	61bb      	str	r3, [r7, #24]
 8001b56:	4b31      	ldr	r3, [pc, #196]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001b58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001b5a:	4a30      	ldr	r2, [pc, #192]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001b5c:	f043 0310 	orr.w	r3, r3, #16
 8001b60:	6453      	str	r3, [r2, #68]	; 0x44
 8001b62:	4b2e      	ldr	r3, [pc, #184]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001b64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001b66:	f003 0310 	and.w	r3, r3, #16
 8001b6a:	61bb      	str	r3, [r7, #24]
 8001b6c:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b6e:	2300      	movs	r3, #0
 8001b70:	617b      	str	r3, [r7, #20]
 8001b72:	4b2a      	ldr	r3, [pc, #168]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001b74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b76:	4a29      	ldr	r2, [pc, #164]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001b78:	f043 0301 	orr.w	r3, r3, #1
 8001b7c:	6313      	str	r3, [r2, #48]	; 0x30
 8001b7e:	4b27      	ldr	r3, [pc, #156]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001b80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b82:	f003 0301 	and.w	r3, r3, #1
 8001b86:	617b      	str	r3, [r7, #20]
 8001b88:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8001b8a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8001b8e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b90:	2302      	movs	r3, #2
 8001b92:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b94:	2300      	movs	r3, #0
 8001b96:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b98:	2303      	movs	r3, #3
 8001b9a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001b9c:	2307      	movs	r3, #7
 8001b9e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ba0:	f107 031c 	add.w	r3, r7, #28
 8001ba4:	4619      	mov	r1, r3
 8001ba6:	481e      	ldr	r0, [pc, #120]	; (8001c20 <HAL_UART_MspInit+0xf0>)
 8001ba8:	f001 fbd8 	bl	800335c <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8001bac:	e030      	b.n	8001c10 <HAL_UART_MspInit+0xe0>
  else if(huart->Instance==USART2)
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	681b      	ldr	r3, [r3, #0]
 8001bb2:	4a1c      	ldr	r2, [pc, #112]	; (8001c24 <HAL_UART_MspInit+0xf4>)
 8001bb4:	4293      	cmp	r3, r2
 8001bb6:	d12b      	bne.n	8001c10 <HAL_UART_MspInit+0xe0>
    __HAL_RCC_USART2_CLK_ENABLE();
 8001bb8:	2300      	movs	r3, #0
 8001bba:	613b      	str	r3, [r7, #16]
 8001bbc:	4b17      	ldr	r3, [pc, #92]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001bbe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001bc0:	4a16      	ldr	r2, [pc, #88]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001bc2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001bc6:	6413      	str	r3, [r2, #64]	; 0x40
 8001bc8:	4b14      	ldr	r3, [pc, #80]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001bca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001bcc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001bd0:	613b      	str	r3, [r7, #16]
 8001bd2:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bd4:	2300      	movs	r3, #0
 8001bd6:	60fb      	str	r3, [r7, #12]
 8001bd8:	4b10      	ldr	r3, [pc, #64]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001bda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bdc:	4a0f      	ldr	r2, [pc, #60]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001bde:	f043 0308 	orr.w	r3, r3, #8
 8001be2:	6313      	str	r3, [r2, #48]	; 0x30
 8001be4:	4b0d      	ldr	r3, [pc, #52]	; (8001c1c <HAL_UART_MspInit+0xec>)
 8001be6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001be8:	f003 0308 	and.w	r3, r3, #8
 8001bec:	60fb      	str	r3, [r7, #12]
 8001bee:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001bf0:	2360      	movs	r3, #96	; 0x60
 8001bf2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bf4:	2302      	movs	r3, #2
 8001bf6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bfc:	2303      	movs	r3, #3
 8001bfe:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001c00:	2307      	movs	r3, #7
 8001c02:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c04:	f107 031c 	add.w	r3, r7, #28
 8001c08:	4619      	mov	r1, r3
 8001c0a:	4807      	ldr	r0, [pc, #28]	; (8001c28 <HAL_UART_MspInit+0xf8>)
 8001c0c:	f001 fba6 	bl	800335c <HAL_GPIO_Init>
}
 8001c10:	bf00      	nop
 8001c12:	3730      	adds	r7, #48	; 0x30
 8001c14:	46bd      	mov	sp, r7
 8001c16:	bd80      	pop	{r7, pc}
 8001c18:	40011000 	.word	0x40011000
 8001c1c:	40023800 	.word	0x40023800
 8001c20:	40020000 	.word	0x40020000
 8001c24:	40004400 	.word	0x40004400
 8001c28:	40020c00 	.word	0x40020c00

08001c2c <HAL_FMC_MspInit>:

}

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 8001c2c:	b580      	push	{r7, lr}
 8001c2e:	b086      	sub	sp, #24
 8001c30:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001c32:	1d3b      	adds	r3, r7, #4
 8001c34:	2200      	movs	r2, #0
 8001c36:	601a      	str	r2, [r3, #0]
 8001c38:	605a      	str	r2, [r3, #4]
 8001c3a:	609a      	str	r2, [r3, #8]
 8001c3c:	60da      	str	r2, [r3, #12]
 8001c3e:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 8001c40:	4b3b      	ldr	r3, [pc, #236]	; (8001d30 <HAL_FMC_MspInit+0x104>)
 8001c42:	681b      	ldr	r3, [r3, #0]
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d16f      	bne.n	8001d28 <HAL_FMC_MspInit+0xfc>
    return;
  }
  FMC_Initialized = 1;
 8001c48:	4b39      	ldr	r3, [pc, #228]	; (8001d30 <HAL_FMC_MspInit+0x104>)
 8001c4a:	2201      	movs	r2, #1
 8001c4c:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 8001c4e:	2300      	movs	r3, #0
 8001c50:	603b      	str	r3, [r7, #0]
 8001c52:	4b38      	ldr	r3, [pc, #224]	; (8001d34 <HAL_FMC_MspInit+0x108>)
 8001c54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001c56:	4a37      	ldr	r2, [pc, #220]	; (8001d34 <HAL_FMC_MspInit+0x108>)
 8001c58:	f043 0301 	orr.w	r3, r3, #1
 8001c5c:	6393      	str	r3, [r2, #56]	; 0x38
 8001c5e:	4b35      	ldr	r3, [pc, #212]	; (8001d34 <HAL_FMC_MspInit+0x108>)
 8001c60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001c62:	f003 0301 	and.w	r3, r3, #1
 8001c66:	603b      	str	r3, [r7, #0]
 8001c68:	683b      	ldr	r3, [r7, #0]
  PB5   ------> FMC_SDCKE1
  PB6   ------> FMC_SDNE1
  PE0   ------> FMC_NBL0
  PE1   ------> FMC_NBL1
  */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001c6a:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001c6e:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c70:	2302      	movs	r3, #2
 8001c72:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c74:	2300      	movs	r3, #0
 8001c76:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c78:	2303      	movs	r3, #3
 8001c7a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c7c:	230c      	movs	r3, #12
 8001c7e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c80:	1d3b      	adds	r3, r7, #4
 8001c82:	4619      	mov	r1, r3
 8001c84:	482c      	ldr	r0, [pc, #176]	; (8001d38 <HAL_FMC_MspInit+0x10c>)
 8001c86:	f001 fb69 	bl	800335c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001c8a:	2301      	movs	r3, #1
 8001c8c:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8e:	2302      	movs	r3, #2
 8001c90:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c92:	2300      	movs	r3, #0
 8001c94:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c96:	2303      	movs	r3, #3
 8001c98:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c9a:	230c      	movs	r3, #12
 8001c9c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c9e:	1d3b      	adds	r3, r7, #4
 8001ca0:	4619      	mov	r1, r3
 8001ca2:	4826      	ldr	r0, [pc, #152]	; (8001d3c <HAL_FMC_MspInit+0x110>)
 8001ca4:	f001 fb5a 	bl	800335c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ca8:	f248 1333 	movw	r3, #33075	; 0x8133
 8001cac:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_8|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cae:	2302      	movs	r3, #2
 8001cb0:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cb2:	2300      	movs	r3, #0
 8001cb4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cb6:	2303      	movs	r3, #3
 8001cb8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cba:	230c      	movs	r3, #12
 8001cbc:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cbe:	1d3b      	adds	r3, r7, #4
 8001cc0:	4619      	mov	r1, r3
 8001cc2:	481f      	ldr	r0, [pc, #124]	; (8001d40 <HAL_FMC_MspInit+0x114>)
 8001cc4:	f001 fb4a 	bl	800335c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001cc8:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001ccc:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cce:	2302      	movs	r3, #2
 8001cd0:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cd2:	2300      	movs	r3, #0
 8001cd4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cd6:	2303      	movs	r3, #3
 8001cd8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cda:	230c      	movs	r3, #12
 8001cdc:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cde:	1d3b      	adds	r3, r7, #4
 8001ce0:	4619      	mov	r1, r3
 8001ce2:	4818      	ldr	r0, [pc, #96]	; (8001d44 <HAL_FMC_MspInit+0x118>)
 8001ce4:	f001 fb3a 	bl	800335c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ce8:	f24c 7303 	movw	r3, #50947	; 0xc703
 8001cec:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cee:	2302      	movs	r3, #2
 8001cf0:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cf2:	2300      	movs	r3, #0
 8001cf4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cf6:	2303      	movs	r3, #3
 8001cf8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cfa:	230c      	movs	r3, #12
 8001cfc:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cfe:	1d3b      	adds	r3, r7, #4
 8001d00:	4619      	mov	r1, r3
 8001d02:	4811      	ldr	r0, [pc, #68]	; (8001d48 <HAL_FMC_MspInit+0x11c>)
 8001d04:	f001 fb2a 	bl	800335c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001d08:	2360      	movs	r3, #96	; 0x60
 8001d0a:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0c:	2302      	movs	r3, #2
 8001d0e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d10:	2300      	movs	r3, #0
 8001d12:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d14:	2303      	movs	r3, #3
 8001d16:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d18:	230c      	movs	r3, #12
 8001d1a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d1c:	1d3b      	adds	r3, r7, #4
 8001d1e:	4619      	mov	r1, r3
 8001d20:	480a      	ldr	r0, [pc, #40]	; (8001d4c <HAL_FMC_MspInit+0x120>)
 8001d22:	f001 fb1b 	bl	800335c <HAL_GPIO_Init>
 8001d26:	e000      	b.n	8001d2a <HAL_FMC_MspInit+0xfe>
    return;
 8001d28:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 8001d2a:	3718      	adds	r7, #24
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	bd80      	pop	{r7, pc}
 8001d30:	20000454 	.word	0x20000454
 8001d34:	40023800 	.word	0x40023800
 8001d38:	40021400 	.word	0x40021400
 8001d3c:	40020800 	.word	0x40020800
 8001d40:	40021800 	.word	0x40021800
 8001d44:	40021000 	.word	0x40021000
 8001d48:	40020c00 	.word	0x40020c00
 8001d4c:	40020400 	.word	0x40020400

08001d50 <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d50:	b580      	push	{r7, lr}
 8001d52:	b082      	sub	sp, #8
 8001d54:	af00      	add	r7, sp, #0
 8001d56:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8001d58:	f7ff ff68 	bl	8001c2c <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001d5c:	bf00      	nop
 8001d5e:	3708      	adds	r7, #8
 8001d60:	46bd      	mov	sp, r7
 8001d62:	bd80      	pop	{r7, pc}

08001d64 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001d64:	b580      	push	{r7, lr}
 8001d66:	b08c      	sub	sp, #48	; 0x30
 8001d68:	af00      	add	r7, sp, #0
 8001d6a:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
 8001d6c:	2300      	movs	r3, #0
 8001d6e:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t              uwPrescalerValue = 0;
 8001d70:	2300      	movs	r3, #0
 8001d72:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001d74:	2200      	movs	r2, #0
 8001d76:	6879      	ldr	r1, [r7, #4]
 8001d78:	2036      	movs	r0, #54	; 0x36
 8001d7a:	f000 fea3 	bl	8002ac4 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001d7e:	2036      	movs	r0, #54	; 0x36
 8001d80:	f000 febc 	bl	8002afc <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001d84:	2300      	movs	r3, #0
 8001d86:	60fb      	str	r3, [r7, #12]
 8001d88:	4b1f      	ldr	r3, [pc, #124]	; (8001e08 <HAL_InitTick+0xa4>)
 8001d8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d8c:	4a1e      	ldr	r2, [pc, #120]	; (8001e08 <HAL_InitTick+0xa4>)
 8001d8e:	f043 0310 	orr.w	r3, r3, #16
 8001d92:	6413      	str	r3, [r2, #64]	; 0x40
 8001d94:	4b1c      	ldr	r3, [pc, #112]	; (8001e08 <HAL_InitTick+0xa4>)
 8001d96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d98:	f003 0310 	and.w	r3, r3, #16
 8001d9c:	60fb      	str	r3, [r7, #12]
 8001d9e:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001da0:	f107 0210 	add.w	r2, r7, #16
 8001da4:	f107 0314 	add.w	r3, r7, #20
 8001da8:	4611      	mov	r1, r2
 8001daa:	4618      	mov	r0, r3
 8001dac:	f002 fd10 	bl	80047d0 <HAL_RCC_GetClockConfig>

  /* Compute TIM6 clock */
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001db0:	f002 fce6 	bl	8004780 <HAL_RCC_GetPCLK1Freq>
 8001db4:	4603      	mov	r3, r0
 8001db6:	005b      	lsls	r3, r3, #1
 8001db8:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001dba:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001dbc:	4a13      	ldr	r2, [pc, #76]	; (8001e0c <HAL_InitTick+0xa8>)
 8001dbe:	fba2 2303 	umull	r2, r3, r2, r3
 8001dc2:	0c9b      	lsrs	r3, r3, #18
 8001dc4:	3b01      	subs	r3, #1
 8001dc6:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001dc8:	4b11      	ldr	r3, [pc, #68]	; (8001e10 <HAL_InitTick+0xac>)
 8001dca:	4a12      	ldr	r2, [pc, #72]	; (8001e14 <HAL_InitTick+0xb0>)
 8001dcc:	601a      	str	r2, [r3, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001dce:	4b10      	ldr	r3, [pc, #64]	; (8001e10 <HAL_InitTick+0xac>)
 8001dd0:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001dd4:	60da      	str	r2, [r3, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
 8001dd6:	4a0e      	ldr	r2, [pc, #56]	; (8001e10 <HAL_InitTick+0xac>)
 8001dd8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001dda:	6053      	str	r3, [r2, #4]
  htim6.Init.ClockDivision = 0;
 8001ddc:	4b0c      	ldr	r3, [pc, #48]	; (8001e10 <HAL_InitTick+0xac>)
 8001dde:	2200      	movs	r2, #0
 8001de0:	611a      	str	r2, [r3, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001de2:	4b0b      	ldr	r3, [pc, #44]	; (8001e10 <HAL_InitTick+0xac>)
 8001de4:	2200      	movs	r2, #0
 8001de6:	609a      	str	r2, [r3, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001de8:	4809      	ldr	r0, [pc, #36]	; (8001e10 <HAL_InitTick+0xac>)
 8001dea:	f003 f9a7 	bl	800513c <HAL_TIM_Base_Init>
 8001dee:	4603      	mov	r3, r0
 8001df0:	2b00      	cmp	r3, #0
 8001df2:	d104      	bne.n	8001dfe <HAL_InitTick+0x9a>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001df4:	4806      	ldr	r0, [pc, #24]	; (8001e10 <HAL_InitTick+0xac>)
 8001df6:	f003 f9cc 	bl	8005192 <HAL_TIM_Base_Start_IT>
 8001dfa:	4603      	mov	r3, r0
 8001dfc:	e000      	b.n	8001e00 <HAL_InitTick+0x9c>
  }

  /* Return function status */
  return HAL_ERROR;
 8001dfe:	2301      	movs	r3, #1
}
 8001e00:	4618      	mov	r0, r3
 8001e02:	3730      	adds	r7, #48	; 0x30
 8001e04:	46bd      	mov	sp, r7
 8001e06:	bd80      	pop	{r7, pc}
 8001e08:	40023800 	.word	0x40023800
 8001e0c:	431bde83 	.word	0x431bde83
 8001e10:	20000458 	.word	0x20000458
 8001e14:	40001000 	.word	0x40001000

08001e18 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001e18:	b480      	push	{r7}
 8001e1a:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001e1c:	bf00      	nop
 8001e1e:	46bd      	mov	sp, r7
 8001e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e24:	4770      	bx	lr

08001e26 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001e26:	b480      	push	{r7}
 8001e28:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e2a:	e7fe      	b.n	8001e2a <HardFault_Handler+0x4>

08001e2c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001e2c:	b480      	push	{r7}
 8001e2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001e30:	e7fe      	b.n	8001e30 <MemManage_Handler+0x4>

08001e32 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001e32:	b480      	push	{r7}
 8001e34:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001e36:	e7fe      	b.n	8001e36 <BusFault_Handler+0x4>

08001e38 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001e38:	b480      	push	{r7}
 8001e3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e3c:	e7fe      	b.n	8001e3c <UsageFault_Handler+0x4>

08001e3e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001e3e:	b480      	push	{r7}
 8001e40:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001e42:	bf00      	nop
 8001e44:	46bd      	mov	sp, r7
 8001e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e4a:	4770      	bx	lr

08001e4c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001e4c:	b480      	push	{r7}
 8001e4e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001e50:	bf00      	nop
 8001e52:	46bd      	mov	sp, r7
 8001e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e58:	4770      	bx	lr

08001e5a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001e5a:	b480      	push	{r7}
 8001e5c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001e5e:	bf00      	nop
 8001e60:	46bd      	mov	sp, r7
 8001e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e66:	4770      	bx	lr

08001e68 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001e68:	b480      	push	{r7}
 8001e6a:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001e6c:	bf00      	nop
 8001e6e:	46bd      	mov	sp, r7
 8001e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e74:	4770      	bx	lr
	...

08001e78 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 8001e78:	b580      	push	{r7, lr}
 8001e7a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001e7c:	4802      	ldr	r0, [pc, #8]	; (8001e88 <TIM6_DAC_IRQHandler+0x10>)
 8001e7e:	f003 fa76 	bl	800536e <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8001e82:	bf00      	nop
 8001e84:	bd80      	pop	{r7, pc}
 8001e86:	bf00      	nop
 8001e88:	20000458 	.word	0x20000458

08001e8c <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8001e8c:	b580      	push	{r7, lr}
 8001e8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001e90:	4802      	ldr	r0, [pc, #8]	; (8001e9c <LTDC_IRQHandler+0x10>)
 8001e92:	f001 fcf9 	bl	8003888 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 8001e96:	bf00      	nop
 8001e98:	bd80      	pop	{r7, pc}
 8001e9a:	bf00      	nop
 8001e9c:	200001b0 	.word	0x200001b0

08001ea0 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001ea4:	4802      	ldr	r0, [pc, #8]	; (8001eb0 <DMA2D_IRQHandler+0x10>)
 8001ea6:	f001 f81a 	bl	8002ede <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 8001eaa:	bf00      	nop
 8001eac:	bd80      	pop	{r7, pc}
 8001eae:	bf00      	nop
 8001eb0:	20000170 	.word	0x20000170

08001eb4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001eb4:	b480      	push	{r7}
 8001eb6:	af00      	add	r7, sp, #0
	return 1;
 8001eb8:	2301      	movs	r3, #1
}
 8001eba:	4618      	mov	r0, r3
 8001ebc:	46bd      	mov	sp, r7
 8001ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec2:	4770      	bx	lr

08001ec4 <_kill>:

int _kill(int pid, int sig)
{
 8001ec4:	b580      	push	{r7, lr}
 8001ec6:	b082      	sub	sp, #8
 8001ec8:	af00      	add	r7, sp, #0
 8001eca:	6078      	str	r0, [r7, #4]
 8001ecc:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8001ece:	f018 fd57 	bl	801a980 <__errno>
 8001ed2:	4603      	mov	r3, r0
 8001ed4:	2216      	movs	r2, #22
 8001ed6:	601a      	str	r2, [r3, #0]
	return -1;
 8001ed8:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001edc:	4618      	mov	r0, r3
 8001ede:	3708      	adds	r7, #8
 8001ee0:	46bd      	mov	sp, r7
 8001ee2:	bd80      	pop	{r7, pc}

08001ee4 <_exit>:

void _exit (int status)
{
 8001ee4:	b580      	push	{r7, lr}
 8001ee6:	b082      	sub	sp, #8
 8001ee8:	af00      	add	r7, sp, #0
 8001eea:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001eec:	f04f 31ff 	mov.w	r1, #4294967295
 8001ef0:	6878      	ldr	r0, [r7, #4]
 8001ef2:	f7ff ffe7 	bl	8001ec4 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001ef6:	e7fe      	b.n	8001ef6 <_exit+0x12>

08001ef8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001ef8:	b580      	push	{r7, lr}
 8001efa:	b086      	sub	sp, #24
 8001efc:	af00      	add	r7, sp, #0
 8001efe:	60f8      	str	r0, [r7, #12]
 8001f00:	60b9      	str	r1, [r7, #8]
 8001f02:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f04:	2300      	movs	r3, #0
 8001f06:	617b      	str	r3, [r7, #20]
 8001f08:	e00a      	b.n	8001f20 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8001f0a:	f3af 8000 	nop.w
 8001f0e:	4601      	mov	r1, r0
 8001f10:	68bb      	ldr	r3, [r7, #8]
 8001f12:	1c5a      	adds	r2, r3, #1
 8001f14:	60ba      	str	r2, [r7, #8]
 8001f16:	b2ca      	uxtb	r2, r1
 8001f18:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f1a:	697b      	ldr	r3, [r7, #20]
 8001f1c:	3301      	adds	r3, #1
 8001f1e:	617b      	str	r3, [r7, #20]
 8001f20:	697a      	ldr	r2, [r7, #20]
 8001f22:	687b      	ldr	r3, [r7, #4]
 8001f24:	429a      	cmp	r2, r3
 8001f26:	dbf0      	blt.n	8001f0a <_read+0x12>
	}

return len;
 8001f28:	687b      	ldr	r3, [r7, #4]
}
 8001f2a:	4618      	mov	r0, r3
 8001f2c:	3718      	adds	r7, #24
 8001f2e:	46bd      	mov	sp, r7
 8001f30:	bd80      	pop	{r7, pc}

08001f32 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f32:	b580      	push	{r7, lr}
 8001f34:	b086      	sub	sp, #24
 8001f36:	af00      	add	r7, sp, #0
 8001f38:	60f8      	str	r0, [r7, #12]
 8001f3a:	60b9      	str	r1, [r7, #8]
 8001f3c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f3e:	2300      	movs	r3, #0
 8001f40:	617b      	str	r3, [r7, #20]
 8001f42:	e009      	b.n	8001f58 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8001f44:	68bb      	ldr	r3, [r7, #8]
 8001f46:	1c5a      	adds	r2, r3, #1
 8001f48:	60ba      	str	r2, [r7, #8]
 8001f4a:	781b      	ldrb	r3, [r3, #0]
 8001f4c:	4618      	mov	r0, r3
 8001f4e:	f7fe fb57 	bl	8000600 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f52:	697b      	ldr	r3, [r7, #20]
 8001f54:	3301      	adds	r3, #1
 8001f56:	617b      	str	r3, [r7, #20]
 8001f58:	697a      	ldr	r2, [r7, #20]
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	429a      	cmp	r2, r3
 8001f5e:	dbf1      	blt.n	8001f44 <_write+0x12>
	}
	return len;
 8001f60:	687b      	ldr	r3, [r7, #4]
}
 8001f62:	4618      	mov	r0, r3
 8001f64:	3718      	adds	r7, #24
 8001f66:	46bd      	mov	sp, r7
 8001f68:	bd80      	pop	{r7, pc}

08001f6a <_close>:

int _close(int file)
{
 8001f6a:	b480      	push	{r7}
 8001f6c:	b083      	sub	sp, #12
 8001f6e:	af00      	add	r7, sp, #0
 8001f70:	6078      	str	r0, [r7, #4]
	return -1;
 8001f72:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001f76:	4618      	mov	r0, r3
 8001f78:	370c      	adds	r7, #12
 8001f7a:	46bd      	mov	sp, r7
 8001f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f80:	4770      	bx	lr

08001f82 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001f82:	b480      	push	{r7}
 8001f84:	b083      	sub	sp, #12
 8001f86:	af00      	add	r7, sp, #0
 8001f88:	6078      	str	r0, [r7, #4]
 8001f8a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001f8c:	683b      	ldr	r3, [r7, #0]
 8001f8e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001f92:	605a      	str	r2, [r3, #4]
	return 0;
 8001f94:	2300      	movs	r3, #0
}
 8001f96:	4618      	mov	r0, r3
 8001f98:	370c      	adds	r7, #12
 8001f9a:	46bd      	mov	sp, r7
 8001f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fa0:	4770      	bx	lr

08001fa2 <_isatty>:

int _isatty(int file)
{
 8001fa2:	b480      	push	{r7}
 8001fa4:	b083      	sub	sp, #12
 8001fa6:	af00      	add	r7, sp, #0
 8001fa8:	6078      	str	r0, [r7, #4]
	return 1;
 8001faa:	2301      	movs	r3, #1
}
 8001fac:	4618      	mov	r0, r3
 8001fae:	370c      	adds	r7, #12
 8001fb0:	46bd      	mov	sp, r7
 8001fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb6:	4770      	bx	lr

08001fb8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001fb8:	b480      	push	{r7}
 8001fba:	b085      	sub	sp, #20
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	60f8      	str	r0, [r7, #12]
 8001fc0:	60b9      	str	r1, [r7, #8]
 8001fc2:	607a      	str	r2, [r7, #4]
	return 0;
 8001fc4:	2300      	movs	r3, #0
}
 8001fc6:	4618      	mov	r0, r3
 8001fc8:	3714      	adds	r7, #20
 8001fca:	46bd      	mov	sp, r7
 8001fcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fd0:	4770      	bx	lr
	...

08001fd4 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001fd4:	b580      	push	{r7, lr}
 8001fd6:	b084      	sub	sp, #16
 8001fd8:	af00      	add	r7, sp, #0
 8001fda:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fdc:	4b11      	ldr	r3, [pc, #68]	; (8002024 <_sbrk+0x50>)
 8001fde:	681b      	ldr	r3, [r3, #0]
 8001fe0:	2b00      	cmp	r3, #0
 8001fe2:	d102      	bne.n	8001fea <_sbrk+0x16>
		heap_end = &end;
 8001fe4:	4b0f      	ldr	r3, [pc, #60]	; (8002024 <_sbrk+0x50>)
 8001fe6:	4a10      	ldr	r2, [pc, #64]	; (8002028 <_sbrk+0x54>)
 8001fe8:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8001fea:	4b0e      	ldr	r3, [pc, #56]	; (8002024 <_sbrk+0x50>)
 8001fec:	681b      	ldr	r3, [r3, #0]
 8001fee:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8001ff0:	4b0c      	ldr	r3, [pc, #48]	; (8002024 <_sbrk+0x50>)
 8001ff2:	681a      	ldr	r2, [r3, #0]
 8001ff4:	687b      	ldr	r3, [r7, #4]
 8001ff6:	4413      	add	r3, r2
 8001ff8:	466a      	mov	r2, sp
 8001ffa:	4293      	cmp	r3, r2
 8001ffc:	d907      	bls.n	800200e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8001ffe:	f018 fcbf 	bl	801a980 <__errno>
 8002002:	4603      	mov	r3, r0
 8002004:	220c      	movs	r2, #12
 8002006:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8002008:	f04f 33ff 	mov.w	r3, #4294967295
 800200c:	e006      	b.n	800201c <_sbrk+0x48>
	}

	heap_end += incr;
 800200e:	4b05      	ldr	r3, [pc, #20]	; (8002024 <_sbrk+0x50>)
 8002010:	681a      	ldr	r2, [r3, #0]
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	4413      	add	r3, r2
 8002016:	4a03      	ldr	r2, [pc, #12]	; (8002024 <_sbrk+0x50>)
 8002018:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800201a:	68fb      	ldr	r3, [r7, #12]
}
 800201c:	4618      	mov	r0, r3
 800201e:	3710      	adds	r7, #16
 8002020:	46bd      	mov	sp, r7
 8002022:	bd80      	pop	{r7, pc}
 8002024:	20000498 	.word	0x20000498
 8002028:	20001780 	.word	0x20001780

0800202c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800202c:	b480      	push	{r7}
 800202e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002030:	4b08      	ldr	r3, [pc, #32]	; (8002054 <SystemInit+0x28>)
 8002032:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002036:	4a07      	ldr	r2, [pc, #28]	; (8002054 <SystemInit+0x28>)
 8002038:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800203c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8002040:	4b04      	ldr	r3, [pc, #16]	; (8002054 <SystemInit+0x28>)
 8002042:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002046:	609a      	str	r2, [r3, #8]
#endif
}
 8002048:	bf00      	nop
 800204a:	46bd      	mov	sp, r7
 800204c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002050:	4770      	bx	lr
 8002052:	bf00      	nop
 8002054:	e000ed00 	.word	0xe000ed00

08002058 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8002058:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002090 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800205c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800205e:	e003      	b.n	8002068 <LoopCopyDataInit>

08002060 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8002060:	4b0c      	ldr	r3, [pc, #48]	; (8002094 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8002062:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8002064:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8002066:	3104      	adds	r1, #4

08002068 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8002068:	480b      	ldr	r0, [pc, #44]	; (8002098 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800206a:	4b0c      	ldr	r3, [pc, #48]	; (800209c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800206c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800206e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8002070:	d3f6      	bcc.n	8002060 <CopyDataInit>
  ldr  r2, =_sbss
 8002072:	4a0b      	ldr	r2, [pc, #44]	; (80020a0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8002074:	e002      	b.n	800207c <LoopFillZerobss>

08002076 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8002076:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8002078:	f842 3b04 	str.w	r3, [r2], #4

0800207c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800207c:	4b09      	ldr	r3, [pc, #36]	; (80020a4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800207e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8002080:	d3f9      	bcc.n	8002076 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8002082:	f7ff ffd3 	bl	800202c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002086:	f018 fc93 	bl	801a9b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800208a:	f7fe fad9 	bl	8000640 <main>
  bx  lr    
 800208e:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8002090:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8002094:	0801ef9c 	.word	0x0801ef9c
  ldr  r0, =_sdata
 8002098:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800209c:	20000104 	.word	0x20000104
  ldr  r2, =_sbss
 80020a0:	20000104 	.word	0x20000104
  ldr  r3, = _ebss
 80020a4:	2000177c 	.word	0x2000177c

080020a8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80020a8:	e7fe      	b.n	80020a8 <ADC_IRQHandler>
	...

080020ac <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80020ac:	b580      	push	{r7, lr}
 80020ae:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80020b0:	4b0e      	ldr	r3, [pc, #56]	; (80020ec <HAL_Init+0x40>)
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	4a0d      	ldr	r2, [pc, #52]	; (80020ec <HAL_Init+0x40>)
 80020b6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80020ba:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80020bc:	4b0b      	ldr	r3, [pc, #44]	; (80020ec <HAL_Init+0x40>)
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	4a0a      	ldr	r2, [pc, #40]	; (80020ec <HAL_Init+0x40>)
 80020c2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80020c6:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80020c8:	4b08      	ldr	r3, [pc, #32]	; (80020ec <HAL_Init+0x40>)
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	4a07      	ldr	r2, [pc, #28]	; (80020ec <HAL_Init+0x40>)
 80020ce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80020d2:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80020d4:	2003      	movs	r0, #3
 80020d6:	f000 fcea 	bl	8002aae <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80020da:	2000      	movs	r0, #0
 80020dc:	f7ff fe42 	bl	8001d64 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80020e0:	f7ff fa26 	bl	8001530 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80020e4:	2300      	movs	r3, #0
}
 80020e6:	4618      	mov	r0, r3
 80020e8:	bd80      	pop	{r7, pc}
 80020ea:	bf00      	nop
 80020ec:	40023c00 	.word	0x40023c00

080020f0 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80020f0:	b480      	push	{r7}
 80020f2:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80020f4:	4b06      	ldr	r3, [pc, #24]	; (8002110 <HAL_IncTick+0x20>)
 80020f6:	781b      	ldrb	r3, [r3, #0]
 80020f8:	461a      	mov	r2, r3
 80020fa:	4b06      	ldr	r3, [pc, #24]	; (8002114 <HAL_IncTick+0x24>)
 80020fc:	681b      	ldr	r3, [r3, #0]
 80020fe:	4413      	add	r3, r2
 8002100:	4a04      	ldr	r2, [pc, #16]	; (8002114 <HAL_IncTick+0x24>)
 8002102:	6013      	str	r3, [r2, #0]
}
 8002104:	bf00      	nop
 8002106:	46bd      	mov	sp, r7
 8002108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800210c:	4770      	bx	lr
 800210e:	bf00      	nop
 8002110:	2000000c 	.word	0x2000000c
 8002114:	2000049c 	.word	0x2000049c

08002118 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002118:	b480      	push	{r7}
 800211a:	af00      	add	r7, sp, #0
  return uwTick;
 800211c:	4b03      	ldr	r3, [pc, #12]	; (800212c <HAL_GetTick+0x14>)
 800211e:	681b      	ldr	r3, [r3, #0]
}
 8002120:	4618      	mov	r0, r3
 8002122:	46bd      	mov	sp, r7
 8002124:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002128:	4770      	bx	lr
 800212a:	bf00      	nop
 800212c:	2000049c 	.word	0x2000049c

08002130 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002130:	b580      	push	{r7, lr}
 8002132:	b084      	sub	sp, #16
 8002134:	af00      	add	r7, sp, #0
 8002136:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002138:	f7ff ffee 	bl	8002118 <HAL_GetTick>
 800213c:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800213e:	687b      	ldr	r3, [r7, #4]
 8002140:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002142:	68fb      	ldr	r3, [r7, #12]
 8002144:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002148:	d005      	beq.n	8002156 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800214a:	4b0a      	ldr	r3, [pc, #40]	; (8002174 <HAL_Delay+0x44>)
 800214c:	781b      	ldrb	r3, [r3, #0]
 800214e:	461a      	mov	r2, r3
 8002150:	68fb      	ldr	r3, [r7, #12]
 8002152:	4413      	add	r3, r2
 8002154:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002156:	bf00      	nop
 8002158:	f7ff ffde 	bl	8002118 <HAL_GetTick>
 800215c:	4602      	mov	r2, r0
 800215e:	68bb      	ldr	r3, [r7, #8]
 8002160:	1ad3      	subs	r3, r2, r3
 8002162:	68fa      	ldr	r2, [r7, #12]
 8002164:	429a      	cmp	r2, r3
 8002166:	d8f7      	bhi.n	8002158 <HAL_Delay+0x28>
  {
  }
}
 8002168:	bf00      	nop
 800216a:	bf00      	nop
 800216c:	3710      	adds	r7, #16
 800216e:	46bd      	mov	sp, r7
 8002170:	bd80      	pop	{r7, pc}
 8002172:	bf00      	nop
 8002174:	2000000c 	.word	0x2000000c

08002178 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8002178:	b580      	push	{r7, lr}
 800217a:	b084      	sub	sp, #16
 800217c:	af00      	add	r7, sp, #0
 800217e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002180:	2300      	movs	r3, #0
 8002182:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	2b00      	cmp	r3, #0
 8002188:	d101      	bne.n	800218e <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 800218a:	2301      	movs	r3, #1
 800218c:	e033      	b.n	80021f6 <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002192:	2b00      	cmp	r3, #0
 8002194:	d109      	bne.n	80021aa <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002196:	6878      	ldr	r0, [r7, #4]
 8002198:	f7ff f9f2 	bl	8001580 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	2200      	movs	r2, #0
 80021a0:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 80021a2:	687b      	ldr	r3, [r7, #4]
 80021a4:	2200      	movs	r2, #0
 80021a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021ae:	f003 0310 	and.w	r3, r3, #16
 80021b2:	2b00      	cmp	r3, #0
 80021b4:	d118      	bne.n	80021e8 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021ba:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80021be:	f023 0302 	bic.w	r3, r3, #2
 80021c2:	f043 0202 	orr.w	r2, r3, #2
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 80021ca:	6878      	ldr	r0, [r7, #4]
 80021cc:	f000 faa2 	bl	8002714 <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	2200      	movs	r2, #0
 80021d4:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021da:	f023 0303 	bic.w	r3, r3, #3
 80021de:	f043 0201 	orr.w	r2, r3, #1
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	641a      	str	r2, [r3, #64]	; 0x40
 80021e6:	e001      	b.n	80021ec <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 80021e8:	2301      	movs	r3, #1
 80021ea:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	2200      	movs	r2, #0
 80021f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 80021f4:	7bfb      	ldrb	r3, [r7, #15]
}
 80021f6:	4618      	mov	r0, r3
 80021f8:	3710      	adds	r7, #16
 80021fa:	46bd      	mov	sp, r7
 80021fc:	bd80      	pop	{r7, pc}
	...

08002200 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 8002200:	b480      	push	{r7}
 8002202:	b085      	sub	sp, #20
 8002204:	af00      	add	r7, sp, #0
 8002206:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 8002208:	2300      	movs	r3, #0
 800220a:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002212:	2b01      	cmp	r3, #1
 8002214:	d101      	bne.n	800221a <HAL_ADC_Start+0x1a>
 8002216:	2302      	movs	r3, #2
 8002218:	e0a5      	b.n	8002366 <HAL_ADC_Start+0x166>
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	2201      	movs	r2, #1
 800221e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	689b      	ldr	r3, [r3, #8]
 8002228:	f003 0301 	and.w	r3, r3, #1
 800222c:	2b01      	cmp	r3, #1
 800222e:	d018      	beq.n	8002262 <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	681b      	ldr	r3, [r3, #0]
 8002234:	689a      	ldr	r2, [r3, #8]
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	f042 0201 	orr.w	r2, r2, #1
 800223e:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002240:	4b4c      	ldr	r3, [pc, #304]	; (8002374 <HAL_ADC_Start+0x174>)
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	4a4c      	ldr	r2, [pc, #304]	; (8002378 <HAL_ADC_Start+0x178>)
 8002246:	fba2 2303 	umull	r2, r3, r2, r3
 800224a:	0c9a      	lsrs	r2, r3, #18
 800224c:	4613      	mov	r3, r2
 800224e:	005b      	lsls	r3, r3, #1
 8002250:	4413      	add	r3, r2
 8002252:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8002254:	e002      	b.n	800225c <HAL_ADC_Start+0x5c>
    {
      counter--;
 8002256:	68bb      	ldr	r3, [r7, #8]
 8002258:	3b01      	subs	r3, #1
 800225a:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 800225c:	68bb      	ldr	r3, [r7, #8]
 800225e:	2b00      	cmp	r3, #0
 8002260:	d1f9      	bne.n	8002256 <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	689b      	ldr	r3, [r3, #8]
 8002268:	f003 0301 	and.w	r3, r3, #1
 800226c:	2b01      	cmp	r3, #1
 800226e:	d179      	bne.n	8002364 <HAL_ADC_Start+0x164>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002274:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8002278:	f023 0301 	bic.w	r3, r3, #1
 800227c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	685b      	ldr	r3, [r3, #4]
 800228a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800228e:	2b00      	cmp	r3, #0
 8002290:	d007      	beq.n	80022a2 <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002296:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800229a:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800229e:	687b      	ldr	r3, [r7, #4]
 80022a0:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022a6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80022aa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80022ae:	d106      	bne.n	80022be <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80022b4:	f023 0206 	bic.w	r2, r3, #6
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	645a      	str	r2, [r3, #68]	; 0x44
 80022bc:	e002      	b.n	80022c4 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	2200      	movs	r2, #0
 80022c2:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	2200      	movs	r2, #0
 80022c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80022cc:	4b2b      	ldr	r3, [pc, #172]	; (800237c <HAL_ADC_Start+0x17c>)
 80022ce:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80022d8:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 80022da:	68fb      	ldr	r3, [r7, #12]
 80022dc:	685b      	ldr	r3, [r3, #4]
 80022de:	f003 031f 	and.w	r3, r3, #31
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d12a      	bne.n	800233c <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	4a25      	ldr	r2, [pc, #148]	; (8002380 <HAL_ADC_Start+0x180>)
 80022ec:	4293      	cmp	r3, r2
 80022ee:	d015      	beq.n	800231c <HAL_ADC_Start+0x11c>
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	4a23      	ldr	r2, [pc, #140]	; (8002384 <HAL_ADC_Start+0x184>)
 80022f6:	4293      	cmp	r3, r2
 80022f8:	d105      	bne.n	8002306 <HAL_ADC_Start+0x106>
 80022fa:	4b20      	ldr	r3, [pc, #128]	; (800237c <HAL_ADC_Start+0x17c>)
 80022fc:	685b      	ldr	r3, [r3, #4]
 80022fe:	f003 031f 	and.w	r3, r3, #31
 8002302:	2b00      	cmp	r3, #0
 8002304:	d00a      	beq.n	800231c <HAL_ADC_Start+0x11c>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	4a1f      	ldr	r2, [pc, #124]	; (8002388 <HAL_ADC_Start+0x188>)
 800230c:	4293      	cmp	r3, r2
 800230e:	d129      	bne.n	8002364 <HAL_ADC_Start+0x164>
 8002310:	4b1a      	ldr	r3, [pc, #104]	; (800237c <HAL_ADC_Start+0x17c>)
 8002312:	685b      	ldr	r3, [r3, #4]
 8002314:	f003 0310 	and.w	r3, r3, #16
 8002318:	2b00      	cmp	r3, #0
 800231a:	d123      	bne.n	8002364 <HAL_ADC_Start+0x164>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	681b      	ldr	r3, [r3, #0]
 8002320:	689b      	ldr	r3, [r3, #8]
 8002322:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002326:	2b00      	cmp	r3, #0
 8002328:	d11c      	bne.n	8002364 <HAL_ADC_Start+0x164>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	689a      	ldr	r2, [r3, #8]
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8002338:	609a      	str	r2, [r3, #8]
 800233a:	e013      	b.n	8002364 <HAL_ADC_Start+0x164>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	4a0f      	ldr	r2, [pc, #60]	; (8002380 <HAL_ADC_Start+0x180>)
 8002342:	4293      	cmp	r3, r2
 8002344:	d10e      	bne.n	8002364 <HAL_ADC_Start+0x164>
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	689b      	ldr	r3, [r3, #8]
 800234c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002350:	2b00      	cmp	r3, #0
 8002352:	d107      	bne.n	8002364 <HAL_ADC_Start+0x164>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	681b      	ldr	r3, [r3, #0]
 8002358:	689a      	ldr	r2, [r3, #8]
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8002362:	609a      	str	r2, [r3, #8]
      }
    }
  }
  
  /* Return function status */
  return HAL_OK;
 8002364:	2300      	movs	r3, #0
}
 8002366:	4618      	mov	r0, r3
 8002368:	3714      	adds	r7, #20
 800236a:	46bd      	mov	sp, r7
 800236c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002370:	4770      	bx	lr
 8002372:	bf00      	nop
 8002374:	20000004 	.word	0x20000004
 8002378:	431bde83 	.word	0x431bde83
 800237c:	40012300 	.word	0x40012300
 8002380:	40012000 	.word	0x40012000
 8002384:	40012100 	.word	0x40012100
 8002388:	40012200 	.word	0x40012200

0800238c <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 800238c:	b580      	push	{r7, lr}
 800238e:	b084      	sub	sp, #16
 8002390:	af00      	add	r7, sp, #0
 8002392:	6078      	str	r0, [r7, #4]
 8002394:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 8002396:	2300      	movs	r3, #0
 8002398:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	689b      	ldr	r3, [r3, #8]
 80023a0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80023a4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80023a8:	d113      	bne.n	80023d2 <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	689b      	ldr	r3, [r3, #8]
 80023b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80023b4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80023b8:	d10b      	bne.n	80023d2 <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80023ba:	687b      	ldr	r3, [r7, #4]
 80023bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023be:	f043 0220 	orr.w	r2, r3, #32
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 80023c6:	687b      	ldr	r3, [r7, #4]
 80023c8:	2200      	movs	r2, #0
 80023ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    return HAL_ERROR;
 80023ce:	2301      	movs	r3, #1
 80023d0:	e05c      	b.n	800248c <HAL_ADC_PollForConversion+0x100>
  }

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80023d2:	f7ff fea1 	bl	8002118 <HAL_GetTick>
 80023d6:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 80023d8:	e01a      	b.n	8002410 <HAL_ADC_PollForConversion+0x84>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 80023da:	683b      	ldr	r3, [r7, #0]
 80023dc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80023e0:	d016      	beq.n	8002410 <HAL_ADC_PollForConversion+0x84>
    {
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 80023e2:	683b      	ldr	r3, [r7, #0]
 80023e4:	2b00      	cmp	r3, #0
 80023e6:	d007      	beq.n	80023f8 <HAL_ADC_PollForConversion+0x6c>
 80023e8:	f7ff fe96 	bl	8002118 <HAL_GetTick>
 80023ec:	4602      	mov	r2, r0
 80023ee:	68fb      	ldr	r3, [r7, #12]
 80023f0:	1ad3      	subs	r3, r2, r3
 80023f2:	683a      	ldr	r2, [r7, #0]
 80023f4:	429a      	cmp	r2, r3
 80023f6:	d20b      	bcs.n	8002410 <HAL_ADC_PollForConversion+0x84>
      {
        /* Update ADC state machine to timeout */
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023fc:	f043 0204 	orr.w	r2, r3, #4
 8002400:	687b      	ldr	r3, [r7, #4]
 8002402:	641a      	str	r2, [r3, #64]	; 0x40
        
        /* Process unlocked */
        __HAL_UNLOCK(hadc);
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	2200      	movs	r2, #0
 8002408:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
        
        return HAL_TIMEOUT;
 800240c:	2303      	movs	r3, #3
 800240e:	e03d      	b.n	800248c <HAL_ADC_PollForConversion+0x100>
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	f003 0302 	and.w	r3, r3, #2
 800241a:	2b02      	cmp	r3, #2
 800241c:	d1dd      	bne.n	80023da <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }
  
  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 800241e:	687b      	ldr	r3, [r7, #4]
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	f06f 0212 	mvn.w	r2, #18
 8002426:	601a      	str	r2, [r3, #0]
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800242c:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	641a      	str	r2, [r3, #64]	; 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	689b      	ldr	r3, [r3, #8]
 800243a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800243e:	2b00      	cmp	r3, #0
 8002440:	d123      	bne.n	800248a <HAL_ADC_PollForConversion+0xfe>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	7e1b      	ldrb	r3, [r3, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002446:	2b00      	cmp	r3, #0
 8002448:	d11f      	bne.n	800248a <HAL_ADC_PollForConversion+0xfe>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 800244a:	687b      	ldr	r3, [r7, #4]
 800244c:	681b      	ldr	r3, [r3, #0]
 800244e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002450:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002454:	2b00      	cmp	r3, #0
 8002456:	d006      	beq.n	8002466 <HAL_ADC_PollForConversion+0xda>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	681b      	ldr	r3, [r3, #0]
 800245c:	689b      	ldr	r3, [r3, #8]
 800245e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002462:	2b00      	cmp	r3, #0
 8002464:	d111      	bne.n	800248a <HAL_ADC_PollForConversion+0xfe>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800246a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	641a      	str	r2, [r3, #64]	; 0x40
    
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002472:	687b      	ldr	r3, [r7, #4]
 8002474:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002476:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800247a:	2b00      	cmp	r3, #0
 800247c:	d105      	bne.n	800248a <HAL_ADC_PollForConversion+0xfe>
    { 
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002482:	f043 0201 	orr.w	r2, r3, #1
 8002486:	687b      	ldr	r3, [r7, #4]
 8002488:	641a      	str	r2, [r3, #64]	; 0x40
    }
  }
  
  /* Return ADC state */
  return HAL_OK;
 800248a:	2300      	movs	r3, #0
}
 800248c:	4618      	mov	r0, r3
 800248e:	3710      	adds	r7, #16
 8002490:	46bd      	mov	sp, r7
 8002492:	bd80      	pop	{r7, pc}

08002494 <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 8002494:	b480      	push	{r7}
 8002496:	b083      	sub	sp, #12
 8002498:	af00      	add	r7, sp, #0
 800249a:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 80024a2:	4618      	mov	r0, r3
 80024a4:	370c      	adds	r7, #12
 80024a6:	46bd      	mov	sp, r7
 80024a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024ac:	4770      	bx	lr
	...

080024b0 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 80024b0:	b480      	push	{r7}
 80024b2:	b085      	sub	sp, #20
 80024b4:	af00      	add	r7, sp, #0
 80024b6:	6078      	str	r0, [r7, #4]
 80024b8:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 80024ba:	2300      	movs	r3, #0
 80024bc:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80024c4:	2b01      	cmp	r3, #1
 80024c6:	d101      	bne.n	80024cc <HAL_ADC_ConfigChannel+0x1c>
 80024c8:	2302      	movs	r3, #2
 80024ca:	e113      	b.n	80026f4 <HAL_ADC_ConfigChannel+0x244>
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	2201      	movs	r2, #1
 80024d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 80024d4:	683b      	ldr	r3, [r7, #0]
 80024d6:	681b      	ldr	r3, [r3, #0]
 80024d8:	2b09      	cmp	r3, #9
 80024da:	d925      	bls.n	8002528 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	68d9      	ldr	r1, [r3, #12]
 80024e2:	683b      	ldr	r3, [r7, #0]
 80024e4:	681b      	ldr	r3, [r3, #0]
 80024e6:	b29b      	uxth	r3, r3
 80024e8:	461a      	mov	r2, r3
 80024ea:	4613      	mov	r3, r2
 80024ec:	005b      	lsls	r3, r3, #1
 80024ee:	4413      	add	r3, r2
 80024f0:	3b1e      	subs	r3, #30
 80024f2:	2207      	movs	r2, #7
 80024f4:	fa02 f303 	lsl.w	r3, r2, r3
 80024f8:	43da      	mvns	r2, r3
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	400a      	ands	r2, r1
 8002500:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	681b      	ldr	r3, [r3, #0]
 8002506:	68d9      	ldr	r1, [r3, #12]
 8002508:	683b      	ldr	r3, [r7, #0]
 800250a:	689a      	ldr	r2, [r3, #8]
 800250c:	683b      	ldr	r3, [r7, #0]
 800250e:	681b      	ldr	r3, [r3, #0]
 8002510:	b29b      	uxth	r3, r3
 8002512:	4618      	mov	r0, r3
 8002514:	4603      	mov	r3, r0
 8002516:	005b      	lsls	r3, r3, #1
 8002518:	4403      	add	r3, r0
 800251a:	3b1e      	subs	r3, #30
 800251c:	409a      	lsls	r2, r3
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	430a      	orrs	r2, r1
 8002524:	60da      	str	r2, [r3, #12]
 8002526:	e022      	b.n	800256e <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8002528:	687b      	ldr	r3, [r7, #4]
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	6919      	ldr	r1, [r3, #16]
 800252e:	683b      	ldr	r3, [r7, #0]
 8002530:	681b      	ldr	r3, [r3, #0]
 8002532:	b29b      	uxth	r3, r3
 8002534:	461a      	mov	r2, r3
 8002536:	4613      	mov	r3, r2
 8002538:	005b      	lsls	r3, r3, #1
 800253a:	4413      	add	r3, r2
 800253c:	2207      	movs	r2, #7
 800253e:	fa02 f303 	lsl.w	r3, r2, r3
 8002542:	43da      	mvns	r2, r3
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	400a      	ands	r2, r1
 800254a:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	681b      	ldr	r3, [r3, #0]
 8002550:	6919      	ldr	r1, [r3, #16]
 8002552:	683b      	ldr	r3, [r7, #0]
 8002554:	689a      	ldr	r2, [r3, #8]
 8002556:	683b      	ldr	r3, [r7, #0]
 8002558:	681b      	ldr	r3, [r3, #0]
 800255a:	b29b      	uxth	r3, r3
 800255c:	4618      	mov	r0, r3
 800255e:	4603      	mov	r3, r0
 8002560:	005b      	lsls	r3, r3, #1
 8002562:	4403      	add	r3, r0
 8002564:	409a      	lsls	r2, r3
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	430a      	orrs	r2, r1
 800256c:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 800256e:	683b      	ldr	r3, [r7, #0]
 8002570:	685b      	ldr	r3, [r3, #4]
 8002572:	2b06      	cmp	r3, #6
 8002574:	d824      	bhi.n	80025c0 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800257c:	683b      	ldr	r3, [r7, #0]
 800257e:	685a      	ldr	r2, [r3, #4]
 8002580:	4613      	mov	r3, r2
 8002582:	009b      	lsls	r3, r3, #2
 8002584:	4413      	add	r3, r2
 8002586:	3b05      	subs	r3, #5
 8002588:	221f      	movs	r2, #31
 800258a:	fa02 f303 	lsl.w	r3, r2, r3
 800258e:	43da      	mvns	r2, r3
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	400a      	ands	r2, r1
 8002596:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800259e:	683b      	ldr	r3, [r7, #0]
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	b29b      	uxth	r3, r3
 80025a4:	4618      	mov	r0, r3
 80025a6:	683b      	ldr	r3, [r7, #0]
 80025a8:	685a      	ldr	r2, [r3, #4]
 80025aa:	4613      	mov	r3, r2
 80025ac:	009b      	lsls	r3, r3, #2
 80025ae:	4413      	add	r3, r2
 80025b0:	3b05      	subs	r3, #5
 80025b2:	fa00 f203 	lsl.w	r2, r0, r3
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	430a      	orrs	r2, r1
 80025bc:	635a      	str	r2, [r3, #52]	; 0x34
 80025be:	e04c      	b.n	800265a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 80025c0:	683b      	ldr	r3, [r7, #0]
 80025c2:	685b      	ldr	r3, [r3, #4]
 80025c4:	2b0c      	cmp	r3, #12
 80025c6:	d824      	bhi.n	8002612 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80025ce:	683b      	ldr	r3, [r7, #0]
 80025d0:	685a      	ldr	r2, [r3, #4]
 80025d2:	4613      	mov	r3, r2
 80025d4:	009b      	lsls	r3, r3, #2
 80025d6:	4413      	add	r3, r2
 80025d8:	3b23      	subs	r3, #35	; 0x23
 80025da:	221f      	movs	r2, #31
 80025dc:	fa02 f303 	lsl.w	r3, r2, r3
 80025e0:	43da      	mvns	r2, r3
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	400a      	ands	r2, r1
 80025e8:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80025f0:	683b      	ldr	r3, [r7, #0]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	b29b      	uxth	r3, r3
 80025f6:	4618      	mov	r0, r3
 80025f8:	683b      	ldr	r3, [r7, #0]
 80025fa:	685a      	ldr	r2, [r3, #4]
 80025fc:	4613      	mov	r3, r2
 80025fe:	009b      	lsls	r3, r3, #2
 8002600:	4413      	add	r3, r2
 8002602:	3b23      	subs	r3, #35	; 0x23
 8002604:	fa00 f203 	lsl.w	r2, r0, r3
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	681b      	ldr	r3, [r3, #0]
 800260c:	430a      	orrs	r2, r1
 800260e:	631a      	str	r2, [r3, #48]	; 0x30
 8002610:	e023      	b.n	800265a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	681b      	ldr	r3, [r3, #0]
 8002616:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002618:	683b      	ldr	r3, [r7, #0]
 800261a:	685a      	ldr	r2, [r3, #4]
 800261c:	4613      	mov	r3, r2
 800261e:	009b      	lsls	r3, r3, #2
 8002620:	4413      	add	r3, r2
 8002622:	3b41      	subs	r3, #65	; 0x41
 8002624:	221f      	movs	r2, #31
 8002626:	fa02 f303 	lsl.w	r3, r2, r3
 800262a:	43da      	mvns	r2, r3
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	400a      	ands	r2, r1
 8002632:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	681b      	ldr	r3, [r3, #0]
 8002638:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800263a:	683b      	ldr	r3, [r7, #0]
 800263c:	681b      	ldr	r3, [r3, #0]
 800263e:	b29b      	uxth	r3, r3
 8002640:	4618      	mov	r0, r3
 8002642:	683b      	ldr	r3, [r7, #0]
 8002644:	685a      	ldr	r2, [r3, #4]
 8002646:	4613      	mov	r3, r2
 8002648:	009b      	lsls	r3, r3, #2
 800264a:	4413      	add	r3, r2
 800264c:	3b41      	subs	r3, #65	; 0x41
 800264e:	fa00 f203 	lsl.w	r2, r0, r3
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	430a      	orrs	r2, r1
 8002658:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800265a:	4b29      	ldr	r3, [pc, #164]	; (8002700 <HAL_ADC_ConfigChannel+0x250>)
 800265c:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	681b      	ldr	r3, [r3, #0]
 8002662:	4a28      	ldr	r2, [pc, #160]	; (8002704 <HAL_ADC_ConfigChannel+0x254>)
 8002664:	4293      	cmp	r3, r2
 8002666:	d10f      	bne.n	8002688 <HAL_ADC_ConfigChannel+0x1d8>
 8002668:	683b      	ldr	r3, [r7, #0]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	2b12      	cmp	r3, #18
 800266e:	d10b      	bne.n	8002688 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/    
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8002670:	68fb      	ldr	r3, [r7, #12]
 8002672:	685b      	ldr	r3, [r3, #4]
 8002674:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8002678:	68fb      	ldr	r3, [r7, #12]
 800267a:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800267c:	68fb      	ldr	r3, [r7, #12]
 800267e:	685b      	ldr	r3, [r3, #4]
 8002680:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8002684:	68fb      	ldr	r3, [r7, #12]
 8002686:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	4a1d      	ldr	r2, [pc, #116]	; (8002704 <HAL_ADC_ConfigChannel+0x254>)
 800268e:	4293      	cmp	r3, r2
 8002690:	d12b      	bne.n	80026ea <HAL_ADC_ConfigChannel+0x23a>
 8002692:	683b      	ldr	r3, [r7, #0]
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	4a1c      	ldr	r2, [pc, #112]	; (8002708 <HAL_ADC_ConfigChannel+0x258>)
 8002698:	4293      	cmp	r3, r2
 800269a:	d003      	beq.n	80026a4 <HAL_ADC_ConfigChannel+0x1f4>
 800269c:	683b      	ldr	r3, [r7, #0]
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	2b11      	cmp	r3, #17
 80026a2:	d122      	bne.n	80026ea <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 80026a4:	68fb      	ldr	r3, [r7, #12]
 80026a6:	685b      	ldr	r3, [r3, #4]
 80026a8:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 80026ac:	68fb      	ldr	r3, [r7, #12]
 80026ae:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80026b0:	68fb      	ldr	r3, [r7, #12]
 80026b2:	685b      	ldr	r3, [r3, #4]
 80026b4:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80026b8:	68fb      	ldr	r3, [r7, #12]
 80026ba:	605a      	str	r2, [r3, #4]
    
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 80026bc:	683b      	ldr	r3, [r7, #0]
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	4a11      	ldr	r2, [pc, #68]	; (8002708 <HAL_ADC_ConfigChannel+0x258>)
 80026c2:	4293      	cmp	r3, r2
 80026c4:	d111      	bne.n	80026ea <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80026c6:	4b11      	ldr	r3, [pc, #68]	; (800270c <HAL_ADC_ConfigChannel+0x25c>)
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	4a11      	ldr	r2, [pc, #68]	; (8002710 <HAL_ADC_ConfigChannel+0x260>)
 80026cc:	fba2 2303 	umull	r2, r3, r2, r3
 80026d0:	0c9a      	lsrs	r2, r3, #18
 80026d2:	4613      	mov	r3, r2
 80026d4:	009b      	lsls	r3, r3, #2
 80026d6:	4413      	add	r3, r2
 80026d8:	005b      	lsls	r3, r3, #1
 80026da:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 80026dc:	e002      	b.n	80026e4 <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 80026de:	68bb      	ldr	r3, [r7, #8]
 80026e0:	3b01      	subs	r3, #1
 80026e2:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 80026e4:	68bb      	ldr	r3, [r7, #8]
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d1f9      	bne.n	80026de <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	2200      	movs	r2, #0
 80026ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 80026f2:	2300      	movs	r3, #0
}
 80026f4:	4618      	mov	r0, r3
 80026f6:	3714      	adds	r7, #20
 80026f8:	46bd      	mov	sp, r7
 80026fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026fe:	4770      	bx	lr
 8002700:	40012300 	.word	0x40012300
 8002704:	40012000 	.word	0x40012000
 8002708:	10000012 	.word	0x10000012
 800270c:	20000004 	.word	0x20000004
 8002710:	431bde83 	.word	0x431bde83

08002714 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 8002714:	b480      	push	{r7}
 8002716:	b085      	sub	sp, #20
 8002718:	af00      	add	r7, sp, #0
 800271a:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800271c:	4b79      	ldr	r3, [pc, #484]	; (8002904 <ADC_Init+0x1f0>)
 800271e:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8002720:	68fb      	ldr	r3, [r7, #12]
 8002722:	685b      	ldr	r3, [r3, #4]
 8002724:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8002728:	68fb      	ldr	r3, [r7, #12]
 800272a:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800272c:	68fb      	ldr	r3, [r7, #12]
 800272e:	685a      	ldr	r2, [r3, #4]
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	685b      	ldr	r3, [r3, #4]
 8002734:	431a      	orrs	r2, r3
 8002736:	68fb      	ldr	r3, [r7, #12]
 8002738:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	681b      	ldr	r3, [r3, #0]
 800273e:	685a      	ldr	r2, [r3, #4]
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002748:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	681b      	ldr	r3, [r3, #0]
 800274e:	6859      	ldr	r1, [r3, #4]
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	691b      	ldr	r3, [r3, #16]
 8002754:	021a      	lsls	r2, r3, #8
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	681b      	ldr	r3, [r3, #0]
 800275a:	430a      	orrs	r2, r1
 800275c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	681b      	ldr	r3, [r3, #0]
 8002762:	685a      	ldr	r2, [r3, #4]
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800276c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	6859      	ldr	r1, [r3, #4]
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	689a      	ldr	r2, [r3, #8]
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	430a      	orrs	r2, r1
 800277e:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	689a      	ldr	r2, [r3, #8]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	681b      	ldr	r3, [r3, #0]
 800278a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800278e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	6899      	ldr	r1, [r3, #8]
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	68da      	ldr	r2, [r3, #12]
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	430a      	orrs	r2, r1
 80027a0:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80027a6:	4a58      	ldr	r2, [pc, #352]	; (8002908 <ADC_Init+0x1f4>)
 80027a8:	4293      	cmp	r3, r2
 80027aa:	d022      	beq.n	80027f2 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	689a      	ldr	r2, [r3, #8]
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	681b      	ldr	r3, [r3, #0]
 80027b6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80027ba:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	681b      	ldr	r3, [r3, #0]
 80027c0:	6899      	ldr	r1, [r3, #8]
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	430a      	orrs	r2, r1
 80027cc:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80027ce:	687b      	ldr	r3, [r7, #4]
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	689a      	ldr	r2, [r3, #8]
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80027dc:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	681b      	ldr	r3, [r3, #0]
 80027e2:	6899      	ldr	r1, [r3, #8]
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	430a      	orrs	r2, r1
 80027ee:	609a      	str	r2, [r3, #8]
 80027f0:	e00f      	b.n	8002812 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	689a      	ldr	r2, [r3, #8]
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	681b      	ldr	r3, [r3, #0]
 80027fc:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8002800:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	681b      	ldr	r3, [r3, #0]
 8002806:	689a      	ldr	r2, [r3, #8]
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	681b      	ldr	r3, [r3, #0]
 800280c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8002810:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	681b      	ldr	r3, [r3, #0]
 8002816:	689a      	ldr	r2, [r3, #8]
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	f022 0202 	bic.w	r2, r2, #2
 8002820:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	681b      	ldr	r3, [r3, #0]
 8002826:	6899      	ldr	r1, [r3, #8]
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	7e1b      	ldrb	r3, [r3, #24]
 800282c:	005a      	lsls	r2, r3, #1
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	681b      	ldr	r3, [r3, #0]
 8002832:	430a      	orrs	r2, r1
 8002834:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8002836:	687b      	ldr	r3, [r7, #4]
 8002838:	f893 3020 	ldrb.w	r3, [r3, #32]
 800283c:	2b00      	cmp	r3, #0
 800283e:	d01b      	beq.n	8002878 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	681b      	ldr	r3, [r3, #0]
 8002844:	685a      	ldr	r2, [r3, #4]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800284e:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	685a      	ldr	r2, [r3, #4]
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800285e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	681b      	ldr	r3, [r3, #0]
 8002864:	6859      	ldr	r1, [r3, #4]
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800286a:	3b01      	subs	r3, #1
 800286c:	035a      	lsls	r2, r3, #13
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	430a      	orrs	r2, r1
 8002874:	605a      	str	r2, [r3, #4]
 8002876:	e007      	b.n	8002888 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	681b      	ldr	r3, [r3, #0]
 800287c:	685a      	ldr	r2, [r3, #4]
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	681b      	ldr	r3, [r3, #0]
 8002882:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002886:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8002896:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	69db      	ldr	r3, [r3, #28]
 80028a2:	3b01      	subs	r3, #1
 80028a4:	051a      	lsls	r2, r3, #20
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	430a      	orrs	r2, r1
 80028ac:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	689a      	ldr	r2, [r3, #8]
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80028bc:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	681b      	ldr	r3, [r3, #0]
 80028c2:	6899      	ldr	r1, [r3, #8]
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80028ca:	025a      	lsls	r2, r3, #9
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	430a      	orrs	r2, r1
 80028d2:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	689a      	ldr	r2, [r3, #8]
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	681b      	ldr	r3, [r3, #0]
 80028de:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80028e2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	6899      	ldr	r1, [r3, #8]
 80028ea:	687b      	ldr	r3, [r7, #4]
 80028ec:	695b      	ldr	r3, [r3, #20]
 80028ee:	029a      	lsls	r2, r3, #10
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	430a      	orrs	r2, r1
 80028f6:	609a      	str	r2, [r3, #8]
}
 80028f8:	bf00      	nop
 80028fa:	3714      	adds	r7, #20
 80028fc:	46bd      	mov	sp, r7
 80028fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002902:	4770      	bx	lr
 8002904:	40012300 	.word	0x40012300
 8002908:	0f000001 	.word	0x0f000001

0800290c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800290c:	b480      	push	{r7}
 800290e:	b085      	sub	sp, #20
 8002910:	af00      	add	r7, sp, #0
 8002912:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8002914:	687b      	ldr	r3, [r7, #4]
 8002916:	f003 0307 	and.w	r3, r3, #7
 800291a:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800291c:	4b0c      	ldr	r3, [pc, #48]	; (8002950 <__NVIC_SetPriorityGrouping+0x44>)
 800291e:	68db      	ldr	r3, [r3, #12]
 8002920:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8002922:	68ba      	ldr	r2, [r7, #8]
 8002924:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002928:	4013      	ands	r3, r2
 800292a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800292c:	68fb      	ldr	r3, [r7, #12]
 800292e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8002930:	68bb      	ldr	r3, [r7, #8]
 8002932:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8002934:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002938:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800293c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800293e:	4a04      	ldr	r2, [pc, #16]	; (8002950 <__NVIC_SetPriorityGrouping+0x44>)
 8002940:	68bb      	ldr	r3, [r7, #8]
 8002942:	60d3      	str	r3, [r2, #12]
}
 8002944:	bf00      	nop
 8002946:	3714      	adds	r7, #20
 8002948:	46bd      	mov	sp, r7
 800294a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800294e:	4770      	bx	lr
 8002950:	e000ed00 	.word	0xe000ed00

08002954 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8002954:	b480      	push	{r7}
 8002956:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8002958:	4b04      	ldr	r3, [pc, #16]	; (800296c <__NVIC_GetPriorityGrouping+0x18>)
 800295a:	68db      	ldr	r3, [r3, #12]
 800295c:	0a1b      	lsrs	r3, r3, #8
 800295e:	f003 0307 	and.w	r3, r3, #7
}
 8002962:	4618      	mov	r0, r3
 8002964:	46bd      	mov	sp, r7
 8002966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800296a:	4770      	bx	lr
 800296c:	e000ed00 	.word	0xe000ed00

08002970 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002970:	b480      	push	{r7}
 8002972:	b083      	sub	sp, #12
 8002974:	af00      	add	r7, sp, #0
 8002976:	4603      	mov	r3, r0
 8002978:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800297a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800297e:	2b00      	cmp	r3, #0
 8002980:	db0b      	blt.n	800299a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002982:	79fb      	ldrb	r3, [r7, #7]
 8002984:	f003 021f 	and.w	r2, r3, #31
 8002988:	4907      	ldr	r1, [pc, #28]	; (80029a8 <__NVIC_EnableIRQ+0x38>)
 800298a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800298e:	095b      	lsrs	r3, r3, #5
 8002990:	2001      	movs	r0, #1
 8002992:	fa00 f202 	lsl.w	r2, r0, r2
 8002996:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800299a:	bf00      	nop
 800299c:	370c      	adds	r7, #12
 800299e:	46bd      	mov	sp, r7
 80029a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029a4:	4770      	bx	lr
 80029a6:	bf00      	nop
 80029a8:	e000e100 	.word	0xe000e100

080029ac <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80029ac:	b480      	push	{r7}
 80029ae:	b083      	sub	sp, #12
 80029b0:	af00      	add	r7, sp, #0
 80029b2:	4603      	mov	r3, r0
 80029b4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80029b6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029ba:	2b00      	cmp	r3, #0
 80029bc:	db12      	blt.n	80029e4 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80029be:	79fb      	ldrb	r3, [r7, #7]
 80029c0:	f003 021f 	and.w	r2, r3, #31
 80029c4:	490a      	ldr	r1, [pc, #40]	; (80029f0 <__NVIC_DisableIRQ+0x44>)
 80029c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80029ca:	095b      	lsrs	r3, r3, #5
 80029cc:	2001      	movs	r0, #1
 80029ce:	fa00 f202 	lsl.w	r2, r0, r2
 80029d2:	3320      	adds	r3, #32
 80029d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80029d8:	f3bf 8f4f 	dsb	sy
}
 80029dc:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80029de:	f3bf 8f6f 	isb	sy
}
 80029e2:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 80029e4:	bf00      	nop
 80029e6:	370c      	adds	r7, #12
 80029e8:	46bd      	mov	sp, r7
 80029ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ee:	4770      	bx	lr
 80029f0:	e000e100 	.word	0xe000e100

080029f4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80029f4:	b480      	push	{r7}
 80029f6:	b083      	sub	sp, #12
 80029f8:	af00      	add	r7, sp, #0
 80029fa:	4603      	mov	r3, r0
 80029fc:	6039      	str	r1, [r7, #0]
 80029fe:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002a00:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a04:	2b00      	cmp	r3, #0
 8002a06:	db0a      	blt.n	8002a1e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002a08:	683b      	ldr	r3, [r7, #0]
 8002a0a:	b2da      	uxtb	r2, r3
 8002a0c:	490c      	ldr	r1, [pc, #48]	; (8002a40 <__NVIC_SetPriority+0x4c>)
 8002a0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002a12:	0112      	lsls	r2, r2, #4
 8002a14:	b2d2      	uxtb	r2, r2
 8002a16:	440b      	add	r3, r1
 8002a18:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8002a1c:	e00a      	b.n	8002a34 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002a1e:	683b      	ldr	r3, [r7, #0]
 8002a20:	b2da      	uxtb	r2, r3
 8002a22:	4908      	ldr	r1, [pc, #32]	; (8002a44 <__NVIC_SetPriority+0x50>)
 8002a24:	79fb      	ldrb	r3, [r7, #7]
 8002a26:	f003 030f 	and.w	r3, r3, #15
 8002a2a:	3b04      	subs	r3, #4
 8002a2c:	0112      	lsls	r2, r2, #4
 8002a2e:	b2d2      	uxtb	r2, r2
 8002a30:	440b      	add	r3, r1
 8002a32:	761a      	strb	r2, [r3, #24]
}
 8002a34:	bf00      	nop
 8002a36:	370c      	adds	r7, #12
 8002a38:	46bd      	mov	sp, r7
 8002a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a3e:	4770      	bx	lr
 8002a40:	e000e100 	.word	0xe000e100
 8002a44:	e000ed00 	.word	0xe000ed00

08002a48 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002a48:	b480      	push	{r7}
 8002a4a:	b089      	sub	sp, #36	; 0x24
 8002a4c:	af00      	add	r7, sp, #0
 8002a4e:	60f8      	str	r0, [r7, #12]
 8002a50:	60b9      	str	r1, [r7, #8]
 8002a52:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8002a54:	68fb      	ldr	r3, [r7, #12]
 8002a56:	f003 0307 	and.w	r3, r3, #7
 8002a5a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8002a5c:	69fb      	ldr	r3, [r7, #28]
 8002a5e:	f1c3 0307 	rsb	r3, r3, #7
 8002a62:	2b04      	cmp	r3, #4
 8002a64:	bf28      	it	cs
 8002a66:	2304      	movcs	r3, #4
 8002a68:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8002a6a:	69fb      	ldr	r3, [r7, #28]
 8002a6c:	3304      	adds	r3, #4
 8002a6e:	2b06      	cmp	r3, #6
 8002a70:	d902      	bls.n	8002a78 <NVIC_EncodePriority+0x30>
 8002a72:	69fb      	ldr	r3, [r7, #28]
 8002a74:	3b03      	subs	r3, #3
 8002a76:	e000      	b.n	8002a7a <NVIC_EncodePriority+0x32>
 8002a78:	2300      	movs	r3, #0
 8002a7a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002a7c:	f04f 32ff 	mov.w	r2, #4294967295
 8002a80:	69bb      	ldr	r3, [r7, #24]
 8002a82:	fa02 f303 	lsl.w	r3, r2, r3
 8002a86:	43da      	mvns	r2, r3
 8002a88:	68bb      	ldr	r3, [r7, #8]
 8002a8a:	401a      	ands	r2, r3
 8002a8c:	697b      	ldr	r3, [r7, #20]
 8002a8e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002a90:	f04f 31ff 	mov.w	r1, #4294967295
 8002a94:	697b      	ldr	r3, [r7, #20]
 8002a96:	fa01 f303 	lsl.w	r3, r1, r3
 8002a9a:	43d9      	mvns	r1, r3
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002aa0:	4313      	orrs	r3, r2
         );
}
 8002aa2:	4618      	mov	r0, r3
 8002aa4:	3724      	adds	r7, #36	; 0x24
 8002aa6:	46bd      	mov	sp, r7
 8002aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aac:	4770      	bx	lr

08002aae <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002aae:	b580      	push	{r7, lr}
 8002ab0:	b082      	sub	sp, #8
 8002ab2:	af00      	add	r7, sp, #0
 8002ab4:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8002ab6:	6878      	ldr	r0, [r7, #4]
 8002ab8:	f7ff ff28 	bl	800290c <__NVIC_SetPriorityGrouping>
}
 8002abc:	bf00      	nop
 8002abe:	3708      	adds	r7, #8
 8002ac0:	46bd      	mov	sp, r7
 8002ac2:	bd80      	pop	{r7, pc}

08002ac4 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002ac4:	b580      	push	{r7, lr}
 8002ac6:	b086      	sub	sp, #24
 8002ac8:	af00      	add	r7, sp, #0
 8002aca:	4603      	mov	r3, r0
 8002acc:	60b9      	str	r1, [r7, #8]
 8002ace:	607a      	str	r2, [r7, #4]
 8002ad0:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8002ad6:	f7ff ff3d 	bl	8002954 <__NVIC_GetPriorityGrouping>
 8002ada:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8002adc:	687a      	ldr	r2, [r7, #4]
 8002ade:	68b9      	ldr	r1, [r7, #8]
 8002ae0:	6978      	ldr	r0, [r7, #20]
 8002ae2:	f7ff ffb1 	bl	8002a48 <NVIC_EncodePriority>
 8002ae6:	4602      	mov	r2, r0
 8002ae8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002aec:	4611      	mov	r1, r2
 8002aee:	4618      	mov	r0, r3
 8002af0:	f7ff ff80 	bl	80029f4 <__NVIC_SetPriority>
}
 8002af4:	bf00      	nop
 8002af6:	3718      	adds	r7, #24
 8002af8:	46bd      	mov	sp, r7
 8002afa:	bd80      	pop	{r7, pc}

08002afc <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002afc:	b580      	push	{r7, lr}
 8002afe:	b082      	sub	sp, #8
 8002b00:	af00      	add	r7, sp, #0
 8002b02:	4603      	mov	r3, r0
 8002b04:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8002b06:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	f7ff ff30 	bl	8002970 <__NVIC_EnableIRQ>
}
 8002b10:	bf00      	nop
 8002b12:	3708      	adds	r7, #8
 8002b14:	46bd      	mov	sp, r7
 8002b16:	bd80      	pop	{r7, pc}

08002b18 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8002b18:	b580      	push	{r7, lr}
 8002b1a:	b082      	sub	sp, #8
 8002b1c:	af00      	add	r7, sp, #0
 8002b1e:	4603      	mov	r3, r0
 8002b20:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 8002b22:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b26:	4618      	mov	r0, r3
 8002b28:	f7ff ff40 	bl	80029ac <__NVIC_DisableIRQ>
}
 8002b2c:	bf00      	nop
 8002b2e:	3708      	adds	r7, #8
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bd80      	pop	{r7, pc}

08002b34 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8002b34:	b580      	push	{r7, lr}
 8002b36:	b082      	sub	sp, #8
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	d101      	bne.n	8002b46 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8002b42:	2301      	movs	r3, #1
 8002b44:	e00e      	b.n	8002b64 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	795b      	ldrb	r3, [r3, #5]
 8002b4a:	b2db      	uxtb	r3, r3
 8002b4c:	2b00      	cmp	r3, #0
 8002b4e:	d105      	bne.n	8002b5c <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	2200      	movs	r2, #0
 8002b54:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8002b56:	6878      	ldr	r0, [r7, #4]
 8002b58:	f7fe fd56 	bl	8001608 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	2201      	movs	r2, #1
 8002b60:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8002b62:	2300      	movs	r3, #0
}
 8002b64:	4618      	mov	r0, r3
 8002b66:	3708      	adds	r7, #8
 8002b68:	46bd      	mov	sp, r7
 8002b6a:	bd80      	pop	{r7, pc}

08002b6c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8002b6c:	b580      	push	{r7, lr}
 8002b6e:	b082      	sub	sp, #8
 8002b70:	af00      	add	r7, sp, #0
 8002b72:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8002b74:	687b      	ldr	r3, [r7, #4]
 8002b76:	2b00      	cmp	r3, #0
 8002b78:	d101      	bne.n	8002b7e <HAL_DMA2D_Init+0x12>
  {
     return HAL_ERROR;
 8002b7a:	2301      	movs	r3, #1
 8002b7c:	e03b      	b.n	8002bf6 <HAL_DMA2D_Init+0x8a>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002b84:	b2db      	uxtb	r3, r3
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d106      	bne.n	8002b98 <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	2200      	movs	r2, #0
 8002b8e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8002b92:	6878      	ldr	r0, [r7, #4]
 8002b94:	f7fe fd5a 	bl	800164c <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	2202      	movs	r2, #2
 8002b9c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	681b      	ldr	r3, [r3, #0]
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8002baa:	687b      	ldr	r3, [r7, #4]
 8002bac:	685a      	ldr	r2, [r3, #4]
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	681b      	ldr	r3, [r3, #0]
 8002bb2:	430a      	orrs	r2, r1
 8002bb4:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002bbc:	f023 0107 	bic.w	r1, r3, #7
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	689a      	ldr	r2, [r3, #8]
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	430a      	orrs	r2, r1
 8002bca:	635a      	str	r2, [r3, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bd2:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8002bd6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8002bda:	687a      	ldr	r2, [r7, #4]
 8002bdc:	68d1      	ldr	r1, [r2, #12]
 8002bde:	687a      	ldr	r2, [r7, #4]
 8002be0:	6812      	ldr	r2, [r2, #0]
 8002be2:	430b      	orrs	r3, r1
 8002be4:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	2200      	movs	r2, #0
 8002bea:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	2201      	movs	r2, #1
 8002bf0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  return HAL_OK;
 8002bf4:	2300      	movs	r3, #0
}
 8002bf6:	4618      	mov	r0, r3
 8002bf8:	3708      	adds	r7, #8
 8002bfa:	46bd      	mov	sp, r7
 8002bfc:	bd80      	pop	{r7, pc}
	...

08002c00 <HAL_DMA2D_DeInit>:
  *                 the configuration information for the DMA2D.
  * @retval None
  */

HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
{
 8002c00:	b580      	push	{r7, lr}
 8002c02:	b082      	sub	sp, #8
 8002c04:	af00      	add	r7, sp, #0
 8002c06:	6078      	str	r0, [r7, #4]

  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	d101      	bne.n	8002c12 <HAL_DMA2D_DeInit+0x12>
  {
     return HAL_ERROR;
 8002c0e:	2301      	movs	r3, #1
 8002c10:	e05f      	b.n	8002cd2 <HAL_DMA2D_DeInit+0xd2>
  }

  /* Before aborting any DMA2D transfer or CLUT loading, check
     first whether or not DMA2D clock is enabled */
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 8002c12:	4b32      	ldr	r3, [pc, #200]	; (8002cdc <HAL_DMA2D_DeInit+0xdc>)
 8002c14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c16:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d02e      	beq.n	8002c7c <HAL_DMA2D_DeInit+0x7c>
  {
    /* Abort DMA2D transfer if any */
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	f003 0301 	and.w	r3, r3, #1
 8002c28:	2b01      	cmp	r3, #1
 8002c2a:	d107      	bne.n	8002c3c <HAL_DMA2D_DeInit+0x3c>
    {
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8002c2c:	6878      	ldr	r0, [r7, #4]
 8002c2e:	f000 f8c1 	bl	8002db4 <HAL_DMA2D_Abort>
 8002c32:	4603      	mov	r3, r0
 8002c34:	2b00      	cmp	r3, #0
 8002c36:	d021      	beq.n	8002c7c <HAL_DMA2D_DeInit+0x7c>
      {
        /* Issue when aborting DMA2D transfer */
        return HAL_ERROR;
 8002c38:	2301      	movs	r3, #1
 8002c3a:	e04a      	b.n	8002cd2 <HAL_DMA2D_DeInit+0xd2>
      }
    }
    else
    {
      /* Abort background CLUT loading if any */
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	681b      	ldr	r3, [r3, #0]
 8002c40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c42:	f003 0320 	and.w	r3, r3, #32
 8002c46:	2b20      	cmp	r3, #32
 8002c48:	d108      	bne.n	8002c5c <HAL_DMA2D_DeInit+0x5c>
      {
        if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 8002c4a:	2100      	movs	r1, #0
 8002c4c:	6878      	ldr	r0, [r7, #4]
 8002c4e:	f000 f8f7 	bl	8002e40 <HAL_DMA2D_CLUTLoading_Abort>
 8002c52:	4603      	mov	r3, r0
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d011      	beq.n	8002c7c <HAL_DMA2D_DeInit+0x7c>
        {
          /* Issue when aborting background CLUT loading */
          return HAL_ERROR;
 8002c58:	2301      	movs	r3, #1
 8002c5a:	e03a      	b.n	8002cd2 <HAL_DMA2D_DeInit+0xd2>
        }
      }
      else
      {
        /* Abort foreground CLUT loading if any */
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	69db      	ldr	r3, [r3, #28]
 8002c62:	f003 0320 	and.w	r3, r3, #32
 8002c66:	2b20      	cmp	r3, #32
 8002c68:	d108      	bne.n	8002c7c <HAL_DMA2D_DeInit+0x7c>
        {
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8002c6a:	2101      	movs	r1, #1
 8002c6c:	6878      	ldr	r0, [r7, #4]
 8002c6e:	f000 f8e7 	bl	8002e40 <HAL_DMA2D_CLUTLoading_Abort>
 8002c72:	4603      	mov	r3, r0
 8002c74:	2b00      	cmp	r3, #0
 8002c76:	d001      	beq.n	8002c7c <HAL_DMA2D_DeInit+0x7c>
          {
            /* Issue when aborting foreground CLUT loading */
            return HAL_ERROR;
 8002c78:	2301      	movs	r3, #1
 8002c7a:	e02a      	b.n	8002cd2 <HAL_DMA2D_DeInit+0xd2>
      }
    }
  }

  /* Reset DMA2D control registers*/
  hdma2d->Instance->CR       =    0U;
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	2200      	movs	r2, #0
 8002c82:	601a      	str	r2, [r3, #0]
  hdma2d->Instance->IFCR     = 0x3FU;
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	223f      	movs	r2, #63	; 0x3f
 8002c8a:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	2200      	movs	r2, #0
 8002c92:	611a      	str	r2, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	2200      	movs	r2, #0
 8002c9a:	619a      	str	r2, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	2200      	movs	r2, #0
 8002ca2:	61da      	str	r2, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	2200      	movs	r2, #0
 8002caa:	625a      	str	r2, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	2200      	movs	r2, #0
 8002cb2:	635a      	str	r2, [r3, #52]	; 0x34
    /* DeInit the low level hardware */
    hdma2d->MspDeInitCallback(hdma2d);

#else
  /* Carry on with de-initialization of low level hardware */
  HAL_DMA2D_MspDeInit(hdma2d);
 8002cb4:	6878      	ldr	r0, [r7, #4]
 8002cb6:	f7fe fcf1 	bl	800169c <HAL_DMA2D_MspDeInit>
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	2200      	movs	r2, #0
 8002cbe:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	2200      	movs	r2, #0
 8002cc4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Release Lock */
  __HAL_UNLOCK(hdma2d);
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	2200      	movs	r2, #0
 8002ccc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8002cd0:	2300      	movs	r3, #0
}
 8002cd2:	4618      	mov	r0, r3
 8002cd4:	3708      	adds	r7, #8
 8002cd6:	46bd      	mov	sp, r7
 8002cd8:	bd80      	pop	{r7, pc}
 8002cda:	bf00      	nop
 8002cdc:	40023800 	.word	0x40023800

08002ce0 <HAL_DMA2D_Start_IT>:
  * @param  Width      The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height     The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 8002ce0:	b580      	push	{r7, lr}
 8002ce2:	b086      	sub	sp, #24
 8002ce4:	af02      	add	r7, sp, #8
 8002ce6:	60f8      	str	r0, [r7, #12]
 8002ce8:	60b9      	str	r1, [r7, #8]
 8002cea:	607a      	str	r2, [r7, #4]
 8002cec:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8002cee:	68fb      	ldr	r3, [r7, #12]
 8002cf0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002cf4:	2b01      	cmp	r3, #1
 8002cf6:	d101      	bne.n	8002cfc <HAL_DMA2D_Start_IT+0x1c>
 8002cf8:	2302      	movs	r3, #2
 8002cfa:	e020      	b.n	8002d3e <HAL_DMA2D_Start_IT+0x5e>
 8002cfc:	68fb      	ldr	r3, [r7, #12]
 8002cfe:	2201      	movs	r2, #1
 8002d00:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8002d04:	68fb      	ldr	r3, [r7, #12]
 8002d06:	2202      	movs	r2, #2
 8002d08:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8002d0c:	69bb      	ldr	r3, [r7, #24]
 8002d0e:	9300      	str	r3, [sp, #0]
 8002d10:	683b      	ldr	r3, [r7, #0]
 8002d12:	687a      	ldr	r2, [r7, #4]
 8002d14:	68b9      	ldr	r1, [r7, #8]
 8002d16:	68f8      	ldr	r0, [r7, #12]
 8002d18:	f000 fa84 	bl	8003224 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8002d1c:	68fb      	ldr	r3, [r7, #12]
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	681a      	ldr	r2, [r3, #0]
 8002d22:	68fb      	ldr	r3, [r7, #12]
 8002d24:	681b      	ldr	r3, [r3, #0]
 8002d26:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8002d2a:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 8002d2c:	68fb      	ldr	r3, [r7, #12]
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	681a      	ldr	r2, [r3, #0]
 8002d32:	68fb      	ldr	r3, [r7, #12]
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	f042 0201 	orr.w	r2, r2, #1
 8002d3a:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 8002d3c:	2300      	movs	r3, #0
}
 8002d3e:	4618      	mov	r0, r3
 8002d40:	3710      	adds	r7, #16
 8002d42:	46bd      	mov	sp, r7
 8002d44:	bd80      	pop	{r7, pc}

08002d46 <HAL_DMA2D_BlendingStart_IT>:
  * @param  Width       The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height      The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32_t  SrcAddress2, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 8002d46:	b580      	push	{r7, lr}
 8002d48:	b086      	sub	sp, #24
 8002d4a:	af02      	add	r7, sp, #8
 8002d4c:	60f8      	str	r0, [r7, #12]
 8002d4e:	60b9      	str	r1, [r7, #8]
 8002d50:	607a      	str	r2, [r7, #4]
 8002d52:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002d5a:	2b01      	cmp	r3, #1
 8002d5c:	d101      	bne.n	8002d62 <HAL_DMA2D_BlendingStart_IT+0x1c>
 8002d5e:	2302      	movs	r3, #2
 8002d60:	e024      	b.n	8002dac <HAL_DMA2D_BlendingStart_IT+0x66>
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	2201      	movs	r2, #1
 8002d66:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8002d6a:	68fb      	ldr	r3, [r7, #12]
 8002d6c:	2202      	movs	r2, #2
 8002d6e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure DMA2D Stream source2 address */
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8002d72:	68fb      	ldr	r3, [r7, #12]
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	687a      	ldr	r2, [r7, #4]
 8002d78:	615a      	str	r2, [r3, #20]

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 8002d7a:	69fb      	ldr	r3, [r7, #28]
 8002d7c:	9300      	str	r3, [sp, #0]
 8002d7e:	69bb      	ldr	r3, [r7, #24]
 8002d80:	683a      	ldr	r2, [r7, #0]
 8002d82:	68b9      	ldr	r1, [r7, #8]
 8002d84:	68f8      	ldr	r0, [r7, #12]
 8002d86:	f000 fa4d 	bl	8003224 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	681a      	ldr	r2, [r3, #0]
 8002d90:	68fb      	ldr	r3, [r7, #12]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8002d98:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 8002d9a:	68fb      	ldr	r3, [r7, #12]
 8002d9c:	681b      	ldr	r3, [r3, #0]
 8002d9e:	681a      	ldr	r2, [r3, #0]
 8002da0:	68fb      	ldr	r3, [r7, #12]
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	f042 0201 	orr.w	r2, r2, #1
 8002da8:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 8002daa:	2300      	movs	r3, #0
}
 8002dac:	4618      	mov	r0, r3
 8002dae:	3710      	adds	r7, #16
 8002db0:	46bd      	mov	sp, r7
 8002db2:	bd80      	pop	{r7, pc}

08002db4 <HAL_DMA2D_Abort>:
  * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
  *                  the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
{
 8002db4:	b580      	push	{r7, lr}
 8002db6:	b084      	sub	sp, #16
 8002db8:	af00      	add	r7, sp, #0
 8002dba:	6078      	str	r0, [r7, #4]

  /* Abort the DMA2D transfer */
  /* START bit is reset to make sure not to set it again, in the event the HW clears it
     between the register read and the register write by the CPU (writing 0 has no
     effect on START bitvalue) */
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	681b      	ldr	r3, [r3, #0]
 8002dc2:	f023 0205 	bic.w	r2, r3, #5
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	f042 0204 	orr.w	r2, r2, #4
 8002dce:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8002dd0:	f7ff f9a2 	bl	8002118 <HAL_GetTick>
 8002dd4:	60f8      	str	r0, [r7, #12]

  /* Check if the DMA2D is effectively disabled */
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8002dd6:	e017      	b.n	8002e08 <HAL_DMA2D_Abort+0x54>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8002dd8:	f7ff f99e 	bl	8002118 <HAL_GetTick>
 8002ddc:	4602      	mov	r2, r0
 8002dde:	68fb      	ldr	r3, [r7, #12]
 8002de0:	1ad3      	subs	r3, r2, r3
 8002de2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002de6:	d90f      	bls.n	8002e08 <HAL_DMA2D_Abort+0x54>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002dec:	f043 0220 	orr.w	r2, r3, #32
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8002df4:	687b      	ldr	r3, [r7, #4]
 8002df6:	2203      	movs	r2, #3
 8002df8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	2200      	movs	r2, #0
 8002e00:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 8002e04:	2303      	movs	r3, #3
 8002e06:	e017      	b.n	8002e38 <HAL_DMA2D_Abort+0x84>
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	f003 0301 	and.w	r3, r3, #1
 8002e12:	2b00      	cmp	r3, #0
 8002e14:	d1e0      	bne.n	8002dd8 <HAL_DMA2D_Abort+0x24>
    }
  }

  /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	681a      	ldr	r2, [r3, #0]
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 8002e24:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	2201      	movs	r2, #1
 8002e2a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	2200      	movs	r2, #0
 8002e32:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8002e36:	2300      	movs	r3, #0
}
 8002e38:	4618      	mov	r0, r3
 8002e3a:	3710      	adds	r7, #16
 8002e3c:	46bd      	mov	sp, r7
 8002e3e:	bd80      	pop	{r7, pc}

08002e40 <HAL_DMA2D_CLUTLoading_Abort>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8002e40:	b580      	push	{r7, lr}
 8002e42:	b084      	sub	sp, #16
 8002e44:	af00      	add	r7, sp, #0
 8002e46:	6078      	str	r0, [r7, #4]
 8002e48:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	681b      	ldr	r3, [r3, #0]
 8002e4e:	3324      	adds	r3, #36	; 0x24
 8002e50:	60fb      	str	r3, [r7, #12]

  /* Abort the CLUT loading */
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	681a      	ldr	r2, [r3, #0]
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	f042 0204 	orr.w	r2, r2, #4
 8002e60:	601a      	str	r2, [r3, #0]

  /* If foreground CLUT loading is considered, update local variables */
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8002e62:	683b      	ldr	r3, [r7, #0]
 8002e64:	2b01      	cmp	r3, #1
 8002e66:	d103      	bne.n	8002e70 <HAL_DMA2D_CLUTLoading_Abort+0x30>
  {
    reg  = &(hdma2d->Instance->FGPFCCR);
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	331c      	adds	r3, #28
 8002e6e:	60fb      	str	r3, [r7, #12]
  }


  /* Get tick */
  tickstart = HAL_GetTick();
 8002e70:	f7ff f952 	bl	8002118 <HAL_GetTick>
 8002e74:	60b8      	str	r0, [r7, #8]

  /* Check if the CLUT loading is aborted */
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8002e76:	e017      	b.n	8002ea8 <HAL_DMA2D_CLUTLoading_Abort+0x68>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8002e78:	f7ff f94e 	bl	8002118 <HAL_GetTick>
 8002e7c:	4602      	mov	r2, r0
 8002e7e:	68bb      	ldr	r3, [r7, #8]
 8002e80:	1ad3      	subs	r3, r2, r3
 8002e82:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002e86:	d90f      	bls.n	8002ea8 <HAL_DMA2D_CLUTLoading_Abort+0x68>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002e8c:	f043 0220 	orr.w	r2, r3, #32
 8002e90:	687b      	ldr	r3, [r7, #4]
 8002e92:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	2203      	movs	r2, #3
 8002e98:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 8002ea4:	2303      	movs	r3, #3
 8002ea6:	e016      	b.n	8002ed6 <HAL_DMA2D_CLUTLoading_Abort+0x96>
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8002ea8:	68fb      	ldr	r3, [r7, #12]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	f003 0320 	and.w	r3, r3, #32
 8002eb0:	2b00      	cmp	r3, #0
 8002eb2:	d1e1      	bne.n	8002e78 <HAL_DMA2D_CLUTLoading_Abort+0x38>
    }
  }

  /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	681b      	ldr	r3, [r3, #0]
 8002eb8:	681a      	ldr	r2, [r3, #0]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 8002ec2:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	2201      	movs	r2, #1
 8002ec8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	2200      	movs	r2, #0
 8002ed0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8002ed4:	2300      	movs	r3, #0
}
 8002ed6:	4618      	mov	r0, r3
 8002ed8:	3710      	adds	r7, #16
 8002eda:	46bd      	mov	sp, r7
 8002edc:	bd80      	pop	{r7, pc}

08002ede <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 8002ede:	b580      	push	{r7, lr}
 8002ee0:	b084      	sub	sp, #16
 8002ee2:	af00      	add	r7, sp, #0
 8002ee4:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	685b      	ldr	r3, [r3, #4]
 8002eec:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8002ef6:	68fb      	ldr	r3, [r7, #12]
 8002ef8:	f003 0301 	and.w	r3, r3, #1
 8002efc:	2b00      	cmp	r3, #0
 8002efe:	d026      	beq.n	8002f4e <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8002f00:	68bb      	ldr	r3, [r7, #8]
 8002f02:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	d021      	beq.n	8002f4e <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	681a      	ldr	r2, [r3, #0]
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002f18:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002f1e:	f043 0201 	orr.w	r2, r3, #1
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	2201      	movs	r2, #1
 8002f2c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002f2e:	687b      	ldr	r3, [r7, #4]
 8002f30:	2204      	movs	r2, #4
 8002f32:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	2200      	movs	r2, #0
 8002f3a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	695b      	ldr	r3, [r3, #20]
 8002f42:	2b00      	cmp	r3, #0
 8002f44:	d003      	beq.n	8002f4e <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	695b      	ldr	r3, [r3, #20]
 8002f4a:	6878      	ldr	r0, [r7, #4]
 8002f4c:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8002f4e:	68fb      	ldr	r3, [r7, #12]
 8002f50:	f003 0320 	and.w	r3, r3, #32
 8002f54:	2b00      	cmp	r3, #0
 8002f56:	d026      	beq.n	8002fa6 <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8002f58:	68bb      	ldr	r3, [r7, #8]
 8002f5a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002f5e:	2b00      	cmp	r3, #0
 8002f60:	d021      	beq.n	8002fa6 <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	681a      	ldr	r2, [r3, #0]
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002f70:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	681b      	ldr	r3, [r3, #0]
 8002f76:	2220      	movs	r2, #32
 8002f78:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002f7e:	f043 0202 	orr.w	r2, r3, #2
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	2204      	movs	r2, #4
 8002f8a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	2200      	movs	r2, #0
 8002f92:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	695b      	ldr	r3, [r3, #20]
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	d003      	beq.n	8002fa6 <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	695b      	ldr	r3, [r3, #20]
 8002fa2:	6878      	ldr	r0, [r7, #4]
 8002fa4:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8002fa6:	68fb      	ldr	r3, [r7, #12]
 8002fa8:	f003 0308 	and.w	r3, r3, #8
 8002fac:	2b00      	cmp	r3, #0
 8002fae:	d026      	beq.n	8002ffe <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8002fb0:	68bb      	ldr	r3, [r7, #8]
 8002fb2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002fb6:	2b00      	cmp	r3, #0
 8002fb8:	d021      	beq.n	8002ffe <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	681a      	ldr	r2, [r3, #0]
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	681b      	ldr	r3, [r3, #0]
 8002fc4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002fc8:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	2208      	movs	r2, #8
 8002fd0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002fd6:	f043 0204 	orr.w	r2, r3, #4
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	2204      	movs	r2, #4
 8002fe2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	2200      	movs	r2, #0
 8002fea:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	695b      	ldr	r3, [r3, #20]
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d003      	beq.n	8002ffe <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	695b      	ldr	r3, [r3, #20]
 8002ffa:	6878      	ldr	r0, [r7, #4]
 8002ffc:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8002ffe:	68fb      	ldr	r3, [r7, #12]
 8003000:	f003 0304 	and.w	r3, r3, #4
 8003004:	2b00      	cmp	r3, #0
 8003006:	d013      	beq.n	8003030 <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003008:	68bb      	ldr	r3, [r7, #8]
 800300a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800300e:	2b00      	cmp	r3, #0
 8003010:	d00e      	beq.n	8003030 <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	681a      	ldr	r2, [r3, #0]
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	681b      	ldr	r3, [r3, #0]
 800301c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003020:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	2204      	movs	r2, #4
 8003028:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800302a:	6878      	ldr	r0, [r7, #4]
 800302c:	f000 f853 	bl	80030d6 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003030:	68fb      	ldr	r3, [r7, #12]
 8003032:	f003 0302 	and.w	r3, r3, #2
 8003036:	2b00      	cmp	r3, #0
 8003038:	d024      	beq.n	8003084 <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800303a:	68bb      	ldr	r3, [r7, #8]
 800303c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003040:	2b00      	cmp	r3, #0
 8003042:	d01f      	beq.n	8003084 <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	681a      	ldr	r2, [r3, #0]
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	681b      	ldr	r3, [r3, #0]
 800304e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003052:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	2202      	movs	r2, #2
 800305a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	2201      	movs	r2, #1
 8003068:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	2200      	movs	r2, #0
 8003070:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	691b      	ldr	r3, [r3, #16]
 8003078:	2b00      	cmp	r3, #0
 800307a:	d003      	beq.n	8003084 <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	691b      	ldr	r3, [r3, #16]
 8003080:	6878      	ldr	r0, [r7, #4]
 8003082:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003084:	68fb      	ldr	r3, [r7, #12]
 8003086:	f003 0310 	and.w	r3, r3, #16
 800308a:	2b00      	cmp	r3, #0
 800308c:	d01f      	beq.n	80030ce <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800308e:	68bb      	ldr	r3, [r7, #8]
 8003090:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003094:	2b00      	cmp	r3, #0
 8003096:	d01a      	beq.n	80030ce <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	681a      	ldr	r2, [r3, #0]
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80030a6:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	2210      	movs	r2, #16
 80030ae:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80030b0:	687b      	ldr	r3, [r7, #4]
 80030b2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	2201      	movs	r2, #1
 80030bc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	2200      	movs	r2, #0
 80030c4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80030c8:	6878      	ldr	r0, [r7, #4]
 80030ca:	f000 f80e 	bl	80030ea <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80030ce:	bf00      	nop
 80030d0:	3710      	adds	r7, #16
 80030d2:	46bd      	mov	sp, r7
 80030d4:	bd80      	pop	{r7, pc}

080030d6 <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 80030d6:	b480      	push	{r7}
 80030d8:	b083      	sub	sp, #12
 80030da:	af00      	add	r7, sp, #0
 80030dc:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 80030de:	bf00      	nop
 80030e0:	370c      	adds	r7, #12
 80030e2:	46bd      	mov	sp, r7
 80030e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030e8:	4770      	bx	lr

080030ea <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 80030ea:	b480      	push	{r7}
 80030ec:	b083      	sub	sp, #12
 80030ee:	af00      	add	r7, sp, #0
 80030f0:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 80030f2:	bf00      	nop
 80030f4:	370c      	adds	r7, #12
 80030f6:	46bd      	mov	sp, r7
 80030f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030fc:	4770      	bx	lr
	...

08003100 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003100:	b480      	push	{r7}
 8003102:	b087      	sub	sp, #28
 8003104:	af00      	add	r7, sp, #0
 8003106:	6078      	str	r0, [r7, #4]
 8003108:	6039      	str	r1, [r7, #0]
  uint32_t regMask, regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if(hdma2d->Init.Mode != DMA2D_R2M)
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	685b      	ldr	r3, [r3, #4]
 800310e:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003118:	2b01      	cmp	r3, #1
 800311a:	d101      	bne.n	8003120 <HAL_DMA2D_ConfigLayer+0x20>
 800311c:	2302      	movs	r3, #2
 800311e:	e079      	b.n	8003214 <HAL_DMA2D_ConfigLayer+0x114>
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	2201      	movs	r2, #1
 8003124:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	2202      	movs	r2, #2
 800312c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 8003130:	683b      	ldr	r3, [r7, #0]
 8003132:	011b      	lsls	r3, r3, #4
 8003134:	3318      	adds	r3, #24
 8003136:	687a      	ldr	r2, [r7, #4]
 8003138:	4413      	add	r3, r2
 800313a:	613b      	str	r3, [r7, #16]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800313c:	693b      	ldr	r3, [r7, #16]
 800313e:	685a      	ldr	r2, [r3, #4]
 8003140:	693b      	ldr	r3, [r7, #16]
 8003142:	689b      	ldr	r3, [r3, #8]
 8003144:	041b      	lsls	r3, r3, #16
 8003146:	4313      	orrs	r3, r2
 8003148:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 800314a:	4b35      	ldr	r3, [pc, #212]	; (8003220 <HAL_DMA2D_ConfigLayer+0x120>)
 800314c:	60fb      	str	r3, [r7, #12]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800314e:	693b      	ldr	r3, [r7, #16]
 8003150:	685b      	ldr	r3, [r3, #4]
 8003152:	2b0a      	cmp	r3, #10
 8003154:	d003      	beq.n	800315e <HAL_DMA2D_ConfigLayer+0x5e>
 8003156:	693b      	ldr	r3, [r7, #16]
 8003158:	685b      	ldr	r3, [r3, #4]
 800315a:	2b09      	cmp	r3, #9
 800315c:	d107      	bne.n	800316e <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800315e:	693b      	ldr	r3, [r7, #16]
 8003160:	68db      	ldr	r3, [r3, #12]
 8003162:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003166:	697a      	ldr	r2, [r7, #20]
 8003168:	4313      	orrs	r3, r2
 800316a:	617b      	str	r3, [r7, #20]
 800316c:	e005      	b.n	800317a <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800316e:	693b      	ldr	r3, [r7, #16]
 8003170:	68db      	ldr	r3, [r3, #12]
 8003172:	061b      	lsls	r3, r3, #24
 8003174:	697a      	ldr	r2, [r7, #20]
 8003176:	4313      	orrs	r3, r2
 8003178:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 800317a:	683b      	ldr	r3, [r7, #0]
 800317c:	2b00      	cmp	r3, #0
 800317e:	d120      	bne.n	80031c2 <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003186:	68fb      	ldr	r3, [r7, #12]
 8003188:	43db      	mvns	r3, r3
 800318a:	ea02 0103 	and.w	r1, r2, r3
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	697a      	ldr	r2, [r7, #20]
 8003194:	430a      	orrs	r2, r1
 8003196:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	693a      	ldr	r2, [r7, #16]
 800319e:	6812      	ldr	r2, [r2, #0]
 80031a0:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80031a2:	693b      	ldr	r3, [r7, #16]
 80031a4:	685b      	ldr	r3, [r3, #4]
 80031a6:	2b0a      	cmp	r3, #10
 80031a8:	d003      	beq.n	80031b2 <HAL_DMA2D_ConfigLayer+0xb2>
 80031aa:	693b      	ldr	r3, [r7, #16]
 80031ac:	685b      	ldr	r3, [r3, #4]
 80031ae:	2b09      	cmp	r3, #9
 80031b0:	d127      	bne.n	8003202 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80031b2:	693b      	ldr	r3, [r7, #16]
 80031b4:	68da      	ldr	r2, [r3, #12]
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80031be:	629a      	str	r2, [r3, #40]	; 0x28
 80031c0:	e01f      	b.n	8003202 <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


     /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	69da      	ldr	r2, [r3, #28]
 80031c8:	68fb      	ldr	r3, [r7, #12]
 80031ca:	43db      	mvns	r3, r3
 80031cc:	ea02 0103 	and.w	r1, r2, r3
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	697a      	ldr	r2, [r7, #20]
 80031d6:	430a      	orrs	r2, r1
 80031d8:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	693a      	ldr	r2, [r7, #16]
 80031e0:	6812      	ldr	r2, [r2, #0]
 80031e2:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80031e4:	693b      	ldr	r3, [r7, #16]
 80031e6:	685b      	ldr	r3, [r3, #4]
 80031e8:	2b0a      	cmp	r3, #10
 80031ea:	d003      	beq.n	80031f4 <HAL_DMA2D_ConfigLayer+0xf4>
 80031ec:	693b      	ldr	r3, [r7, #16]
 80031ee:	685b      	ldr	r3, [r3, #4]
 80031f0:	2b09      	cmp	r3, #9
 80031f2:	d106      	bne.n	8003202 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 80031f4:	693b      	ldr	r3, [r7, #16]
 80031f6:	68da      	ldr	r2, [r3, #12]
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003200:	621a      	str	r2, [r3, #32]
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003202:	687b      	ldr	r3, [r7, #4]
 8003204:	2201      	movs	r2, #1
 8003206:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	2200      	movs	r2, #0
 800320e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003212:	2300      	movs	r3, #0
}
 8003214:	4618      	mov	r0, r3
 8003216:	371c      	adds	r7, #28
 8003218:	46bd      	mov	sp, r7
 800321a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800321e:	4770      	bx	lr
 8003220:	ff03000f 	.word	0xff03000f

08003224 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8003224:	b480      	push	{r7}
 8003226:	b08b      	sub	sp, #44	; 0x2c
 8003228:	af00      	add	r7, sp, #0
 800322a:	60f8      	str	r0, [r7, #12]
 800322c:	60b9      	str	r1, [r7, #8]
 800322e:	607a      	str	r2, [r7, #4]
 8003230:	603b      	str	r3, [r7, #0]
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003238:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 800323c:	683b      	ldr	r3, [r7, #0]
 800323e:	041a      	lsls	r2, r3, #16
 8003240:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003242:	431a      	orrs	r2, r3
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	430a      	orrs	r2, r1
 800324a:	645a      	str	r2, [r3, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 800324c:	68fb      	ldr	r3, [r7, #12]
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	687a      	ldr	r2, [r7, #4]
 8003252:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	685b      	ldr	r3, [r3, #4]
 8003258:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800325c:	d174      	bne.n	8003348 <DMA2D_SetConfig+0x124>
  {
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 800325e:	68bb      	ldr	r3, [r7, #8]
 8003260:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003264:	623b      	str	r3, [r7, #32]
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8003266:	68bb      	ldr	r3, [r7, #8]
 8003268:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800326c:	61fb      	str	r3, [r7, #28]
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 800326e:	68bb      	ldr	r3, [r7, #8]
 8003270:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8003274:	61bb      	str	r3, [r7, #24]
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8003276:	68bb      	ldr	r3, [r7, #8]
 8003278:	b2db      	uxtb	r3, r3
 800327a:	617b      	str	r3, [r7, #20]

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 800327c:	68fb      	ldr	r3, [r7, #12]
 800327e:	689b      	ldr	r3, [r3, #8]
 8003280:	2b00      	cmp	r3, #0
 8003282:	d108      	bne.n	8003296 <DMA2D_SetConfig+0x72>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
 8003284:	69ba      	ldr	r2, [r7, #24]
 8003286:	69fb      	ldr	r3, [r7, #28]
 8003288:	431a      	orrs	r2, r3
 800328a:	6a3b      	ldr	r3, [r7, #32]
 800328c:	4313      	orrs	r3, r2
 800328e:	697a      	ldr	r2, [r7, #20]
 8003290:	4313      	orrs	r3, r2
 8003292:	627b      	str	r3, [r7, #36]	; 0x24
 8003294:	e053      	b.n	800333e <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8003296:	68fb      	ldr	r3, [r7, #12]
 8003298:	689b      	ldr	r3, [r3, #8]
 800329a:	2b01      	cmp	r3, #1
 800329c:	d106      	bne.n	80032ac <DMA2D_SetConfig+0x88>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 800329e:	69ba      	ldr	r2, [r7, #24]
 80032a0:	69fb      	ldr	r3, [r7, #28]
 80032a2:	4313      	orrs	r3, r2
 80032a4:	697a      	ldr	r2, [r7, #20]
 80032a6:	4313      	orrs	r3, r2
 80032a8:	627b      	str	r3, [r7, #36]	; 0x24
 80032aa:	e048      	b.n	800333e <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80032ac:	68fb      	ldr	r3, [r7, #12]
 80032ae:	689b      	ldr	r3, [r3, #8]
 80032b0:	2b02      	cmp	r3, #2
 80032b2:	d111      	bne.n	80032d8 <DMA2D_SetConfig+0xb4>
    {
      tmp2 = (tmp2 >> 19U);
 80032b4:	69fb      	ldr	r3, [r7, #28]
 80032b6:	0cdb      	lsrs	r3, r3, #19
 80032b8:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 10U);
 80032ba:	69bb      	ldr	r3, [r7, #24]
 80032bc:	0a9b      	lsrs	r3, r3, #10
 80032be:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 80032c0:	697b      	ldr	r3, [r7, #20]
 80032c2:	08db      	lsrs	r3, r3, #3
 80032c4:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 80032c6:	69bb      	ldr	r3, [r7, #24]
 80032c8:	015a      	lsls	r2, r3, #5
 80032ca:	69fb      	ldr	r3, [r7, #28]
 80032cc:	02db      	lsls	r3, r3, #11
 80032ce:	4313      	orrs	r3, r2
 80032d0:	697a      	ldr	r2, [r7, #20]
 80032d2:	4313      	orrs	r3, r2
 80032d4:	627b      	str	r3, [r7, #36]	; 0x24
 80032d6:	e032      	b.n	800333e <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80032d8:	68fb      	ldr	r3, [r7, #12]
 80032da:	689b      	ldr	r3, [r3, #8]
 80032dc:	2b03      	cmp	r3, #3
 80032de:	d117      	bne.n	8003310 <DMA2D_SetConfig+0xec>
    {
      tmp1 = (tmp1 >> 31U);
 80032e0:	6a3b      	ldr	r3, [r7, #32]
 80032e2:	0fdb      	lsrs	r3, r3, #31
 80032e4:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 19U);
 80032e6:	69fb      	ldr	r3, [r7, #28]
 80032e8:	0cdb      	lsrs	r3, r3, #19
 80032ea:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 11U);
 80032ec:	69bb      	ldr	r3, [r7, #24]
 80032ee:	0adb      	lsrs	r3, r3, #11
 80032f0:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 80032f2:	697b      	ldr	r3, [r7, #20]
 80032f4:	08db      	lsrs	r3, r3, #3
 80032f6:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 80032f8:	69bb      	ldr	r3, [r7, #24]
 80032fa:	015a      	lsls	r2, r3, #5
 80032fc:	69fb      	ldr	r3, [r7, #28]
 80032fe:	029b      	lsls	r3, r3, #10
 8003300:	431a      	orrs	r2, r3
 8003302:	6a3b      	ldr	r3, [r7, #32]
 8003304:	03db      	lsls	r3, r3, #15
 8003306:	4313      	orrs	r3, r2
 8003308:	697a      	ldr	r2, [r7, #20]
 800330a:	4313      	orrs	r3, r2
 800330c:	627b      	str	r3, [r7, #36]	; 0x24
 800330e:	e016      	b.n	800333e <DMA2D_SetConfig+0x11a>
    }
    else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
    {
      tmp1 = (tmp1 >> 28U);
 8003310:	6a3b      	ldr	r3, [r7, #32]
 8003312:	0f1b      	lsrs	r3, r3, #28
 8003314:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 20U);
 8003316:	69fb      	ldr	r3, [r7, #28]
 8003318:	0d1b      	lsrs	r3, r3, #20
 800331a:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 12U);
 800331c:	69bb      	ldr	r3, [r7, #24]
 800331e:	0b1b      	lsrs	r3, r3, #12
 8003320:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 4U );
 8003322:	697b      	ldr	r3, [r7, #20]
 8003324:	091b      	lsrs	r3, r3, #4
 8003326:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8003328:	69bb      	ldr	r3, [r7, #24]
 800332a:	011a      	lsls	r2, r3, #4
 800332c:	69fb      	ldr	r3, [r7, #28]
 800332e:	021b      	lsls	r3, r3, #8
 8003330:	431a      	orrs	r2, r3
 8003332:	6a3b      	ldr	r3, [r7, #32]
 8003334:	031b      	lsls	r3, r3, #12
 8003336:	4313      	orrs	r3, r2
 8003338:	697a      	ldr	r2, [r7, #20]
 800333a:	4313      	orrs	r3, r2
 800333c:	627b      	str	r3, [r7, #36]	; 0x24
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 800333e:	68fb      	ldr	r3, [r7, #12]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003344:	639a      	str	r2, [r3, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8003346:	e003      	b.n	8003350 <DMA2D_SetConfig+0x12c>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	681b      	ldr	r3, [r3, #0]
 800334c:	68ba      	ldr	r2, [r7, #8]
 800334e:	60da      	str	r2, [r3, #12]
}
 8003350:	bf00      	nop
 8003352:	372c      	adds	r7, #44	; 0x2c
 8003354:	46bd      	mov	sp, r7
 8003356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800335a:	4770      	bx	lr

0800335c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800335c:	b480      	push	{r7}
 800335e:	b089      	sub	sp, #36	; 0x24
 8003360:	af00      	add	r7, sp, #0
 8003362:	6078      	str	r0, [r7, #4]
 8003364:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003366:	2300      	movs	r3, #0
 8003368:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 800336a:	2300      	movs	r3, #0
 800336c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 800336e:	2300      	movs	r3, #0
 8003370:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003372:	2300      	movs	r3, #0
 8003374:	61fb      	str	r3, [r7, #28]
 8003376:	e177      	b.n	8003668 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003378:	2201      	movs	r2, #1
 800337a:	69fb      	ldr	r3, [r7, #28]
 800337c:	fa02 f303 	lsl.w	r3, r2, r3
 8003380:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003382:	683b      	ldr	r3, [r7, #0]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	697a      	ldr	r2, [r7, #20]
 8003388:	4013      	ands	r3, r2
 800338a:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 800338c:	693a      	ldr	r2, [r7, #16]
 800338e:	697b      	ldr	r3, [r7, #20]
 8003390:	429a      	cmp	r2, r3
 8003392:	f040 8166 	bne.w	8003662 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003396:	683b      	ldr	r3, [r7, #0]
 8003398:	685b      	ldr	r3, [r3, #4]
 800339a:	2b01      	cmp	r3, #1
 800339c:	d00b      	beq.n	80033b6 <HAL_GPIO_Init+0x5a>
 800339e:	683b      	ldr	r3, [r7, #0]
 80033a0:	685b      	ldr	r3, [r3, #4]
 80033a2:	2b02      	cmp	r3, #2
 80033a4:	d007      	beq.n	80033b6 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80033a6:	683b      	ldr	r3, [r7, #0]
 80033a8:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80033aa:	2b11      	cmp	r3, #17
 80033ac:	d003      	beq.n	80033b6 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80033ae:	683b      	ldr	r3, [r7, #0]
 80033b0:	685b      	ldr	r3, [r3, #4]
 80033b2:	2b12      	cmp	r3, #18
 80033b4:	d130      	bne.n	8003418 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	689b      	ldr	r3, [r3, #8]
 80033ba:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80033bc:	69fb      	ldr	r3, [r7, #28]
 80033be:	005b      	lsls	r3, r3, #1
 80033c0:	2203      	movs	r2, #3
 80033c2:	fa02 f303 	lsl.w	r3, r2, r3
 80033c6:	43db      	mvns	r3, r3
 80033c8:	69ba      	ldr	r2, [r7, #24]
 80033ca:	4013      	ands	r3, r2
 80033cc:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80033ce:	683b      	ldr	r3, [r7, #0]
 80033d0:	68da      	ldr	r2, [r3, #12]
 80033d2:	69fb      	ldr	r3, [r7, #28]
 80033d4:	005b      	lsls	r3, r3, #1
 80033d6:	fa02 f303 	lsl.w	r3, r2, r3
 80033da:	69ba      	ldr	r2, [r7, #24]
 80033dc:	4313      	orrs	r3, r2
 80033de:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	69ba      	ldr	r2, [r7, #24]
 80033e4:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	685b      	ldr	r3, [r3, #4]
 80033ea:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80033ec:	2201      	movs	r2, #1
 80033ee:	69fb      	ldr	r3, [r7, #28]
 80033f0:	fa02 f303 	lsl.w	r3, r2, r3
 80033f4:	43db      	mvns	r3, r3
 80033f6:	69ba      	ldr	r2, [r7, #24]
 80033f8:	4013      	ands	r3, r2
 80033fa:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80033fc:	683b      	ldr	r3, [r7, #0]
 80033fe:	685b      	ldr	r3, [r3, #4]
 8003400:	091b      	lsrs	r3, r3, #4
 8003402:	f003 0201 	and.w	r2, r3, #1
 8003406:	69fb      	ldr	r3, [r7, #28]
 8003408:	fa02 f303 	lsl.w	r3, r2, r3
 800340c:	69ba      	ldr	r2, [r7, #24]
 800340e:	4313      	orrs	r3, r2
 8003410:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	69ba      	ldr	r2, [r7, #24]
 8003416:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	68db      	ldr	r3, [r3, #12]
 800341c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800341e:	69fb      	ldr	r3, [r7, #28]
 8003420:	005b      	lsls	r3, r3, #1
 8003422:	2203      	movs	r2, #3
 8003424:	fa02 f303 	lsl.w	r3, r2, r3
 8003428:	43db      	mvns	r3, r3
 800342a:	69ba      	ldr	r2, [r7, #24]
 800342c:	4013      	ands	r3, r2
 800342e:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003430:	683b      	ldr	r3, [r7, #0]
 8003432:	689a      	ldr	r2, [r3, #8]
 8003434:	69fb      	ldr	r3, [r7, #28]
 8003436:	005b      	lsls	r3, r3, #1
 8003438:	fa02 f303 	lsl.w	r3, r2, r3
 800343c:	69ba      	ldr	r2, [r7, #24]
 800343e:	4313      	orrs	r3, r2
 8003440:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	69ba      	ldr	r2, [r7, #24]
 8003446:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003448:	683b      	ldr	r3, [r7, #0]
 800344a:	685b      	ldr	r3, [r3, #4]
 800344c:	2b02      	cmp	r3, #2
 800344e:	d003      	beq.n	8003458 <HAL_GPIO_Init+0xfc>
 8003450:	683b      	ldr	r3, [r7, #0]
 8003452:	685b      	ldr	r3, [r3, #4]
 8003454:	2b12      	cmp	r3, #18
 8003456:	d123      	bne.n	80034a0 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003458:	69fb      	ldr	r3, [r7, #28]
 800345a:	08da      	lsrs	r2, r3, #3
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	3208      	adds	r2, #8
 8003460:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003464:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003466:	69fb      	ldr	r3, [r7, #28]
 8003468:	f003 0307 	and.w	r3, r3, #7
 800346c:	009b      	lsls	r3, r3, #2
 800346e:	220f      	movs	r2, #15
 8003470:	fa02 f303 	lsl.w	r3, r2, r3
 8003474:	43db      	mvns	r3, r3
 8003476:	69ba      	ldr	r2, [r7, #24]
 8003478:	4013      	ands	r3, r2
 800347a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800347c:	683b      	ldr	r3, [r7, #0]
 800347e:	691a      	ldr	r2, [r3, #16]
 8003480:	69fb      	ldr	r3, [r7, #28]
 8003482:	f003 0307 	and.w	r3, r3, #7
 8003486:	009b      	lsls	r3, r3, #2
 8003488:	fa02 f303 	lsl.w	r3, r2, r3
 800348c:	69ba      	ldr	r2, [r7, #24]
 800348e:	4313      	orrs	r3, r2
 8003490:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8003492:	69fb      	ldr	r3, [r7, #28]
 8003494:	08da      	lsrs	r2, r3, #3
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	3208      	adds	r2, #8
 800349a:	69b9      	ldr	r1, [r7, #24]
 800349c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	681b      	ldr	r3, [r3, #0]
 80034a4:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80034a6:	69fb      	ldr	r3, [r7, #28]
 80034a8:	005b      	lsls	r3, r3, #1
 80034aa:	2203      	movs	r2, #3
 80034ac:	fa02 f303 	lsl.w	r3, r2, r3
 80034b0:	43db      	mvns	r3, r3
 80034b2:	69ba      	ldr	r2, [r7, #24]
 80034b4:	4013      	ands	r3, r2
 80034b6:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80034b8:	683b      	ldr	r3, [r7, #0]
 80034ba:	685b      	ldr	r3, [r3, #4]
 80034bc:	f003 0203 	and.w	r2, r3, #3
 80034c0:	69fb      	ldr	r3, [r7, #28]
 80034c2:	005b      	lsls	r3, r3, #1
 80034c4:	fa02 f303 	lsl.w	r3, r2, r3
 80034c8:	69ba      	ldr	r2, [r7, #24]
 80034ca:	4313      	orrs	r3, r2
 80034cc:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	69ba      	ldr	r2, [r7, #24]
 80034d2:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80034d4:	683b      	ldr	r3, [r7, #0]
 80034d6:	685b      	ldr	r3, [r3, #4]
 80034d8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80034dc:	2b00      	cmp	r3, #0
 80034de:	f000 80c0 	beq.w	8003662 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80034e2:	2300      	movs	r3, #0
 80034e4:	60fb      	str	r3, [r7, #12]
 80034e6:	4b66      	ldr	r3, [pc, #408]	; (8003680 <HAL_GPIO_Init+0x324>)
 80034e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80034ea:	4a65      	ldr	r2, [pc, #404]	; (8003680 <HAL_GPIO_Init+0x324>)
 80034ec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80034f0:	6453      	str	r3, [r2, #68]	; 0x44
 80034f2:	4b63      	ldr	r3, [pc, #396]	; (8003680 <HAL_GPIO_Init+0x324>)
 80034f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80034f6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80034fa:	60fb      	str	r3, [r7, #12]
 80034fc:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 80034fe:	4a61      	ldr	r2, [pc, #388]	; (8003684 <HAL_GPIO_Init+0x328>)
 8003500:	69fb      	ldr	r3, [r7, #28]
 8003502:	089b      	lsrs	r3, r3, #2
 8003504:	3302      	adds	r3, #2
 8003506:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800350a:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800350c:	69fb      	ldr	r3, [r7, #28]
 800350e:	f003 0303 	and.w	r3, r3, #3
 8003512:	009b      	lsls	r3, r3, #2
 8003514:	220f      	movs	r2, #15
 8003516:	fa02 f303 	lsl.w	r3, r2, r3
 800351a:	43db      	mvns	r3, r3
 800351c:	69ba      	ldr	r2, [r7, #24]
 800351e:	4013      	ands	r3, r2
 8003520:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	4a58      	ldr	r2, [pc, #352]	; (8003688 <HAL_GPIO_Init+0x32c>)
 8003526:	4293      	cmp	r3, r2
 8003528:	d037      	beq.n	800359a <HAL_GPIO_Init+0x23e>
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	4a57      	ldr	r2, [pc, #348]	; (800368c <HAL_GPIO_Init+0x330>)
 800352e:	4293      	cmp	r3, r2
 8003530:	d031      	beq.n	8003596 <HAL_GPIO_Init+0x23a>
 8003532:	687b      	ldr	r3, [r7, #4]
 8003534:	4a56      	ldr	r2, [pc, #344]	; (8003690 <HAL_GPIO_Init+0x334>)
 8003536:	4293      	cmp	r3, r2
 8003538:	d02b      	beq.n	8003592 <HAL_GPIO_Init+0x236>
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	4a55      	ldr	r2, [pc, #340]	; (8003694 <HAL_GPIO_Init+0x338>)
 800353e:	4293      	cmp	r3, r2
 8003540:	d025      	beq.n	800358e <HAL_GPIO_Init+0x232>
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	4a54      	ldr	r2, [pc, #336]	; (8003698 <HAL_GPIO_Init+0x33c>)
 8003546:	4293      	cmp	r3, r2
 8003548:	d01f      	beq.n	800358a <HAL_GPIO_Init+0x22e>
 800354a:	687b      	ldr	r3, [r7, #4]
 800354c:	4a53      	ldr	r2, [pc, #332]	; (800369c <HAL_GPIO_Init+0x340>)
 800354e:	4293      	cmp	r3, r2
 8003550:	d019      	beq.n	8003586 <HAL_GPIO_Init+0x22a>
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	4a52      	ldr	r2, [pc, #328]	; (80036a0 <HAL_GPIO_Init+0x344>)
 8003556:	4293      	cmp	r3, r2
 8003558:	d013      	beq.n	8003582 <HAL_GPIO_Init+0x226>
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	4a51      	ldr	r2, [pc, #324]	; (80036a4 <HAL_GPIO_Init+0x348>)
 800355e:	4293      	cmp	r3, r2
 8003560:	d00d      	beq.n	800357e <HAL_GPIO_Init+0x222>
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	4a50      	ldr	r2, [pc, #320]	; (80036a8 <HAL_GPIO_Init+0x34c>)
 8003566:	4293      	cmp	r3, r2
 8003568:	d007      	beq.n	800357a <HAL_GPIO_Init+0x21e>
 800356a:	687b      	ldr	r3, [r7, #4]
 800356c:	4a4f      	ldr	r2, [pc, #316]	; (80036ac <HAL_GPIO_Init+0x350>)
 800356e:	4293      	cmp	r3, r2
 8003570:	d101      	bne.n	8003576 <HAL_GPIO_Init+0x21a>
 8003572:	2309      	movs	r3, #9
 8003574:	e012      	b.n	800359c <HAL_GPIO_Init+0x240>
 8003576:	230a      	movs	r3, #10
 8003578:	e010      	b.n	800359c <HAL_GPIO_Init+0x240>
 800357a:	2308      	movs	r3, #8
 800357c:	e00e      	b.n	800359c <HAL_GPIO_Init+0x240>
 800357e:	2307      	movs	r3, #7
 8003580:	e00c      	b.n	800359c <HAL_GPIO_Init+0x240>
 8003582:	2306      	movs	r3, #6
 8003584:	e00a      	b.n	800359c <HAL_GPIO_Init+0x240>
 8003586:	2305      	movs	r3, #5
 8003588:	e008      	b.n	800359c <HAL_GPIO_Init+0x240>
 800358a:	2304      	movs	r3, #4
 800358c:	e006      	b.n	800359c <HAL_GPIO_Init+0x240>
 800358e:	2303      	movs	r3, #3
 8003590:	e004      	b.n	800359c <HAL_GPIO_Init+0x240>
 8003592:	2302      	movs	r3, #2
 8003594:	e002      	b.n	800359c <HAL_GPIO_Init+0x240>
 8003596:	2301      	movs	r3, #1
 8003598:	e000      	b.n	800359c <HAL_GPIO_Init+0x240>
 800359a:	2300      	movs	r3, #0
 800359c:	69fa      	ldr	r2, [r7, #28]
 800359e:	f002 0203 	and.w	r2, r2, #3
 80035a2:	0092      	lsls	r2, r2, #2
 80035a4:	4093      	lsls	r3, r2
 80035a6:	69ba      	ldr	r2, [r7, #24]
 80035a8:	4313      	orrs	r3, r2
 80035aa:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80035ac:	4935      	ldr	r1, [pc, #212]	; (8003684 <HAL_GPIO_Init+0x328>)
 80035ae:	69fb      	ldr	r3, [r7, #28]
 80035b0:	089b      	lsrs	r3, r3, #2
 80035b2:	3302      	adds	r3, #2
 80035b4:	69ba      	ldr	r2, [r7, #24]
 80035b6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80035ba:	4b3d      	ldr	r3, [pc, #244]	; (80036b0 <HAL_GPIO_Init+0x354>)
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80035c0:	693b      	ldr	r3, [r7, #16]
 80035c2:	43db      	mvns	r3, r3
 80035c4:	69ba      	ldr	r2, [r7, #24]
 80035c6:	4013      	ands	r3, r2
 80035c8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80035ca:	683b      	ldr	r3, [r7, #0]
 80035cc:	685b      	ldr	r3, [r3, #4]
 80035ce:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80035d2:	2b00      	cmp	r3, #0
 80035d4:	d003      	beq.n	80035de <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 80035d6:	69ba      	ldr	r2, [r7, #24]
 80035d8:	693b      	ldr	r3, [r7, #16]
 80035da:	4313      	orrs	r3, r2
 80035dc:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 80035de:	4a34      	ldr	r2, [pc, #208]	; (80036b0 <HAL_GPIO_Init+0x354>)
 80035e0:	69bb      	ldr	r3, [r7, #24]
 80035e2:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 80035e4:	4b32      	ldr	r3, [pc, #200]	; (80036b0 <HAL_GPIO_Init+0x354>)
 80035e6:	685b      	ldr	r3, [r3, #4]
 80035e8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80035ea:	693b      	ldr	r3, [r7, #16]
 80035ec:	43db      	mvns	r3, r3
 80035ee:	69ba      	ldr	r2, [r7, #24]
 80035f0:	4013      	ands	r3, r2
 80035f2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80035f4:	683b      	ldr	r3, [r7, #0]
 80035f6:	685b      	ldr	r3, [r3, #4]
 80035f8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80035fc:	2b00      	cmp	r3, #0
 80035fe:	d003      	beq.n	8003608 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8003600:	69ba      	ldr	r2, [r7, #24]
 8003602:	693b      	ldr	r3, [r7, #16]
 8003604:	4313      	orrs	r3, r2
 8003606:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8003608:	4a29      	ldr	r2, [pc, #164]	; (80036b0 <HAL_GPIO_Init+0x354>)
 800360a:	69bb      	ldr	r3, [r7, #24]
 800360c:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800360e:	4b28      	ldr	r3, [pc, #160]	; (80036b0 <HAL_GPIO_Init+0x354>)
 8003610:	689b      	ldr	r3, [r3, #8]
 8003612:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003614:	693b      	ldr	r3, [r7, #16]
 8003616:	43db      	mvns	r3, r3
 8003618:	69ba      	ldr	r2, [r7, #24]
 800361a:	4013      	ands	r3, r2
 800361c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800361e:	683b      	ldr	r3, [r7, #0]
 8003620:	685b      	ldr	r3, [r3, #4]
 8003622:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003626:	2b00      	cmp	r3, #0
 8003628:	d003      	beq.n	8003632 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 800362a:	69ba      	ldr	r2, [r7, #24]
 800362c:	693b      	ldr	r3, [r7, #16]
 800362e:	4313      	orrs	r3, r2
 8003630:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8003632:	4a1f      	ldr	r2, [pc, #124]	; (80036b0 <HAL_GPIO_Init+0x354>)
 8003634:	69bb      	ldr	r3, [r7, #24]
 8003636:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8003638:	4b1d      	ldr	r3, [pc, #116]	; (80036b0 <HAL_GPIO_Init+0x354>)
 800363a:	68db      	ldr	r3, [r3, #12]
 800363c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800363e:	693b      	ldr	r3, [r7, #16]
 8003640:	43db      	mvns	r3, r3
 8003642:	69ba      	ldr	r2, [r7, #24]
 8003644:	4013      	ands	r3, r2
 8003646:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8003648:	683b      	ldr	r3, [r7, #0]
 800364a:	685b      	ldr	r3, [r3, #4]
 800364c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003650:	2b00      	cmp	r3, #0
 8003652:	d003      	beq.n	800365c <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8003654:	69ba      	ldr	r2, [r7, #24]
 8003656:	693b      	ldr	r3, [r7, #16]
 8003658:	4313      	orrs	r3, r2
 800365a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 800365c:	4a14      	ldr	r2, [pc, #80]	; (80036b0 <HAL_GPIO_Init+0x354>)
 800365e:	69bb      	ldr	r3, [r7, #24]
 8003660:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003662:	69fb      	ldr	r3, [r7, #28]
 8003664:	3301      	adds	r3, #1
 8003666:	61fb      	str	r3, [r7, #28]
 8003668:	69fb      	ldr	r3, [r7, #28]
 800366a:	2b0f      	cmp	r3, #15
 800366c:	f67f ae84 	bls.w	8003378 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8003670:	bf00      	nop
 8003672:	bf00      	nop
 8003674:	3724      	adds	r7, #36	; 0x24
 8003676:	46bd      	mov	sp, r7
 8003678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800367c:	4770      	bx	lr
 800367e:	bf00      	nop
 8003680:	40023800 	.word	0x40023800
 8003684:	40013800 	.word	0x40013800
 8003688:	40020000 	.word	0x40020000
 800368c:	40020400 	.word	0x40020400
 8003690:	40020800 	.word	0x40020800
 8003694:	40020c00 	.word	0x40020c00
 8003698:	40021000 	.word	0x40021000
 800369c:	40021400 	.word	0x40021400
 80036a0:	40021800 	.word	0x40021800
 80036a4:	40021c00 	.word	0x40021c00
 80036a8:	40022000 	.word	0x40022000
 80036ac:	40022400 	.word	0x40022400
 80036b0:	40013c00 	.word	0x40013c00

080036b4 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80036b4:	b480      	push	{r7}
 80036b6:	b083      	sub	sp, #12
 80036b8:	af00      	add	r7, sp, #0
 80036ba:	6078      	str	r0, [r7, #4]
 80036bc:	460b      	mov	r3, r1
 80036be:	807b      	strh	r3, [r7, #2]
 80036c0:	4613      	mov	r3, r2
 80036c2:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80036c4:	787b      	ldrb	r3, [r7, #1]
 80036c6:	2b00      	cmp	r3, #0
 80036c8:	d003      	beq.n	80036d2 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80036ca:	887a      	ldrh	r2, [r7, #2]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80036d0:	e003      	b.n	80036da <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80036d2:	887b      	ldrh	r3, [r7, #2]
 80036d4:	041a      	lsls	r2, r3, #16
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	619a      	str	r2, [r3, #24]
}
 80036da:	bf00      	nop
 80036dc:	370c      	adds	r7, #12
 80036de:	46bd      	mov	sp, r7
 80036e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036e4:	4770      	bx	lr
	...

080036e8 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 80036e8:	b580      	push	{r7, lr}
 80036ea:	b084      	sub	sp, #16
 80036ec:	af00      	add	r7, sp, #0
 80036ee:	6078      	str	r0, [r7, #4]
  uint32_t tmp, tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	2b00      	cmp	r3, #0
 80036f4:	d101      	bne.n	80036fa <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 80036f6:	2301      	movs	r3, #1
 80036f8:	e0bf      	b.n	800387a <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8003700:	b2db      	uxtb	r3, r3
 8003702:	2b00      	cmp	r3, #0
 8003704:	d106      	bne.n	8003714 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	2200      	movs	r2, #0
 800370a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 800370e:	6878      	ldr	r0, [r7, #4]
 8003710:	f7fd ffde 	bl	80016d0 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	2202      	movs	r2, #2
 8003718:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	681b      	ldr	r3, [r3, #0]
 8003720:	699a      	ldr	r2, [r3, #24]
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800372a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	6999      	ldr	r1, [r3, #24]
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	685a      	ldr	r2, [r3, #4]
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	689b      	ldr	r3, [r3, #8]
 800373a:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003740:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8003742:	687b      	ldr	r3, [r7, #4]
 8003744:	691b      	ldr	r3, [r3, #16]
 8003746:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	681b      	ldr	r3, [r3, #0]
 800374c:	430a      	orrs	r2, r1
 800374e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	6899      	ldr	r1, [r3, #8]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	681a      	ldr	r2, [r3, #0]
 800375a:	4b4a      	ldr	r3, [pc, #296]	; (8003884 <HAL_LTDC_Init+0x19c>)
 800375c:	400b      	ands	r3, r1
 800375e:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	695b      	ldr	r3, [r3, #20]
 8003764:	041b      	lsls	r3, r3, #16
 8003766:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	681b      	ldr	r3, [r3, #0]
 800376c:	6899      	ldr	r1, [r3, #8]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	699a      	ldr	r2, [r3, #24]
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	431a      	orrs	r2, r3
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	430a      	orrs	r2, r1
 800377c:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	68d9      	ldr	r1, [r3, #12]
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	681a      	ldr	r2, [r3, #0]
 8003788:	4b3e      	ldr	r3, [pc, #248]	; (8003884 <HAL_LTDC_Init+0x19c>)
 800378a:	400b      	ands	r3, r1
 800378c:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	69db      	ldr	r3, [r3, #28]
 8003792:	041b      	lsls	r3, r3, #16
 8003794:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	68d9      	ldr	r1, [r3, #12]
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	6a1a      	ldr	r2, [r3, #32]
 80037a0:	68fb      	ldr	r3, [r7, #12]
 80037a2:	431a      	orrs	r2, r3
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	430a      	orrs	r2, r1
 80037aa:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	681b      	ldr	r3, [r3, #0]
 80037b0:	6919      	ldr	r1, [r3, #16]
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	681a      	ldr	r2, [r3, #0]
 80037b6:	4b33      	ldr	r3, [pc, #204]	; (8003884 <HAL_LTDC_Init+0x19c>)
 80037b8:	400b      	ands	r3, r1
 80037ba:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037c0:	041b      	lsls	r3, r3, #16
 80037c2:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	681b      	ldr	r3, [r3, #0]
 80037c8:	6919      	ldr	r1, [r3, #16]
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80037ce:	68fb      	ldr	r3, [r7, #12]
 80037d0:	431a      	orrs	r2, r3
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	430a      	orrs	r2, r1
 80037d8:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	6959      	ldr	r1, [r3, #20]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681a      	ldr	r2, [r3, #0]
 80037e4:	4b27      	ldr	r3, [pc, #156]	; (8003884 <HAL_LTDC_Init+0x19c>)
 80037e6:	400b      	ands	r3, r1
 80037e8:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80037ee:	041b      	lsls	r3, r3, #16
 80037f0:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	6959      	ldr	r1, [r3, #20]
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	431a      	orrs	r2, r3
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	681b      	ldr	r3, [r3, #0]
 8003804:	430a      	orrs	r2, r1
 8003806:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800380e:	021b      	lsls	r3, r3, #8
 8003810:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8003818:	041b      	lsls	r3, r3, #16
 800381a:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	681b      	ldr	r3, [r3, #0]
 8003820:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	681b      	ldr	r3, [r3, #0]
 8003826:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800382a:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003832:	68ba      	ldr	r2, [r7, #8]
 8003834:	68fb      	ldr	r3, [r7, #12]
 8003836:	4313      	orrs	r3, r2
 8003838:	687a      	ldr	r2, [r7, #4]
 800383a:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 800383e:	431a      	orrs	r2, r3
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	430a      	orrs	r2, r1
 8003846:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	f042 0206 	orr.w	r2, r2, #6
 8003856:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	699a      	ldr	r2, [r3, #24]
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	f042 0201 	orr.w	r2, r2, #1
 8003866:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	2200      	movs	r2, #0
 800386c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	2201      	movs	r2, #1
 8003874:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 8003878:	2300      	movs	r3, #0
}
 800387a:	4618      	mov	r0, r3
 800387c:	3710      	adds	r7, #16
 800387e:	46bd      	mov	sp, r7
 8003880:	bd80      	pop	{r7, pc}
 8003882:	bf00      	nop
 8003884:	f000f800 	.word	0xf000f800

08003888 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8003888:	b580      	push	{r7, lr}
 800388a:	b084      	sub	sp, #16
 800388c:	af00      	add	r7, sp, #0
 800388e:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	681b      	ldr	r3, [r3, #0]
 8003894:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003896:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800389e:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	f003 0304 	and.w	r3, r3, #4
 80038a6:	2b00      	cmp	r3, #0
 80038a8:	d023      	beq.n	80038f2 <HAL_LTDC_IRQHandler+0x6a>
 80038aa:	68bb      	ldr	r3, [r7, #8]
 80038ac:	f003 0304 	and.w	r3, r3, #4
 80038b0:	2b00      	cmp	r3, #0
 80038b2:	d01e      	beq.n	80038f2 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	f022 0204 	bic.w	r2, r2, #4
 80038c2:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	2204      	movs	r2, #4
 80038ca:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80038d2:	f043 0201 	orr.w	r2, r3, #1
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	2204      	movs	r2, #4
 80038e0:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	2200      	movs	r2, #0
 80038e8:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 80038ec:	6878      	ldr	r0, [r7, #4]
 80038ee:	f000 f86f 	bl	80039d0 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80038f2:	68fb      	ldr	r3, [r7, #12]
 80038f4:	f003 0302 	and.w	r3, r3, #2
 80038f8:	2b00      	cmp	r3, #0
 80038fa:	d023      	beq.n	8003944 <HAL_LTDC_IRQHandler+0xbc>
 80038fc:	68bb      	ldr	r3, [r7, #8]
 80038fe:	f003 0302 	and.w	r3, r3, #2
 8003902:	2b00      	cmp	r3, #0
 8003904:	d01e      	beq.n	8003944 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	681b      	ldr	r3, [r3, #0]
 800390a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	f022 0202 	bic.w	r2, r2, #2
 8003914:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	2202      	movs	r2, #2
 800391c:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800391e:	687b      	ldr	r3, [r7, #4]
 8003920:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8003924:	f043 0202 	orr.w	r2, r3, #2
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	2204      	movs	r2, #4
 8003932:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	2200      	movs	r2, #0
 800393a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 800393e:	6878      	ldr	r0, [r7, #4]
 8003940:	f000 f846 	bl	80039d0 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8003944:	68fb      	ldr	r3, [r7, #12]
 8003946:	f003 0301 	and.w	r3, r3, #1
 800394a:	2b00      	cmp	r3, #0
 800394c:	d01b      	beq.n	8003986 <HAL_LTDC_IRQHandler+0xfe>
 800394e:	68bb      	ldr	r3, [r7, #8]
 8003950:	f003 0301 	and.w	r3, r3, #1
 8003954:	2b00      	cmp	r3, #0
 8003956:	d016      	beq.n	8003986 <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	f022 0201 	bic.w	r2, r2, #1
 8003966:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	681b      	ldr	r3, [r3, #0]
 800396c:	2201      	movs	r2, #1
 800396e:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	2201      	movs	r2, #1
 8003974:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	2200      	movs	r2, #0
 800397c:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8003980:	6878      	ldr	r0, [r7, #4]
 8003982:	f007 fa99 	bl	800aeb8 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8003986:	68fb      	ldr	r3, [r7, #12]
 8003988:	f003 0308 	and.w	r3, r3, #8
 800398c:	2b00      	cmp	r3, #0
 800398e:	d01b      	beq.n	80039c8 <HAL_LTDC_IRQHandler+0x140>
 8003990:	68bb      	ldr	r3, [r7, #8]
 8003992:	f003 0308 	and.w	r3, r3, #8
 8003996:	2b00      	cmp	r3, #0
 8003998:	d016      	beq.n	80039c8 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800399a:	687b      	ldr	r3, [r7, #4]
 800399c:	681b      	ldr	r3, [r3, #0]
 800399e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	681b      	ldr	r3, [r3, #0]
 80039a4:	f022 0208 	bic.w	r2, r2, #8
 80039a8:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	2208      	movs	r2, #8
 80039b0:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	2201      	movs	r2, #1
 80039b6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	2200      	movs	r2, #0
 80039be:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 80039c2:	6878      	ldr	r0, [r7, #4]
 80039c4:	f000 f80e 	bl	80039e4 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 80039c8:	bf00      	nop
 80039ca:	3710      	adds	r7, #16
 80039cc:	46bd      	mov	sp, r7
 80039ce:	bd80      	pop	{r7, pc}

080039d0 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 80039d0:	b480      	push	{r7}
 80039d2:	b083      	sub	sp, #12
 80039d4:	af00      	add	r7, sp, #0
 80039d6:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 80039d8:	bf00      	nop
 80039da:	370c      	adds	r7, #12
 80039dc:	46bd      	mov	sp, r7
 80039de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039e2:	4770      	bx	lr

080039e4 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 80039e4:	b480      	push	{r7}
 80039e6:	b083      	sub	sp, #12
 80039e8:	af00      	add	r7, sp, #0
 80039ea:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 80039ec:	bf00      	nop
 80039ee:	370c      	adds	r7, #12
 80039f0:	46bd      	mov	sp, r7
 80039f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039f6:	4770      	bx	lr

080039f8 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80039f8:	b5b0      	push	{r4, r5, r7, lr}
 80039fa:	b084      	sub	sp, #16
 80039fc:	af00      	add	r7, sp, #0
 80039fe:	60f8      	str	r0, [r7, #12]
 8003a00:	60b9      	str	r1, [r7, #8]
 8003a02:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8003a04:	68fb      	ldr	r3, [r7, #12]
 8003a06:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8003a0a:	2b01      	cmp	r3, #1
 8003a0c:	d101      	bne.n	8003a12 <HAL_LTDC_ConfigLayer+0x1a>
 8003a0e:	2302      	movs	r3, #2
 8003a10:	e02c      	b.n	8003a6c <HAL_LTDC_ConfigLayer+0x74>
 8003a12:	68fb      	ldr	r3, [r7, #12]
 8003a14:	2201      	movs	r2, #1
 8003a16:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003a1a:	68fb      	ldr	r3, [r7, #12]
 8003a1c:	2202      	movs	r2, #2
 8003a1e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8003a22:	68fa      	ldr	r2, [r7, #12]
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	2134      	movs	r1, #52	; 0x34
 8003a28:	fb01 f303 	mul.w	r3, r1, r3
 8003a2c:	4413      	add	r3, r2
 8003a2e:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8003a32:	68bb      	ldr	r3, [r7, #8]
 8003a34:	4614      	mov	r4, r2
 8003a36:	461d      	mov	r5, r3
 8003a38:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003a3a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003a3c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003a3e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003a40:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003a42:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003a44:	682b      	ldr	r3, [r5, #0]
 8003a46:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8003a48:	687a      	ldr	r2, [r7, #4]
 8003a4a:	68b9      	ldr	r1, [r7, #8]
 8003a4c:	68f8      	ldr	r0, [r7, #12]
 8003a4e:	f000 f849 	bl	8003ae4 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	2201      	movs	r2, #1
 8003a58:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 8003a5a:	68fb      	ldr	r3, [r7, #12]
 8003a5c:	2201      	movs	r2, #1
 8003a5e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8003a62:	68fb      	ldr	r3, [r7, #12]
 8003a64:	2200      	movs	r2, #0
 8003a66:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8003a6a:	2300      	movs	r3, #0
}
 8003a6c:	4618      	mov	r0, r3
 8003a6e:	3710      	adds	r7, #16
 8003a70:	46bd      	mov	sp, r7
 8003a72:	bdb0      	pop	{r4, r5, r7, pc}

08003a74 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8003a74:	b480      	push	{r7}
 8003a76:	b083      	sub	sp, #12
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	6078      	str	r0, [r7, #4]
 8003a7c:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8003a84:	2b01      	cmp	r3, #1
 8003a86:	d101      	bne.n	8003a8c <HAL_LTDC_ProgramLineEvent+0x18>
 8003a88:	2302      	movs	r3, #2
 8003a8a:	e023      	b.n	8003ad4 <HAL_LTDC_ProgramLineEvent+0x60>
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	2201      	movs	r2, #1
 8003a90:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	2202      	movs	r2, #2
 8003a98:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	f022 0201 	bic.w	r2, r2, #1
 8003aaa:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8003aac:	4a0c      	ldr	r2, [pc, #48]	; (8003ae0 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8003aae:	683b      	ldr	r3, [r7, #0]
 8003ab0:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	681b      	ldr	r3, [r3, #0]
 8003ab6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	681b      	ldr	r3, [r3, #0]
 8003abc:	f042 0201 	orr.w	r2, r2, #1
 8003ac0:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	2201      	movs	r2, #1
 8003ac6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	2200      	movs	r2, #0
 8003ace:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8003ad2:	2300      	movs	r3, #0
}
 8003ad4:	4618      	mov	r0, r3
 8003ad6:	370c      	adds	r7, #12
 8003ad8:	46bd      	mov	sp, r7
 8003ada:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ade:	4770      	bx	lr
 8003ae0:	40016800 	.word	0x40016800

08003ae4 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8003ae4:	b480      	push	{r7}
 8003ae6:	b089      	sub	sp, #36	; 0x24
 8003ae8:	af00      	add	r7, sp, #0
 8003aea:	60f8      	str	r0, [r7, #12]
 8003aec:	60b9      	str	r1, [r7, #8]
 8003aee:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8003af0:	68bb      	ldr	r3, [r7, #8]
 8003af2:	685a      	ldr	r2, [r3, #4]
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	68db      	ldr	r3, [r3, #12]
 8003afa:	0c1b      	lsrs	r3, r3, #16
 8003afc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003b00:	4413      	add	r3, r2
 8003b02:	041b      	lsls	r3, r3, #16
 8003b04:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8003b06:	68fb      	ldr	r3, [r7, #12]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	461a      	mov	r2, r3
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	01db      	lsls	r3, r3, #7
 8003b10:	4413      	add	r3, r2
 8003b12:	3384      	adds	r3, #132	; 0x84
 8003b14:	685b      	ldr	r3, [r3, #4]
 8003b16:	68fa      	ldr	r2, [r7, #12]
 8003b18:	6812      	ldr	r2, [r2, #0]
 8003b1a:	4611      	mov	r1, r2
 8003b1c:	687a      	ldr	r2, [r7, #4]
 8003b1e:	01d2      	lsls	r2, r2, #7
 8003b20:	440a      	add	r2, r1
 8003b22:	3284      	adds	r2, #132	; 0x84
 8003b24:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8003b28:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003b2a:	68bb      	ldr	r3, [r7, #8]
 8003b2c:	681a      	ldr	r2, [r3, #0]
 8003b2e:	68fb      	ldr	r3, [r7, #12]
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	68db      	ldr	r3, [r3, #12]
 8003b34:	0c1b      	lsrs	r3, r3, #16
 8003b36:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003b3a:	4413      	add	r3, r2
 8003b3c:	1c5a      	adds	r2, r3, #1
 8003b3e:	68fb      	ldr	r3, [r7, #12]
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	4619      	mov	r1, r3
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	01db      	lsls	r3, r3, #7
 8003b48:	440b      	add	r3, r1
 8003b4a:	3384      	adds	r3, #132	; 0x84
 8003b4c:	4619      	mov	r1, r3
 8003b4e:	69fb      	ldr	r3, [r7, #28]
 8003b50:	4313      	orrs	r3, r2
 8003b52:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8003b54:	68bb      	ldr	r3, [r7, #8]
 8003b56:	68da      	ldr	r2, [r3, #12]
 8003b58:	68fb      	ldr	r3, [r7, #12]
 8003b5a:	681b      	ldr	r3, [r3, #0]
 8003b5c:	68db      	ldr	r3, [r3, #12]
 8003b5e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003b62:	4413      	add	r3, r2
 8003b64:	041b      	lsls	r3, r3, #16
 8003b66:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8003b68:	68fb      	ldr	r3, [r7, #12]
 8003b6a:	681b      	ldr	r3, [r3, #0]
 8003b6c:	461a      	mov	r2, r3
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	01db      	lsls	r3, r3, #7
 8003b72:	4413      	add	r3, r2
 8003b74:	3384      	adds	r3, #132	; 0x84
 8003b76:	689b      	ldr	r3, [r3, #8]
 8003b78:	68fa      	ldr	r2, [r7, #12]
 8003b7a:	6812      	ldr	r2, [r2, #0]
 8003b7c:	4611      	mov	r1, r2
 8003b7e:	687a      	ldr	r2, [r7, #4]
 8003b80:	01d2      	lsls	r2, r2, #7
 8003b82:	440a      	add	r2, r1
 8003b84:	3284      	adds	r2, #132	; 0x84
 8003b86:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8003b8a:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8003b8c:	68bb      	ldr	r3, [r7, #8]
 8003b8e:	689a      	ldr	r2, [r3, #8]
 8003b90:	68fb      	ldr	r3, [r7, #12]
 8003b92:	681b      	ldr	r3, [r3, #0]
 8003b94:	68db      	ldr	r3, [r3, #12]
 8003b96:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003b9a:	4413      	add	r3, r2
 8003b9c:	1c5a      	adds	r2, r3, #1
 8003b9e:	68fb      	ldr	r3, [r7, #12]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	4619      	mov	r1, r3
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	01db      	lsls	r3, r3, #7
 8003ba8:	440b      	add	r3, r1
 8003baa:	3384      	adds	r3, #132	; 0x84
 8003bac:	4619      	mov	r1, r3
 8003bae:	69fb      	ldr	r3, [r7, #28]
 8003bb0:	4313      	orrs	r3, r2
 8003bb2:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8003bb4:	68fb      	ldr	r3, [r7, #12]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	461a      	mov	r2, r3
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	01db      	lsls	r3, r3, #7
 8003bbe:	4413      	add	r3, r2
 8003bc0:	3384      	adds	r3, #132	; 0x84
 8003bc2:	691b      	ldr	r3, [r3, #16]
 8003bc4:	68fa      	ldr	r2, [r7, #12]
 8003bc6:	6812      	ldr	r2, [r2, #0]
 8003bc8:	4611      	mov	r1, r2
 8003bca:	687a      	ldr	r2, [r7, #4]
 8003bcc:	01d2      	lsls	r2, r2, #7
 8003bce:	440a      	add	r2, r1
 8003bd0:	3284      	adds	r2, #132	; 0x84
 8003bd2:	f023 0307 	bic.w	r3, r3, #7
 8003bd6:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	461a      	mov	r2, r3
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	01db      	lsls	r3, r3, #7
 8003be2:	4413      	add	r3, r2
 8003be4:	3384      	adds	r3, #132	; 0x84
 8003be6:	461a      	mov	r2, r3
 8003be8:	68bb      	ldr	r3, [r7, #8]
 8003bea:	691b      	ldr	r3, [r3, #16]
 8003bec:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8003bee:	68bb      	ldr	r3, [r7, #8]
 8003bf0:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8003bf4:	021b      	lsls	r3, r3, #8
 8003bf6:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8003bf8:	68bb      	ldr	r3, [r7, #8]
 8003bfa:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8003bfe:	041b      	lsls	r3, r3, #16
 8003c00:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8003c02:	68bb      	ldr	r3, [r7, #8]
 8003c04:	699b      	ldr	r3, [r3, #24]
 8003c06:	061b      	lsls	r3, r3, #24
 8003c08:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8003c0a:	68fb      	ldr	r3, [r7, #12]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	461a      	mov	r2, r3
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	01db      	lsls	r3, r3, #7
 8003c14:	4413      	add	r3, r2
 8003c16:	3384      	adds	r3, #132	; 0x84
 8003c18:	699b      	ldr	r3, [r3, #24]
 8003c1a:	68fb      	ldr	r3, [r7, #12]
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	461a      	mov	r2, r3
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	01db      	lsls	r3, r3, #7
 8003c24:	4413      	add	r3, r2
 8003c26:	3384      	adds	r3, #132	; 0x84
 8003c28:	461a      	mov	r2, r3
 8003c2a:	2300      	movs	r3, #0
 8003c2c:	6193      	str	r3, [r2, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8003c2e:	68bb      	ldr	r3, [r7, #8]
 8003c30:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8003c34:	461a      	mov	r2, r3
 8003c36:	69fb      	ldr	r3, [r7, #28]
 8003c38:	431a      	orrs	r2, r3
 8003c3a:	69bb      	ldr	r3, [r7, #24]
 8003c3c:	431a      	orrs	r2, r3
 8003c3e:	68fb      	ldr	r3, [r7, #12]
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	4619      	mov	r1, r3
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	01db      	lsls	r3, r3, #7
 8003c48:	440b      	add	r3, r1
 8003c4a:	3384      	adds	r3, #132	; 0x84
 8003c4c:	4619      	mov	r1, r3
 8003c4e:	697b      	ldr	r3, [r7, #20]
 8003c50:	4313      	orrs	r3, r2
 8003c52:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	461a      	mov	r2, r3
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	01db      	lsls	r3, r3, #7
 8003c5e:	4413      	add	r3, r2
 8003c60:	3384      	adds	r3, #132	; 0x84
 8003c62:	695b      	ldr	r3, [r3, #20]
 8003c64:	68fa      	ldr	r2, [r7, #12]
 8003c66:	6812      	ldr	r2, [r2, #0]
 8003c68:	4611      	mov	r1, r2
 8003c6a:	687a      	ldr	r2, [r7, #4]
 8003c6c:	01d2      	lsls	r2, r2, #7
 8003c6e:	440a      	add	r2, r1
 8003c70:	3284      	adds	r2, #132	; 0x84
 8003c72:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8003c76:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8003c78:	68fb      	ldr	r3, [r7, #12]
 8003c7a:	681b      	ldr	r3, [r3, #0]
 8003c7c:	461a      	mov	r2, r3
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	01db      	lsls	r3, r3, #7
 8003c82:	4413      	add	r3, r2
 8003c84:	3384      	adds	r3, #132	; 0x84
 8003c86:	461a      	mov	r2, r3
 8003c88:	68bb      	ldr	r3, [r7, #8]
 8003c8a:	695b      	ldr	r3, [r3, #20]
 8003c8c:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8003c8e:	68fb      	ldr	r3, [r7, #12]
 8003c90:	681b      	ldr	r3, [r3, #0]
 8003c92:	461a      	mov	r2, r3
 8003c94:	687b      	ldr	r3, [r7, #4]
 8003c96:	01db      	lsls	r3, r3, #7
 8003c98:	4413      	add	r3, r2
 8003c9a:	3384      	adds	r3, #132	; 0x84
 8003c9c:	69db      	ldr	r3, [r3, #28]
 8003c9e:	68fa      	ldr	r2, [r7, #12]
 8003ca0:	6812      	ldr	r2, [r2, #0]
 8003ca2:	4611      	mov	r1, r2
 8003ca4:	687a      	ldr	r2, [r7, #4]
 8003ca6:	01d2      	lsls	r2, r2, #7
 8003ca8:	440a      	add	r2, r1
 8003caa:	3284      	adds	r2, #132	; 0x84
 8003cac:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8003cb0:	f023 0307 	bic.w	r3, r3, #7
 8003cb4:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8003cb6:	68bb      	ldr	r3, [r7, #8]
 8003cb8:	69da      	ldr	r2, [r3, #28]
 8003cba:	68bb      	ldr	r3, [r7, #8]
 8003cbc:	6a1b      	ldr	r3, [r3, #32]
 8003cbe:	68f9      	ldr	r1, [r7, #12]
 8003cc0:	6809      	ldr	r1, [r1, #0]
 8003cc2:	4608      	mov	r0, r1
 8003cc4:	6879      	ldr	r1, [r7, #4]
 8003cc6:	01c9      	lsls	r1, r1, #7
 8003cc8:	4401      	add	r1, r0
 8003cca:	3184      	adds	r1, #132	; 0x84
 8003ccc:	4313      	orrs	r3, r2
 8003cce:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	461a      	mov	r2, r3
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	01db      	lsls	r3, r3, #7
 8003cda:	4413      	add	r3, r2
 8003cdc:	3384      	adds	r3, #132	; 0x84
 8003cde:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ce0:	68fb      	ldr	r3, [r7, #12]
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	461a      	mov	r2, r3
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	01db      	lsls	r3, r3, #7
 8003cea:	4413      	add	r3, r2
 8003cec:	3384      	adds	r3, #132	; 0x84
 8003cee:	461a      	mov	r2, r3
 8003cf0:	2300      	movs	r3, #0
 8003cf2:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8003cf4:	68fb      	ldr	r3, [r7, #12]
 8003cf6:	681b      	ldr	r3, [r3, #0]
 8003cf8:	461a      	mov	r2, r3
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	01db      	lsls	r3, r3, #7
 8003cfe:	4413      	add	r3, r2
 8003d00:	3384      	adds	r3, #132	; 0x84
 8003d02:	461a      	mov	r2, r3
 8003d04:	68bb      	ldr	r3, [r7, #8]
 8003d06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d08:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8003d0a:	68bb      	ldr	r3, [r7, #8]
 8003d0c:	691b      	ldr	r3, [r3, #16]
 8003d0e:	2b00      	cmp	r3, #0
 8003d10:	d102      	bne.n	8003d18 <LTDC_SetConfig+0x234>
  {
    tmp = 4U;
 8003d12:	2304      	movs	r3, #4
 8003d14:	61fb      	str	r3, [r7, #28]
 8003d16:	e01b      	b.n	8003d50 <LTDC_SetConfig+0x26c>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8003d18:	68bb      	ldr	r3, [r7, #8]
 8003d1a:	691b      	ldr	r3, [r3, #16]
 8003d1c:	2b01      	cmp	r3, #1
 8003d1e:	d102      	bne.n	8003d26 <LTDC_SetConfig+0x242>
  {
    tmp = 3U;
 8003d20:	2303      	movs	r3, #3
 8003d22:	61fb      	str	r3, [r7, #28]
 8003d24:	e014      	b.n	8003d50 <LTDC_SetConfig+0x26c>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8003d26:	68bb      	ldr	r3, [r7, #8]
 8003d28:	691b      	ldr	r3, [r3, #16]
 8003d2a:	2b04      	cmp	r3, #4
 8003d2c:	d00b      	beq.n	8003d46 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8003d2e:	68bb      	ldr	r3, [r7, #8]
 8003d30:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8003d32:	2b02      	cmp	r3, #2
 8003d34:	d007      	beq.n	8003d46 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8003d36:	68bb      	ldr	r3, [r7, #8]
 8003d38:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8003d3a:	2b03      	cmp	r3, #3
 8003d3c:	d003      	beq.n	8003d46 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8003d3e:	68bb      	ldr	r3, [r7, #8]
 8003d40:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8003d42:	2b07      	cmp	r3, #7
 8003d44:	d102      	bne.n	8003d4c <LTDC_SetConfig+0x268>
  {
    tmp = 2U;
 8003d46:	2302      	movs	r3, #2
 8003d48:	61fb      	str	r3, [r7, #28]
 8003d4a:	e001      	b.n	8003d50 <LTDC_SetConfig+0x26c>
  }
  else
  {
    tmp = 1U;
 8003d4c:	2301      	movs	r3, #1
 8003d4e:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8003d50:	68fb      	ldr	r3, [r7, #12]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	461a      	mov	r2, r3
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	01db      	lsls	r3, r3, #7
 8003d5a:	4413      	add	r3, r2
 8003d5c:	3384      	adds	r3, #132	; 0x84
 8003d5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d60:	68fa      	ldr	r2, [r7, #12]
 8003d62:	6812      	ldr	r2, [r2, #0]
 8003d64:	4611      	mov	r1, r2
 8003d66:	687a      	ldr	r2, [r7, #4]
 8003d68:	01d2      	lsls	r2, r2, #7
 8003d6a:	440a      	add	r2, r1
 8003d6c:	3284      	adds	r2, #132	; 0x84
 8003d6e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8003d72:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8003d74:	68bb      	ldr	r3, [r7, #8]
 8003d76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003d78:	69fa      	ldr	r2, [r7, #28]
 8003d7a:	fb02 f303 	mul.w	r3, r2, r3
 8003d7e:	041a      	lsls	r2, r3, #16
 8003d80:	68bb      	ldr	r3, [r7, #8]
 8003d82:	6859      	ldr	r1, [r3, #4]
 8003d84:	68bb      	ldr	r3, [r7, #8]
 8003d86:	681b      	ldr	r3, [r3, #0]
 8003d88:	1acb      	subs	r3, r1, r3
 8003d8a:	69f9      	ldr	r1, [r7, #28]
 8003d8c:	fb01 f303 	mul.w	r3, r1, r3
 8003d90:	3303      	adds	r3, #3
 8003d92:	68f9      	ldr	r1, [r7, #12]
 8003d94:	6809      	ldr	r1, [r1, #0]
 8003d96:	4608      	mov	r0, r1
 8003d98:	6879      	ldr	r1, [r7, #4]
 8003d9a:	01c9      	lsls	r1, r1, #7
 8003d9c:	4401      	add	r1, r0
 8003d9e:	3184      	adds	r1, #132	; 0x84
 8003da0:	4313      	orrs	r3, r2
 8003da2:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8003da4:	68fb      	ldr	r3, [r7, #12]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	461a      	mov	r2, r3
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	01db      	lsls	r3, r3, #7
 8003dae:	4413      	add	r3, r2
 8003db0:	3384      	adds	r3, #132	; 0x84
 8003db2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003db4:	68fa      	ldr	r2, [r7, #12]
 8003db6:	6812      	ldr	r2, [r2, #0]
 8003db8:	4611      	mov	r1, r2
 8003dba:	687a      	ldr	r2, [r7, #4]
 8003dbc:	01d2      	lsls	r2, r2, #7
 8003dbe:	440a      	add	r2, r1
 8003dc0:	3284      	adds	r2, #132	; 0x84
 8003dc2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8003dc6:	f023 0307 	bic.w	r3, r3, #7
 8003dca:	6313      	str	r3, [r2, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8003dcc:	68fb      	ldr	r3, [r7, #12]
 8003dce:	681b      	ldr	r3, [r3, #0]
 8003dd0:	461a      	mov	r2, r3
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	01db      	lsls	r3, r3, #7
 8003dd6:	4413      	add	r3, r2
 8003dd8:	3384      	adds	r3, #132	; 0x84
 8003dda:	461a      	mov	r2, r3
 8003ddc:	68bb      	ldr	r3, [r7, #8]
 8003dde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003de0:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	461a      	mov	r2, r3
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	01db      	lsls	r3, r3, #7
 8003dec:	4413      	add	r3, r2
 8003dee:	3384      	adds	r3, #132	; 0x84
 8003df0:	681b      	ldr	r3, [r3, #0]
 8003df2:	68fa      	ldr	r2, [r7, #12]
 8003df4:	6812      	ldr	r2, [r2, #0]
 8003df6:	4611      	mov	r1, r2
 8003df8:	687a      	ldr	r2, [r7, #4]
 8003dfa:	01d2      	lsls	r2, r2, #7
 8003dfc:	440a      	add	r2, r1
 8003dfe:	3284      	adds	r2, #132	; 0x84
 8003e00:	f043 0301 	orr.w	r3, r3, #1
 8003e04:	6013      	str	r3, [r2, #0]
}
 8003e06:	bf00      	nop
 8003e08:	3724      	adds	r7, #36	; 0x24
 8003e0a:	46bd      	mov	sp, r7
 8003e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e10:	4770      	bx	lr
	...

08003e14 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8003e14:	b580      	push	{r7, lr}
 8003e16:	b082      	sub	sp, #8
 8003e18:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 8003e1a:	2300      	movs	r3, #0
 8003e1c:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8003e1e:	2300      	movs	r3, #0
 8003e20:	603b      	str	r3, [r7, #0]
 8003e22:	4b20      	ldr	r3, [pc, #128]	; (8003ea4 <HAL_PWREx_EnableOverDrive+0x90>)
 8003e24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e26:	4a1f      	ldr	r2, [pc, #124]	; (8003ea4 <HAL_PWREx_EnableOverDrive+0x90>)
 8003e28:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003e2c:	6413      	str	r3, [r2, #64]	; 0x40
 8003e2e:	4b1d      	ldr	r3, [pc, #116]	; (8003ea4 <HAL_PWREx_EnableOverDrive+0x90>)
 8003e30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003e36:	603b      	str	r3, [r7, #0]
 8003e38:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8003e3a:	4b1b      	ldr	r3, [pc, #108]	; (8003ea8 <HAL_PWREx_EnableOverDrive+0x94>)
 8003e3c:	2201      	movs	r2, #1
 8003e3e:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8003e40:	f7fe f96a 	bl	8002118 <HAL_GetTick>
 8003e44:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8003e46:	e009      	b.n	8003e5c <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8003e48:	f7fe f966 	bl	8002118 <HAL_GetTick>
 8003e4c:	4602      	mov	r2, r0
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	1ad3      	subs	r3, r2, r3
 8003e52:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003e56:	d901      	bls.n	8003e5c <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 8003e58:	2303      	movs	r3, #3
 8003e5a:	e01f      	b.n	8003e9c <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8003e5c:	4b13      	ldr	r3, [pc, #76]	; (8003eac <HAL_PWREx_EnableOverDrive+0x98>)
 8003e5e:	685b      	ldr	r3, [r3, #4]
 8003e60:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003e64:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003e68:	d1ee      	bne.n	8003e48 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8003e6a:	4b11      	ldr	r3, [pc, #68]	; (8003eb0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8003e6c:	2201      	movs	r2, #1
 8003e6e:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8003e70:	f7fe f952 	bl	8002118 <HAL_GetTick>
 8003e74:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8003e76:	e009      	b.n	8003e8c <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8003e78:	f7fe f94e 	bl	8002118 <HAL_GetTick>
 8003e7c:	4602      	mov	r2, r0
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	1ad3      	subs	r3, r2, r3
 8003e82:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003e86:	d901      	bls.n	8003e8c <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 8003e88:	2303      	movs	r3, #3
 8003e8a:	e007      	b.n	8003e9c <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8003e8c:	4b07      	ldr	r3, [pc, #28]	; (8003eac <HAL_PWREx_EnableOverDrive+0x98>)
 8003e8e:	685b      	ldr	r3, [r3, #4]
 8003e90:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003e94:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8003e98:	d1ee      	bne.n	8003e78 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 8003e9a:	2300      	movs	r3, #0
}
 8003e9c:	4618      	mov	r0, r3
 8003e9e:	3708      	adds	r7, #8
 8003ea0:	46bd      	mov	sp, r7
 8003ea2:	bd80      	pop	{r7, pc}
 8003ea4:	40023800 	.word	0x40023800
 8003ea8:	420e0040 	.word	0x420e0040
 8003eac:	40007000 	.word	0x40007000
 8003eb0:	420e0044 	.word	0x420e0044

08003eb4 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8003eb4:	b580      	push	{r7, lr}
 8003eb6:	b086      	sub	sp, #24
 8003eb8:	af00      	add	r7, sp, #0
 8003eba:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	2b00      	cmp	r3, #0
 8003ec0:	d101      	bne.n	8003ec6 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8003ec2:	2301      	movs	r3, #1
 8003ec4:	e25e      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	f003 0301 	and.w	r3, r3, #1
 8003ece:	2b00      	cmp	r3, #0
 8003ed0:	d075      	beq.n	8003fbe <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8003ed2:	4b88      	ldr	r3, [pc, #544]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003ed4:	689b      	ldr	r3, [r3, #8]
 8003ed6:	f003 030c 	and.w	r3, r3, #12
 8003eda:	2b04      	cmp	r3, #4
 8003edc:	d00c      	beq.n	8003ef8 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8003ede:	4b85      	ldr	r3, [pc, #532]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003ee0:	689b      	ldr	r3, [r3, #8]
 8003ee2:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8003ee6:	2b08      	cmp	r3, #8
 8003ee8:	d112      	bne.n	8003f10 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8003eea:	4b82      	ldr	r3, [pc, #520]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003eec:	685b      	ldr	r3, [r3, #4]
 8003eee:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003ef2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003ef6:	d10b      	bne.n	8003f10 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003ef8:	4b7e      	ldr	r3, [pc, #504]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003efa:	681b      	ldr	r3, [r3, #0]
 8003efc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d05b      	beq.n	8003fbc <HAL_RCC_OscConfig+0x108>
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	685b      	ldr	r3, [r3, #4]
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d157      	bne.n	8003fbc <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8003f0c:	2301      	movs	r3, #1
 8003f0e:	e239      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	685b      	ldr	r3, [r3, #4]
 8003f14:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003f18:	d106      	bne.n	8003f28 <HAL_RCC_OscConfig+0x74>
 8003f1a:	4b76      	ldr	r3, [pc, #472]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	4a75      	ldr	r2, [pc, #468]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f20:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003f24:	6013      	str	r3, [r2, #0]
 8003f26:	e01d      	b.n	8003f64 <HAL_RCC_OscConfig+0xb0>
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	685b      	ldr	r3, [r3, #4]
 8003f2c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003f30:	d10c      	bne.n	8003f4c <HAL_RCC_OscConfig+0x98>
 8003f32:	4b70      	ldr	r3, [pc, #448]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	4a6f      	ldr	r2, [pc, #444]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f38:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003f3c:	6013      	str	r3, [r2, #0]
 8003f3e:	4b6d      	ldr	r3, [pc, #436]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	4a6c      	ldr	r2, [pc, #432]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f44:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003f48:	6013      	str	r3, [r2, #0]
 8003f4a:	e00b      	b.n	8003f64 <HAL_RCC_OscConfig+0xb0>
 8003f4c:	4b69      	ldr	r3, [pc, #420]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f4e:	681b      	ldr	r3, [r3, #0]
 8003f50:	4a68      	ldr	r2, [pc, #416]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f52:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003f56:	6013      	str	r3, [r2, #0]
 8003f58:	4b66      	ldr	r3, [pc, #408]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	4a65      	ldr	r2, [pc, #404]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f5e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003f62:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	685b      	ldr	r3, [r3, #4]
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	d013      	beq.n	8003f94 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003f6c:	f7fe f8d4 	bl	8002118 <HAL_GetTick>
 8003f70:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003f72:	e008      	b.n	8003f86 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003f74:	f7fe f8d0 	bl	8002118 <HAL_GetTick>
 8003f78:	4602      	mov	r2, r0
 8003f7a:	693b      	ldr	r3, [r7, #16]
 8003f7c:	1ad3      	subs	r3, r2, r3
 8003f7e:	2b64      	cmp	r3, #100	; 0x64
 8003f80:	d901      	bls.n	8003f86 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8003f82:	2303      	movs	r3, #3
 8003f84:	e1fe      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8003f86:	4b5b      	ldr	r3, [pc, #364]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	d0f0      	beq.n	8003f74 <HAL_RCC_OscConfig+0xc0>
 8003f92:	e014      	b.n	8003fbe <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003f94:	f7fe f8c0 	bl	8002118 <HAL_GetTick>
 8003f98:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003f9a:	e008      	b.n	8003fae <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003f9c:	f7fe f8bc 	bl	8002118 <HAL_GetTick>
 8003fa0:	4602      	mov	r2, r0
 8003fa2:	693b      	ldr	r3, [r7, #16]
 8003fa4:	1ad3      	subs	r3, r2, r3
 8003fa6:	2b64      	cmp	r3, #100	; 0x64
 8003fa8:	d901      	bls.n	8003fae <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8003faa:	2303      	movs	r3, #3
 8003fac:	e1ea      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003fae:	4b51      	ldr	r3, [pc, #324]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003fb6:	2b00      	cmp	r3, #0
 8003fb8:	d1f0      	bne.n	8003f9c <HAL_RCC_OscConfig+0xe8>
 8003fba:	e000      	b.n	8003fbe <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003fbc:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	f003 0302 	and.w	r3, r3, #2
 8003fc6:	2b00      	cmp	r3, #0
 8003fc8:	d063      	beq.n	8004092 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8003fca:	4b4a      	ldr	r3, [pc, #296]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003fcc:	689b      	ldr	r3, [r3, #8]
 8003fce:	f003 030c 	and.w	r3, r3, #12
 8003fd2:	2b00      	cmp	r3, #0
 8003fd4:	d00b      	beq.n	8003fee <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8003fd6:	4b47      	ldr	r3, [pc, #284]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003fd8:	689b      	ldr	r3, [r3, #8]
 8003fda:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8003fde:	2b08      	cmp	r3, #8
 8003fe0:	d11c      	bne.n	800401c <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8003fe2:	4b44      	ldr	r3, [pc, #272]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003fe4:	685b      	ldr	r3, [r3, #4]
 8003fe6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003fea:	2b00      	cmp	r3, #0
 8003fec:	d116      	bne.n	800401c <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8003fee:	4b41      	ldr	r3, [pc, #260]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	f003 0302 	and.w	r3, r3, #2
 8003ff6:	2b00      	cmp	r3, #0
 8003ff8:	d005      	beq.n	8004006 <HAL_RCC_OscConfig+0x152>
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	68db      	ldr	r3, [r3, #12]
 8003ffe:	2b01      	cmp	r3, #1
 8004000:	d001      	beq.n	8004006 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8004002:	2301      	movs	r3, #1
 8004004:	e1be      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004006:	4b3b      	ldr	r3, [pc, #236]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	691b      	ldr	r3, [r3, #16]
 8004012:	00db      	lsls	r3, r3, #3
 8004014:	4937      	ldr	r1, [pc, #220]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8004016:	4313      	orrs	r3, r2
 8004018:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800401a:	e03a      	b.n	8004092 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	68db      	ldr	r3, [r3, #12]
 8004020:	2b00      	cmp	r3, #0
 8004022:	d020      	beq.n	8004066 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004024:	4b34      	ldr	r3, [pc, #208]	; (80040f8 <HAL_RCC_OscConfig+0x244>)
 8004026:	2201      	movs	r2, #1
 8004028:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800402a:	f7fe f875 	bl	8002118 <HAL_GetTick>
 800402e:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004030:	e008      	b.n	8004044 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004032:	f7fe f871 	bl	8002118 <HAL_GetTick>
 8004036:	4602      	mov	r2, r0
 8004038:	693b      	ldr	r3, [r7, #16]
 800403a:	1ad3      	subs	r3, r2, r3
 800403c:	2b02      	cmp	r3, #2
 800403e:	d901      	bls.n	8004044 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8004040:	2303      	movs	r3, #3
 8004042:	e19f      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004044:	4b2b      	ldr	r3, [pc, #172]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	f003 0302 	and.w	r3, r3, #2
 800404c:	2b00      	cmp	r3, #0
 800404e:	d0f0      	beq.n	8004032 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004050:	4b28      	ldr	r3, [pc, #160]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	691b      	ldr	r3, [r3, #16]
 800405c:	00db      	lsls	r3, r3, #3
 800405e:	4925      	ldr	r1, [pc, #148]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8004060:	4313      	orrs	r3, r2
 8004062:	600b      	str	r3, [r1, #0]
 8004064:	e015      	b.n	8004092 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004066:	4b24      	ldr	r3, [pc, #144]	; (80040f8 <HAL_RCC_OscConfig+0x244>)
 8004068:	2200      	movs	r2, #0
 800406a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800406c:	f7fe f854 	bl	8002118 <HAL_GetTick>
 8004070:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004072:	e008      	b.n	8004086 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004074:	f7fe f850 	bl	8002118 <HAL_GetTick>
 8004078:	4602      	mov	r2, r0
 800407a:	693b      	ldr	r3, [r7, #16]
 800407c:	1ad3      	subs	r3, r2, r3
 800407e:	2b02      	cmp	r3, #2
 8004080:	d901      	bls.n	8004086 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8004082:	2303      	movs	r3, #3
 8004084:	e17e      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004086:	4b1b      	ldr	r3, [pc, #108]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 8004088:	681b      	ldr	r3, [r3, #0]
 800408a:	f003 0302 	and.w	r3, r3, #2
 800408e:	2b00      	cmp	r3, #0
 8004090:	d1f0      	bne.n	8004074 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004092:	687b      	ldr	r3, [r7, #4]
 8004094:	681b      	ldr	r3, [r3, #0]
 8004096:	f003 0308 	and.w	r3, r3, #8
 800409a:	2b00      	cmp	r3, #0
 800409c:	d036      	beq.n	800410c <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	695b      	ldr	r3, [r3, #20]
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d016      	beq.n	80040d4 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80040a6:	4b15      	ldr	r3, [pc, #84]	; (80040fc <HAL_RCC_OscConfig+0x248>)
 80040a8:	2201      	movs	r2, #1
 80040aa:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80040ac:	f7fe f834 	bl	8002118 <HAL_GetTick>
 80040b0:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80040b2:	e008      	b.n	80040c6 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80040b4:	f7fe f830 	bl	8002118 <HAL_GetTick>
 80040b8:	4602      	mov	r2, r0
 80040ba:	693b      	ldr	r3, [r7, #16]
 80040bc:	1ad3      	subs	r3, r2, r3
 80040be:	2b02      	cmp	r3, #2
 80040c0:	d901      	bls.n	80040c6 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 80040c2:	2303      	movs	r3, #3
 80040c4:	e15e      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80040c6:	4b0b      	ldr	r3, [pc, #44]	; (80040f4 <HAL_RCC_OscConfig+0x240>)
 80040c8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80040ca:	f003 0302 	and.w	r3, r3, #2
 80040ce:	2b00      	cmp	r3, #0
 80040d0:	d0f0      	beq.n	80040b4 <HAL_RCC_OscConfig+0x200>
 80040d2:	e01b      	b.n	800410c <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80040d4:	4b09      	ldr	r3, [pc, #36]	; (80040fc <HAL_RCC_OscConfig+0x248>)
 80040d6:	2200      	movs	r2, #0
 80040d8:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80040da:	f7fe f81d 	bl	8002118 <HAL_GetTick>
 80040de:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80040e0:	e00e      	b.n	8004100 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80040e2:	f7fe f819 	bl	8002118 <HAL_GetTick>
 80040e6:	4602      	mov	r2, r0
 80040e8:	693b      	ldr	r3, [r7, #16]
 80040ea:	1ad3      	subs	r3, r2, r3
 80040ec:	2b02      	cmp	r3, #2
 80040ee:	d907      	bls.n	8004100 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 80040f0:	2303      	movs	r3, #3
 80040f2:	e147      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
 80040f4:	40023800 	.word	0x40023800
 80040f8:	42470000 	.word	0x42470000
 80040fc:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004100:	4b88      	ldr	r3, [pc, #544]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004102:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004104:	f003 0302 	and.w	r3, r3, #2
 8004108:	2b00      	cmp	r3, #0
 800410a:	d1ea      	bne.n	80040e2 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	681b      	ldr	r3, [r3, #0]
 8004110:	f003 0304 	and.w	r3, r3, #4
 8004114:	2b00      	cmp	r3, #0
 8004116:	f000 8097 	beq.w	8004248 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 800411a:	2300      	movs	r3, #0
 800411c:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800411e:	4b81      	ldr	r3, [pc, #516]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004122:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004126:	2b00      	cmp	r3, #0
 8004128:	d10f      	bne.n	800414a <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800412a:	2300      	movs	r3, #0
 800412c:	60bb      	str	r3, [r7, #8]
 800412e:	4b7d      	ldr	r3, [pc, #500]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004130:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004132:	4a7c      	ldr	r2, [pc, #496]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004134:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004138:	6413      	str	r3, [r2, #64]	; 0x40
 800413a:	4b7a      	ldr	r3, [pc, #488]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 800413c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800413e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004142:	60bb      	str	r3, [r7, #8]
 8004144:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004146:	2301      	movs	r3, #1
 8004148:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800414a:	4b77      	ldr	r3, [pc, #476]	; (8004328 <HAL_RCC_OscConfig+0x474>)
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004152:	2b00      	cmp	r3, #0
 8004154:	d118      	bne.n	8004188 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004156:	4b74      	ldr	r3, [pc, #464]	; (8004328 <HAL_RCC_OscConfig+0x474>)
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	4a73      	ldr	r2, [pc, #460]	; (8004328 <HAL_RCC_OscConfig+0x474>)
 800415c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004160:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004162:	f7fd ffd9 	bl	8002118 <HAL_GetTick>
 8004166:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004168:	e008      	b.n	800417c <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800416a:	f7fd ffd5 	bl	8002118 <HAL_GetTick>
 800416e:	4602      	mov	r2, r0
 8004170:	693b      	ldr	r3, [r7, #16]
 8004172:	1ad3      	subs	r3, r2, r3
 8004174:	2b02      	cmp	r3, #2
 8004176:	d901      	bls.n	800417c <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8004178:	2303      	movs	r3, #3
 800417a:	e103      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800417c:	4b6a      	ldr	r3, [pc, #424]	; (8004328 <HAL_RCC_OscConfig+0x474>)
 800417e:	681b      	ldr	r3, [r3, #0]
 8004180:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004184:	2b00      	cmp	r3, #0
 8004186:	d0f0      	beq.n	800416a <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	689b      	ldr	r3, [r3, #8]
 800418c:	2b01      	cmp	r3, #1
 800418e:	d106      	bne.n	800419e <HAL_RCC_OscConfig+0x2ea>
 8004190:	4b64      	ldr	r3, [pc, #400]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004192:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004194:	4a63      	ldr	r2, [pc, #396]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004196:	f043 0301 	orr.w	r3, r3, #1
 800419a:	6713      	str	r3, [r2, #112]	; 0x70
 800419c:	e01c      	b.n	80041d8 <HAL_RCC_OscConfig+0x324>
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	689b      	ldr	r3, [r3, #8]
 80041a2:	2b05      	cmp	r3, #5
 80041a4:	d10c      	bne.n	80041c0 <HAL_RCC_OscConfig+0x30c>
 80041a6:	4b5f      	ldr	r3, [pc, #380]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80041a8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80041aa:	4a5e      	ldr	r2, [pc, #376]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80041ac:	f043 0304 	orr.w	r3, r3, #4
 80041b0:	6713      	str	r3, [r2, #112]	; 0x70
 80041b2:	4b5c      	ldr	r3, [pc, #368]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80041b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80041b6:	4a5b      	ldr	r2, [pc, #364]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80041b8:	f043 0301 	orr.w	r3, r3, #1
 80041bc:	6713      	str	r3, [r2, #112]	; 0x70
 80041be:	e00b      	b.n	80041d8 <HAL_RCC_OscConfig+0x324>
 80041c0:	4b58      	ldr	r3, [pc, #352]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80041c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80041c4:	4a57      	ldr	r2, [pc, #348]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80041c6:	f023 0301 	bic.w	r3, r3, #1
 80041ca:	6713      	str	r3, [r2, #112]	; 0x70
 80041cc:	4b55      	ldr	r3, [pc, #340]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80041ce:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80041d0:	4a54      	ldr	r2, [pc, #336]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80041d2:	f023 0304 	bic.w	r3, r3, #4
 80041d6:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	689b      	ldr	r3, [r3, #8]
 80041dc:	2b00      	cmp	r3, #0
 80041de:	d015      	beq.n	800420c <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80041e0:	f7fd ff9a 	bl	8002118 <HAL_GetTick>
 80041e4:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80041e6:	e00a      	b.n	80041fe <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80041e8:	f7fd ff96 	bl	8002118 <HAL_GetTick>
 80041ec:	4602      	mov	r2, r0
 80041ee:	693b      	ldr	r3, [r7, #16]
 80041f0:	1ad3      	subs	r3, r2, r3
 80041f2:	f241 3288 	movw	r2, #5000	; 0x1388
 80041f6:	4293      	cmp	r3, r2
 80041f8:	d901      	bls.n	80041fe <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 80041fa:	2303      	movs	r3, #3
 80041fc:	e0c2      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80041fe:	4b49      	ldr	r3, [pc, #292]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004200:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004202:	f003 0302 	and.w	r3, r3, #2
 8004206:	2b00      	cmp	r3, #0
 8004208:	d0ee      	beq.n	80041e8 <HAL_RCC_OscConfig+0x334>
 800420a:	e014      	b.n	8004236 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800420c:	f7fd ff84 	bl	8002118 <HAL_GetTick>
 8004210:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004212:	e00a      	b.n	800422a <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004214:	f7fd ff80 	bl	8002118 <HAL_GetTick>
 8004218:	4602      	mov	r2, r0
 800421a:	693b      	ldr	r3, [r7, #16]
 800421c:	1ad3      	subs	r3, r2, r3
 800421e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004222:	4293      	cmp	r3, r2
 8004224:	d901      	bls.n	800422a <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8004226:	2303      	movs	r3, #3
 8004228:	e0ac      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800422a:	4b3e      	ldr	r3, [pc, #248]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 800422c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800422e:	f003 0302 	and.w	r3, r3, #2
 8004232:	2b00      	cmp	r3, #0
 8004234:	d1ee      	bne.n	8004214 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8004236:	7dfb      	ldrb	r3, [r7, #23]
 8004238:	2b01      	cmp	r3, #1
 800423a:	d105      	bne.n	8004248 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800423c:	4b39      	ldr	r3, [pc, #228]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 800423e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004240:	4a38      	ldr	r2, [pc, #224]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004242:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004246:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	699b      	ldr	r3, [r3, #24]
 800424c:	2b00      	cmp	r3, #0
 800424e:	f000 8098 	beq.w	8004382 <HAL_RCC_OscConfig+0x4ce>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004252:	4b34      	ldr	r3, [pc, #208]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004254:	689b      	ldr	r3, [r3, #8]
 8004256:	f003 030c 	and.w	r3, r3, #12
 800425a:	2b08      	cmp	r3, #8
 800425c:	d05c      	beq.n	8004318 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	699b      	ldr	r3, [r3, #24]
 8004262:	2b02      	cmp	r3, #2
 8004264:	d141      	bne.n	80042ea <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004266:	4b31      	ldr	r3, [pc, #196]	; (800432c <HAL_RCC_OscConfig+0x478>)
 8004268:	2200      	movs	r2, #0
 800426a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800426c:	f7fd ff54 	bl	8002118 <HAL_GetTick>
 8004270:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004272:	e008      	b.n	8004286 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004274:	f7fd ff50 	bl	8002118 <HAL_GetTick>
 8004278:	4602      	mov	r2, r0
 800427a:	693b      	ldr	r3, [r7, #16]
 800427c:	1ad3      	subs	r3, r2, r3
 800427e:	2b02      	cmp	r3, #2
 8004280:	d901      	bls.n	8004286 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8004282:	2303      	movs	r3, #3
 8004284:	e07e      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004286:	4b27      	ldr	r3, [pc, #156]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800428e:	2b00      	cmp	r3, #0
 8004290:	d1f0      	bne.n	8004274 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	69da      	ldr	r2, [r3, #28]
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	6a1b      	ldr	r3, [r3, #32]
 800429a:	431a      	orrs	r2, r3
 800429c:	687b      	ldr	r3, [r7, #4]
 800429e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042a0:	019b      	lsls	r3, r3, #6
 80042a2:	431a      	orrs	r2, r3
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80042a8:	085b      	lsrs	r3, r3, #1
 80042aa:	3b01      	subs	r3, #1
 80042ac:	041b      	lsls	r3, r3, #16
 80042ae:	431a      	orrs	r2, r3
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80042b4:	061b      	lsls	r3, r3, #24
 80042b6:	491b      	ldr	r1, [pc, #108]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80042b8:	4313      	orrs	r3, r2
 80042ba:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80042bc:	4b1b      	ldr	r3, [pc, #108]	; (800432c <HAL_RCC_OscConfig+0x478>)
 80042be:	2201      	movs	r2, #1
 80042c0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80042c2:	f7fd ff29 	bl	8002118 <HAL_GetTick>
 80042c6:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80042c8:	e008      	b.n	80042dc <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80042ca:	f7fd ff25 	bl	8002118 <HAL_GetTick>
 80042ce:	4602      	mov	r2, r0
 80042d0:	693b      	ldr	r3, [r7, #16]
 80042d2:	1ad3      	subs	r3, r2, r3
 80042d4:	2b02      	cmp	r3, #2
 80042d6:	d901      	bls.n	80042dc <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 80042d8:	2303      	movs	r3, #3
 80042da:	e053      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80042dc:	4b11      	ldr	r3, [pc, #68]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80042e4:	2b00      	cmp	r3, #0
 80042e6:	d0f0      	beq.n	80042ca <HAL_RCC_OscConfig+0x416>
 80042e8:	e04b      	b.n	8004382 <HAL_RCC_OscConfig+0x4ce>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80042ea:	4b10      	ldr	r3, [pc, #64]	; (800432c <HAL_RCC_OscConfig+0x478>)
 80042ec:	2200      	movs	r2, #0
 80042ee:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80042f0:	f7fd ff12 	bl	8002118 <HAL_GetTick>
 80042f4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80042f6:	e008      	b.n	800430a <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80042f8:	f7fd ff0e 	bl	8002118 <HAL_GetTick>
 80042fc:	4602      	mov	r2, r0
 80042fe:	693b      	ldr	r3, [r7, #16]
 8004300:	1ad3      	subs	r3, r2, r3
 8004302:	2b02      	cmp	r3, #2
 8004304:	d901      	bls.n	800430a <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8004306:	2303      	movs	r3, #3
 8004308:	e03c      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800430a:	4b06      	ldr	r3, [pc, #24]	; (8004324 <HAL_RCC_OscConfig+0x470>)
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004312:	2b00      	cmp	r3, #0
 8004314:	d1f0      	bne.n	80042f8 <HAL_RCC_OscConfig+0x444>
 8004316:	e034      	b.n	8004382 <HAL_RCC_OscConfig+0x4ce>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	699b      	ldr	r3, [r3, #24]
 800431c:	2b01      	cmp	r3, #1
 800431e:	d107      	bne.n	8004330 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8004320:	2301      	movs	r3, #1
 8004322:	e02f      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
 8004324:	40023800 	.word	0x40023800
 8004328:	40007000 	.word	0x40007000
 800432c:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8004330:	4b16      	ldr	r3, [pc, #88]	; (800438c <HAL_RCC_OscConfig+0x4d8>)
 8004332:	689b      	ldr	r3, [r3, #8]
 8004334:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	69db      	ldr	r3, [r3, #28]
 8004340:	429a      	cmp	r2, r3
 8004342:	d11c      	bne.n	800437e <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800434e:	429a      	cmp	r2, r3
 8004350:	d115      	bne.n	800437e <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8004352:	68fa      	ldr	r2, [r7, #12]
 8004354:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004358:	4013      	ands	r3, r2
 800435a:	687a      	ldr	r2, [r7, #4]
 800435c:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800435e:	4293      	cmp	r3, r2
 8004360:	d10d      	bne.n	800437e <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004362:	68fb      	ldr	r3, [r7, #12]
 8004364:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800436c:	429a      	cmp	r2, r3
 800436e:	d106      	bne.n	800437e <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8004370:	68fb      	ldr	r3, [r7, #12]
 8004372:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800437a:	429a      	cmp	r2, r3
 800437c:	d001      	beq.n	8004382 <HAL_RCC_OscConfig+0x4ce>
        {
          return HAL_ERROR;
 800437e:	2301      	movs	r3, #1
 8004380:	e000      	b.n	8004384 <HAL_RCC_OscConfig+0x4d0>
        }
      }
    }
  }
  return HAL_OK;
 8004382:	2300      	movs	r3, #0
}
 8004384:	4618      	mov	r0, r3
 8004386:	3718      	adds	r7, #24
 8004388:	46bd      	mov	sp, r7
 800438a:	bd80      	pop	{r7, pc}
 800438c:	40023800 	.word	0x40023800

08004390 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004390:	b580      	push	{r7, lr}
 8004392:	b084      	sub	sp, #16
 8004394:	af00      	add	r7, sp, #0
 8004396:	6078      	str	r0, [r7, #4]
 8004398:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	2b00      	cmp	r3, #0
 800439e:	d101      	bne.n	80043a4 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80043a0:	2301      	movs	r3, #1
 80043a2:	e0cc      	b.n	800453e <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80043a4:	4b68      	ldr	r3, [pc, #416]	; (8004548 <HAL_RCC_ClockConfig+0x1b8>)
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	f003 030f 	and.w	r3, r3, #15
 80043ac:	683a      	ldr	r2, [r7, #0]
 80043ae:	429a      	cmp	r2, r3
 80043b0:	d90c      	bls.n	80043cc <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80043b2:	4b65      	ldr	r3, [pc, #404]	; (8004548 <HAL_RCC_ClockConfig+0x1b8>)
 80043b4:	683a      	ldr	r2, [r7, #0]
 80043b6:	b2d2      	uxtb	r2, r2
 80043b8:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80043ba:	4b63      	ldr	r3, [pc, #396]	; (8004548 <HAL_RCC_ClockConfig+0x1b8>)
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	f003 030f 	and.w	r3, r3, #15
 80043c2:	683a      	ldr	r2, [r7, #0]
 80043c4:	429a      	cmp	r2, r3
 80043c6:	d001      	beq.n	80043cc <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 80043c8:	2301      	movs	r3, #1
 80043ca:	e0b8      	b.n	800453e <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	681b      	ldr	r3, [r3, #0]
 80043d0:	f003 0302 	and.w	r3, r3, #2
 80043d4:	2b00      	cmp	r3, #0
 80043d6:	d020      	beq.n	800441a <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	681b      	ldr	r3, [r3, #0]
 80043dc:	f003 0304 	and.w	r3, r3, #4
 80043e0:	2b00      	cmp	r3, #0
 80043e2:	d005      	beq.n	80043f0 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80043e4:	4b59      	ldr	r3, [pc, #356]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 80043e6:	689b      	ldr	r3, [r3, #8]
 80043e8:	4a58      	ldr	r2, [pc, #352]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 80043ea:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80043ee:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80043f0:	687b      	ldr	r3, [r7, #4]
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	f003 0308 	and.w	r3, r3, #8
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d005      	beq.n	8004408 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80043fc:	4b53      	ldr	r3, [pc, #332]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 80043fe:	689b      	ldr	r3, [r3, #8]
 8004400:	4a52      	ldr	r2, [pc, #328]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 8004402:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8004406:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004408:	4b50      	ldr	r3, [pc, #320]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 800440a:	689b      	ldr	r3, [r3, #8]
 800440c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	689b      	ldr	r3, [r3, #8]
 8004414:	494d      	ldr	r1, [pc, #308]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 8004416:	4313      	orrs	r3, r2
 8004418:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	f003 0301 	and.w	r3, r3, #1
 8004422:	2b00      	cmp	r3, #0
 8004424:	d044      	beq.n	80044b0 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	685b      	ldr	r3, [r3, #4]
 800442a:	2b01      	cmp	r3, #1
 800442c:	d107      	bne.n	800443e <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800442e:	4b47      	ldr	r3, [pc, #284]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 8004430:	681b      	ldr	r3, [r3, #0]
 8004432:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004436:	2b00      	cmp	r3, #0
 8004438:	d119      	bne.n	800446e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800443a:	2301      	movs	r3, #1
 800443c:	e07f      	b.n	800453e <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800443e:	687b      	ldr	r3, [r7, #4]
 8004440:	685b      	ldr	r3, [r3, #4]
 8004442:	2b02      	cmp	r3, #2
 8004444:	d003      	beq.n	800444e <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800444a:	2b03      	cmp	r3, #3
 800444c:	d107      	bne.n	800445e <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800444e:	4b3f      	ldr	r3, [pc, #252]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 8004450:	681b      	ldr	r3, [r3, #0]
 8004452:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004456:	2b00      	cmp	r3, #0
 8004458:	d109      	bne.n	800446e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800445a:	2301      	movs	r3, #1
 800445c:	e06f      	b.n	800453e <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800445e:	4b3b      	ldr	r3, [pc, #236]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 8004460:	681b      	ldr	r3, [r3, #0]
 8004462:	f003 0302 	and.w	r3, r3, #2
 8004466:	2b00      	cmp	r3, #0
 8004468:	d101      	bne.n	800446e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800446a:	2301      	movs	r3, #1
 800446c:	e067      	b.n	800453e <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800446e:	4b37      	ldr	r3, [pc, #220]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 8004470:	689b      	ldr	r3, [r3, #8]
 8004472:	f023 0203 	bic.w	r2, r3, #3
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	685b      	ldr	r3, [r3, #4]
 800447a:	4934      	ldr	r1, [pc, #208]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 800447c:	4313      	orrs	r3, r2
 800447e:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004480:	f7fd fe4a 	bl	8002118 <HAL_GetTick>
 8004484:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004486:	e00a      	b.n	800449e <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004488:	f7fd fe46 	bl	8002118 <HAL_GetTick>
 800448c:	4602      	mov	r2, r0
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	1ad3      	subs	r3, r2, r3
 8004492:	f241 3288 	movw	r2, #5000	; 0x1388
 8004496:	4293      	cmp	r3, r2
 8004498:	d901      	bls.n	800449e <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800449a:	2303      	movs	r3, #3
 800449c:	e04f      	b.n	800453e <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800449e:	4b2b      	ldr	r3, [pc, #172]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 80044a0:	689b      	ldr	r3, [r3, #8]
 80044a2:	f003 020c 	and.w	r2, r3, #12
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	685b      	ldr	r3, [r3, #4]
 80044aa:	009b      	lsls	r3, r3, #2
 80044ac:	429a      	cmp	r2, r3
 80044ae:	d1eb      	bne.n	8004488 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80044b0:	4b25      	ldr	r3, [pc, #148]	; (8004548 <HAL_RCC_ClockConfig+0x1b8>)
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	f003 030f 	and.w	r3, r3, #15
 80044b8:	683a      	ldr	r2, [r7, #0]
 80044ba:	429a      	cmp	r2, r3
 80044bc:	d20c      	bcs.n	80044d8 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80044be:	4b22      	ldr	r3, [pc, #136]	; (8004548 <HAL_RCC_ClockConfig+0x1b8>)
 80044c0:	683a      	ldr	r2, [r7, #0]
 80044c2:	b2d2      	uxtb	r2, r2
 80044c4:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80044c6:	4b20      	ldr	r3, [pc, #128]	; (8004548 <HAL_RCC_ClockConfig+0x1b8>)
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	f003 030f 	and.w	r3, r3, #15
 80044ce:	683a      	ldr	r2, [r7, #0]
 80044d0:	429a      	cmp	r2, r3
 80044d2:	d001      	beq.n	80044d8 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 80044d4:	2301      	movs	r3, #1
 80044d6:	e032      	b.n	800453e <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	f003 0304 	and.w	r3, r3, #4
 80044e0:	2b00      	cmp	r3, #0
 80044e2:	d008      	beq.n	80044f6 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80044e4:	4b19      	ldr	r3, [pc, #100]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 80044e6:	689b      	ldr	r3, [r3, #8]
 80044e8:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	68db      	ldr	r3, [r3, #12]
 80044f0:	4916      	ldr	r1, [pc, #88]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 80044f2:	4313      	orrs	r3, r2
 80044f4:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	681b      	ldr	r3, [r3, #0]
 80044fa:	f003 0308 	and.w	r3, r3, #8
 80044fe:	2b00      	cmp	r3, #0
 8004500:	d009      	beq.n	8004516 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8004502:	4b12      	ldr	r3, [pc, #72]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 8004504:	689b      	ldr	r3, [r3, #8]
 8004506:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	691b      	ldr	r3, [r3, #16]
 800450e:	00db      	lsls	r3, r3, #3
 8004510:	490e      	ldr	r1, [pc, #56]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 8004512:	4313      	orrs	r3, r2
 8004514:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004516:	f000 f821 	bl	800455c <HAL_RCC_GetSysClockFreq>
 800451a:	4602      	mov	r2, r0
 800451c:	4b0b      	ldr	r3, [pc, #44]	; (800454c <HAL_RCC_ClockConfig+0x1bc>)
 800451e:	689b      	ldr	r3, [r3, #8]
 8004520:	091b      	lsrs	r3, r3, #4
 8004522:	f003 030f 	and.w	r3, r3, #15
 8004526:	490a      	ldr	r1, [pc, #40]	; (8004550 <HAL_RCC_ClockConfig+0x1c0>)
 8004528:	5ccb      	ldrb	r3, [r1, r3]
 800452a:	fa22 f303 	lsr.w	r3, r2, r3
 800452e:	4a09      	ldr	r2, [pc, #36]	; (8004554 <HAL_RCC_ClockConfig+0x1c4>)
 8004530:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8004532:	4b09      	ldr	r3, [pc, #36]	; (8004558 <HAL_RCC_ClockConfig+0x1c8>)
 8004534:	681b      	ldr	r3, [r3, #0]
 8004536:	4618      	mov	r0, r3
 8004538:	f7fd fc14 	bl	8001d64 <HAL_InitTick>

  return HAL_OK;
 800453c:	2300      	movs	r3, #0
}
 800453e:	4618      	mov	r0, r3
 8004540:	3710      	adds	r7, #16
 8004542:	46bd      	mov	sp, r7
 8004544:	bd80      	pop	{r7, pc}
 8004546:	bf00      	nop
 8004548:	40023c00 	.word	0x40023c00
 800454c:	40023800 	.word	0x40023800
 8004550:	0801c1cc 	.word	0x0801c1cc
 8004554:	20000004 	.word	0x20000004
 8004558:	20000008 	.word	0x20000008

0800455c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800455c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004560:	b094      	sub	sp, #80	; 0x50
 8004562:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8004564:	2300      	movs	r3, #0
 8004566:	647b      	str	r3, [r7, #68]	; 0x44
 8004568:	2300      	movs	r3, #0
 800456a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800456c:	2300      	movs	r3, #0
 800456e:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t sysclockfreq = 0U;
 8004570:	2300      	movs	r3, #0
 8004572:	64bb      	str	r3, [r7, #72]	; 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004574:	4b79      	ldr	r3, [pc, #484]	; (800475c <HAL_RCC_GetSysClockFreq+0x200>)
 8004576:	689b      	ldr	r3, [r3, #8]
 8004578:	f003 030c 	and.w	r3, r3, #12
 800457c:	2b08      	cmp	r3, #8
 800457e:	d00d      	beq.n	800459c <HAL_RCC_GetSysClockFreq+0x40>
 8004580:	2b08      	cmp	r3, #8
 8004582:	f200 80e1 	bhi.w	8004748 <HAL_RCC_GetSysClockFreq+0x1ec>
 8004586:	2b00      	cmp	r3, #0
 8004588:	d002      	beq.n	8004590 <HAL_RCC_GetSysClockFreq+0x34>
 800458a:	2b04      	cmp	r3, #4
 800458c:	d003      	beq.n	8004596 <HAL_RCC_GetSysClockFreq+0x3a>
 800458e:	e0db      	b.n	8004748 <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8004590:	4b73      	ldr	r3, [pc, #460]	; (8004760 <HAL_RCC_GetSysClockFreq+0x204>)
 8004592:	64bb      	str	r3, [r7, #72]	; 0x48
       break;
 8004594:	e0db      	b.n	800474e <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8004596:	4b73      	ldr	r3, [pc, #460]	; (8004764 <HAL_RCC_GetSysClockFreq+0x208>)
 8004598:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 800459a:	e0d8      	b.n	800474e <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800459c:	4b6f      	ldr	r3, [pc, #444]	; (800475c <HAL_RCC_GetSysClockFreq+0x200>)
 800459e:	685b      	ldr	r3, [r3, #4]
 80045a0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80045a4:	647b      	str	r3, [r7, #68]	; 0x44
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80045a6:	4b6d      	ldr	r3, [pc, #436]	; (800475c <HAL_RCC_GetSysClockFreq+0x200>)
 80045a8:	685b      	ldr	r3, [r3, #4]
 80045aa:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80045ae:	2b00      	cmp	r3, #0
 80045b0:	d063      	beq.n	800467a <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80045b2:	4b6a      	ldr	r3, [pc, #424]	; (800475c <HAL_RCC_GetSysClockFreq+0x200>)
 80045b4:	685b      	ldr	r3, [r3, #4]
 80045b6:	099b      	lsrs	r3, r3, #6
 80045b8:	2200      	movs	r2, #0
 80045ba:	63bb      	str	r3, [r7, #56]	; 0x38
 80045bc:	63fa      	str	r2, [r7, #60]	; 0x3c
 80045be:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80045c0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80045c4:	633b      	str	r3, [r7, #48]	; 0x30
 80045c6:	2300      	movs	r3, #0
 80045c8:	637b      	str	r3, [r7, #52]	; 0x34
 80045ca:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80045ce:	4622      	mov	r2, r4
 80045d0:	462b      	mov	r3, r5
 80045d2:	f04f 0000 	mov.w	r0, #0
 80045d6:	f04f 0100 	mov.w	r1, #0
 80045da:	0159      	lsls	r1, r3, #5
 80045dc:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80045e0:	0150      	lsls	r0, r2, #5
 80045e2:	4602      	mov	r2, r0
 80045e4:	460b      	mov	r3, r1
 80045e6:	4621      	mov	r1, r4
 80045e8:	1a51      	subs	r1, r2, r1
 80045ea:	6139      	str	r1, [r7, #16]
 80045ec:	4629      	mov	r1, r5
 80045ee:	eb63 0301 	sbc.w	r3, r3, r1
 80045f2:	617b      	str	r3, [r7, #20]
 80045f4:	f04f 0200 	mov.w	r2, #0
 80045f8:	f04f 0300 	mov.w	r3, #0
 80045fc:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004600:	4659      	mov	r1, fp
 8004602:	018b      	lsls	r3, r1, #6
 8004604:	4651      	mov	r1, sl
 8004606:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800460a:	4651      	mov	r1, sl
 800460c:	018a      	lsls	r2, r1, #6
 800460e:	4651      	mov	r1, sl
 8004610:	ebb2 0801 	subs.w	r8, r2, r1
 8004614:	4659      	mov	r1, fp
 8004616:	eb63 0901 	sbc.w	r9, r3, r1
 800461a:	f04f 0200 	mov.w	r2, #0
 800461e:	f04f 0300 	mov.w	r3, #0
 8004622:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004626:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800462a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800462e:	4690      	mov	r8, r2
 8004630:	4699      	mov	r9, r3
 8004632:	4623      	mov	r3, r4
 8004634:	eb18 0303 	adds.w	r3, r8, r3
 8004638:	60bb      	str	r3, [r7, #8]
 800463a:	462b      	mov	r3, r5
 800463c:	eb49 0303 	adc.w	r3, r9, r3
 8004640:	60fb      	str	r3, [r7, #12]
 8004642:	f04f 0200 	mov.w	r2, #0
 8004646:	f04f 0300 	mov.w	r3, #0
 800464a:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800464e:	4629      	mov	r1, r5
 8004650:	024b      	lsls	r3, r1, #9
 8004652:	4621      	mov	r1, r4
 8004654:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8004658:	4621      	mov	r1, r4
 800465a:	024a      	lsls	r2, r1, #9
 800465c:	4610      	mov	r0, r2
 800465e:	4619      	mov	r1, r3
 8004660:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004662:	2200      	movs	r2, #0
 8004664:	62bb      	str	r3, [r7, #40]	; 0x28
 8004666:	62fa      	str	r2, [r7, #44]	; 0x2c
 8004668:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800466c:	f7fb fe10 	bl	8000290 <__aeabi_uldivmod>
 8004670:	4602      	mov	r2, r0
 8004672:	460b      	mov	r3, r1
 8004674:	4613      	mov	r3, r2
 8004676:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004678:	e058      	b.n	800472c <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800467a:	4b38      	ldr	r3, [pc, #224]	; (800475c <HAL_RCC_GetSysClockFreq+0x200>)
 800467c:	685b      	ldr	r3, [r3, #4]
 800467e:	099b      	lsrs	r3, r3, #6
 8004680:	2200      	movs	r2, #0
 8004682:	4618      	mov	r0, r3
 8004684:	4611      	mov	r1, r2
 8004686:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800468a:	623b      	str	r3, [r7, #32]
 800468c:	2300      	movs	r3, #0
 800468e:	627b      	str	r3, [r7, #36]	; 0x24
 8004690:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8004694:	4642      	mov	r2, r8
 8004696:	464b      	mov	r3, r9
 8004698:	f04f 0000 	mov.w	r0, #0
 800469c:	f04f 0100 	mov.w	r1, #0
 80046a0:	0159      	lsls	r1, r3, #5
 80046a2:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80046a6:	0150      	lsls	r0, r2, #5
 80046a8:	4602      	mov	r2, r0
 80046aa:	460b      	mov	r3, r1
 80046ac:	4641      	mov	r1, r8
 80046ae:	ebb2 0a01 	subs.w	sl, r2, r1
 80046b2:	4649      	mov	r1, r9
 80046b4:	eb63 0b01 	sbc.w	fp, r3, r1
 80046b8:	f04f 0200 	mov.w	r2, #0
 80046bc:	f04f 0300 	mov.w	r3, #0
 80046c0:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80046c4:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80046c8:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80046cc:	ebb2 040a 	subs.w	r4, r2, sl
 80046d0:	eb63 050b 	sbc.w	r5, r3, fp
 80046d4:	f04f 0200 	mov.w	r2, #0
 80046d8:	f04f 0300 	mov.w	r3, #0
 80046dc:	00eb      	lsls	r3, r5, #3
 80046de:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80046e2:	00e2      	lsls	r2, r4, #3
 80046e4:	4614      	mov	r4, r2
 80046e6:	461d      	mov	r5, r3
 80046e8:	4643      	mov	r3, r8
 80046ea:	18e3      	adds	r3, r4, r3
 80046ec:	603b      	str	r3, [r7, #0]
 80046ee:	464b      	mov	r3, r9
 80046f0:	eb45 0303 	adc.w	r3, r5, r3
 80046f4:	607b      	str	r3, [r7, #4]
 80046f6:	f04f 0200 	mov.w	r2, #0
 80046fa:	f04f 0300 	mov.w	r3, #0
 80046fe:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004702:	4629      	mov	r1, r5
 8004704:	028b      	lsls	r3, r1, #10
 8004706:	4621      	mov	r1, r4
 8004708:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800470c:	4621      	mov	r1, r4
 800470e:	028a      	lsls	r2, r1, #10
 8004710:	4610      	mov	r0, r2
 8004712:	4619      	mov	r1, r3
 8004714:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004716:	2200      	movs	r2, #0
 8004718:	61bb      	str	r3, [r7, #24]
 800471a:	61fa      	str	r2, [r7, #28]
 800471c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004720:	f7fb fdb6 	bl	8000290 <__aeabi_uldivmod>
 8004724:	4602      	mov	r2, r0
 8004726:	460b      	mov	r3, r1
 8004728:	4613      	mov	r3, r2
 800472a:	64fb      	str	r3, [r7, #76]	; 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800472c:	4b0b      	ldr	r3, [pc, #44]	; (800475c <HAL_RCC_GetSysClockFreq+0x200>)
 800472e:	685b      	ldr	r3, [r3, #4]
 8004730:	0c1b      	lsrs	r3, r3, #16
 8004732:	f003 0303 	and.w	r3, r3, #3
 8004736:	3301      	adds	r3, #1
 8004738:	005b      	lsls	r3, r3, #1
 800473a:	643b      	str	r3, [r7, #64]	; 0x40

      sysclockfreq = pllvco/pllp;
 800473c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800473e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004740:	fbb2 f3f3 	udiv	r3, r2, r3
 8004744:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 8004746:	e002      	b.n	800474e <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8004748:	4b05      	ldr	r3, [pc, #20]	; (8004760 <HAL_RCC_GetSysClockFreq+0x204>)
 800474a:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 800474c:	bf00      	nop
    }
  }
  return sysclockfreq;
 800474e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 8004750:	4618      	mov	r0, r3
 8004752:	3750      	adds	r7, #80	; 0x50
 8004754:	46bd      	mov	sp, r7
 8004756:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800475a:	bf00      	nop
 800475c:	40023800 	.word	0x40023800
 8004760:	00f42400 	.word	0x00f42400
 8004764:	007a1200 	.word	0x007a1200

08004768 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8004768:	b480      	push	{r7}
 800476a:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800476c:	4b03      	ldr	r3, [pc, #12]	; (800477c <HAL_RCC_GetHCLKFreq+0x14>)
 800476e:	681b      	ldr	r3, [r3, #0]
}
 8004770:	4618      	mov	r0, r3
 8004772:	46bd      	mov	sp, r7
 8004774:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004778:	4770      	bx	lr
 800477a:	bf00      	nop
 800477c:	20000004 	.word	0x20000004

08004780 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8004780:	b580      	push	{r7, lr}
 8004782:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8004784:	f7ff fff0 	bl	8004768 <HAL_RCC_GetHCLKFreq>
 8004788:	4602      	mov	r2, r0
 800478a:	4b05      	ldr	r3, [pc, #20]	; (80047a0 <HAL_RCC_GetPCLK1Freq+0x20>)
 800478c:	689b      	ldr	r3, [r3, #8]
 800478e:	0a9b      	lsrs	r3, r3, #10
 8004790:	f003 0307 	and.w	r3, r3, #7
 8004794:	4903      	ldr	r1, [pc, #12]	; (80047a4 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004796:	5ccb      	ldrb	r3, [r1, r3]
 8004798:	fa22 f303 	lsr.w	r3, r2, r3
}
 800479c:	4618      	mov	r0, r3
 800479e:	bd80      	pop	{r7, pc}
 80047a0:	40023800 	.word	0x40023800
 80047a4:	0801c1dc 	.word	0x0801c1dc

080047a8 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80047a8:	b580      	push	{r7, lr}
 80047aa:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80047ac:	f7ff ffdc 	bl	8004768 <HAL_RCC_GetHCLKFreq>
 80047b0:	4602      	mov	r2, r0
 80047b2:	4b05      	ldr	r3, [pc, #20]	; (80047c8 <HAL_RCC_GetPCLK2Freq+0x20>)
 80047b4:	689b      	ldr	r3, [r3, #8]
 80047b6:	0b5b      	lsrs	r3, r3, #13
 80047b8:	f003 0307 	and.w	r3, r3, #7
 80047bc:	4903      	ldr	r1, [pc, #12]	; (80047cc <HAL_RCC_GetPCLK2Freq+0x24>)
 80047be:	5ccb      	ldrb	r3, [r1, r3]
 80047c0:	fa22 f303 	lsr.w	r3, r2, r3
}
 80047c4:	4618      	mov	r0, r3
 80047c6:	bd80      	pop	{r7, pc}
 80047c8:	40023800 	.word	0x40023800
 80047cc:	0801c1dc 	.word	0x0801c1dc

080047d0 <HAL_RCC_GetClockConfig>:
  * will be configured.
  * @param  pFLatency Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
 80047d0:	b480      	push	{r7}
 80047d2:	b083      	sub	sp, #12
 80047d4:	af00      	add	r7, sp, #0
 80047d6:	6078      	str	r0, [r7, #4]
 80047d8:	6039      	str	r1, [r7, #0]
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	220f      	movs	r2, #15
 80047de:	601a      	str	r2, [r3, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80047e0:	4b12      	ldr	r3, [pc, #72]	; (800482c <HAL_RCC_GetClockConfig+0x5c>)
 80047e2:	689b      	ldr	r3, [r3, #8]
 80047e4:	f003 0203 	and.w	r2, r3, #3
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80047ec:	4b0f      	ldr	r3, [pc, #60]	; (800482c <HAL_RCC_GetClockConfig+0x5c>)
 80047ee:	689b      	ldr	r3, [r3, #8]
 80047f0:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80047f4:	687b      	ldr	r3, [r7, #4]
 80047f6:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80047f8:	4b0c      	ldr	r3, [pc, #48]	; (800482c <HAL_RCC_GetClockConfig+0x5c>)
 80047fa:	689b      	ldr	r3, [r3, #8]
 80047fc:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8004804:	4b09      	ldr	r3, [pc, #36]	; (800482c <HAL_RCC_GetClockConfig+0x5c>)
 8004806:	689b      	ldr	r3, [r3, #8]
 8004808:	08db      	lsrs	r3, r3, #3
 800480a:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	611a      	str	r2, [r3, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8004812:	4b07      	ldr	r3, [pc, #28]	; (8004830 <HAL_RCC_GetClockConfig+0x60>)
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	f003 020f 	and.w	r2, r3, #15
 800481a:	683b      	ldr	r3, [r7, #0]
 800481c:	601a      	str	r2, [r3, #0]
}
 800481e:	bf00      	nop
 8004820:	370c      	adds	r7, #12
 8004822:	46bd      	mov	sp, r7
 8004824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004828:	4770      	bx	lr
 800482a:	bf00      	nop
 800482c:	40023800 	.word	0x40023800
 8004830:	40023c00 	.word	0x40023c00

08004834 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8004834:	b580      	push	{r7, lr}
 8004836:	b086      	sub	sp, #24
 8004838:	af00      	add	r7, sp, #0
 800483a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 800483c:	2300      	movs	r3, #0
 800483e:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 8004840:	2300      	movs	r3, #0
 8004842:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	f003 0301 	and.w	r3, r3, #1
 800484c:	2b00      	cmp	r3, #0
 800484e:	d10b      	bne.n	8004868 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8004858:	2b00      	cmp	r3, #0
 800485a:	d105      	bne.n	8004868 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8004864:	2b00      	cmp	r3, #0
 8004866:	d075      	beq.n	8004954 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8004868:	4b91      	ldr	r3, [pc, #580]	; (8004ab0 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 800486a:	2200      	movs	r2, #0
 800486c:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800486e:	f7fd fc53 	bl	8002118 <HAL_GetTick>
 8004872:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004874:	e008      	b.n	8004888 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8004876:	f7fd fc4f 	bl	8002118 <HAL_GetTick>
 800487a:	4602      	mov	r2, r0
 800487c:	697b      	ldr	r3, [r7, #20]
 800487e:	1ad3      	subs	r3, r2, r3
 8004880:	2b02      	cmp	r3, #2
 8004882:	d901      	bls.n	8004888 <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8004884:	2303      	movs	r3, #3
 8004886:	e189      	b.n	8004b9c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004888:	4b8a      	ldr	r3, [pc, #552]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8004890:	2b00      	cmp	r3, #0
 8004892:	d1f0      	bne.n	8004876 <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	f003 0301 	and.w	r3, r3, #1
 800489c:	2b00      	cmp	r3, #0
 800489e:	d009      	beq.n	80048b4 <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	685b      	ldr	r3, [r3, #4]
 80048a4:	019a      	lsls	r2, r3, #6
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	689b      	ldr	r3, [r3, #8]
 80048aa:	071b      	lsls	r3, r3, #28
 80048ac:	4981      	ldr	r1, [pc, #516]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80048ae:	4313      	orrs	r3, r2
 80048b0:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	f003 0302 	and.w	r3, r3, #2
 80048bc:	2b00      	cmp	r3, #0
 80048be:	d01f      	beq.n	8004900 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80048c0:	4b7c      	ldr	r3, [pc, #496]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80048c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80048c6:	0f1b      	lsrs	r3, r3, #28
 80048c8:	f003 0307 	and.w	r3, r3, #7
 80048cc:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80048ce:	687b      	ldr	r3, [r7, #4]
 80048d0:	685b      	ldr	r3, [r3, #4]
 80048d2:	019a      	lsls	r2, r3, #6
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	68db      	ldr	r3, [r3, #12]
 80048d8:	061b      	lsls	r3, r3, #24
 80048da:	431a      	orrs	r2, r3
 80048dc:	693b      	ldr	r3, [r7, #16]
 80048de:	071b      	lsls	r3, r3, #28
 80048e0:	4974      	ldr	r1, [pc, #464]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80048e2:	4313      	orrs	r3, r2
 80048e4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80048e8:	4b72      	ldr	r3, [pc, #456]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80048ea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80048ee:	f023 021f 	bic.w	r2, r3, #31
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	69db      	ldr	r3, [r3, #28]
 80048f6:	3b01      	subs	r3, #1
 80048f8:	496e      	ldr	r1, [pc, #440]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80048fa:	4313      	orrs	r3, r2
 80048fc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004908:	2b00      	cmp	r3, #0
 800490a:	d00d      	beq.n	8004928 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	685b      	ldr	r3, [r3, #4]
 8004910:	019a      	lsls	r2, r3, #6
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	68db      	ldr	r3, [r3, #12]
 8004916:	061b      	lsls	r3, r3, #24
 8004918:	431a      	orrs	r2, r3
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	689b      	ldr	r3, [r3, #8]
 800491e:	071b      	lsls	r3, r3, #28
 8004920:	4964      	ldr	r1, [pc, #400]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004922:	4313      	orrs	r3, r2
 8004924:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8004928:	4b61      	ldr	r3, [pc, #388]	; (8004ab0 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 800492a:	2201      	movs	r2, #1
 800492c:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800492e:	f7fd fbf3 	bl	8002118 <HAL_GetTick>
 8004932:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8004934:	e008      	b.n	8004948 <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8004936:	f7fd fbef 	bl	8002118 <HAL_GetTick>
 800493a:	4602      	mov	r2, r0
 800493c:	697b      	ldr	r3, [r7, #20]
 800493e:	1ad3      	subs	r3, r2, r3
 8004940:	2b02      	cmp	r3, #2
 8004942:	d901      	bls.n	8004948 <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8004944:	2303      	movs	r3, #3
 8004946:	e129      	b.n	8004b9c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8004948:	4b5a      	ldr	r3, [pc, #360]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8004950:	2b00      	cmp	r3, #0
 8004952:	d0f0      	beq.n	8004936 <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8004954:	687b      	ldr	r3, [r7, #4]
 8004956:	681b      	ldr	r3, [r3, #0]
 8004958:	f003 0304 	and.w	r3, r3, #4
 800495c:	2b00      	cmp	r3, #0
 800495e:	d105      	bne.n	800496c <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8004968:	2b00      	cmp	r3, #0
 800496a:	d079      	beq.n	8004a60 <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800496c:	4b52      	ldr	r3, [pc, #328]	; (8004ab8 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800496e:	2200      	movs	r2, #0
 8004970:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8004972:	f7fd fbd1 	bl	8002118 <HAL_GetTick>
 8004976:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8004978:	e008      	b.n	800498c <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800497a:	f7fd fbcd 	bl	8002118 <HAL_GetTick>
 800497e:	4602      	mov	r2, r0
 8004980:	697b      	ldr	r3, [r7, #20]
 8004982:	1ad3      	subs	r3, r2, r3
 8004984:	2b02      	cmp	r3, #2
 8004986:	d901      	bls.n	800498c <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8004988:	2303      	movs	r3, #3
 800498a:	e107      	b.n	8004b9c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800498c:	4b49      	ldr	r3, [pc, #292]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800498e:	681b      	ldr	r3, [r3, #0]
 8004990:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8004994:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004998:	d0ef      	beq.n	800497a <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	f003 0304 	and.w	r3, r3, #4
 80049a2:	2b00      	cmp	r3, #0
 80049a4:	d020      	beq.n	80049e8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80049a6:	4b43      	ldr	r3, [pc, #268]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80049a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80049ac:	0f1b      	lsrs	r3, r3, #28
 80049ae:	f003 0307 	and.w	r3, r3, #7
 80049b2:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	691b      	ldr	r3, [r3, #16]
 80049b8:	019a      	lsls	r2, r3, #6
 80049ba:	687b      	ldr	r3, [r7, #4]
 80049bc:	695b      	ldr	r3, [r3, #20]
 80049be:	061b      	lsls	r3, r3, #24
 80049c0:	431a      	orrs	r2, r3
 80049c2:	693b      	ldr	r3, [r7, #16]
 80049c4:	071b      	lsls	r3, r3, #28
 80049c6:	493b      	ldr	r1, [pc, #236]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80049c8:	4313      	orrs	r3, r2
 80049ca:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80049ce:	4b39      	ldr	r3, [pc, #228]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80049d0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80049d4:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 80049d8:	687b      	ldr	r3, [r7, #4]
 80049da:	6a1b      	ldr	r3, [r3, #32]
 80049dc:	3b01      	subs	r3, #1
 80049de:	021b      	lsls	r3, r3, #8
 80049e0:	4934      	ldr	r1, [pc, #208]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80049e2:	4313      	orrs	r3, r2
 80049e4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	f003 0308 	and.w	r3, r3, #8
 80049f0:	2b00      	cmp	r3, #0
 80049f2:	d01e      	beq.n	8004a32 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80049f4:	4b2f      	ldr	r3, [pc, #188]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80049f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80049fa:	0e1b      	lsrs	r3, r3, #24
 80049fc:	f003 030f 	and.w	r3, r3, #15
 8004a00:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8004a02:	687b      	ldr	r3, [r7, #4]
 8004a04:	691b      	ldr	r3, [r3, #16]
 8004a06:	019a      	lsls	r2, r3, #6
 8004a08:	693b      	ldr	r3, [r7, #16]
 8004a0a:	061b      	lsls	r3, r3, #24
 8004a0c:	431a      	orrs	r2, r3
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	699b      	ldr	r3, [r3, #24]
 8004a12:	071b      	lsls	r3, r3, #28
 8004a14:	4927      	ldr	r1, [pc, #156]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004a16:	4313      	orrs	r3, r2
 8004a18:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8004a1c:	4b25      	ldr	r3, [pc, #148]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004a1e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004a22:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a2a:	4922      	ldr	r1, [pc, #136]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004a2c:	4313      	orrs	r3, r2
 8004a2e:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8004a32:	4b21      	ldr	r3, [pc, #132]	; (8004ab8 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8004a34:	2201      	movs	r2, #1
 8004a36:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8004a38:	f7fd fb6e 	bl	8002118 <HAL_GetTick>
 8004a3c:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8004a3e:	e008      	b.n	8004a52 <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8004a40:	f7fd fb6a 	bl	8002118 <HAL_GetTick>
 8004a44:	4602      	mov	r2, r0
 8004a46:	697b      	ldr	r3, [r7, #20]
 8004a48:	1ad3      	subs	r3, r2, r3
 8004a4a:	2b02      	cmp	r3, #2
 8004a4c:	d901      	bls.n	8004a52 <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8004a4e:	2303      	movs	r3, #3
 8004a50:	e0a4      	b.n	8004b9c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8004a52:	4b18      	ldr	r3, [pc, #96]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8004a5a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004a5e:	d1ef      	bne.n	8004a40 <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	681b      	ldr	r3, [r3, #0]
 8004a64:	f003 0320 	and.w	r3, r3, #32
 8004a68:	2b00      	cmp	r3, #0
 8004a6a:	f000 808b 	beq.w	8004b84 <HAL_RCCEx_PeriphCLKConfig+0x350>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8004a6e:	2300      	movs	r3, #0
 8004a70:	60fb      	str	r3, [r7, #12]
 8004a72:	4b10      	ldr	r3, [pc, #64]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004a74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a76:	4a0f      	ldr	r2, [pc, #60]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004a78:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004a7c:	6413      	str	r3, [r2, #64]	; 0x40
 8004a7e:	4b0d      	ldr	r3, [pc, #52]	; (8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8004a80:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a82:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004a86:	60fb      	str	r3, [r7, #12]
 8004a88:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8004a8a:	4b0c      	ldr	r3, [pc, #48]	; (8004abc <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	4a0b      	ldr	r2, [pc, #44]	; (8004abc <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8004a90:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004a94:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8004a96:	f7fd fb3f 	bl	8002118 <HAL_GetTick>
 8004a9a:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8004a9c:	e010      	b.n	8004ac0 <HAL_RCCEx_PeriphCLKConfig+0x28c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8004a9e:	f7fd fb3b 	bl	8002118 <HAL_GetTick>
 8004aa2:	4602      	mov	r2, r0
 8004aa4:	697b      	ldr	r3, [r7, #20]
 8004aa6:	1ad3      	subs	r3, r2, r3
 8004aa8:	2b02      	cmp	r3, #2
 8004aaa:	d909      	bls.n	8004ac0 <HAL_RCCEx_PeriphCLKConfig+0x28c>
      {
        return HAL_TIMEOUT;
 8004aac:	2303      	movs	r3, #3
 8004aae:	e075      	b.n	8004b9c <HAL_RCCEx_PeriphCLKConfig+0x368>
 8004ab0:	42470068 	.word	0x42470068
 8004ab4:	40023800 	.word	0x40023800
 8004ab8:	42470070 	.word	0x42470070
 8004abc:	40007000 	.word	0x40007000
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8004ac0:	4b38      	ldr	r3, [pc, #224]	; (8004ba4 <HAL_RCCEx_PeriphCLKConfig+0x370>)
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004ac8:	2b00      	cmp	r3, #0
 8004aca:	d0e8      	beq.n	8004a9e <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8004acc:	4b36      	ldr	r3, [pc, #216]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004ace:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ad0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004ad4:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8004ad6:	693b      	ldr	r3, [r7, #16]
 8004ad8:	2b00      	cmp	r3, #0
 8004ada:	d02f      	beq.n	8004b3c <HAL_RCCEx_PeriphCLKConfig+0x308>
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ae0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004ae4:	693a      	ldr	r2, [r7, #16]
 8004ae6:	429a      	cmp	r2, r3
 8004ae8:	d028      	beq.n	8004b3c <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8004aea:	4b2f      	ldr	r3, [pc, #188]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004aec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004aee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004af2:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8004af4:	4b2d      	ldr	r3, [pc, #180]	; (8004bac <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8004af6:	2201      	movs	r2, #1
 8004af8:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8004afa:	4b2c      	ldr	r3, [pc, #176]	; (8004bac <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8004afc:	2200      	movs	r2, #0
 8004afe:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 8004b00:	4a29      	ldr	r2, [pc, #164]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004b02:	693b      	ldr	r3, [r7, #16]
 8004b04:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8004b06:	4b28      	ldr	r3, [pc, #160]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004b08:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b0a:	f003 0301 	and.w	r3, r3, #1
 8004b0e:	2b01      	cmp	r3, #1
 8004b10:	d114      	bne.n	8004b3c <HAL_RCCEx_PeriphCLKConfig+0x308>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 8004b12:	f7fd fb01 	bl	8002118 <HAL_GetTick>
 8004b16:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004b18:	e00a      	b.n	8004b30 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004b1a:	f7fd fafd 	bl	8002118 <HAL_GetTick>
 8004b1e:	4602      	mov	r2, r0
 8004b20:	697b      	ldr	r3, [r7, #20]
 8004b22:	1ad3      	subs	r3, r2, r3
 8004b24:	f241 3288 	movw	r2, #5000	; 0x1388
 8004b28:	4293      	cmp	r3, r2
 8004b2a:	d901      	bls.n	8004b30 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
          {
            return HAL_TIMEOUT;
 8004b2c:	2303      	movs	r3, #3
 8004b2e:	e035      	b.n	8004b9c <HAL_RCCEx_PeriphCLKConfig+0x368>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004b30:	4b1d      	ldr	r3, [pc, #116]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004b32:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b34:	f003 0302 	and.w	r3, r3, #2
 8004b38:	2b00      	cmp	r3, #0
 8004b3a:	d0ee      	beq.n	8004b1a <HAL_RCCEx_PeriphCLKConfig+0x2e6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b40:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004b44:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004b48:	d10d      	bne.n	8004b66 <HAL_RCCEx_PeriphCLKConfig+0x332>
 8004b4a:	4b17      	ldr	r3, [pc, #92]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004b4c:	689b      	ldr	r3, [r3, #8]
 8004b4e:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b56:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8004b5a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004b5e:	4912      	ldr	r1, [pc, #72]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004b60:	4313      	orrs	r3, r2
 8004b62:	608b      	str	r3, [r1, #8]
 8004b64:	e005      	b.n	8004b72 <HAL_RCCEx_PeriphCLKConfig+0x33e>
 8004b66:	4b10      	ldr	r3, [pc, #64]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004b68:	689b      	ldr	r3, [r3, #8]
 8004b6a:	4a0f      	ldr	r2, [pc, #60]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004b6c:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8004b70:	6093      	str	r3, [r2, #8]
 8004b72:	4b0d      	ldr	r3, [pc, #52]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004b74:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b7a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004b7e:	490a      	ldr	r1, [pc, #40]	; (8004ba8 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004b80:	4313      	orrs	r3, r2
 8004b82:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	f003 0310 	and.w	r3, r3, #16
 8004b8c:	2b00      	cmp	r3, #0
 8004b8e:	d004      	beq.n	8004b9a <HAL_RCCEx_PeriphCLKConfig+0x366>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 8004b96:	4b06      	ldr	r3, [pc, #24]	; (8004bb0 <HAL_RCCEx_PeriphCLKConfig+0x37c>)
 8004b98:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 8004b9a:	2300      	movs	r3, #0
}
 8004b9c:	4618      	mov	r0, r3
 8004b9e:	3718      	adds	r7, #24
 8004ba0:	46bd      	mov	sp, r7
 8004ba2:	bd80      	pop	{r7, pc}
 8004ba4:	40007000 	.word	0x40007000
 8004ba8:	40023800 	.word	0x40023800
 8004bac:	42470e40 	.word	0x42470e40
 8004bb0:	424711e0 	.word	0x424711e0

08004bb4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8004bb4:	b580      	push	{r7, lr}
 8004bb6:	b082      	sub	sp, #8
 8004bb8:	af00      	add	r7, sp, #0
 8004bba:	6078      	str	r0, [r7, #4]
 8004bbc:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	2b00      	cmp	r3, #0
 8004bc2:	d101      	bne.n	8004bc8 <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 8004bc4:	2301      	movs	r3, #1
 8004bc6:	e025      	b.n	8004c14 <HAL_SDRAM_Init+0x60>
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8004bce:	b2db      	uxtb	r3, r3
 8004bd0:	2b00      	cmp	r3, #0
 8004bd2:	d106      	bne.n	8004be2 <HAL_SDRAM_Init+0x2e>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8004bd4:	687b      	ldr	r3, [r7, #4]
 8004bd6:	2200      	movs	r2, #0
 8004bd8:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8004bdc:	6878      	ldr	r0, [r7, #4]
 8004bde:	f7fd f8b7 	bl	8001d50 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	2202      	movs	r2, #2
 8004be6:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8004bea:	687b      	ldr	r3, [r7, #4]
 8004bec:	681a      	ldr	r2, [r3, #0]
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	3304      	adds	r3, #4
 8004bf2:	4619      	mov	r1, r3
 8004bf4:	4610      	mov	r0, r2
 8004bf6:	f002 fac3 	bl	8007180 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	6818      	ldr	r0, [r3, #0]
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	685b      	ldr	r3, [r3, #4]
 8004c02:	461a      	mov	r2, r3
 8004c04:	6839      	ldr	r1, [r7, #0]
 8004c06:	f002 fb2e 	bl	8007266 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	2201      	movs	r2, #1
 8004c0e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;
 8004c12:	2300      	movs	r3, #0
}
 8004c14:	4618      	mov	r0, r3
 8004c16:	3708      	adds	r7, #8
 8004c18:	46bd      	mov	sp, r7
 8004c1a:	bd80      	pop	{r7, pc}

08004c1c <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8004c1c:	b580      	push	{r7, lr}
 8004c1e:	b084      	sub	sp, #16
 8004c20:	af00      	add	r7, sp, #0
 8004c22:	60f8      	str	r0, [r7, #12]
 8004c24:	60b9      	str	r1, [r7, #8]
 8004c26:	607a      	str	r2, [r7, #4]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8004c28:	68fb      	ldr	r3, [r7, #12]
 8004c2a:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8004c2e:	b2db      	uxtb	r3, r3
 8004c30:	2b02      	cmp	r3, #2
 8004c32:	d101      	bne.n	8004c38 <HAL_SDRAM_SendCommand+0x1c>
  {
    return HAL_BUSY;
 8004c34:	2302      	movs	r3, #2
 8004c36:	e018      	b.n	8004c6a <HAL_SDRAM_SendCommand+0x4e>
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	2202      	movs	r2, #2
 8004c3c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8004c40:	68fb      	ldr	r3, [r7, #12]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	687a      	ldr	r2, [r7, #4]
 8004c46:	68b9      	ldr	r1, [r7, #8]
 8004c48:	4618      	mov	r0, r3
 8004c4a:	f002 fb8b 	bl	8007364 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8004c4e:	68bb      	ldr	r3, [r7, #8]
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	2b02      	cmp	r3, #2
 8004c54:	d104      	bne.n	8004c60 <HAL_SDRAM_SendCommand+0x44>
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8004c56:	68fb      	ldr	r3, [r7, #12]
 8004c58:	2205      	movs	r2, #5
 8004c5a:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8004c5e:	e003      	b.n	8004c68 <HAL_SDRAM_SendCommand+0x4c>
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8004c60:	68fb      	ldr	r3, [r7, #12]
 8004c62:	2201      	movs	r2, #1
 8004c64:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8004c68:	2300      	movs	r3, #0
}
 8004c6a:	4618      	mov	r0, r3
 8004c6c:	3710      	adds	r7, #16
 8004c6e:	46bd      	mov	sp, r7
 8004c70:	bd80      	pop	{r7, pc}

08004c72 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8004c72:	b580      	push	{r7, lr}
 8004c74:	b082      	sub	sp, #8
 8004c76:	af00      	add	r7, sp, #0
 8004c78:	6078      	str	r0, [r7, #4]
 8004c7a:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8004c82:	b2db      	uxtb	r3, r3
 8004c84:	2b02      	cmp	r3, #2
 8004c86:	d101      	bne.n	8004c8c <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
 8004c88:	2302      	movs	r3, #2
 8004c8a:	e00e      	b.n	8004caa <HAL_SDRAM_ProgramRefreshRate+0x38>
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	2202      	movs	r2, #2
 8004c90:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8004c94:	687b      	ldr	r3, [r7, #4]
 8004c96:	681b      	ldr	r3, [r3, #0]
 8004c98:	6839      	ldr	r1, [r7, #0]
 8004c9a:	4618      	mov	r0, r3
 8004c9c:	f002 fb9e 	bl	80073dc <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	2201      	movs	r2, #1
 8004ca4:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;   
 8004ca8:	2300      	movs	r3, #0
}
 8004caa:	4618      	mov	r0, r3
 8004cac:	3708      	adds	r7, #8
 8004cae:	46bd      	mov	sp, r7
 8004cb0:	bd80      	pop	{r7, pc}

08004cb2 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8004cb2:	b580      	push	{r7, lr}
 8004cb4:	b082      	sub	sp, #8
 8004cb6:	af00      	add	r7, sp, #0
 8004cb8:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	2b00      	cmp	r3, #0
 8004cbe:	d101      	bne.n	8004cc4 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8004cc0:	2301      	movs	r3, #1
 8004cc2:	e056      	b.n	8004d72 <HAL_SPI_Init+0xc0>
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	2200      	movs	r2, #0
 8004cc8:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004cd0:	b2db      	uxtb	r3, r3
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	d106      	bne.n	8004ce4 <HAL_SPI_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8004cd6:	687b      	ldr	r3, [r7, #4]
 8004cd8:	2200      	movs	r2, #0
 8004cda:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8004cde:	6878      	ldr	r0, [r7, #4]
 8004ce0:	f7fc fe0c 	bl	80018fc <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	2202      	movs	r2, #2
 8004ce8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	681a      	ldr	r2, [r3, #0]
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004cfa:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	685a      	ldr	r2, [r3, #4]
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	689b      	ldr	r3, [r3, #8]
 8004d04:	431a      	orrs	r2, r3
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	68db      	ldr	r3, [r3, #12]
 8004d0a:	431a      	orrs	r2, r3
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	691b      	ldr	r3, [r3, #16]
 8004d10:	431a      	orrs	r2, r3
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	695b      	ldr	r3, [r3, #20]
 8004d16:	431a      	orrs	r2, r3
 8004d18:	687b      	ldr	r3, [r7, #4]
 8004d1a:	699b      	ldr	r3, [r3, #24]
 8004d1c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004d20:	431a      	orrs	r2, r3
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	69db      	ldr	r3, [r3, #28]
 8004d26:	431a      	orrs	r2, r3
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	6a1b      	ldr	r3, [r3, #32]
 8004d2c:	ea42 0103 	orr.w	r1, r2, r3
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	681b      	ldr	r3, [r3, #0]
 8004d38:	430a      	orrs	r2, r1
 8004d3a:	601a      	str	r2, [r3, #0]
                                  hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_SSM) |
                                  hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalculation));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	699b      	ldr	r3, [r3, #24]
 8004d40:	0c1b      	lsrs	r3, r3, #16
 8004d42:	f003 0104 	and.w	r1, r3, #4
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004d4a:	687b      	ldr	r3, [r7, #4]
 8004d4c:	681b      	ldr	r3, [r3, #0]
 8004d4e:	430a      	orrs	r2, r1
 8004d50:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	69da      	ldr	r2, [r3, #28]
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004d60:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	2200      	movs	r2, #0
 8004d66:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	2201      	movs	r2, #1
 8004d6c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8004d70:	2300      	movs	r3, #0
}
 8004d72:	4618      	mov	r0, r3
 8004d74:	3708      	adds	r7, #8
 8004d76:	46bd      	mov	sp, r7
 8004d78:	bd80      	pop	{r7, pc}

08004d7a <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004d7a:	b580      	push	{r7, lr}
 8004d7c:	b088      	sub	sp, #32
 8004d7e:	af00      	add	r7, sp, #0
 8004d80:	60f8      	str	r0, [r7, #12]
 8004d82:	60b9      	str	r1, [r7, #8]
 8004d84:	603b      	str	r3, [r7, #0]
 8004d86:	4613      	mov	r3, r2
 8004d88:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8004d8a:	2300      	movs	r3, #0
 8004d8c:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8004d8e:	68fb      	ldr	r3, [r7, #12]
 8004d90:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004d94:	2b01      	cmp	r3, #1
 8004d96:	d101      	bne.n	8004d9c <HAL_SPI_Transmit+0x22>
 8004d98:	2302      	movs	r3, #2
 8004d9a:	e11e      	b.n	8004fda <HAL_SPI_Transmit+0x260>
 8004d9c:	68fb      	ldr	r3, [r7, #12]
 8004d9e:	2201      	movs	r2, #1
 8004da0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8004da4:	f7fd f9b8 	bl	8002118 <HAL_GetTick>
 8004da8:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 8004daa:	88fb      	ldrh	r3, [r7, #6]
 8004dac:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 8004dae:	68fb      	ldr	r3, [r7, #12]
 8004db0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004db4:	b2db      	uxtb	r3, r3
 8004db6:	2b01      	cmp	r3, #1
 8004db8:	d002      	beq.n	8004dc0 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 8004dba:	2302      	movs	r3, #2
 8004dbc:	77fb      	strb	r3, [r7, #31]
    goto error;
 8004dbe:	e103      	b.n	8004fc8 <HAL_SPI_Transmit+0x24e>
  }

  if ((pData == NULL) || (Size == 0U))
 8004dc0:	68bb      	ldr	r3, [r7, #8]
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d002      	beq.n	8004dcc <HAL_SPI_Transmit+0x52>
 8004dc6:	88fb      	ldrh	r3, [r7, #6]
 8004dc8:	2b00      	cmp	r3, #0
 8004dca:	d102      	bne.n	8004dd2 <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 8004dcc:	2301      	movs	r3, #1
 8004dce:	77fb      	strb	r3, [r7, #31]
    goto error;
 8004dd0:	e0fa      	b.n	8004fc8 <HAL_SPI_Transmit+0x24e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8004dd2:	68fb      	ldr	r3, [r7, #12]
 8004dd4:	2203      	movs	r2, #3
 8004dd6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8004dda:	68fb      	ldr	r3, [r7, #12]
 8004ddc:	2200      	movs	r2, #0
 8004dde:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8004de0:	68fb      	ldr	r3, [r7, #12]
 8004de2:	68ba      	ldr	r2, [r7, #8]
 8004de4:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 8004de6:	68fb      	ldr	r3, [r7, #12]
 8004de8:	88fa      	ldrh	r2, [r7, #6]
 8004dea:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 8004dec:	68fb      	ldr	r3, [r7, #12]
 8004dee:	88fa      	ldrh	r2, [r7, #6]
 8004df0:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8004df2:	68fb      	ldr	r3, [r7, #12]
 8004df4:	2200      	movs	r2, #0
 8004df6:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8004df8:	68fb      	ldr	r3, [r7, #12]
 8004dfa:	2200      	movs	r2, #0
 8004dfc:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8004dfe:	68fb      	ldr	r3, [r7, #12]
 8004e00:	2200      	movs	r2, #0
 8004e02:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	2200      	movs	r2, #0
 8004e08:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8004e0a:	68fb      	ldr	r3, [r7, #12]
 8004e0c:	2200      	movs	r2, #0
 8004e0e:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004e10:	68fb      	ldr	r3, [r7, #12]
 8004e12:	689b      	ldr	r3, [r3, #8]
 8004e14:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004e18:	d107      	bne.n	8004e2a <HAL_SPI_Transmit+0xb0>
  {
    SPI_1LINE_TX(hspi);
 8004e1a:	68fb      	ldr	r3, [r7, #12]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	681a      	ldr	r2, [r3, #0]
 8004e20:	68fb      	ldr	r3, [r7, #12]
 8004e22:	681b      	ldr	r3, [r3, #0]
 8004e24:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004e28:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8004e2a:	68fb      	ldr	r3, [r7, #12]
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004e34:	2b40      	cmp	r3, #64	; 0x40
 8004e36:	d007      	beq.n	8004e48 <HAL_SPI_Transmit+0xce>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	681a      	ldr	r2, [r3, #0]
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	681b      	ldr	r3, [r3, #0]
 8004e42:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004e46:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8004e48:	68fb      	ldr	r3, [r7, #12]
 8004e4a:	68db      	ldr	r3, [r3, #12]
 8004e4c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004e50:	d14b      	bne.n	8004eea <HAL_SPI_Transmit+0x170>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	685b      	ldr	r3, [r3, #4]
 8004e56:	2b00      	cmp	r3, #0
 8004e58:	d002      	beq.n	8004e60 <HAL_SPI_Transmit+0xe6>
 8004e5a:	8afb      	ldrh	r3, [r7, #22]
 8004e5c:	2b01      	cmp	r3, #1
 8004e5e:	d13e      	bne.n	8004ede <HAL_SPI_Transmit+0x164>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8004e60:	68fb      	ldr	r3, [r7, #12]
 8004e62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e64:	881a      	ldrh	r2, [r3, #0]
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8004e6c:	68fb      	ldr	r3, [r7, #12]
 8004e6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e70:	1c9a      	adds	r2, r3, #2
 8004e72:	68fb      	ldr	r3, [r7, #12]
 8004e74:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8004e76:	68fb      	ldr	r3, [r7, #12]
 8004e78:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004e7a:	b29b      	uxth	r3, r3
 8004e7c:	3b01      	subs	r3, #1
 8004e7e:	b29a      	uxth	r2, r3
 8004e80:	68fb      	ldr	r3, [r7, #12]
 8004e82:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8004e84:	e02b      	b.n	8004ede <HAL_SPI_Transmit+0x164>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	689b      	ldr	r3, [r3, #8]
 8004e8c:	f003 0302 	and.w	r3, r3, #2
 8004e90:	2b02      	cmp	r3, #2
 8004e92:	d112      	bne.n	8004eba <HAL_SPI_Transmit+0x140>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8004e94:	68fb      	ldr	r3, [r7, #12]
 8004e96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e98:	881a      	ldrh	r2, [r3, #0]
 8004e9a:	68fb      	ldr	r3, [r7, #12]
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8004ea0:	68fb      	ldr	r3, [r7, #12]
 8004ea2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ea4:	1c9a      	adds	r2, r3, #2
 8004ea6:	68fb      	ldr	r3, [r7, #12]
 8004ea8:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8004eaa:	68fb      	ldr	r3, [r7, #12]
 8004eac:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004eae:	b29b      	uxth	r3, r3
 8004eb0:	3b01      	subs	r3, #1
 8004eb2:	b29a      	uxth	r2, r3
 8004eb4:	68fb      	ldr	r3, [r7, #12]
 8004eb6:	86da      	strh	r2, [r3, #54]	; 0x36
 8004eb8:	e011      	b.n	8004ede <HAL_SPI_Transmit+0x164>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8004eba:	f7fd f92d 	bl	8002118 <HAL_GetTick>
 8004ebe:	4602      	mov	r2, r0
 8004ec0:	69bb      	ldr	r3, [r7, #24]
 8004ec2:	1ad3      	subs	r3, r2, r3
 8004ec4:	683a      	ldr	r2, [r7, #0]
 8004ec6:	429a      	cmp	r2, r3
 8004ec8:	d803      	bhi.n	8004ed2 <HAL_SPI_Transmit+0x158>
 8004eca:	683b      	ldr	r3, [r7, #0]
 8004ecc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ed0:	d102      	bne.n	8004ed8 <HAL_SPI_Transmit+0x15e>
 8004ed2:	683b      	ldr	r3, [r7, #0]
 8004ed4:	2b00      	cmp	r3, #0
 8004ed6:	d102      	bne.n	8004ede <HAL_SPI_Transmit+0x164>
        {
          errorcode = HAL_TIMEOUT;
 8004ed8:	2303      	movs	r3, #3
 8004eda:	77fb      	strb	r3, [r7, #31]
          goto error;
 8004edc:	e074      	b.n	8004fc8 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 8004ede:	68fb      	ldr	r3, [r7, #12]
 8004ee0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004ee2:	b29b      	uxth	r3, r3
 8004ee4:	2b00      	cmp	r3, #0
 8004ee6:	d1ce      	bne.n	8004e86 <HAL_SPI_Transmit+0x10c>
 8004ee8:	e04c      	b.n	8004f84 <HAL_SPI_Transmit+0x20a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8004eea:	68fb      	ldr	r3, [r7, #12]
 8004eec:	685b      	ldr	r3, [r3, #4]
 8004eee:	2b00      	cmp	r3, #0
 8004ef0:	d002      	beq.n	8004ef8 <HAL_SPI_Transmit+0x17e>
 8004ef2:	8afb      	ldrh	r3, [r7, #22]
 8004ef4:	2b01      	cmp	r3, #1
 8004ef6:	d140      	bne.n	8004f7a <HAL_SPI_Transmit+0x200>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8004ef8:	68fb      	ldr	r3, [r7, #12]
 8004efa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004efc:	68fb      	ldr	r3, [r7, #12]
 8004efe:	681b      	ldr	r3, [r3, #0]
 8004f00:	330c      	adds	r3, #12
 8004f02:	7812      	ldrb	r2, [r2, #0]
 8004f04:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8004f06:	68fb      	ldr	r3, [r7, #12]
 8004f08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f0a:	1c5a      	adds	r2, r3, #1
 8004f0c:	68fb      	ldr	r3, [r7, #12]
 8004f0e:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004f14:	b29b      	uxth	r3, r3
 8004f16:	3b01      	subs	r3, #1
 8004f18:	b29a      	uxth	r2, r3
 8004f1a:	68fb      	ldr	r3, [r7, #12]
 8004f1c:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8004f1e:	e02c      	b.n	8004f7a <HAL_SPI_Transmit+0x200>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8004f20:	68fb      	ldr	r3, [r7, #12]
 8004f22:	681b      	ldr	r3, [r3, #0]
 8004f24:	689b      	ldr	r3, [r3, #8]
 8004f26:	f003 0302 	and.w	r3, r3, #2
 8004f2a:	2b02      	cmp	r3, #2
 8004f2c:	d113      	bne.n	8004f56 <HAL_SPI_Transmit+0x1dc>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8004f2e:	68fb      	ldr	r3, [r7, #12]
 8004f30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004f32:	68fb      	ldr	r3, [r7, #12]
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	330c      	adds	r3, #12
 8004f38:	7812      	ldrb	r2, [r2, #0]
 8004f3a:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8004f3c:	68fb      	ldr	r3, [r7, #12]
 8004f3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f40:	1c5a      	adds	r2, r3, #1
 8004f42:	68fb      	ldr	r3, [r7, #12]
 8004f44:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8004f46:	68fb      	ldr	r3, [r7, #12]
 8004f48:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004f4a:	b29b      	uxth	r3, r3
 8004f4c:	3b01      	subs	r3, #1
 8004f4e:	b29a      	uxth	r2, r3
 8004f50:	68fb      	ldr	r3, [r7, #12]
 8004f52:	86da      	strh	r2, [r3, #54]	; 0x36
 8004f54:	e011      	b.n	8004f7a <HAL_SPI_Transmit+0x200>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8004f56:	f7fd f8df 	bl	8002118 <HAL_GetTick>
 8004f5a:	4602      	mov	r2, r0
 8004f5c:	69bb      	ldr	r3, [r7, #24]
 8004f5e:	1ad3      	subs	r3, r2, r3
 8004f60:	683a      	ldr	r2, [r7, #0]
 8004f62:	429a      	cmp	r2, r3
 8004f64:	d803      	bhi.n	8004f6e <HAL_SPI_Transmit+0x1f4>
 8004f66:	683b      	ldr	r3, [r7, #0]
 8004f68:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f6c:	d102      	bne.n	8004f74 <HAL_SPI_Transmit+0x1fa>
 8004f6e:	683b      	ldr	r3, [r7, #0]
 8004f70:	2b00      	cmp	r3, #0
 8004f72:	d102      	bne.n	8004f7a <HAL_SPI_Transmit+0x200>
        {
          errorcode = HAL_TIMEOUT;
 8004f74:	2303      	movs	r3, #3
 8004f76:	77fb      	strb	r3, [r7, #31]
          goto error;
 8004f78:	e026      	b.n	8004fc8 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004f7e:	b29b      	uxth	r3, r3
 8004f80:	2b00      	cmp	r3, #0
 8004f82:	d1cd      	bne.n	8004f20 <HAL_SPI_Transmit+0x1a6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8004f84:	69ba      	ldr	r2, [r7, #24]
 8004f86:	6839      	ldr	r1, [r7, #0]
 8004f88:	68f8      	ldr	r0, [r7, #12]
 8004f8a:	f000 f895 	bl	80050b8 <SPI_EndRxTxTransaction>
 8004f8e:	4603      	mov	r3, r0
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	d002      	beq.n	8004f9a <HAL_SPI_Transmit+0x220>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8004f94:	68fb      	ldr	r3, [r7, #12]
 8004f96:	2220      	movs	r2, #32
 8004f98:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	689b      	ldr	r3, [r3, #8]
 8004f9e:	2b00      	cmp	r3, #0
 8004fa0:	d10a      	bne.n	8004fb8 <HAL_SPI_Transmit+0x23e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8004fa2:	2300      	movs	r3, #0
 8004fa4:	613b      	str	r3, [r7, #16]
 8004fa6:	68fb      	ldr	r3, [r7, #12]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	68db      	ldr	r3, [r3, #12]
 8004fac:	613b      	str	r3, [r7, #16]
 8004fae:	68fb      	ldr	r3, [r7, #12]
 8004fb0:	681b      	ldr	r3, [r3, #0]
 8004fb2:	689b      	ldr	r3, [r3, #8]
 8004fb4:	613b      	str	r3, [r7, #16]
 8004fb6:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8004fb8:	68fb      	ldr	r3, [r7, #12]
 8004fba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	d002      	beq.n	8004fc6 <HAL_SPI_Transmit+0x24c>
  {
    errorcode = HAL_ERROR;
 8004fc0:	2301      	movs	r3, #1
 8004fc2:	77fb      	strb	r3, [r7, #31]
 8004fc4:	e000      	b.n	8004fc8 <HAL_SPI_Transmit+0x24e>
  }

error:
 8004fc6:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8004fc8:	68fb      	ldr	r3, [r7, #12]
 8004fca:	2201      	movs	r2, #1
 8004fcc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8004fd0:	68fb      	ldr	r3, [r7, #12]
 8004fd2:	2200      	movs	r2, #0
 8004fd4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8004fd8:	7ffb      	ldrb	r3, [r7, #31]
}
 8004fda:	4618      	mov	r0, r3
 8004fdc:	3720      	adds	r7, #32
 8004fde:	46bd      	mov	sp, r7
 8004fe0:	bd80      	pop	{r7, pc}

08004fe2 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8004fe2:	b580      	push	{r7, lr}
 8004fe4:	b084      	sub	sp, #16
 8004fe6:	af00      	add	r7, sp, #0
 8004fe8:	60f8      	str	r0, [r7, #12]
 8004fea:	60b9      	str	r1, [r7, #8]
 8004fec:	603b      	str	r3, [r7, #0]
 8004fee:	4613      	mov	r3, r2
 8004ff0:	71fb      	strb	r3, [r7, #7]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8004ff2:	e04c      	b.n	800508e <SPI_WaitFlagStateUntilTimeout+0xac>
  {
    if (Timeout != HAL_MAX_DELAY)
 8004ff4:	683b      	ldr	r3, [r7, #0]
 8004ff6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ffa:	d048      	beq.n	800508e <SPI_WaitFlagStateUntilTimeout+0xac>
    {
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8004ffc:	f7fd f88c 	bl	8002118 <HAL_GetTick>
 8005000:	4602      	mov	r2, r0
 8005002:	69bb      	ldr	r3, [r7, #24]
 8005004:	1ad3      	subs	r3, r2, r3
 8005006:	683a      	ldr	r2, [r7, #0]
 8005008:	429a      	cmp	r2, r3
 800500a:	d902      	bls.n	8005012 <SPI_WaitFlagStateUntilTimeout+0x30>
 800500c:	683b      	ldr	r3, [r7, #0]
 800500e:	2b00      	cmp	r3, #0
 8005010:	d13d      	bne.n	800508e <SPI_WaitFlagStateUntilTimeout+0xac>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
        on both master and slave sides in order to resynchronize the master
        and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005012:	68fb      	ldr	r3, [r7, #12]
 8005014:	681b      	ldr	r3, [r3, #0]
 8005016:	685a      	ldr	r2, [r3, #4]
 8005018:	68fb      	ldr	r3, [r7, #12]
 800501a:	681b      	ldr	r3, [r3, #0]
 800501c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005020:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	685b      	ldr	r3, [r3, #4]
 8005026:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800502a:	d111      	bne.n	8005050 <SPI_WaitFlagStateUntilTimeout+0x6e>
 800502c:	68fb      	ldr	r3, [r7, #12]
 800502e:	689b      	ldr	r3, [r3, #8]
 8005030:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005034:	d004      	beq.n	8005040 <SPI_WaitFlagStateUntilTimeout+0x5e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005036:	68fb      	ldr	r3, [r7, #12]
 8005038:	689b      	ldr	r3, [r3, #8]
 800503a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800503e:	d107      	bne.n	8005050 <SPI_WaitFlagStateUntilTimeout+0x6e>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8005040:	68fb      	ldr	r3, [r7, #12]
 8005042:	681b      	ldr	r3, [r3, #0]
 8005044:	681a      	ldr	r2, [r3, #0]
 8005046:	68fb      	ldr	r3, [r7, #12]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800504e:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005054:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005058:	d10f      	bne.n	800507a <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          SPI_RESET_CRC(hspi);
 800505a:	68fb      	ldr	r3, [r7, #12]
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	681a      	ldr	r2, [r3, #0]
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005068:	601a      	str	r2, [r3, #0]
 800506a:	68fb      	ldr	r3, [r7, #12]
 800506c:	681b      	ldr	r3, [r3, #0]
 800506e:	681a      	ldr	r2, [r3, #0]
 8005070:	68fb      	ldr	r3, [r7, #12]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005078:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 800507a:	68fb      	ldr	r3, [r7, #12]
 800507c:	2201      	movs	r2, #1
 800507e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8005082:	68fb      	ldr	r3, [r7, #12]
 8005084:	2200      	movs	r2, #0
 8005086:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 800508a:	2303      	movs	r3, #3
 800508c:	e00f      	b.n	80050ae <SPI_WaitFlagStateUntilTimeout+0xcc>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	689a      	ldr	r2, [r3, #8]
 8005094:	68bb      	ldr	r3, [r7, #8]
 8005096:	4013      	ands	r3, r2
 8005098:	68ba      	ldr	r2, [r7, #8]
 800509a:	429a      	cmp	r2, r3
 800509c:	bf0c      	ite	eq
 800509e:	2301      	moveq	r3, #1
 80050a0:	2300      	movne	r3, #0
 80050a2:	b2db      	uxtb	r3, r3
 80050a4:	461a      	mov	r2, r3
 80050a6:	79fb      	ldrb	r3, [r7, #7]
 80050a8:	429a      	cmp	r2, r3
 80050aa:	d1a3      	bne.n	8004ff4 <SPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }

  return HAL_OK;
 80050ac:	2300      	movs	r3, #0
}
 80050ae:	4618      	mov	r0, r3
 80050b0:	3710      	adds	r7, #16
 80050b2:	46bd      	mov	sp, r7
 80050b4:	bd80      	pop	{r7, pc}
	...

080050b8 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80050b8:	b580      	push	{r7, lr}
 80050ba:	b088      	sub	sp, #32
 80050bc:	af02      	add	r7, sp, #8
 80050be:	60f8      	str	r0, [r7, #12]
 80050c0:	60b9      	str	r1, [r7, #8]
 80050c2:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80050c4:	4b1b      	ldr	r3, [pc, #108]	; (8005134 <SPI_EndRxTxTransaction+0x7c>)
 80050c6:	681b      	ldr	r3, [r3, #0]
 80050c8:	4a1b      	ldr	r2, [pc, #108]	; (8005138 <SPI_EndRxTxTransaction+0x80>)
 80050ca:	fba2 2303 	umull	r2, r3, r2, r3
 80050ce:	0d5b      	lsrs	r3, r3, #21
 80050d0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80050d4:	fb02 f303 	mul.w	r3, r2, r3
 80050d8:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80050da:	68fb      	ldr	r3, [r7, #12]
 80050dc:	685b      	ldr	r3, [r3, #4]
 80050de:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80050e2:	d112      	bne.n	800510a <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	9300      	str	r3, [sp, #0]
 80050e8:	68bb      	ldr	r3, [r7, #8]
 80050ea:	2200      	movs	r2, #0
 80050ec:	2180      	movs	r1, #128	; 0x80
 80050ee:	68f8      	ldr	r0, [r7, #12]
 80050f0:	f7ff ff77 	bl	8004fe2 <SPI_WaitFlagStateUntilTimeout>
 80050f4:	4603      	mov	r3, r0
 80050f6:	2b00      	cmp	r3, #0
 80050f8:	d016      	beq.n	8005128 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80050fa:	68fb      	ldr	r3, [r7, #12]
 80050fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80050fe:	f043 0220 	orr.w	r2, r3, #32
 8005102:	68fb      	ldr	r3, [r7, #12]
 8005104:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8005106:	2303      	movs	r3, #3
 8005108:	e00f      	b.n	800512a <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 800510a:	697b      	ldr	r3, [r7, #20]
 800510c:	2b00      	cmp	r3, #0
 800510e:	d00a      	beq.n	8005126 <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8005110:	697b      	ldr	r3, [r7, #20]
 8005112:	3b01      	subs	r3, #1
 8005114:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005116:	68fb      	ldr	r3, [r7, #12]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	689b      	ldr	r3, [r3, #8]
 800511c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005120:	2b80      	cmp	r3, #128	; 0x80
 8005122:	d0f2      	beq.n	800510a <SPI_EndRxTxTransaction+0x52>
 8005124:	e000      	b.n	8005128 <SPI_EndRxTxTransaction+0x70>
        break;
 8005126:	bf00      	nop
  }

  return HAL_OK;
 8005128:	2300      	movs	r3, #0
}
 800512a:	4618      	mov	r0, r3
 800512c:	3718      	adds	r7, #24
 800512e:	46bd      	mov	sp, r7
 8005130:	bd80      	pop	{r7, pc}
 8005132:	bf00      	nop
 8005134:	20000004 	.word	0x20000004
 8005138:	165e9f81 	.word	0x165e9f81

0800513c <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 800513c:	b580      	push	{r7, lr}
 800513e:	b082      	sub	sp, #8
 8005140:	af00      	add	r7, sp, #0
 8005142:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	2b00      	cmp	r3, #0
 8005148:	d101      	bne.n	800514e <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 800514a:	2301      	movs	r3, #1
 800514c:	e01d      	b.n	800518a <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800514e:	687b      	ldr	r3, [r7, #4]
 8005150:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005154:	b2db      	uxtb	r3, r3
 8005156:	2b00      	cmp	r3, #0
 8005158:	d106      	bne.n	8005168 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	2200      	movs	r2, #0
 800515e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8005162:	6878      	ldr	r0, [r7, #4]
 8005164:	f7fc fc12 	bl	800198c <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	2202      	movs	r2, #2
 800516c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	681a      	ldr	r2, [r3, #0]
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	3304      	adds	r3, #4
 8005178:	4619      	mov	r1, r3
 800517a:	4610      	mov	r0, r2
 800517c:	f000 fc92 	bl	8005aa4 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	2201      	movs	r2, #1
 8005184:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005188:	2300      	movs	r3, #0
}
 800518a:	4618      	mov	r0, r3
 800518c:	3708      	adds	r7, #8
 800518e:	46bd      	mov	sp, r7
 8005190:	bd80      	pop	{r7, pc}

08005192 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8005192:	b480      	push	{r7}
 8005194:	b085      	sub	sp, #20
 8005196:	af00      	add	r7, sp, #0
 8005198:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	681b      	ldr	r3, [r3, #0]
 800519e:	68da      	ldr	r2, [r3, #12]
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	f042 0201 	orr.w	r2, r2, #1
 80051a8:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	681b      	ldr	r3, [r3, #0]
 80051ae:	689b      	ldr	r3, [r3, #8]
 80051b0:	f003 0307 	and.w	r3, r3, #7
 80051b4:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80051b6:	68fb      	ldr	r3, [r7, #12]
 80051b8:	2b06      	cmp	r3, #6
 80051ba:	d007      	beq.n	80051cc <HAL_TIM_Base_Start_IT+0x3a>
  {
    __HAL_TIM_ENABLE(htim);
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	681b      	ldr	r3, [r3, #0]
 80051c0:	681a      	ldr	r2, [r3, #0]
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	f042 0201 	orr.w	r2, r2, #1
 80051ca:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80051cc:	2300      	movs	r3, #0
}
 80051ce:	4618      	mov	r0, r3
 80051d0:	3714      	adds	r7, #20
 80051d2:	46bd      	mov	sp, r7
 80051d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051d8:	4770      	bx	lr

080051da <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 80051da:	b580      	push	{r7, lr}
 80051dc:	b082      	sub	sp, #8
 80051de:	af00      	add	r7, sp, #0
 80051e0:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	2b00      	cmp	r3, #0
 80051e6:	d101      	bne.n	80051ec <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 80051e8:	2301      	movs	r3, #1
 80051ea:	e01d      	b.n	8005228 <HAL_TIM_PWM_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80051f2:	b2db      	uxtb	r3, r3
 80051f4:	2b00      	cmp	r3, #0
 80051f6:	d106      	bne.n	8005206 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	2200      	movs	r2, #0
 80051fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8005200:	6878      	ldr	r0, [r7, #4]
 8005202:	f000 f815 	bl	8005230 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	2202      	movs	r2, #2
 800520a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	681a      	ldr	r2, [r3, #0]
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	3304      	adds	r3, #4
 8005216:	4619      	mov	r1, r3
 8005218:	4610      	mov	r0, r2
 800521a:	f000 fc43 	bl	8005aa4 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	2201      	movs	r2, #1
 8005222:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005226:	2300      	movs	r3, #0
}
 8005228:	4618      	mov	r0, r3
 800522a:	3708      	adds	r7, #8
 800522c:	46bd      	mov	sp, r7
 800522e:	bd80      	pop	{r7, pc}

08005230 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8005230:	b480      	push	{r7}
 8005232:	b083      	sub	sp, #12
 8005234:	af00      	add	r7, sp, #0
 8005236:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8005238:	bf00      	nop
 800523a:	370c      	adds	r7, #12
 800523c:	46bd      	mov	sp, r7
 800523e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005242:	4770      	bx	lr

08005244 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8005244:	b580      	push	{r7, lr}
 8005246:	b084      	sub	sp, #16
 8005248:	af00      	add	r7, sp, #0
 800524a:	6078      	str	r0, [r7, #4]
 800524c:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	681b      	ldr	r3, [r3, #0]
 8005252:	2201      	movs	r2, #1
 8005254:	6839      	ldr	r1, [r7, #0]
 8005256:	4618      	mov	r0, r3
 8005258:	f001 f838 	bl	80062cc <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	4a15      	ldr	r2, [pc, #84]	; (80052b8 <HAL_TIM_PWM_Start+0x74>)
 8005262:	4293      	cmp	r3, r2
 8005264:	d004      	beq.n	8005270 <HAL_TIM_PWM_Start+0x2c>
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	681b      	ldr	r3, [r3, #0]
 800526a:	4a14      	ldr	r2, [pc, #80]	; (80052bc <HAL_TIM_PWM_Start+0x78>)
 800526c:	4293      	cmp	r3, r2
 800526e:	d101      	bne.n	8005274 <HAL_TIM_PWM_Start+0x30>
 8005270:	2301      	movs	r3, #1
 8005272:	e000      	b.n	8005276 <HAL_TIM_PWM_Start+0x32>
 8005274:	2300      	movs	r3, #0
 8005276:	2b00      	cmp	r3, #0
 8005278:	d007      	beq.n	800528a <HAL_TIM_PWM_Start+0x46>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	681b      	ldr	r3, [r3, #0]
 800527e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	681b      	ldr	r3, [r3, #0]
 8005284:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005288:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	689b      	ldr	r3, [r3, #8]
 8005290:	f003 0307 	and.w	r3, r3, #7
 8005294:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	2b06      	cmp	r3, #6
 800529a:	d007      	beq.n	80052ac <HAL_TIM_PWM_Start+0x68>
  {
    __HAL_TIM_ENABLE(htim);
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	681a      	ldr	r2, [r3, #0]
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	f042 0201 	orr.w	r2, r2, #1
 80052aa:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80052ac:	2300      	movs	r3, #0
}
 80052ae:	4618      	mov	r0, r3
 80052b0:	3710      	adds	r7, #16
 80052b2:	46bd      	mov	sp, r7
 80052b4:	bd80      	pop	{r7, pc}
 80052b6:	bf00      	nop
 80052b8:	40010000 	.word	0x40010000
 80052bc:	40010400 	.word	0x40010400

080052c0 <HAL_TIM_IC_Init>:
  *         Ex: call @ref HAL_TIM_IC_DeInit() before HAL_TIM_IC_Init()
  * @param  htim TIM Input Capture handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_Init(TIM_HandleTypeDef *htim)
{
 80052c0:	b580      	push	{r7, lr}
 80052c2:	b082      	sub	sp, #8
 80052c4:	af00      	add	r7, sp, #0
 80052c6:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80052c8:	687b      	ldr	r3, [r7, #4]
 80052ca:	2b00      	cmp	r3, #0
 80052cc:	d101      	bne.n	80052d2 <HAL_TIM_IC_Init+0x12>
  {
    return HAL_ERROR;
 80052ce:	2301      	movs	r3, #1
 80052d0:	e01d      	b.n	800530e <HAL_TIM_IC_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80052d8:	b2db      	uxtb	r3, r3
 80052da:	2b00      	cmp	r3, #0
 80052dc:	d106      	bne.n	80052ec <HAL_TIM_IC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	2200      	movs	r2, #0
 80052e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->IC_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_IC_MspInit(htim);
 80052e6:	6878      	ldr	r0, [r7, #4]
 80052e8:	f000 f815 	bl	8005316 <HAL_TIM_IC_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80052ec:	687b      	ldr	r3, [r7, #4]
 80052ee:	2202      	movs	r2, #2
 80052f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the input capture */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	681a      	ldr	r2, [r3, #0]
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	3304      	adds	r3, #4
 80052fc:	4619      	mov	r1, r3
 80052fe:	4610      	mov	r0, r2
 8005300:	f000 fbd0 	bl	8005aa4 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	2201      	movs	r2, #1
 8005308:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 800530c:	2300      	movs	r3, #0
}
 800530e:	4618      	mov	r0, r3
 8005310:	3708      	adds	r7, #8
 8005312:	46bd      	mov	sp, r7
 8005314:	bd80      	pop	{r7, pc}

08005316 <HAL_TIM_IC_MspInit>:
  * @brief  Initializes the TIM Input Capture MSP.
  * @param  htim TIM Input Capture handle
  * @retval None
  */
__weak void HAL_TIM_IC_MspInit(TIM_HandleTypeDef *htim)
{
 8005316:	b480      	push	{r7}
 8005318:	b083      	sub	sp, #12
 800531a:	af00      	add	r7, sp, #0
 800531c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_MspInit could be implemented in the user file
   */
}
 800531e:	bf00      	nop
 8005320:	370c      	adds	r7, #12
 8005322:	46bd      	mov	sp, r7
 8005324:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005328:	4770      	bx	lr

0800532a <HAL_TIM_IC_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 800532a:	b580      	push	{r7, lr}
 800532c:	b084      	sub	sp, #16
 800532e:	af00      	add	r7, sp, #0
 8005330:	6078      	str	r0, [r7, #4]
 8005332:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Input Capture channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	2201      	movs	r2, #1
 800533a:	6839      	ldr	r1, [r7, #0]
 800533c:	4618      	mov	r0, r3
 800533e:	f000 ffc5 	bl	80062cc <TIM_CCxChannelCmd>

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	681b      	ldr	r3, [r3, #0]
 8005346:	689b      	ldr	r3, [r3, #8]
 8005348:	f003 0307 	and.w	r3, r3, #7
 800534c:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800534e:	68fb      	ldr	r3, [r7, #12]
 8005350:	2b06      	cmp	r3, #6
 8005352:	d007      	beq.n	8005364 <HAL_TIM_IC_Start+0x3a>
  {
    __HAL_TIM_ENABLE(htim);
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	681a      	ldr	r2, [r3, #0]
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	681b      	ldr	r3, [r3, #0]
 800535e:	f042 0201 	orr.w	r2, r2, #1
 8005362:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005364:	2300      	movs	r3, #0
}
 8005366:	4618      	mov	r0, r3
 8005368:	3710      	adds	r7, #16
 800536a:	46bd      	mov	sp, r7
 800536c:	bd80      	pop	{r7, pc}

0800536e <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 800536e:	b580      	push	{r7, lr}
 8005370:	b082      	sub	sp, #8
 8005372:	af00      	add	r7, sp, #0
 8005374:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	681b      	ldr	r3, [r3, #0]
 800537a:	691b      	ldr	r3, [r3, #16]
 800537c:	f003 0302 	and.w	r3, r3, #2
 8005380:	2b02      	cmp	r3, #2
 8005382:	d122      	bne.n	80053ca <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	68db      	ldr	r3, [r3, #12]
 800538a:	f003 0302 	and.w	r3, r3, #2
 800538e:	2b02      	cmp	r3, #2
 8005390:	d11b      	bne.n	80053ca <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	681b      	ldr	r3, [r3, #0]
 8005396:	f06f 0202 	mvn.w	r2, #2
 800539a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	2201      	movs	r2, #1
 80053a0:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	699b      	ldr	r3, [r3, #24]
 80053a8:	f003 0303 	and.w	r3, r3, #3
 80053ac:	2b00      	cmp	r3, #0
 80053ae:	d003      	beq.n	80053b8 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80053b0:	6878      	ldr	r0, [r7, #4]
 80053b2:	f000 fb59 	bl	8005a68 <HAL_TIM_IC_CaptureCallback>
 80053b6:	e005      	b.n	80053c4 <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80053b8:	6878      	ldr	r0, [r7, #4]
 80053ba:	f000 fb4b 	bl	8005a54 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80053be:	6878      	ldr	r0, [r7, #4]
 80053c0:	f000 fb5c 	bl	8005a7c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	2200      	movs	r2, #0
 80053c8:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	691b      	ldr	r3, [r3, #16]
 80053d0:	f003 0304 	and.w	r3, r3, #4
 80053d4:	2b04      	cmp	r3, #4
 80053d6:	d122      	bne.n	800541e <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	681b      	ldr	r3, [r3, #0]
 80053dc:	68db      	ldr	r3, [r3, #12]
 80053de:	f003 0304 	and.w	r3, r3, #4
 80053e2:	2b04      	cmp	r3, #4
 80053e4:	d11b      	bne.n	800541e <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	f06f 0204 	mvn.w	r2, #4
 80053ee:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80053f0:	687b      	ldr	r3, [r7, #4]
 80053f2:	2202      	movs	r2, #2
 80053f4:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	681b      	ldr	r3, [r3, #0]
 80053fa:	699b      	ldr	r3, [r3, #24]
 80053fc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005400:	2b00      	cmp	r3, #0
 8005402:	d003      	beq.n	800540c <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005404:	6878      	ldr	r0, [r7, #4]
 8005406:	f000 fb2f 	bl	8005a68 <HAL_TIM_IC_CaptureCallback>
 800540a:	e005      	b.n	8005418 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800540c:	6878      	ldr	r0, [r7, #4]
 800540e:	f000 fb21 	bl	8005a54 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005412:	6878      	ldr	r0, [r7, #4]
 8005414:	f000 fb32 	bl	8005a7c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	2200      	movs	r2, #0
 800541c:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	691b      	ldr	r3, [r3, #16]
 8005424:	f003 0308 	and.w	r3, r3, #8
 8005428:	2b08      	cmp	r3, #8
 800542a:	d122      	bne.n	8005472 <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	681b      	ldr	r3, [r3, #0]
 8005430:	68db      	ldr	r3, [r3, #12]
 8005432:	f003 0308 	and.w	r3, r3, #8
 8005436:	2b08      	cmp	r3, #8
 8005438:	d11b      	bne.n	8005472 <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800543a:	687b      	ldr	r3, [r7, #4]
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	f06f 0208 	mvn.w	r2, #8
 8005442:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	2204      	movs	r2, #4
 8005448:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800544a:	687b      	ldr	r3, [r7, #4]
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	69db      	ldr	r3, [r3, #28]
 8005450:	f003 0303 	and.w	r3, r3, #3
 8005454:	2b00      	cmp	r3, #0
 8005456:	d003      	beq.n	8005460 <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005458:	6878      	ldr	r0, [r7, #4]
 800545a:	f000 fb05 	bl	8005a68 <HAL_TIM_IC_CaptureCallback>
 800545e:	e005      	b.n	800546c <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005460:	6878      	ldr	r0, [r7, #4]
 8005462:	f000 faf7 	bl	8005a54 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005466:	6878      	ldr	r0, [r7, #4]
 8005468:	f000 fb08 	bl	8005a7c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	2200      	movs	r2, #0
 8005470:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8005472:	687b      	ldr	r3, [r7, #4]
 8005474:	681b      	ldr	r3, [r3, #0]
 8005476:	691b      	ldr	r3, [r3, #16]
 8005478:	f003 0310 	and.w	r3, r3, #16
 800547c:	2b10      	cmp	r3, #16
 800547e:	d122      	bne.n	80054c6 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	68db      	ldr	r3, [r3, #12]
 8005486:	f003 0310 	and.w	r3, r3, #16
 800548a:	2b10      	cmp	r3, #16
 800548c:	d11b      	bne.n	80054c6 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	681b      	ldr	r3, [r3, #0]
 8005492:	f06f 0210 	mvn.w	r2, #16
 8005496:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8005498:	687b      	ldr	r3, [r7, #4]
 800549a:	2208      	movs	r2, #8
 800549c:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	681b      	ldr	r3, [r3, #0]
 80054a2:	69db      	ldr	r3, [r3, #28]
 80054a4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80054a8:	2b00      	cmp	r3, #0
 80054aa:	d003      	beq.n	80054b4 <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80054ac:	6878      	ldr	r0, [r7, #4]
 80054ae:	f000 fadb 	bl	8005a68 <HAL_TIM_IC_CaptureCallback>
 80054b2:	e005      	b.n	80054c0 <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80054b4:	6878      	ldr	r0, [r7, #4]
 80054b6:	f000 facd 	bl	8005a54 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80054ba:	6878      	ldr	r0, [r7, #4]
 80054bc:	f000 fade 	bl	8005a7c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80054c0:	687b      	ldr	r3, [r7, #4]
 80054c2:	2200      	movs	r2, #0
 80054c4:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	691b      	ldr	r3, [r3, #16]
 80054cc:	f003 0301 	and.w	r3, r3, #1
 80054d0:	2b01      	cmp	r3, #1
 80054d2:	d10e      	bne.n	80054f2 <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	68db      	ldr	r3, [r3, #12]
 80054da:	f003 0301 	and.w	r3, r3, #1
 80054de:	2b01      	cmp	r3, #1
 80054e0:	d107      	bne.n	80054f2 <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	681b      	ldr	r3, [r3, #0]
 80054e6:	f06f 0201 	mvn.w	r2, #1
 80054ea:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80054ec:	6878      	ldr	r0, [r7, #4]
 80054ee:	f7fc f805 	bl	80014fc <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	691b      	ldr	r3, [r3, #16]
 80054f8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80054fc:	2b80      	cmp	r3, #128	; 0x80
 80054fe:	d10e      	bne.n	800551e <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	681b      	ldr	r3, [r3, #0]
 8005504:	68db      	ldr	r3, [r3, #12]
 8005506:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800550a:	2b80      	cmp	r3, #128	; 0x80
 800550c:	d107      	bne.n	800551e <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8005516:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8005518:	6878      	ldr	r0, [r7, #4]
 800551a:	f000 ff83 	bl	8006424 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	691b      	ldr	r3, [r3, #16]
 8005524:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005528:	2b40      	cmp	r3, #64	; 0x40
 800552a:	d10e      	bne.n	800554a <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	681b      	ldr	r3, [r3, #0]
 8005530:	68db      	ldr	r3, [r3, #12]
 8005532:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005536:	2b40      	cmp	r3, #64	; 0x40
 8005538:	d107      	bne.n	800554a <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	681b      	ldr	r3, [r3, #0]
 800553e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8005542:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8005544:	6878      	ldr	r0, [r7, #4]
 8005546:	f000 faa3 	bl	8005a90 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800554a:	687b      	ldr	r3, [r7, #4]
 800554c:	681b      	ldr	r3, [r3, #0]
 800554e:	691b      	ldr	r3, [r3, #16]
 8005550:	f003 0320 	and.w	r3, r3, #32
 8005554:	2b20      	cmp	r3, #32
 8005556:	d10e      	bne.n	8005576 <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	68db      	ldr	r3, [r3, #12]
 800555e:	f003 0320 	and.w	r3, r3, #32
 8005562:	2b20      	cmp	r3, #32
 8005564:	d107      	bne.n	8005576 <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	681b      	ldr	r3, [r3, #0]
 800556a:	f06f 0220 	mvn.w	r2, #32
 800556e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8005570:	6878      	ldr	r0, [r7, #4]
 8005572:	f000 ff4d 	bl	8006410 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8005576:	bf00      	nop
 8005578:	3708      	adds	r7, #8
 800557a:	46bd      	mov	sp, r7
 800557c:	bd80      	pop	{r7, pc}

0800557e <HAL_TIM_IC_ConfigChannel>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_IC_InitTypeDef *sConfig, uint32_t Channel)
{
 800557e:	b580      	push	{r7, lr}
 8005580:	b084      	sub	sp, #16
 8005582:	af00      	add	r7, sp, #0
 8005584:	60f8      	str	r0, [r7, #12]
 8005586:	60b9      	str	r1, [r7, #8]
 8005588:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_IC_SELECTION(sConfig->ICSelection));
  assert_param(IS_TIM_IC_PRESCALER(sConfig->ICPrescaler));
  assert_param(IS_TIM_IC_FILTER(sConfig->ICFilter));

  /* Process Locked */
  __HAL_LOCK(htim);
 800558a:	68fb      	ldr	r3, [r7, #12]
 800558c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005590:	2b01      	cmp	r3, #1
 8005592:	d101      	bne.n	8005598 <HAL_TIM_IC_ConfigChannel+0x1a>
 8005594:	2302      	movs	r3, #2
 8005596:	e08a      	b.n	80056ae <HAL_TIM_IC_ConfigChannel+0x130>
 8005598:	68fb      	ldr	r3, [r7, #12]
 800559a:	2201      	movs	r2, #1
 800559c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80055a0:	68fb      	ldr	r3, [r7, #12]
 80055a2:	2202      	movs	r2, #2
 80055a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  if (Channel == TIM_CHANNEL_1)
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	d11b      	bne.n	80055e6 <HAL_TIM_IC_ConfigChannel+0x68>
  {
    /* TI1 Configuration */
    TIM_TI1_SetConfig(htim->Instance,
 80055ae:	68fb      	ldr	r3, [r7, #12]
 80055b0:	6818      	ldr	r0, [r3, #0]
 80055b2:	68bb      	ldr	r3, [r7, #8]
 80055b4:	6819      	ldr	r1, [r3, #0]
 80055b6:	68bb      	ldr	r3, [r7, #8]
 80055b8:	685a      	ldr	r2, [r3, #4]
 80055ba:	68bb      	ldr	r3, [r7, #8]
 80055bc:	68db      	ldr	r3, [r3, #12]
 80055be:	f000 fcc1 	bl	8005f44 <TIM_TI1_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC1PSC Bits */
    htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 80055c2:	68fb      	ldr	r3, [r7, #12]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	699a      	ldr	r2, [r3, #24]
 80055c8:	68fb      	ldr	r3, [r7, #12]
 80055ca:	681b      	ldr	r3, [r3, #0]
 80055cc:	f022 020c 	bic.w	r2, r2, #12
 80055d0:	619a      	str	r2, [r3, #24]

    /* Set the IC1PSC value */
    htim->Instance->CCMR1 |= sConfig->ICPrescaler;
 80055d2:	68fb      	ldr	r3, [r7, #12]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	6999      	ldr	r1, [r3, #24]
 80055d8:	68bb      	ldr	r3, [r7, #8]
 80055da:	689a      	ldr	r2, [r3, #8]
 80055dc:	68fb      	ldr	r3, [r7, #12]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	430a      	orrs	r2, r1
 80055e2:	619a      	str	r2, [r3, #24]
 80055e4:	e05a      	b.n	800569c <HAL_TIM_IC_ConfigChannel+0x11e>
  }
  else if (Channel == TIM_CHANNEL_2)
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	2b04      	cmp	r3, #4
 80055ea:	d11c      	bne.n	8005626 <HAL_TIM_IC_ConfigChannel+0xa8>
  {
    /* TI2 Configuration */
    assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

    TIM_TI2_SetConfig(htim->Instance,
 80055ec:	68fb      	ldr	r3, [r7, #12]
 80055ee:	6818      	ldr	r0, [r3, #0]
 80055f0:	68bb      	ldr	r3, [r7, #8]
 80055f2:	6819      	ldr	r1, [r3, #0]
 80055f4:	68bb      	ldr	r3, [r7, #8]
 80055f6:	685a      	ldr	r2, [r3, #4]
 80055f8:	68bb      	ldr	r3, [r7, #8]
 80055fa:	68db      	ldr	r3, [r3, #12]
 80055fc:	f000 fd45 	bl	800608a <TIM_TI2_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC2PSC Bits */
    htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 8005600:	68fb      	ldr	r3, [r7, #12]
 8005602:	681b      	ldr	r3, [r3, #0]
 8005604:	699a      	ldr	r2, [r3, #24]
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800560e:	619a      	str	r2, [r3, #24]

    /* Set the IC2PSC value */
    htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
 8005610:	68fb      	ldr	r3, [r7, #12]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	6999      	ldr	r1, [r3, #24]
 8005616:	68bb      	ldr	r3, [r7, #8]
 8005618:	689b      	ldr	r3, [r3, #8]
 800561a:	021a      	lsls	r2, r3, #8
 800561c:	68fb      	ldr	r3, [r7, #12]
 800561e:	681b      	ldr	r3, [r3, #0]
 8005620:	430a      	orrs	r2, r1
 8005622:	619a      	str	r2, [r3, #24]
 8005624:	e03a      	b.n	800569c <HAL_TIM_IC_ConfigChannel+0x11e>
  }
  else if (Channel == TIM_CHANNEL_3)
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	2b08      	cmp	r3, #8
 800562a:	d11b      	bne.n	8005664 <HAL_TIM_IC_ConfigChannel+0xe6>
  {
    /* TI3 Configuration */
    assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

    TIM_TI3_SetConfig(htim->Instance,
 800562c:	68fb      	ldr	r3, [r7, #12]
 800562e:	6818      	ldr	r0, [r3, #0]
 8005630:	68bb      	ldr	r3, [r7, #8]
 8005632:	6819      	ldr	r1, [r3, #0]
 8005634:	68bb      	ldr	r3, [r7, #8]
 8005636:	685a      	ldr	r2, [r3, #4]
 8005638:	68bb      	ldr	r3, [r7, #8]
 800563a:	68db      	ldr	r3, [r3, #12]
 800563c:	f000 fd92 	bl	8006164 <TIM_TI3_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC3PSC Bits */
    htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
 8005640:	68fb      	ldr	r3, [r7, #12]
 8005642:	681b      	ldr	r3, [r3, #0]
 8005644:	69da      	ldr	r2, [r3, #28]
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	f022 020c 	bic.w	r2, r2, #12
 800564e:	61da      	str	r2, [r3, #28]

    /* Set the IC3PSC value */
    htim->Instance->CCMR2 |= sConfig->ICPrescaler;
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	69d9      	ldr	r1, [r3, #28]
 8005656:	68bb      	ldr	r3, [r7, #8]
 8005658:	689a      	ldr	r2, [r3, #8]
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	430a      	orrs	r2, r1
 8005660:	61da      	str	r2, [r3, #28]
 8005662:	e01b      	b.n	800569c <HAL_TIM_IC_ConfigChannel+0x11e>
  else
  {
    /* TI4 Configuration */
    assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

    TIM_TI4_SetConfig(htim->Instance,
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	6818      	ldr	r0, [r3, #0]
 8005668:	68bb      	ldr	r3, [r7, #8]
 800566a:	6819      	ldr	r1, [r3, #0]
 800566c:	68bb      	ldr	r3, [r7, #8]
 800566e:	685a      	ldr	r2, [r3, #4]
 8005670:	68bb      	ldr	r3, [r7, #8]
 8005672:	68db      	ldr	r3, [r3, #12]
 8005674:	f000 fdb2 	bl	80061dc <TIM_TI4_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC4PSC Bits */
    htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
 8005678:	68fb      	ldr	r3, [r7, #12]
 800567a:	681b      	ldr	r3, [r3, #0]
 800567c:	69da      	ldr	r2, [r3, #28]
 800567e:	68fb      	ldr	r3, [r7, #12]
 8005680:	681b      	ldr	r3, [r3, #0]
 8005682:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8005686:	61da      	str	r2, [r3, #28]

    /* Set the IC4PSC value */
    htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
 8005688:	68fb      	ldr	r3, [r7, #12]
 800568a:	681b      	ldr	r3, [r3, #0]
 800568c:	69d9      	ldr	r1, [r3, #28]
 800568e:	68bb      	ldr	r3, [r7, #8]
 8005690:	689b      	ldr	r3, [r3, #8]
 8005692:	021a      	lsls	r2, r3, #8
 8005694:	68fb      	ldr	r3, [r7, #12]
 8005696:	681b      	ldr	r3, [r3, #0]
 8005698:	430a      	orrs	r2, r1
 800569a:	61da      	str	r2, [r3, #28]
  }

  htim->State = HAL_TIM_STATE_READY;
 800569c:	68fb      	ldr	r3, [r7, #12]
 800569e:	2201      	movs	r2, #1
 80056a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80056a4:	68fb      	ldr	r3, [r7, #12]
 80056a6:	2200      	movs	r2, #0
 80056a8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 80056ac:	2300      	movs	r3, #0
}
 80056ae:	4618      	mov	r0, r3
 80056b0:	3710      	adds	r7, #16
 80056b2:	46bd      	mov	sp, r7
 80056b4:	bd80      	pop	{r7, pc}
	...

080056b8 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 80056b8:	b580      	push	{r7, lr}
 80056ba:	b084      	sub	sp, #16
 80056bc:	af00      	add	r7, sp, #0
 80056be:	60f8      	str	r0, [r7, #12]
 80056c0:	60b9      	str	r1, [r7, #8]
 80056c2:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 80056c4:	68fb      	ldr	r3, [r7, #12]
 80056c6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80056ca:	2b01      	cmp	r3, #1
 80056cc:	d101      	bne.n	80056d2 <HAL_TIM_PWM_ConfigChannel+0x1a>
 80056ce:	2302      	movs	r3, #2
 80056d0:	e0b4      	b.n	800583c <HAL_TIM_PWM_ConfigChannel+0x184>
 80056d2:	68fb      	ldr	r3, [r7, #12]
 80056d4:	2201      	movs	r2, #1
 80056d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80056da:	68fb      	ldr	r3, [r7, #12]
 80056dc:	2202      	movs	r2, #2
 80056de:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  switch (Channel)
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	2b0c      	cmp	r3, #12
 80056e6:	f200 809f 	bhi.w	8005828 <HAL_TIM_PWM_ConfigChannel+0x170>
 80056ea:	a201      	add	r2, pc, #4	; (adr r2, 80056f0 <HAL_TIM_PWM_ConfigChannel+0x38>)
 80056ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80056f0:	08005725 	.word	0x08005725
 80056f4:	08005829 	.word	0x08005829
 80056f8:	08005829 	.word	0x08005829
 80056fc:	08005829 	.word	0x08005829
 8005700:	08005765 	.word	0x08005765
 8005704:	08005829 	.word	0x08005829
 8005708:	08005829 	.word	0x08005829
 800570c:	08005829 	.word	0x08005829
 8005710:	080057a7 	.word	0x080057a7
 8005714:	08005829 	.word	0x08005829
 8005718:	08005829 	.word	0x08005829
 800571c:	08005829 	.word	0x08005829
 8005720:	080057e7 	.word	0x080057e7
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8005724:	68fb      	ldr	r3, [r7, #12]
 8005726:	681b      	ldr	r3, [r3, #0]
 8005728:	68b9      	ldr	r1, [r7, #8]
 800572a:	4618      	mov	r0, r3
 800572c:	f000 fa5a 	bl	8005be4 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8005730:	68fb      	ldr	r3, [r7, #12]
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	699a      	ldr	r2, [r3, #24]
 8005736:	68fb      	ldr	r3, [r7, #12]
 8005738:	681b      	ldr	r3, [r3, #0]
 800573a:	f042 0208 	orr.w	r2, r2, #8
 800573e:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8005740:	68fb      	ldr	r3, [r7, #12]
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	699a      	ldr	r2, [r3, #24]
 8005746:	68fb      	ldr	r3, [r7, #12]
 8005748:	681b      	ldr	r3, [r3, #0]
 800574a:	f022 0204 	bic.w	r2, r2, #4
 800574e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8005750:	68fb      	ldr	r3, [r7, #12]
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	6999      	ldr	r1, [r3, #24]
 8005756:	68bb      	ldr	r3, [r7, #8]
 8005758:	691a      	ldr	r2, [r3, #16]
 800575a:	68fb      	ldr	r3, [r7, #12]
 800575c:	681b      	ldr	r3, [r3, #0]
 800575e:	430a      	orrs	r2, r1
 8005760:	619a      	str	r2, [r3, #24]
      break;
 8005762:	e062      	b.n	800582a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	68b9      	ldr	r1, [r7, #8]
 800576a:	4618      	mov	r0, r3
 800576c:	f000 faaa 	bl	8005cc4 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8005770:	68fb      	ldr	r3, [r7, #12]
 8005772:	681b      	ldr	r3, [r3, #0]
 8005774:	699a      	ldr	r2, [r3, #24]
 8005776:	68fb      	ldr	r3, [r7, #12]
 8005778:	681b      	ldr	r3, [r3, #0]
 800577a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800577e:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8005780:	68fb      	ldr	r3, [r7, #12]
 8005782:	681b      	ldr	r3, [r3, #0]
 8005784:	699a      	ldr	r2, [r3, #24]
 8005786:	68fb      	ldr	r3, [r7, #12]
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800578e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8005790:	68fb      	ldr	r3, [r7, #12]
 8005792:	681b      	ldr	r3, [r3, #0]
 8005794:	6999      	ldr	r1, [r3, #24]
 8005796:	68bb      	ldr	r3, [r7, #8]
 8005798:	691b      	ldr	r3, [r3, #16]
 800579a:	021a      	lsls	r2, r3, #8
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	681b      	ldr	r3, [r3, #0]
 80057a0:	430a      	orrs	r2, r1
 80057a2:	619a      	str	r2, [r3, #24]
      break;
 80057a4:	e041      	b.n	800582a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80057a6:	68fb      	ldr	r3, [r7, #12]
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	68b9      	ldr	r1, [r7, #8]
 80057ac:	4618      	mov	r0, r3
 80057ae:	f000 faff 	bl	8005db0 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	681b      	ldr	r3, [r3, #0]
 80057b6:	69da      	ldr	r2, [r3, #28]
 80057b8:	68fb      	ldr	r3, [r7, #12]
 80057ba:	681b      	ldr	r3, [r3, #0]
 80057bc:	f042 0208 	orr.w	r2, r2, #8
 80057c0:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80057c2:	68fb      	ldr	r3, [r7, #12]
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	69da      	ldr	r2, [r3, #28]
 80057c8:	68fb      	ldr	r3, [r7, #12]
 80057ca:	681b      	ldr	r3, [r3, #0]
 80057cc:	f022 0204 	bic.w	r2, r2, #4
 80057d0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80057d2:	68fb      	ldr	r3, [r7, #12]
 80057d4:	681b      	ldr	r3, [r3, #0]
 80057d6:	69d9      	ldr	r1, [r3, #28]
 80057d8:	68bb      	ldr	r3, [r7, #8]
 80057da:	691a      	ldr	r2, [r3, #16]
 80057dc:	68fb      	ldr	r3, [r7, #12]
 80057de:	681b      	ldr	r3, [r3, #0]
 80057e0:	430a      	orrs	r2, r1
 80057e2:	61da      	str	r2, [r3, #28]
      break;
 80057e4:	e021      	b.n	800582a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80057e6:	68fb      	ldr	r3, [r7, #12]
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	68b9      	ldr	r1, [r7, #8]
 80057ec:	4618      	mov	r0, r3
 80057ee:	f000 fb53 	bl	8005e98 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80057f2:	68fb      	ldr	r3, [r7, #12]
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	69da      	ldr	r2, [r3, #28]
 80057f8:	68fb      	ldr	r3, [r7, #12]
 80057fa:	681b      	ldr	r3, [r3, #0]
 80057fc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005800:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8005802:	68fb      	ldr	r3, [r7, #12]
 8005804:	681b      	ldr	r3, [r3, #0]
 8005806:	69da      	ldr	r2, [r3, #28]
 8005808:	68fb      	ldr	r3, [r7, #12]
 800580a:	681b      	ldr	r3, [r3, #0]
 800580c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005810:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	69d9      	ldr	r1, [r3, #28]
 8005818:	68bb      	ldr	r3, [r7, #8]
 800581a:	691b      	ldr	r3, [r3, #16]
 800581c:	021a      	lsls	r2, r3, #8
 800581e:	68fb      	ldr	r3, [r7, #12]
 8005820:	681b      	ldr	r3, [r3, #0]
 8005822:	430a      	orrs	r2, r1
 8005824:	61da      	str	r2, [r3, #28]
      break;
 8005826:	e000      	b.n	800582a <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      break;
 8005828:	bf00      	nop
  }

  htim->State = HAL_TIM_STATE_READY;
 800582a:	68fb      	ldr	r3, [r7, #12]
 800582c:	2201      	movs	r2, #1
 800582e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8005832:	68fb      	ldr	r3, [r7, #12]
 8005834:	2200      	movs	r2, #0
 8005836:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 800583a:	2300      	movs	r3, #0
}
 800583c:	4618      	mov	r0, r3
 800583e:	3710      	adds	r7, #16
 8005840:	46bd      	mov	sp, r7
 8005842:	bd80      	pop	{r7, pc}

08005844 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8005844:	b580      	push	{r7, lr}
 8005846:	b084      	sub	sp, #16
 8005848:	af00      	add	r7, sp, #0
 800584a:	6078      	str	r0, [r7, #4]
 800584c:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005854:	2b01      	cmp	r3, #1
 8005856:	d101      	bne.n	800585c <HAL_TIM_ConfigClockSource+0x18>
 8005858:	2302      	movs	r3, #2
 800585a:	e0b3      	b.n	80059c4 <HAL_TIM_ConfigClockSource+0x180>
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	2201      	movs	r2, #1
 8005860:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	2202      	movs	r2, #2
 8005868:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	689b      	ldr	r3, [r3, #8]
 8005872:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8005874:	68fb      	ldr	r3, [r7, #12]
 8005876:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800587a:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800587c:	68fb      	ldr	r3, [r7, #12]
 800587e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8005882:	60fb      	str	r3, [r7, #12]
  htim->Instance->SMCR = tmpsmcr;
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	681b      	ldr	r3, [r3, #0]
 8005888:	68fa      	ldr	r2, [r7, #12]
 800588a:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 800588c:	683b      	ldr	r3, [r7, #0]
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005894:	d03e      	beq.n	8005914 <HAL_TIM_ConfigClockSource+0xd0>
 8005896:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800589a:	f200 8087 	bhi.w	80059ac <HAL_TIM_ConfigClockSource+0x168>
 800589e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80058a2:	f000 8085 	beq.w	80059b0 <HAL_TIM_ConfigClockSource+0x16c>
 80058a6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80058aa:	d87f      	bhi.n	80059ac <HAL_TIM_ConfigClockSource+0x168>
 80058ac:	2b70      	cmp	r3, #112	; 0x70
 80058ae:	d01a      	beq.n	80058e6 <HAL_TIM_ConfigClockSource+0xa2>
 80058b0:	2b70      	cmp	r3, #112	; 0x70
 80058b2:	d87b      	bhi.n	80059ac <HAL_TIM_ConfigClockSource+0x168>
 80058b4:	2b60      	cmp	r3, #96	; 0x60
 80058b6:	d050      	beq.n	800595a <HAL_TIM_ConfigClockSource+0x116>
 80058b8:	2b60      	cmp	r3, #96	; 0x60
 80058ba:	d877      	bhi.n	80059ac <HAL_TIM_ConfigClockSource+0x168>
 80058bc:	2b50      	cmp	r3, #80	; 0x50
 80058be:	d03c      	beq.n	800593a <HAL_TIM_ConfigClockSource+0xf6>
 80058c0:	2b50      	cmp	r3, #80	; 0x50
 80058c2:	d873      	bhi.n	80059ac <HAL_TIM_ConfigClockSource+0x168>
 80058c4:	2b40      	cmp	r3, #64	; 0x40
 80058c6:	d058      	beq.n	800597a <HAL_TIM_ConfigClockSource+0x136>
 80058c8:	2b40      	cmp	r3, #64	; 0x40
 80058ca:	d86f      	bhi.n	80059ac <HAL_TIM_ConfigClockSource+0x168>
 80058cc:	2b30      	cmp	r3, #48	; 0x30
 80058ce:	d064      	beq.n	800599a <HAL_TIM_ConfigClockSource+0x156>
 80058d0:	2b30      	cmp	r3, #48	; 0x30
 80058d2:	d86b      	bhi.n	80059ac <HAL_TIM_ConfigClockSource+0x168>
 80058d4:	2b20      	cmp	r3, #32
 80058d6:	d060      	beq.n	800599a <HAL_TIM_ConfigClockSource+0x156>
 80058d8:	2b20      	cmp	r3, #32
 80058da:	d867      	bhi.n	80059ac <HAL_TIM_ConfigClockSource+0x168>
 80058dc:	2b00      	cmp	r3, #0
 80058de:	d05c      	beq.n	800599a <HAL_TIM_ConfigClockSource+0x156>
 80058e0:	2b10      	cmp	r3, #16
 80058e2:	d05a      	beq.n	800599a <HAL_TIM_ConfigClockSource+0x156>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
      break;
    }

    default:
      break;
 80058e4:	e062      	b.n	80059ac <HAL_TIM_ConfigClockSource+0x168>
      TIM_ETR_SetConfig(htim->Instance,
 80058e6:	687b      	ldr	r3, [r7, #4]
 80058e8:	6818      	ldr	r0, [r3, #0]
 80058ea:	683b      	ldr	r3, [r7, #0]
 80058ec:	6899      	ldr	r1, [r3, #8]
 80058ee:	683b      	ldr	r3, [r7, #0]
 80058f0:	685a      	ldr	r2, [r3, #4]
 80058f2:	683b      	ldr	r3, [r7, #0]
 80058f4:	68db      	ldr	r3, [r3, #12]
 80058f6:	f000 fcc9 	bl	800628c <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 80058fa:	687b      	ldr	r3, [r7, #4]
 80058fc:	681b      	ldr	r3, [r3, #0]
 80058fe:	689b      	ldr	r3, [r3, #8]
 8005900:	60fb      	str	r3, [r7, #12]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8005902:	68fb      	ldr	r3, [r7, #12]
 8005904:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8005908:	60fb      	str	r3, [r7, #12]
      htim->Instance->SMCR = tmpsmcr;
 800590a:	687b      	ldr	r3, [r7, #4]
 800590c:	681b      	ldr	r3, [r3, #0]
 800590e:	68fa      	ldr	r2, [r7, #12]
 8005910:	609a      	str	r2, [r3, #8]
      break;
 8005912:	e04e      	b.n	80059b2 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_ETR_SetConfig(htim->Instance,
 8005914:	687b      	ldr	r3, [r7, #4]
 8005916:	6818      	ldr	r0, [r3, #0]
 8005918:	683b      	ldr	r3, [r7, #0]
 800591a:	6899      	ldr	r1, [r3, #8]
 800591c:	683b      	ldr	r3, [r7, #0]
 800591e:	685a      	ldr	r2, [r3, #4]
 8005920:	683b      	ldr	r3, [r7, #0]
 8005922:	68db      	ldr	r3, [r3, #12]
 8005924:	f000 fcb2 	bl	800628c <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	681b      	ldr	r3, [r3, #0]
 800592c:	689a      	ldr	r2, [r3, #8]
 800592e:	687b      	ldr	r3, [r7, #4]
 8005930:	681b      	ldr	r3, [r3, #0]
 8005932:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005936:	609a      	str	r2, [r3, #8]
      break;
 8005938:	e03b      	b.n	80059b2 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	6818      	ldr	r0, [r3, #0]
 800593e:	683b      	ldr	r3, [r7, #0]
 8005940:	6859      	ldr	r1, [r3, #4]
 8005942:	683b      	ldr	r3, [r7, #0]
 8005944:	68db      	ldr	r3, [r3, #12]
 8005946:	461a      	mov	r2, r3
 8005948:	f000 fb70 	bl	800602c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 800594c:	687b      	ldr	r3, [r7, #4]
 800594e:	681b      	ldr	r3, [r3, #0]
 8005950:	2150      	movs	r1, #80	; 0x50
 8005952:	4618      	mov	r0, r3
 8005954:	f000 fc7f 	bl	8006256 <TIM_ITRx_SetConfig>
      break;
 8005958:	e02b      	b.n	80059b2 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_TI2_ConfigInputStage(htim->Instance,
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	6818      	ldr	r0, [r3, #0]
 800595e:	683b      	ldr	r3, [r7, #0]
 8005960:	6859      	ldr	r1, [r3, #4]
 8005962:	683b      	ldr	r3, [r7, #0]
 8005964:	68db      	ldr	r3, [r3, #12]
 8005966:	461a      	mov	r2, r3
 8005968:	f000 fbcc 	bl	8006104 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	681b      	ldr	r3, [r3, #0]
 8005970:	2160      	movs	r1, #96	; 0x60
 8005972:	4618      	mov	r0, r3
 8005974:	f000 fc6f 	bl	8006256 <TIM_ITRx_SetConfig>
      break;
 8005978:	e01b      	b.n	80059b2 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	6818      	ldr	r0, [r3, #0]
 800597e:	683b      	ldr	r3, [r7, #0]
 8005980:	6859      	ldr	r1, [r3, #4]
 8005982:	683b      	ldr	r3, [r7, #0]
 8005984:	68db      	ldr	r3, [r3, #12]
 8005986:	461a      	mov	r2, r3
 8005988:	f000 fb50 	bl	800602c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 800598c:	687b      	ldr	r3, [r7, #4]
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	2140      	movs	r1, #64	; 0x40
 8005992:	4618      	mov	r0, r3
 8005994:	f000 fc5f 	bl	8006256 <TIM_ITRx_SetConfig>
      break;
 8005998:	e00b      	b.n	80059b2 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	681a      	ldr	r2, [r3, #0]
 800599e:	683b      	ldr	r3, [r7, #0]
 80059a0:	681b      	ldr	r3, [r3, #0]
 80059a2:	4619      	mov	r1, r3
 80059a4:	4610      	mov	r0, r2
 80059a6:	f000 fc56 	bl	8006256 <TIM_ITRx_SetConfig>
      break;
 80059aa:	e002      	b.n	80059b2 <HAL_TIM_ConfigClockSource+0x16e>
      break;
 80059ac:	bf00      	nop
 80059ae:	e000      	b.n	80059b2 <HAL_TIM_ConfigClockSource+0x16e>
      break;
 80059b0:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80059b2:	687b      	ldr	r3, [r7, #4]
 80059b4:	2201      	movs	r2, #1
 80059b6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	2200      	movs	r2, #0
 80059be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 80059c2:	2300      	movs	r3, #0
}
 80059c4:	4618      	mov	r0, r3
 80059c6:	3710      	adds	r7, #16
 80059c8:	46bd      	mov	sp, r7
 80059ca:	bd80      	pop	{r7, pc}

080059cc <HAL_TIM_ReadCapturedValue>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval Captured value
  */
uint32_t HAL_TIM_ReadCapturedValue(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 80059cc:	b480      	push	{r7}
 80059ce:	b085      	sub	sp, #20
 80059d0:	af00      	add	r7, sp, #0
 80059d2:	6078      	str	r0, [r7, #4]
 80059d4:	6039      	str	r1, [r7, #0]
  uint32_t tmpreg = 0U;
 80059d6:	2300      	movs	r3, #0
 80059d8:	60fb      	str	r3, [r7, #12]

  switch (Channel)
 80059da:	683b      	ldr	r3, [r7, #0]
 80059dc:	2b0c      	cmp	r3, #12
 80059de:	d831      	bhi.n	8005a44 <HAL_TIM_ReadCapturedValue+0x78>
 80059e0:	a201      	add	r2, pc, #4	; (adr r2, 80059e8 <HAL_TIM_ReadCapturedValue+0x1c>)
 80059e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80059e6:	bf00      	nop
 80059e8:	08005a1d 	.word	0x08005a1d
 80059ec:	08005a45 	.word	0x08005a45
 80059f0:	08005a45 	.word	0x08005a45
 80059f4:	08005a45 	.word	0x08005a45
 80059f8:	08005a27 	.word	0x08005a27
 80059fc:	08005a45 	.word	0x08005a45
 8005a00:	08005a45 	.word	0x08005a45
 8005a04:	08005a45 	.word	0x08005a45
 8005a08:	08005a31 	.word	0x08005a31
 8005a0c:	08005a45 	.word	0x08005a45
 8005a10:	08005a45 	.word	0x08005a45
 8005a14:	08005a45 	.word	0x08005a45
 8005a18:	08005a3b 	.word	0x08005a3b
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Return the capture 1 value */
      tmpreg =  htim->Instance->CCR1;
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005a22:	60fb      	str	r3, [r7, #12]

      break;
 8005a24:	e00f      	b.n	8005a46 <HAL_TIM_ReadCapturedValue+0x7a>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Return the capture 2 value */
      tmpreg =   htim->Instance->CCR2;
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	681b      	ldr	r3, [r3, #0]
 8005a2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005a2c:	60fb      	str	r3, [r7, #12]

      break;
 8005a2e:	e00a      	b.n	8005a46 <HAL_TIM_ReadCapturedValue+0x7a>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Return the capture 3 value */
      tmpreg =   htim->Instance->CCR3;
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005a36:	60fb      	str	r3, [r7, #12]

      break;
 8005a38:	e005      	b.n	8005a46 <HAL_TIM_ReadCapturedValue+0x7a>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Return the capture 4 value */
      tmpreg =   htim->Instance->CCR4;
 8005a3a:	687b      	ldr	r3, [r7, #4]
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a40:	60fb      	str	r3, [r7, #12]

      break;
 8005a42:	e000      	b.n	8005a46 <HAL_TIM_ReadCapturedValue+0x7a>
    }

    default:
      break;
 8005a44:	bf00      	nop
  }

  return tmpreg;
 8005a46:	68fb      	ldr	r3, [r7, #12]
}
 8005a48:	4618      	mov	r0, r3
 8005a4a:	3714      	adds	r7, #20
 8005a4c:	46bd      	mov	sp, r7
 8005a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a52:	4770      	bx	lr

08005a54 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8005a54:	b480      	push	{r7}
 8005a56:	b083      	sub	sp, #12
 8005a58:	af00      	add	r7, sp, #0
 8005a5a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8005a5c:	bf00      	nop
 8005a5e:	370c      	adds	r7, #12
 8005a60:	46bd      	mov	sp, r7
 8005a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a66:	4770      	bx	lr

08005a68 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8005a68:	b480      	push	{r7}
 8005a6a:	b083      	sub	sp, #12
 8005a6c:	af00      	add	r7, sp, #0
 8005a6e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8005a70:	bf00      	nop
 8005a72:	370c      	adds	r7, #12
 8005a74:	46bd      	mov	sp, r7
 8005a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a7a:	4770      	bx	lr

08005a7c <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8005a7c:	b480      	push	{r7}
 8005a7e:	b083      	sub	sp, #12
 8005a80:	af00      	add	r7, sp, #0
 8005a82:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8005a84:	bf00      	nop
 8005a86:	370c      	adds	r7, #12
 8005a88:	46bd      	mov	sp, r7
 8005a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a8e:	4770      	bx	lr

08005a90 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 8005a90:	b480      	push	{r7}
 8005a92:	b083      	sub	sp, #12
 8005a94:	af00      	add	r7, sp, #0
 8005a96:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8005a98:	bf00      	nop
 8005a9a:	370c      	adds	r7, #12
 8005a9c:	46bd      	mov	sp, r7
 8005a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aa2:	4770      	bx	lr

08005aa4 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 8005aa4:	b480      	push	{r7}
 8005aa6:	b085      	sub	sp, #20
 8005aa8:	af00      	add	r7, sp, #0
 8005aaa:	6078      	str	r0, [r7, #4]
 8005aac:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	4a40      	ldr	r2, [pc, #256]	; (8005bb8 <TIM_Base_SetConfig+0x114>)
 8005ab8:	4293      	cmp	r3, r2
 8005aba:	d013      	beq.n	8005ae4 <TIM_Base_SetConfig+0x40>
 8005abc:	687b      	ldr	r3, [r7, #4]
 8005abe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005ac2:	d00f      	beq.n	8005ae4 <TIM_Base_SetConfig+0x40>
 8005ac4:	687b      	ldr	r3, [r7, #4]
 8005ac6:	4a3d      	ldr	r2, [pc, #244]	; (8005bbc <TIM_Base_SetConfig+0x118>)
 8005ac8:	4293      	cmp	r3, r2
 8005aca:	d00b      	beq.n	8005ae4 <TIM_Base_SetConfig+0x40>
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	4a3c      	ldr	r2, [pc, #240]	; (8005bc0 <TIM_Base_SetConfig+0x11c>)
 8005ad0:	4293      	cmp	r3, r2
 8005ad2:	d007      	beq.n	8005ae4 <TIM_Base_SetConfig+0x40>
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	4a3b      	ldr	r2, [pc, #236]	; (8005bc4 <TIM_Base_SetConfig+0x120>)
 8005ad8:	4293      	cmp	r3, r2
 8005ada:	d003      	beq.n	8005ae4 <TIM_Base_SetConfig+0x40>
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	4a3a      	ldr	r2, [pc, #232]	; (8005bc8 <TIM_Base_SetConfig+0x124>)
 8005ae0:	4293      	cmp	r3, r2
 8005ae2:	d108      	bne.n	8005af6 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8005ae4:	68fb      	ldr	r3, [r7, #12]
 8005ae6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005aea:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8005aec:	683b      	ldr	r3, [r7, #0]
 8005aee:	685b      	ldr	r3, [r3, #4]
 8005af0:	68fa      	ldr	r2, [r7, #12]
 8005af2:	4313      	orrs	r3, r2
 8005af4:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	4a2f      	ldr	r2, [pc, #188]	; (8005bb8 <TIM_Base_SetConfig+0x114>)
 8005afa:	4293      	cmp	r3, r2
 8005afc:	d02b      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005afe:	687b      	ldr	r3, [r7, #4]
 8005b00:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005b04:	d027      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	4a2c      	ldr	r2, [pc, #176]	; (8005bbc <TIM_Base_SetConfig+0x118>)
 8005b0a:	4293      	cmp	r3, r2
 8005b0c:	d023      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b0e:	687b      	ldr	r3, [r7, #4]
 8005b10:	4a2b      	ldr	r2, [pc, #172]	; (8005bc0 <TIM_Base_SetConfig+0x11c>)
 8005b12:	4293      	cmp	r3, r2
 8005b14:	d01f      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b16:	687b      	ldr	r3, [r7, #4]
 8005b18:	4a2a      	ldr	r2, [pc, #168]	; (8005bc4 <TIM_Base_SetConfig+0x120>)
 8005b1a:	4293      	cmp	r3, r2
 8005b1c:	d01b      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	4a29      	ldr	r2, [pc, #164]	; (8005bc8 <TIM_Base_SetConfig+0x124>)
 8005b22:	4293      	cmp	r3, r2
 8005b24:	d017      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	4a28      	ldr	r2, [pc, #160]	; (8005bcc <TIM_Base_SetConfig+0x128>)
 8005b2a:	4293      	cmp	r3, r2
 8005b2c:	d013      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	4a27      	ldr	r2, [pc, #156]	; (8005bd0 <TIM_Base_SetConfig+0x12c>)
 8005b32:	4293      	cmp	r3, r2
 8005b34:	d00f      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	4a26      	ldr	r2, [pc, #152]	; (8005bd4 <TIM_Base_SetConfig+0x130>)
 8005b3a:	4293      	cmp	r3, r2
 8005b3c:	d00b      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b3e:	687b      	ldr	r3, [r7, #4]
 8005b40:	4a25      	ldr	r2, [pc, #148]	; (8005bd8 <TIM_Base_SetConfig+0x134>)
 8005b42:	4293      	cmp	r3, r2
 8005b44:	d007      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	4a24      	ldr	r2, [pc, #144]	; (8005bdc <TIM_Base_SetConfig+0x138>)
 8005b4a:	4293      	cmp	r3, r2
 8005b4c:	d003      	beq.n	8005b56 <TIM_Base_SetConfig+0xb2>
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	4a23      	ldr	r2, [pc, #140]	; (8005be0 <TIM_Base_SetConfig+0x13c>)
 8005b52:	4293      	cmp	r3, r2
 8005b54:	d108      	bne.n	8005b68 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8005b56:	68fb      	ldr	r3, [r7, #12]
 8005b58:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005b5c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8005b5e:	683b      	ldr	r3, [r7, #0]
 8005b60:	68db      	ldr	r3, [r3, #12]
 8005b62:	68fa      	ldr	r2, [r7, #12]
 8005b64:	4313      	orrs	r3, r2
 8005b66:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8005b68:	68fb      	ldr	r3, [r7, #12]
 8005b6a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8005b6e:	683b      	ldr	r3, [r7, #0]
 8005b70:	695b      	ldr	r3, [r3, #20]
 8005b72:	4313      	orrs	r3, r2
 8005b74:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	68fa      	ldr	r2, [r7, #12]
 8005b7a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8005b7c:	683b      	ldr	r3, [r7, #0]
 8005b7e:	689a      	ldr	r2, [r3, #8]
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8005b84:	683b      	ldr	r3, [r7, #0]
 8005b86:	681a      	ldr	r2, [r3, #0]
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8005b8c:	687b      	ldr	r3, [r7, #4]
 8005b8e:	4a0a      	ldr	r2, [pc, #40]	; (8005bb8 <TIM_Base_SetConfig+0x114>)
 8005b90:	4293      	cmp	r3, r2
 8005b92:	d003      	beq.n	8005b9c <TIM_Base_SetConfig+0xf8>
 8005b94:	687b      	ldr	r3, [r7, #4]
 8005b96:	4a0c      	ldr	r2, [pc, #48]	; (8005bc8 <TIM_Base_SetConfig+0x124>)
 8005b98:	4293      	cmp	r3, r2
 8005b9a:	d103      	bne.n	8005ba4 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8005b9c:	683b      	ldr	r3, [r7, #0]
 8005b9e:	691a      	ldr	r2, [r3, #16]
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8005ba4:	687b      	ldr	r3, [r7, #4]
 8005ba6:	2201      	movs	r2, #1
 8005ba8:	615a      	str	r2, [r3, #20]
}
 8005baa:	bf00      	nop
 8005bac:	3714      	adds	r7, #20
 8005bae:	46bd      	mov	sp, r7
 8005bb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bb4:	4770      	bx	lr
 8005bb6:	bf00      	nop
 8005bb8:	40010000 	.word	0x40010000
 8005bbc:	40000400 	.word	0x40000400
 8005bc0:	40000800 	.word	0x40000800
 8005bc4:	40000c00 	.word	0x40000c00
 8005bc8:	40010400 	.word	0x40010400
 8005bcc:	40014000 	.word	0x40014000
 8005bd0:	40014400 	.word	0x40014400
 8005bd4:	40014800 	.word	0x40014800
 8005bd8:	40001800 	.word	0x40001800
 8005bdc:	40001c00 	.word	0x40001c00
 8005be0:	40002000 	.word	0x40002000

08005be4 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8005be4:	b480      	push	{r7}
 8005be6:	b087      	sub	sp, #28
 8005be8:	af00      	add	r7, sp, #0
 8005bea:	6078      	str	r0, [r7, #4]
 8005bec:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	6a1b      	ldr	r3, [r3, #32]
 8005bf2:	f023 0201 	bic.w	r2, r3, #1
 8005bf6:	687b      	ldr	r3, [r7, #4]
 8005bf8:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005bfa:	687b      	ldr	r3, [r7, #4]
 8005bfc:	6a1b      	ldr	r3, [r3, #32]
 8005bfe:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	685b      	ldr	r3, [r3, #4]
 8005c04:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	699b      	ldr	r3, [r3, #24]
 8005c0a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8005c0c:	68fb      	ldr	r3, [r7, #12]
 8005c0e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005c12:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	f023 0303 	bic.w	r3, r3, #3
 8005c1a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8005c1c:	683b      	ldr	r3, [r7, #0]
 8005c1e:	681b      	ldr	r3, [r3, #0]
 8005c20:	68fa      	ldr	r2, [r7, #12]
 8005c22:	4313      	orrs	r3, r2
 8005c24:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8005c26:	697b      	ldr	r3, [r7, #20]
 8005c28:	f023 0302 	bic.w	r3, r3, #2
 8005c2c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8005c2e:	683b      	ldr	r3, [r7, #0]
 8005c30:	689b      	ldr	r3, [r3, #8]
 8005c32:	697a      	ldr	r2, [r7, #20]
 8005c34:	4313      	orrs	r3, r2
 8005c36:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	4a20      	ldr	r2, [pc, #128]	; (8005cbc <TIM_OC1_SetConfig+0xd8>)
 8005c3c:	4293      	cmp	r3, r2
 8005c3e:	d003      	beq.n	8005c48 <TIM_OC1_SetConfig+0x64>
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	4a1f      	ldr	r2, [pc, #124]	; (8005cc0 <TIM_OC1_SetConfig+0xdc>)
 8005c44:	4293      	cmp	r3, r2
 8005c46:	d10c      	bne.n	8005c62 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8005c48:	697b      	ldr	r3, [r7, #20]
 8005c4a:	f023 0308 	bic.w	r3, r3, #8
 8005c4e:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8005c50:	683b      	ldr	r3, [r7, #0]
 8005c52:	68db      	ldr	r3, [r3, #12]
 8005c54:	697a      	ldr	r2, [r7, #20]
 8005c56:	4313      	orrs	r3, r2
 8005c58:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8005c5a:	697b      	ldr	r3, [r7, #20]
 8005c5c:	f023 0304 	bic.w	r3, r3, #4
 8005c60:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	4a15      	ldr	r2, [pc, #84]	; (8005cbc <TIM_OC1_SetConfig+0xd8>)
 8005c66:	4293      	cmp	r3, r2
 8005c68:	d003      	beq.n	8005c72 <TIM_OC1_SetConfig+0x8e>
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	4a14      	ldr	r2, [pc, #80]	; (8005cc0 <TIM_OC1_SetConfig+0xdc>)
 8005c6e:	4293      	cmp	r3, r2
 8005c70:	d111      	bne.n	8005c96 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8005c72:	693b      	ldr	r3, [r7, #16]
 8005c74:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005c78:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8005c7a:	693b      	ldr	r3, [r7, #16]
 8005c7c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005c80:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8005c82:	683b      	ldr	r3, [r7, #0]
 8005c84:	695b      	ldr	r3, [r3, #20]
 8005c86:	693a      	ldr	r2, [r7, #16]
 8005c88:	4313      	orrs	r3, r2
 8005c8a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8005c8c:	683b      	ldr	r3, [r7, #0]
 8005c8e:	699b      	ldr	r3, [r3, #24]
 8005c90:	693a      	ldr	r2, [r7, #16]
 8005c92:	4313      	orrs	r3, r2
 8005c94:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	693a      	ldr	r2, [r7, #16]
 8005c9a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	68fa      	ldr	r2, [r7, #12]
 8005ca0:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8005ca2:	683b      	ldr	r3, [r7, #0]
 8005ca4:	685a      	ldr	r2, [r3, #4]
 8005ca6:	687b      	ldr	r3, [r7, #4]
 8005ca8:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	697a      	ldr	r2, [r7, #20]
 8005cae:	621a      	str	r2, [r3, #32]
}
 8005cb0:	bf00      	nop
 8005cb2:	371c      	adds	r7, #28
 8005cb4:	46bd      	mov	sp, r7
 8005cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cba:	4770      	bx	lr
 8005cbc:	40010000 	.word	0x40010000
 8005cc0:	40010400 	.word	0x40010400

08005cc4 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8005cc4:	b480      	push	{r7}
 8005cc6:	b087      	sub	sp, #28
 8005cc8:	af00      	add	r7, sp, #0
 8005cca:	6078      	str	r0, [r7, #4]
 8005ccc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	6a1b      	ldr	r3, [r3, #32]
 8005cd2:	f023 0210 	bic.w	r2, r3, #16
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	6a1b      	ldr	r3, [r3, #32]
 8005cde:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	685b      	ldr	r3, [r3, #4]
 8005ce4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8005ce6:	687b      	ldr	r3, [r7, #4]
 8005ce8:	699b      	ldr	r3, [r3, #24]
 8005cea:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8005cec:	68fb      	ldr	r3, [r7, #12]
 8005cee:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005cf2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8005cf4:	68fb      	ldr	r3, [r7, #12]
 8005cf6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005cfa:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8005cfc:	683b      	ldr	r3, [r7, #0]
 8005cfe:	681b      	ldr	r3, [r3, #0]
 8005d00:	021b      	lsls	r3, r3, #8
 8005d02:	68fa      	ldr	r2, [r7, #12]
 8005d04:	4313      	orrs	r3, r2
 8005d06:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8005d08:	697b      	ldr	r3, [r7, #20]
 8005d0a:	f023 0320 	bic.w	r3, r3, #32
 8005d0e:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8005d10:	683b      	ldr	r3, [r7, #0]
 8005d12:	689b      	ldr	r3, [r3, #8]
 8005d14:	011b      	lsls	r3, r3, #4
 8005d16:	697a      	ldr	r2, [r7, #20]
 8005d18:	4313      	orrs	r3, r2
 8005d1a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	4a22      	ldr	r2, [pc, #136]	; (8005da8 <TIM_OC2_SetConfig+0xe4>)
 8005d20:	4293      	cmp	r3, r2
 8005d22:	d003      	beq.n	8005d2c <TIM_OC2_SetConfig+0x68>
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	4a21      	ldr	r2, [pc, #132]	; (8005dac <TIM_OC2_SetConfig+0xe8>)
 8005d28:	4293      	cmp	r3, r2
 8005d2a:	d10d      	bne.n	8005d48 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8005d2c:	697b      	ldr	r3, [r7, #20]
 8005d2e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005d32:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8005d34:	683b      	ldr	r3, [r7, #0]
 8005d36:	68db      	ldr	r3, [r3, #12]
 8005d38:	011b      	lsls	r3, r3, #4
 8005d3a:	697a      	ldr	r2, [r7, #20]
 8005d3c:	4313      	orrs	r3, r2
 8005d3e:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8005d40:	697b      	ldr	r3, [r7, #20]
 8005d42:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005d46:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005d48:	687b      	ldr	r3, [r7, #4]
 8005d4a:	4a17      	ldr	r2, [pc, #92]	; (8005da8 <TIM_OC2_SetConfig+0xe4>)
 8005d4c:	4293      	cmp	r3, r2
 8005d4e:	d003      	beq.n	8005d58 <TIM_OC2_SetConfig+0x94>
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	4a16      	ldr	r2, [pc, #88]	; (8005dac <TIM_OC2_SetConfig+0xe8>)
 8005d54:	4293      	cmp	r3, r2
 8005d56:	d113      	bne.n	8005d80 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8005d58:	693b      	ldr	r3, [r7, #16]
 8005d5a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005d5e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8005d60:	693b      	ldr	r3, [r7, #16]
 8005d62:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005d66:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8005d68:	683b      	ldr	r3, [r7, #0]
 8005d6a:	695b      	ldr	r3, [r3, #20]
 8005d6c:	009b      	lsls	r3, r3, #2
 8005d6e:	693a      	ldr	r2, [r7, #16]
 8005d70:	4313      	orrs	r3, r2
 8005d72:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8005d74:	683b      	ldr	r3, [r7, #0]
 8005d76:	699b      	ldr	r3, [r3, #24]
 8005d78:	009b      	lsls	r3, r3, #2
 8005d7a:	693a      	ldr	r2, [r7, #16]
 8005d7c:	4313      	orrs	r3, r2
 8005d7e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	693a      	ldr	r2, [r7, #16]
 8005d84:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	68fa      	ldr	r2, [r7, #12]
 8005d8a:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8005d8c:	683b      	ldr	r3, [r7, #0]
 8005d8e:	685a      	ldr	r2, [r3, #4]
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	697a      	ldr	r2, [r7, #20]
 8005d98:	621a      	str	r2, [r3, #32]
}
 8005d9a:	bf00      	nop
 8005d9c:	371c      	adds	r7, #28
 8005d9e:	46bd      	mov	sp, r7
 8005da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005da4:	4770      	bx	lr
 8005da6:	bf00      	nop
 8005da8:	40010000 	.word	0x40010000
 8005dac:	40010400 	.word	0x40010400

08005db0 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8005db0:	b480      	push	{r7}
 8005db2:	b087      	sub	sp, #28
 8005db4:	af00      	add	r7, sp, #0
 8005db6:	6078      	str	r0, [r7, #4]
 8005db8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8005dba:	687b      	ldr	r3, [r7, #4]
 8005dbc:	6a1b      	ldr	r3, [r3, #32]
 8005dbe:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8005dc2:	687b      	ldr	r3, [r7, #4]
 8005dc4:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005dc6:	687b      	ldr	r3, [r7, #4]
 8005dc8:	6a1b      	ldr	r3, [r3, #32]
 8005dca:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	685b      	ldr	r3, [r3, #4]
 8005dd0:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8005dd2:	687b      	ldr	r3, [r7, #4]
 8005dd4:	69db      	ldr	r3, [r3, #28]
 8005dd6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8005dd8:	68fb      	ldr	r3, [r7, #12]
 8005dda:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005dde:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8005de0:	68fb      	ldr	r3, [r7, #12]
 8005de2:	f023 0303 	bic.w	r3, r3, #3
 8005de6:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8005de8:	683b      	ldr	r3, [r7, #0]
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	68fa      	ldr	r2, [r7, #12]
 8005dee:	4313      	orrs	r3, r2
 8005df0:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8005df2:	697b      	ldr	r3, [r7, #20]
 8005df4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005df8:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8005dfa:	683b      	ldr	r3, [r7, #0]
 8005dfc:	689b      	ldr	r3, [r3, #8]
 8005dfe:	021b      	lsls	r3, r3, #8
 8005e00:	697a      	ldr	r2, [r7, #20]
 8005e02:	4313      	orrs	r3, r2
 8005e04:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	4a21      	ldr	r2, [pc, #132]	; (8005e90 <TIM_OC3_SetConfig+0xe0>)
 8005e0a:	4293      	cmp	r3, r2
 8005e0c:	d003      	beq.n	8005e16 <TIM_OC3_SetConfig+0x66>
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	4a20      	ldr	r2, [pc, #128]	; (8005e94 <TIM_OC3_SetConfig+0xe4>)
 8005e12:	4293      	cmp	r3, r2
 8005e14:	d10d      	bne.n	8005e32 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8005e16:	697b      	ldr	r3, [r7, #20]
 8005e18:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005e1c:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8005e1e:	683b      	ldr	r3, [r7, #0]
 8005e20:	68db      	ldr	r3, [r3, #12]
 8005e22:	021b      	lsls	r3, r3, #8
 8005e24:	697a      	ldr	r2, [r7, #20]
 8005e26:	4313      	orrs	r3, r2
 8005e28:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8005e2a:	697b      	ldr	r3, [r7, #20]
 8005e2c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005e30:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	4a16      	ldr	r2, [pc, #88]	; (8005e90 <TIM_OC3_SetConfig+0xe0>)
 8005e36:	4293      	cmp	r3, r2
 8005e38:	d003      	beq.n	8005e42 <TIM_OC3_SetConfig+0x92>
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	4a15      	ldr	r2, [pc, #84]	; (8005e94 <TIM_OC3_SetConfig+0xe4>)
 8005e3e:	4293      	cmp	r3, r2
 8005e40:	d113      	bne.n	8005e6a <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8005e42:	693b      	ldr	r3, [r7, #16]
 8005e44:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005e48:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8005e4a:	693b      	ldr	r3, [r7, #16]
 8005e4c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005e50:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8005e52:	683b      	ldr	r3, [r7, #0]
 8005e54:	695b      	ldr	r3, [r3, #20]
 8005e56:	011b      	lsls	r3, r3, #4
 8005e58:	693a      	ldr	r2, [r7, #16]
 8005e5a:	4313      	orrs	r3, r2
 8005e5c:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8005e5e:	683b      	ldr	r3, [r7, #0]
 8005e60:	699b      	ldr	r3, [r3, #24]
 8005e62:	011b      	lsls	r3, r3, #4
 8005e64:	693a      	ldr	r2, [r7, #16]
 8005e66:	4313      	orrs	r3, r2
 8005e68:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	693a      	ldr	r2, [r7, #16]
 8005e6e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	68fa      	ldr	r2, [r7, #12]
 8005e74:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8005e76:	683b      	ldr	r3, [r7, #0]
 8005e78:	685a      	ldr	r2, [r3, #4]
 8005e7a:	687b      	ldr	r3, [r7, #4]
 8005e7c:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005e7e:	687b      	ldr	r3, [r7, #4]
 8005e80:	697a      	ldr	r2, [r7, #20]
 8005e82:	621a      	str	r2, [r3, #32]
}
 8005e84:	bf00      	nop
 8005e86:	371c      	adds	r7, #28
 8005e88:	46bd      	mov	sp, r7
 8005e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e8e:	4770      	bx	lr
 8005e90:	40010000 	.word	0x40010000
 8005e94:	40010400 	.word	0x40010400

08005e98 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8005e98:	b480      	push	{r7}
 8005e9a:	b087      	sub	sp, #28
 8005e9c:	af00      	add	r7, sp, #0
 8005e9e:	6078      	str	r0, [r7, #4]
 8005ea0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	6a1b      	ldr	r3, [r3, #32]
 8005ea6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005eaa:	687b      	ldr	r3, [r7, #4]
 8005eac:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005eae:	687b      	ldr	r3, [r7, #4]
 8005eb0:	6a1b      	ldr	r3, [r3, #32]
 8005eb2:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	685b      	ldr	r3, [r3, #4]
 8005eb8:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8005eba:	687b      	ldr	r3, [r7, #4]
 8005ebc:	69db      	ldr	r3, [r3, #28]
 8005ebe:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005ec6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8005ec8:	68fb      	ldr	r3, [r7, #12]
 8005eca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005ece:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8005ed0:	683b      	ldr	r3, [r7, #0]
 8005ed2:	681b      	ldr	r3, [r3, #0]
 8005ed4:	021b      	lsls	r3, r3, #8
 8005ed6:	68fa      	ldr	r2, [r7, #12]
 8005ed8:	4313      	orrs	r3, r2
 8005eda:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8005edc:	693b      	ldr	r3, [r7, #16]
 8005ede:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005ee2:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8005ee4:	683b      	ldr	r3, [r7, #0]
 8005ee6:	689b      	ldr	r3, [r3, #8]
 8005ee8:	031b      	lsls	r3, r3, #12
 8005eea:	693a      	ldr	r2, [r7, #16]
 8005eec:	4313      	orrs	r3, r2
 8005eee:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005ef0:	687b      	ldr	r3, [r7, #4]
 8005ef2:	4a12      	ldr	r2, [pc, #72]	; (8005f3c <TIM_OC4_SetConfig+0xa4>)
 8005ef4:	4293      	cmp	r3, r2
 8005ef6:	d003      	beq.n	8005f00 <TIM_OC4_SetConfig+0x68>
 8005ef8:	687b      	ldr	r3, [r7, #4]
 8005efa:	4a11      	ldr	r2, [pc, #68]	; (8005f40 <TIM_OC4_SetConfig+0xa8>)
 8005efc:	4293      	cmp	r3, r2
 8005efe:	d109      	bne.n	8005f14 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8005f00:	697b      	ldr	r3, [r7, #20]
 8005f02:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005f06:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8005f08:	683b      	ldr	r3, [r7, #0]
 8005f0a:	695b      	ldr	r3, [r3, #20]
 8005f0c:	019b      	lsls	r3, r3, #6
 8005f0e:	697a      	ldr	r2, [r7, #20]
 8005f10:	4313      	orrs	r3, r2
 8005f12:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005f14:	687b      	ldr	r3, [r7, #4]
 8005f16:	697a      	ldr	r2, [r7, #20]
 8005f18:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	68fa      	ldr	r2, [r7, #12]
 8005f1e:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8005f20:	683b      	ldr	r3, [r7, #0]
 8005f22:	685a      	ldr	r2, [r3, #4]
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	693a      	ldr	r2, [r7, #16]
 8005f2c:	621a      	str	r2, [r3, #32]
}
 8005f2e:	bf00      	nop
 8005f30:	371c      	adds	r7, #28
 8005f32:	46bd      	mov	sp, r7
 8005f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f38:	4770      	bx	lr
 8005f3a:	bf00      	nop
 8005f3c:	40010000 	.word	0x40010000
 8005f40:	40010400 	.word	0x40010400

08005f44 <TIM_TI1_SetConfig>:
  *       (on channel2 path) is used as the input signal. Therefore CCMR1 must be
  *        protected against un-initialized filter and polarity values.
  */
void TIM_TI1_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                       uint32_t TIM_ICFilter)
{
 8005f44:	b480      	push	{r7}
 8005f46:	b087      	sub	sp, #28
 8005f48:	af00      	add	r7, sp, #0
 8005f4a:	60f8      	str	r0, [r7, #12]
 8005f4c:	60b9      	str	r1, [r7, #8]
 8005f4e:	607a      	str	r2, [r7, #4]
 8005f50:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8005f52:	68fb      	ldr	r3, [r7, #12]
 8005f54:	6a1b      	ldr	r3, [r3, #32]
 8005f56:	f023 0201 	bic.w	r2, r3, #1
 8005f5a:	68fb      	ldr	r3, [r7, #12]
 8005f5c:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8005f5e:	68fb      	ldr	r3, [r7, #12]
 8005f60:	699b      	ldr	r3, [r3, #24]
 8005f62:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8005f64:	68fb      	ldr	r3, [r7, #12]
 8005f66:	6a1b      	ldr	r3, [r3, #32]
 8005f68:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  if (IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 8005f6a:	68fb      	ldr	r3, [r7, #12]
 8005f6c:	4a28      	ldr	r2, [pc, #160]	; (8006010 <TIM_TI1_SetConfig+0xcc>)
 8005f6e:	4293      	cmp	r3, r2
 8005f70:	d01b      	beq.n	8005faa <TIM_TI1_SetConfig+0x66>
 8005f72:	68fb      	ldr	r3, [r7, #12]
 8005f74:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005f78:	d017      	beq.n	8005faa <TIM_TI1_SetConfig+0x66>
 8005f7a:	68fb      	ldr	r3, [r7, #12]
 8005f7c:	4a25      	ldr	r2, [pc, #148]	; (8006014 <TIM_TI1_SetConfig+0xd0>)
 8005f7e:	4293      	cmp	r3, r2
 8005f80:	d013      	beq.n	8005faa <TIM_TI1_SetConfig+0x66>
 8005f82:	68fb      	ldr	r3, [r7, #12]
 8005f84:	4a24      	ldr	r2, [pc, #144]	; (8006018 <TIM_TI1_SetConfig+0xd4>)
 8005f86:	4293      	cmp	r3, r2
 8005f88:	d00f      	beq.n	8005faa <TIM_TI1_SetConfig+0x66>
 8005f8a:	68fb      	ldr	r3, [r7, #12]
 8005f8c:	4a23      	ldr	r2, [pc, #140]	; (800601c <TIM_TI1_SetConfig+0xd8>)
 8005f8e:	4293      	cmp	r3, r2
 8005f90:	d00b      	beq.n	8005faa <TIM_TI1_SetConfig+0x66>
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	4a22      	ldr	r2, [pc, #136]	; (8006020 <TIM_TI1_SetConfig+0xdc>)
 8005f96:	4293      	cmp	r3, r2
 8005f98:	d007      	beq.n	8005faa <TIM_TI1_SetConfig+0x66>
 8005f9a:	68fb      	ldr	r3, [r7, #12]
 8005f9c:	4a21      	ldr	r2, [pc, #132]	; (8006024 <TIM_TI1_SetConfig+0xe0>)
 8005f9e:	4293      	cmp	r3, r2
 8005fa0:	d003      	beq.n	8005faa <TIM_TI1_SetConfig+0x66>
 8005fa2:	68fb      	ldr	r3, [r7, #12]
 8005fa4:	4a20      	ldr	r2, [pc, #128]	; (8006028 <TIM_TI1_SetConfig+0xe4>)
 8005fa6:	4293      	cmp	r3, r2
 8005fa8:	d101      	bne.n	8005fae <TIM_TI1_SetConfig+0x6a>
 8005faa:	2301      	movs	r3, #1
 8005fac:	e000      	b.n	8005fb0 <TIM_TI1_SetConfig+0x6c>
 8005fae:	2300      	movs	r3, #0
 8005fb0:	2b00      	cmp	r3, #0
 8005fb2:	d008      	beq.n	8005fc6 <TIM_TI1_SetConfig+0x82>
  {
    tmpccmr1 &= ~TIM_CCMR1_CC1S;
 8005fb4:	697b      	ldr	r3, [r7, #20]
 8005fb6:	f023 0303 	bic.w	r3, r3, #3
 8005fba:	617b      	str	r3, [r7, #20]
    tmpccmr1 |= TIM_ICSelection;
 8005fbc:	697a      	ldr	r2, [r7, #20]
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	4313      	orrs	r3, r2
 8005fc2:	617b      	str	r3, [r7, #20]
 8005fc4:	e003      	b.n	8005fce <TIM_TI1_SetConfig+0x8a>
  }
  else
  {
    tmpccmr1 |= TIM_CCMR1_CC1S_0;
 8005fc6:	697b      	ldr	r3, [r7, #20]
 8005fc8:	f043 0301 	orr.w	r3, r3, #1
 8005fcc:	617b      	str	r3, [r7, #20]
  }

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8005fce:	697b      	ldr	r3, [r7, #20]
 8005fd0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005fd4:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
 8005fd6:	683b      	ldr	r3, [r7, #0]
 8005fd8:	011b      	lsls	r3, r3, #4
 8005fda:	b2db      	uxtb	r3, r3
 8005fdc:	697a      	ldr	r2, [r7, #20]
 8005fde:	4313      	orrs	r3, r2
 8005fe0:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8005fe2:	693b      	ldr	r3, [r7, #16]
 8005fe4:	f023 030a 	bic.w	r3, r3, #10
 8005fe8:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
 8005fea:	68bb      	ldr	r3, [r7, #8]
 8005fec:	f003 030a 	and.w	r3, r3, #10
 8005ff0:	693a      	ldr	r2, [r7, #16]
 8005ff2:	4313      	orrs	r3, r2
 8005ff4:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8005ff6:	68fb      	ldr	r3, [r7, #12]
 8005ff8:	697a      	ldr	r2, [r7, #20]
 8005ffa:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	693a      	ldr	r2, [r7, #16]
 8006000:	621a      	str	r2, [r3, #32]
}
 8006002:	bf00      	nop
 8006004:	371c      	adds	r7, #28
 8006006:	46bd      	mov	sp, r7
 8006008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800600c:	4770      	bx	lr
 800600e:	bf00      	nop
 8006010:	40010000 	.word	0x40010000
 8006014:	40000400 	.word	0x40000400
 8006018:	40000800 	.word	0x40000800
 800601c:	40000c00 	.word	0x40000c00
 8006020:	40010400 	.word	0x40010400
 8006024:	40014000 	.word	0x40014000
 8006028:	40001800 	.word	0x40001800

0800602c <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 800602c:	b480      	push	{r7}
 800602e:	b087      	sub	sp, #28
 8006030:	af00      	add	r7, sp, #0
 8006032:	60f8      	str	r0, [r7, #12]
 8006034:	60b9      	str	r1, [r7, #8]
 8006036:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	6a1b      	ldr	r3, [r3, #32]
 800603c:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	6a1b      	ldr	r3, [r3, #32]
 8006042:	f023 0201 	bic.w	r2, r3, #1
 8006046:	68fb      	ldr	r3, [r7, #12]
 8006048:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800604a:	68fb      	ldr	r3, [r7, #12]
 800604c:	699b      	ldr	r3, [r3, #24]
 800604e:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8006050:	693b      	ldr	r3, [r7, #16]
 8006052:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006056:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	011b      	lsls	r3, r3, #4
 800605c:	693a      	ldr	r2, [r7, #16]
 800605e:	4313      	orrs	r3, r2
 8006060:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8006062:	697b      	ldr	r3, [r7, #20]
 8006064:	f023 030a 	bic.w	r3, r3, #10
 8006068:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 800606a:	697a      	ldr	r2, [r7, #20]
 800606c:	68bb      	ldr	r3, [r7, #8]
 800606e:	4313      	orrs	r3, r2
 8006070:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8006072:	68fb      	ldr	r3, [r7, #12]
 8006074:	693a      	ldr	r2, [r7, #16]
 8006076:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006078:	68fb      	ldr	r3, [r7, #12]
 800607a:	697a      	ldr	r2, [r7, #20]
 800607c:	621a      	str	r2, [r3, #32]
}
 800607e:	bf00      	nop
 8006080:	371c      	adds	r7, #28
 8006082:	46bd      	mov	sp, r7
 8006084:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006088:	4770      	bx	lr

0800608a <TIM_TI2_SetConfig>:
  *       (on channel1 path) is used as the input signal. Therefore CCMR1 must be
  *        protected against un-initialized filter and polarity values.
  */
static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                              uint32_t TIM_ICFilter)
{
 800608a:	b480      	push	{r7}
 800608c:	b087      	sub	sp, #28
 800608e:	af00      	add	r7, sp, #0
 8006090:	60f8      	str	r0, [r7, #12]
 8006092:	60b9      	str	r1, [r7, #8]
 8006094:	607a      	str	r2, [r7, #4]
 8006096:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006098:	68fb      	ldr	r3, [r7, #12]
 800609a:	6a1b      	ldr	r3, [r3, #32]
 800609c:	f023 0210 	bic.w	r2, r3, #16
 80060a0:	68fb      	ldr	r3, [r7, #12]
 80060a2:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80060a4:	68fb      	ldr	r3, [r7, #12]
 80060a6:	699b      	ldr	r3, [r3, #24]
 80060a8:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 80060aa:	68fb      	ldr	r3, [r7, #12]
 80060ac:	6a1b      	ldr	r3, [r3, #32]
 80060ae:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  tmpccmr1 &= ~TIM_CCMR1_CC2S;
 80060b0:	697b      	ldr	r3, [r7, #20]
 80060b2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80060b6:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICSelection << 8U);
 80060b8:	687b      	ldr	r3, [r7, #4]
 80060ba:	021b      	lsls	r3, r3, #8
 80060bc:	697a      	ldr	r2, [r7, #20]
 80060be:	4313      	orrs	r3, r2
 80060c0:	617b      	str	r3, [r7, #20]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80060c2:	697b      	ldr	r3, [r7, #20]
 80060c4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80060c8:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 80060ca:	683b      	ldr	r3, [r7, #0]
 80060cc:	031b      	lsls	r3, r3, #12
 80060ce:	b29b      	uxth	r3, r3
 80060d0:	697a      	ldr	r2, [r7, #20]
 80060d2:	4313      	orrs	r3, r2
 80060d4:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80060d6:	693b      	ldr	r3, [r7, #16]
 80060d8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80060dc:	613b      	str	r3, [r7, #16]
  tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 80060de:	68bb      	ldr	r3, [r7, #8]
 80060e0:	011b      	lsls	r3, r3, #4
 80060e2:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 80060e6:	693a      	ldr	r2, [r7, #16]
 80060e8:	4313      	orrs	r3, r2
 80060ea:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 80060ec:	68fb      	ldr	r3, [r7, #12]
 80060ee:	697a      	ldr	r2, [r7, #20]
 80060f0:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80060f2:	68fb      	ldr	r3, [r7, #12]
 80060f4:	693a      	ldr	r2, [r7, #16]
 80060f6:	621a      	str	r2, [r3, #32]
}
 80060f8:	bf00      	nop
 80060fa:	371c      	adds	r7, #28
 80060fc:	46bd      	mov	sp, r7
 80060fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006102:	4770      	bx	lr

08006104 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006104:	b480      	push	{r7}
 8006106:	b087      	sub	sp, #28
 8006108:	af00      	add	r7, sp, #0
 800610a:	60f8      	str	r0, [r7, #12]
 800610c:	60b9      	str	r1, [r7, #8]
 800610e:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006110:	68fb      	ldr	r3, [r7, #12]
 8006112:	6a1b      	ldr	r3, [r3, #32]
 8006114:	f023 0210 	bic.w	r2, r3, #16
 8006118:	68fb      	ldr	r3, [r7, #12]
 800611a:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800611c:	68fb      	ldr	r3, [r7, #12]
 800611e:	699b      	ldr	r3, [r3, #24]
 8006120:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006122:	68fb      	ldr	r3, [r7, #12]
 8006124:	6a1b      	ldr	r3, [r3, #32]
 8006126:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8006128:	697b      	ldr	r3, [r7, #20]
 800612a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800612e:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	031b      	lsls	r3, r3, #12
 8006134:	697a      	ldr	r2, [r7, #20]
 8006136:	4313      	orrs	r3, r2
 8006138:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800613a:	693b      	ldr	r3, [r7, #16]
 800613c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8006140:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8006142:	68bb      	ldr	r3, [r7, #8]
 8006144:	011b      	lsls	r3, r3, #4
 8006146:	693a      	ldr	r2, [r7, #16]
 8006148:	4313      	orrs	r3, r2
 800614a:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	697a      	ldr	r2, [r7, #20]
 8006150:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006152:	68fb      	ldr	r3, [r7, #12]
 8006154:	693a      	ldr	r2, [r7, #16]
 8006156:	621a      	str	r2, [r3, #32]
}
 8006158:	bf00      	nop
 800615a:	371c      	adds	r7, #28
 800615c:	46bd      	mov	sp, r7
 800615e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006162:	4770      	bx	lr

08006164 <TIM_TI3_SetConfig>:
  *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be
  *        protected against un-initialized filter and polarity values.
  */
static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                              uint32_t TIM_ICFilter)
{
 8006164:	b480      	push	{r7}
 8006166:	b087      	sub	sp, #28
 8006168:	af00      	add	r7, sp, #0
 800616a:	60f8      	str	r0, [r7, #12]
 800616c:	60b9      	str	r1, [r7, #8]
 800616e:	607a      	str	r2, [r7, #4]
 8006170:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr2;
  uint32_t tmpccer;

  /* Disable the Channel 3: Reset the CC3E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8006172:	68fb      	ldr	r3, [r7, #12]
 8006174:	6a1b      	ldr	r3, [r3, #32]
 8006176:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800617a:	68fb      	ldr	r3, [r7, #12]
 800617c:	621a      	str	r2, [r3, #32]
  tmpccmr2 = TIMx->CCMR2;
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	69db      	ldr	r3, [r3, #28]
 8006182:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006184:	68fb      	ldr	r3, [r7, #12]
 8006186:	6a1b      	ldr	r3, [r3, #32]
 8006188:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  tmpccmr2 &= ~TIM_CCMR2_CC3S;
 800618a:	697b      	ldr	r3, [r7, #20]
 800618c:	f023 0303 	bic.w	r3, r3, #3
 8006190:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= TIM_ICSelection;
 8006192:	697a      	ldr	r2, [r7, #20]
 8006194:	687b      	ldr	r3, [r7, #4]
 8006196:	4313      	orrs	r3, r2
 8006198:	617b      	str	r3, [r7, #20]

  /* Set the filter */
  tmpccmr2 &= ~TIM_CCMR2_IC3F;
 800619a:	697b      	ldr	r3, [r7, #20]
 800619c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80061a0:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 80061a2:	683b      	ldr	r3, [r7, #0]
 80061a4:	011b      	lsls	r3, r3, #4
 80061a6:	b2db      	uxtb	r3, r3
 80061a8:	697a      	ldr	r2, [r7, #20]
 80061aa:	4313      	orrs	r3, r2
 80061ac:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= ~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 80061ae:	693b      	ldr	r3, [r7, #16]
 80061b0:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 80061b4:	613b      	str	r3, [r7, #16]
  tmpccer |= ((TIM_ICPolarity << 8U) & (TIM_CCER_CC3P | TIM_CCER_CC3NP));
 80061b6:	68bb      	ldr	r3, [r7, #8]
 80061b8:	021b      	lsls	r3, r3, #8
 80061ba:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 80061be:	693a      	ldr	r2, [r7, #16]
 80061c0:	4313      	orrs	r3, r2
 80061c2:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
 80061c4:	68fb      	ldr	r3, [r7, #12]
 80061c6:	697a      	ldr	r2, [r7, #20]
 80061c8:	61da      	str	r2, [r3, #28]
  TIMx->CCER = tmpccer;
 80061ca:	68fb      	ldr	r3, [r7, #12]
 80061cc:	693a      	ldr	r2, [r7, #16]
 80061ce:	621a      	str	r2, [r3, #32]
}
 80061d0:	bf00      	nop
 80061d2:	371c      	adds	r7, #28
 80061d4:	46bd      	mov	sp, r7
 80061d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061da:	4770      	bx	lr

080061dc <TIM_TI4_SetConfig>:
  *        protected against un-initialized filter and polarity values.
  * @retval None
  */
static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                              uint32_t TIM_ICFilter)
{
 80061dc:	b480      	push	{r7}
 80061de:	b087      	sub	sp, #28
 80061e0:	af00      	add	r7, sp, #0
 80061e2:	60f8      	str	r0, [r7, #12]
 80061e4:	60b9      	str	r1, [r7, #8]
 80061e6:	607a      	str	r2, [r7, #4]
 80061e8:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr2;
  uint32_t tmpccer;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 80061ea:	68fb      	ldr	r3, [r7, #12]
 80061ec:	6a1b      	ldr	r3, [r3, #32]
 80061ee:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80061f2:	68fb      	ldr	r3, [r7, #12]
 80061f4:	621a      	str	r2, [r3, #32]
  tmpccmr2 = TIMx->CCMR2;
 80061f6:	68fb      	ldr	r3, [r7, #12]
 80061f8:	69db      	ldr	r3, [r3, #28]
 80061fa:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 80061fc:	68fb      	ldr	r3, [r7, #12]
 80061fe:	6a1b      	ldr	r3, [r3, #32]
 8006200:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  tmpccmr2 &= ~TIM_CCMR2_CC4S;
 8006202:	697b      	ldr	r3, [r7, #20]
 8006204:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006208:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= (TIM_ICSelection << 8U);
 800620a:	687b      	ldr	r3, [r7, #4]
 800620c:	021b      	lsls	r3, r3, #8
 800620e:	697a      	ldr	r2, [r7, #20]
 8006210:	4313      	orrs	r3, r2
 8006212:	617b      	str	r3, [r7, #20]

  /* Set the filter */
  tmpccmr2 &= ~TIM_CCMR2_IC4F;
 8006214:	697b      	ldr	r3, [r7, #20]
 8006216:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800621a:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 800621c:	683b      	ldr	r3, [r7, #0]
 800621e:	031b      	lsls	r3, r3, #12
 8006220:	b29b      	uxth	r3, r3
 8006222:	697a      	ldr	r2, [r7, #20]
 8006224:	4313      	orrs	r3, r2
 8006226:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= ~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 8006228:	693b      	ldr	r3, [r7, #16]
 800622a:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 800622e:	613b      	str	r3, [r7, #16]
  tmpccer |= ((TIM_ICPolarity << 12U) & (TIM_CCER_CC4P | TIM_CCER_CC4NP));
 8006230:	68bb      	ldr	r3, [r7, #8]
 8006232:	031b      	lsls	r3, r3, #12
 8006234:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 8006238:	693a      	ldr	r2, [r7, #16]
 800623a:	4313      	orrs	r3, r2
 800623c:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
 800623e:	68fb      	ldr	r3, [r7, #12]
 8006240:	697a      	ldr	r2, [r7, #20]
 8006242:	61da      	str	r2, [r3, #28]
  TIMx->CCER = tmpccer ;
 8006244:	68fb      	ldr	r3, [r7, #12]
 8006246:	693a      	ldr	r2, [r7, #16]
 8006248:	621a      	str	r2, [r3, #32]
}
 800624a:	bf00      	nop
 800624c:	371c      	adds	r7, #28
 800624e:	46bd      	mov	sp, r7
 8006250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006254:	4770      	bx	lr

08006256 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8006256:	b480      	push	{r7}
 8006258:	b085      	sub	sp, #20
 800625a:	af00      	add	r7, sp, #0
 800625c:	6078      	str	r0, [r7, #4]
 800625e:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	689b      	ldr	r3, [r3, #8]
 8006264:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8006266:	68fb      	ldr	r3, [r7, #12]
 8006268:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800626c:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800626e:	683a      	ldr	r2, [r7, #0]
 8006270:	68fb      	ldr	r3, [r7, #12]
 8006272:	4313      	orrs	r3, r2
 8006274:	f043 0307 	orr.w	r3, r3, #7
 8006278:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	68fa      	ldr	r2, [r7, #12]
 800627e:	609a      	str	r2, [r3, #8]
}
 8006280:	bf00      	nop
 8006282:	3714      	adds	r7, #20
 8006284:	46bd      	mov	sp, r7
 8006286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800628a:	4770      	bx	lr

0800628c <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800628c:	b480      	push	{r7}
 800628e:	b087      	sub	sp, #28
 8006290:	af00      	add	r7, sp, #0
 8006292:	60f8      	str	r0, [r7, #12]
 8006294:	60b9      	str	r1, [r7, #8]
 8006296:	607a      	str	r2, [r7, #4]
 8006298:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800629a:	68fb      	ldr	r3, [r7, #12]
 800629c:	689b      	ldr	r3, [r3, #8]
 800629e:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80062a0:	697b      	ldr	r3, [r7, #20]
 80062a2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80062a6:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80062a8:	683b      	ldr	r3, [r7, #0]
 80062aa:	021a      	lsls	r2, r3, #8
 80062ac:	687b      	ldr	r3, [r7, #4]
 80062ae:	431a      	orrs	r2, r3
 80062b0:	68bb      	ldr	r3, [r7, #8]
 80062b2:	4313      	orrs	r3, r2
 80062b4:	697a      	ldr	r2, [r7, #20]
 80062b6:	4313      	orrs	r3, r2
 80062b8:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	697a      	ldr	r2, [r7, #20]
 80062be:	609a      	str	r2, [r3, #8]
}
 80062c0:	bf00      	nop
 80062c2:	371c      	adds	r7, #28
 80062c4:	46bd      	mov	sp, r7
 80062c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062ca:	4770      	bx	lr

080062cc <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 80062cc:	b480      	push	{r7}
 80062ce:	b087      	sub	sp, #28
 80062d0:	af00      	add	r7, sp, #0
 80062d2:	60f8      	str	r0, [r7, #12]
 80062d4:	60b9      	str	r1, [r7, #8]
 80062d6:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 80062d8:	68bb      	ldr	r3, [r7, #8]
 80062da:	f003 031f 	and.w	r3, r3, #31
 80062de:	2201      	movs	r2, #1
 80062e0:	fa02 f303 	lsl.w	r3, r2, r3
 80062e4:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 80062e6:	68fb      	ldr	r3, [r7, #12]
 80062e8:	6a1a      	ldr	r2, [r3, #32]
 80062ea:	697b      	ldr	r3, [r7, #20]
 80062ec:	43db      	mvns	r3, r3
 80062ee:	401a      	ands	r2, r3
 80062f0:	68fb      	ldr	r3, [r7, #12]
 80062f2:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 80062f4:	68fb      	ldr	r3, [r7, #12]
 80062f6:	6a1a      	ldr	r2, [r3, #32]
 80062f8:	68bb      	ldr	r3, [r7, #8]
 80062fa:	f003 031f 	and.w	r3, r3, #31
 80062fe:	6879      	ldr	r1, [r7, #4]
 8006300:	fa01 f303 	lsl.w	r3, r1, r3
 8006304:	431a      	orrs	r2, r3
 8006306:	68fb      	ldr	r3, [r7, #12]
 8006308:	621a      	str	r2, [r3, #32]
}
 800630a:	bf00      	nop
 800630c:	371c      	adds	r7, #28
 800630e:	46bd      	mov	sp, r7
 8006310:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006314:	4770      	bx	lr
	...

08006318 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8006318:	b480      	push	{r7}
 800631a:	b085      	sub	sp, #20
 800631c:	af00      	add	r7, sp, #0
 800631e:	6078      	str	r0, [r7, #4]
 8006320:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006322:	687b      	ldr	r3, [r7, #4]
 8006324:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006328:	2b01      	cmp	r3, #1
 800632a:	d101      	bne.n	8006330 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800632c:	2302      	movs	r3, #2
 800632e:	e05a      	b.n	80063e6 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	2201      	movs	r2, #1
 8006334:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006338:	687b      	ldr	r3, [r7, #4]
 800633a:	2202      	movs	r2, #2
 800633c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	681b      	ldr	r3, [r3, #0]
 8006344:	685b      	ldr	r3, [r3, #4]
 8006346:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8006348:	687b      	ldr	r3, [r7, #4]
 800634a:	681b      	ldr	r3, [r3, #0]
 800634c:	689b      	ldr	r3, [r3, #8]
 800634e:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8006350:	68fb      	ldr	r3, [r7, #12]
 8006352:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006356:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8006358:	683b      	ldr	r3, [r7, #0]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	68fa      	ldr	r2, [r7, #12]
 800635e:	4313      	orrs	r3, r2
 8006360:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8006362:	687b      	ldr	r3, [r7, #4]
 8006364:	681b      	ldr	r3, [r3, #0]
 8006366:	68fa      	ldr	r2, [r7, #12]
 8006368:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800636a:	687b      	ldr	r3, [r7, #4]
 800636c:	681b      	ldr	r3, [r3, #0]
 800636e:	4a21      	ldr	r2, [pc, #132]	; (80063f4 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8006370:	4293      	cmp	r3, r2
 8006372:	d022      	beq.n	80063ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006374:	687b      	ldr	r3, [r7, #4]
 8006376:	681b      	ldr	r3, [r3, #0]
 8006378:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800637c:	d01d      	beq.n	80063ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800637e:	687b      	ldr	r3, [r7, #4]
 8006380:	681b      	ldr	r3, [r3, #0]
 8006382:	4a1d      	ldr	r2, [pc, #116]	; (80063f8 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8006384:	4293      	cmp	r3, r2
 8006386:	d018      	beq.n	80063ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	4a1b      	ldr	r2, [pc, #108]	; (80063fc <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800638e:	4293      	cmp	r3, r2
 8006390:	d013      	beq.n	80063ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006392:	687b      	ldr	r3, [r7, #4]
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	4a1a      	ldr	r2, [pc, #104]	; (8006400 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8006398:	4293      	cmp	r3, r2
 800639a:	d00e      	beq.n	80063ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800639c:	687b      	ldr	r3, [r7, #4]
 800639e:	681b      	ldr	r3, [r3, #0]
 80063a0:	4a18      	ldr	r2, [pc, #96]	; (8006404 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80063a2:	4293      	cmp	r3, r2
 80063a4:	d009      	beq.n	80063ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	681b      	ldr	r3, [r3, #0]
 80063aa:	4a17      	ldr	r2, [pc, #92]	; (8006408 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80063ac:	4293      	cmp	r3, r2
 80063ae:	d004      	beq.n	80063ba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80063b0:	687b      	ldr	r3, [r7, #4]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	4a15      	ldr	r2, [pc, #84]	; (800640c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80063b6:	4293      	cmp	r3, r2
 80063b8:	d10c      	bne.n	80063d4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 80063ba:	68bb      	ldr	r3, [r7, #8]
 80063bc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80063c0:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80063c2:	683b      	ldr	r3, [r7, #0]
 80063c4:	685b      	ldr	r3, [r3, #4]
 80063c6:	68ba      	ldr	r2, [r7, #8]
 80063c8:	4313      	orrs	r3, r2
 80063ca:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 80063cc:	687b      	ldr	r3, [r7, #4]
 80063ce:	681b      	ldr	r3, [r3, #0]
 80063d0:	68ba      	ldr	r2, [r7, #8]
 80063d2:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	2201      	movs	r2, #1
 80063d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	2200      	movs	r2, #0
 80063e0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 80063e4:	2300      	movs	r3, #0
}
 80063e6:	4618      	mov	r0, r3
 80063e8:	3714      	adds	r7, #20
 80063ea:	46bd      	mov	sp, r7
 80063ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063f0:	4770      	bx	lr
 80063f2:	bf00      	nop
 80063f4:	40010000 	.word	0x40010000
 80063f8:	40000400 	.word	0x40000400
 80063fc:	40000800 	.word	0x40000800
 8006400:	40000c00 	.word	0x40000c00
 8006404:	40010400 	.word	0x40010400
 8006408:	40014000 	.word	0x40014000
 800640c:	40001800 	.word	0x40001800

08006410 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8006410:	b480      	push	{r7}
 8006412:	b083      	sub	sp, #12
 8006414:	af00      	add	r7, sp, #0
 8006416:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8006418:	bf00      	nop
 800641a:	370c      	adds	r7, #12
 800641c:	46bd      	mov	sp, r7
 800641e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006422:	4770      	bx	lr

08006424 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8006424:	b480      	push	{r7}
 8006426:	b083      	sub	sp, #12
 8006428:	af00      	add	r7, sp, #0
 800642a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 800642c:	bf00      	nop
 800642e:	370c      	adds	r7, #12
 8006430:	46bd      	mov	sp, r7
 8006432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006436:	4770      	bx	lr

08006438 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8006438:	b580      	push	{r7, lr}
 800643a:	b082      	sub	sp, #8
 800643c:	af00      	add	r7, sp, #0
 800643e:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8006440:	687b      	ldr	r3, [r7, #4]
 8006442:	2b00      	cmp	r3, #0
 8006444:	d101      	bne.n	800644a <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8006446:	2301      	movs	r3, #1
 8006448:	e03f      	b.n	80064ca <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 800644a:	687b      	ldr	r3, [r7, #4]
 800644c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8006450:	b2db      	uxtb	r3, r3
 8006452:	2b00      	cmp	r3, #0
 8006454:	d106      	bne.n	8006464 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	2200      	movs	r2, #0
 800645a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 800645e:	6878      	ldr	r0, [r7, #4]
 8006460:	f7fb fb66 	bl	8001b30 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	2224      	movs	r2, #36	; 0x24
 8006468:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	681b      	ldr	r3, [r3, #0]
 8006470:	68da      	ldr	r2, [r3, #12]
 8006472:	687b      	ldr	r3, [r7, #4]
 8006474:	681b      	ldr	r3, [r3, #0]
 8006476:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800647a:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 800647c:	6878      	ldr	r0, [r7, #4]
 800647e:	f000 f9b1 	bl	80067e4 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	681b      	ldr	r3, [r3, #0]
 8006486:	691a      	ldr	r2, [r3, #16]
 8006488:	687b      	ldr	r3, [r7, #4]
 800648a:	681b      	ldr	r3, [r3, #0]
 800648c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006490:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	681b      	ldr	r3, [r3, #0]
 8006496:	695a      	ldr	r2, [r3, #20]
 8006498:	687b      	ldr	r3, [r7, #4]
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80064a0:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	681b      	ldr	r3, [r3, #0]
 80064a6:	68da      	ldr	r2, [r3, #12]
 80064a8:	687b      	ldr	r3, [r7, #4]
 80064aa:	681b      	ldr	r3, [r3, #0]
 80064ac:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80064b0:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	2200      	movs	r2, #0
 80064b6:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 80064b8:	687b      	ldr	r3, [r7, #4]
 80064ba:	2220      	movs	r2, #32
 80064bc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 80064c0:	687b      	ldr	r3, [r7, #4]
 80064c2:	2220      	movs	r2, #32
 80064c4:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
 80064c8:	2300      	movs	r3, #0
}
 80064ca:	4618      	mov	r0, r3
 80064cc:	3708      	adds	r7, #8
 80064ce:	46bd      	mov	sp, r7
 80064d0:	bd80      	pop	{r7, pc}

080064d2 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80064d2:	b580      	push	{r7, lr}
 80064d4:	b088      	sub	sp, #32
 80064d6:	af02      	add	r7, sp, #8
 80064d8:	60f8      	str	r0, [r7, #12]
 80064da:	60b9      	str	r1, [r7, #8]
 80064dc:	603b      	str	r3, [r7, #0]
 80064de:	4613      	mov	r3, r2
 80064e0:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 80064e2:	2300      	movs	r3, #0
 80064e4:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 80064e6:	68fb      	ldr	r3, [r7, #12]
 80064e8:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80064ec:	b2db      	uxtb	r3, r3
 80064ee:	2b20      	cmp	r3, #32
 80064f0:	f040 8083 	bne.w	80065fa <HAL_UART_Transmit+0x128>
  {
    if ((pData == NULL) || (Size == 0U))
 80064f4:	68bb      	ldr	r3, [r7, #8]
 80064f6:	2b00      	cmp	r3, #0
 80064f8:	d002      	beq.n	8006500 <HAL_UART_Transmit+0x2e>
 80064fa:	88fb      	ldrh	r3, [r7, #6]
 80064fc:	2b00      	cmp	r3, #0
 80064fe:	d101      	bne.n	8006504 <HAL_UART_Transmit+0x32>
    {
      return  HAL_ERROR;
 8006500:	2301      	movs	r3, #1
 8006502:	e07b      	b.n	80065fc <HAL_UART_Transmit+0x12a>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8006504:	68fb      	ldr	r3, [r7, #12]
 8006506:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800650a:	2b01      	cmp	r3, #1
 800650c:	d101      	bne.n	8006512 <HAL_UART_Transmit+0x40>
 800650e:	2302      	movs	r3, #2
 8006510:	e074      	b.n	80065fc <HAL_UART_Transmit+0x12a>
 8006512:	68fb      	ldr	r3, [r7, #12]
 8006514:	2201      	movs	r2, #1
 8006516:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800651a:	68fb      	ldr	r3, [r7, #12]
 800651c:	2200      	movs	r2, #0
 800651e:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006520:	68fb      	ldr	r3, [r7, #12]
 8006522:	2221      	movs	r2, #33	; 0x21
 8006524:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 8006528:	f7fb fdf6 	bl	8002118 <HAL_GetTick>
 800652c:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 800652e:	68fb      	ldr	r3, [r7, #12]
 8006530:	88fa      	ldrh	r2, [r7, #6]
 8006532:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 8006534:	68fb      	ldr	r3, [r7, #12]
 8006536:	88fa      	ldrh	r2, [r7, #6]
 8006538:	84da      	strh	r2, [r3, #38]	; 0x26

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 800653a:	68fb      	ldr	r3, [r7, #12]
 800653c:	2200      	movs	r2, #0
 800653e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    while (huart->TxXferCount > 0U)
 8006542:	e042      	b.n	80065ca <HAL_UART_Transmit+0xf8>
    {
      huart->TxXferCount--;
 8006544:	68fb      	ldr	r3, [r7, #12]
 8006546:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006548:	b29b      	uxth	r3, r3
 800654a:	3b01      	subs	r3, #1
 800654c:	b29a      	uxth	r2, r3
 800654e:	68fb      	ldr	r3, [r7, #12]
 8006550:	84da      	strh	r2, [r3, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	689b      	ldr	r3, [r3, #8]
 8006556:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800655a:	d122      	bne.n	80065a2 <HAL_UART_Transmit+0xd0>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800655c:	683b      	ldr	r3, [r7, #0]
 800655e:	9300      	str	r3, [sp, #0]
 8006560:	697b      	ldr	r3, [r7, #20]
 8006562:	2200      	movs	r2, #0
 8006564:	2180      	movs	r1, #128	; 0x80
 8006566:	68f8      	ldr	r0, [r7, #12]
 8006568:	f000 f8f2 	bl	8006750 <UART_WaitOnFlagUntilTimeout>
 800656c:	4603      	mov	r3, r0
 800656e:	2b00      	cmp	r3, #0
 8006570:	d001      	beq.n	8006576 <HAL_UART_Transmit+0xa4>
        {
          return HAL_TIMEOUT;
 8006572:	2303      	movs	r3, #3
 8006574:	e042      	b.n	80065fc <HAL_UART_Transmit+0x12a>
        }
        tmp = (uint16_t *) pData;
 8006576:	68bb      	ldr	r3, [r7, #8]
 8006578:	613b      	str	r3, [r7, #16]
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 800657a:	693b      	ldr	r3, [r7, #16]
 800657c:	881b      	ldrh	r3, [r3, #0]
 800657e:	461a      	mov	r2, r3
 8006580:	68fb      	ldr	r3, [r7, #12]
 8006582:	681b      	ldr	r3, [r3, #0]
 8006584:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006588:	605a      	str	r2, [r3, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	691b      	ldr	r3, [r3, #16]
 800658e:	2b00      	cmp	r3, #0
 8006590:	d103      	bne.n	800659a <HAL_UART_Transmit+0xc8>
        {
          pData += 2U;
 8006592:	68bb      	ldr	r3, [r7, #8]
 8006594:	3302      	adds	r3, #2
 8006596:	60bb      	str	r3, [r7, #8]
 8006598:	e017      	b.n	80065ca <HAL_UART_Transmit+0xf8>
        }
        else
        {
          pData += 1U;
 800659a:	68bb      	ldr	r3, [r7, #8]
 800659c:	3301      	adds	r3, #1
 800659e:	60bb      	str	r3, [r7, #8]
 80065a0:	e013      	b.n	80065ca <HAL_UART_Transmit+0xf8>
        }
      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80065a2:	683b      	ldr	r3, [r7, #0]
 80065a4:	9300      	str	r3, [sp, #0]
 80065a6:	697b      	ldr	r3, [r7, #20]
 80065a8:	2200      	movs	r2, #0
 80065aa:	2180      	movs	r1, #128	; 0x80
 80065ac:	68f8      	ldr	r0, [r7, #12]
 80065ae:	f000 f8cf 	bl	8006750 <UART_WaitOnFlagUntilTimeout>
 80065b2:	4603      	mov	r3, r0
 80065b4:	2b00      	cmp	r3, #0
 80065b6:	d001      	beq.n	80065bc <HAL_UART_Transmit+0xea>
        {
          return HAL_TIMEOUT;
 80065b8:	2303      	movs	r3, #3
 80065ba:	e01f      	b.n	80065fc <HAL_UART_Transmit+0x12a>
        }
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 80065bc:	68bb      	ldr	r3, [r7, #8]
 80065be:	1c5a      	adds	r2, r3, #1
 80065c0:	60ba      	str	r2, [r7, #8]
 80065c2:	781a      	ldrb	r2, [r3, #0]
 80065c4:	68fb      	ldr	r3, [r7, #12]
 80065c6:	681b      	ldr	r3, [r3, #0]
 80065c8:	605a      	str	r2, [r3, #4]
    while (huart->TxXferCount > 0U)
 80065ca:	68fb      	ldr	r3, [r7, #12]
 80065cc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80065ce:	b29b      	uxth	r3, r3
 80065d0:	2b00      	cmp	r3, #0
 80065d2:	d1b7      	bne.n	8006544 <HAL_UART_Transmit+0x72>
      }
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80065d4:	683b      	ldr	r3, [r7, #0]
 80065d6:	9300      	str	r3, [sp, #0]
 80065d8:	697b      	ldr	r3, [r7, #20]
 80065da:	2200      	movs	r2, #0
 80065dc:	2140      	movs	r1, #64	; 0x40
 80065de:	68f8      	ldr	r0, [r7, #12]
 80065e0:	f000 f8b6 	bl	8006750 <UART_WaitOnFlagUntilTimeout>
 80065e4:	4603      	mov	r3, r0
 80065e6:	2b00      	cmp	r3, #0
 80065e8:	d001      	beq.n	80065ee <HAL_UART_Transmit+0x11c>
    {
      return HAL_TIMEOUT;
 80065ea:	2303      	movs	r3, #3
 80065ec:	e006      	b.n	80065fc <HAL_UART_Transmit+0x12a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 80065ee:	68fb      	ldr	r3, [r7, #12]
 80065f0:	2220      	movs	r2, #32
 80065f2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    return HAL_OK;
 80065f6:	2300      	movs	r3, #0
 80065f8:	e000      	b.n	80065fc <HAL_UART_Transmit+0x12a>
  }
  else
  {
    return HAL_BUSY;
 80065fa:	2302      	movs	r3, #2
  }
}
 80065fc:	4618      	mov	r0, r3
 80065fe:	3718      	adds	r7, #24
 8006600:	46bd      	mov	sp, r7
 8006602:	bd80      	pop	{r7, pc}

08006604 <HAL_UART_Receive>:
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006604:	b580      	push	{r7, lr}
 8006606:	b088      	sub	sp, #32
 8006608:	af02      	add	r7, sp, #8
 800660a:	60f8      	str	r0, [r7, #12]
 800660c:	60b9      	str	r1, [r7, #8]
 800660e:	603b      	str	r3, [r7, #0]
 8006610:	4613      	mov	r3, r2
 8006612:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 8006614:	2300      	movs	r3, #0
 8006616:	617b      	str	r3, [r7, #20]

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8006618:	68fb      	ldr	r3, [r7, #12]
 800661a:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 800661e:	b2db      	uxtb	r3, r3
 8006620:	2b20      	cmp	r3, #32
 8006622:	f040 8090 	bne.w	8006746 <HAL_UART_Receive+0x142>
  {
    if ((pData == NULL) || (Size == 0U))
 8006626:	68bb      	ldr	r3, [r7, #8]
 8006628:	2b00      	cmp	r3, #0
 800662a:	d002      	beq.n	8006632 <HAL_UART_Receive+0x2e>
 800662c:	88fb      	ldrh	r3, [r7, #6]
 800662e:	2b00      	cmp	r3, #0
 8006630:	d101      	bne.n	8006636 <HAL_UART_Receive+0x32>
    {
      return  HAL_ERROR;
 8006632:	2301      	movs	r3, #1
 8006634:	e088      	b.n	8006748 <HAL_UART_Receive+0x144>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800663c:	2b01      	cmp	r3, #1
 800663e:	d101      	bne.n	8006644 <HAL_UART_Receive+0x40>
 8006640:	2302      	movs	r3, #2
 8006642:	e081      	b.n	8006748 <HAL_UART_Receive+0x144>
 8006644:	68fb      	ldr	r3, [r7, #12]
 8006646:	2201      	movs	r2, #1
 8006648:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800664c:	68fb      	ldr	r3, [r7, #12]
 800664e:	2200      	movs	r2, #0
 8006650:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8006652:	68fb      	ldr	r3, [r7, #12]
 8006654:	2222      	movs	r2, #34	; 0x22
 8006656:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 800665a:	f7fb fd5d 	bl	8002118 <HAL_GetTick>
 800665e:	6178      	str	r0, [r7, #20]

    huart->RxXferSize = Size;
 8006660:	68fb      	ldr	r3, [r7, #12]
 8006662:	88fa      	ldrh	r2, [r7, #6]
 8006664:	859a      	strh	r2, [r3, #44]	; 0x2c
    huart->RxXferCount = Size;
 8006666:	68fb      	ldr	r3, [r7, #12]
 8006668:	88fa      	ldrh	r2, [r7, #6]
 800666a:	85da      	strh	r2, [r3, #46]	; 0x2e

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 800666c:	68fb      	ldr	r3, [r7, #12]
 800666e:	2200      	movs	r2, #0
 8006670:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Check the remain data to be received */
    while (huart->RxXferCount > 0U)
 8006674:	e05c      	b.n	8006730 <HAL_UART_Receive+0x12c>
    {
      huart->RxXferCount--;
 8006676:	68fb      	ldr	r3, [r7, #12]
 8006678:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800667a:	b29b      	uxth	r3, r3
 800667c:	3b01      	subs	r3, #1
 800667e:	b29a      	uxth	r2, r3
 8006680:	68fb      	ldr	r3, [r7, #12]
 8006682:	85da      	strh	r2, [r3, #46]	; 0x2e
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006684:	68fb      	ldr	r3, [r7, #12]
 8006686:	689b      	ldr	r3, [r3, #8]
 8006688:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800668c:	d12b      	bne.n	80066e6 <HAL_UART_Receive+0xe2>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 800668e:	683b      	ldr	r3, [r7, #0]
 8006690:	9300      	str	r3, [sp, #0]
 8006692:	697b      	ldr	r3, [r7, #20]
 8006694:	2200      	movs	r2, #0
 8006696:	2120      	movs	r1, #32
 8006698:	68f8      	ldr	r0, [r7, #12]
 800669a:	f000 f859 	bl	8006750 <UART_WaitOnFlagUntilTimeout>
 800669e:	4603      	mov	r3, r0
 80066a0:	2b00      	cmp	r3, #0
 80066a2:	d001      	beq.n	80066a8 <HAL_UART_Receive+0xa4>
        {
          return HAL_TIMEOUT;
 80066a4:	2303      	movs	r3, #3
 80066a6:	e04f      	b.n	8006748 <HAL_UART_Receive+0x144>
        }
        tmp = (uint16_t *) pData;
 80066a8:	68bb      	ldr	r3, [r7, #8]
 80066aa:	613b      	str	r3, [r7, #16]
        if (huart->Init.Parity == UART_PARITY_NONE)
 80066ac:	68fb      	ldr	r3, [r7, #12]
 80066ae:	691b      	ldr	r3, [r3, #16]
 80066b0:	2b00      	cmp	r3, #0
 80066b2:	d10c      	bne.n	80066ce <HAL_UART_Receive+0xca>
        {
          *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	685b      	ldr	r3, [r3, #4]
 80066ba:	b29b      	uxth	r3, r3
 80066bc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80066c0:	b29a      	uxth	r2, r3
 80066c2:	693b      	ldr	r3, [r7, #16]
 80066c4:	801a      	strh	r2, [r3, #0]
          pData += 2U;
 80066c6:	68bb      	ldr	r3, [r7, #8]
 80066c8:	3302      	adds	r3, #2
 80066ca:	60bb      	str	r3, [r7, #8]
 80066cc:	e030      	b.n	8006730 <HAL_UART_Receive+0x12c>
        }
        else
        {
          *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 80066ce:	68fb      	ldr	r3, [r7, #12]
 80066d0:	681b      	ldr	r3, [r3, #0]
 80066d2:	685b      	ldr	r3, [r3, #4]
 80066d4:	b29b      	uxth	r3, r3
 80066d6:	b2db      	uxtb	r3, r3
 80066d8:	b29a      	uxth	r2, r3
 80066da:	693b      	ldr	r3, [r7, #16]
 80066dc:	801a      	strh	r2, [r3, #0]
          pData += 1U;
 80066de:	68bb      	ldr	r3, [r7, #8]
 80066e0:	3301      	adds	r3, #1
 80066e2:	60bb      	str	r3, [r7, #8]
 80066e4:	e024      	b.n	8006730 <HAL_UART_Receive+0x12c>
        }

      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 80066e6:	683b      	ldr	r3, [r7, #0]
 80066e8:	9300      	str	r3, [sp, #0]
 80066ea:	697b      	ldr	r3, [r7, #20]
 80066ec:	2200      	movs	r2, #0
 80066ee:	2120      	movs	r1, #32
 80066f0:	68f8      	ldr	r0, [r7, #12]
 80066f2:	f000 f82d 	bl	8006750 <UART_WaitOnFlagUntilTimeout>
 80066f6:	4603      	mov	r3, r0
 80066f8:	2b00      	cmp	r3, #0
 80066fa:	d001      	beq.n	8006700 <HAL_UART_Receive+0xfc>
        {
          return HAL_TIMEOUT;
 80066fc:	2303      	movs	r3, #3
 80066fe:	e023      	b.n	8006748 <HAL_UART_Receive+0x144>
        }
        if (huart->Init.Parity == UART_PARITY_NONE)
 8006700:	68fb      	ldr	r3, [r7, #12]
 8006702:	691b      	ldr	r3, [r3, #16]
 8006704:	2b00      	cmp	r3, #0
 8006706:	d108      	bne.n	800671a <HAL_UART_Receive+0x116>
        {
          *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8006708:	68fb      	ldr	r3, [r7, #12]
 800670a:	681b      	ldr	r3, [r3, #0]
 800670c:	6859      	ldr	r1, [r3, #4]
 800670e:	68bb      	ldr	r3, [r7, #8]
 8006710:	1c5a      	adds	r2, r3, #1
 8006712:	60ba      	str	r2, [r7, #8]
 8006714:	b2ca      	uxtb	r2, r1
 8006716:	701a      	strb	r2, [r3, #0]
 8006718:	e00a      	b.n	8006730 <HAL_UART_Receive+0x12c>
        }
        else
        {
          *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 800671a:	68fb      	ldr	r3, [r7, #12]
 800671c:	681b      	ldr	r3, [r3, #0]
 800671e:	685b      	ldr	r3, [r3, #4]
 8006720:	b2da      	uxtb	r2, r3
 8006722:	68bb      	ldr	r3, [r7, #8]
 8006724:	1c59      	adds	r1, r3, #1
 8006726:	60b9      	str	r1, [r7, #8]
 8006728:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800672c:	b2d2      	uxtb	r2, r2
 800672e:	701a      	strb	r2, [r3, #0]
    while (huart->RxXferCount > 0U)
 8006730:	68fb      	ldr	r3, [r7, #12]
 8006732:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8006734:	b29b      	uxth	r3, r3
 8006736:	2b00      	cmp	r3, #0
 8006738:	d19d      	bne.n	8006676 <HAL_UART_Receive+0x72>

      }
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 800673a:	68fb      	ldr	r3, [r7, #12]
 800673c:	2220      	movs	r2, #32
 800673e:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

    return HAL_OK;
 8006742:	2300      	movs	r3, #0
 8006744:	e000      	b.n	8006748 <HAL_UART_Receive+0x144>
  }
  else
  {
    return HAL_BUSY;
 8006746:	2302      	movs	r3, #2
  }
}
 8006748:	4618      	mov	r0, r3
 800674a:	3718      	adds	r7, #24
 800674c:	46bd      	mov	sp, r7
 800674e:	bd80      	pop	{r7, pc}

08006750 <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 8006750:	b580      	push	{r7, lr}
 8006752:	b084      	sub	sp, #16
 8006754:	af00      	add	r7, sp, #0
 8006756:	60f8      	str	r0, [r7, #12]
 8006758:	60b9      	str	r1, [r7, #8]
 800675a:	603b      	str	r3, [r7, #0]
 800675c:	4613      	mov	r3, r2
 800675e:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006760:	e02c      	b.n	80067bc <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006762:	69bb      	ldr	r3, [r7, #24]
 8006764:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006768:	d028      	beq.n	80067bc <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800676a:	69bb      	ldr	r3, [r7, #24]
 800676c:	2b00      	cmp	r3, #0
 800676e:	d007      	beq.n	8006780 <UART_WaitOnFlagUntilTimeout+0x30>
 8006770:	f7fb fcd2 	bl	8002118 <HAL_GetTick>
 8006774:	4602      	mov	r2, r0
 8006776:	683b      	ldr	r3, [r7, #0]
 8006778:	1ad3      	subs	r3, r2, r3
 800677a:	69ba      	ldr	r2, [r7, #24]
 800677c:	429a      	cmp	r2, r3
 800677e:	d21d      	bcs.n	80067bc <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8006780:	68fb      	ldr	r3, [r7, #12]
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	68da      	ldr	r2, [r3, #12]
 8006786:	68fb      	ldr	r3, [r7, #12]
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800678e:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006790:	68fb      	ldr	r3, [r7, #12]
 8006792:	681b      	ldr	r3, [r3, #0]
 8006794:	695a      	ldr	r2, [r3, #20]
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	f022 0201 	bic.w	r2, r2, #1
 800679e:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
 80067a0:	68fb      	ldr	r3, [r7, #12]
 80067a2:	2220      	movs	r2, #32
 80067a4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 80067a8:	68fb      	ldr	r3, [r7, #12]
 80067aa:	2220      	movs	r2, #32
 80067ac:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 80067b0:	68fb      	ldr	r3, [r7, #12]
 80067b2:	2200      	movs	r2, #0
 80067b4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

        return HAL_TIMEOUT;
 80067b8:	2303      	movs	r3, #3
 80067ba:	e00f      	b.n	80067dc <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80067bc:	68fb      	ldr	r3, [r7, #12]
 80067be:	681b      	ldr	r3, [r3, #0]
 80067c0:	681a      	ldr	r2, [r3, #0]
 80067c2:	68bb      	ldr	r3, [r7, #8]
 80067c4:	4013      	ands	r3, r2
 80067c6:	68ba      	ldr	r2, [r7, #8]
 80067c8:	429a      	cmp	r2, r3
 80067ca:	bf0c      	ite	eq
 80067cc:	2301      	moveq	r3, #1
 80067ce:	2300      	movne	r3, #0
 80067d0:	b2db      	uxtb	r3, r3
 80067d2:	461a      	mov	r2, r3
 80067d4:	79fb      	ldrb	r3, [r7, #7]
 80067d6:	429a      	cmp	r2, r3
 80067d8:	d0c3      	beq.n	8006762 <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 80067da:	2300      	movs	r3, #0
}
 80067dc:	4618      	mov	r0, r3
 80067de:	3710      	adds	r7, #16
 80067e0:	46bd      	mov	sp, r7
 80067e2:	bd80      	pop	{r7, pc}

080067e4 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 80067e4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80067e8:	f5ad 7d02 	sub.w	sp, sp, #520	; 0x208
 80067ec:	af00      	add	r7, sp, #0
 80067ee:	f8c7 01fc 	str.w	r0, [r7, #508]	; 0x1fc
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80067f2:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80067f6:	681b      	ldr	r3, [r3, #0]
 80067f8:	691b      	ldr	r3, [r3, #16]
 80067fa:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 80067fe:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006802:	68d9      	ldr	r1, [r3, #12]
 8006804:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006808:	681a      	ldr	r2, [r3, #0]
 800680a:	ea40 0301 	orr.w	r3, r0, r1
 800680e:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006810:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006814:	689a      	ldr	r2, [r3, #8]
 8006816:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800681a:	691b      	ldr	r3, [r3, #16]
 800681c:	431a      	orrs	r2, r3
 800681e:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006822:	695b      	ldr	r3, [r3, #20]
 8006824:	431a      	orrs	r2, r3
 8006826:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800682a:	69db      	ldr	r3, [r3, #28]
 800682c:	4313      	orrs	r3, r2
 800682e:	f8c7 3204 	str.w	r3, [r7, #516]	; 0x204
  MODIFY_REG(huart->Instance->CR1,
 8006832:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006836:	681b      	ldr	r3, [r3, #0]
 8006838:	68db      	ldr	r3, [r3, #12]
 800683a:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800683e:	f021 010c 	bic.w	r1, r1, #12
 8006842:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006846:	681a      	ldr	r2, [r3, #0]
 8006848:	f8d7 3204 	ldr.w	r3, [r7, #516]	; 0x204
 800684c:	430b      	orrs	r3, r1
 800684e:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006850:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006854:	681b      	ldr	r3, [r3, #0]
 8006856:	695b      	ldr	r3, [r3, #20]
 8006858:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800685c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006860:	6999      	ldr	r1, [r3, #24]
 8006862:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006866:	681a      	ldr	r2, [r3, #0]
 8006868:	ea40 0301 	orr.w	r3, r0, r1
 800686c:	6153      	str	r3, [r2, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800686e:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006872:	69db      	ldr	r3, [r3, #28]
 8006874:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006878:	f040 824a 	bne.w	8006d10 <UART_SetConfig+0x52c>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800687c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006880:	681a      	ldr	r2, [r3, #0]
 8006882:	4b96      	ldr	r3, [pc, #600]	; (8006adc <UART_SetConfig+0x2f8>)
 8006884:	429a      	cmp	r2, r3
 8006886:	d006      	beq.n	8006896 <UART_SetConfig+0xb2>
 8006888:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800688c:	681a      	ldr	r2, [r3, #0]
 800688e:	4b94      	ldr	r3, [pc, #592]	; (8006ae0 <UART_SetConfig+0x2fc>)
 8006890:	429a      	cmp	r2, r3
 8006892:	f040 8129 	bne.w	8006ae8 <UART_SetConfig+0x304>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8006896:	f7fd ff87 	bl	80047a8 <HAL_RCC_GetPCLK2Freq>
 800689a:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800689e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80068a2:	2200      	movs	r2, #0
 80068a4:	f8c7 31f0 	str.w	r3, [r7, #496]	; 0x1f0
 80068a8:	f8c7 21f4 	str.w	r2, [r7, #500]	; 0x1f4
 80068ac:	e9d7 457c 	ldrd	r4, r5, [r7, #496]	; 0x1f0
 80068b0:	4622      	mov	r2, r4
 80068b2:	462b      	mov	r3, r5
 80068b4:	1891      	adds	r1, r2, r2
 80068b6:	f8c7 10d0 	str.w	r1, [r7, #208]	; 0xd0
 80068ba:	415b      	adcs	r3, r3
 80068bc:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80068c0:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	; 0xd0
 80068c4:	4621      	mov	r1, r4
 80068c6:	1851      	adds	r1, r2, r1
 80068c8:	f8c7 10c8 	str.w	r1, [r7, #200]	; 0xc8
 80068cc:	4629      	mov	r1, r5
 80068ce:	414b      	adcs	r3, r1
 80068d0:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 80068d4:	f04f 0200 	mov.w	r2, #0
 80068d8:	f04f 0300 	mov.w	r3, #0
 80068dc:	e9d7 8932 	ldrd	r8, r9, [r7, #200]	; 0xc8
 80068e0:	4649      	mov	r1, r9
 80068e2:	00cb      	lsls	r3, r1, #3
 80068e4:	4641      	mov	r1, r8
 80068e6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80068ea:	4641      	mov	r1, r8
 80068ec:	00ca      	lsls	r2, r1, #3
 80068ee:	4610      	mov	r0, r2
 80068f0:	4619      	mov	r1, r3
 80068f2:	4603      	mov	r3, r0
 80068f4:	4622      	mov	r2, r4
 80068f6:	189b      	adds	r3, r3, r2
 80068f8:	f8c7 31e8 	str.w	r3, [r7, #488]	; 0x1e8
 80068fc:	462b      	mov	r3, r5
 80068fe:	460a      	mov	r2, r1
 8006900:	eb42 0303 	adc.w	r3, r2, r3
 8006904:	f8c7 31ec 	str.w	r3, [r7, #492]	; 0x1ec
 8006908:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800690c:	685b      	ldr	r3, [r3, #4]
 800690e:	2200      	movs	r2, #0
 8006910:	f8c7 31e0 	str.w	r3, [r7, #480]	; 0x1e0
 8006914:	f8c7 21e4 	str.w	r2, [r7, #484]	; 0x1e4
 8006918:	e9d7 1278 	ldrd	r1, r2, [r7, #480]	; 0x1e0
 800691c:	460b      	mov	r3, r1
 800691e:	18db      	adds	r3, r3, r3
 8006920:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8006924:	4613      	mov	r3, r2
 8006926:	eb42 0303 	adc.w	r3, r2, r3
 800692a:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800692e:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 8006932:	e9d7 017a 	ldrd	r0, r1, [r7, #488]	; 0x1e8
 8006936:	f7f9 fcab 	bl	8000290 <__aeabi_uldivmod>
 800693a:	4602      	mov	r2, r0
 800693c:	460b      	mov	r3, r1
 800693e:	4b69      	ldr	r3, [pc, #420]	; (8006ae4 <UART_SetConfig+0x300>)
 8006940:	fba3 2302 	umull	r2, r3, r3, r2
 8006944:	095b      	lsrs	r3, r3, #5
 8006946:	011c      	lsls	r4, r3, #4
 8006948:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800694c:	2200      	movs	r2, #0
 800694e:	f8c7 31d8 	str.w	r3, [r7, #472]	; 0x1d8
 8006952:	f8c7 21dc 	str.w	r2, [r7, #476]	; 0x1dc
 8006956:	e9d7 8976 	ldrd	r8, r9, [r7, #472]	; 0x1d8
 800695a:	4642      	mov	r2, r8
 800695c:	464b      	mov	r3, r9
 800695e:	1891      	adds	r1, r2, r2
 8006960:	f8c7 10b8 	str.w	r1, [r7, #184]	; 0xb8
 8006964:	415b      	adcs	r3, r3
 8006966:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 800696a:	e9d7 232e 	ldrd	r2, r3, [r7, #184]	; 0xb8
 800696e:	4641      	mov	r1, r8
 8006970:	1851      	adds	r1, r2, r1
 8006972:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8006976:	4649      	mov	r1, r9
 8006978:	414b      	adcs	r3, r1
 800697a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800697e:	f04f 0200 	mov.w	r2, #0
 8006982:	f04f 0300 	mov.w	r3, #0
 8006986:	e9d7 ab2c 	ldrd	sl, fp, [r7, #176]	; 0xb0
 800698a:	4659      	mov	r1, fp
 800698c:	00cb      	lsls	r3, r1, #3
 800698e:	4651      	mov	r1, sl
 8006990:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006994:	4651      	mov	r1, sl
 8006996:	00ca      	lsls	r2, r1, #3
 8006998:	4610      	mov	r0, r2
 800699a:	4619      	mov	r1, r3
 800699c:	4603      	mov	r3, r0
 800699e:	4642      	mov	r2, r8
 80069a0:	189b      	adds	r3, r3, r2
 80069a2:	f8c7 31d0 	str.w	r3, [r7, #464]	; 0x1d0
 80069a6:	464b      	mov	r3, r9
 80069a8:	460a      	mov	r2, r1
 80069aa:	eb42 0303 	adc.w	r3, r2, r3
 80069ae:	f8c7 31d4 	str.w	r3, [r7, #468]	; 0x1d4
 80069b2:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80069b6:	685b      	ldr	r3, [r3, #4]
 80069b8:	2200      	movs	r2, #0
 80069ba:	f8c7 31c8 	str.w	r3, [r7, #456]	; 0x1c8
 80069be:	f8c7 21cc 	str.w	r2, [r7, #460]	; 0x1cc
 80069c2:	e9d7 1272 	ldrd	r1, r2, [r7, #456]	; 0x1c8
 80069c6:	460b      	mov	r3, r1
 80069c8:	18db      	adds	r3, r3, r3
 80069ca:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80069ce:	4613      	mov	r3, r2
 80069d0:	eb42 0303 	adc.w	r3, r2, r3
 80069d4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80069d8:	e9d7 232a 	ldrd	r2, r3, [r7, #168]	; 0xa8
 80069dc:	e9d7 0174 	ldrd	r0, r1, [r7, #464]	; 0x1d0
 80069e0:	f7f9 fc56 	bl	8000290 <__aeabi_uldivmod>
 80069e4:	4602      	mov	r2, r0
 80069e6:	460b      	mov	r3, r1
 80069e8:	4611      	mov	r1, r2
 80069ea:	4b3e      	ldr	r3, [pc, #248]	; (8006ae4 <UART_SetConfig+0x300>)
 80069ec:	fba3 2301 	umull	r2, r3, r3, r1
 80069f0:	095b      	lsrs	r3, r3, #5
 80069f2:	2264      	movs	r2, #100	; 0x64
 80069f4:	fb02 f303 	mul.w	r3, r2, r3
 80069f8:	1acb      	subs	r3, r1, r3
 80069fa:	00db      	lsls	r3, r3, #3
 80069fc:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8006a00:	4b38      	ldr	r3, [pc, #224]	; (8006ae4 <UART_SetConfig+0x300>)
 8006a02:	fba3 2302 	umull	r2, r3, r3, r2
 8006a06:	095b      	lsrs	r3, r3, #5
 8006a08:	005b      	lsls	r3, r3, #1
 8006a0a:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8006a0e:	441c      	add	r4, r3
 8006a10:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8006a14:	2200      	movs	r2, #0
 8006a16:	f8c7 31c0 	str.w	r3, [r7, #448]	; 0x1c0
 8006a1a:	f8c7 21c4 	str.w	r2, [r7, #452]	; 0x1c4
 8006a1e:	e9d7 8970 	ldrd	r8, r9, [r7, #448]	; 0x1c0
 8006a22:	4642      	mov	r2, r8
 8006a24:	464b      	mov	r3, r9
 8006a26:	1891      	adds	r1, r2, r2
 8006a28:	f8c7 10a0 	str.w	r1, [r7, #160]	; 0xa0
 8006a2c:	415b      	adcs	r3, r3
 8006a2e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8006a32:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 8006a36:	4641      	mov	r1, r8
 8006a38:	1851      	adds	r1, r2, r1
 8006a3a:	f8c7 1098 	str.w	r1, [r7, #152]	; 0x98
 8006a3e:	4649      	mov	r1, r9
 8006a40:	414b      	adcs	r3, r1
 8006a42:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8006a46:	f04f 0200 	mov.w	r2, #0
 8006a4a:	f04f 0300 	mov.w	r3, #0
 8006a4e:	e9d7 ab26 	ldrd	sl, fp, [r7, #152]	; 0x98
 8006a52:	4659      	mov	r1, fp
 8006a54:	00cb      	lsls	r3, r1, #3
 8006a56:	4651      	mov	r1, sl
 8006a58:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006a5c:	4651      	mov	r1, sl
 8006a5e:	00ca      	lsls	r2, r1, #3
 8006a60:	4610      	mov	r0, r2
 8006a62:	4619      	mov	r1, r3
 8006a64:	4603      	mov	r3, r0
 8006a66:	4642      	mov	r2, r8
 8006a68:	189b      	adds	r3, r3, r2
 8006a6a:	f8c7 31b8 	str.w	r3, [r7, #440]	; 0x1b8
 8006a6e:	464b      	mov	r3, r9
 8006a70:	460a      	mov	r2, r1
 8006a72:	eb42 0303 	adc.w	r3, r2, r3
 8006a76:	f8c7 31bc 	str.w	r3, [r7, #444]	; 0x1bc
 8006a7a:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006a7e:	685b      	ldr	r3, [r3, #4]
 8006a80:	2200      	movs	r2, #0
 8006a82:	f8c7 31b0 	str.w	r3, [r7, #432]	; 0x1b0
 8006a86:	f8c7 21b4 	str.w	r2, [r7, #436]	; 0x1b4
 8006a8a:	e9d7 126c 	ldrd	r1, r2, [r7, #432]	; 0x1b0
 8006a8e:	460b      	mov	r3, r1
 8006a90:	18db      	adds	r3, r3, r3
 8006a92:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8006a96:	4613      	mov	r3, r2
 8006a98:	eb42 0303 	adc.w	r3, r2, r3
 8006a9c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8006aa0:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8006aa4:	e9d7 016e 	ldrd	r0, r1, [r7, #440]	; 0x1b8
 8006aa8:	f7f9 fbf2 	bl	8000290 <__aeabi_uldivmod>
 8006aac:	4602      	mov	r2, r0
 8006aae:	460b      	mov	r3, r1
 8006ab0:	4b0c      	ldr	r3, [pc, #48]	; (8006ae4 <UART_SetConfig+0x300>)
 8006ab2:	fba3 1302 	umull	r1, r3, r3, r2
 8006ab6:	095b      	lsrs	r3, r3, #5
 8006ab8:	2164      	movs	r1, #100	; 0x64
 8006aba:	fb01 f303 	mul.w	r3, r1, r3
 8006abe:	1ad3      	subs	r3, r2, r3
 8006ac0:	00db      	lsls	r3, r3, #3
 8006ac2:	3332      	adds	r3, #50	; 0x32
 8006ac4:	4a07      	ldr	r2, [pc, #28]	; (8006ae4 <UART_SetConfig+0x300>)
 8006ac6:	fba2 2303 	umull	r2, r3, r2, r3
 8006aca:	095b      	lsrs	r3, r3, #5
 8006acc:	f003 0207 	and.w	r2, r3, #7
 8006ad0:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006ad4:	681b      	ldr	r3, [r3, #0]
 8006ad6:	4422      	add	r2, r4
 8006ad8:	609a      	str	r2, [r3, #8]
 8006ada:	e349      	b.n	8007170 <UART_SetConfig+0x98c>
 8006adc:	40011000 	.word	0x40011000
 8006ae0:	40011400 	.word	0x40011400
 8006ae4:	51eb851f 	.word	0x51eb851f
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8006ae8:	f7fd fe4a 	bl	8004780 <HAL_RCC_GetPCLK1Freq>
 8006aec:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006af0:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8006af4:	2200      	movs	r2, #0
 8006af6:	f8c7 31a8 	str.w	r3, [r7, #424]	; 0x1a8
 8006afa:	f8c7 21ac 	str.w	r2, [r7, #428]	; 0x1ac
 8006afe:	e9d7 456a 	ldrd	r4, r5, [r7, #424]	; 0x1a8
 8006b02:	4622      	mov	r2, r4
 8006b04:	462b      	mov	r3, r5
 8006b06:	1891      	adds	r1, r2, r2
 8006b08:	f8c7 1088 	str.w	r1, [r7, #136]	; 0x88
 8006b0c:	415b      	adcs	r3, r3
 8006b0e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8006b12:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8006b16:	4621      	mov	r1, r4
 8006b18:	eb12 0a01 	adds.w	sl, r2, r1
 8006b1c:	4629      	mov	r1, r5
 8006b1e:	eb43 0b01 	adc.w	fp, r3, r1
 8006b22:	f04f 0200 	mov.w	r2, #0
 8006b26:	f04f 0300 	mov.w	r3, #0
 8006b2a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006b2e:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006b32:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006b36:	4692      	mov	sl, r2
 8006b38:	469b      	mov	fp, r3
 8006b3a:	4623      	mov	r3, r4
 8006b3c:	eb1a 0303 	adds.w	r3, sl, r3
 8006b40:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 8006b44:	462b      	mov	r3, r5
 8006b46:	eb4b 0303 	adc.w	r3, fp, r3
 8006b4a:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 8006b4e:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006b52:	685b      	ldr	r3, [r3, #4]
 8006b54:	2200      	movs	r2, #0
 8006b56:	f8c7 3198 	str.w	r3, [r7, #408]	; 0x198
 8006b5a:	f8c7 219c 	str.w	r2, [r7, #412]	; 0x19c
 8006b5e:	e9d7 1266 	ldrd	r1, r2, [r7, #408]	; 0x198
 8006b62:	460b      	mov	r3, r1
 8006b64:	18db      	adds	r3, r3, r3
 8006b66:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8006b6a:	4613      	mov	r3, r2
 8006b6c:	eb42 0303 	adc.w	r3, r2, r3
 8006b70:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8006b74:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8006b78:	e9d7 0168 	ldrd	r0, r1, [r7, #416]	; 0x1a0
 8006b7c:	f7f9 fb88 	bl	8000290 <__aeabi_uldivmod>
 8006b80:	4602      	mov	r2, r0
 8006b82:	460b      	mov	r3, r1
 8006b84:	4b61      	ldr	r3, [pc, #388]	; (8006d0c <UART_SetConfig+0x528>)
 8006b86:	fba3 2302 	umull	r2, r3, r3, r2
 8006b8a:	095b      	lsrs	r3, r3, #5
 8006b8c:	011c      	lsls	r4, r3, #4
 8006b8e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8006b92:	2200      	movs	r2, #0
 8006b94:	f8c7 3190 	str.w	r3, [r7, #400]	; 0x190
 8006b98:	f8c7 2194 	str.w	r2, [r7, #404]	; 0x194
 8006b9c:	e9d7 8964 	ldrd	r8, r9, [r7, #400]	; 0x190
 8006ba0:	4642      	mov	r2, r8
 8006ba2:	464b      	mov	r3, r9
 8006ba4:	1891      	adds	r1, r2, r2
 8006ba6:	67b9      	str	r1, [r7, #120]	; 0x78
 8006ba8:	415b      	adcs	r3, r3
 8006baa:	67fb      	str	r3, [r7, #124]	; 0x7c
 8006bac:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8006bb0:	4641      	mov	r1, r8
 8006bb2:	1851      	adds	r1, r2, r1
 8006bb4:	6739      	str	r1, [r7, #112]	; 0x70
 8006bb6:	4649      	mov	r1, r9
 8006bb8:	414b      	adcs	r3, r1
 8006bba:	677b      	str	r3, [r7, #116]	; 0x74
 8006bbc:	f04f 0200 	mov.w	r2, #0
 8006bc0:	f04f 0300 	mov.w	r3, #0
 8006bc4:	e9d7 ab1c 	ldrd	sl, fp, [r7, #112]	; 0x70
 8006bc8:	4659      	mov	r1, fp
 8006bca:	00cb      	lsls	r3, r1, #3
 8006bcc:	4651      	mov	r1, sl
 8006bce:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006bd2:	4651      	mov	r1, sl
 8006bd4:	00ca      	lsls	r2, r1, #3
 8006bd6:	4610      	mov	r0, r2
 8006bd8:	4619      	mov	r1, r3
 8006bda:	4603      	mov	r3, r0
 8006bdc:	4642      	mov	r2, r8
 8006bde:	189b      	adds	r3, r3, r2
 8006be0:	f8c7 3188 	str.w	r3, [r7, #392]	; 0x188
 8006be4:	464b      	mov	r3, r9
 8006be6:	460a      	mov	r2, r1
 8006be8:	eb42 0303 	adc.w	r3, r2, r3
 8006bec:	f8c7 318c 	str.w	r3, [r7, #396]	; 0x18c
 8006bf0:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006bf4:	685b      	ldr	r3, [r3, #4]
 8006bf6:	2200      	movs	r2, #0
 8006bf8:	f8c7 3180 	str.w	r3, [r7, #384]	; 0x180
 8006bfc:	f8c7 2184 	str.w	r2, [r7, #388]	; 0x184
 8006c00:	e9d7 1260 	ldrd	r1, r2, [r7, #384]	; 0x180
 8006c04:	460b      	mov	r3, r1
 8006c06:	18db      	adds	r3, r3, r3
 8006c08:	66bb      	str	r3, [r7, #104]	; 0x68
 8006c0a:	4613      	mov	r3, r2
 8006c0c:	eb42 0303 	adc.w	r3, r2, r3
 8006c10:	66fb      	str	r3, [r7, #108]	; 0x6c
 8006c12:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 8006c16:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 8006c1a:	f7f9 fb39 	bl	8000290 <__aeabi_uldivmod>
 8006c1e:	4602      	mov	r2, r0
 8006c20:	460b      	mov	r3, r1
 8006c22:	4611      	mov	r1, r2
 8006c24:	4b39      	ldr	r3, [pc, #228]	; (8006d0c <UART_SetConfig+0x528>)
 8006c26:	fba3 2301 	umull	r2, r3, r3, r1
 8006c2a:	095b      	lsrs	r3, r3, #5
 8006c2c:	2264      	movs	r2, #100	; 0x64
 8006c2e:	fb02 f303 	mul.w	r3, r2, r3
 8006c32:	1acb      	subs	r3, r1, r3
 8006c34:	00db      	lsls	r3, r3, #3
 8006c36:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8006c3a:	4b34      	ldr	r3, [pc, #208]	; (8006d0c <UART_SetConfig+0x528>)
 8006c3c:	fba3 2302 	umull	r2, r3, r3, r2
 8006c40:	095b      	lsrs	r3, r3, #5
 8006c42:	005b      	lsls	r3, r3, #1
 8006c44:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8006c48:	441c      	add	r4, r3
 8006c4a:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8006c4e:	2200      	movs	r2, #0
 8006c50:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8006c54:	f8c7 217c 	str.w	r2, [r7, #380]	; 0x17c
 8006c58:	e9d7 895e 	ldrd	r8, r9, [r7, #376]	; 0x178
 8006c5c:	4642      	mov	r2, r8
 8006c5e:	464b      	mov	r3, r9
 8006c60:	1891      	adds	r1, r2, r2
 8006c62:	6639      	str	r1, [r7, #96]	; 0x60
 8006c64:	415b      	adcs	r3, r3
 8006c66:	667b      	str	r3, [r7, #100]	; 0x64
 8006c68:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8006c6c:	4641      	mov	r1, r8
 8006c6e:	1851      	adds	r1, r2, r1
 8006c70:	65b9      	str	r1, [r7, #88]	; 0x58
 8006c72:	4649      	mov	r1, r9
 8006c74:	414b      	adcs	r3, r1
 8006c76:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006c78:	f04f 0200 	mov.w	r2, #0
 8006c7c:	f04f 0300 	mov.w	r3, #0
 8006c80:	e9d7 ab16 	ldrd	sl, fp, [r7, #88]	; 0x58
 8006c84:	4659      	mov	r1, fp
 8006c86:	00cb      	lsls	r3, r1, #3
 8006c88:	4651      	mov	r1, sl
 8006c8a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006c8e:	4651      	mov	r1, sl
 8006c90:	00ca      	lsls	r2, r1, #3
 8006c92:	4610      	mov	r0, r2
 8006c94:	4619      	mov	r1, r3
 8006c96:	4603      	mov	r3, r0
 8006c98:	4642      	mov	r2, r8
 8006c9a:	189b      	adds	r3, r3, r2
 8006c9c:	f8c7 3170 	str.w	r3, [r7, #368]	; 0x170
 8006ca0:	464b      	mov	r3, r9
 8006ca2:	460a      	mov	r2, r1
 8006ca4:	eb42 0303 	adc.w	r3, r2, r3
 8006ca8:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8006cac:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006cb0:	685b      	ldr	r3, [r3, #4]
 8006cb2:	2200      	movs	r2, #0
 8006cb4:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
 8006cb8:	f8c7 216c 	str.w	r2, [r7, #364]	; 0x16c
 8006cbc:	e9d7 125a 	ldrd	r1, r2, [r7, #360]	; 0x168
 8006cc0:	460b      	mov	r3, r1
 8006cc2:	18db      	adds	r3, r3, r3
 8006cc4:	653b      	str	r3, [r7, #80]	; 0x50
 8006cc6:	4613      	mov	r3, r2
 8006cc8:	eb42 0303 	adc.w	r3, r2, r3
 8006ccc:	657b      	str	r3, [r7, #84]	; 0x54
 8006cce:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8006cd2:	e9d7 015c 	ldrd	r0, r1, [r7, #368]	; 0x170
 8006cd6:	f7f9 fadb 	bl	8000290 <__aeabi_uldivmod>
 8006cda:	4602      	mov	r2, r0
 8006cdc:	460b      	mov	r3, r1
 8006cde:	4b0b      	ldr	r3, [pc, #44]	; (8006d0c <UART_SetConfig+0x528>)
 8006ce0:	fba3 1302 	umull	r1, r3, r3, r2
 8006ce4:	095b      	lsrs	r3, r3, #5
 8006ce6:	2164      	movs	r1, #100	; 0x64
 8006ce8:	fb01 f303 	mul.w	r3, r1, r3
 8006cec:	1ad3      	subs	r3, r2, r3
 8006cee:	00db      	lsls	r3, r3, #3
 8006cf0:	3332      	adds	r3, #50	; 0x32
 8006cf2:	4a06      	ldr	r2, [pc, #24]	; (8006d0c <UART_SetConfig+0x528>)
 8006cf4:	fba2 2303 	umull	r2, r3, r2, r3
 8006cf8:	095b      	lsrs	r3, r3, #5
 8006cfa:	f003 0207 	and.w	r2, r3, #7
 8006cfe:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006d02:	681b      	ldr	r3, [r3, #0]
 8006d04:	4422      	add	r2, r4
 8006d06:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 8006d08:	e232      	b.n	8007170 <UART_SetConfig+0x98c>
 8006d0a:	bf00      	nop
 8006d0c:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8006d10:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006d14:	681a      	ldr	r2, [r3, #0]
 8006d16:	4b8d      	ldr	r3, [pc, #564]	; (8006f4c <UART_SetConfig+0x768>)
 8006d18:	429a      	cmp	r2, r3
 8006d1a:	d006      	beq.n	8006d2a <UART_SetConfig+0x546>
 8006d1c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006d20:	681a      	ldr	r2, [r3, #0]
 8006d22:	4b8b      	ldr	r3, [pc, #556]	; (8006f50 <UART_SetConfig+0x76c>)
 8006d24:	429a      	cmp	r2, r3
 8006d26:	f040 8117 	bne.w	8006f58 <UART_SetConfig+0x774>
      pclk = HAL_RCC_GetPCLK2Freq();
 8006d2a:	f7fd fd3d 	bl	80047a8 <HAL_RCC_GetPCLK2Freq>
 8006d2e:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006d32:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8006d36:	2200      	movs	r2, #0
 8006d38:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
 8006d3c:	f8c7 2164 	str.w	r2, [r7, #356]	; 0x164
 8006d40:	e9d7 4558 	ldrd	r4, r5, [r7, #352]	; 0x160
 8006d44:	4622      	mov	r2, r4
 8006d46:	462b      	mov	r3, r5
 8006d48:	1891      	adds	r1, r2, r2
 8006d4a:	64b9      	str	r1, [r7, #72]	; 0x48
 8006d4c:	415b      	adcs	r3, r3
 8006d4e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006d50:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8006d54:	4621      	mov	r1, r4
 8006d56:	eb12 0801 	adds.w	r8, r2, r1
 8006d5a:	4629      	mov	r1, r5
 8006d5c:	eb43 0901 	adc.w	r9, r3, r1
 8006d60:	f04f 0200 	mov.w	r2, #0
 8006d64:	f04f 0300 	mov.w	r3, #0
 8006d68:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006d6c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006d70:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006d74:	4690      	mov	r8, r2
 8006d76:	4699      	mov	r9, r3
 8006d78:	4623      	mov	r3, r4
 8006d7a:	eb18 0303 	adds.w	r3, r8, r3
 8006d7e:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 8006d82:	462b      	mov	r3, r5
 8006d84:	eb49 0303 	adc.w	r3, r9, r3
 8006d88:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c
 8006d8c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006d90:	685b      	ldr	r3, [r3, #4]
 8006d92:	2200      	movs	r2, #0
 8006d94:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8006d98:	f8c7 2154 	str.w	r2, [r7, #340]	; 0x154
 8006d9c:	f04f 0200 	mov.w	r2, #0
 8006da0:	f04f 0300 	mov.w	r3, #0
 8006da4:	e9d7 4554 	ldrd	r4, r5, [r7, #336]	; 0x150
 8006da8:	4629      	mov	r1, r5
 8006daa:	008b      	lsls	r3, r1, #2
 8006dac:	4621      	mov	r1, r4
 8006dae:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006db2:	4621      	mov	r1, r4
 8006db4:	008a      	lsls	r2, r1, #2
 8006db6:	e9d7 0156 	ldrd	r0, r1, [r7, #344]	; 0x158
 8006dba:	f7f9 fa69 	bl	8000290 <__aeabi_uldivmod>
 8006dbe:	4602      	mov	r2, r0
 8006dc0:	460b      	mov	r3, r1
 8006dc2:	4b64      	ldr	r3, [pc, #400]	; (8006f54 <UART_SetConfig+0x770>)
 8006dc4:	fba3 2302 	umull	r2, r3, r3, r2
 8006dc8:	095b      	lsrs	r3, r3, #5
 8006dca:	011c      	lsls	r4, r3, #4
 8006dcc:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8006dd0:	2200      	movs	r2, #0
 8006dd2:	f8c7 3148 	str.w	r3, [r7, #328]	; 0x148
 8006dd6:	f8c7 214c 	str.w	r2, [r7, #332]	; 0x14c
 8006dda:	e9d7 8952 	ldrd	r8, r9, [r7, #328]	; 0x148
 8006dde:	4642      	mov	r2, r8
 8006de0:	464b      	mov	r3, r9
 8006de2:	1891      	adds	r1, r2, r2
 8006de4:	6439      	str	r1, [r7, #64]	; 0x40
 8006de6:	415b      	adcs	r3, r3
 8006de8:	647b      	str	r3, [r7, #68]	; 0x44
 8006dea:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8006dee:	4641      	mov	r1, r8
 8006df0:	1851      	adds	r1, r2, r1
 8006df2:	63b9      	str	r1, [r7, #56]	; 0x38
 8006df4:	4649      	mov	r1, r9
 8006df6:	414b      	adcs	r3, r1
 8006df8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006dfa:	f04f 0200 	mov.w	r2, #0
 8006dfe:	f04f 0300 	mov.w	r3, #0
 8006e02:	e9d7 ab0e 	ldrd	sl, fp, [r7, #56]	; 0x38
 8006e06:	4659      	mov	r1, fp
 8006e08:	00cb      	lsls	r3, r1, #3
 8006e0a:	4651      	mov	r1, sl
 8006e0c:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006e10:	4651      	mov	r1, sl
 8006e12:	00ca      	lsls	r2, r1, #3
 8006e14:	4610      	mov	r0, r2
 8006e16:	4619      	mov	r1, r3
 8006e18:	4603      	mov	r3, r0
 8006e1a:	4642      	mov	r2, r8
 8006e1c:	189b      	adds	r3, r3, r2
 8006e1e:	f8c7 3140 	str.w	r3, [r7, #320]	; 0x140
 8006e22:	464b      	mov	r3, r9
 8006e24:	460a      	mov	r2, r1
 8006e26:	eb42 0303 	adc.w	r3, r2, r3
 8006e2a:	f8c7 3144 	str.w	r3, [r7, #324]	; 0x144
 8006e2e:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006e32:	685b      	ldr	r3, [r3, #4]
 8006e34:	2200      	movs	r2, #0
 8006e36:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
 8006e3a:	f8c7 213c 	str.w	r2, [r7, #316]	; 0x13c
 8006e3e:	f04f 0200 	mov.w	r2, #0
 8006e42:	f04f 0300 	mov.w	r3, #0
 8006e46:	e9d7 894e 	ldrd	r8, r9, [r7, #312]	; 0x138
 8006e4a:	4649      	mov	r1, r9
 8006e4c:	008b      	lsls	r3, r1, #2
 8006e4e:	4641      	mov	r1, r8
 8006e50:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006e54:	4641      	mov	r1, r8
 8006e56:	008a      	lsls	r2, r1, #2
 8006e58:	e9d7 0150 	ldrd	r0, r1, [r7, #320]	; 0x140
 8006e5c:	f7f9 fa18 	bl	8000290 <__aeabi_uldivmod>
 8006e60:	4602      	mov	r2, r0
 8006e62:	460b      	mov	r3, r1
 8006e64:	4b3b      	ldr	r3, [pc, #236]	; (8006f54 <UART_SetConfig+0x770>)
 8006e66:	fba3 1302 	umull	r1, r3, r3, r2
 8006e6a:	095b      	lsrs	r3, r3, #5
 8006e6c:	2164      	movs	r1, #100	; 0x64
 8006e6e:	fb01 f303 	mul.w	r3, r1, r3
 8006e72:	1ad3      	subs	r3, r2, r3
 8006e74:	011b      	lsls	r3, r3, #4
 8006e76:	3332      	adds	r3, #50	; 0x32
 8006e78:	4a36      	ldr	r2, [pc, #216]	; (8006f54 <UART_SetConfig+0x770>)
 8006e7a:	fba2 2303 	umull	r2, r3, r2, r3
 8006e7e:	095b      	lsrs	r3, r3, #5
 8006e80:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8006e84:	441c      	add	r4, r3
 8006e86:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8006e8a:	2200      	movs	r2, #0
 8006e8c:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 8006e90:	f8c7 2134 	str.w	r2, [r7, #308]	; 0x134
 8006e94:	e9d7 894c 	ldrd	r8, r9, [r7, #304]	; 0x130
 8006e98:	4642      	mov	r2, r8
 8006e9a:	464b      	mov	r3, r9
 8006e9c:	1891      	adds	r1, r2, r2
 8006e9e:	6339      	str	r1, [r7, #48]	; 0x30
 8006ea0:	415b      	adcs	r3, r3
 8006ea2:	637b      	str	r3, [r7, #52]	; 0x34
 8006ea4:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8006ea8:	4641      	mov	r1, r8
 8006eaa:	1851      	adds	r1, r2, r1
 8006eac:	62b9      	str	r1, [r7, #40]	; 0x28
 8006eae:	4649      	mov	r1, r9
 8006eb0:	414b      	adcs	r3, r1
 8006eb2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006eb4:	f04f 0200 	mov.w	r2, #0
 8006eb8:	f04f 0300 	mov.w	r3, #0
 8006ebc:	e9d7 ab0a 	ldrd	sl, fp, [r7, #40]	; 0x28
 8006ec0:	4659      	mov	r1, fp
 8006ec2:	00cb      	lsls	r3, r1, #3
 8006ec4:	4651      	mov	r1, sl
 8006ec6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006eca:	4651      	mov	r1, sl
 8006ecc:	00ca      	lsls	r2, r1, #3
 8006ece:	4610      	mov	r0, r2
 8006ed0:	4619      	mov	r1, r3
 8006ed2:	4603      	mov	r3, r0
 8006ed4:	4642      	mov	r2, r8
 8006ed6:	189b      	adds	r3, r3, r2
 8006ed8:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8006edc:	464b      	mov	r3, r9
 8006ede:	460a      	mov	r2, r1
 8006ee0:	eb42 0303 	adc.w	r3, r2, r3
 8006ee4:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8006ee8:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006eec:	685b      	ldr	r3, [r3, #4]
 8006eee:	2200      	movs	r2, #0
 8006ef0:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 8006ef4:	f8c7 2124 	str.w	r2, [r7, #292]	; 0x124
 8006ef8:	f04f 0200 	mov.w	r2, #0
 8006efc:	f04f 0300 	mov.w	r3, #0
 8006f00:	e9d7 8948 	ldrd	r8, r9, [r7, #288]	; 0x120
 8006f04:	4649      	mov	r1, r9
 8006f06:	008b      	lsls	r3, r1, #2
 8006f08:	4641      	mov	r1, r8
 8006f0a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006f0e:	4641      	mov	r1, r8
 8006f10:	008a      	lsls	r2, r1, #2
 8006f12:	e9d7 014a 	ldrd	r0, r1, [r7, #296]	; 0x128
 8006f16:	f7f9 f9bb 	bl	8000290 <__aeabi_uldivmod>
 8006f1a:	4602      	mov	r2, r0
 8006f1c:	460b      	mov	r3, r1
 8006f1e:	4b0d      	ldr	r3, [pc, #52]	; (8006f54 <UART_SetConfig+0x770>)
 8006f20:	fba3 1302 	umull	r1, r3, r3, r2
 8006f24:	095b      	lsrs	r3, r3, #5
 8006f26:	2164      	movs	r1, #100	; 0x64
 8006f28:	fb01 f303 	mul.w	r3, r1, r3
 8006f2c:	1ad3      	subs	r3, r2, r3
 8006f2e:	011b      	lsls	r3, r3, #4
 8006f30:	3332      	adds	r3, #50	; 0x32
 8006f32:	4a08      	ldr	r2, [pc, #32]	; (8006f54 <UART_SetConfig+0x770>)
 8006f34:	fba2 2303 	umull	r2, r3, r2, r3
 8006f38:	095b      	lsrs	r3, r3, #5
 8006f3a:	f003 020f 	and.w	r2, r3, #15
 8006f3e:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006f42:	681b      	ldr	r3, [r3, #0]
 8006f44:	4422      	add	r2, r4
 8006f46:	609a      	str	r2, [r3, #8]
 8006f48:	e112      	b.n	8007170 <UART_SetConfig+0x98c>
 8006f4a:	bf00      	nop
 8006f4c:	40011000 	.word	0x40011000
 8006f50:	40011400 	.word	0x40011400
 8006f54:	51eb851f 	.word	0x51eb851f
      pclk = HAL_RCC_GetPCLK1Freq();
 8006f58:	f7fd fc12 	bl	8004780 <HAL_RCC_GetPCLK1Freq>
 8006f5c:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8006f60:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8006f64:	2200      	movs	r2, #0
 8006f66:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8006f6a:	f8c7 211c 	str.w	r2, [r7, #284]	; 0x11c
 8006f6e:	e9d7 8946 	ldrd	r8, r9, [r7, #280]	; 0x118
 8006f72:	4642      	mov	r2, r8
 8006f74:	464b      	mov	r3, r9
 8006f76:	1891      	adds	r1, r2, r2
 8006f78:	6239      	str	r1, [r7, #32]
 8006f7a:	415b      	adcs	r3, r3
 8006f7c:	627b      	str	r3, [r7, #36]	; 0x24
 8006f7e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006f82:	4641      	mov	r1, r8
 8006f84:	1854      	adds	r4, r2, r1
 8006f86:	4649      	mov	r1, r9
 8006f88:	eb43 0501 	adc.w	r5, r3, r1
 8006f8c:	f04f 0200 	mov.w	r2, #0
 8006f90:	f04f 0300 	mov.w	r3, #0
 8006f94:	00eb      	lsls	r3, r5, #3
 8006f96:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006f9a:	00e2      	lsls	r2, r4, #3
 8006f9c:	4614      	mov	r4, r2
 8006f9e:	461d      	mov	r5, r3
 8006fa0:	4643      	mov	r3, r8
 8006fa2:	18e3      	adds	r3, r4, r3
 8006fa4:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 8006fa8:	464b      	mov	r3, r9
 8006faa:	eb45 0303 	adc.w	r3, r5, r3
 8006fae:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 8006fb2:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8006fb6:	685b      	ldr	r3, [r3, #4]
 8006fb8:	2200      	movs	r2, #0
 8006fba:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8006fbe:	f8c7 210c 	str.w	r2, [r7, #268]	; 0x10c
 8006fc2:	f04f 0200 	mov.w	r2, #0
 8006fc6:	f04f 0300 	mov.w	r3, #0
 8006fca:	e9d7 4542 	ldrd	r4, r5, [r7, #264]	; 0x108
 8006fce:	4629      	mov	r1, r5
 8006fd0:	008b      	lsls	r3, r1, #2
 8006fd2:	4621      	mov	r1, r4
 8006fd4:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006fd8:	4621      	mov	r1, r4
 8006fda:	008a      	lsls	r2, r1, #2
 8006fdc:	e9d7 0144 	ldrd	r0, r1, [r7, #272]	; 0x110
 8006fe0:	f7f9 f956 	bl	8000290 <__aeabi_uldivmod>
 8006fe4:	4602      	mov	r2, r0
 8006fe6:	460b      	mov	r3, r1
 8006fe8:	4b64      	ldr	r3, [pc, #400]	; (800717c <UART_SetConfig+0x998>)
 8006fea:	fba3 2302 	umull	r2, r3, r3, r2
 8006fee:	095b      	lsrs	r3, r3, #5
 8006ff0:	011c      	lsls	r4, r3, #4
 8006ff2:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8006ff6:	2200      	movs	r2, #0
 8006ff8:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 8006ffc:	f8c7 2104 	str.w	r2, [r7, #260]	; 0x104
 8007000:	e9d7 8940 	ldrd	r8, r9, [r7, #256]	; 0x100
 8007004:	4642      	mov	r2, r8
 8007006:	464b      	mov	r3, r9
 8007008:	1891      	adds	r1, r2, r2
 800700a:	61b9      	str	r1, [r7, #24]
 800700c:	415b      	adcs	r3, r3
 800700e:	61fb      	str	r3, [r7, #28]
 8007010:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007014:	4641      	mov	r1, r8
 8007016:	1851      	adds	r1, r2, r1
 8007018:	6139      	str	r1, [r7, #16]
 800701a:	4649      	mov	r1, r9
 800701c:	414b      	adcs	r3, r1
 800701e:	617b      	str	r3, [r7, #20]
 8007020:	f04f 0200 	mov.w	r2, #0
 8007024:	f04f 0300 	mov.w	r3, #0
 8007028:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800702c:	4659      	mov	r1, fp
 800702e:	00cb      	lsls	r3, r1, #3
 8007030:	4651      	mov	r1, sl
 8007032:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007036:	4651      	mov	r1, sl
 8007038:	00ca      	lsls	r2, r1, #3
 800703a:	4610      	mov	r0, r2
 800703c:	4619      	mov	r1, r3
 800703e:	4603      	mov	r3, r0
 8007040:	4642      	mov	r2, r8
 8007042:	189b      	adds	r3, r3, r2
 8007044:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8007048:	464b      	mov	r3, r9
 800704a:	460a      	mov	r2, r1
 800704c:	eb42 0303 	adc.w	r3, r2, r3
 8007050:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8007054:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007058:	685b      	ldr	r3, [r3, #4]
 800705a:	2200      	movs	r2, #0
 800705c:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8007060:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
 8007064:	f04f 0200 	mov.w	r2, #0
 8007068:	f04f 0300 	mov.w	r3, #0
 800706c:	e9d7 893c 	ldrd	r8, r9, [r7, #240]	; 0xf0
 8007070:	4649      	mov	r1, r9
 8007072:	008b      	lsls	r3, r1, #2
 8007074:	4641      	mov	r1, r8
 8007076:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800707a:	4641      	mov	r1, r8
 800707c:	008a      	lsls	r2, r1, #2
 800707e:	e9d7 013e 	ldrd	r0, r1, [r7, #248]	; 0xf8
 8007082:	f7f9 f905 	bl	8000290 <__aeabi_uldivmod>
 8007086:	4602      	mov	r2, r0
 8007088:	460b      	mov	r3, r1
 800708a:	4b3c      	ldr	r3, [pc, #240]	; (800717c <UART_SetConfig+0x998>)
 800708c:	fba3 1302 	umull	r1, r3, r3, r2
 8007090:	095b      	lsrs	r3, r3, #5
 8007092:	2164      	movs	r1, #100	; 0x64
 8007094:	fb01 f303 	mul.w	r3, r1, r3
 8007098:	1ad3      	subs	r3, r2, r3
 800709a:	011b      	lsls	r3, r3, #4
 800709c:	3332      	adds	r3, #50	; 0x32
 800709e:	4a37      	ldr	r2, [pc, #220]	; (800717c <UART_SetConfig+0x998>)
 80070a0:	fba2 2303 	umull	r2, r3, r2, r3
 80070a4:	095b      	lsrs	r3, r3, #5
 80070a6:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80070aa:	441c      	add	r4, r3
 80070ac:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80070b0:	2200      	movs	r2, #0
 80070b2:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 80070b6:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 80070ba:	e9d7 893a 	ldrd	r8, r9, [r7, #232]	; 0xe8
 80070be:	4642      	mov	r2, r8
 80070c0:	464b      	mov	r3, r9
 80070c2:	1891      	adds	r1, r2, r2
 80070c4:	60b9      	str	r1, [r7, #8]
 80070c6:	415b      	adcs	r3, r3
 80070c8:	60fb      	str	r3, [r7, #12]
 80070ca:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80070ce:	4641      	mov	r1, r8
 80070d0:	1851      	adds	r1, r2, r1
 80070d2:	6039      	str	r1, [r7, #0]
 80070d4:	4649      	mov	r1, r9
 80070d6:	414b      	adcs	r3, r1
 80070d8:	607b      	str	r3, [r7, #4]
 80070da:	f04f 0200 	mov.w	r2, #0
 80070de:	f04f 0300 	mov.w	r3, #0
 80070e2:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80070e6:	4659      	mov	r1, fp
 80070e8:	00cb      	lsls	r3, r1, #3
 80070ea:	4651      	mov	r1, sl
 80070ec:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80070f0:	4651      	mov	r1, sl
 80070f2:	00ca      	lsls	r2, r1, #3
 80070f4:	4610      	mov	r0, r2
 80070f6:	4619      	mov	r1, r3
 80070f8:	4603      	mov	r3, r0
 80070fa:	4642      	mov	r2, r8
 80070fc:	189b      	adds	r3, r3, r2
 80070fe:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8007102:	464b      	mov	r3, r9
 8007104:	460a      	mov	r2, r1
 8007106:	eb42 0303 	adc.w	r3, r2, r3
 800710a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800710e:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007112:	685b      	ldr	r3, [r3, #4]
 8007114:	2200      	movs	r2, #0
 8007116:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800711a:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800711e:	f04f 0200 	mov.w	r2, #0
 8007122:	f04f 0300 	mov.w	r3, #0
 8007126:	e9d7 8936 	ldrd	r8, r9, [r7, #216]	; 0xd8
 800712a:	4649      	mov	r1, r9
 800712c:	008b      	lsls	r3, r1, #2
 800712e:	4641      	mov	r1, r8
 8007130:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007134:	4641      	mov	r1, r8
 8007136:	008a      	lsls	r2, r1, #2
 8007138:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800713c:	f7f9 f8a8 	bl	8000290 <__aeabi_uldivmod>
 8007140:	4602      	mov	r2, r0
 8007142:	460b      	mov	r3, r1
 8007144:	4b0d      	ldr	r3, [pc, #52]	; (800717c <UART_SetConfig+0x998>)
 8007146:	fba3 1302 	umull	r1, r3, r3, r2
 800714a:	095b      	lsrs	r3, r3, #5
 800714c:	2164      	movs	r1, #100	; 0x64
 800714e:	fb01 f303 	mul.w	r3, r1, r3
 8007152:	1ad3      	subs	r3, r2, r3
 8007154:	011b      	lsls	r3, r3, #4
 8007156:	3332      	adds	r3, #50	; 0x32
 8007158:	4a08      	ldr	r2, [pc, #32]	; (800717c <UART_SetConfig+0x998>)
 800715a:	fba2 2303 	umull	r2, r3, r2, r3
 800715e:	095b      	lsrs	r3, r3, #5
 8007160:	f003 020f 	and.w	r2, r3, #15
 8007164:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007168:	681b      	ldr	r3, [r3, #0]
 800716a:	4422      	add	r2, r4
 800716c:	609a      	str	r2, [r3, #8]
}
 800716e:	e7ff      	b.n	8007170 <UART_SetConfig+0x98c>
 8007170:	bf00      	nop
 8007172:	f507 7702 	add.w	r7, r7, #520	; 0x208
 8007176:	46bd      	mov	sp, r7
 8007178:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800717c:	51eb851f 	.word	0x51eb851f

08007180 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007180:	b480      	push	{r7}
 8007182:	b085      	sub	sp, #20
 8007184:	af00      	add	r7, sp, #0
 8007186:	6078      	str	r0, [r7, #4]
 8007188:	6039      	str	r1, [r7, #0]
  uint32_t tmpr1 = 0U;
 800718a:	2300      	movs	r3, #0
 800718c:	60fb      	str	r3, [r7, #12]
  uint32_t tmpr2 = 0U;
 800718e:	2300      	movs	r3, #0
 8007190:	60bb      	str	r3, [r7, #8]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007192:	683b      	ldr	r3, [r7, #0]
 8007194:	681b      	ldr	r3, [r3, #0]
 8007196:	2b01      	cmp	r3, #1
 8007198:	d029      	beq.n	80071ee <FMC_SDRAM_Init+0x6e>
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80071a0:	68fb      	ldr	r3, [r7, #12]
 80071a2:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 80071a6:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 80071aa:	60fb      	str	r3, [r7, #12]
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80071ac:	683b      	ldr	r3, [r7, #0]
 80071ae:	685a      	ldr	r2, [r3, #4]
                                               Init->RowBitsNumber      |\
 80071b0:	683b      	ldr	r3, [r7, #0]
 80071b2:	689b      	ldr	r3, [r3, #8]
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80071b4:	431a      	orrs	r2, r3
                                               Init->MemoryDataWidth    |\
 80071b6:	683b      	ldr	r3, [r7, #0]
 80071b8:	68db      	ldr	r3, [r3, #12]
                                               Init->RowBitsNumber      |\
 80071ba:	431a      	orrs	r2, r3
                                               Init->InternalBankNumber |\
 80071bc:	683b      	ldr	r3, [r7, #0]
 80071be:	691b      	ldr	r3, [r3, #16]
                                               Init->MemoryDataWidth    |\
 80071c0:	431a      	orrs	r2, r3
                                               Init->CASLatency         |\
 80071c2:	683b      	ldr	r3, [r7, #0]
 80071c4:	695b      	ldr	r3, [r3, #20]
                                               Init->InternalBankNumber |\
 80071c6:	431a      	orrs	r2, r3
                                               Init->WriteProtection    |\
 80071c8:	683b      	ldr	r3, [r7, #0]
 80071ca:	699b      	ldr	r3, [r3, #24]
                                               Init->CASLatency         |\
 80071cc:	431a      	orrs	r2, r3
                                               Init->SDClockPeriod      |\
 80071ce:	683b      	ldr	r3, [r7, #0]
 80071d0:	69db      	ldr	r3, [r3, #28]
                                               Init->WriteProtection    |\
 80071d2:	431a      	orrs	r2, r3
                                               Init->ReadBurst          |\
 80071d4:	683b      	ldr	r3, [r7, #0]
 80071d6:	6a1b      	ldr	r3, [r3, #32]
                                               Init->SDClockPeriod      |\
 80071d8:	431a      	orrs	r2, r3
                                               Init->ReadPipeDelay
 80071da:	683b      	ldr	r3, [r7, #0]
 80071dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                                               Init->ReadBurst          |\
 80071de:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80071e0:	68fa      	ldr	r2, [r7, #12]
 80071e2:	4313      	orrs	r3, r2
 80071e4:	60fb      	str	r3, [r7, #12]
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80071e6:	687b      	ldr	r3, [r7, #4]
 80071e8:	68fa      	ldr	r2, [r7, #12]
 80071ea:	601a      	str	r2, [r3, #0]
 80071ec:	e034      	b.n	8007258 <FMC_SDRAM_Init+0xd8>
  }
  else /* FMC_Bank2_SDRAM */                      
  {
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	681b      	ldr	r3, [r3, #0]
 80071f2:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80071f4:	68fb      	ldr	r3, [r7, #12]
 80071f6:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 80071fa:	60fb      	str	r3, [r7, #12]
    
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80071fc:	683b      	ldr	r3, [r7, #0]
 80071fe:	69da      	ldr	r2, [r3, #28]
                        Init->ReadBurst          |\
 8007200:	683b      	ldr	r3, [r7, #0]
 8007202:	6a1b      	ldr	r3, [r3, #32]
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007204:	431a      	orrs	r2, r3
                        Init->ReadPipeDelay);  
 8007206:	683b      	ldr	r3, [r7, #0]
 8007208:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                        Init->ReadBurst          |\
 800720a:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800720c:	68fa      	ldr	r2, [r7, #12]
 800720e:	4313      	orrs	r3, r2
 8007210:	60fb      	str	r3, [r7, #12]
    
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8007212:	687b      	ldr	r3, [r7, #4]
 8007214:	685b      	ldr	r3, [r3, #4]
 8007216:	60bb      	str	r3, [r7, #8]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007218:	68bb      	ldr	r3, [r7, #8]
 800721a:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800721e:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8007222:	60bb      	str	r3, [r7, #8]
                          FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                          FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));

    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007224:	683b      	ldr	r3, [r7, #0]
 8007226:	685a      	ldr	r2, [r3, #4]
                       Init->RowBitsNumber      |\
 8007228:	683b      	ldr	r3, [r7, #0]
 800722a:	689b      	ldr	r3, [r3, #8]
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800722c:	431a      	orrs	r2, r3
                       Init->MemoryDataWidth    |\
 800722e:	683b      	ldr	r3, [r7, #0]
 8007230:	68db      	ldr	r3, [r3, #12]
                       Init->RowBitsNumber      |\
 8007232:	431a      	orrs	r2, r3
                       Init->InternalBankNumber |\
 8007234:	683b      	ldr	r3, [r7, #0]
 8007236:	691b      	ldr	r3, [r3, #16]
                       Init->MemoryDataWidth    |\
 8007238:	431a      	orrs	r2, r3
                       Init->CASLatency         |\
 800723a:	683b      	ldr	r3, [r7, #0]
 800723c:	695b      	ldr	r3, [r3, #20]
                       Init->InternalBankNumber |\
 800723e:	431a      	orrs	r2, r3
                       Init->WriteProtection);
 8007240:	683b      	ldr	r3, [r7, #0]
 8007242:	699b      	ldr	r3, [r3, #24]
                       Init->CASLatency         |\
 8007244:	4313      	orrs	r3, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007246:	68ba      	ldr	r2, [r7, #8]
 8007248:	4313      	orrs	r3, r2
 800724a:	60bb      	str	r3, [r7, #8]

    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800724c:	687b      	ldr	r3, [r7, #4]
 800724e:	68fa      	ldr	r2, [r7, #12]
 8007250:	601a      	str	r2, [r3, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007252:	687b      	ldr	r3, [r7, #4]
 8007254:	68ba      	ldr	r2, [r7, #8]
 8007256:	605a      	str	r2, [r3, #4]
  }  
  
  return HAL_OK;
 8007258:	2300      	movs	r3, #0
}
 800725a:	4618      	mov	r0, r3
 800725c:	3714      	adds	r7, #20
 800725e:	46bd      	mov	sp, r7
 8007260:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007264:	4770      	bx	lr

08007266 <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8007266:	b480      	push	{r7}
 8007268:	b087      	sub	sp, #28
 800726a:	af00      	add	r7, sp, #0
 800726c:	60f8      	str	r0, [r7, #12]
 800726e:	60b9      	str	r1, [r7, #8]
 8007270:	607a      	str	r2, [r7, #4]
  uint32_t tmpr1 = 0U;
 8007272:	2300      	movs	r3, #0
 8007274:	617b      	str	r3, [r7, #20]
  uint32_t tmpr2 = 0U;
 8007276:	2300      	movs	r3, #0
 8007278:	613b      	str	r3, [r7, #16]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	2b01      	cmp	r3, #1
 800727e:	d02e      	beq.n	80072de <FMC_SDRAM_Timing_Init+0x78>
  { 
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007280:	68fb      	ldr	r3, [r7, #12]
 8007282:	689b      	ldr	r3, [r3, #8]
 8007284:	617b      	str	r3, [r7, #20]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007286:	697b      	ldr	r3, [r7, #20]
 8007288:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800728c:	617b      	str	r3, [r7, #20]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800728e:	68bb      	ldr	r3, [r7, #8]
 8007290:	681b      	ldr	r3, [r3, #0]
 8007292:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007294:	68bb      	ldr	r3, [r7, #8]
 8007296:	685b      	ldr	r3, [r3, #4]
 8007298:	3b01      	subs	r3, #1
 800729a:	011b      	lsls	r3, r3, #4
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800729c:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800729e:	68bb      	ldr	r3, [r7, #8]
 80072a0:	689b      	ldr	r3, [r3, #8]
 80072a2:	3b01      	subs	r3, #1
 80072a4:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80072a6:	431a      	orrs	r2, r3
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80072a8:	68bb      	ldr	r3, [r7, #8]
 80072aa:	68db      	ldr	r3, [r3, #12]
 80072ac:	3b01      	subs	r3, #1
 80072ae:	031b      	lsls	r3, r3, #12
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80072b0:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80072b2:	68bb      	ldr	r3, [r7, #8]
 80072b4:	691b      	ldr	r3, [r3, #16]
 80072b6:	3b01      	subs	r3, #1
 80072b8:	041b      	lsls	r3, r3, #16
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80072ba:	431a      	orrs	r2, r3
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80072bc:	68bb      	ldr	r3, [r7, #8]
 80072be:	695b      	ldr	r3, [r3, #20]
 80072c0:	3b01      	subs	r3, #1
 80072c2:	051b      	lsls	r3, r3, #20
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80072c4:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U));
 80072c6:	68bb      	ldr	r3, [r7, #8]
 80072c8:	699b      	ldr	r3, [r3, #24]
 80072ca:	3b01      	subs	r3, #1
 80072cc:	061b      	lsls	r3, r3, #24
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80072ce:	4313      	orrs	r3, r2
 80072d0:	697a      	ldr	r2, [r7, #20]
 80072d2:	4313      	orrs	r3, r2
 80072d4:	617b      	str	r3, [r7, #20]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80072d6:	68fb      	ldr	r3, [r7, #12]
 80072d8:	697a      	ldr	r2, [r7, #20]
 80072da:	609a      	str	r2, [r3, #8]
 80072dc:	e03b      	b.n	8007356 <FMC_SDRAM_Timing_Init+0xf0>
  }
   else /* FMC_Bank2_SDRAM */
  {
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80072de:	68fb      	ldr	r3, [r7, #12]
 80072e0:	689b      	ldr	r3, [r3, #8]
 80072e2:	617b      	str	r3, [r7, #20]
    
    /* Clear TRC and TRP bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80072e4:	697b      	ldr	r3, [r7, #20]
 80072e6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80072ea:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80072ee:	617b      	str	r3, [r7, #20]
    
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80072f0:	68bb      	ldr	r3, [r7, #8]
 80072f2:	68db      	ldr	r3, [r3, #12]
 80072f4:	3b01      	subs	r3, #1
 80072f6:	031a      	lsls	r2, r3, #12
                        (((Timing->RPDelay)-1U) << 20U)); 
 80072f8:	68bb      	ldr	r3, [r7, #8]
 80072fa:	695b      	ldr	r3, [r3, #20]
 80072fc:	3b01      	subs	r3, #1
 80072fe:	051b      	lsls	r3, r3, #20
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007300:	4313      	orrs	r3, r2
 8007302:	697a      	ldr	r2, [r7, #20]
 8007304:	4313      	orrs	r3, r2
 8007306:	617b      	str	r3, [r7, #20]
    
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007308:	68fb      	ldr	r3, [r7, #12]
 800730a:	68db      	ldr	r3, [r3, #12]
 800730c:	613b      	str	r3, [r7, #16]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800730e:	693b      	ldr	r3, [r7, #16]
 8007310:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8007314:	613b      	str	r3, [r7, #16]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007316:	68bb      	ldr	r3, [r7, #8]
 8007318:	681b      	ldr	r3, [r3, #0]
 800731a:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 800731c:	68bb      	ldr	r3, [r7, #8]
 800731e:	685b      	ldr	r3, [r3, #4]
 8007320:	3b01      	subs	r3, #1
 8007322:	011b      	lsls	r3, r3, #4
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007324:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 8007326:	68bb      	ldr	r3, [r7, #8]
 8007328:	689b      	ldr	r3, [r3, #8]
 800732a:	3b01      	subs	r3, #1
 800732c:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 800732e:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)     |\
 8007330:	68bb      	ldr	r3, [r7, #8]
 8007332:	691b      	ldr	r3, [r3, #16]
 8007334:	3b01      	subs	r3, #1
 8007336:	041b      	lsls	r3, r3, #16
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 8007338:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U)));   
 800733a:	68bb      	ldr	r3, [r7, #8]
 800733c:	699b      	ldr	r3, [r3, #24]
 800733e:	3b01      	subs	r3, #1
 8007340:	061b      	lsls	r3, r3, #24
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007342:	4313      	orrs	r3, r2
 8007344:	693a      	ldr	r2, [r7, #16]
 8007346:	4313      	orrs	r3, r2
 8007348:	613b      	str	r3, [r7, #16]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800734a:	68fb      	ldr	r3, [r7, #12]
 800734c:	697a      	ldr	r2, [r7, #20]
 800734e:	609a      	str	r2, [r3, #8]
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8007350:	68fb      	ldr	r3, [r7, #12]
 8007352:	693a      	ldr	r2, [r7, #16]
 8007354:	60da      	str	r2, [r3, #12]
  }
  return HAL_OK;
 8007356:	2300      	movs	r3, #0
}
 8007358:	4618      	mov	r0, r3
 800735a:	371c      	adds	r7, #28
 800735c:	46bd      	mov	sp, r7
 800735e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007362:	4770      	bx	lr

08007364 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007364:	b580      	push	{r7, lr}
 8007366:	b086      	sub	sp, #24
 8007368:	af00      	add	r7, sp, #0
 800736a:	60f8      	str	r0, [r7, #12]
 800736c:	60b9      	str	r1, [r7, #8]
 800736e:	607a      	str	r2, [r7, #4]
  __IO uint32_t tmpr = 0U;
 8007370:	2300      	movs	r3, #0
 8007372:	613b      	str	r3, [r7, #16]
  uint32_t tickstart = 0U;
 8007374:	2300      	movs	r3, #0
 8007376:	617b      	str	r3, [r7, #20]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007378:	68bb      	ldr	r3, [r7, #8]
 800737a:	681a      	ldr	r2, [r3, #0]
                    (Command->CommandTarget)                |\
 800737c:	68bb      	ldr	r3, [r7, #8]
 800737e:	685b      	ldr	r3, [r3, #4]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007380:	431a      	orrs	r2, r3
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007382:	68bb      	ldr	r3, [r7, #8]
 8007384:	689b      	ldr	r3, [r3, #8]
 8007386:	3b01      	subs	r3, #1
 8007388:	015b      	lsls	r3, r3, #5
                    (Command->CommandTarget)                |\
 800738a:	431a      	orrs	r2, r3
                    ((Command->ModeRegisterDefinition) << 9U)
 800738c:	68bb      	ldr	r3, [r7, #8]
 800738e:	68db      	ldr	r3, [r3, #12]
 8007390:	025b      	lsls	r3, r3, #9
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007392:	4313      	orrs	r3, r2
 8007394:	613b      	str	r3, [r7, #16]
                    );
    
  Device->SDCMR = tmpr;
 8007396:	693a      	ldr	r2, [r7, #16]
 8007398:	68fb      	ldr	r3, [r7, #12]
 800739a:	611a      	str	r2, [r3, #16]

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800739c:	f7fa febc 	bl	8002118 <HAL_GetTick>
 80073a0:	6178      	str	r0, [r7, #20]

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80073a2:	e010      	b.n	80073c6 <FMC_SDRAM_SendCommand+0x62>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80073aa:	d00c      	beq.n	80073c6 <FMC_SDRAM_SendCommand+0x62>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	2b00      	cmp	r3, #0
 80073b0:	d007      	beq.n	80073c2 <FMC_SDRAM_SendCommand+0x5e>
 80073b2:	f7fa feb1 	bl	8002118 <HAL_GetTick>
 80073b6:	4602      	mov	r2, r0
 80073b8:	697b      	ldr	r3, [r7, #20]
 80073ba:	1ad3      	subs	r3, r2, r3
 80073bc:	687a      	ldr	r2, [r7, #4]
 80073be:	429a      	cmp	r2, r3
 80073c0:	d201      	bcs.n	80073c6 <FMC_SDRAM_SendCommand+0x62>
      {
        return HAL_TIMEOUT;
 80073c2:	2303      	movs	r3, #3
 80073c4:	e006      	b.n	80073d4 <FMC_SDRAM_SendCommand+0x70>
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80073c6:	68fb      	ldr	r3, [r7, #12]
 80073c8:	699b      	ldr	r3, [r3, #24]
 80073ca:	f003 0320 	and.w	r3, r3, #32
 80073ce:	2b20      	cmp	r3, #32
 80073d0:	d0e8      	beq.n	80073a4 <FMC_SDRAM_SendCommand+0x40>
      }
    }
  }

  return HAL_OK;
 80073d2:	2300      	movs	r3, #0
}
 80073d4:	4618      	mov	r0, r3
 80073d6:	3718      	adds	r7, #24
 80073d8:	46bd      	mov	sp, r7
 80073da:	bd80      	pop	{r7, pc}

080073dc <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance  
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 80073dc:	b480      	push	{r7}
 80073de:	b083      	sub	sp, #12
 80073e0:	af00      	add	r7, sp, #0
 80073e2:	6078      	str	r0, [r7, #4]
 80073e4:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80073e6:	687b      	ldr	r3, [r7, #4]
 80073e8:	695a      	ldr	r2, [r3, #20]
 80073ea:	683b      	ldr	r3, [r7, #0]
 80073ec:	005b      	lsls	r3, r3, #1
 80073ee:	431a      	orrs	r2, r3
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	615a      	str	r2, [r3, #20]
  
  return HAL_OK;   
 80073f4:	2300      	movs	r3, #0
}
 80073f6:	4618      	mov	r0, r3
 80073f8:	370c      	adds	r7, #12
 80073fa:	46bd      	mov	sp, r7
 80073fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007400:	4770      	bx	lr

08007402 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8007402:	b580      	push	{r7, lr}
 8007404:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8007406:	f003 f97b 	bl	800a700 <touchgfx_init>
}
 800740a:	bf00      	nop
 800740c:	bd80      	pop	{r7, pc}

0800740e <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800740e:	b580      	push	{r7, lr}
 8007410:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8007412:	f003 f9a5 	bl	800a760 <touchgfx_taskEntry>
}
 8007416:	bf00      	nop
 8007418:	bd80      	pop	{r7, pc}
	...

0800741c <_ZN8touchgfx12FontProviderD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~FontProvider()
 800741c:	b480      	push	{r7}
 800741e:	b083      	sub	sp, #12
 8007420:	af00      	add	r7, sp, #0
 8007422:	6078      	str	r0, [r7, #4]
    {
 8007424:	4a04      	ldr	r2, [pc, #16]	; (8007438 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8007426:	687b      	ldr	r3, [r7, #4]
 8007428:	601a      	str	r2, [r3, #0]
    }
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	4618      	mov	r0, r3
 800742e:	370c      	adds	r7, #12
 8007430:	46bd      	mov	sp, r7
 8007432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007436:	4770      	bx	lr
 8007438:	0801c200 	.word	0x0801c200

0800743c <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800743c:	b580      	push	{r7, lr}
 800743e:	b082      	sub	sp, #8
 8007440:	af00      	add	r7, sp, #0
 8007442:	6078      	str	r0, [r7, #4]
    }
 8007444:	6878      	ldr	r0, [r7, #4]
 8007446:	f7ff ffe9 	bl	800741c <_ZN8touchgfx12FontProviderD1Ev>
 800744a:	2104      	movs	r1, #4
 800744c:	6878      	ldr	r0, [r7, #4]
 800744e:	f013 fa36 	bl	801a8be <_ZdlPvj>
 8007452:	687b      	ldr	r3, [r7, #4]
 8007454:	4618      	mov	r0, r3
 8007456:	3708      	adds	r7, #8
 8007458:	46bd      	mov	sp, r7
 800745a:	bd80      	pop	{r7, pc}

0800745c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800745c:	b580      	push	{r7, lr}
 800745e:	b082      	sub	sp, #8
 8007460:	af00      	add	r7, sp, #0
 8007462:	6078      	str	r0, [r7, #4]
 8007464:	460b      	mov	r3, r1
 8007466:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8007468:	887b      	ldrh	r3, [r7, #2]
 800746a:	2b02      	cmp	r3, #2
 800746c:	d010      	beq.n	8007490 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800746e:	2b02      	cmp	r3, #2
 8007470:	dc13      	bgt.n	800749a <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 8007472:	2b00      	cmp	r3, #0
 8007474:	d002      	beq.n	800747c <_ZN23ApplicationFontProvider7getFontEt+0x20>
 8007476:	2b01      	cmp	r3, #1
 8007478:	d005      	beq.n	8007486 <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800747a:	e00e      	b.n	800749a <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800747c:	f001 fd36 	bl	8008eec <_ZN17TypedTextDatabase8getFontsEv>
 8007480:	4603      	mov	r3, r0
 8007482:	681b      	ldr	r3, [r3, #0]
 8007484:	e00a      	b.n	800749c <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8007486:	f001 fd31 	bl	8008eec <_ZN17TypedTextDatabase8getFontsEv>
 800748a:	4603      	mov	r3, r0
 800748c:	685b      	ldr	r3, [r3, #4]
 800748e:	e005      	b.n	800749c <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8007490:	f001 fd2c 	bl	8008eec <_ZN17TypedTextDatabase8getFontsEv>
 8007494:	4603      	mov	r3, r0
 8007496:	689b      	ldr	r3, [r3, #8]
 8007498:	e000      	b.n	800749c <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800749a:	2300      	movs	r3, #0
    }
}
 800749c:	4618      	mov	r0, r3
 800749e:	3708      	adds	r7, #8
 80074a0:	46bd      	mov	sp, r7
 80074a2:	bd80      	pop	{r7, pc}

080074a4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80074a4:	b580      	push	{r7, lr}
 80074a6:	b082      	sub	sp, #8
 80074a8:	af00      	add	r7, sp, #0
 80074aa:	6078      	str	r0, [r7, #4]
 80074ac:	4a05      	ldr	r2, [pc, #20]	; (80074c4 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	601a      	str	r2, [r3, #0]
 80074b2:	687b      	ldr	r3, [r7, #4]
 80074b4:	4618      	mov	r0, r3
 80074b6:	f7ff ffb1 	bl	800741c <_ZN8touchgfx12FontProviderD1Ev>
 80074ba:	687b      	ldr	r3, [r7, #4]
 80074bc:	4618      	mov	r0, r3
 80074be:	3708      	adds	r7, #8
 80074c0:	46bd      	mov	sp, r7
 80074c2:	bd80      	pop	{r7, pc}
 80074c4:	0801c1ec 	.word	0x0801c1ec

080074c8 <_ZN23ApplicationFontProviderD0Ev>:
 80074c8:	b580      	push	{r7, lr}
 80074ca:	b082      	sub	sp, #8
 80074cc:	af00      	add	r7, sp, #0
 80074ce:	6078      	str	r0, [r7, #4]
 80074d0:	6878      	ldr	r0, [r7, #4]
 80074d2:	f7ff ffe7 	bl	80074a4 <_ZN23ApplicationFontProviderD1Ev>
 80074d6:	2104      	movs	r1, #4
 80074d8:	6878      	ldr	r0, [r7, #4]
 80074da:	f013 f9f0 	bl	801a8be <_ZdlPvj>
 80074de:	687b      	ldr	r3, [r7, #4]
 80074e0:	4618      	mov	r0, r3
 80074e2:	3708      	adds	r7, #8
 80074e4:	46bd      	mov	sp, r7
 80074e6:	bd80      	pop	{r7, pc}

080074e8 <_ZN8touchgfx4FontD1Ev>:
 *        It provides utility functions such as obtaining string width and font height.
 */
class Font
{
public:
    virtual ~Font() { }
 80074e8:	b480      	push	{r7}
 80074ea:	b083      	sub	sp, #12
 80074ec:	af00      	add	r7, sp, #0
 80074ee:	6078      	str	r0, [r7, #4]
 80074f0:	4a04      	ldr	r2, [pc, #16]	; (8007504 <_ZN8touchgfx4FontD1Ev+0x1c>)
 80074f2:	687b      	ldr	r3, [r7, #4]
 80074f4:	601a      	str	r2, [r3, #0]
 80074f6:	687b      	ldr	r3, [r7, #4]
 80074f8:	4618      	mov	r0, r3
 80074fa:	370c      	adds	r7, #12
 80074fc:	46bd      	mov	sp, r7
 80074fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007502:	4770      	bx	lr
 8007504:	0801d578 	.word	0x0801d578

08007508 <_ZN8touchgfx4FontD0Ev>:
 8007508:	b580      	push	{r7, lr}
 800750a:	b082      	sub	sp, #8
 800750c:	af00      	add	r7, sp, #0
 800750e:	6078      	str	r0, [r7, #4]
 8007510:	6878      	ldr	r0, [r7, #4]
 8007512:	f7ff ffe9 	bl	80074e8 <_ZN8touchgfx4FontD1Ev>
 8007516:	2110      	movs	r1, #16
 8007518:	6878      	ldr	r0, [r7, #4]
 800751a:	f013 f9d0 	bl	801a8be <_ZdlPvj>
 800751e:	687b      	ldr	r3, [r7, #4]
 8007520:	4618      	mov	r0, r3
 8007522:	3708      	adds	r7, #8
 8007524:	46bd      	mov	sp, r7
 8007526:	bd80      	pop	{r7, pc}

08007528 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getGlyph
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8007528:	b590      	push	{r4, r7, lr}
 800752a:	b087      	sub	sp, #28
 800752c:	af00      	add	r7, sp, #0
 800752e:	6078      	str	r0, [r7, #4]
 8007530:	460b      	mov	r3, r1
 8007532:	807b      	strh	r3, [r7, #2]
    {
        const uint8_t* dummyPixelDataPointer = 0;
 8007534:	2300      	movs	r3, #0
 8007536:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8007538:	2300      	movs	r3, #0
 800753a:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800753c:	687b      	ldr	r3, [r7, #4]
 800753e:	681b      	ldr	r3, [r3, #0]
 8007540:	3308      	adds	r3, #8
 8007542:	681c      	ldr	r4, [r3, #0]
 8007544:	f107 030f 	add.w	r3, r7, #15
 8007548:	f107 0210 	add.w	r2, r7, #16
 800754c:	8879      	ldrh	r1, [r7, #2]
 800754e:	6878      	ldr	r0, [r7, #4]
 8007550:	47a0      	blx	r4
 8007552:	6178      	str	r0, [r7, #20]
        return glyph;
 8007554:	697b      	ldr	r3, [r7, #20]
    }
 8007556:	4618      	mov	r0, r3
 8007558:	371c      	adds	r7, #28
 800755a:	46bd      	mov	sp, r7
 800755c:	bd90      	pop	{r4, r7, pc}

0800755e <_ZNK8touchgfx4Font15getFallbackCharEv>:
     *        character, use the glyph for the character returned by this function. If 0 (zero)
     *        is returned, there is no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800755e:	b480      	push	{r7}
 8007560:	b083      	sub	sp, #12
 8007562:	af00      	add	r7, sp, #0
 8007564:	6078      	str	r0, [r7, #4]
    {
        return falllbackCharacter;
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	895b      	ldrh	r3, [r3, #10]
    }
 800756a:	4618      	mov	r0, r3
 800756c:	370c      	adds	r7, #12
 800756e:	46bd      	mov	sp, r7
 8007570:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007574:	4770      	bx	lr

08007576 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
    *        Gets ellipsis character for the given font. This is the character which is used
    *        when truncating long lines.
    *
    * @return The ellipsis character for the typography.
    */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8007576:	b480      	push	{r7}
 8007578:	b083      	sub	sp, #12
 800757a:	af00      	add	r7, sp, #0
 800757c:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800757e:	687b      	ldr	r3, [r7, #4]
 8007580:	899b      	ldrh	r3, [r3, #12]
    }
 8007582:	4618      	mov	r0, r3
 8007584:	370c      	adds	r7, #12
 8007586:	46bd      	mov	sp, r7
 8007588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800758c:	4770      	bx	lr

0800758e <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     *
     * @return The height in pixels of this font.
     */
    virtual uint16_t getFontHeight() const
 800758e:	b480      	push	{r7}
 8007590:	b083      	sub	sp, #12
 8007592:	af00      	add	r7, sp, #0
 8007594:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8007596:	687b      	ldr	r3, [r7, #4]
 8007598:	889b      	ldrh	r3, [r3, #4]
    }
 800759a:	4618      	mov	r0, r3
 800759c:	370c      	adds	r7, #12
 800759e:	46bd      	mov	sp, r7
 80075a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075a4:	4770      	bx	lr

080075a6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *        into account that certain characters (eg 'g') have pixels below the baseline,
     *        thus making the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    virtual uint16_t getMinimumTextHeight() const
 80075a6:	b480      	push	{r7}
 80075a8:	b083      	sub	sp, #12
 80075aa:	af00      	add	r7, sp, #0
 80075ac:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	889a      	ldrh	r2, [r3, #4]
 80075b2:	687b      	ldr	r3, [r7, #4]
 80075b4:	799b      	ldrb	r3, [r3, #6]
 80075b6:	b29b      	uxth	r3, r3
 80075b8:	4413      	add	r3, r2
 80075ba:	b29b      	uxth	r3, r3
    }
 80075bc:	4618      	mov	r0, r3
 80075be:	370c      	adds	r7, #12
 80075c0:	46bd      	mov	sp, r7
 80075c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075c6:	4770      	bx	lr

080075c8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     *        Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    virtual uint8_t getBitsPerPixel() const
 80075c8:	b480      	push	{r7}
 80075ca:	b083      	sub	sp, #12
 80075cc:	af00      	add	r7, sp, #0
 80075ce:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	79db      	ldrb	r3, [r3, #7]
 80075d4:	f3c3 0306 	ubfx	r3, r3, #0, #7
 80075d8:	b2db      	uxtb	r3, r3
    }
 80075da:	4618      	mov	r0, r3
 80075dc:	370c      	adds	r7, #12
 80075de:	46bd      	mov	sp, r7
 80075e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e4:	4770      	bx	lr

080075e6 <_ZNK8touchgfx4Font15getDataFormatA4Ev>:
     *
     *        Are the glyphs saved using ST A4 format.
     *
     * @return True if the font is stored using A4 format, false otherwise.
     */
    virtual uint8_t getDataFormatA4() const
 80075e6:	b480      	push	{r7}
 80075e8:	b083      	sub	sp, #12
 80075ea:	af00      	add	r7, sp, #0
 80075ec:	6078      	str	r0, [r7, #4]
    {
        return a4;
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	79db      	ldrb	r3, [r3, #7]
 80075f2:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 80075f6:	b2db      	uxtb	r3, r3
    }
 80075f8:	4618      	mov	r0, r3
 80075fa:	370c      	adds	r7, #12
 80075fc:	46bd      	mov	sp, r7
 80075fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007602:	4770      	bx	lr

08007604 <_ZN8touchgfx9ConstFontD1Ev>:
 * @note Pure virtual class. Create an application-
 *          specific implementation of getPixelData.
 *
 * @see Font
 */
class ConstFont : public Font
 8007604:	b580      	push	{r7, lr}
 8007606:	b082      	sub	sp, #8
 8007608:	af00      	add	r7, sp, #0
 800760a:	6078      	str	r0, [r7, #4]
 800760c:	4a05      	ldr	r2, [pc, #20]	; (8007624 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	601a      	str	r2, [r3, #0]
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	4618      	mov	r0, r3
 8007616:	f7ff ff67 	bl	80074e8 <_ZN8touchgfx4FontD1Ev>
 800761a:	687b      	ldr	r3, [r7, #4]
 800761c:	4618      	mov	r0, r3
 800761e:	3708      	adds	r7, #8
 8007620:	46bd      	mov	sp, r7
 8007622:	bd80      	pop	{r7, pc}
 8007624:	0801d630 	.word	0x0801d630

08007628 <_ZN8touchgfx9ConstFontD0Ev>:
 8007628:	b580      	push	{r7, lr}
 800762a:	b082      	sub	sp, #8
 800762c:	af00      	add	r7, sp, #0
 800762e:	6078      	str	r0, [r7, #4]
 8007630:	6878      	ldr	r0, [r7, #4]
 8007632:	f7ff ffe7 	bl	8007604 <_ZN8touchgfx9ConstFontD1Ev>
 8007636:	2118      	movs	r1, #24
 8007638:	6878      	ldr	r0, [r7, #4]
 800763a:	f013 f940 	bl	801a8be <_ZdlPvj>
 800763e:	687b      	ldr	r3, [r7, #4]
 8007640:	4618      	mov	r0, r3
 8007642:	3708      	adds	r7, #8
 8007644:	46bd      	mov	sp, r7
 8007646:	bd80      	pop	{r7, pc}

08007648 <_ZN8touchgfx13GeneratedFontD1Ev>:
 *        An GeneratedFont has both glyph table and glyph data placed in a flash which
 *        supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 8007648:	b580      	push	{r7, lr}
 800764a:	b082      	sub	sp, #8
 800764c:	af00      	add	r7, sp, #0
 800764e:	6078      	str	r0, [r7, #4]
 8007650:	4a05      	ldr	r2, [pc, #20]	; (8007668 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	601a      	str	r2, [r3, #0]
 8007656:	687b      	ldr	r3, [r7, #4]
 8007658:	4618      	mov	r0, r3
 800765a:	f7ff ffd3 	bl	8007604 <_ZN8touchgfx9ConstFontD1Ev>
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	4618      	mov	r0, r3
 8007662:	3708      	adds	r7, #8
 8007664:	46bd      	mov	sp, r7
 8007666:	bd80      	pop	{r7, pc}
 8007668:	0801c214 	.word	0x0801c214

0800766c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800766c:	b580      	push	{r7, lr}
 800766e:	b082      	sub	sp, #8
 8007670:	af00      	add	r7, sp, #0
 8007672:	6078      	str	r0, [r7, #4]
 8007674:	6878      	ldr	r0, [r7, #4]
 8007676:	f7ff ffe7 	bl	8007648 <_ZN8touchgfx13GeneratedFontD1Ev>
 800767a:	2124      	movs	r1, #36	; 0x24
 800767c:	6878      	ldr	r0, [r7, #4]
 800767e:	f013 f91e 	bl	801a8be <_ZdlPvj>
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	4618      	mov	r0, r3
 8007686:	3708      	adds	r7, #8
 8007688:	46bd      	mov	sp, r7
 800768a:	bd80      	pop	{r7, pc}

0800768c <_ZNK8touchgfx9TypedText7getFontEv>:
     *
     *        Gets the font associated with this TypedText.
     *
     * @return The font.
     */
    const Font* getFont() const
 800768c:	b580      	push	{r7, lr}
 800768e:	b082      	sub	sp, #8
 8007690:	af00      	add	r7, sp, #0
 8007692:	6078      	str	r0, [r7, #4]
    {
        assertValid();
 8007694:	6878      	ldr	r0, [r7, #4]
 8007696:	f000 f82d 	bl	80076f4 <_ZNK8touchgfx9TypedText11assertValidEv>
        return fonts[typedTexts[typedTextId].fontIdx];
 800769a:	4b08      	ldr	r3, [pc, #32]	; (80076bc <_ZNK8touchgfx9TypedText7getFontEv+0x30>)
 800769c:	681a      	ldr	r2, [r3, #0]
 800769e:	4b08      	ldr	r3, [pc, #32]	; (80076c0 <_ZNK8touchgfx9TypedText7getFontEv+0x34>)
 80076a0:	6819      	ldr	r1, [r3, #0]
 80076a2:	687b      	ldr	r3, [r7, #4]
 80076a4:	881b      	ldrh	r3, [r3, #0]
 80076a6:	005b      	lsls	r3, r3, #1
 80076a8:	440b      	add	r3, r1
 80076aa:	781b      	ldrb	r3, [r3, #0]
 80076ac:	009b      	lsls	r3, r3, #2
 80076ae:	4413      	add	r3, r2
 80076b0:	681b      	ldr	r3, [r3, #0]
    }
 80076b2:	4618      	mov	r0, r3
 80076b4:	3708      	adds	r7, #8
 80076b6:	46bd      	mov	sp, r7
 80076b8:	bd80      	pop	{r7, pc}
 80076ba:	bf00      	nop
 80076bc:	20001530 	.word	0x20001530
 80076c0:	20001528 	.word	0x20001528

080076c4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>:
     *
     *        Gets the text direction associated with this TypedText.
     *
     * @return The alignment.
     */
    TextDirection getTextDirection() const
 80076c4:	b580      	push	{r7, lr}
 80076c6:	b082      	sub	sp, #8
 80076c8:	af00      	add	r7, sp, #0
 80076ca:	6078      	str	r0, [r7, #4]
    {
        assertValid();
 80076cc:	6878      	ldr	r0, [r7, #4]
 80076ce:	f000 f811 	bl	80076f4 <_ZNK8touchgfx9TypedText11assertValidEv>
        return typedTexts[typedTextId].direction;
 80076d2:	4b07      	ldr	r3, [pc, #28]	; (80076f0 <_ZNK8touchgfx9TypedText16getTextDirectionEv+0x2c>)
 80076d4:	681a      	ldr	r2, [r3, #0]
 80076d6:	687b      	ldr	r3, [r7, #4]
 80076d8:	881b      	ldrh	r3, [r3, #0]
 80076da:	005b      	lsls	r3, r3, #1
 80076dc:	4413      	add	r3, r2
 80076de:	785b      	ldrb	r3, [r3, #1]
 80076e0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80076e4:	b2db      	uxtb	r3, r3
    }
 80076e6:	4618      	mov	r0, r3
 80076e8:	3708      	adds	r7, #8
 80076ea:	46bd      	mov	sp, r7
 80076ec:	bd80      	pop	{r7, pc}
 80076ee:	bf00      	nop
 80076f0:	20001528 	.word	0x20001528

080076f4 <_ZNK8touchgfx9TypedText11assertValidEv>:
    {
        texts = t;
    }

private:
    void assertValid() const
 80076f4:	b580      	push	{r7, lr}
 80076f6:	b082      	sub	sp, #8
 80076f8:	af00      	add	r7, sp, #0
 80076fa:	6078      	str	r0, [r7, #4]
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80076fc:	4b0c      	ldr	r3, [pc, #48]	; (8007730 <_ZNK8touchgfx9TypedText11assertValidEv+0x3c>)
 80076fe:	681b      	ldr	r3, [r3, #0]
 8007700:	2b00      	cmp	r3, #0
 8007702:	d105      	bne.n	8007710 <_ZNK8touchgfx9TypedText11assertValidEv+0x1c>
 8007704:	4b0b      	ldr	r3, [pc, #44]	; (8007734 <_ZNK8touchgfx9TypedText11assertValidEv+0x40>)
 8007706:	4a0c      	ldr	r2, [pc, #48]	; (8007738 <_ZNK8touchgfx9TypedText11assertValidEv+0x44>)
 8007708:	21de      	movs	r1, #222	; 0xde
 800770a:	480c      	ldr	r0, [pc, #48]	; (800773c <_ZNK8touchgfx9TypedText11assertValidEv+0x48>)
 800770c:	f013 f906 	bl	801a91c <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	881a      	ldrh	r2, [r3, #0]
 8007714:	4b0a      	ldr	r3, [pc, #40]	; (8007740 <_ZNK8touchgfx9TypedText11assertValidEv+0x4c>)
 8007716:	881b      	ldrh	r3, [r3, #0]
 8007718:	429a      	cmp	r2, r3
 800771a:	d305      	bcc.n	8007728 <_ZNK8touchgfx9TypedText11assertValidEv+0x34>
 800771c:	4b09      	ldr	r3, [pc, #36]	; (8007744 <_ZNK8touchgfx9TypedText11assertValidEv+0x50>)
 800771e:	4a06      	ldr	r2, [pc, #24]	; (8007738 <_ZNK8touchgfx9TypedText11assertValidEv+0x44>)
 8007720:	21df      	movs	r1, #223	; 0xdf
 8007722:	4806      	ldr	r0, [pc, #24]	; (800773c <_ZNK8touchgfx9TypedText11assertValidEv+0x48>)
 8007724:	f013 f8fa 	bl	801a91c <__assert_func>
    }
 8007728:	bf00      	nop
 800772a:	3708      	adds	r7, #8
 800772c:	46bd      	mov	sp, r7
 800772e:	bd80      	pop	{r7, pc}
 8007730:	20001528 	.word	0x20001528
 8007734:	0801bad4 	.word	0x0801bad4
 8007738:	0801bb18 	.word	0x0801bb18
 800773c:	0801bb48 	.word	0x0801bb48
 8007740:	2000152c 	.word	0x2000152c
 8007744:	0801bb8c 	.word	0x0801bb8c

08007748 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>:
    uint16_t kerningTablePos() const
 8007748:	b480      	push	{r7}
 800774a:	b083      	sub	sp, #12
 800774c:	af00      	add	r7, sp, #0
 800774e:	6078      	str	r0, [r7, #4]
        return (((uint16_t)(flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10)) << 8) | (uint16_t)_kerningTablePos;
 8007750:	687b      	ldr	r3, [r7, #4]
 8007752:	7b5b      	ldrb	r3, [r3, #13]
 8007754:	021b      	lsls	r3, r3, #8
 8007756:	b21b      	sxth	r3, r3
 8007758:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800775c:	b21a      	sxth	r2, r3
 800775e:	687b      	ldr	r3, [r7, #4]
 8007760:	7adb      	ldrb	r3, [r3, #11]
 8007762:	b21b      	sxth	r3, r3
 8007764:	4313      	orrs	r3, r2
 8007766:	b21b      	sxth	r3, r3
 8007768:	b29b      	uxth	r3, r3
    }
 800776a:	4618      	mov	r0, r3
 800776c:	370c      	adds	r7, #12
 800776e:	46bd      	mov	sp, r7
 8007770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007774:	4770      	bx	lr

08007776 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     *
     *        Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 8007776:	b480      	push	{r7}
 8007778:	b083      	sub	sp, #12
 800777a:	af00      	add	r7, sp, #0
 800777c:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	6a1b      	ldr	r3, [r3, #32]
    }
 8007782:	4618      	mov	r0, r3
 8007784:	370c      	adds	r7, #12
 8007786:	46bd      	mov	sp, r7
 8007788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800778c:	4770      	bx	lr
	...

08007790 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t dataFormatA4, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8007790:	b580      	push	{r7, lr}
 8007792:	b08c      	sub	sp, #48	; 0x30
 8007794:	af08      	add	r7, sp, #32
 8007796:	60f8      	str	r0, [r7, #12]
 8007798:	60b9      	str	r1, [r7, #8]
 800779a:	4611      	mov	r1, r2
 800779c:	461a      	mov	r2, r3
 800779e:	460b      	mov	r3, r1
 80077a0:	80fb      	strh	r3, [r7, #6]
 80077a2:	4613      	mov	r3, r2
 80077a4:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, dataFormatA4, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
 80077a6:	68f8      	ldr	r0, [r7, #12]
 80077a8:	88b9      	ldrh	r1, [r7, #4]
 80077aa:	88fa      	ldrh	r2, [r7, #6]
 80077ac:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 80077ae:	9306      	str	r3, [sp, #24]
 80077b0:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 80077b2:	9305      	str	r3, [sp, #20]
 80077b4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80077b8:	9304      	str	r3, [sp, #16]
 80077ba:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80077be:	9303      	str	r3, [sp, #12]
 80077c0:	f897 3020 	ldrb.w	r3, [r7, #32]
 80077c4:	9302      	str	r3, [sp, #8]
 80077c6:	7f3b      	ldrb	r3, [r7, #28]
 80077c8:	9301      	str	r3, [sp, #4]
 80077ca:	7e3b      	ldrb	r3, [r7, #24]
 80077cc:	9300      	str	r3, [sp, #0]
 80077ce:	460b      	mov	r3, r1
 80077d0:	68b9      	ldr	r1, [r7, #8]
 80077d2:	f006 fb09 	bl	800dde8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80077d6:	4a08      	ldr	r2, [pc, #32]	; (80077f8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
 80077d8:	68fb      	ldr	r3, [r7, #12]
 80077da:	601a      	str	r2, [r3, #0]
 80077dc:	68fb      	ldr	r3, [r7, #12]
 80077de:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80077e0:	619a      	str	r2, [r3, #24]
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80077e6:	61da      	str	r2, [r3, #28]
 80077e8:	68fb      	ldr	r3, [r7, #12]
 80077ea:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80077ec:	621a      	str	r2, [r3, #32]
{
}
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	4618      	mov	r0, r3
 80077f2:	3710      	adds	r7, #16
 80077f4:	46bd      	mov	sp, r7
 80077f6:	bd80      	pop	{r7, pc}
 80077f8:	0801c214 	.word	0x0801c214

080077fc <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80077fc:	b480      	push	{r7}
 80077fe:	b085      	sub	sp, #20
 8007800:	af00      	add	r7, sp, #0
 8007802:	6078      	str	r0, [r7, #4]
 8007804:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8007806:	687b      	ldr	r3, [r7, #4]
 8007808:	699b      	ldr	r3, [r3, #24]
 800780a:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800780c:	683b      	ldr	r3, [r7, #0]
 800780e:	889b      	ldrh	r3, [r3, #4]
 8007810:	0adb      	lsrs	r3, r3, #11
 8007812:	b29b      	uxth	r3, r3
 8007814:	009b      	lsls	r3, r3, #2
 8007816:	68fa      	ldr	r2, [r7, #12]
 8007818:	4413      	add	r3, r2
 800781a:	681a      	ldr	r2, [r3, #0]
 800781c:	683b      	ldr	r3, [r7, #0]
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	4413      	add	r3, r2
}
 8007822:	4618      	mov	r0, r3
 8007824:	3714      	adds	r7, #20
 8007826:	46bd      	mov	sp, r7
 8007828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800782c:	4770      	bx	lr

0800782e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800782e:	b580      	push	{r7, lr}
 8007830:	b086      	sub	sp, #24
 8007832:	af00      	add	r7, sp, #0
 8007834:	60f8      	str	r0, [r7, #12]
 8007836:	460b      	mov	r3, r1
 8007838:	607a      	str	r2, [r7, #4]
 800783a:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800783c:	687b      	ldr	r3, [r7, #4]
 800783e:	2b00      	cmp	r3, #0
 8007840:	d003      	beq.n	800784a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	7b1b      	ldrb	r3, [r3, #12]
 8007846:	2b00      	cmp	r3, #0
 8007848:	d101      	bne.n	800784e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800784a:	2300      	movs	r3, #0
 800784c:	e023      	b.n	8007896 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    }

    uint16_t kerningTablePos = glyph->kerningTablePos();
 800784e:	6878      	ldr	r0, [r7, #4]
 8007850:	f7ff ff7a 	bl	8007748 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>
 8007854:	4603      	mov	r3, r0
 8007856:	82bb      	strh	r3, [r7, #20]
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8007858:	8abb      	ldrh	r3, [r7, #20]
 800785a:	82fb      	strh	r3, [r7, #22]
 800785c:	8afa      	ldrh	r2, [r7, #22]
 800785e:	8abb      	ldrh	r3, [r7, #20]
 8007860:	6879      	ldr	r1, [r7, #4]
 8007862:	7b09      	ldrb	r1, [r1, #12]
 8007864:	440b      	add	r3, r1
 8007866:	429a      	cmp	r2, r3
 8007868:	da14      	bge.n	8007894 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
    {
        if (prevChar == kerningData[i].unicodePrevChar)
 800786a:	68fb      	ldr	r3, [r7, #12]
 800786c:	69da      	ldr	r2, [r3, #28]
 800786e:	8afb      	ldrh	r3, [r7, #22]
 8007870:	009b      	lsls	r3, r3, #2
 8007872:	4413      	add	r3, r2
 8007874:	881b      	ldrh	r3, [r3, #0]
 8007876:	897a      	ldrh	r2, [r7, #10]
 8007878:	429a      	cmp	r2, r3
 800787a:	d107      	bne.n	800788c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x5e>
        {
            return kerningData[i].distance;
 800787c:	68fb      	ldr	r3, [r7, #12]
 800787e:	69da      	ldr	r2, [r3, #28]
 8007880:	8afb      	ldrh	r3, [r7, #22]
 8007882:	009b      	lsls	r3, r3, #2
 8007884:	4413      	add	r3, r2
 8007886:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800788a:	e004      	b.n	8007896 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 800788c:	8afb      	ldrh	r3, [r7, #22]
 800788e:	3301      	adds	r3, #1
 8007890:	82fb      	strh	r3, [r7, #22]
 8007892:	e7e3      	b.n	800785c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
        }
    }
    return 0;
 8007894:	2300      	movs	r3, #0
}
 8007896:	4618      	mov	r0, r3
 8007898:	3718      	adds	r7, #24
 800789a:	46bd      	mov	sp, r7
 800789c:	bd80      	pop	{r7, pc}
	...

080078a0 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_10_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 80078a0:	b580      	push	{r7, lr}
 80078a2:	af00      	add	r7, sp, #0
 80078a4:	4801      	ldr	r0, [pc, #4]	; (80078ac <__tcf_0+0xc>)
 80078a6:	f7ff fecf 	bl	8007648 <_ZN8touchgfx13GeneratedFontD1Ev>
 80078aa:	bd80      	pop	{r7, pc}
 80078ac:	200004a0 	.word	0x200004a0

080078b0 <_Z23getFont_verdana_10_4bppv>:
{
 80078b0:	b580      	push	{r7, lr}
 80078b2:	b08a      	sub	sp, #40	; 0x28
 80078b4:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 80078b6:	4b1e      	ldr	r3, [pc, #120]	; (8007930 <_Z23getFont_verdana_10_4bppv+0x80>)
 80078b8:	781b      	ldrb	r3, [r3, #0]
 80078ba:	f3bf 8f5b 	dmb	ish
 80078be:	b2db      	uxtb	r3, r3
 80078c0:	f003 0301 	and.w	r3, r3, #1
 80078c4:	2b00      	cmp	r3, #0
 80078c6:	bf0c      	ite	eq
 80078c8:	2301      	moveq	r3, #1
 80078ca:	2300      	movne	r3, #0
 80078cc:	b2db      	uxtb	r3, r3
 80078ce:	2b00      	cmp	r3, #0
 80078d0:	d02a      	beq.n	8007928 <_Z23getFont_verdana_10_4bppv+0x78>
 80078d2:	4817      	ldr	r0, [pc, #92]	; (8007930 <_Z23getFont_verdana_10_4bppv+0x80>)
 80078d4:	f012 fff5 	bl	801a8c2 <__cxa_guard_acquire>
 80078d8:	4603      	mov	r3, r0
 80078da:	2b00      	cmp	r3, #0
 80078dc:	bf14      	ite	ne
 80078de:	2301      	movne	r3, #1
 80078e0:	2300      	moveq	r3, #0
 80078e2:	b2db      	uxtb	r3, r3
 80078e4:	2b00      	cmp	r3, #0
 80078e6:	d01f      	beq.n	8007928 <_Z23getFont_verdana_10_4bppv+0x78>
 80078e8:	2300      	movs	r3, #0
 80078ea:	9309      	str	r3, [sp, #36]	; 0x24
 80078ec:	2300      	movs	r3, #0
 80078ee:	9308      	str	r3, [sp, #32]
 80078f0:	233f      	movs	r3, #63	; 0x3f
 80078f2:	9307      	str	r3, [sp, #28]
 80078f4:	4b0f      	ldr	r3, [pc, #60]	; (8007934 <_Z23getFont_verdana_10_4bppv+0x84>)
 80078f6:	9306      	str	r3, [sp, #24]
 80078f8:	4b0f      	ldr	r3, [pc, #60]	; (8007938 <_Z23getFont_verdana_10_4bppv+0x88>)
 80078fa:	9305      	str	r3, [sp, #20]
 80078fc:	2300      	movs	r3, #0
 80078fe:	9304      	str	r3, [sp, #16]
 8007900:	2300      	movs	r3, #0
 8007902:	9303      	str	r3, [sp, #12]
 8007904:	2301      	movs	r3, #1
 8007906:	9302      	str	r3, [sp, #8]
 8007908:	2304      	movs	r3, #4
 800790a:	9301      	str	r3, [sp, #4]
 800790c:	2300      	movs	r3, #0
 800790e:	9300      	str	r3, [sp, #0]
 8007910:	230a      	movs	r3, #10
 8007912:	2201      	movs	r2, #1
 8007914:	4909      	ldr	r1, [pc, #36]	; (800793c <_Z23getFont_verdana_10_4bppv+0x8c>)
 8007916:	480a      	ldr	r0, [pc, #40]	; (8007940 <_Z23getFont_verdana_10_4bppv+0x90>)
 8007918:	f7ff ff3a 	bl	8007790 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800791c:	4809      	ldr	r0, [pc, #36]	; (8007944 <_Z23getFont_verdana_10_4bppv+0x94>)
 800791e:	f013 f81b 	bl	801a958 <atexit>
 8007922:	4803      	ldr	r0, [pc, #12]	; (8007930 <_Z23getFont_verdana_10_4bppv+0x80>)
 8007924:	f012 ffd9 	bl	801a8da <__cxa_guard_release>
    return verdana_10_4bpp;
 8007928:	4b05      	ldr	r3, [pc, #20]	; (8007940 <_Z23getFont_verdana_10_4bppv+0x90>)
}
 800792a:	4618      	mov	r0, r3
 800792c:	46bd      	mov	sp, r7
 800792e:	bd80      	pop	{r7, pc}
 8007930:	200004c4 	.word	0x200004c4
 8007934:	0801eeec 	.word	0x0801eeec
 8007938:	0801c260 	.word	0x0801c260
 800793c:	0801eef8 	.word	0x0801eef8
 8007940:	200004a0 	.word	0x200004a0
 8007944:	080078a1 	.word	0x080078a1

08007948 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_20_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 5, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8007948:	b580      	push	{r7, lr}
 800794a:	af00      	add	r7, sp, #0
 800794c:	4801      	ldr	r0, [pc, #4]	; (8007954 <__tcf_0+0xc>)
 800794e:	f7ff fe7b 	bl	8007648 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007952:	bd80      	pop	{r7, pc}
 8007954:	200004c8 	.word	0x200004c8

08007958 <_Z23getFont_verdana_20_4bppv>:
{
 8007958:	b580      	push	{r7, lr}
 800795a:	b08a      	sub	sp, #40	; 0x28
 800795c:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 5, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 800795e:	4b1e      	ldr	r3, [pc, #120]	; (80079d8 <_Z23getFont_verdana_20_4bppv+0x80>)
 8007960:	781b      	ldrb	r3, [r3, #0]
 8007962:	f3bf 8f5b 	dmb	ish
 8007966:	b2db      	uxtb	r3, r3
 8007968:	f003 0301 	and.w	r3, r3, #1
 800796c:	2b00      	cmp	r3, #0
 800796e:	bf0c      	ite	eq
 8007970:	2301      	moveq	r3, #1
 8007972:	2300      	movne	r3, #0
 8007974:	b2db      	uxtb	r3, r3
 8007976:	2b00      	cmp	r3, #0
 8007978:	d02a      	beq.n	80079d0 <_Z23getFont_verdana_20_4bppv+0x78>
 800797a:	4817      	ldr	r0, [pc, #92]	; (80079d8 <_Z23getFont_verdana_20_4bppv+0x80>)
 800797c:	f012 ffa1 	bl	801a8c2 <__cxa_guard_acquire>
 8007980:	4603      	mov	r3, r0
 8007982:	2b00      	cmp	r3, #0
 8007984:	bf14      	ite	ne
 8007986:	2301      	movne	r3, #1
 8007988:	2300      	moveq	r3, #0
 800798a:	b2db      	uxtb	r3, r3
 800798c:	2b00      	cmp	r3, #0
 800798e:	d01f      	beq.n	80079d0 <_Z23getFont_verdana_20_4bppv+0x78>
 8007990:	2300      	movs	r3, #0
 8007992:	9309      	str	r3, [sp, #36]	; 0x24
 8007994:	2300      	movs	r3, #0
 8007996:	9308      	str	r3, [sp, #32]
 8007998:	233f      	movs	r3, #63	; 0x3f
 800799a:	9307      	str	r3, [sp, #28]
 800799c:	4b0f      	ldr	r3, [pc, #60]	; (80079dc <_Z23getFont_verdana_20_4bppv+0x84>)
 800799e:	9306      	str	r3, [sp, #24]
 80079a0:	4b0f      	ldr	r3, [pc, #60]	; (80079e0 <_Z23getFont_verdana_20_4bppv+0x88>)
 80079a2:	9305      	str	r3, [sp, #20]
 80079a4:	2300      	movs	r3, #0
 80079a6:	9304      	str	r3, [sp, #16]
 80079a8:	2300      	movs	r3, #0
 80079aa:	9303      	str	r3, [sp, #12]
 80079ac:	2301      	movs	r3, #1
 80079ae:	9302      	str	r3, [sp, #8]
 80079b0:	2304      	movs	r3, #4
 80079b2:	9301      	str	r3, [sp, #4]
 80079b4:	2300      	movs	r3, #0
 80079b6:	9300      	str	r3, [sp, #0]
 80079b8:	2314      	movs	r3, #20
 80079ba:	2205      	movs	r2, #5
 80079bc:	4909      	ldr	r1, [pc, #36]	; (80079e4 <_Z23getFont_verdana_20_4bppv+0x8c>)
 80079be:	480a      	ldr	r0, [pc, #40]	; (80079e8 <_Z23getFont_verdana_20_4bppv+0x90>)
 80079c0:	f7ff fee6 	bl	8007790 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80079c4:	4809      	ldr	r0, [pc, #36]	; (80079ec <_Z23getFont_verdana_20_4bppv+0x94>)
 80079c6:	f012 ffc7 	bl	801a958 <atexit>
 80079ca:	4803      	ldr	r0, [pc, #12]	; (80079d8 <_Z23getFont_verdana_20_4bppv+0x80>)
 80079cc:	f012 ff85 	bl	801a8da <__cxa_guard_release>
    return verdana_20_4bpp;
 80079d0:	4b05      	ldr	r3, [pc, #20]	; (80079e8 <_Z23getFont_verdana_20_4bppv+0x90>)
}
 80079d2:	4618      	mov	r0, r3
 80079d4:	46bd      	mov	sp, r7
 80079d6:	bd80      	pop	{r7, pc}
 80079d8:	200004ec 	.word	0x200004ec
 80079dc:	0801eef0 	.word	0x0801eef0
 80079e0:	0801c264 	.word	0x0801c264
 80079e4:	0801ef08 	.word	0x0801ef08
 80079e8:	200004c8 	.word	0x200004c8
 80079ec:	08007949 	.word	0x08007949

080079f0 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_40_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80079f0:	b580      	push	{r7, lr}
 80079f2:	af00      	add	r7, sp, #0
 80079f4:	4801      	ldr	r0, [pc, #4]	; (80079fc <__tcf_0+0xc>)
 80079f6:	f7ff fe27 	bl	8007648 <_ZN8touchgfx13GeneratedFontD1Ev>
 80079fa:	bd80      	pop	{r7, pc}
 80079fc:	200004f0 	.word	0x200004f0

08007a00 <_Z23getFont_verdana_40_4bppv>:
{
 8007a00:	b580      	push	{r7, lr}
 8007a02:	b08a      	sub	sp, #40	; 0x28
 8007a04:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8007a06:	4b1e      	ldr	r3, [pc, #120]	; (8007a80 <_Z23getFont_verdana_40_4bppv+0x80>)
 8007a08:	781b      	ldrb	r3, [r3, #0]
 8007a0a:	f3bf 8f5b 	dmb	ish
 8007a0e:	b2db      	uxtb	r3, r3
 8007a10:	f003 0301 	and.w	r3, r3, #1
 8007a14:	2b00      	cmp	r3, #0
 8007a16:	bf0c      	ite	eq
 8007a18:	2301      	moveq	r3, #1
 8007a1a:	2300      	movne	r3, #0
 8007a1c:	b2db      	uxtb	r3, r3
 8007a1e:	2b00      	cmp	r3, #0
 8007a20:	d02a      	beq.n	8007a78 <_Z23getFont_verdana_40_4bppv+0x78>
 8007a22:	4817      	ldr	r0, [pc, #92]	; (8007a80 <_Z23getFont_verdana_40_4bppv+0x80>)
 8007a24:	f012 ff4d 	bl	801a8c2 <__cxa_guard_acquire>
 8007a28:	4603      	mov	r3, r0
 8007a2a:	2b00      	cmp	r3, #0
 8007a2c:	bf14      	ite	ne
 8007a2e:	2301      	movne	r3, #1
 8007a30:	2300      	moveq	r3, #0
 8007a32:	b2db      	uxtb	r3, r3
 8007a34:	2b00      	cmp	r3, #0
 8007a36:	d01f      	beq.n	8007a78 <_Z23getFont_verdana_40_4bppv+0x78>
 8007a38:	2300      	movs	r3, #0
 8007a3a:	9309      	str	r3, [sp, #36]	; 0x24
 8007a3c:	2300      	movs	r3, #0
 8007a3e:	9308      	str	r3, [sp, #32]
 8007a40:	233f      	movs	r3, #63	; 0x3f
 8007a42:	9307      	str	r3, [sp, #28]
 8007a44:	4b0f      	ldr	r3, [pc, #60]	; (8007a84 <_Z23getFont_verdana_40_4bppv+0x84>)
 8007a46:	9306      	str	r3, [sp, #24]
 8007a48:	4b0f      	ldr	r3, [pc, #60]	; (8007a88 <_Z23getFont_verdana_40_4bppv+0x88>)
 8007a4a:	9305      	str	r3, [sp, #20]
 8007a4c:	2300      	movs	r3, #0
 8007a4e:	9304      	str	r3, [sp, #16]
 8007a50:	2300      	movs	r3, #0
 8007a52:	9303      	str	r3, [sp, #12]
 8007a54:	2301      	movs	r3, #1
 8007a56:	9302      	str	r3, [sp, #8]
 8007a58:	2304      	movs	r3, #4
 8007a5a:	9301      	str	r3, [sp, #4]
 8007a5c:	2300      	movs	r3, #0
 8007a5e:	9300      	str	r3, [sp, #0]
 8007a60:	2328      	movs	r3, #40	; 0x28
 8007a62:	2201      	movs	r2, #1
 8007a64:	4909      	ldr	r1, [pc, #36]	; (8007a8c <_Z23getFont_verdana_40_4bppv+0x8c>)
 8007a66:	480a      	ldr	r0, [pc, #40]	; (8007a90 <_Z23getFont_verdana_40_4bppv+0x90>)
 8007a68:	f7ff fe92 	bl	8007790 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8007a6c:	4809      	ldr	r0, [pc, #36]	; (8007a94 <_Z23getFont_verdana_40_4bppv+0x94>)
 8007a6e:	f012 ff73 	bl	801a958 <atexit>
 8007a72:	4803      	ldr	r0, [pc, #12]	; (8007a80 <_Z23getFont_verdana_40_4bppv+0x80>)
 8007a74:	f012 ff31 	bl	801a8da <__cxa_guard_release>
    return verdana_40_4bpp;
 8007a78:	4b05      	ldr	r3, [pc, #20]	; (8007a90 <_Z23getFont_verdana_40_4bppv+0x90>)
}
 8007a7a:	4618      	mov	r0, r3
 8007a7c:	46bd      	mov	sp, r7
 8007a7e:	bd80      	pop	{r7, pc}
 8007a80:	20000514 	.word	0x20000514
 8007a84:	0801eef4 	.word	0x0801eef4
 8007a88:	0801c268 	.word	0x0801c268
 8007a8c:	0801ef50 	.word	0x0801ef50
 8007a90:	200004f0 	.word	0x200004f0
 8007a94:	080079f1 	.word	0x080079f1

08007a98 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8007a98:	b480      	push	{r7}
 8007a9a:	b083      	sub	sp, #12
 8007a9c:	af00      	add	r7, sp, #0
 8007a9e:	6078      	str	r0, [r7, #4]
 8007aa0:	6039      	str	r1, [r7, #0]
 8007aa2:	683b      	ldr	r3, [r7, #0]
 8007aa4:	4618      	mov	r0, r3
 8007aa6:	370c      	adds	r7, #12
 8007aa8:	46bd      	mov	sp, r7
 8007aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aae:	4770      	bx	lr

08007ab0 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     *        This handler is invoked when a mouse click or display touch event has been
     *        detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8007ab0:	b480      	push	{r7}
 8007ab2:	b083      	sub	sp, #12
 8007ab4:	af00      	add	r7, sp, #0
 8007ab6:	6078      	str	r0, [r7, #4]
 8007ab8:	6039      	str	r1, [r7, #0]
    {
    }
 8007aba:	bf00      	nop
 8007abc:	370c      	adds	r7, #12
 8007abe:	46bd      	mov	sp, r7
 8007ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ac4:	4770      	bx	lr

08007ac6 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
     *
     *        This handler is invoked when a drag event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8007ac6:	b480      	push	{r7}
 8007ac8:	b083      	sub	sp, #12
 8007aca:	af00      	add	r7, sp, #0
 8007acc:	6078      	str	r0, [r7, #4]
 8007ace:	6039      	str	r1, [r7, #0]
    {
    }
 8007ad0:	bf00      	nop
 8007ad2:	370c      	adds	r7, #12
 8007ad4:	46bd      	mov	sp, r7
 8007ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ada:	4770      	bx	lr

08007adc <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
     *
     *        This handler is invoked when a gesture event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8007adc:	b480      	push	{r7}
 8007ade:	b083      	sub	sp, #12
 8007ae0:	af00      	add	r7, sp, #0
 8007ae2:	6078      	str	r0, [r7, #4]
 8007ae4:	6039      	str	r1, [r7, #0]
    {
    }
 8007ae6:	bf00      	nop
 8007ae8:	370c      	adds	r7, #12
 8007aea:	46bd      	mov	sp, r7
 8007aec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007af0:	4770      	bx	lr

08007af2 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
     *        This handler is invoked when a key (or button) event has been detected by the
     *        system.
     *
     * @param c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8007af2:	b480      	push	{r7}
 8007af4:	b083      	sub	sp, #12
 8007af6:	af00      	add	r7, sp, #0
 8007af8:	6078      	str	r0, [r7, #4]
 8007afa:	460b      	mov	r3, r1
 8007afc:	70fb      	strb	r3, [r7, #3]
    {
    }
 8007afe:	bf00      	nop
 8007b00:	370c      	adds	r7, #12
 8007b02:	46bd      	mov	sp, r7
 8007b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b08:	4770      	bx	lr

08007b0a <_ZN8touchgfx15UIEventListener15handleTickEventEv>:
     * @brief This handler is invoked when a system tick event has been generated.
     *
     *        This handler is invoked when a system tick event has been generated. The system
     *        tick period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8007b0a:	b480      	push	{r7}
 8007b0c:	b083      	sub	sp, #12
 8007b0e:	af00      	add	r7, sp, #0
 8007b10:	6078      	str	r0, [r7, #4]
    {
    }
 8007b12:	bf00      	nop
 8007b14:	370c      	adds	r7, #12
 8007b16:	46bd      	mov	sp, r7
 8007b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b1c:	4770      	bx	lr

08007b1e <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:
     *
     * @brief This handler is invoked when a change screen event is pending.
     *
     *        This handler is invoked when a change screen event is pending.
     */
    virtual void handlePendingScreenTransition()
 8007b1e:	b480      	push	{r7}
 8007b20:	b083      	sub	sp, #12
 8007b22:	af00      	add	r7, sp, #0
 8007b24:	6078      	str	r0, [r7, #4]
    {
    }
 8007b26:	bf00      	nop
 8007b28:	370c      	adds	r7, #12
 8007b2a:	46bd      	mov	sp, r7
 8007b2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b30:	4770      	bx	lr
	...

08007b34 <_ZN8touchgfx15UIEventListenerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~UIEventListener()
 8007b34:	b480      	push	{r7}
 8007b36:	b083      	sub	sp, #12
 8007b38:	af00      	add	r7, sp, #0
 8007b3a:	6078      	str	r0, [r7, #4]
    {
 8007b3c:	4a04      	ldr	r2, [pc, #16]	; (8007b50 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8007b3e:	687b      	ldr	r3, [r7, #4]
 8007b40:	601a      	str	r2, [r3, #0]
    }
 8007b42:	687b      	ldr	r3, [r7, #4]
 8007b44:	4618      	mov	r0, r3
 8007b46:	370c      	adds	r7, #12
 8007b48:	46bd      	mov	sp, r7
 8007b4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b4e:	4770      	bx	lr
 8007b50:	0801c35c 	.word	0x0801c35c

08007b54 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8007b54:	b580      	push	{r7, lr}
 8007b56:	b082      	sub	sp, #8
 8007b58:	af00      	add	r7, sp, #0
 8007b5a:	6078      	str	r0, [r7, #4]
    }
 8007b5c:	6878      	ldr	r0, [r7, #4]
 8007b5e:	f7ff ffe9 	bl	8007b34 <_ZN8touchgfx15UIEventListenerD1Ev>
 8007b62:	2104      	movs	r1, #4
 8007b64:	6878      	ldr	r0, [r7, #4]
 8007b66:	f012 feaa 	bl	801a8be <_ZdlPvj>
 8007b6a:	687b      	ldr	r3, [r7, #4]
 8007b6c:	4618      	mov	r0, r3
 8007b6e:	3708      	adds	r7, #8
 8007b70:	46bd      	mov	sp, r7
 8007b72:	bd80      	pop	{r7, pc}

08007b74 <_ZN8touchgfx10TransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs the Transition.
     */
    Transition() :
 8007b74:	b480      	push	{r7}
 8007b76:	b083      	sub	sp, #12
 8007b78:	af00      	add	r7, sp, #0
 8007b7a:	6078      	str	r0, [r7, #4]
        screenContainer(0), done(false)
 8007b7c:	4a07      	ldr	r2, [pc, #28]	; (8007b9c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 8007b7e:	687b      	ldr	r3, [r7, #4]
 8007b80:	601a      	str	r2, [r3, #0]
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	2200      	movs	r2, #0
 8007b86:	605a      	str	r2, [r3, #4]
 8007b88:	687b      	ldr	r3, [r7, #4]
 8007b8a:	2200      	movs	r2, #0
 8007b8c:	721a      	strb	r2, [r3, #8]
    {
    }
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	4618      	mov	r0, r3
 8007b92:	370c      	adds	r7, #12
 8007b94:	46bd      	mov	sp, r7
 8007b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b9a:	4770      	bx	lr
 8007b9c:	0801c33c 	.word	0x0801c33c

08007ba0 <_ZN8touchgfx10TransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Transition()
 8007ba0:	b480      	push	{r7}
 8007ba2:	b083      	sub	sp, #12
 8007ba4:	af00      	add	r7, sp, #0
 8007ba6:	6078      	str	r0, [r7, #4]
    {
 8007ba8:	4a04      	ldr	r2, [pc, #16]	; (8007bbc <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	601a      	str	r2, [r3, #0]
    }
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	4618      	mov	r0, r3
 8007bb2:	370c      	adds	r7, #12
 8007bb4:	46bd      	mov	sp, r7
 8007bb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bba:	4770      	bx	lr
 8007bbc:	0801c33c 	.word	0x0801c33c

08007bc0 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8007bc0:	b580      	push	{r7, lr}
 8007bc2:	b082      	sub	sp, #8
 8007bc4:	af00      	add	r7, sp, #0
 8007bc6:	6078      	str	r0, [r7, #4]
    }
 8007bc8:	6878      	ldr	r0, [r7, #4]
 8007bca:	f7ff ffe9 	bl	8007ba0 <_ZN8touchgfx10TransitionD1Ev>
 8007bce:	210c      	movs	r1, #12
 8007bd0:	6878      	ldr	r0, [r7, #4]
 8007bd2:	f012 fe74 	bl	801a8be <_ZdlPvj>
 8007bd6:	687b      	ldr	r3, [r7, #4]
 8007bd8:	4618      	mov	r0, r3
 8007bda:	3708      	adds	r7, #8
 8007bdc:	46bd      	mov	sp, r7
 8007bde:	bd80      	pop	{r7, pc}

08007be0 <_ZN8touchgfx10Transition15handleTickEventEv>:
     *
     * @brief Called for every tick when transitioning.
     *
     *        Called for every tick when transitioning. Base does nothing.
     */
    virtual void handleTickEvent() { }
 8007be0:	b480      	push	{r7}
 8007be2:	b083      	sub	sp, #12
 8007be4:	af00      	add	r7, sp, #0
 8007be6:	6078      	str	r0, [r7, #4]
 8007be8:	bf00      	nop
 8007bea:	370c      	adds	r7, #12
 8007bec:	46bd      	mov	sp, r7
 8007bee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bf2:	4770      	bx	lr

08007bf4 <_ZN8touchgfx10Transition8tearDownEv>:
     * @brief Tears down the Animation.
     *
     *        Tears down the Animation. Called before the d.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void tearDown() { }
 8007bf4:	b480      	push	{r7}
 8007bf6:	b083      	sub	sp, #12
 8007bf8:	af00      	add	r7, sp, #0
 8007bfa:	6078      	str	r0, [r7, #4]
 8007bfc:	bf00      	nop
 8007bfe:	370c      	adds	r7, #12
 8007c00:	46bd      	mov	sp, r7
 8007c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c06:	4770      	bx	lr

08007c08 <_ZN8touchgfx10Transition4initEv>:
     * @brief Initializes the transition.
     *
     *        Initializes the transition. Called after the c.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void init() { }
 8007c08:	b480      	push	{r7}
 8007c0a:	b083      	sub	sp, #12
 8007c0c:	af00      	add	r7, sp, #0
 8007c0e:	6078      	str	r0, [r7, #4]
 8007c10:	bf00      	nop
 8007c12:	370c      	adds	r7, #12
 8007c14:	46bd      	mov	sp, r7
 8007c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c1a:	4770      	bx	lr

08007c1c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *        Sets the screen container. Is used by Screen to enable the transition to access
     *        the container.
     *
     * @param [in] cont The container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8007c1c:	b480      	push	{r7}
 8007c1e:	b083      	sub	sp, #12
 8007c20:	af00      	add	r7, sp, #0
 8007c22:	6078      	str	r0, [r7, #4]
 8007c24:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	683a      	ldr	r2, [r7, #0]
 8007c2a:	605a      	str	r2, [r3, #4]
    }
 8007c2c:	bf00      	nop
 8007c2e:	370c      	adds	r7, #12
 8007c30:	46bd      	mov	sp, r7
 8007c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c36:	4770      	bx	lr

08007c38 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *        provide a means to switch screen from places that does not have access to a
     *        pointer to the new screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8007c38:	b480      	push	{r7}
 8007c3a:	b083      	sub	sp, #12
 8007c3c:	af00      	add	r7, sp, #0
 8007c3e:	6078      	str	r0, [r7, #4]
 8007c40:	460b      	mov	r3, r1
 8007c42:	70fb      	strb	r3, [r7, #3]
    {
    }
 8007c44:	bf00      	nop
 8007c46:	370c      	adds	r7, #12
 8007c48:	46bd      	mov	sp, r7
 8007c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c4e:	4770      	bx	lr

08007c50 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
     *
     * @brief Destructor.
     *
     *        Empty virtual destructor.
     */
    virtual ~GenericCallback()
 8007c50:	b480      	push	{r7}
 8007c52:	b083      	sub	sp, #12
 8007c54:	af00      	add	r7, sp, #0
 8007c56:	6078      	str	r0, [r7, #4]
    {
 8007c58:	4a04      	ldr	r2, [pc, #16]	; (8007c6c <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	601a      	str	r2, [r3, #0]
    }
 8007c5e:	687b      	ldr	r3, [r7, #4]
 8007c60:	4618      	mov	r0, r3
 8007c62:	370c      	adds	r7, #12
 8007c64:	46bd      	mov	sp, r7
 8007c66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c6a:	4770      	bx	lr
 8007c6c:	0801c324 	.word	0x0801c324

08007c70 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8007c70:	b580      	push	{r7, lr}
 8007c72:	b082      	sub	sp, #8
 8007c74:	af00      	add	r7, sp, #0
 8007c76:	6078      	str	r0, [r7, #4]
    }
 8007c78:	6878      	ldr	r0, [r7, #4]
 8007c7a:	f7ff ffe9 	bl	8007c50 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8007c7e:	2104      	movs	r1, #4
 8007c80:	6878      	ldr	r0, [r7, #4]
 8007c82:	f012 fe1c 	bl	801a8be <_ZdlPvj>
 8007c86:	687b      	ldr	r3, [r7, #4]
 8007c88:	4618      	mov	r0, r3
 8007c8a:	3708      	adds	r7, #8
 8007c8c:	46bd      	mov	sp, r7
 8007c8e:	bd80      	pop	{r7, pc}

08007c90 <_ZN8touchgfx3HAL11getInstanceEv>:
     *
     *        Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8007c90:	b480      	push	{r7}
 8007c92:	af00      	add	r7, sp, #0
    {
        return instance;
 8007c94:	4b03      	ldr	r3, [pc, #12]	; (8007ca4 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 8007c96:	681b      	ldr	r3, [r3, #0]
    }
 8007c98:	4618      	mov	r0, r3
 8007c9a:	46bd      	mov	sp, r7
 8007c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ca0:	4770      	bx	lr
 8007ca2:	bf00      	nop
 8007ca4:	200014b8 	.word	0x200014b8

08007ca8 <_ZN8touchgfx3HAL3lcdEv>:
     *
     *        Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8007ca8:	b480      	push	{r7}
 8007caa:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8007cac:	4b0b      	ldr	r3, [pc, #44]	; (8007cdc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007cae:	681b      	ldr	r3, [r3, #0]
 8007cb0:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 8007cb4:	2b00      	cmp	r3, #0
 8007cb6:	d008      	beq.n	8007cca <_ZN8touchgfx3HAL3lcdEv+0x22>
 8007cb8:	4b08      	ldr	r3, [pc, #32]	; (8007cdc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007cba:	681b      	ldr	r3, [r3, #0]
 8007cbc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007cbe:	2b00      	cmp	r3, #0
 8007cc0:	d003      	beq.n	8007cca <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 8007cc2:	4b06      	ldr	r3, [pc, #24]	; (8007cdc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007cc4:	681b      	ldr	r3, [r3, #0]
 8007cc6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007cc8:	e002      	b.n	8007cd0 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        else
        {
            return instance->lcdRef;
 8007cca:	4b04      	ldr	r3, [pc, #16]	; (8007cdc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007ccc:	681b      	ldr	r3, [r3, #0]
 8007cce:	689b      	ldr	r3, [r3, #8]
        }
    }
 8007cd0:	4618      	mov	r0, r3
 8007cd2:	46bd      	mov	sp, r7
 8007cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cd8:	4770      	bx	lr
 8007cda:	bf00      	nop
 8007cdc:	200014b8 	.word	0x200014b8

08007ce0 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8007ce0:	b580      	push	{r7, lr}
 8007ce2:	b082      	sub	sp, #8
 8007ce4:	af00      	add	r7, sp, #0
 8007ce6:	6078      	str	r0, [r7, #4]
 8007ce8:	4a05      	ldr	r2, [pc, #20]	; (8007d00 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	601a      	str	r2, [r3, #0]
 8007cee:	687b      	ldr	r3, [r7, #4]
 8007cf0:	4618      	mov	r0, r3
 8007cf2:	f7ff ff1f 	bl	8007b34 <_ZN8touchgfx15UIEventListenerD1Ev>
 8007cf6:	687b      	ldr	r3, [r7, #4]
 8007cf8:	4618      	mov	r0, r3
 8007cfa:	3708      	adds	r7, #8
 8007cfc:	46bd      	mov	sp, r7
 8007cfe:	bd80      	pop	{r7, pc}
 8007d00:	0801d490 	.word	0x0801d490

08007d04 <_ZN8touchgfx11ApplicationD0Ev>:
 8007d04:	b580      	push	{r7, lr}
 8007d06:	b082      	sub	sp, #8
 8007d08:	af00      	add	r7, sp, #0
 8007d0a:	6078      	str	r0, [r7, #4]
 8007d0c:	6878      	ldr	r0, [r7, #4]
 8007d0e:	f7ff ffe7 	bl	8007ce0 <_ZN8touchgfx11ApplicationD1Ev>
 8007d12:	f44f 7198 	mov.w	r1, #304	; 0x130
 8007d16:	6878      	ldr	r0, [r7, #4]
 8007d18:	f012 fdd1 	bl	801a8be <_ZdlPvj>
 8007d1c:	687b      	ldr	r3, [r7, #4]
 8007d1e:	4618      	mov	r0, r3
 8007d20:	3708      	adds	r7, #8
 8007d22:	46bd      	mov	sp, r7
 8007d24:	bd80      	pop	{r7, pc}
	...

08007d28 <_ZN8touchgfx14MVPApplicationC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    MVPApplication() :
 8007d28:	b580      	push	{r7, lr}
 8007d2a:	b082      	sub	sp, #8
 8007d2c:	af00      	add	r7, sp, #0
 8007d2e:	6078      	str	r0, [r7, #4]
        currentPresenter(0),
        pendingScreenTransitionCallback(0)
 8007d30:	687b      	ldr	r3, [r7, #4]
 8007d32:	4618      	mov	r0, r3
 8007d34:	f005 fb94 	bl	800d460 <_ZN8touchgfx11ApplicationC1Ev>
 8007d38:	4a09      	ldr	r2, [pc, #36]	; (8007d60 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	601a      	str	r2, [r3, #0]
 8007d3e:	687b      	ldr	r3, [r7, #4]
 8007d40:	2200      	movs	r2, #0
 8007d42:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	2200      	movs	r2, #0
 8007d4a:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    {
        instance = this;
 8007d4e:	687b      	ldr	r3, [r7, #4]
 8007d50:	4a04      	ldr	r2, [pc, #16]	; (8007d64 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8007d52:	6013      	str	r3, [r2, #0]
    }
 8007d54:	687b      	ldr	r3, [r7, #4]
 8007d56:	4618      	mov	r0, r3
 8007d58:	3708      	adds	r7, #8
 8007d5a:	46bd      	mov	sp, r7
 8007d5c:	bd80      	pop	{r7, pc}
 8007d5e:	bf00      	nop
 8007d60:	0801c2e8 	.word	0x0801c2e8
 8007d64:	20001524 	.word	0x20001524

08007d68 <_ZN8touchgfx14MVPApplicationD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPApplication() { }
 8007d68:	b580      	push	{r7, lr}
 8007d6a:	b082      	sub	sp, #8
 8007d6c:	af00      	add	r7, sp, #0
 8007d6e:	6078      	str	r0, [r7, #4]
 8007d70:	4a05      	ldr	r2, [pc, #20]	; (8007d88 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 8007d72:	687b      	ldr	r3, [r7, #4]
 8007d74:	601a      	str	r2, [r3, #0]
 8007d76:	687b      	ldr	r3, [r7, #4]
 8007d78:	4618      	mov	r0, r3
 8007d7a:	f7ff ffb1 	bl	8007ce0 <_ZN8touchgfx11ApplicationD1Ev>
 8007d7e:	687b      	ldr	r3, [r7, #4]
 8007d80:	4618      	mov	r0, r3
 8007d82:	3708      	adds	r7, #8
 8007d84:	46bd      	mov	sp, r7
 8007d86:	bd80      	pop	{r7, pc}
 8007d88:	0801c2e8 	.word	0x0801c2e8

08007d8c <_ZN8touchgfx14MVPApplicationD0Ev>:
 8007d8c:	b580      	push	{r7, lr}
 8007d8e:	b082      	sub	sp, #8
 8007d90:	af00      	add	r7, sp, #0
 8007d92:	6078      	str	r0, [r7, #4]
 8007d94:	6878      	ldr	r0, [r7, #4]
 8007d96:	f7ff ffe7 	bl	8007d68 <_ZN8touchgfx14MVPApplicationD1Ev>
 8007d9a:	f44f 719c 	mov.w	r1, #312	; 0x138
 8007d9e:	6878      	ldr	r0, [r7, #4]
 8007da0:	f012 fd8d 	bl	801a8be <_ZdlPvj>
 8007da4:	687b      	ldr	r3, [r7, #4]
 8007da6:	4618      	mov	r0, r3
 8007da8:	3708      	adds	r7, #8
 8007daa:	46bd      	mov	sp, r7
 8007dac:	bd80      	pop	{r7, pc}

08007dae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     *
     * @brief Handles the pending screen transition.
     *
     *        Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8007dae:	b580      	push	{r7, lr}
 8007db0:	b082      	sub	sp, #8
 8007db2:	af00      	add	r7, sp, #0
 8007db4:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8007db6:	6878      	ldr	r0, [r7, #4]
 8007db8:	f000 f804 	bl	8007dc4 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8007dbc:	bf00      	nop
 8007dbe:	3708      	adds	r7, #8
 8007dc0:	46bd      	mov	sp, r7
 8007dc2:	bd80      	pop	{r7, pc}

08007dc4 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:
     * @brief Evaluates the pending Callback instances.
     *
     *        Evaluates the pending Callback instances. If a callback is valid, it is executed
     *        and a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8007dc4:	b580      	push	{r7, lr}
 8007dc6:	b082      	sub	sp, #8
 8007dc8:	af00      	add	r7, sp, #0
 8007dca:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8007dcc:	687b      	ldr	r3, [r7, #4]
 8007dce:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8007dd2:	2b00      	cmp	r3, #0
 8007dd4:	d00f      	beq.n	8007df6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8007dd6:	687b      	ldr	r3, [r7, #4]
 8007dd8:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8007ddc:	687b      	ldr	r3, [r7, #4]
 8007dde:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8007de2:	681b      	ldr	r3, [r3, #0]
 8007de4:	330c      	adds	r3, #12
 8007de6:	681b      	ldr	r3, [r3, #0]
 8007de8:	4610      	mov	r0, r2
 8007dea:	4798      	blx	r3
 8007dec:	4603      	mov	r3, r0
 8007dee:	2b00      	cmp	r3, #0
 8007df0:	d001      	beq.n	8007df6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8007df2:	2301      	movs	r3, #1
 8007df4:	e000      	b.n	8007df8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8007df6:	2300      	movs	r3, #0
 8007df8:	2b00      	cmp	r3, #0
 8007dfa:	d00e      	beq.n	8007e1a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8007e02:	687b      	ldr	r3, [r7, #4]
 8007e04:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8007e08:	681b      	ldr	r3, [r3, #0]
 8007e0a:	3308      	adds	r3, #8
 8007e0c:	681b      	ldr	r3, [r3, #0]
 8007e0e:	4610      	mov	r0, r2
 8007e10:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8007e12:	687b      	ldr	r3, [r7, #4]
 8007e14:	2200      	movs	r2, #0
 8007e16:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
        }
    }
 8007e1a:	bf00      	nop
 8007e1c:	3708      	adds	r7, #8
 8007e1e:	46bd      	mov	sp, r7
 8007e20:	bd80      	pop	{r7, pc}

08007e22 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>:
 * @param [in] currentScreen    If non-null, the current screen.
 * @param [in] currentPresenter If non-null, the current presenter.
 * @param [in] currentTrans     If non-null, the current transaction.
 */
static inline void prepareTransition(Screen** currentScreen, Presenter** currentPresenter, Transition** currentTrans)
{
 8007e22:	b580      	push	{r7, lr}
 8007e24:	b084      	sub	sp, #16
 8007e26:	af00      	add	r7, sp, #0
 8007e28:	60f8      	str	r0, [r7, #12]
 8007e2a:	60b9      	str	r1, [r7, #8]
 8007e2c:	607a      	str	r2, [r7, #4]
    Application::getInstance()->clearAllTimerWidgets();
 8007e2e:	f005 faf7 	bl	800d420 <_ZN8touchgfx11Application11getInstanceEv>
 8007e32:	4603      	mov	r3, r0
 8007e34:	4618      	mov	r0, r3
 8007e36:	f005 faf9 	bl	800d42c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>

    if (*currentTrans)
 8007e3a:	687b      	ldr	r3, [r7, #4]
 8007e3c:	681b      	ldr	r3, [r3, #0]
 8007e3e:	2b00      	cmp	r3, #0
 8007e40:	d008      	beq.n	8007e54 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x32>
    {
        (*currentTrans)->tearDown();
 8007e42:	687b      	ldr	r3, [r7, #4]
 8007e44:	681a      	ldr	r2, [r3, #0]
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	681b      	ldr	r3, [r3, #0]
 8007e4a:	681b      	ldr	r3, [r3, #0]
 8007e4c:	330c      	adds	r3, #12
 8007e4e:	681b      	ldr	r3, [r3, #0]
 8007e50:	4610      	mov	r0, r2
 8007e52:	4798      	blx	r3
    }
    if (*currentTrans)
 8007e54:	687b      	ldr	r3, [r7, #4]
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	2b00      	cmp	r3, #0
 8007e5a:	d007      	beq.n	8007e6c <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x4a>
    {
        (*currentTrans)->~Transition();
 8007e5c:	687b      	ldr	r3, [r7, #4]
 8007e5e:	681a      	ldr	r2, [r3, #0]
 8007e60:	687b      	ldr	r3, [r7, #4]
 8007e62:	681b      	ldr	r3, [r3, #0]
 8007e64:	681b      	ldr	r3, [r3, #0]
 8007e66:	681b      	ldr	r3, [r3, #0]
 8007e68:	4610      	mov	r0, r2
 8007e6a:	4798      	blx	r3
    }
    if (*currentScreen)
 8007e6c:	68fb      	ldr	r3, [r7, #12]
 8007e6e:	681b      	ldr	r3, [r3, #0]
 8007e70:	2b00      	cmp	r3, #0
 8007e72:	d008      	beq.n	8007e86 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x64>
    {
        (*currentScreen)->tearDownScreen();
 8007e74:	68fb      	ldr	r3, [r7, #12]
 8007e76:	681a      	ldr	r2, [r3, #0]
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	681b      	ldr	r3, [r3, #0]
 8007e7c:	681b      	ldr	r3, [r3, #0]
 8007e7e:	3314      	adds	r3, #20
 8007e80:	681b      	ldr	r3, [r3, #0]
 8007e82:	4610      	mov	r0, r2
 8007e84:	4798      	blx	r3
    }
    if (*currentPresenter)
 8007e86:	68bb      	ldr	r3, [r7, #8]
 8007e88:	681b      	ldr	r3, [r3, #0]
 8007e8a:	2b00      	cmp	r3, #0
 8007e8c:	d008      	beq.n	8007ea0 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x7e>
    {
        (*currentPresenter)->deactivate();
 8007e8e:	68bb      	ldr	r3, [r7, #8]
 8007e90:	681a      	ldr	r2, [r3, #0]
 8007e92:	68bb      	ldr	r3, [r7, #8]
 8007e94:	681b      	ldr	r3, [r3, #0]
 8007e96:	681b      	ldr	r3, [r3, #0]
 8007e98:	3304      	adds	r3, #4
 8007e9a:	681b      	ldr	r3, [r3, #0]
 8007e9c:	4610      	mov	r0, r2
 8007e9e:	4798      	blx	r3
    }
    if (*currentScreen)
 8007ea0:	68fb      	ldr	r3, [r7, #12]
 8007ea2:	681b      	ldr	r3, [r3, #0]
 8007ea4:	2b00      	cmp	r3, #0
 8007ea6:	d007      	beq.n	8007eb8 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x96>
    {
        (*currentScreen)->~Screen();
 8007ea8:	68fb      	ldr	r3, [r7, #12]
 8007eaa:	681a      	ldr	r2, [r3, #0]
 8007eac:	68fb      	ldr	r3, [r7, #12]
 8007eae:	681b      	ldr	r3, [r3, #0]
 8007eb0:	681b      	ldr	r3, [r3, #0]
 8007eb2:	681b      	ldr	r3, [r3, #0]
 8007eb4:	4610      	mov	r0, r2
 8007eb6:	4798      	blx	r3
    }
    if (*currentPresenter)
 8007eb8:	68bb      	ldr	r3, [r7, #8]
 8007eba:	681b      	ldr	r3, [r3, #0]
 8007ebc:	2b00      	cmp	r3, #0
 8007ebe:	d008      	beq.n	8007ed2 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0xb0>
    {
        (*currentPresenter)->~Presenter();
 8007ec0:	68bb      	ldr	r3, [r7, #8]
 8007ec2:	681a      	ldr	r2, [r3, #0]
 8007ec4:	68bb      	ldr	r3, [r7, #8]
 8007ec6:	681b      	ldr	r3, [r3, #0]
 8007ec8:	681b      	ldr	r3, [r3, #0]
 8007eca:	3308      	adds	r3, #8
 8007ecc:	681b      	ldr	r3, [r3, #0]
 8007ece:	4610      	mov	r0, r2
 8007ed0:	4798      	blx	r3
    }
}
 8007ed2:	bf00      	nop
 8007ed4:	3710      	adds	r7, #16
 8007ed6:	46bd      	mov	sp, r7
 8007ed8:	bd80      	pop	{r7, pc}

08007eda <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>:
 * @param [in] newScreen     If non-null, the new screen.
 * @param [in] newPresenter  If non-null, the new presenter.
 * @param [in] newTransition If non-null, the new transition.
 */
static inline void finalizeTransition(Screen* newScreen, Presenter* newPresenter, Transition* newTransition)
{
 8007eda:	b580      	push	{r7, lr}
 8007edc:	b084      	sub	sp, #16
 8007ede:	af00      	add	r7, sp, #0
 8007ee0:	60f8      	str	r0, [r7, #12]
 8007ee2:	60b9      	str	r1, [r7, #8]
 8007ee4:	607a      	str	r2, [r7, #4]
    newScreen->setupScreen();
 8007ee6:	68fb      	ldr	r3, [r7, #12]
 8007ee8:	681b      	ldr	r3, [r3, #0]
 8007eea:	330c      	adds	r3, #12
 8007eec:	681b      	ldr	r3, [r3, #0]
 8007eee:	68f8      	ldr	r0, [r7, #12]
 8007ef0:	4798      	blx	r3
    newPresenter->activate();
 8007ef2:	68bb      	ldr	r3, [r7, #8]
 8007ef4:	681b      	ldr	r3, [r3, #0]
 8007ef6:	681b      	ldr	r3, [r3, #0]
 8007ef8:	68b8      	ldr	r0, [r7, #8]
 8007efa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8007efc:	6879      	ldr	r1, [r7, #4]
 8007efe:	68f8      	ldr	r0, [r7, #12]
 8007f00:	f006 fb38 	bl	800e574 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8007f04:	687b      	ldr	r3, [r7, #4]
 8007f06:	681b      	ldr	r3, [r3, #0]
 8007f08:	3310      	adds	r3, #16
 8007f0a:	681b      	ldr	r3, [r3, #0]
 8007f0c:	6878      	ldr	r0, [r7, #4]
 8007f0e:	4798      	blx	r3

    Application::getInstance()->draw();
 8007f10:	f005 fa86 	bl	800d420 <_ZN8touchgfx11Application11getInstanceEv>
 8007f14:	4603      	mov	r3, r0
 8007f16:	681a      	ldr	r2, [r3, #0]
 8007f18:	3228      	adds	r2, #40	; 0x28
 8007f1a:	6812      	ldr	r2, [r2, #0]
 8007f1c:	4618      	mov	r0, r3
 8007f1e:	4790      	blx	r2
}
 8007f20:	bf00      	nop
 8007f22:	3710      	adds	r7, #16
 8007f24:	46bd      	mov	sp, r7
 8007f26:	bd80      	pop	{r7, pc}

08007f28 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8007f28:	b480      	push	{r7}
 8007f2a:	b083      	sub	sp, #12
 8007f2c:	af00      	add	r7, sp, #0
 8007f2e:	6078      	str	r0, [r7, #4]
 8007f30:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 8007f32:	687b      	ldr	r3, [r7, #4]
 8007f34:	683a      	ldr	r2, [r7, #0]
 8007f36:	601a      	str	r2, [r3, #0]
    }
 8007f38:	bf00      	nop
 8007f3a:	370c      	adds	r7, #12
 8007f3c:	46bd      	mov	sp, r7
 8007f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f42:	4770      	bx	lr

08007f44 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8007f44:	b580      	push	{r7, lr}
 8007f46:	b082      	sub	sp, #8
 8007f48:	af00      	add	r7, sp, #0
 8007f4a:	6078      	str	r0, [r7, #4]
 8007f4c:	4a08      	ldr	r2, [pc, #32]	; (8007f70 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	601a      	str	r2, [r3, #0]
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8007f58:	4618      	mov	r0, r3
 8007f5a:	f000 fa4d 	bl	80083f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	4618      	mov	r0, r3
 8007f62:	f7ff ff01 	bl	8007d68 <_ZN8touchgfx14MVPApplicationD1Ev>
 8007f66:	687b      	ldr	r3, [r7, #4]
 8007f68:	4618      	mov	r0, r3
 8007f6a:	3708      	adds	r7, #8
 8007f6c:	46bd      	mov	sp, r7
 8007f6e:	bd80      	pop	{r7, pc}
 8007f70:	0801c294 	.word	0x0801c294

08007f74 <_ZN23FrontendApplicationBaseD0Ev>:
 8007f74:	b580      	push	{r7, lr}
 8007f76:	b082      	sub	sp, #8
 8007f78:	af00      	add	r7, sp, #0
 8007f7a:	6078      	str	r0, [r7, #4]
 8007f7c:	6878      	ldr	r0, [r7, #4]
 8007f7e:	f7ff ffe1 	bl	8007f44 <_ZN23FrontendApplicationBaseD1Ev>
 8007f82:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8007f86:	6878      	ldr	r0, [r7, #4]
 8007f88:	f012 fc99 	bl	801a8be <_ZdlPvj>
 8007f8c:	687b      	ldr	r3, [r7, #4]
 8007f8e:	4618      	mov	r0, r3
 8007f90:	3708      	adds	r7, #8
 8007f92:	46bd      	mov	sp, r7
 8007f94:	bd80      	pop	{r7, pc}
	...

08007f98 <_ZN8touchgfx12NoTransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    NoTransition() : Transition() { }
 8007f98:	b580      	push	{r7, lr}
 8007f9a:	b082      	sub	sp, #8
 8007f9c:	af00      	add	r7, sp, #0
 8007f9e:	6078      	str	r0, [r7, #4]
 8007fa0:	687b      	ldr	r3, [r7, #4]
 8007fa2:	4618      	mov	r0, r3
 8007fa4:	f7ff fde6 	bl	8007b74 <_ZN8touchgfx10TransitionC1Ev>
 8007fa8:	4a03      	ldr	r2, [pc, #12]	; (8007fb8 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	601a      	str	r2, [r3, #0]
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	4618      	mov	r0, r3
 8007fb2:	3708      	adds	r7, #8
 8007fb4:	46bd      	mov	sp, r7
 8007fb6:	bd80      	pop	{r7, pc}
 8007fb8:	0801c274 	.word	0x0801c274

08007fbc <_ZN8touchgfx12NoTransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~NoTransition() { }
 8007fbc:	b580      	push	{r7, lr}
 8007fbe:	b082      	sub	sp, #8
 8007fc0:	af00      	add	r7, sp, #0
 8007fc2:	6078      	str	r0, [r7, #4]
 8007fc4:	4a05      	ldr	r2, [pc, #20]	; (8007fdc <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8007fc6:	687b      	ldr	r3, [r7, #4]
 8007fc8:	601a      	str	r2, [r3, #0]
 8007fca:	687b      	ldr	r3, [r7, #4]
 8007fcc:	4618      	mov	r0, r3
 8007fce:	f7ff fde7 	bl	8007ba0 <_ZN8touchgfx10TransitionD1Ev>
 8007fd2:	687b      	ldr	r3, [r7, #4]
 8007fd4:	4618      	mov	r0, r3
 8007fd6:	3708      	adds	r7, #8
 8007fd8:	46bd      	mov	sp, r7
 8007fda:	bd80      	pop	{r7, pc}
 8007fdc:	0801c274 	.word	0x0801c274

08007fe0 <_ZN8touchgfx12NoTransitionD0Ev>:
 8007fe0:	b580      	push	{r7, lr}
 8007fe2:	b082      	sub	sp, #8
 8007fe4:	af00      	add	r7, sp, #0
 8007fe6:	6078      	str	r0, [r7, #4]
 8007fe8:	6878      	ldr	r0, [r7, #4]
 8007fea:	f7ff ffe7 	bl	8007fbc <_ZN8touchgfx12NoTransitionD1Ev>
 8007fee:	210c      	movs	r1, #12
 8007ff0:	6878      	ldr	r0, [r7, #4]
 8007ff2:	f012 fc64 	bl	801a8be <_ZdlPvj>
 8007ff6:	687b      	ldr	r3, [r7, #4]
 8007ff8:	4618      	mov	r0, r3
 8007ffa:	3708      	adds	r7, #8
 8007ffc:	46bd      	mov	sp, r7
 8007ffe:	bd80      	pop	{r7, pc}

08008000 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
     *
     * @brief Indicates that the transition is done after the first tick.
     *
     *        Indicates that the transition is done after the first tick.
     */
    virtual void handleTickEvent()
 8008000:	b480      	push	{r7}
 8008002:	b083      	sub	sp, #12
 8008004:	af00      	add	r7, sp, #0
 8008006:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	2201      	movs	r2, #1
 800800c:	721a      	strb	r2, [r3, #8]
    }
 800800e:	bf00      	nop
 8008010:	370c      	adds	r7, #12
 8008012:	46bd      	mov	sp, r7
 8008014:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008018:	4770      	bx	lr

0800801a <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800801a:	b480      	push	{r7}
 800801c:	b083      	sub	sp, #12
 800801e:	af00      	add	r7, sp, #0
 8008020:	6078      	str	r0, [r7, #4]
 8008022:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8008024:	687b      	ldr	r3, [r7, #4]
 8008026:	683a      	ldr	r2, [r7, #0]
 8008028:	605a      	str	r2, [r3, #4]
    }
 800802a:	bf00      	nop
 800802c:	370c      	adds	r7, #12
 800802e:	46bd      	mov	sp, r7
 8008030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008034:	4770      	bx	lr
	...

08008038 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008038:	b580      	push	{r7, lr}
 800803a:	b084      	sub	sp, #16
 800803c:	af00      	add	r7, sp, #0
 800803e:	60f8      	str	r0, [r7, #12]
 8008040:	60b9      	str	r1, [r7, #8]
 8008042:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8008044:	68fb      	ldr	r3, [r7, #12]
 8008046:	4618      	mov	r0, r3
 8008048:	f7ff fe6e 	bl	8007d28 <_ZN8touchgfx14MVPApplicationC1Ev>
 800804c:	4a13      	ldr	r2, [pc, #76]	; (800809c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 800804e:	68fb      	ldr	r3, [r7, #12]
 8008050:	601a      	str	r2, [r3, #0]
 8008052:	68fb      	ldr	r3, [r7, #12]
 8008054:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8008058:	4618      	mov	r0, r3
 800805a:	f000 f89f 	bl	800819c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 800805e:	68fb      	ldr	r3, [r7, #12]
 8008060:	687a      	ldr	r2, [r7, #4]
 8008062:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
 8008066:	68fb      	ldr	r3, [r7, #12]
 8008068:	68ba      	ldr	r2, [r7, #8]
 800806a:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800806e:	f7ff fe0f 	bl	8007c90 <_ZN8touchgfx3HAL11getInstanceEv>
 8008072:	4603      	mov	r3, r0
 8008074:	681a      	ldr	r2, [r3, #0]
 8008076:	3208      	adds	r2, #8
 8008078:	6812      	ldr	r2, [r2, #0]
 800807a:	2101      	movs	r1, #1
 800807c:	4618      	mov	r0, r3
 800807e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8008080:	2000      	movs	r0, #0
 8008082:	f000 febb 	bl	8008dfc <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8008086:	f7ff fe0f 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800808a:	4603      	mov	r3, r0
 800808c:	4618      	mov	r0, r3
 800808e:	f00b fbb4 	bl	80137fa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8008092:	68fb      	ldr	r3, [r7, #12]
 8008094:	4618      	mov	r0, r3
 8008096:	3710      	adds	r7, #16
 8008098:	46bd      	mov	sp, r7
 800809a:	bd80      	pop	{r7, pc}
 800809c:	0801c294 	.word	0x0801c294

080080a0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 80080a0:	b480      	push	{r7}
 80080a2:	b083      	sub	sp, #12
 80080a4:	af00      	add	r7, sp, #0
 80080a6:	6078      	str	r0, [r7, #4]
 80080a8:	6039      	str	r1, [r7, #0]
 80080aa:	687b      	ldr	r3, [r7, #4]
 80080ac:	4618      	mov	r0, r3
 80080ae:	370c      	adds	r7, #12
 80080b0:	46bd      	mov	sp, r7
 80080b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080b6:	4770      	bx	lr

080080b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *       three arguments of any type.
 *
 * @tparam dest_type The type of the class in which the member function resides.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80080b8:	b580      	push	{r7, lr}
 80080ba:	b082      	sub	sp, #8
 80080bc:	af00      	add	r7, sp, #0
 80080be:	6078      	str	r0, [r7, #4]
 80080c0:	6039      	str	r1, [r7, #0]
 80080c2:	687b      	ldr	r3, [r7, #4]
 80080c4:	683a      	ldr	r2, [r7, #0]
 80080c6:	4611      	mov	r1, r2
 80080c8:	4618      	mov	r0, r3
 80080ca:	f7ff ffe9 	bl	80080a0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 80080ce:	683b      	ldr	r3, [r7, #0]
 80080d0:	685a      	ldr	r2, [r3, #4]
 80080d2:	687b      	ldr	r3, [r7, #4]
 80080d4:	605a      	str	r2, [r3, #4]
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	683a      	ldr	r2, [r7, #0]
 80080da:	3308      	adds	r3, #8
 80080dc:	3208      	adds	r2, #8
 80080de:	e892 0003 	ldmia.w	r2, {r0, r1}
 80080e2:	e883 0003 	stmia.w	r3, {r0, r1}
 80080e6:	687b      	ldr	r3, [r7, #4]
 80080e8:	4618      	mov	r0, r3
 80080ea:	3708      	adds	r7, #8
 80080ec:	46bd      	mov	sp, r7
 80080ee:	bd80      	pop	{r7, pc}

080080f0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 80080f0:	b590      	push	{r4, r7, lr}
 80080f2:	b089      	sub	sp, #36	; 0x24
 80080f4:	af00      	add	r7, sp, #0
 80080f6:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	f503 749c 	add.w	r4, r3, #312	; 0x138
 80080fe:	4b10      	ldr	r3, [pc, #64]	; (8008140 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 8008100:	61bb      	str	r3, [r7, #24]
 8008102:	2300      	movs	r3, #0
 8008104:	61fb      	str	r3, [r7, #28]
 8008106:	f107 0008 	add.w	r0, r7, #8
 800810a:	f107 0318 	add.w	r3, r7, #24
 800810e:	cb0c      	ldmia	r3, {r2, r3}
 8008110:	6879      	ldr	r1, [r7, #4]
 8008112:	f000 f85f 	bl	80081d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008116:	f107 0308 	add.w	r3, r7, #8
 800811a:	4619      	mov	r1, r3
 800811c:	4620      	mov	r0, r4
 800811e:	f7ff ffcb 	bl	80080b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008122:	f107 0308 	add.w	r3, r7, #8
 8008126:	4618      	mov	r0, r3
 8008128:	f000 f966 	bl	80083f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800812c:	687b      	ldr	r3, [r7, #4]
 800812e:	f503 729c 	add.w	r2, r3, #312	; 0x138
 8008132:	687b      	ldr	r3, [r7, #4]
 8008134:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
}
 8008138:	bf00      	nop
 800813a:	3724      	adds	r7, #36	; 0x24
 800813c:	46bd      	mov	sp, r7
 800813e:	bd90      	pop	{r4, r7, pc}
 8008140:	08008145 	.word	0x08008145

08008144 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8008144:	b580      	push	{r7, lr}
 8008146:	b084      	sub	sp, #16
 8008148:	af02      	add	r7, sp, #8
 800814a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800814c:	687b      	ldr	r3, [r7, #4]
 800814e:	f503 7198 	add.w	r1, r3, #304	; 0x130
 8008152:	687b      	ldr	r3, [r7, #4]
 8008154:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8008158:	461a      	mov	r2, r3
 800815a:	687b      	ldr	r3, [r7, #4]
 800815c:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8008160:	9300      	str	r3, [sp, #0]
 8008162:	4b04      	ldr	r3, [pc, #16]	; (8008174 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 8008164:	4804      	ldr	r0, [pc, #16]	; (8008178 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 8008166:	f000 f855 	bl	8008214 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800816a:	bf00      	nop
 800816c:	3708      	adds	r7, #8
 800816e:	46bd      	mov	sp, r7
 8008170:	bd80      	pop	{r7, pc}
 8008172:	bf00      	nop
 8008174:	20001518 	.word	0x20001518
 8008178:	20001514 	.word	0x20001514

0800817c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800817c:	b480      	push	{r7}
 800817e:	b083      	sub	sp, #12
 8008180:	af00      	add	r7, sp, #0
 8008182:	6078      	str	r0, [r7, #4]
 8008184:	4a04      	ldr	r2, [pc, #16]	; (8008198 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008186:	687b      	ldr	r3, [r7, #4]
 8008188:	601a      	str	r2, [r3, #0]
 800818a:	687b      	ldr	r3, [r7, #4]
 800818c:	4618      	mov	r0, r3
 800818e:	370c      	adds	r7, #12
 8008190:	46bd      	mov	sp, r7
 8008192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008196:	4770      	bx	lr
 8008198:	0801c324 	.word	0x0801c324

0800819c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Initializes an empty callback.
     */
    Callback() : pobject(0), pmemfun_0(0) { }
 800819c:	b580      	push	{r7, lr}
 800819e:	b082      	sub	sp, #8
 80081a0:	af00      	add	r7, sp, #0
 80081a2:	6078      	str	r0, [r7, #4]
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	4618      	mov	r0, r3
 80081a8:	f7ff ffe8 	bl	800817c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 80081ac:	4a08      	ldr	r2, [pc, #32]	; (80081d0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 80081ae:	687b      	ldr	r3, [r7, #4]
 80081b0:	601a      	str	r2, [r3, #0]
 80081b2:	687b      	ldr	r3, [r7, #4]
 80081b4:	2200      	movs	r2, #0
 80081b6:	605a      	str	r2, [r3, #4]
 80081b8:	687b      	ldr	r3, [r7, #4]
 80081ba:	2200      	movs	r2, #0
 80081bc:	609a      	str	r2, [r3, #8]
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	2200      	movs	r2, #0
 80081c2:	60da      	str	r2, [r3, #12]
 80081c4:	687b      	ldr	r3, [r7, #4]
 80081c6:	4618      	mov	r0, r3
 80081c8:	3708      	adds	r7, #8
 80081ca:	46bd      	mov	sp, r7
 80081cc:	bd80      	pop	{r7, pc}
 80081ce:	bf00      	nop
 80081d0:	0801c2d0 	.word	0x0801c2d0

080081d4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pobject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function
     *                       takes zero arguments.
     */
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 80081d4:	b580      	push	{r7, lr}
 80081d6:	b084      	sub	sp, #16
 80081d8:	af00      	add	r7, sp, #0
 80081da:	60f8      	str	r0, [r7, #12]
 80081dc:	60b9      	str	r1, [r7, #8]
 80081de:	4639      	mov	r1, r7
 80081e0:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 80081e4:	68fb      	ldr	r3, [r7, #12]
 80081e6:	4618      	mov	r0, r3
 80081e8:	f7ff ffc8 	bl	800817c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 80081ec:	4a08      	ldr	r2, [pc, #32]	; (8008210 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 80081ee:	68fb      	ldr	r3, [r7, #12]
 80081f0:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 80081f2:	68fb      	ldr	r3, [r7, #12]
 80081f4:	68ba      	ldr	r2, [r7, #8]
 80081f6:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
 80081f8:	68fb      	ldr	r3, [r7, #12]
 80081fa:	3308      	adds	r3, #8
 80081fc:	463a      	mov	r2, r7
 80081fe:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008202:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 8008206:	68fb      	ldr	r3, [r7, #12]
 8008208:	4618      	mov	r0, r3
 800820a:	3710      	adds	r7, #16
 800820c:	46bd      	mov	sp, r7
 800820e:	bd80      	pop	{r7, pc}
 8008210:	0801c2d0 	.word	0x0801c2d0

08008214 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template< class ScreenType, class PresenterType, class TransType, class ModelType  >
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008214:	b590      	push	{r4, r7, lr}
 8008216:	b089      	sub	sp, #36	; 0x24
 8008218:	af00      	add	r7, sp, #0
 800821a:	60f8      	str	r0, [r7, #12]
 800821c:	60b9      	str	r1, [r7, #8]
 800821e:	607a      	str	r2, [r7, #4]
 8008220:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008222:	687b      	ldr	r3, [r7, #4]
 8008224:	689a      	ldr	r2, [r3, #8]
 8008226:	687b      	ldr	r3, [r7, #4]
 8008228:	689b      	ldr	r3, [r3, #8]
 800822a:	681b      	ldr	r3, [r3, #0]
 800822c:	3320      	adds	r3, #32
 800822e:	681b      	ldr	r3, [r3, #0]
 8008230:	4610      	mov	r0, r2
 8008232:	4798      	blx	r3
 8008234:	4603      	mov	r3, r0
 8008236:	2ba3      	cmp	r3, #163	; 0xa3
 8008238:	d805      	bhi.n	8008246 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x32>
 800823a:	4b46      	ldr	r3, [pc, #280]	; (8008354 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x140>)
 800823c:	4a46      	ldr	r2, [pc, #280]	; (8008358 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x144>)
 800823e:	21c2      	movs	r1, #194	; 0xc2
 8008240:	4846      	ldr	r0, [pc, #280]	; (800835c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8008242:	f012 fb6b 	bl	801a91c <__assert_func>
 8008246:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008248:	687b      	ldr	r3, [r7, #4]
 800824a:	685a      	ldr	r2, [r3, #4]
 800824c:	687b      	ldr	r3, [r7, #4]
 800824e:	685b      	ldr	r3, [r3, #4]
 8008250:	681b      	ldr	r3, [r3, #0]
 8008252:	3320      	adds	r3, #32
 8008254:	681b      	ldr	r3, [r3, #0]
 8008256:	4610      	mov	r0, r2
 8008258:	4798      	blx	r3
 800825a:	4603      	mov	r3, r0
 800825c:	2b0f      	cmp	r3, #15
 800825e:	d805      	bhi.n	800826c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008260:	4b3f      	ldr	r3, [pc, #252]	; (8008360 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14c>)
 8008262:	4a3d      	ldr	r2, [pc, #244]	; (8008358 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x144>)
 8008264:	21c3      	movs	r1, #195	; 0xc3
 8008266:	483d      	ldr	r0, [pc, #244]	; (800835c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8008268:	f012 fb58 	bl	801a91c <__assert_func>
 800826c:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800826e:	687b      	ldr	r3, [r7, #4]
 8008270:	68da      	ldr	r2, [r3, #12]
 8008272:	687b      	ldr	r3, [r7, #4]
 8008274:	68db      	ldr	r3, [r3, #12]
 8008276:	681b      	ldr	r3, [r3, #0]
 8008278:	3320      	adds	r3, #32
 800827a:	681b      	ldr	r3, [r3, #0]
 800827c:	4610      	mov	r0, r2
 800827e:	4798      	blx	r3
 8008280:	4603      	mov	r3, r0
 8008282:	2b0b      	cmp	r3, #11
 8008284:	d805      	bhi.n	8008292 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 8008286:	4b37      	ldr	r3, [pc, #220]	; (8008364 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x150>)
 8008288:	4a33      	ldr	r2, [pc, #204]	; (8008358 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x144>)
 800828a:	21c4      	movs	r1, #196	; 0xc4
 800828c:	4833      	ldr	r0, [pc, #204]	; (800835c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 800828e:	f012 fb45 	bl	801a91c <__assert_func>
 8008292:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);
 8008294:	683a      	ldr	r2, [r7, #0]
 8008296:	68b9      	ldr	r1, [r7, #8]
 8008298:	68f8      	ldr	r0, [r7, #12]
 800829a:	f7ff fdc2 	bl	8007e22 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>

    TransType* newTransition = new (&heap.transitionStorage.at< TransType >(0)) TransType;
 800829e:	687b      	ldr	r3, [r7, #4]
 80082a0:	68db      	ldr	r3, [r3, #12]
 80082a2:	2100      	movs	r1, #0
 80082a4:	4618      	mov	r0, r3
 80082a6:	f000 f85f 	bl	8008368 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80082aa:	4603      	mov	r3, r0
 80082ac:	4619      	mov	r1, r3
 80082ae:	200c      	movs	r0, #12
 80082b0:	f7ff fbf2 	bl	8007a98 <_ZnwjPv>
 80082b4:	4604      	mov	r4, r0
 80082b6:	4620      	mov	r0, r4
 80082b8:	f7ff fe6e 	bl	8007f98 <_ZN8touchgfx12NoTransitionC1Ev>
 80082bc:	61fc      	str	r4, [r7, #28]
    ScreenType* newScreen = new (&heap.screenStorage.at< ScreenType >(0)) ScreenType;
 80082be:	687b      	ldr	r3, [r7, #4]
 80082c0:	689b      	ldr	r3, [r3, #8]
 80082c2:	2100      	movs	r1, #0
 80082c4:	4618      	mov	r0, r3
 80082c6:	f000 f862 	bl	800838e <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 80082ca:	4603      	mov	r3, r0
 80082cc:	4619      	mov	r1, r3
 80082ce:	20a4      	movs	r0, #164	; 0xa4
 80082d0:	f7ff fbe2 	bl	8007a98 <_ZnwjPv>
 80082d4:	4604      	mov	r4, r0
 80082d6:	4620      	mov	r0, r4
 80082d8:	f000 ffa2 	bl	8009220 <_ZN11Screen1ViewC1Ev>
 80082dc:	61bc      	str	r4, [r7, #24]
    PresenterType* newPresenter = new (&heap.presenterStorage.at< PresenterType >(0)) PresenterType(*newScreen);
 80082de:	687b      	ldr	r3, [r7, #4]
 80082e0:	685b      	ldr	r3, [r3, #4]
 80082e2:	2100      	movs	r1, #0
 80082e4:	4618      	mov	r0, r3
 80082e6:	f000 f865 	bl	80083b4 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 80082ea:	4603      	mov	r3, r0
 80082ec:	4619      	mov	r1, r3
 80082ee:	2010      	movs	r0, #16
 80082f0:	f7ff fbd2 	bl	8007a98 <_ZnwjPv>
 80082f4:	4604      	mov	r4, r0
 80082f6:	69b9      	ldr	r1, [r7, #24]
 80082f8:	4620      	mov	r0, r4
 80082fa:	f000 ff3b 	bl	8009174 <_ZN16Screen1PresenterC1ER11Screen1View>
 80082fe:	617c      	str	r4, [r7, #20]
    *currentTrans = newTransition;
 8008300:	683b      	ldr	r3, [r7, #0]
 8008302:	69fa      	ldr	r2, [r7, #28]
 8008304:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008306:	68bb      	ldr	r3, [r7, #8]
 8008308:	697a      	ldr	r2, [r7, #20]
 800830a:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800830c:	68fb      	ldr	r3, [r7, #12]
 800830e:	69ba      	ldr	r2, [r7, #24]
 8008310:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008312:	697b      	ldr	r3, [r7, #20]
 8008314:	2b00      	cmp	r3, #0
 8008316:	d002      	beq.n	800831e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10a>
 8008318:	697b      	ldr	r3, [r7, #20]
 800831a:	3304      	adds	r3, #4
 800831c:	e000      	b.n	8008320 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10c>
 800831e:	2300      	movs	r3, #0
 8008320:	4619      	mov	r1, r3
 8008322:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8008324:	f7ff fe00 	bl	8007f28 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008328:	697b      	ldr	r3, [r7, #20]
 800832a:	3304      	adds	r3, #4
 800832c:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800832e:	4618      	mov	r0, r3
 8008330:	f7ff fe73 	bl	800801a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008334:	69bb      	ldr	r3, [r7, #24]
 8008336:	6979      	ldr	r1, [r7, #20]
 8008338:	4618      	mov	r0, r3
 800833a:	f000 f84e 	bl	80083da <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);
 800833e:	69fa      	ldr	r2, [r7, #28]
 8008340:	6979      	ldr	r1, [r7, #20]
 8008342:	69b8      	ldr	r0, [r7, #24]
 8008344:	f7ff fdc9 	bl	8007eda <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>

    return newPresenter;
 8008348:	697b      	ldr	r3, [r7, #20]
}
 800834a:	4618      	mov	r0, r3
 800834c:	3724      	adds	r7, #36	; 0x24
 800834e:	46bd      	mov	sp, r7
 8008350:	bd90      	pop	{r4, r7, pc}
 8008352:	bf00      	nop
 8008354:	0801bbe0 	.word	0x0801bbe0
 8008358:	0801bc70 	.word	0x0801bc70
 800835c:	0801bd74 	.word	0x0801bd74
 8008360:	0801bdb8 	.word	0x0801bdb8
 8008364:	0801be5c 	.word	0x0801be5c

08008368 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template< typename T >
    T& at(const uint16_t index)
 8008368:	b580      	push	{r7, lr}
 800836a:	b082      	sub	sp, #8
 800836c:	af00      	add	r7, sp, #0
 800836e:	6078      	str	r0, [r7, #4]
 8008370:	460b      	mov	r3, r1
 8008372:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8008374:	687b      	ldr	r3, [r7, #4]
 8008376:	681b      	ldr	r3, [r3, #0]
 8008378:	3324      	adds	r3, #36	; 0x24
 800837a:	681b      	ldr	r3, [r3, #0]
 800837c:	887a      	ldrh	r2, [r7, #2]
 800837e:	4611      	mov	r1, r2
 8008380:	6878      	ldr	r0, [r7, #4]
 8008382:	4798      	blx	r3
 8008384:	4603      	mov	r3, r0
    }
 8008386:	4618      	mov	r0, r3
 8008388:	3708      	adds	r7, #8
 800838a:	46bd      	mov	sp, r7
 800838c:	bd80      	pop	{r7, pc}

0800838e <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 800838e:	b580      	push	{r7, lr}
 8008390:	b082      	sub	sp, #8
 8008392:	af00      	add	r7, sp, #0
 8008394:	6078      	str	r0, [r7, #4]
 8008396:	460b      	mov	r3, r1
 8008398:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800839a:	687b      	ldr	r3, [r7, #4]
 800839c:	681b      	ldr	r3, [r3, #0]
 800839e:	3324      	adds	r3, #36	; 0x24
 80083a0:	681b      	ldr	r3, [r3, #0]
 80083a2:	887a      	ldrh	r2, [r7, #2]
 80083a4:	4611      	mov	r1, r2
 80083a6:	6878      	ldr	r0, [r7, #4]
 80083a8:	4798      	blx	r3
 80083aa:	4603      	mov	r3, r0
    }
 80083ac:	4618      	mov	r0, r3
 80083ae:	3708      	adds	r7, #8
 80083b0:	46bd      	mov	sp, r7
 80083b2:	bd80      	pop	{r7, pc}

080083b4 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 80083b4:	b580      	push	{r7, lr}
 80083b6:	b082      	sub	sp, #8
 80083b8:	af00      	add	r7, sp, #0
 80083ba:	6078      	str	r0, [r7, #4]
 80083bc:	460b      	mov	r3, r1
 80083be:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	681b      	ldr	r3, [r3, #0]
 80083c4:	3324      	adds	r3, #36	; 0x24
 80083c6:	681b      	ldr	r3, [r3, #0]
 80083c8:	887a      	ldrh	r2, [r7, #2]
 80083ca:	4611      	mov	r1, r2
 80083cc:	6878      	ldr	r0, [r7, #4]
 80083ce:	4798      	blx	r3
 80083d0:	4603      	mov	r3, r0
    }
 80083d2:	4618      	mov	r0, r3
 80083d4:	3708      	adds	r7, #8
 80083d6:	46bd      	mov	sp, r7
 80083d8:	bd80      	pop	{r7, pc}

080083da <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     *        Binds an instance of a specific Presenter type (subclass) to the View instance.
     *        This function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 80083da:	b480      	push	{r7}
 80083dc:	b083      	sub	sp, #12
 80083de:	af00      	add	r7, sp, #0
 80083e0:	6078      	str	r0, [r7, #4]
 80083e2:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 80083e4:	687b      	ldr	r3, [r7, #4]
 80083e6:	683a      	ldr	r2, [r7, #0]
 80083e8:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 80083ea:	bf00      	nop
 80083ec:	370c      	adds	r7, #12
 80083ee:	46bd      	mov	sp, r7
 80083f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083f4:	4770      	bx	lr
	...

080083f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80083f8:	b580      	push	{r7, lr}
 80083fa:	b082      	sub	sp, #8
 80083fc:	af00      	add	r7, sp, #0
 80083fe:	6078      	str	r0, [r7, #4]
 8008400:	4a05      	ldr	r2, [pc, #20]	; (8008418 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8008402:	687b      	ldr	r3, [r7, #4]
 8008404:	601a      	str	r2, [r3, #0]
 8008406:	687b      	ldr	r3, [r7, #4]
 8008408:	4618      	mov	r0, r3
 800840a:	f7ff fc21 	bl	8007c50 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800840e:	687b      	ldr	r3, [r7, #4]
 8008410:	4618      	mov	r0, r3
 8008412:	3708      	adds	r7, #8
 8008414:	46bd      	mov	sp, r7
 8008416:	bd80      	pop	{r7, pc}
 8008418:	0801c2d0 	.word	0x0801c2d0

0800841c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800841c:	b580      	push	{r7, lr}
 800841e:	b082      	sub	sp, #8
 8008420:	af00      	add	r7, sp, #0
 8008422:	6078      	str	r0, [r7, #4]
 8008424:	6878      	ldr	r0, [r7, #4]
 8008426:	f7ff ffe7 	bl	80083f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800842a:	2110      	movs	r1, #16
 800842c:	6878      	ldr	r0, [r7, #4]
 800842e:	f012 fa46 	bl	801a8be <_ZdlPvj>
 8008432:	687b      	ldr	r3, [r7, #4]
 8008434:	4618      	mov	r0, r3
 8008436:	3708      	adds	r7, #8
 8008438:	46bd      	mov	sp, r7
 800843a:	bd80      	pop	{r7, pc}

0800843c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * @brief Calls the member function.
     *
     *        Calls the member function. Do not call execute unless isValid() returns true (ie.
     *        a pointer to the object and the function has been set).
     */
    virtual void execute()
 800843c:	b580      	push	{r7, lr}
 800843e:	b082      	sub	sp, #8
 8008440:	af00      	add	r7, sp, #0
 8008442:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 8008444:	687b      	ldr	r3, [r7, #4]
 8008446:	685b      	ldr	r3, [r3, #4]
 8008448:	687a      	ldr	r2, [r7, #4]
 800844a:	68d2      	ldr	r2, [r2, #12]
 800844c:	1052      	asrs	r2, r2, #1
 800844e:	1899      	adds	r1, r3, r2
 8008450:	687b      	ldr	r3, [r7, #4]
 8008452:	68db      	ldr	r3, [r3, #12]
 8008454:	f003 0301 	and.w	r3, r3, #1
 8008458:	2b00      	cmp	r3, #0
 800845a:	d102      	bne.n	8008462 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800845c:	687b      	ldr	r3, [r7, #4]
 800845e:	689b      	ldr	r3, [r3, #8]
 8008460:	e00a      	b.n	8008478 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8008462:	687b      	ldr	r3, [r7, #4]
 8008464:	685b      	ldr	r3, [r3, #4]
 8008466:	687a      	ldr	r2, [r7, #4]
 8008468:	68d2      	ldr	r2, [r2, #12]
 800846a:	1052      	asrs	r2, r2, #1
 800846c:	4413      	add	r3, r2
 800846e:	681b      	ldr	r3, [r3, #0]
 8008470:	687a      	ldr	r2, [r7, #4]
 8008472:	6892      	ldr	r2, [r2, #8]
 8008474:	4413      	add	r3, r2
 8008476:	681b      	ldr	r3, [r3, #0]
 8008478:	4608      	mov	r0, r1
 800847a:	4798      	blx	r3
    }
 800847c:	bf00      	nop
 800847e:	3708      	adds	r7, #8
 8008480:	46bd      	mov	sp, r7
 8008482:	bd80      	pop	{r7, pc}

08008484 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     *        Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8008484:	b480      	push	{r7}
 8008486:	b083      	sub	sp, #12
 8008488:	af00      	add	r7, sp, #0
 800848a:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	685b      	ldr	r3, [r3, #4]
 8008490:	2b00      	cmp	r3, #0
 8008492:	d010      	beq.n	80084b6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8008494:	687b      	ldr	r3, [r7, #4]
 8008496:	689b      	ldr	r3, [r3, #8]
 8008498:	2b00      	cmp	r3, #0
 800849a:	d107      	bne.n	80084ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800849c:	687b      	ldr	r3, [r7, #4]
 800849e:	68db      	ldr	r3, [r3, #12]
 80084a0:	f003 0301 	and.w	r3, r3, #1
 80084a4:	2b00      	cmp	r3, #0
 80084a6:	d101      	bne.n	80084ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80084a8:	2301      	movs	r3, #1
 80084aa:	e000      	b.n	80084ae <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 80084ac:	2300      	movs	r3, #0
 80084ae:	2b01      	cmp	r3, #1
 80084b0:	d001      	beq.n	80084b6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 80084b2:	2301      	movs	r3, #1
 80084b4:	e000      	b.n	80084b8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 80084b6:	2300      	movs	r3, #0
    }
 80084b8:	4618      	mov	r0, r3
 80084ba:	370c      	adds	r7, #12
 80084bc:	46bd      	mov	sp, r7
 80084be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084c2:	4770      	bx	lr

080084c4 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param col The color.
     *
     * @see Color::getColorFrom24BitRGB()
     */
    colortype(uint32_t col)
 80084c4:	b480      	push	{r7}
 80084c6:	b083      	sub	sp, #12
 80084c8:	af00      	add	r7, sp, #0
 80084ca:	6078      	str	r0, [r7, #4]
 80084cc:	6039      	str	r1, [r7, #0]
    {
        color = col;
 80084ce:	687b      	ldr	r3, [r7, #4]
 80084d0:	683a      	ldr	r2, [r7, #0]
 80084d2:	601a      	str	r2, [r3, #0]
    }
 80084d4:	687b      	ldr	r3, [r7, #4]
 80084d6:	4618      	mov	r0, r3
 80084d8:	370c      	adds	r7, #12
 80084da:	46bd      	mov	sp, r7
 80084dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084e0:	4770      	bx	lr

080084e2 <_ZN8touchgfx4RectC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Resulting in an empty Rect with coordinates 0,0.
     */
    Rect()
 80084e2:	b480      	push	{r7}
 80084e4:	b083      	sub	sp, #12
 80084e6:	af00      	add	r7, sp, #0
 80084e8:	6078      	str	r0, [r7, #4]
    {
        this->x = 0;
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	2200      	movs	r2, #0
 80084ee:	801a      	strh	r2, [r3, #0]
        this->y = 0;
 80084f0:	687b      	ldr	r3, [r7, #4]
 80084f2:	2200      	movs	r2, #0
 80084f4:	805a      	strh	r2, [r3, #2]
        this->width = 0;
 80084f6:	687b      	ldr	r3, [r7, #4]
 80084f8:	2200      	movs	r2, #0
 80084fa:	809a      	strh	r2, [r3, #4]
        this->height = 0;
 80084fc:	687b      	ldr	r3, [r7, #4]
 80084fe:	2200      	movs	r2, #0
 8008500:	80da      	strh	r2, [r3, #6]
    }
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	4618      	mov	r0, r3
 8008506:	370c      	adds	r7, #12
 8008508:	46bd      	mov	sp, r7
 800850a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800850e:	4770      	bx	lr

08008510 <_ZN8touchgfx4RectC1Essss>:
     * @param x      The x coordinate.
     * @param y      The y coordinate.
     * @param width  The width.
     * @param height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
 8008510:	b480      	push	{r7}
 8008512:	b085      	sub	sp, #20
 8008514:	af00      	add	r7, sp, #0
 8008516:	60f8      	str	r0, [r7, #12]
 8008518:	4608      	mov	r0, r1
 800851a:	4611      	mov	r1, r2
 800851c:	461a      	mov	r2, r3
 800851e:	4603      	mov	r3, r0
 8008520:	817b      	strh	r3, [r7, #10]
 8008522:	460b      	mov	r3, r1
 8008524:	813b      	strh	r3, [r7, #8]
 8008526:	4613      	mov	r3, r2
 8008528:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
 800852a:	68fb      	ldr	r3, [r7, #12]
 800852c:	897a      	ldrh	r2, [r7, #10]
 800852e:	801a      	strh	r2, [r3, #0]
        this->y = y;
 8008530:	68fb      	ldr	r3, [r7, #12]
 8008532:	893a      	ldrh	r2, [r7, #8]
 8008534:	805a      	strh	r2, [r3, #2]
        this->width = width;
 8008536:	68fb      	ldr	r3, [r7, #12]
 8008538:	88fa      	ldrh	r2, [r7, #6]
 800853a:	809a      	strh	r2, [r3, #4]
        this->height = height;
 800853c:	68fb      	ldr	r3, [r7, #12]
 800853e:	8b3a      	ldrh	r2, [r7, #24]
 8008540:	80da      	strh	r2, [r3, #6]
    }
 8008542:	68fb      	ldr	r3, [r7, #12]
 8008544:	4618      	mov	r0, r3
 8008546:	3714      	adds	r7, #20
 8008548:	46bd      	mov	sp, r7
 800854a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800854e:	4770      	bx	lr

08008550 <_ZN8touchgfx8DrawableC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Drawable() : rect(0, 0, 0, 0),
 8008550:	b580      	push	{r7, lr}
 8008552:	b084      	sub	sp, #16
 8008554:	af02      	add	r7, sp, #8
 8008556:	6078      	str	r0, [r7, #4]
        parent(0),
        nextSibling(0),
        nextDrawChainElement(0),
        touchable(false),
        visible(true)
 8008558:	4a13      	ldr	r2, [pc, #76]	; (80085a8 <_ZN8touchgfx8DrawableC1Ev+0x58>)
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	601a      	str	r2, [r3, #0]
 800855e:	687b      	ldr	r3, [r7, #4]
 8008560:	1d18      	adds	r0, r3, #4
 8008562:	2300      	movs	r3, #0
 8008564:	9300      	str	r3, [sp, #0]
 8008566:	2300      	movs	r3, #0
 8008568:	2200      	movs	r2, #0
 800856a:	2100      	movs	r1, #0
 800856c:	f7ff ffd0 	bl	8008510 <_ZN8touchgfx4RectC1Essss>
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	330c      	adds	r3, #12
 8008574:	4618      	mov	r0, r3
 8008576:	f7ff ffb4 	bl	80084e2 <_ZN8touchgfx4RectC1Ev>
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	2200      	movs	r2, #0
 800857e:	615a      	str	r2, [r3, #20]
 8008580:	687b      	ldr	r3, [r7, #4]
 8008582:	2200      	movs	r2, #0
 8008584:	619a      	str	r2, [r3, #24]
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	2200      	movs	r2, #0
 800858a:	61da      	str	r2, [r3, #28]
 800858c:	687b      	ldr	r3, [r7, #4]
 800858e:	2200      	movs	r2, #0
 8008590:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8008594:	687b      	ldr	r3, [r7, #4]
 8008596:	2201      	movs	r2, #1
 8008598:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	4618      	mov	r0, r3
 80085a0:	3708      	adds	r7, #8
 80085a2:	46bd      	mov	sp, r7
 80085a4:	bd80      	pop	{r7, pc}
 80085a6:	bf00      	nop
 80085a8:	0801d5c8 	.word	0x0801d5c8

080085ac <_ZN8touchgfx8DrawableD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Drawable() { }
 80085ac:	b480      	push	{r7}
 80085ae:	b083      	sub	sp, #12
 80085b0:	af00      	add	r7, sp, #0
 80085b2:	6078      	str	r0, [r7, #4]
 80085b4:	4a04      	ldr	r2, [pc, #16]	; (80085c8 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	601a      	str	r2, [r3, #0]
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	4618      	mov	r0, r3
 80085be:	370c      	adds	r7, #12
 80085c0:	46bd      	mov	sp, r7
 80085c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085c6:	4770      	bx	lr
 80085c8:	0801d5c8 	.word	0x0801d5c8

080085cc <_ZN8touchgfx8DrawableD0Ev>:
 80085cc:	b580      	push	{r7, lr}
 80085ce:	b082      	sub	sp, #8
 80085d0:	af00      	add	r7, sp, #0
 80085d2:	6078      	str	r0, [r7, #4]
 80085d4:	6878      	ldr	r0, [r7, #4]
 80085d6:	f7ff ffe9 	bl	80085ac <_ZN8touchgfx8DrawableD1Ev>
 80085da:	2128      	movs	r1, #40	; 0x28
 80085dc:	6878      	ldr	r0, [r7, #4]
 80085de:	f012 f96e 	bl	801a8be <_ZdlPvj>
 80085e2:	687b      	ldr	r3, [r7, #4]
 80085e4:	4618      	mov	r0, r3
 80085e6:	3708      	adds	r7, #8
 80085e8:	46bd      	mov	sp, r7
 80085ea:	bd80      	pop	{r7, pc}

080085ec <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param x      The x coordinate of this Drawable.
     * @param y      The y coordinate of this Drawable.
     * @param width  The width of this Drawable.
     * @param height The height of this Drawable.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80085ec:	b580      	push	{r7, lr}
 80085ee:	b084      	sub	sp, #16
 80085f0:	af00      	add	r7, sp, #0
 80085f2:	60f8      	str	r0, [r7, #12]
 80085f4:	4608      	mov	r0, r1
 80085f6:	4611      	mov	r1, r2
 80085f8:	461a      	mov	r2, r3
 80085fa:	4603      	mov	r3, r0
 80085fc:	817b      	strh	r3, [r7, #10]
 80085fe:	460b      	mov	r3, r1
 8008600:	813b      	strh	r3, [r7, #8]
 8008602:	4613      	mov	r3, r2
 8008604:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8008606:	68fb      	ldr	r3, [r7, #12]
 8008608:	681b      	ldr	r3, [r3, #0]
 800860a:	3334      	adds	r3, #52	; 0x34
 800860c:	681b      	ldr	r3, [r3, #0]
 800860e:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8008612:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8008616:	68f8      	ldr	r0, [r7, #12]
 8008618:	4798      	blx	r3
        setWidth(width);
 800861a:	68fb      	ldr	r3, [r7, #12]
 800861c:	681b      	ldr	r3, [r3, #0]
 800861e:	3338      	adds	r3, #56	; 0x38
 8008620:	681b      	ldr	r3, [r3, #0]
 8008622:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8008626:	4611      	mov	r1, r2
 8008628:	68f8      	ldr	r0, [r7, #12]
 800862a:	4798      	blx	r3
        setHeight(height);
 800862c:	68fb      	ldr	r3, [r7, #12]
 800862e:	681b      	ldr	r3, [r3, #0]
 8008630:	333c      	adds	r3, #60	; 0x3c
 8008632:	681b      	ldr	r3, [r3, #0]
 8008634:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8008638:	4611      	mov	r1, r2
 800863a:	68f8      	ldr	r0, [r7, #12]
 800863c:	4798      	blx	r3
    }
 800863e:	bf00      	nop
 8008640:	3710      	adds	r7, #16
 8008642:	46bd      	mov	sp, r7
 8008644:	bd80      	pop	{r7, pc}

08008646 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     */
    virtual void setX(int16_t x)
 8008646:	b480      	push	{r7}
 8008648:	b083      	sub	sp, #12
 800864a:	af00      	add	r7, sp, #0
 800864c:	6078      	str	r0, [r7, #4]
 800864e:	460b      	mov	r3, r1
 8008650:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8008652:	687b      	ldr	r3, [r7, #4]
 8008654:	887a      	ldrh	r2, [r7, #2]
 8008656:	809a      	strh	r2, [r3, #4]
    }
 8008658:	bf00      	nop
 800865a:	370c      	adds	r7, #12
 800865c:	46bd      	mov	sp, r7
 800865e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008662:	4770      	bx	lr

08008664 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setY(int16_t y)
 8008664:	b480      	push	{r7}
 8008666:	b083      	sub	sp, #12
 8008668:	af00      	add	r7, sp, #0
 800866a:	6078      	str	r0, [r7, #4]
 800866c:	460b      	mov	r3, r1
 800866e:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8008670:	687b      	ldr	r3, [r7, #4]
 8008672:	887a      	ldrh	r2, [r7, #2]
 8008674:	80da      	strh	r2, [r3, #6]
    }
 8008676:	bf00      	nop
 8008678:	370c      	adds	r7, #12
 800867a:	46bd      	mov	sp, r7
 800867c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008680:	4770      	bx	lr

08008682 <_ZN8touchgfx8Drawable5setXYEss>:
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setXY(int16_t x, int16_t y)
 8008682:	b580      	push	{r7, lr}
 8008684:	b082      	sub	sp, #8
 8008686:	af00      	add	r7, sp, #0
 8008688:	6078      	str	r0, [r7, #4]
 800868a:	460b      	mov	r3, r1
 800868c:	807b      	strh	r3, [r7, #2]
 800868e:	4613      	mov	r3, r2
 8008690:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8008692:	687b      	ldr	r3, [r7, #4]
 8008694:	681b      	ldr	r3, [r3, #0]
 8008696:	332c      	adds	r3, #44	; 0x2c
 8008698:	681b      	ldr	r3, [r3, #0]
 800869a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800869e:	4611      	mov	r1, r2
 80086a0:	6878      	ldr	r0, [r7, #4]
 80086a2:	4798      	blx	r3
        setY(y);
 80086a4:	687b      	ldr	r3, [r7, #4]
 80086a6:	681b      	ldr	r3, [r3, #0]
 80086a8:	3330      	adds	r3, #48	; 0x30
 80086aa:	681b      	ldr	r3, [r3, #0]
 80086ac:	f9b7 2000 	ldrsh.w	r2, [r7]
 80086b0:	4611      	mov	r1, r2
 80086b2:	6878      	ldr	r0, [r7, #4]
 80086b4:	4798      	blx	r3
    }
 80086b6:	bf00      	nop
 80086b8:	3708      	adds	r7, #8
 80086ba:	46bd      	mov	sp, r7
 80086bc:	bd80      	pop	{r7, pc}

080086be <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param width The new width.
     */
    virtual void setWidth(int16_t width)
 80086be:	b480      	push	{r7}
 80086c0:	b083      	sub	sp, #12
 80086c2:	af00      	add	r7, sp, #0
 80086c4:	6078      	str	r0, [r7, #4]
 80086c6:	460b      	mov	r3, r1
 80086c8:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 80086ca:	687b      	ldr	r3, [r7, #4]
 80086cc:	887a      	ldrh	r2, [r7, #2]
 80086ce:	811a      	strh	r2, [r3, #8]
    }
 80086d0:	bf00      	nop
 80086d2:	370c      	adds	r7, #12
 80086d4:	46bd      	mov	sp, r7
 80086d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086da:	4770      	bx	lr

080086dc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param height The new height.
     */
    virtual void setHeight(int16_t height)
 80086dc:	b480      	push	{r7}
 80086de:	b083      	sub	sp, #12
 80086e0:	af00      	add	r7, sp, #0
 80086e2:	6078      	str	r0, [r7, #4]
 80086e4:	460b      	mov	r3, r1
 80086e6:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 80086e8:	687b      	ldr	r3, [r7, #4]
 80086ea:	887a      	ldrh	r2, [r7, #2]
 80086ec:	815a      	strh	r2, [r3, #10]
    }
 80086ee:	bf00      	nop
 80086f0:	370c      	adds	r7, #12
 80086f2:	46bd      	mov	sp, r7
 80086f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086f8:	4770      	bx	lr

080086fa <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     *
     *        This function can be called on parent nodes to signal that the size of one or
     *        more of its children has changed. Currently only used in ScrollableContainer to
     *        redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged() { }
 80086fa:	b480      	push	{r7}
 80086fc:	b083      	sub	sp, #12
 80086fe:	af00      	add	r7, sp, #0
 8008700:	6078      	str	r0, [r7, #4]
 8008702:	bf00      	nop
 8008704:	370c      	adds	r7, #12
 8008706:	46bd      	mov	sp, r7
 8008708:	f85d 7b04 	ldr.w	r7, [sp], #4
 800870c:	4770      	bx	lr

0800870e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *        Defines the event handler interface for ClickEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt) { }
 800870e:	b480      	push	{r7}
 8008710:	b083      	sub	sp, #12
 8008712:	af00      	add	r7, sp, #0
 8008714:	6078      	str	r0, [r7, #4]
 8008716:	6039      	str	r1, [r7, #0]
 8008718:	bf00      	nop
 800871a:	370c      	adds	r7, #12
 800871c:	46bd      	mov	sp, r7
 800871e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008722:	4770      	bx	lr

08008724 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *        Defines the event handler interface for GestureEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt) { }
 8008724:	b480      	push	{r7}
 8008726:	b083      	sub	sp, #12
 8008728:	af00      	add	r7, sp, #0
 800872a:	6078      	str	r0, [r7, #4]
 800872c:	6039      	str	r1, [r7, #0]
 800872e:	bf00      	nop
 8008730:	370c      	adds	r7, #12
 8008732:	46bd      	mov	sp, r7
 8008734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008738:	4770      	bx	lr

0800873a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *        Defines the event handler interface for DragEvents. The event is only received if
     *        the drawable is touchable.
     *
     * @param evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt) { }
 800873a:	b480      	push	{r7}
 800873c:	b083      	sub	sp, #12
 800873e:	af00      	add	r7, sp, #0
 8008740:	6078      	str	r0, [r7, #4]
 8008742:	6039      	str	r1, [r7, #0]
 8008744:	bf00      	nop
 8008746:	370c      	adds	r7, #12
 8008748:	46bd      	mov	sp, r7
 800874a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800874e:	4770      	bx	lr

08008750 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *        Called periodically by the framework if the Drawable instance has subscribed to
     *        timer ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent() { }
 8008750:	b480      	push	{r7}
 8008752:	b083      	sub	sp, #12
 8008754:	af00      	add	r7, sp, #0
 8008756:	6078      	str	r0, [r7, #4]
 8008758:	bf00      	nop
 800875a:	370c      	adds	r7, #12
 800875c:	46bd      	mov	sp, r7
 800875e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008762:	4770      	bx	lr

08008764 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     * @return true if the Drawable is visible.
     * @return True if visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8008764:	b480      	push	{r7}
 8008766:	b083      	sub	sp, #12
 8008768:	af00      	add	r7, sp, #0
 800876a:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800876c:	687b      	ldr	r3, [r7, #4]
 800876e:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 8008772:	4618      	mov	r0, r3
 8008774:	370c      	adds	r7, #12
 8008776:	46bd      	mov	sp, r7
 8008778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800877c:	4770      	bx	lr

0800877e <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800877e:	b480      	push	{r7}
 8008780:	b083      	sub	sp, #12
 8008782:	af00      	add	r7, sp, #0
 8008784:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8008786:	687b      	ldr	r3, [r7, #4]
 8008788:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800878c:	4618      	mov	r0, r3
 800878e:	370c      	adds	r7, #12
 8008790:	46bd      	mov	sp, r7
 8008792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008796:	4770      	bx	lr

08008798 <_ZN8touchgfx8Drawable6moveToEss>:
     * @note Will redraw the appropriate areas of the screen.
     *
     * @param x The absolute position to move to.
     * @param y The absolute position to move to.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8008798:	b580      	push	{r7, lr}
 800879a:	b082      	sub	sp, #8
 800879c:	af00      	add	r7, sp, #0
 800879e:	6078      	str	r0, [r7, #4]
 80087a0:	460b      	mov	r3, r1
 80087a2:	807b      	strh	r3, [r7, #2]
 80087a4:	4613      	mov	r3, r2
 80087a6:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	681b      	ldr	r3, [r3, #0]
 80087ac:	3354      	adds	r3, #84	; 0x54
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	8879      	ldrh	r1, [r7, #2]
 80087b2:	687a      	ldr	r2, [r7, #4]
 80087b4:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 80087b8:	b292      	uxth	r2, r2
 80087ba:	1a8a      	subs	r2, r1, r2
 80087bc:	b292      	uxth	r2, r2
 80087be:	b210      	sxth	r0, r2
 80087c0:	8839      	ldrh	r1, [r7, #0]
 80087c2:	687a      	ldr	r2, [r7, #4]
 80087c4:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 80087c8:	b292      	uxth	r2, r2
 80087ca:	1a8a      	subs	r2, r1, r2
 80087cc:	b292      	uxth	r2, r2
 80087ce:	b212      	sxth	r2, r2
 80087d0:	4601      	mov	r1, r0
 80087d2:	6878      	ldr	r0, [r7, #4]
 80087d4:	4798      	blx	r3
    }
 80087d6:	bf00      	nop
 80087d8:	3708      	adds	r7, #8
 80087da:	46bd      	mov	sp, r7
 80087dc:	bd80      	pop	{r7, pc}

080087de <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     *        Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 80087de:	b480      	push	{r7}
 80087e0:	b083      	sub	sp, #12
 80087e2:	af00      	add	r7, sp, #0
 80087e4:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80087e6:	687b      	ldr	r3, [r7, #4]
 80087e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80087ec:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80087ee:	687b      	ldr	r3, [r7, #4]
 80087f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80087f4:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80087fc:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 80087fe:	bf00      	nop
 8008800:	370c      	adds	r7, #12
 8008802:	46bd      	mov	sp, r7
 8008804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008808:	4770      	bx	lr

0800880a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     *
     * @param invalidatedArea              Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800880a:	b580      	push	{r7, lr}
 800880c:	b084      	sub	sp, #16
 800880e:	af00      	add	r7, sp, #0
 8008810:	60f8      	str	r0, [r7, #12]
 8008812:	60b9      	str	r1, [r7, #8]
 8008814:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 8008816:	68f8      	ldr	r0, [r7, #12]
 8008818:	f7ff ffe1 	bl	80087de <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800881c:	687b      	ldr	r3, [r7, #4]
 800881e:	681a      	ldr	r2, [r3, #0]
 8008820:	68fb      	ldr	r3, [r7, #12]
 8008822:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	68fa      	ldr	r2, [r7, #12]
 8008828:	601a      	str	r2, [r3, #0]
    }
 800882a:	bf00      	nop
 800882c:	3710      	adds	r7, #16
 800882e:	46bd      	mov	sp, r7
 8008830:	bd80      	pop	{r7, pc}
	...

08008834 <_ZN8touchgfx9ContainerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Container() { }
 8008834:	b580      	push	{r7, lr}
 8008836:	b082      	sub	sp, #8
 8008838:	af00      	add	r7, sp, #0
 800883a:	6078      	str	r0, [r7, #4]
 800883c:	4a05      	ldr	r2, [pc, #20]	; (8008854 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800883e:	687b      	ldr	r3, [r7, #4]
 8008840:	601a      	str	r2, [r3, #0]
 8008842:	687b      	ldr	r3, [r7, #4]
 8008844:	4618      	mov	r0, r3
 8008846:	f7ff feb1 	bl	80085ac <_ZN8touchgfx8DrawableD1Ev>
 800884a:	687b      	ldr	r3, [r7, #4]
 800884c:	4618      	mov	r0, r3
 800884e:	3708      	adds	r7, #8
 8008850:	46bd      	mov	sp, r7
 8008852:	bd80      	pop	{r7, pc}
 8008854:	0801cac0 	.word	0x0801cac0

08008858 <_ZN8touchgfx9ContainerD0Ev>:
 8008858:	b580      	push	{r7, lr}
 800885a:	b082      	sub	sp, #8
 800885c:	af00      	add	r7, sp, #0
 800885e:	6078      	str	r0, [r7, #4]
 8008860:	6878      	ldr	r0, [r7, #4]
 8008862:	f7ff ffe7 	bl	8008834 <_ZN8touchgfx9ContainerD1Ev>
 8008866:	212c      	movs	r1, #44	; 0x2c
 8008868:	6878      	ldr	r0, [r7, #4]
 800886a:	f012 f828 	bl	801a8be <_ZdlPvj>
 800886e:	687b      	ldr	r3, [r7, #4]
 8008870:	4618      	mov	r0, r3
 8008872:	3708      	adds	r7, #8
 8008874:	46bd      	mov	sp, r7
 8008876:	bd80      	pop	{r7, pc}

08008878 <_ZN8touchgfx6ScreenD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Screen() { }
 8008878:	b580      	push	{r7, lr}
 800887a:	b082      	sub	sp, #8
 800887c:	af00      	add	r7, sp, #0
 800887e:	6078      	str	r0, [r7, #4]
 8008880:	4a06      	ldr	r2, [pc, #24]	; (800889c <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8008882:	687b      	ldr	r3, [r7, #4]
 8008884:	601a      	str	r2, [r3, #0]
 8008886:	687b      	ldr	r3, [r7, #4]
 8008888:	3304      	adds	r3, #4
 800888a:	4618      	mov	r0, r3
 800888c:	f7ff ffd2 	bl	8008834 <_ZN8touchgfx9ContainerD1Ev>
 8008890:	687b      	ldr	r3, [r7, #4]
 8008892:	4618      	mov	r0, r3
 8008894:	3708      	adds	r7, #8
 8008896:	46bd      	mov	sp, r7
 8008898:	bd80      	pop	{r7, pc}
 800889a:	bf00      	nop
 800889c:	0801d6c0 	.word	0x0801d6c0

080088a0 <_ZN8touchgfx6ScreenD0Ev>:
 80088a0:	b580      	push	{r7, lr}
 80088a2:	b082      	sub	sp, #8
 80088a4:	af00      	add	r7, sp, #0
 80088a6:	6078      	str	r0, [r7, #4]
 80088a8:	6878      	ldr	r0, [r7, #4]
 80088aa:	f7ff ffe5 	bl	8008878 <_ZN8touchgfx6ScreenD1Ev>
 80088ae:	213c      	movs	r1, #60	; 0x3c
 80088b0:	6878      	ldr	r0, [r7, #4]
 80088b2:	f012 f804 	bl	801a8be <_ZdlPvj>
 80088b6:	687b      	ldr	r3, [r7, #4]
 80088b8:	4618      	mov	r0, r3
 80088ba:	3708      	adds	r7, #8
 80088bc:	46bd      	mov	sp, r7
 80088be:	bd80      	pop	{r7, pc}

080088c0 <_ZN8touchgfx6Screen11setupScreenEv>:
     *        Base version does nothing, but place any screen specific initialization code in
     *        an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void setupScreen() { }
 80088c0:	b480      	push	{r7}
 80088c2:	b083      	sub	sp, #12
 80088c4:	af00      	add	r7, sp, #0
 80088c6:	6078      	str	r0, [r7, #4]
 80088c8:	bf00      	nop
 80088ca:	370c      	adds	r7, #12
 80088cc:	46bd      	mov	sp, r7
 80088ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088d2:	4770      	bx	lr

080088d4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *        Base version does nothing, but override to do screen specific initialization code
     *        that has to be done after the transition to the screen.
     *
     * @see touchgfx::Application::handleTick()
     */
    virtual void afterTransition() { }
 80088d4:	b480      	push	{r7}
 80088d6:	b083      	sub	sp, #12
 80088d8:	af00      	add	r7, sp, #0
 80088da:	6078      	str	r0, [r7, #4]
 80088dc:	bf00      	nop
 80088de:	370c      	adds	r7, #12
 80088e0:	46bd      	mov	sp, r7
 80088e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088e6:	4770      	bx	lr

080088e8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *        displayed. Base version does nothing, but place any screen specific cleanup code
     *        in an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void tearDownScreen() { }
 80088e8:	b480      	push	{r7}
 80088ea:	b083      	sub	sp, #12
 80088ec:	af00      	add	r7, sp, #0
 80088ee:	6078      	str	r0, [r7, #4]
 80088f0:	bf00      	nop
 80088f2:	370c      	adds	r7, #12
 80088f4:	46bd      	mov	sp, r7
 80088f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088fa:	4770      	bx	lr

080088fc <_ZN8touchgfx6Screen15handleTickEventEv>:
     *        Application::TICK_INTERVAL_MS.
     *
     *        Called by the Application on the current screen with a frequency of
     *        Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 80088fc:	b480      	push	{r7}
 80088fe:	b083      	sub	sp, #12
 8008900:	af00      	add	r7, sp, #0
 8008902:	6078      	str	r0, [r7, #4]
    {
    }
 8008904:	bf00      	nop
 8008906:	370c      	adds	r7, #12
 8008908:	46bd      	mov	sp, r7
 800890a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800890e:	4770      	bx	lr

08008910 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *        Called by the Application on the reception of a "key", the meaning of which is
     *        platform/application specific. Default implementation does nothing.
     *
     * @param key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8008910:	b480      	push	{r7}
 8008912:	b083      	sub	sp, #12
 8008914:	af00      	add	r7, sp, #0
 8008916:	6078      	str	r0, [r7, #4]
 8008918:	460b      	mov	r3, r1
 800891a:	70fb      	strb	r3, [r7, #3]
    {
    }
 800891c:	bf00      	nop
 800891e:	370c      	adds	r7, #12
 8008920:	46bd      	mov	sp, r7
 8008922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008926:	4770      	bx	lr

08008928 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     *
     * @param [in] d The Drawable to add.
     */
    void add(Drawable& d)
 8008928:	b580      	push	{r7, lr}
 800892a:	b082      	sub	sp, #8
 800892c:	af00      	add	r7, sp, #0
 800892e:	6078      	str	r0, [r7, #4]
 8008930:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8008932:	687b      	ldr	r3, [r7, #4]
 8008934:	3304      	adds	r3, #4
 8008936:	6839      	ldr	r1, [r7, #0]
 8008938:	4618      	mov	r0, r3
 800893a:	f002 fc23 	bl	800b184 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800893e:	bf00      	nop
 8008940:	3708      	adds	r7, #8
 8008942:	46bd      	mov	sp, r7
 8008944:	bd80      	pop	{r7, pc}
	...

08008948 <_ZN8touchgfx6WidgetC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Widget() : Drawable() { }
 8008948:	b580      	push	{r7, lr}
 800894a:	b082      	sub	sp, #8
 800894c:	af00      	add	r7, sp, #0
 800894e:	6078      	str	r0, [r7, #4]
 8008950:	687b      	ldr	r3, [r7, #4]
 8008952:	4618      	mov	r0, r3
 8008954:	f7ff fdfc 	bl	8008550 <_ZN8touchgfx8DrawableC1Ev>
 8008958:	4a03      	ldr	r2, [pc, #12]	; (8008968 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	601a      	str	r2, [r3, #0]
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	4618      	mov	r0, r3
 8008962:	3708      	adds	r7, #8
 8008964:	46bd      	mov	sp, r7
 8008966:	bd80      	pop	{r7, pc}
 8008968:	0801c3ec 	.word	0x0801c3ec

0800896c <_ZN8touchgfx6WidgetD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Widget() { }
 800896c:	b580      	push	{r7, lr}
 800896e:	b082      	sub	sp, #8
 8008970:	af00      	add	r7, sp, #0
 8008972:	6078      	str	r0, [r7, #4]
 8008974:	4a05      	ldr	r2, [pc, #20]	; (800898c <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8008976:	687b      	ldr	r3, [r7, #4]
 8008978:	601a      	str	r2, [r3, #0]
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	4618      	mov	r0, r3
 800897e:	f7ff fe15 	bl	80085ac <_ZN8touchgfx8DrawableD1Ev>
 8008982:	687b      	ldr	r3, [r7, #4]
 8008984:	4618      	mov	r0, r3
 8008986:	3708      	adds	r7, #8
 8008988:	46bd      	mov	sp, r7
 800898a:	bd80      	pop	{r7, pc}
 800898c:	0801c3ec 	.word	0x0801c3ec

08008990 <_ZN8touchgfx6WidgetD0Ev>:
 8008990:	b580      	push	{r7, lr}
 8008992:	b082      	sub	sp, #8
 8008994:	af00      	add	r7, sp, #0
 8008996:	6078      	str	r0, [r7, #4]
 8008998:	6878      	ldr	r0, [r7, #4]
 800899a:	f7ff ffe7 	bl	800896c <_ZN8touchgfx6WidgetD1Ev>
 800899e:	2128      	movs	r1, #40	; 0x28
 80089a0:	6878      	ldr	r0, [r7, #4]
 80089a2:	f011 ff8c 	bl	801a8be <_ZdlPvj>
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	4618      	mov	r0, r3
 80089aa:	3708      	adds	r7, #8
 80089ac:	46bd      	mov	sp, r7
 80089ae:	bd80      	pop	{r7, pc}

080089b0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param x          The point of intersection expressed in coordinates relative to the parent.
     * @param y          The y coordinate.
     * @param [out] last Result will be placed here.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 80089b0:	b580      	push	{r7, lr}
 80089b2:	b084      	sub	sp, #16
 80089b4:	af00      	add	r7, sp, #0
 80089b6:	60f8      	str	r0, [r7, #12]
 80089b8:	607b      	str	r3, [r7, #4]
 80089ba:	460b      	mov	r3, r1
 80089bc:	817b      	strh	r3, [r7, #10]
 80089be:	4613      	mov	r3, r2
 80089c0:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 80089c2:	68fb      	ldr	r3, [r7, #12]
 80089c4:	4618      	mov	r0, r3
 80089c6:	f7ff fecd 	bl	8008764 <_ZNK8touchgfx8Drawable9isVisibleEv>
 80089ca:	4603      	mov	r3, r0
 80089cc:	2b00      	cmp	r3, #0
 80089ce:	d008      	beq.n	80089e2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 80089d0:	68fb      	ldr	r3, [r7, #12]
 80089d2:	4618      	mov	r0, r3
 80089d4:	f7ff fed3 	bl	800877e <_ZNK8touchgfx8Drawable11isTouchableEv>
 80089d8:	4603      	mov	r3, r0
 80089da:	2b00      	cmp	r3, #0
 80089dc:	d001      	beq.n	80089e2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 80089de:	2301      	movs	r3, #1
 80089e0:	e000      	b.n	80089e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 80089e2:	2300      	movs	r3, #0
 80089e4:	2b00      	cmp	r3, #0
 80089e6:	d002      	beq.n	80089ee <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 80089e8:	68fa      	ldr	r2, [r7, #12]
 80089ea:	687b      	ldr	r3, [r7, #4]
 80089ec:	601a      	str	r2, [r3, #0]
        }
    }
 80089ee:	bf00      	nop
 80089f0:	3710      	adds	r7, #16
 80089f2:	46bd      	mov	sp, r7
 80089f4:	bd80      	pop	{r7, pc}
	...

080089f8 <_ZN8touchgfx3BoxC1Ev>:
     *
     * @brief Constructor.
     *
     *        Constructs a new Box with a default alpha value of 255 (solid)
     */
    Box() : Widget(), alpha(255), color(0), reportAsSolid(false)
 80089f8:	b580      	push	{r7, lr}
 80089fa:	b082      	sub	sp, #8
 80089fc:	af00      	add	r7, sp, #0
 80089fe:	6078      	str	r0, [r7, #4]
 8008a00:	687b      	ldr	r3, [r7, #4]
 8008a02:	4618      	mov	r0, r3
 8008a04:	f7ff ffa0 	bl	8008948 <_ZN8touchgfx6WidgetC1Ev>
 8008a08:	4a0a      	ldr	r2, [pc, #40]	; (8008a34 <_ZN8touchgfx3BoxC1Ev+0x3c>)
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	601a      	str	r2, [r3, #0]
 8008a0e:	687b      	ldr	r3, [r7, #4]
 8008a10:	22ff      	movs	r2, #255	; 0xff
 8008a12:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 8008a16:	687b      	ldr	r3, [r7, #4]
 8008a18:	3328      	adds	r3, #40	; 0x28
 8008a1a:	2100      	movs	r1, #0
 8008a1c:	4618      	mov	r0, r3
 8008a1e:	f7ff fd51 	bl	80084c4 <_ZN8touchgfx9colortypeC1Em>
 8008a22:	687b      	ldr	r3, [r7, #4]
 8008a24:	2200      	movs	r2, #0
 8008a26:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
    }
 8008a2a:	687b      	ldr	r3, [r7, #4]
 8008a2c:	4618      	mov	r0, r3
 8008a2e:	3708      	adds	r7, #8
 8008a30:	46bd      	mov	sp, r7
 8008a32:	bd80      	pop	{r7, pc}
 8008a34:	0801d34c 	.word	0x0801d34c

08008a38 <_ZN8touchgfx3BoxD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Box() {}
 8008a38:	b580      	push	{r7, lr}
 8008a3a:	b082      	sub	sp, #8
 8008a3c:	af00      	add	r7, sp, #0
 8008a3e:	6078      	str	r0, [r7, #4]
 8008a40:	4a05      	ldr	r2, [pc, #20]	; (8008a58 <_ZN8touchgfx3BoxD1Ev+0x20>)
 8008a42:	687b      	ldr	r3, [r7, #4]
 8008a44:	601a      	str	r2, [r3, #0]
 8008a46:	687b      	ldr	r3, [r7, #4]
 8008a48:	4618      	mov	r0, r3
 8008a4a:	f7ff ff8f 	bl	800896c <_ZN8touchgfx6WidgetD1Ev>
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	4618      	mov	r0, r3
 8008a52:	3708      	adds	r7, #8
 8008a54:	46bd      	mov	sp, r7
 8008a56:	bd80      	pop	{r7, pc}
 8008a58:	0801d34c 	.word	0x0801d34c

08008a5c <_ZN8touchgfx3BoxD0Ev>:
 8008a5c:	b580      	push	{r7, lr}
 8008a5e:	b082      	sub	sp, #8
 8008a60:	af00      	add	r7, sp, #0
 8008a62:	6078      	str	r0, [r7, #4]
 8008a64:	6878      	ldr	r0, [r7, #4]
 8008a66:	f7ff ffe7 	bl	8008a38 <_ZN8touchgfx3BoxD1Ev>
 8008a6a:	2130      	movs	r1, #48	; 0x30
 8008a6c:	6878      	ldr	r0, [r7, #4]
 8008a6e:	f011 ff26 	bl	801a8be <_ZdlPvj>
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	4618      	mov	r0, r3
 8008a76:	3708      	adds	r7, #8
 8008a78:	46bd      	mov	sp, r7
 8008a7a:	bd80      	pop	{r7, pc}

08008a7c <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     *        Sets the color of the rectangle.
     *
     * @param color The color of the box.
     */
    void setColor(colortype color)
 8008a7c:	b480      	push	{r7}
 8008a7e:	b083      	sub	sp, #12
 8008a80:	af00      	add	r7, sp, #0
 8008a82:	6078      	str	r0, [r7, #4]
 8008a84:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 8008a86:	687b      	ldr	r3, [r7, #4]
 8008a88:	683a      	ldr	r2, [r7, #0]
 8008a8a:	629a      	str	r2, [r3, #40]	; 0x28
    }
 8008a8c:	bf00      	nop
 8008a8e:	370c      	adds	r7, #12
 8008a90:	46bd      	mov	sp, r7
 8008a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a96:	4770      	bx	lr

08008a98 <_ZN8touchgfx9TypedTextC1Et>:
    explicit TypedText(const TypedTextId id = TYPED_TEXT_INVALID) : typedTextId(id)
 8008a98:	b480      	push	{r7}
 8008a9a:	b083      	sub	sp, #12
 8008a9c:	af00      	add	r7, sp, #0
 8008a9e:	6078      	str	r0, [r7, #4]
 8008aa0:	460b      	mov	r3, r1
 8008aa2:	807b      	strh	r3, [r7, #2]
 8008aa4:	687b      	ldr	r3, [r7, #4]
 8008aa6:	887a      	ldrh	r2, [r7, #2]
 8008aa8:	801a      	strh	r2, [r3, #0]
    }
 8008aaa:	687b      	ldr	r3, [r7, #4]
 8008aac:	4618      	mov	r0, r3
 8008aae:	370c      	adds	r7, #12
 8008ab0:	46bd      	mov	sp, r7
 8008ab2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ab6:	4770      	bx	lr

08008ab8 <_ZN8touchgfx8TextAreaC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Create an empty TextArea. Default color is black.
     */
    TextArea()
 8008ab8:	b580      	push	{r7, lr}
 8008aba:	b082      	sub	sp, #8
 8008abc:	af00      	add	r7, sp, #0
 8008abe:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8008ac0:	687b      	ldr	r3, [r7, #4]
 8008ac2:	4618      	mov	r0, r3
 8008ac4:	f7ff ff40 	bl	8008948 <_ZN8touchgfx6WidgetC1Ev>
 8008ac8:	4a13      	ldr	r2, [pc, #76]	; (8008b18 <_ZN8touchgfx8TextAreaC1Ev+0x60>)
 8008aca:	687b      	ldr	r3, [r7, #4]
 8008acc:	601a      	str	r2, [r3, #0]
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	3326      	adds	r3, #38	; 0x26
 8008ad2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008ad6:	4618      	mov	r0, r3
 8008ad8:	f7ff ffde 	bl	8008a98 <_ZN8touchgfx9TypedTextC1Et>
 8008adc:	687b      	ldr	r3, [r7, #4]
 8008ade:	3328      	adds	r3, #40	; 0x28
 8008ae0:	2100      	movs	r1, #0
 8008ae2:	4618      	mov	r0, r3
 8008ae4:	f7ff fcee 	bl	80084c4 <_ZN8touchgfx9colortypeC1Em>
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	2200      	movs	r2, #0
 8008aec:	859a      	strh	r2, [r3, #44]	; 0x2c
 8008aee:	687b      	ldr	r3, [r7, #4]
 8008af0:	22ff      	movs	r2, #255	; 0xff
 8008af2:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 8008af6:	687b      	ldr	r3, [r7, #4]
 8008af8:	2200      	movs	r2, #0
 8008afa:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
 8008afe:	687b      	ldr	r3, [r7, #4]
 8008b00:	2200      	movs	r2, #0
 8008b02:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 8008b06:	687b      	ldr	r3, [r7, #4]
 8008b08:	2200      	movs	r2, #0
 8008b0a:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
    {
    }
 8008b0e:	687b      	ldr	r3, [r7, #4]
 8008b10:	4618      	mov	r0, r3
 8008b12:	3708      	adds	r7, #8
 8008b14:	46bd      	mov	sp, r7
 8008b16:	bd80      	pop	{r7, pc}
 8008b18:	0801d2d0 	.word	0x0801d2d0

08008b1c <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>:
     *
     *        Sets the color of the text.
     *
     * @param color The color to use.
     */
    inline void setColor(colortype color)
 8008b1c:	b480      	push	{r7}
 8008b1e:	b083      	sub	sp, #12
 8008b20:	af00      	add	r7, sp, #0
 8008b22:	6078      	str	r0, [r7, #4]
 8008b24:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 8008b26:	687b      	ldr	r3, [r7, #4]
 8008b28:	683a      	ldr	r2, [r7, #0]
 8008b2a:	629a      	str	r2, [r3, #40]	; 0x28
    }
 8008b2c:	bf00      	nop
 8008b2e:	370c      	adds	r7, #12
 8008b30:	46bd      	mov	sp, r7
 8008b32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b36:	4770      	bx	lr

08008b38 <_ZN8touchgfx8TextArea14setLinespacingEs>:
     *
     *        Sets the line spacing of the TextArea.
     *
     * @param space The line spacing of use in the TextArea.
     */
    inline void setLinespacing(int16_t space)
 8008b38:	b480      	push	{r7}
 8008b3a:	b083      	sub	sp, #12
 8008b3c:	af00      	add	r7, sp, #0
 8008b3e:	6078      	str	r0, [r7, #4]
 8008b40:	460b      	mov	r3, r1
 8008b42:	807b      	strh	r3, [r7, #2]
    {
        linespace = space;
 8008b44:	687b      	ldr	r3, [r7, #4]
 8008b46:	887a      	ldrh	r2, [r7, #2]
 8008b48:	859a      	strh	r2, [r3, #44]	; 0x2c
    }
 8008b4a:	bf00      	nop
 8008b4c:	370c      	adds	r7, #12
 8008b4e:	46bd      	mov	sp, r7
 8008b50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b54:	4770      	bx	lr
	...

08008b58 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 8008b58:	b580      	push	{r7, lr}
 8008b5a:	b082      	sub	sp, #8
 8008b5c:	af00      	add	r7, sp, #0
 8008b5e:	6078      	str	r0, [r7, #4]
 8008b60:	4a05      	ldr	r2, [pc, #20]	; (8008b78 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 8008b62:	687b      	ldr	r3, [r7, #4]
 8008b64:	601a      	str	r2, [r3, #0]
 8008b66:	687b      	ldr	r3, [r7, #4]
 8008b68:	4618      	mov	r0, r3
 8008b6a:	f7ff fe85 	bl	8008878 <_ZN8touchgfx6ScreenD1Ev>
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	4618      	mov	r0, r3
 8008b72:	3708      	adds	r7, #8
 8008b74:	46bd      	mov	sp, r7
 8008b76:	bd80      	pop	{r7, pc}
 8008b78:	0801c3b8 	.word	0x0801c3b8

08008b7c <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 8008b7c:	b580      	push	{r7, lr}
 8008b7e:	b082      	sub	sp, #8
 8008b80:	af00      	add	r7, sp, #0
 8008b82:	6078      	str	r0, [r7, #4]
 8008b84:	6878      	ldr	r0, [r7, #4]
 8008b86:	f7ff ffe7 	bl	8008b58 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 8008b8a:	2140      	movs	r1, #64	; 0x40
 8008b8c:	6878      	ldr	r0, [r7, #4]
 8008b8e:	f011 fe96 	bl	801a8be <_ZdlPvj>
 8008b92:	687b      	ldr	r3, [r7, #4]
 8008b94:	4618      	mov	r0, r3
 8008b96:	3708      	adds	r7, #8
 8008b98:	46bd      	mov	sp, r7
 8008b9a:	bd80      	pop	{r7, pc}

08008b9c <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8008b9c:	b580      	push	{r7, lr}
 8008b9e:	b082      	sub	sp, #8
 8008ba0:	af00      	add	r7, sp, #0
 8008ba2:	6078      	str	r0, [r7, #4]
 8008ba4:	4a0a      	ldr	r2, [pc, #40]	; (8008bd0 <_ZN15Screen1ViewBaseD1Ev+0x34>)
 8008ba6:	687b      	ldr	r3, [r7, #4]
 8008ba8:	601a      	str	r2, [r3, #0]
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	3370      	adds	r3, #112	; 0x70
 8008bae:	4618      	mov	r0, r3
 8008bb0:	f000 f8d4 	bl	8008d5c <_ZN8touchgfx8TextAreaD1Ev>
 8008bb4:	687b      	ldr	r3, [r7, #4]
 8008bb6:	3340      	adds	r3, #64	; 0x40
 8008bb8:	4618      	mov	r0, r3
 8008bba:	f7ff ff3d 	bl	8008a38 <_ZN8touchgfx3BoxD1Ev>
 8008bbe:	687b      	ldr	r3, [r7, #4]
 8008bc0:	4618      	mov	r0, r3
 8008bc2:	f7ff ffc9 	bl	8008b58 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	4618      	mov	r0, r3
 8008bca:	3708      	adds	r7, #8
 8008bcc:	46bd      	mov	sp, r7
 8008bce:	bd80      	pop	{r7, pc}
 8008bd0:	0801c384 	.word	0x0801c384

08008bd4 <_ZN15Screen1ViewBaseD0Ev>:
 8008bd4:	b580      	push	{r7, lr}
 8008bd6:	b082      	sub	sp, #8
 8008bd8:	af00      	add	r7, sp, #0
 8008bda:	6078      	str	r0, [r7, #4]
 8008bdc:	6878      	ldr	r0, [r7, #4]
 8008bde:	f7ff ffdd 	bl	8008b9c <_ZN15Screen1ViewBaseD1Ev>
 8008be2:	21a4      	movs	r1, #164	; 0xa4
 8008be4:	6878      	ldr	r0, [r7, #4]
 8008be6:	f011 fe6a 	bl	801a8be <_ZdlPvj>
 8008bea:	687b      	ldr	r3, [r7, #4]
 8008bec:	4618      	mov	r0, r3
 8008bee:	3708      	adds	r7, #8
 8008bf0:	46bd      	mov	sp, r7
 8008bf2:	bd80      	pop	{r7, pc}

08008bf4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     * @param green Value of the green part (0-255).
     * @param blue  Value of the blue part (0-255).
     *
     * @return The color representation depending on LCD color format.
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8008bf4:	b590      	push	{r4, r7, lr}
 8008bf6:	b083      	sub	sp, #12
 8008bf8:	af00      	add	r7, sp, #0
 8008bfa:	4603      	mov	r3, r0
 8008bfc:	71fb      	strb	r3, [r7, #7]
 8008bfe:	460b      	mov	r3, r1
 8008c00:	71bb      	strb	r3, [r7, #6]
 8008c02:	4613      	mov	r3, r2
 8008c04:	717b      	strb	r3, [r7, #5]
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 8008c06:	f7ff f843 	bl	8007c90 <_ZN8touchgfx3HAL11getInstanceEv>
 8008c0a:	4603      	mov	r3, r0
 8008c0c:	2b00      	cmp	r3, #0
 8008c0e:	d105      	bne.n	8008c1c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x28>
 8008c10:	4b0a      	ldr	r3, [pc, #40]	; (8008c3c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x48>)
 8008c12:	4a0b      	ldr	r2, [pc, #44]	; (8008c40 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x4c>)
 8008c14:	2138      	movs	r1, #56	; 0x38
 8008c16:	480b      	ldr	r0, [pc, #44]	; (8008c44 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x50>)
 8008c18:	f011 fe80 	bl	801a91c <__assert_func>
 8008c1c:	bf00      	nop
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8008c1e:	f7ff f843 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 8008c22:	6803      	ldr	r3, [r0, #0]
 8008c24:	332c      	adds	r3, #44	; 0x2c
 8008c26:	681c      	ldr	r4, [r3, #0]
 8008c28:	797b      	ldrb	r3, [r7, #5]
 8008c2a:	79ba      	ldrb	r2, [r7, #6]
 8008c2c:	79f9      	ldrb	r1, [r7, #7]
 8008c2e:	47a0      	blx	r4
 8008c30:	4603      	mov	r3, r0
    }
 8008c32:	4618      	mov	r0, r3
 8008c34:	370c      	adds	r7, #12
 8008c36:	46bd      	mov	sp, r7
 8008c38:	bd90      	pop	{r4, r7, pc}
 8008c3a:	bf00      	nop
 8008c3c:	0801bf00 	.word	0x0801bf00
 8008c40:	0801bf44 	.word	0x0801bf44
 8008c44:	0801bfa0 	.word	0x0801bfa0

08008c48 <_ZN15Screen1ViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase()
 8008c48:	b590      	push	{r4, r7, lr}
 8008c4a:	b087      	sub	sp, #28
 8008c4c:	af02      	add	r7, sp, #8
 8008c4e:	6078      	str	r0, [r7, #4]
 8008c50:	687b      	ldr	r3, [r7, #4]
 8008c52:	4618      	mov	r0, r3
 8008c54:	f000 f86c 	bl	8008d30 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 8008c58:	4a2f      	ldr	r2, [pc, #188]	; (8008d18 <_ZN15Screen1ViewBaseC1Ev+0xd0>)
 8008c5a:	687b      	ldr	r3, [r7, #4]
 8008c5c:	601a      	str	r2, [r3, #0]
 8008c5e:	687b      	ldr	r3, [r7, #4]
 8008c60:	3340      	adds	r3, #64	; 0x40
 8008c62:	4618      	mov	r0, r3
 8008c64:	f7ff fec8 	bl	80089f8 <_ZN8touchgfx3BoxC1Ev>
 8008c68:	687b      	ldr	r3, [r7, #4]
 8008c6a:	3370      	adds	r3, #112	; 0x70
 8008c6c:	4618      	mov	r0, r3
 8008c6e:	f7ff ff23 	bl	8008ab8 <_ZN8touchgfx8TextAreaC1Ev>
{

    box1.setPosition(0, 0, 240, 320);
 8008c72:	687b      	ldr	r3, [r7, #4]
 8008c74:	f103 0040 	add.w	r0, r3, #64	; 0x40
 8008c78:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008c7c:	9300      	str	r3, [sp, #0]
 8008c7e:	23f0      	movs	r3, #240	; 0xf0
 8008c80:	2200      	movs	r2, #0
 8008c82:	2100      	movs	r1, #0
 8008c84:	f7ff fcb2 	bl	80085ec <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 255));
 8008c88:	687b      	ldr	r3, [r7, #4]
 8008c8a:	f103 0440 	add.w	r4, r3, #64	; 0x40
 8008c8e:	22ff      	movs	r2, #255	; 0xff
 8008c90:	2100      	movs	r1, #0
 8008c92:	2000      	movs	r0, #0
 8008c94:	f7ff ffae 	bl	8008bf4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8008c98:	4603      	mov	r3, r0
 8008c9a:	4619      	mov	r1, r3
 8008c9c:	4620      	mov	r0, r4
 8008c9e:	f7ff feed 	bl	8008a7c <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    textArea1.setXY(42, 148);
 8008ca2:	687b      	ldr	r3, [r7, #4]
 8008ca4:	3370      	adds	r3, #112	; 0x70
 8008ca6:	2294      	movs	r2, #148	; 0x94
 8008ca8:	212a      	movs	r1, #42	; 0x2a
 8008caa:	4618      	mov	r0, r3
 8008cac:	f7ff fce9 	bl	8008682 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8008cb0:	687b      	ldr	r3, [r7, #4]
 8008cb2:	f103 0470 	add.w	r4, r3, #112	; 0x70
 8008cb6:	22ff      	movs	r2, #255	; 0xff
 8008cb8:	21ff      	movs	r1, #255	; 0xff
 8008cba:	20ff      	movs	r0, #255	; 0xff
 8008cbc:	f7ff ff9a 	bl	8008bf4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8008cc0:	4603      	mov	r3, r0
 8008cc2:	4619      	mov	r1, r3
 8008cc4:	4620      	mov	r0, r4
 8008cc6:	f7ff ff29 	bl	8008b1c <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea1.setLinespacing(0);
 8008cca:	687b      	ldr	r3, [r7, #4]
 8008ccc:	3370      	adds	r3, #112	; 0x70
 8008cce:	2100      	movs	r1, #0
 8008cd0:	4618      	mov	r0, r3
 8008cd2:	f7ff ff31 	bl	8008b38 <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	f103 0470 	add.w	r4, r3, #112	; 0x70
 8008cdc:	f107 030c 	add.w	r3, r7, #12
 8008ce0:	2100      	movs	r1, #0
 8008ce2:	4618      	mov	r0, r3
 8008ce4:	f7ff fed8 	bl	8008a98 <_ZN8touchgfx9TypedTextC1Et>
 8008ce8:	89b9      	ldrh	r1, [r7, #12]
 8008cea:	4620      	mov	r0, r4
 8008cec:	f003 fb80 	bl	800c3f0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    add(box1);
 8008cf0:	687a      	ldr	r2, [r7, #4]
 8008cf2:	687b      	ldr	r3, [r7, #4]
 8008cf4:	3340      	adds	r3, #64	; 0x40
 8008cf6:	4619      	mov	r1, r3
 8008cf8:	4610      	mov	r0, r2
 8008cfa:	f7ff fe15 	bl	8008928 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea1);
 8008cfe:	687a      	ldr	r2, [r7, #4]
 8008d00:	687b      	ldr	r3, [r7, #4]
 8008d02:	3370      	adds	r3, #112	; 0x70
 8008d04:	4619      	mov	r1, r3
 8008d06:	4610      	mov	r0, r2
 8008d08:	f7ff fe0e 	bl	8008928 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 8008d0c:	687b      	ldr	r3, [r7, #4]
 8008d0e:	4618      	mov	r0, r3
 8008d10:	3714      	adds	r7, #20
 8008d12:	46bd      	mov	sp, r7
 8008d14:	bd90      	pop	{r4, r7, pc}
 8008d16:	bf00      	nop
 8008d18:	0801c384 	.word	0x0801c384

08008d1c <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 8008d1c:	b480      	push	{r7}
 8008d1e:	b083      	sub	sp, #12
 8008d20:	af00      	add	r7, sp, #0
 8008d22:	6078      	str	r0, [r7, #4]

}
 8008d24:	bf00      	nop
 8008d26:	370c      	adds	r7, #12
 8008d28:	46bd      	mov	sp, r7
 8008d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d2e:	4770      	bx	lr

08008d30 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View() : presenter(0)
 8008d30:	b580      	push	{r7, lr}
 8008d32:	b082      	sub	sp, #8
 8008d34:	af00      	add	r7, sp, #0
 8008d36:	6078      	str	r0, [r7, #4]
 8008d38:	687b      	ldr	r3, [r7, #4]
 8008d3a:	4618      	mov	r0, r3
 8008d3c:	f005 faa0 	bl	800e280 <_ZN8touchgfx6ScreenC1Ev>
 8008d40:	4a05      	ldr	r2, [pc, #20]	; (8008d58 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 8008d42:	687b      	ldr	r3, [r7, #4]
 8008d44:	601a      	str	r2, [r3, #0]
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	2200      	movs	r2, #0
 8008d4a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8008d4c:	687b      	ldr	r3, [r7, #4]
 8008d4e:	4618      	mov	r0, r3
 8008d50:	3708      	adds	r7, #8
 8008d52:	46bd      	mov	sp, r7
 8008d54:	bd80      	pop	{r7, pc}
 8008d56:	bf00      	nop
 8008d58:	0801c3b8 	.word	0x0801c3b8

08008d5c <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 8008d5c:	b580      	push	{r7, lr}
 8008d5e:	b082      	sub	sp, #8
 8008d60:	af00      	add	r7, sp, #0
 8008d62:	6078      	str	r0, [r7, #4]
 8008d64:	4a05      	ldr	r2, [pc, #20]	; (8008d7c <_ZN8touchgfx8TextAreaD1Ev+0x20>)
 8008d66:	687b      	ldr	r3, [r7, #4]
 8008d68:	601a      	str	r2, [r3, #0]
 8008d6a:	687b      	ldr	r3, [r7, #4]
 8008d6c:	4618      	mov	r0, r3
 8008d6e:	f7ff fdfd 	bl	800896c <_ZN8touchgfx6WidgetD1Ev>
 8008d72:	687b      	ldr	r3, [r7, #4]
 8008d74:	4618      	mov	r0, r3
 8008d76:	3708      	adds	r7, #8
 8008d78:	46bd      	mov	sp, r7
 8008d7a:	bd80      	pop	{r7, pc}
 8008d7c:	0801d2d0 	.word	0x0801d2d0

08008d80 <_ZN8touchgfx8TextAreaD0Ev>:
 8008d80:	b580      	push	{r7, lr}
 8008d82:	b082      	sub	sp, #8
 8008d84:	af00      	add	r7, sp, #0
 8008d86:	6078      	str	r0, [r7, #4]
 8008d88:	6878      	ldr	r0, [r7, #4]
 8008d8a:	f7ff ffe7 	bl	8008d5c <_ZN8touchgfx8TextAreaD1Ev>
 8008d8e:	2134      	movs	r1, #52	; 0x34
 8008d90:	6878      	ldr	r0, [r7, #4]
 8008d92:	f011 fd94 	bl	801a8be <_ZdlPvj>
 8008d96:	687b      	ldr	r3, [r7, #4]
 8008d98:	4618      	mov	r0, r3
 8008d9a:	3708      	adds	r7, #8
 8008d9c:	46bd      	mov	sp, r7
 8008d9e:	bd80      	pop	{r7, pc}

08008da0 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 8008da0:	b480      	push	{r7}
 8008da2:	af00      	add	r7, sp, #0
    return bitmap_database;
 8008da4:	4b02      	ldr	r3, [pc, #8]	; (8008db0 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 8008da6:	4618      	mov	r0, r3
 8008da8:	46bd      	mov	sp, r7
 8008daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dae:	4770      	bx	lr
 8008db0:	0801c44c 	.word	0x0801c44c

08008db4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 8008db4:	b480      	push	{r7}
 8008db6:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 8008db8:	2301      	movs	r3, #1
}
 8008dba:	4618      	mov	r0, r3
 8008dbc:	46bd      	mov	sp, r7
 8008dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dc2:	4770      	bx	lr

08008dc4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8008dc4:	b480      	push	{r7}
 8008dc6:	b085      	sub	sp, #20
 8008dc8:	af00      	add	r7, sp, #0
 8008dca:	60f8      	str	r0, [r7, #12]
 8008dcc:	60b9      	str	r1, [r7, #8]
 8008dce:	4613      	mov	r3, r2
 8008dd0:	80fb      	strh	r3, [r7, #6]
        typedTexts = data;
 8008dd2:	4a07      	ldr	r2, [pc, #28]	; (8008df0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8008dd4:	68fb      	ldr	r3, [r7, #12]
 8008dd6:	6013      	str	r3, [r2, #0]
        fonts = f;
 8008dd8:	4a06      	ldr	r2, [pc, #24]	; (8008df4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 8008dda:	68bb      	ldr	r3, [r7, #8]
 8008ddc:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 8008dde:	4a06      	ldr	r2, [pc, #24]	; (8008df8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 8008de0:	88fb      	ldrh	r3, [r7, #6]
 8008de2:	8013      	strh	r3, [r2, #0]
    }
 8008de4:	bf00      	nop
 8008de6:	3714      	adds	r7, #20
 8008de8:	46bd      	mov	sp, r7
 8008dea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dee:	4770      	bx	lr
 8008df0:	20001528 	.word	0x20001528
 8008df4:	20001530 	.word	0x20001530
 8008df8:	2000152c 	.word	0x2000152c

08008dfc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008dfc:	b590      	push	{r4, r7, lr}
 8008dfe:	b085      	sub	sp, #20
 8008e00:	af00      	add	r7, sp, #0
 8008e02:	4603      	mov	r3, r0
 8008e04:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 8008e06:	2300      	movs	r3, #0
 8008e08:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8008e0a:	88fb      	ldrh	r3, [r7, #6]
 8008e0c:	2b00      	cmp	r3, #0
 8008e0e:	d127      	bne.n	8008e60 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 8008e10:	88fb      	ldrh	r3, [r7, #6]
 8008e12:	4a1e      	ldr	r2, [pc, #120]	; (8008e8c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8008e14:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008e18:	2b00      	cmp	r3, #0
 8008e1a:	d016      	beq.n	8008e4a <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8008e1c:	88fb      	ldrh	r3, [r7, #6]
 8008e1e:	4a1b      	ldr	r2, [pc, #108]	; (8008e8c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8008e20:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008e24:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008e26:	68bb      	ldr	r3, [r7, #8]
 8008e28:	681b      	ldr	r3, [r3, #0]
 8008e2a:	68ba      	ldr	r2, [r7, #8]
 8008e2c:	4413      	add	r3, r2
 8008e2e:	4a18      	ldr	r2, [pc, #96]	; (8008e90 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8008e30:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008e32:	68bb      	ldr	r3, [r7, #8]
 8008e34:	685b      	ldr	r3, [r3, #4]
 8008e36:	68ba      	ldr	r2, [r7, #8]
 8008e38:	4413      	add	r3, r2
 8008e3a:	4a16      	ldr	r2, [pc, #88]	; (8008e94 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8008e3c:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008e3e:	68bb      	ldr	r3, [r7, #8]
 8008e40:	689b      	ldr	r3, [r3, #8]
 8008e42:	68ba      	ldr	r2, [r7, #8]
 8008e44:	4413      	add	r3, r2
 8008e46:	60fb      	str	r3, [r7, #12]
 8008e48:	e00a      	b.n	8008e60 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 8008e4a:	4b11      	ldr	r3, [pc, #68]	; (8008e90 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8008e4c:	4a12      	ldr	r2, [pc, #72]	; (8008e98 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 8008e4e:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008e50:	4a12      	ldr	r2, [pc, #72]	; (8008e9c <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 8008e52:	4b10      	ldr	r3, [pc, #64]	; (8008e94 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8008e54:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008e56:	88fb      	ldrh	r3, [r7, #6]
 8008e58:	4a11      	ldr	r2, [pc, #68]	; (8008ea0 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 8008e5a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008e5e:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8008e60:	68fb      	ldr	r3, [r7, #12]
 8008e62:	2b00      	cmp	r3, #0
 8008e64:	d00d      	beq.n	8008e82 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 8008e66:	4a0f      	ldr	r2, [pc, #60]	; (8008ea4 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 8008e68:	88fb      	ldrh	r3, [r7, #6]
 8008e6a:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008e6c:	f000 f83e 	bl	8008eec <_ZN17TypedTextDatabase8getFontsEv>
 8008e70:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008e72:	f000 f833 	bl	8008edc <_ZN17TypedTextDatabase15getInstanceSizeEv>
 8008e76:	4603      	mov	r3, r0
 8008e78:	461a      	mov	r2, r3
 8008e7a:	4621      	mov	r1, r4
 8008e7c:	68f8      	ldr	r0, [r7, #12]
 8008e7e:	f7ff ffa1 	bl	8008dc4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 8008e82:	bf00      	nop
 8008e84:	3714      	adds	r7, #20
 8008e86:	46bd      	mov	sp, r7
 8008e88:	bd90      	pop	{r4, r7, pc}
 8008e8a:	bf00      	nop
 8008e8c:	20000528 	.word	0x20000528
 8008e90:	20000530 	.word	0x20000530
 8008e94:	20000534 	.word	0x20000534
 8008e98:	0801ef64 	.word	0x0801ef64
 8008e9c:	0801ef60 	.word	0x0801ef60
 8008ea0:	0801ef74 	.word	0x0801ef74
 8008ea4:	2000052c 	.word	0x2000052c

08008ea8 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 8008ea8:	b480      	push	{r7}
 8008eaa:	b083      	sub	sp, #12
 8008eac:	af00      	add	r7, sp, #0
 8008eae:	6078      	str	r0, [r7, #4]
 8008eb0:	460b      	mov	r3, r1
 8008eb2:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008eb4:	4b07      	ldr	r3, [pc, #28]	; (8008ed4 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 8008eb6:	681a      	ldr	r2, [r3, #0]
 8008eb8:	4b07      	ldr	r3, [pc, #28]	; (8008ed8 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 8008eba:	6819      	ldr	r1, [r3, #0]
 8008ebc:	887b      	ldrh	r3, [r7, #2]
 8008ebe:	009b      	lsls	r3, r3, #2
 8008ec0:	440b      	add	r3, r1
 8008ec2:	681b      	ldr	r3, [r3, #0]
 8008ec4:	005b      	lsls	r3, r3, #1
 8008ec6:	4413      	add	r3, r2
}
 8008ec8:	4618      	mov	r0, r3
 8008eca:	370c      	adds	r7, #12
 8008ecc:	46bd      	mov	sp, r7
 8008ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ed2:	4770      	bx	lr
 8008ed4:	20000530 	.word	0x20000530
 8008ed8:	20000534 	.word	0x20000534

08008edc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8008edc:	b480      	push	{r7}
 8008ede:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8008ee0:	2301      	movs	r3, #1
}
 8008ee2:	4618      	mov	r0, r3
 8008ee4:	46bd      	mov	sp, r7
 8008ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008eea:	4770      	bx	lr

08008eec <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8008eec:	b480      	push	{r7}
 8008eee:	af00      	add	r7, sp, #0
    return _fonts;
 8008ef0:	4b02      	ldr	r3, [pc, #8]	; (8008efc <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 8008ef2:	4618      	mov	r0, r3
 8008ef4:	46bd      	mov	sp, r7
 8008ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008efa:	4770      	bx	lr
 8008efc:	20000538 	.word	0x20000538

08008f00 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        _fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8008f00:	b580      	push	{r7, lr}
 8008f02:	b082      	sub	sp, #8
 8008f04:	af00      	add	r7, sp, #0
 8008f06:	6078      	str	r0, [r7, #4]
 8008f08:	6039      	str	r1, [r7, #0]
 8008f0a:	687b      	ldr	r3, [r7, #4]
 8008f0c:	2b01      	cmp	r3, #1
 8008f0e:	d113      	bne.n	8008f38 <_Z41__static_initialization_and_destruction_0ii+0x38>
 8008f10:	683b      	ldr	r3, [r7, #0]
 8008f12:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008f16:	4293      	cmp	r3, r2
 8008f18:	d10e      	bne.n	8008f38 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 8008f1a:	f7fe fd1d 	bl	8007958 <_Z23getFont_verdana_20_4bppv>
 8008f1e:	4603      	mov	r3, r0
};
 8008f20:	4a07      	ldr	r2, [pc, #28]	; (8008f40 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8008f22:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 8008f24:	f7fe fd6c 	bl	8007a00 <_Z23getFont_verdana_40_4bppv>
 8008f28:	4603      	mov	r3, r0
};
 8008f2a:	4a05      	ldr	r2, [pc, #20]	; (8008f40 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8008f2c:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 8008f2e:	f7fe fcbf 	bl	80078b0 <_Z23getFont_verdana_10_4bppv>
 8008f32:	4603      	mov	r3, r0
};
 8008f34:	4a02      	ldr	r2, [pc, #8]	; (8008f40 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8008f36:	6093      	str	r3, [r2, #8]
}  // namespace TypedTextDatabase
 8008f38:	bf00      	nop
 8008f3a:	3708      	adds	r7, #8
 8008f3c:	46bd      	mov	sp, r7
 8008f3e:	bd80      	pop	{r7, pc}
 8008f40:	20000538 	.word	0x20000538

08008f44 <_GLOBAL__sub_I__fonts>:
 8008f44:	b580      	push	{r7, lr}
 8008f46:	af00      	add	r7, sp, #0
 8008f48:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008f4c:	2001      	movs	r0, #1
 8008f4e:	f7ff ffd7 	bl	8008f00 <_Z41__static_initialization_and_destruction_0ii>
 8008f52:	bd80      	pop	{r7, pc}

08008f54 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008f54:	b580      	push	{r7, lr}
 8008f56:	b082      	sub	sp, #8
 8008f58:	af00      	add	r7, sp, #0
 8008f5a:	6078      	str	r0, [r7, #4]
 8008f5c:	4a05      	ldr	r2, [pc, #20]	; (8008f74 <_ZN19FrontendApplicationD1Ev+0x20>)
 8008f5e:	687b      	ldr	r3, [r7, #4]
 8008f60:	601a      	str	r2, [r3, #0]
 8008f62:	687b      	ldr	r3, [r7, #4]
 8008f64:	4618      	mov	r0, r3
 8008f66:	f7fe ffed 	bl	8007f44 <_ZN23FrontendApplicationBaseD1Ev>
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	4618      	mov	r0, r3
 8008f6e:	3708      	adds	r7, #8
 8008f70:	46bd      	mov	sp, r7
 8008f72:	bd80      	pop	{r7, pc}
 8008f74:	0801c468 	.word	0x0801c468

08008f78 <_ZN19FrontendApplicationD0Ev>:
 8008f78:	b580      	push	{r7, lr}
 8008f7a:	b082      	sub	sp, #8
 8008f7c:	af00      	add	r7, sp, #0
 8008f7e:	6078      	str	r0, [r7, #4]
 8008f80:	6878      	ldr	r0, [r7, #4]
 8008f82:	f7ff ffe7 	bl	8008f54 <_ZN19FrontendApplicationD1Ev>
 8008f86:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8008f8a:	6878      	ldr	r0, [r7, #4]
 8008f8c:	f011 fc97 	bl	801a8be <_ZdlPvj>
 8008f90:	687b      	ldr	r3, [r7, #4]
 8008f92:	4618      	mov	r0, r3
 8008f94:	3708      	adds	r7, #8
 8008f96:	46bd      	mov	sp, r7
 8008f98:	bd80      	pop	{r7, pc}

08008f9a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008f9a:	b580      	push	{r7, lr}
 8008f9c:	b082      	sub	sp, #8
 8008f9e:	af00      	add	r7, sp, #0
 8008fa0:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 8008fa2:	687b      	ldr	r3, [r7, #4]
 8008fa4:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8008fa8:	4618      	mov	r0, r3
 8008faa:	f000 f82d 	bl	8009008 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008fae:	687b      	ldr	r3, [r7, #4]
 8008fb0:	4618      	mov	r0, r3
 8008fb2:	f004 f909 	bl	800d1c8 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8008fb6:	bf00      	nop
 8008fb8:	3708      	adds	r7, #8
 8008fba:	46bd      	mov	sp, r7
 8008fbc:	bd80      	pop	{r7, pc}
	...

08008fc0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008fc0:	b580      	push	{r7, lr}
 8008fc2:	b084      	sub	sp, #16
 8008fc4:	af00      	add	r7, sp, #0
 8008fc6:	60f8      	str	r0, [r7, #12]
 8008fc8:	60b9      	str	r1, [r7, #8]
 8008fca:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8008fcc:	68fb      	ldr	r3, [r7, #12]
 8008fce:	687a      	ldr	r2, [r7, #4]
 8008fd0:	68b9      	ldr	r1, [r7, #8]
 8008fd2:	4618      	mov	r0, r3
 8008fd4:	f7ff f830 	bl	8008038 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008fd8:	4a03      	ldr	r2, [pc, #12]	; (8008fe8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8008fda:	68fb      	ldr	r3, [r7, #12]
 8008fdc:	601a      	str	r2, [r3, #0]
{

}
 8008fde:	68fb      	ldr	r3, [r7, #12]
 8008fe0:	4618      	mov	r0, r3
 8008fe2:	3710      	adds	r7, #16
 8008fe4:	46bd      	mov	sp, r7
 8008fe6:	bd80      	pop	{r7, pc}
 8008fe8:	0801c468 	.word	0x0801c468

08008fec <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8008fec:	b480      	push	{r7}
 8008fee:	b083      	sub	sp, #12
 8008ff0:	af00      	add	r7, sp, #0
 8008ff2:	6078      	str	r0, [r7, #4]
 8008ff4:	687b      	ldr	r3, [r7, #4]
 8008ff6:	2200      	movs	r2, #0
 8008ff8:	601a      	str	r2, [r3, #0]
{

}
 8008ffa:	687b      	ldr	r3, [r7, #4]
 8008ffc:	4618      	mov	r0, r3
 8008ffe:	370c      	adds	r7, #12
 8009000:	46bd      	mov	sp, r7
 8009002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009006:	4770      	bx	lr

08009008 <_ZN5Model4tickEv>:

void Model::tick()
{
 8009008:	b480      	push	{r7}
 800900a:	b083      	sub	sp, #12
 800900c:	af00      	add	r7, sp, #0
 800900e:	6078      	str	r0, [r7, #4]

}
 8009010:	bf00      	nop
 8009012:	370c      	adds	r7, #12
 8009014:	46bd      	mov	sp, r7
 8009016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800901a:	4770      	bx	lr

0800901c <_ZN8touchgfx9Presenter8activateEv>:
     * @brief Place initialization code for the Presenter here.
     *
     *        The activate function is called automatically when a screen transition causes
     *        this Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800901c:	b480      	push	{r7}
 800901e:	b083      	sub	sp, #12
 8009020:	af00      	add	r7, sp, #0
 8009022:	6078      	str	r0, [r7, #4]
    {
    }
 8009024:	bf00      	nop
 8009026:	370c      	adds	r7, #12
 8009028:	46bd      	mov	sp, r7
 800902a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800902e:	4770      	bx	lr

08009030 <_ZN8touchgfx9Presenter10deactivateEv>:
     * @brief Place cleanup code for the Presenter here.
     *
     *        The deactivate function is called automatically when a screen transition causes
     *        this Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8009030:	b480      	push	{r7}
 8009032:	b083      	sub	sp, #12
 8009034:	af00      	add	r7, sp, #0
 8009036:	6078      	str	r0, [r7, #4]
    {
    }
 8009038:	bf00      	nop
 800903a:	370c      	adds	r7, #12
 800903c:	46bd      	mov	sp, r7
 800903e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009042:	4770      	bx	lr

08009044 <_ZN8touchgfx9PresenterD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Presenter()
 8009044:	b480      	push	{r7}
 8009046:	b083      	sub	sp, #12
 8009048:	af00      	add	r7, sp, #0
 800904a:	6078      	str	r0, [r7, #4]
    {
 800904c:	4a04      	ldr	r2, [pc, #16]	; (8009060 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800904e:	687b      	ldr	r3, [r7, #4]
 8009050:	601a      	str	r2, [r3, #0]
    }
 8009052:	687b      	ldr	r3, [r7, #4]
 8009054:	4618      	mov	r0, r3
 8009056:	370c      	adds	r7, #12
 8009058:	46bd      	mov	sp, r7
 800905a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800905e:	4770      	bx	lr
 8009060:	0801c4dc 	.word	0x0801c4dc

08009064 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 8009064:	b580      	push	{r7, lr}
 8009066:	b082      	sub	sp, #8
 8009068:	af00      	add	r7, sp, #0
 800906a:	6078      	str	r0, [r7, #4]
    }
 800906c:	6878      	ldr	r0, [r7, #4]
 800906e:	f7ff ffe9 	bl	8009044 <_ZN8touchgfx9PresenterD1Ev>
 8009072:	2104      	movs	r1, #4
 8009074:	6878      	ldr	r0, [r7, #4]
 8009076:	f011 fc22 	bl	801a8be <_ZdlPvj>
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	4618      	mov	r0, r3
 800907e:	3708      	adds	r7, #8
 8009080:	46bd      	mov	sp, r7
 8009082:	bd80      	pop	{r7, pc}

08009084 <_ZN8touchgfx9PresenterC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Presenter()
 8009084:	b480      	push	{r7}
 8009086:	b083      	sub	sp, #12
 8009088:	af00      	add	r7, sp, #0
 800908a:	6078      	str	r0, [r7, #4]
    {
 800908c:	4a04      	ldr	r2, [pc, #16]	; (80090a0 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800908e:	687b      	ldr	r3, [r7, #4]
 8009090:	601a      	str	r2, [r3, #0]
    }
 8009092:	687b      	ldr	r3, [r7, #4]
 8009094:	4618      	mov	r0, r3
 8009096:	370c      	adds	r7, #12
 8009098:	46bd      	mov	sp, r7
 800909a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800909e:	4770      	bx	lr
 80090a0:	0801c4dc 	.word	0x0801c4dc

080090a4 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 80090a4:	b480      	push	{r7}
 80090a6:	b083      	sub	sp, #12
 80090a8:	af00      	add	r7, sp, #0
 80090aa:	6078      	str	r0, [r7, #4]
 80090ac:	4a06      	ldr	r2, [pc, #24]	; (80090c8 <_ZN13ModelListenerC1Ev+0x24>)
 80090ae:	687b      	ldr	r3, [r7, #4]
 80090b0:	601a      	str	r2, [r3, #0]
 80090b2:	687b      	ldr	r3, [r7, #4]
 80090b4:	2200      	movs	r2, #0
 80090b6:	605a      	str	r2, [r3, #4]
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	4618      	mov	r0, r3
 80090bc:	370c      	adds	r7, #12
 80090be:	46bd      	mov	sp, r7
 80090c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090c4:	4770      	bx	lr
 80090c6:	bf00      	nop
 80090c8:	0801c4cc 	.word	0x0801c4cc

080090cc <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 80090cc:	b480      	push	{r7}
 80090ce:	b083      	sub	sp, #12
 80090d0:	af00      	add	r7, sp, #0
 80090d2:	6078      	str	r0, [r7, #4]
 80090d4:	4a04      	ldr	r2, [pc, #16]	; (80090e8 <_ZN13ModelListenerD1Ev+0x1c>)
 80090d6:	687b      	ldr	r3, [r7, #4]
 80090d8:	601a      	str	r2, [r3, #0]
 80090da:	687b      	ldr	r3, [r7, #4]
 80090dc:	4618      	mov	r0, r3
 80090de:	370c      	adds	r7, #12
 80090e0:	46bd      	mov	sp, r7
 80090e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090e6:	4770      	bx	lr
 80090e8:	0801c4cc 	.word	0x0801c4cc

080090ec <_ZN13ModelListenerD0Ev>:
 80090ec:	b580      	push	{r7, lr}
 80090ee:	b082      	sub	sp, #8
 80090f0:	af00      	add	r7, sp, #0
 80090f2:	6078      	str	r0, [r7, #4]
 80090f4:	6878      	ldr	r0, [r7, #4]
 80090f6:	f7ff ffe9 	bl	80090cc <_ZN13ModelListenerD1Ev>
 80090fa:	2108      	movs	r1, #8
 80090fc:	6878      	ldr	r0, [r7, #4]
 80090fe:	f011 fbde 	bl	801a8be <_ZdlPvj>
 8009102:	687b      	ldr	r3, [r7, #4]
 8009104:	4618      	mov	r0, r3
 8009106:	3708      	adds	r7, #8
 8009108:	46bd      	mov	sp, r7
 800910a:	bd80      	pop	{r7, pc}

0800910c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 800910c:	b580      	push	{r7, lr}
 800910e:	b082      	sub	sp, #8
 8009110:	af00      	add	r7, sp, #0
 8009112:	6078      	str	r0, [r7, #4]
 8009114:	4a09      	ldr	r2, [pc, #36]	; (800913c <_ZN16Screen1PresenterD1Ev+0x30>)
 8009116:	687b      	ldr	r3, [r7, #4]
 8009118:	601a      	str	r2, [r3, #0]
 800911a:	4a09      	ldr	r2, [pc, #36]	; (8009140 <_ZN16Screen1PresenterD1Ev+0x34>)
 800911c:	687b      	ldr	r3, [r7, #4]
 800911e:	605a      	str	r2, [r3, #4]
 8009120:	687b      	ldr	r3, [r7, #4]
 8009122:	3304      	adds	r3, #4
 8009124:	4618      	mov	r0, r3
 8009126:	f7ff ffd1 	bl	80090cc <_ZN13ModelListenerD1Ev>
 800912a:	687b      	ldr	r3, [r7, #4]
 800912c:	4618      	mov	r0, r3
 800912e:	f7ff ff89 	bl	8009044 <_ZN8touchgfx9PresenterD1Ev>
 8009132:	687b      	ldr	r3, [r7, #4]
 8009134:	4618      	mov	r0, r3
 8009136:	3708      	adds	r7, #8
 8009138:	46bd      	mov	sp, r7
 800913a:	bd80      	pop	{r7, pc}
 800913c:	0801c4a4 	.word	0x0801c4a4
 8009140:	0801c4bc 	.word	0x0801c4bc

08009144 <_ZThn4_N16Screen1PresenterD1Ev>:
 8009144:	f1a0 0004 	sub.w	r0, r0, #4
 8009148:	e7e0      	b.n	800910c <_ZN16Screen1PresenterD1Ev>
 800914a:	bf00      	nop

0800914c <_ZN16Screen1PresenterD0Ev>:
 800914c:	b580      	push	{r7, lr}
 800914e:	b082      	sub	sp, #8
 8009150:	af00      	add	r7, sp, #0
 8009152:	6078      	str	r0, [r7, #4]
 8009154:	6878      	ldr	r0, [r7, #4]
 8009156:	f7ff ffd9 	bl	800910c <_ZN16Screen1PresenterD1Ev>
 800915a:	2110      	movs	r1, #16
 800915c:	6878      	ldr	r0, [r7, #4]
 800915e:	f011 fbae 	bl	801a8be <_ZdlPvj>
 8009162:	687b      	ldr	r3, [r7, #4]
 8009164:	4618      	mov	r0, r3
 8009166:	3708      	adds	r7, #8
 8009168:	46bd      	mov	sp, r7
 800916a:	bd80      	pop	{r7, pc}

0800916c <_ZThn4_N16Screen1PresenterD0Ev>:
 800916c:	f1a0 0004 	sub.w	r0, r0, #4
 8009170:	e7ec      	b.n	800914c <_ZN16Screen1PresenterD0Ev>
	...

08009174 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 8009174:	b580      	push	{r7, lr}
 8009176:	b082      	sub	sp, #8
 8009178:	af00      	add	r7, sp, #0
 800917a:	6078      	str	r0, [r7, #4]
 800917c:	6039      	str	r1, [r7, #0]
    : view(v)
 800917e:	687b      	ldr	r3, [r7, #4]
 8009180:	4618      	mov	r0, r3
 8009182:	f7ff ff7f 	bl	8009084 <_ZN8touchgfx9PresenterC1Ev>
 8009186:	687b      	ldr	r3, [r7, #4]
 8009188:	3304      	adds	r3, #4
 800918a:	4618      	mov	r0, r3
 800918c:	f7ff ff8a 	bl	80090a4 <_ZN13ModelListenerC1Ev>
 8009190:	4a06      	ldr	r2, [pc, #24]	; (80091ac <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	601a      	str	r2, [r3, #0]
 8009196:	4a06      	ldr	r2, [pc, #24]	; (80091b0 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	605a      	str	r2, [r3, #4]
 800919c:	687b      	ldr	r3, [r7, #4]
 800919e:	683a      	ldr	r2, [r7, #0]
 80091a0:	60da      	str	r2, [r3, #12]
{

}
 80091a2:	687b      	ldr	r3, [r7, #4]
 80091a4:	4618      	mov	r0, r3
 80091a6:	3708      	adds	r7, #8
 80091a8:	46bd      	mov	sp, r7
 80091aa:	bd80      	pop	{r7, pc}
 80091ac:	0801c4a4 	.word	0x0801c4a4
 80091b0:	0801c4bc 	.word	0x0801c4bc

080091b4 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 80091b4:	b480      	push	{r7}
 80091b6:	b083      	sub	sp, #12
 80091b8:	af00      	add	r7, sp, #0
 80091ba:	6078      	str	r0, [r7, #4]

}
 80091bc:	bf00      	nop
 80091be:	370c      	adds	r7, #12
 80091c0:	46bd      	mov	sp, r7
 80091c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091c6:	4770      	bx	lr

080091c8 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 80091c8:	b480      	push	{r7}
 80091ca:	b083      	sub	sp, #12
 80091cc:	af00      	add	r7, sp, #0
 80091ce:	6078      	str	r0, [r7, #4]

}
 80091d0:	bf00      	nop
 80091d2:	370c      	adds	r7, #12
 80091d4:	46bd      	mov	sp, r7
 80091d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091da:	4770      	bx	lr

080091dc <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80091dc:	b580      	push	{r7, lr}
 80091de:	b082      	sub	sp, #8
 80091e0:	af00      	add	r7, sp, #0
 80091e2:	6078      	str	r0, [r7, #4]
 80091e4:	4a05      	ldr	r2, [pc, #20]	; (80091fc <_ZN11Screen1ViewD1Ev+0x20>)
 80091e6:	687b      	ldr	r3, [r7, #4]
 80091e8:	601a      	str	r2, [r3, #0]
 80091ea:	687b      	ldr	r3, [r7, #4]
 80091ec:	4618      	mov	r0, r3
 80091ee:	f7ff fcd5 	bl	8008b9c <_ZN15Screen1ViewBaseD1Ev>
 80091f2:	687b      	ldr	r3, [r7, #4]
 80091f4:	4618      	mov	r0, r3
 80091f6:	3708      	adds	r7, #8
 80091f8:	46bd      	mov	sp, r7
 80091fa:	bd80      	pop	{r7, pc}
 80091fc:	0801c4f4 	.word	0x0801c4f4

08009200 <_ZN11Screen1ViewD0Ev>:
 8009200:	b580      	push	{r7, lr}
 8009202:	b082      	sub	sp, #8
 8009204:	af00      	add	r7, sp, #0
 8009206:	6078      	str	r0, [r7, #4]
 8009208:	6878      	ldr	r0, [r7, #4]
 800920a:	f7ff ffe7 	bl	80091dc <_ZN11Screen1ViewD1Ev>
 800920e:	21a4      	movs	r1, #164	; 0xa4
 8009210:	6878      	ldr	r0, [r7, #4]
 8009212:	f011 fb54 	bl	801a8be <_ZdlPvj>
 8009216:	687b      	ldr	r3, [r7, #4]
 8009218:	4618      	mov	r0, r3
 800921a:	3708      	adds	r7, #8
 800921c:	46bd      	mov	sp, r7
 800921e:	bd80      	pop	{r7, pc}

08009220 <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 8009220:	b580      	push	{r7, lr}
 8009222:	b082      	sub	sp, #8
 8009224:	af00      	add	r7, sp, #0
 8009226:	6078      	str	r0, [r7, #4]
 8009228:	687b      	ldr	r3, [r7, #4]
 800922a:	4618      	mov	r0, r3
 800922c:	f7ff fd0c 	bl	8008c48 <_ZN15Screen1ViewBaseC1Ev>
 8009230:	4a03      	ldr	r2, [pc, #12]	; (8009240 <_ZN11Screen1ViewC1Ev+0x20>)
 8009232:	687b      	ldr	r3, [r7, #4]
 8009234:	601a      	str	r2, [r3, #0]
{

}
 8009236:	687b      	ldr	r3, [r7, #4]
 8009238:	4618      	mov	r0, r3
 800923a:	3708      	adds	r7, #8
 800923c:	46bd      	mov	sp, r7
 800923e:	bd80      	pop	{r7, pc}
 8009240:	0801c4f4 	.word	0x0801c4f4

08009244 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 8009244:	b580      	push	{r7, lr}
 8009246:	b082      	sub	sp, #8
 8009248:	af00      	add	r7, sp, #0
 800924a:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800924c:	687b      	ldr	r3, [r7, #4]
 800924e:	4618      	mov	r0, r3
 8009250:	f7ff fd64 	bl	8008d1c <_ZN15Screen1ViewBase11setupScreenEv>
}
 8009254:	bf00      	nop
 8009256:	3708      	adds	r7, #8
 8009258:	46bd      	mov	sp, r7
 800925a:	bd80      	pop	{r7, pc}

0800925c <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800925c:	b580      	push	{r7, lr}
 800925e:	b082      	sub	sp, #8
 8009260:	af00      	add	r7, sp, #0
 8009262:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 8009264:	687b      	ldr	r3, [r7, #4]
 8009266:	4618      	mov	r0, r3
 8009268:	f7ff fb3e 	bl	80088e8 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800926c:	bf00      	nop
 800926e:	3708      	adds	r7, #8
 8009270:	46bd      	mov	sp, r7
 8009272:	bd80      	pop	{r7, pc}

08009274 <_ZN8touchgfx15TouchControllerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~TouchController()
 8009274:	b480      	push	{r7}
 8009276:	b083      	sub	sp, #12
 8009278:	af00      	add	r7, sp, #0
 800927a:	6078      	str	r0, [r7, #4]
    {
 800927c:	4a04      	ldr	r2, [pc, #16]	; (8009290 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	601a      	str	r2, [r3, #0]
    }
 8009282:	687b      	ldr	r3, [r7, #4]
 8009284:	4618      	mov	r0, r3
 8009286:	370c      	adds	r7, #12
 8009288:	46bd      	mov	sp, r7
 800928a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800928e:	4770      	bx	lr
 8009290:	0801c540 	.word	0x0801c540

08009294 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 8009294:	b580      	push	{r7, lr}
 8009296:	b082      	sub	sp, #8
 8009298:	af00      	add	r7, sp, #0
 800929a:	6078      	str	r0, [r7, #4]
    }
 800929c:	6878      	ldr	r0, [r7, #4]
 800929e:	f7ff ffe9 	bl	8009274 <_ZN8touchgfx15TouchControllerD1Ev>
 80092a2:	2104      	movs	r1, #4
 80092a4:	6878      	ldr	r0, [r7, #4]
 80092a6:	f011 fb0a 	bl	801a8be <_ZdlPvj>
 80092aa:	687b      	ldr	r3, [r7, #4]
 80092ac:	4618      	mov	r0, r3
 80092ae:	3708      	adds	r7, #8
 80092b0:	46bd      	mov	sp, r7
 80092b2:	bd80      	pop	{r7, pc}

080092b4 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 80092b4:	b480      	push	{r7}
 80092b6:	b083      	sub	sp, #12
 80092b8:	af00      	add	r7, sp, #0
 80092ba:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 80092bc:	bf00      	nop
 80092be:	370c      	adds	r7, #12
 80092c0:	46bd      	mov	sp, r7
 80092c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092c6:	4770      	bx	lr

080092c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 80092c8:	b480      	push	{r7}
 80092ca:	b085      	sub	sp, #20
 80092cc:	af00      	add	r7, sp, #0
 80092ce:	60f8      	str	r0, [r7, #12]
 80092d0:	60b9      	str	r1, [r7, #8]
 80092d2:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 80092d4:	2300      	movs	r3, #0
}
 80092d6:	4618      	mov	r0, r3
 80092d8:	3714      	adds	r7, #20
 80092da:	46bd      	mov	sp, r7
 80092dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092e0:	4770      	bx	lr
	...

080092e4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80092e4:	b580      	push	{r7, lr}
 80092e6:	b082      	sub	sp, #8
 80092e8:	af00      	add	r7, sp, #0
 80092ea:	6078      	str	r0, [r7, #4]
 80092ec:	4a05      	ldr	r2, [pc, #20]	; (8009304 <_ZN20STM32TouchControllerD1Ev+0x20>)
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	601a      	str	r2, [r3, #0]
 80092f2:	687b      	ldr	r3, [r7, #4]
 80092f4:	4618      	mov	r0, r3
 80092f6:	f7ff ffbd 	bl	8009274 <_ZN8touchgfx15TouchControllerD1Ev>
 80092fa:	687b      	ldr	r3, [r7, #4]
 80092fc:	4618      	mov	r0, r3
 80092fe:	3708      	adds	r7, #8
 8009300:	46bd      	mov	sp, r7
 8009302:	bd80      	pop	{r7, pc}
 8009304:	0801c528 	.word	0x0801c528

08009308 <_ZN20STM32TouchControllerD0Ev>:
 8009308:	b580      	push	{r7, lr}
 800930a:	b082      	sub	sp, #8
 800930c:	af00      	add	r7, sp, #0
 800930e:	6078      	str	r0, [r7, #4]
 8009310:	6878      	ldr	r0, [r7, #4]
 8009312:	f7ff ffe7 	bl	80092e4 <_ZN20STM32TouchControllerD1Ev>
 8009316:	2104      	movs	r1, #4
 8009318:	6878      	ldr	r0, [r7, #4]
 800931a:	f011 fad0 	bl	801a8be <_ZdlPvj>
 800931e:	687b      	ldr	r3, [r7, #4]
 8009320:	4618      	mov	r0, r3
 8009322:	3708      	adds	r7, #8
 8009324:	46bd      	mov	sp, r7
 8009326:	bd80      	pop	{r7, pc}

08009328 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8009328:	b480      	push	{r7}
 800932a:	b083      	sub	sp, #12
 800932c:	af00      	add	r7, sp, #0
 800932e:	4603      	mov	r3, r0
 8009330:	71fb      	strb	r3, [r7, #7]

}
 8009332:	bf00      	nop
 8009334:	370c      	adds	r7, #12
 8009336:	46bd      	mov	sp, r7
 8009338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800933c:	4770      	bx	lr

0800933e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800933e:	b480      	push	{r7}
 8009340:	b083      	sub	sp, #12
 8009342:	af00      	add	r7, sp, #0
 8009344:	4603      	mov	r3, r0
 8009346:	71fb      	strb	r3, [r7, #7]

}
 8009348:	bf00      	nop
 800934a:	370c      	adds	r7, #12
 800934c:	46bd      	mov	sp, r7
 800934e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009352:	4770      	bx	lr

08009354 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8009354:	b480      	push	{r7}
 8009356:	b083      	sub	sp, #12
 8009358:	af00      	add	r7, sp, #0
 800935a:	4603      	mov	r3, r0
 800935c:	71fb      	strb	r3, [r7, #7]

}
 800935e:	bf00      	nop
 8009360:	370c      	adds	r7, #12
 8009362:	46bd      	mov	sp, r7
 8009364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009368:	4770      	bx	lr
	...

0800936c <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800936c:	b480      	push	{r7}
 800936e:	b083      	sub	sp, #12
 8009370:	af00      	add	r7, sp, #0
 8009372:	6078      	str	r0, [r7, #4]
    {
 8009374:	4a04      	ldr	r2, [pc, #16]	; (8009388 <_ZN8touchgfx3HALD1Ev+0x1c>)
 8009376:	687b      	ldr	r3, [r7, #4]
 8009378:	601a      	str	r2, [r3, #0]
    }
 800937a:	687b      	ldr	r3, [r7, #4]
 800937c:	4618      	mov	r0, r3
 800937e:	370c      	adds	r7, #12
 8009380:	46bd      	mov	sp, r7
 8009382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009386:	4770      	bx	lr
 8009388:	0801cd68 	.word	0x0801cd68

0800938c <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800938c:	b580      	push	{r7, lr}
 800938e:	b082      	sub	sp, #8
 8009390:	af00      	add	r7, sp, #0
 8009392:	6078      	str	r0, [r7, #4]
    }
 8009394:	6878      	ldr	r0, [r7, #4]
 8009396:	f7ff ffe9 	bl	800936c <_ZN8touchgfx3HALD1Ev>
 800939a:	2178      	movs	r1, #120	; 0x78
 800939c:	6878      	ldr	r0, [r7, #4]
 800939e:	f011 fa8e 	bl	801a8be <_ZdlPvj>
 80093a2:	687b      	ldr	r3, [r7, #4]
 80093a4:	4618      	mov	r0, r3
 80093a6:	3708      	adds	r7, #8
 80093a8:	46bd      	mov	sp, r7
 80093aa:	bd80      	pop	{r7, pc}

080093ac <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 80093ac:	b480      	push	{r7}
 80093ae:	b083      	sub	sp, #12
 80093b0:	af00      	add	r7, sp, #0
 80093b2:	6078      	str	r0, [r7, #4]
 80093b4:	460b      	mov	r3, r1
 80093b6:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 80093b8:	687b      	ldr	r3, [r7, #4]
 80093ba:	78fa      	ldrb	r2, [r7, #3]
 80093bc:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 80093c0:	687b      	ldr	r3, [r7, #4]
 80093c2:	2201      	movs	r2, #1
 80093c4:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 80093c8:	bf00      	nop
 80093ca:	370c      	adds	r7, #12
 80093cc:	46bd      	mov	sp, r7
 80093ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093d2:	4770      	bx	lr

080093d4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *        As default, will return whatever blitcaps are reported by the associated DMA
     *        object.
     *
     * @return a bitmask of the supported blitcaps.
     */
    virtual BlitOperations getBlitCaps()
 80093d4:	b580      	push	{r7, lr}
 80093d6:	b082      	sub	sp, #8
 80093d8:	af00      	add	r7, sp, #0
 80093da:	6078      	str	r0, [r7, #4]
    {
        return dma.getBlitCaps();
 80093dc:	687b      	ldr	r3, [r7, #4]
 80093de:	685a      	ldr	r2, [r3, #4]
 80093e0:	687b      	ldr	r3, [r7, #4]
 80093e2:	685b      	ldr	r3, [r3, #4]
 80093e4:	681b      	ldr	r3, [r3, #0]
 80093e6:	681b      	ldr	r3, [r3, #0]
 80093e8:	4610      	mov	r0, r2
 80093ea:	4798      	blx	r3
 80093ec:	4603      	mov	r3, r0
    }
 80093ee:	4618      	mov	r0, r3
 80093f0:	3708      	adds	r7, #8
 80093f2:	46bd      	mov	sp, r7
 80093f4:	bd80      	pop	{r7, pc}

080093f6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
     * @brief Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     *        Has to be called from within the LCD IRQ rutine when the Back Porch Exit is
     *        reached.
     */
    virtual void backPorchExited()
 80093f6:	b580      	push	{r7, lr}
 80093f8:	b082      	sub	sp, #8
 80093fa:	af00      	add	r7, sp, #0
 80093fc:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 80093fe:	6878      	ldr	r0, [r7, #4]
 8009400:	f002 fd80 	bl	800bf04 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8009404:	687b      	ldr	r3, [r7, #4]
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	3390      	adds	r3, #144	; 0x90
 800940a:	681b      	ldr	r3, [r3, #0]
 800940c:	6878      	ldr	r0, [r7, #4]
 800940e:	4798      	blx	r3
    }
 8009410:	bf00      	nop
 8009412:	3708      	adds	r7, #8
 8009414:	46bd      	mov	sp, r7
 8009416:	bd80      	pop	{r7, pc}

08009418 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 8009418:	b480      	push	{r7}
 800941a:	b083      	sub	sp, #12
 800941c:	af00      	add	r7, sp, #0
 800941e:	6078      	str	r0, [r7, #4]
 8009420:	6039      	str	r1, [r7, #0]
    {
        return false;
 8009422:	2300      	movs	r3, #0
    }
 8009424:	4618      	mov	r0, r3
 8009426:	370c      	adds	r7, #12
 8009428:	46bd      	mov	sp, r7
 800942a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800942e:	4770      	bx	lr

08009430 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
     * @param      useDoubleBuffering  (Optional) If true, reserve memory for an extra frame buffer.
     * @param      useAnimationStorage (Optional) If true, reserve memory for animation storage.
     *
     * @deprecated Use the setFramaBufferStartAddress with 'format' parameter instead of 'depth'
     */
    virtual void setFrameBufferStartAddress(void* adr, uint16_t depth = 16, bool useDoubleBuffering = true, bool useAnimationStorage = true)
 8009430:	b590      	push	{r4, r7, lr}
 8009432:	b08b      	sub	sp, #44	; 0x2c
 8009434:	af00      	add	r7, sp, #0
 8009436:	60f8      	str	r0, [r7, #12]
 8009438:	60b9      	str	r1, [r7, #8]
 800943a:	4611      	mov	r1, r2
 800943c:	461a      	mov	r2, r3
 800943e:	460b      	mov	r3, r1
 8009440:	80fb      	strh	r3, [r7, #6]
 8009442:	4613      	mov	r3, r2
 8009444:	717b      	strb	r3, [r7, #5]
    {
        uint16_t stride = lcd().framebufferStride();
 8009446:	f7fe fc2f 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800944a:	4603      	mov	r3, r0
 800944c:	681a      	ldr	r2, [r3, #0]
 800944e:	3228      	adds	r2, #40	; 0x28
 8009450:	6812      	ldr	r2, [r2, #0]
 8009452:	4618      	mov	r0, r3
 8009454:	4790      	blx	r2
 8009456:	4603      	mov	r3, r0
 8009458:	837b      	strh	r3, [r7, #26]
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 800945a:	8b7b      	ldrh	r3, [r7, #26]
 800945c:	4a3d      	ldr	r2, [pc, #244]	; (8009554 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x124>)
 800945e:	8812      	ldrh	r2, [r2, #0]
 8009460:	fb02 f303 	mul.w	r3, r2, r3
 8009464:	617b      	str	r3, [r7, #20]
        uint8_t* ptr = (uint8_t*)adr;
 8009466:	68bb      	ldr	r3, [r7, #8]
 8009468:	627b      	str	r3, [r7, #36]	; 0x24
        void* double_buf = 0;
 800946a:	2300      	movs	r3, #0
 800946c:	623b      	str	r3, [r7, #32]
        void* anim_store = 0;
 800946e:	2300      	movs	r3, #0
 8009470:	61fb      	str	r3, [r7, #28]
        if (useDoubleBuffering)
 8009472:	797b      	ldrb	r3, [r7, #5]
 8009474:	2b00      	cmp	r3, #0
 8009476:	d005      	beq.n	8009484 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x54>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8009478:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800947a:	697b      	ldr	r3, [r7, #20]
 800947c:	4413      	add	r3, r2
 800947e:	627b      	str	r3, [r7, #36]	; 0x24
            double_buf = (void*)ptr;
 8009480:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009482:	623b      	str	r3, [r7, #32]
        }
        if (useAnimationStorage)
 8009484:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8009488:	2b00      	cmp	r3, #0
 800948a:	d005      	beq.n	8009498 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x68>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800948c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800948e:	697b      	ldr	r3, [r7, #20]
 8009490:	4413      	add	r3, r2
 8009492:	627b      	str	r3, [r7, #36]	; 0x24
            anim_store = (void*)ptr;
 8009494:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009496:	61fb      	str	r3, [r7, #28]
        }
        switch (depth)
 8009498:	88fb      	ldrh	r3, [r7, #6]
 800949a:	3b01      	subs	r3, #1
 800949c:	2b1f      	cmp	r3, #31
 800949e:	d84d      	bhi.n	800953c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x10c>
 80094a0:	a201      	add	r2, pc, #4	; (adr r2, 80094a8 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
 80094a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80094a6:	bf00      	nop
 80094a8:	08009529 	.word	0x08009529
 80094ac:	08009529 	.word	0x08009529
 80094b0:	0800953d 	.word	0x0800953d
 80094b4:	08009529 	.word	0x08009529
 80094b8:	0800953d 	.word	0x0800953d
 80094bc:	0800953d 	.word	0x0800953d
 80094c0:	0800953d 	.word	0x0800953d
 80094c4:	08009529 	.word	0x08009529
 80094c8:	0800953d 	.word	0x0800953d
 80094cc:	0800953d 	.word	0x0800953d
 80094d0:	0800953d 	.word	0x0800953d
 80094d4:	0800953d 	.word	0x0800953d
 80094d8:	0800953d 	.word	0x0800953d
 80094dc:	0800953d 	.word	0x0800953d
 80094e0:	0800953d 	.word	0x0800953d
 80094e4:	08009529 	.word	0x08009529
 80094e8:	0800953d 	.word	0x0800953d
 80094ec:	0800953d 	.word	0x0800953d
 80094f0:	0800953d 	.word	0x0800953d
 80094f4:	0800953d 	.word	0x0800953d
 80094f8:	0800953d 	.word	0x0800953d
 80094fc:	0800953d 	.word	0x0800953d
 8009500:	0800953d 	.word	0x0800953d
 8009504:	08009529 	.word	0x08009529
 8009508:	0800953d 	.word	0x0800953d
 800950c:	0800953d 	.word	0x0800953d
 8009510:	0800953d 	.word	0x0800953d
 8009514:	0800953d 	.word	0x0800953d
 8009518:	0800953d 	.word	0x0800953d
 800951c:	0800953d 	.word	0x0800953d
 8009520:	0800953d 	.word	0x0800953d
 8009524:	08009529 	.word	0x08009529
        case 16:
        case 8:
        case 4:
        case 2:
        case 1:
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8009528:	68fb      	ldr	r3, [r7, #12]
 800952a:	681b      	ldr	r3, [r3, #0]
 800952c:	3374      	adds	r3, #116	; 0x74
 800952e:	681c      	ldr	r4, [r3, #0]
 8009530:	69fb      	ldr	r3, [r7, #28]
 8009532:	6a3a      	ldr	r2, [r7, #32]
 8009534:	68b9      	ldr	r1, [r7, #8]
 8009536:	68f8      	ldr	r0, [r7, #12]
 8009538:	47a0      	blx	r4
            break;
 800953a:	e006      	b.n	800954a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x11a>
        default:
            assert(0 && "Unsupported bit depth");
 800953c:	4b06      	ldr	r3, [pc, #24]	; (8009558 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x128>)
 800953e:	4a07      	ldr	r2, [pc, #28]	; (800955c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x12c>)
 8009540:	f240 3125 	movw	r1, #805	; 0x325
 8009544:	4806      	ldr	r0, [pc, #24]	; (8009560 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x130>)
 8009546:	f011 f9e9 	bl	801a91c <__assert_func>
            break;
        }
    }
 800954a:	bf00      	nop
 800954c:	372c      	adds	r7, #44	; 0x2c
 800954e:	46bd      	mov	sp, r7
 8009550:	bd90      	pop	{r4, r7, pc}
 8009552:	bf00      	nop
 8009554:	200014b4 	.word	0x200014b4
 8009558:	0801bfe0 	.word	0x0801bfe0
 800955c:	0801c000 	.word	0x0801c000
 8009560:	0801c054 	.word	0x0801c054

08009564 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     *
     * @param [in] frameBuffer      Buffer for frame buffer data, must be non-null.
     * @param [in] doubleBuffer     If non-null, buffer for double buffer data. If null double buffering is disabled.
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage is disabled.
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8009564:	b580      	push	{r7, lr}
 8009566:	b084      	sub	sp, #16
 8009568:	af00      	add	r7, sp, #0
 800956a:	60f8      	str	r0, [r7, #12]
 800956c:	60b9      	str	r1, [r7, #8]
 800956e:	607a      	str	r2, [r7, #4]
 8009570:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8009572:	68bb      	ldr	r3, [r7, #8]
 8009574:	2b00      	cmp	r3, #0
 8009576:	d106      	bne.n	8009586 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 8009578:	4b11      	ldr	r3, [pc, #68]	; (80095c0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800957a:	4a12      	ldr	r2, [pc, #72]	; (80095c4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800957c:	f240 3137 	movw	r1, #823	; 0x337
 8009580:	4811      	ldr	r0, [pc, #68]	; (80095c8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
 8009582:	f011 f9cb 	bl	801a91c <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8009586:	68fb      	ldr	r3, [r7, #12]
 8009588:	68ba      	ldr	r2, [r7, #8]
 800958a:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800958c:	68fb      	ldr	r3, [r7, #12]
 800958e:	687a      	ldr	r2, [r7, #4]
 8009590:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8009592:	68fb      	ldr	r3, [r7, #12]
 8009594:	683a      	ldr	r2, [r7, #0]
 8009596:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8009598:	687b      	ldr	r3, [r7, #4]
 800959a:	2b00      	cmp	r3, #0
 800959c:	bf14      	ite	ne
 800959e:	2301      	movne	r3, #1
 80095a0:	2300      	moveq	r3, #0
 80095a2:	b2da      	uxtb	r2, r3
 80095a4:	4b09      	ldr	r3, [pc, #36]	; (80095cc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
 80095a6:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80095a8:	683b      	ldr	r3, [r7, #0]
 80095aa:	2b00      	cmp	r3, #0
 80095ac:	bf14      	ite	ne
 80095ae:	2301      	movne	r3, #1
 80095b0:	2300      	moveq	r3, #0
 80095b2:	b2da      	uxtb	r2, r3
 80095b4:	4b06      	ldr	r3, [pc, #24]	; (80095d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
 80095b6:	701a      	strb	r2, [r3, #0]
    }
 80095b8:	bf00      	nop
 80095ba:	3710      	adds	r7, #16
 80095bc:	46bd      	mov	sp, r7
 80095be:	bd80      	pop	{r7, pc}
 80095c0:	0801c098 	.word	0x0801c098
 80095c4:	0801c0d0 	.word	0x0801c0d0
 80095c8:	0801c054 	.word	0x0801c054
 80095cc:	200014b6 	.word	0x200014b6
 80095d0:	200014b7 	.word	0x200014b7

080095d4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param ms Number of milliseconds to wait.
     *
     * @see void registerTaskDelayFunction(void (*delayF)(uint16_t))
     */
    virtual void taskDelay(uint16_t ms)
 80095d4:	b580      	push	{r7, lr}
 80095d6:	b082      	sub	sp, #8
 80095d8:	af00      	add	r7, sp, #0
 80095da:	6078      	str	r0, [r7, #4]
 80095dc:	460b      	mov	r3, r1
 80095de:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 80095e0:	687b      	ldr	r3, [r7, #4]
 80095e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80095e4:	2b00      	cmp	r3, #0
 80095e6:	d004      	beq.n	80095f2 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 80095e8:	687b      	ldr	r3, [r7, #4]
 80095ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80095ec:	887a      	ldrh	r2, [r7, #2]
 80095ee:	4610      	mov	r0, r2
 80095f0:	4798      	blx	r3
        }
    }
 80095f2:	bf00      	nop
 80095f4:	3708      	adds	r7, #8
 80095f6:	46bd      	mov	sp, r7
 80095f8:	bd80      	pop	{r7, pc}

080095fa <_ZN8touchgfx3HAL10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 80095fa:	b580      	push	{r7, lr}
 80095fc:	b082      	sub	sp, #8
 80095fe:	af00      	add	r7, sp, #0
 8009600:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 8009602:	687b      	ldr	r3, [r7, #4]
 8009604:	685a      	ldr	r2, [r3, #4]
 8009606:	687b      	ldr	r3, [r7, #4]
 8009608:	685b      	ldr	r3, [r3, #4]
 800960a:	681b      	ldr	r3, [r3, #0]
 800960c:	3318      	adds	r3, #24
 800960e:	681b      	ldr	r3, [r3, #0]
 8009610:	4610      	mov	r0, r2
 8009612:	4798      	blx	r3
 8009614:	4603      	mov	r3, r0
    }
 8009616:	4618      	mov	r0, r3
 8009618:	3708      	adds	r7, #8
 800961a:	46bd      	mov	sp, r7
 800961c:	bd80      	pop	{r7, pc}
	...

08009620 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
     *
     * @brief Perform the actual display orientation change.
     *
     *        Perform the actual display orientation change.
     */
    virtual void performDisplayOrientationChange()
 8009620:	b480      	push	{r7}
 8009622:	b083      	sub	sp, #12
 8009624:	af00      	add	r7, sp, #0
 8009626:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8009628:	687b      	ldr	r3, [r7, #4]
 800962a:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 800962e:	687b      	ldr	r3, [r7, #4]
 8009630:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8009634:	429a      	cmp	r2, r3
 8009636:	d017      	beq.n	8009668 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
 8009638:	4b1a      	ldr	r3, [pc, #104]	; (80096a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800963a:	781b      	ldrb	r3, [r3, #0]
 800963c:	2b00      	cmp	r3, #0
 800963e:	d12a      	bne.n	8009696 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8009640:	4b19      	ldr	r3, [pc, #100]	; (80096a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 8009642:	881a      	ldrh	r2, [r3, #0]
 8009644:	4b19      	ldr	r3, [pc, #100]	; (80096ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 8009646:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8009648:	4b19      	ldr	r3, [pc, #100]	; (80096b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800964a:	881a      	ldrh	r2, [r3, #0]
 800964c:	4b19      	ldr	r3, [pc, #100]	; (80096b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800964e:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 8009650:	4b16      	ldr	r3, [pc, #88]	; (80096ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 8009652:	881a      	ldrh	r2, [r3, #0]
 8009654:	4b16      	ldr	r3, [pc, #88]	; (80096b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 8009656:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 8009658:	4b16      	ldr	r3, [pc, #88]	; (80096b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800965a:	881a      	ldrh	r2, [r3, #0]
 800965c:	4b12      	ldr	r3, [pc, #72]	; (80096a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800965e:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 8009660:	4b10      	ldr	r3, [pc, #64]	; (80096a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 8009662:	2201      	movs	r2, #1
 8009664:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
 8009666:	e016      	b.n	8009696 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
 8009668:	4b0e      	ldr	r3, [pc, #56]	; (80096a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800966a:	781b      	ldrb	r3, [r3, #0]
 800966c:	2b00      	cmp	r3, #0
 800966e:	d012      	beq.n	8009696 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 8009670:	4b0f      	ldr	r3, [pc, #60]	; (80096b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 8009672:	881a      	ldrh	r2, [r3, #0]
 8009674:	4b0d      	ldr	r3, [pc, #52]	; (80096ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 8009676:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 8009678:	4b0b      	ldr	r3, [pc, #44]	; (80096a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800967a:	881a      	ldrh	r2, [r3, #0]
 800967c:	4b0d      	ldr	r3, [pc, #52]	; (80096b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800967e:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 8009680:	4b0c      	ldr	r3, [pc, #48]	; (80096b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 8009682:	881a      	ldrh	r2, [r3, #0]
 8009684:	4b0a      	ldr	r3, [pc, #40]	; (80096b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 8009686:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 8009688:	4b08      	ldr	r3, [pc, #32]	; (80096ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800968a:	881a      	ldrh	r2, [r3, #0]
 800968c:	4b06      	ldr	r3, [pc, #24]	; (80096a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800968e:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 8009690:	4b04      	ldr	r3, [pc, #16]	; (80096a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 8009692:	2200      	movs	r2, #0
 8009694:	701a      	strb	r2, [r3, #0]
    }
 8009696:	bf00      	nop
 8009698:	370c      	adds	r7, #12
 800969a:	46bd      	mov	sp, r7
 800969c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096a0:	4770      	bx	lr
 80096a2:	bf00      	nop
 80096a4:	200014b0 	.word	0x200014b0
 80096a8:	200014ac 	.word	0x200014ac
 80096ac:	200014b2 	.word	0x200014b2
 80096b0:	200014ae 	.word	0x200014ae
 80096b4:	200014b4 	.word	0x200014b4

080096b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 80096b8:	b580      	push	{r7, lr}
 80096ba:	b082      	sub	sp, #8
 80096bc:	af00      	add	r7, sp, #0
 80096be:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	4618      	mov	r0, r3
 80096c4:	f001 fea0 	bl	800b408 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 80096c8:	bf00      	nop
 80096ca:	3708      	adds	r7, #8
 80096cc:	46bd      	mov	sp, r7
 80096ce:	bd80      	pop	{r7, pc}

080096d0 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 80096d0:	b580      	push	{r7, lr}
 80096d2:	b082      	sub	sp, #8
 80096d4:	af00      	add	r7, sp, #0
 80096d6:	6078      	str	r0, [r7, #4]
 80096d8:	4a05      	ldr	r2, [pc, #20]	; (80096f0 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 80096da:	687b      	ldr	r3, [r7, #4]
 80096dc:	601a      	str	r2, [r3, #0]
 80096de:	687b      	ldr	r3, [r7, #4]
 80096e0:	4618      	mov	r0, r3
 80096e2:	f7ff fe43 	bl	800936c <_ZN8touchgfx3HALD1Ev>
 80096e6:	687b      	ldr	r3, [r7, #4]
 80096e8:	4618      	mov	r0, r3
 80096ea:	3708      	adds	r7, #8
 80096ec:	46bd      	mov	sp, r7
 80096ee:	bd80      	pop	{r7, pc}
 80096f0:	0801c754 	.word	0x0801c754

080096f4 <_ZN20TouchGFXGeneratedHALD0Ev>:
 80096f4:	b580      	push	{r7, lr}
 80096f6:	b082      	sub	sp, #8
 80096f8:	af00      	add	r7, sp, #0
 80096fa:	6078      	str	r0, [r7, #4]
 80096fc:	6878      	ldr	r0, [r7, #4]
 80096fe:	f7ff ffe7 	bl	80096d0 <_ZN20TouchGFXGeneratedHALD1Ev>
 8009702:	2178      	movs	r1, #120	; 0x78
 8009704:	6878      	ldr	r0, [r7, #4]
 8009706:	f011 f8da 	bl	801a8be <_ZdlPvj>
 800970a:	687b      	ldr	r3, [r7, #4]
 800970c:	4618      	mov	r0, r3
 800970e:	3708      	adds	r7, #8
 8009710:	46bd      	mov	sp, r7
 8009712:	bd80      	pop	{r7, pc}

08009714 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8009714:	b580      	push	{r7, lr}
 8009716:	b082      	sub	sp, #8
 8009718:	af00      	add	r7, sp, #0
 800971a:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800971c:	687b      	ldr	r3, [r7, #4]
 800971e:	4618      	mov	r0, r3
 8009720:	f7ff ffca 	bl	80096b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 8009724:	bf00      	nop
 8009726:	3708      	adds	r7, #8
 8009728:	46bd      	mov	sp, r7
 800972a:	bd80      	pop	{r7, pc}

0800972c <_ZN11TouchGFXHAL10initializeEv>:
#include "stm32f4xx.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800972c:	b580      	push	{r7, lr}
 800972e:	b082      	sub	sp, #8
 8009730:	af00      	add	r7, sp, #0
 8009732:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8009734:	687b      	ldr	r3, [r7, #4]
 8009736:	4618      	mov	r0, r3
 8009738:	f001 fade 	bl	800acf8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800973c:	bf00      	nop
 800973e:	3708      	adds	r7, #8
 8009740:	46bd      	mov	sp, r7
 8009742:	bd80      	pop	{r7, pc}

08009744 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 8009744:	b580      	push	{r7, lr}
 8009746:	b082      	sub	sp, #8
 8009748:	af00      	add	r7, sp, #0
 800974a:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800974c:	687b      	ldr	r3, [r7, #4]
 800974e:	4618      	mov	r0, r3
 8009750:	f001 fb5e 	bl	800ae10 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 8009754:	4603      	mov	r3, r0
}
 8009756:	4618      	mov	r0, r3
 8009758:	3708      	adds	r7, #8
 800975a:	46bd      	mov	sp, r7
 800975c:	bd80      	pop	{r7, pc}

0800975e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800975e:	b580      	push	{r7, lr}
 8009760:	b082      	sub	sp, #8
 8009762:	af00      	add	r7, sp, #0
 8009764:	6078      	str	r0, [r7, #4]
 8009766:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8009768:	687b      	ldr	r3, [r7, #4]
 800976a:	6839      	ldr	r1, [r7, #0]
 800976c:	4618      	mov	r0, r3
 800976e:	f001 fb5d 	bl	800ae2c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 8009772:	bf00      	nop
 8009774:	3708      	adds	r7, #8
 8009776:	46bd      	mov	sp, r7
 8009778:	bd80      	pop	{r7, pc}

0800977a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800977a:	b580      	push	{r7, lr}
 800977c:	b082      	sub	sp, #8
 800977e:	af00      	add	r7, sp, #0
 8009780:	6078      	str	r0, [r7, #4]
 8009782:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	6839      	ldr	r1, [r7, #0]
 8009788:	4618      	mov	r0, r3
 800978a:	f001 fb65 	bl	800ae58 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800978e:	bf00      	nop
 8009790:	3708      	adds	r7, #8
 8009792:	46bd      	mov	sp, r7
 8009794:	bd80      	pop	{r7, pc}

08009796 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 8009796:	b580      	push	{r7, lr}
 8009798:	b082      	sub	sp, #8
 800979a:	af00      	add	r7, sp, #0
 800979c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800979e:	687b      	ldr	r3, [r7, #4]
 80097a0:	4618      	mov	r0, r3
 80097a2:	f001 fadb 	bl	800ad5c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 80097a6:	bf00      	nop
 80097a8:	3708      	adds	r7, #8
 80097aa:	46bd      	mov	sp, r7
 80097ac:	bd80      	pop	{r7, pc}

080097ae <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 80097ae:	b580      	push	{r7, lr}
 80097b0:	b082      	sub	sp, #8
 80097b2:	af00      	add	r7, sp, #0
 80097b4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80097b6:	687b      	ldr	r3, [r7, #4]
 80097b8:	4618      	mov	r0, r3
 80097ba:	f001 fadf 	bl	800ad7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 80097be:	bf00      	nop
 80097c0:	3708      	adds	r7, #8
 80097c2:	46bd      	mov	sp, r7
 80097c4:	bd80      	pop	{r7, pc}

080097c6 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 80097c6:	b580      	push	{r7, lr}
 80097c8:	b082      	sub	sp, #8
 80097ca:	af00      	add	r7, sp, #0
 80097cc:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80097ce:	687b      	ldr	r3, [r7, #4]
 80097d0:	4618      	mov	r0, r3
 80097d2:	f001 fae1 	bl	800ad98 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 80097d6:	bf00      	nop
 80097d8:	3708      	adds	r7, #8
 80097da:	46bd      	mov	sp, r7
 80097dc:	bd80      	pop	{r7, pc}

080097de <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 80097de:	b580      	push	{r7, lr}
 80097e0:	b082      	sub	sp, #8
 80097e2:	af00      	add	r7, sp, #0
 80097e4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80097e6:	687b      	ldr	r3, [r7, #4]
 80097e8:	4618      	mov	r0, r3
 80097ea:	f001 fae3 	bl	800adb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 80097ee:	bf00      	nop
 80097f0:	3708      	adds	r7, #8
 80097f2:	46bd      	mov	sp, r7
 80097f4:	bd80      	pop	{r7, pc}
	...

080097f8 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80097f8:	b580      	push	{r7, lr}
 80097fa:	b082      	sub	sp, #8
 80097fc:	af00      	add	r7, sp, #0
 80097fe:	6078      	str	r0, [r7, #4]
 8009800:	4a05      	ldr	r2, [pc, #20]	; (8009818 <_ZN11TouchGFXHALD1Ev+0x20>)
 8009802:	687b      	ldr	r3, [r7, #4]
 8009804:	601a      	str	r2, [r3, #0]
 8009806:	687b      	ldr	r3, [r7, #4]
 8009808:	4618      	mov	r0, r3
 800980a:	f7ff ff61 	bl	80096d0 <_ZN20TouchGFXGeneratedHALD1Ev>
 800980e:	687b      	ldr	r3, [r7, #4]
 8009810:	4618      	mov	r0, r3
 8009812:	3708      	adds	r7, #8
 8009814:	46bd      	mov	sp, r7
 8009816:	bd80      	pop	{r7, pc}
 8009818:	0801c558 	.word	0x0801c558

0800981c <_ZN11TouchGFXHALD0Ev>:
 800981c:	b580      	push	{r7, lr}
 800981e:	b082      	sub	sp, #8
 8009820:	af00      	add	r7, sp, #0
 8009822:	6078      	str	r0, [r7, #4]
 8009824:	6878      	ldr	r0, [r7, #4]
 8009826:	f7ff ffe7 	bl	80097f8 <_ZN11TouchGFXHALD1Ev>
 800982a:	2178      	movs	r1, #120	; 0x78
 800982c:	6878      	ldr	r0, [r7, #4]
 800982e:	f011 f846 	bl	801a8be <_ZdlPvj>
 8009832:	687b      	ldr	r3, [r7, #4]
 8009834:	4618      	mov	r0, r3
 8009836:	3708      	adds	r7, #8
 8009838:	46bd      	mov	sp, r7
 800983a:	bd80      	pop	{r7, pc}

0800983c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800983c:	b480      	push	{r7}
 800983e:	af00      	add	r7, sp, #0
  fb_sem = 0;
 8009840:	4b05      	ldr	r3, [pc, #20]	; (8009858 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 8009842:	2200      	movs	r2, #0
 8009844:	601a      	str	r2, [r3, #0]
  vsync_sem = 0;
 8009846:	4b05      	ldr	r3, [pc, #20]	; (800985c <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 8009848:	2200      	movs	r2, #0
 800984a:	601a      	str	r2, [r3, #0]
}
 800984c:	bf00      	nop
 800984e:	46bd      	mov	sp, r7
 8009850:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009854:	4770      	bx	lr
 8009856:	bf00      	nop
 8009858:	20000544 	.word	0x20000544
 800985c:	20000548 	.word	0x20000548

08009860 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 8009860:	b480      	push	{r7}
 8009862:	af00      	add	r7, sp, #0
  while(fb_sem);
 8009864:	4b08      	ldr	r3, [pc, #32]	; (8009888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8009866:	681b      	ldr	r3, [r3, #0]
 8009868:	2b00      	cmp	r3, #0
 800986a:	bf14      	ite	ne
 800986c:	2301      	movne	r3, #1
 800986e:	2300      	moveq	r3, #0
 8009870:	b2db      	uxtb	r3, r3
 8009872:	2b00      	cmp	r3, #0
 8009874:	d000      	beq.n	8009878 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>
 8009876:	e7f5      	b.n	8009864 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x4>
  fb_sem = 1;
 8009878:	4b03      	ldr	r3, [pc, #12]	; (8009888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800987a:	2201      	movs	r2, #1
 800987c:	601a      	str	r2, [r3, #0]
}
 800987e:	bf00      	nop
 8009880:	46bd      	mov	sp, r7
 8009882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009886:	4770      	bx	lr
 8009888:	20000544 	.word	0x20000544

0800988c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800988c:	b480      	push	{r7}
 800988e:	af00      	add	r7, sp, #0
  fb_sem = 0;
 8009890:	4b03      	ldr	r3, [pc, #12]	; (80098a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 8009892:	2200      	movs	r2, #0
 8009894:	601a      	str	r2, [r3, #0]
}
 8009896:	bf00      	nop
 8009898:	46bd      	mov	sp, r7
 800989a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800989e:	4770      	bx	lr
 80098a0:	20000544 	.word	0x20000544

080098a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80098a4:	b480      	push	{r7}
 80098a6:	af00      	add	r7, sp, #0
  fb_sem = 1;
 80098a8:	4b03      	ldr	r3, [pc, #12]	; (80098b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 80098aa:	2201      	movs	r2, #1
 80098ac:	601a      	str	r2, [r3, #0]
}
 80098ae:	bf00      	nop
 80098b0:	46bd      	mov	sp, r7
 80098b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098b6:	4770      	bx	lr
 80098b8:	20000544 	.word	0x20000544

080098bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80098bc:	b480      	push	{r7}
 80098be:	af00      	add	r7, sp, #0
  fb_sem = 0;
 80098c0:	4b03      	ldr	r3, [pc, #12]	; (80098d0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 80098c2:	2200      	movs	r2, #0
 80098c4:	601a      	str	r2, [r3, #0]
}
 80098c6:	bf00      	nop
 80098c8:	46bd      	mov	sp, r7
 80098ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ce:	4770      	bx	lr
 80098d0:	20000544 	.word	0x20000544

080098d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 80098d4:	b480      	push	{r7}
 80098d6:	af00      	add	r7, sp, #0
  vsync_sem = 1;
 80098d8:	4b03      	ldr	r3, [pc, #12]	; (80098e8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80098da:	2201      	movs	r2, #1
 80098dc:	601a      	str	r2, [r3, #0]
}
 80098de:	bf00      	nop
 80098e0:	46bd      	mov	sp, r7
 80098e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098e6:	4770      	bx	lr
 80098e8:	20000548 	.word	0x20000548

080098ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 80098ec:	b580      	push	{r7, lr}
 80098ee:	af00      	add	r7, sp, #0
  if(vsync_sem)
 80098f0:	4b0a      	ldr	r3, [pc, #40]	; (800991c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 80098f2:	681b      	ldr	r3, [r3, #0]
 80098f4:	2b00      	cmp	r3, #0
 80098f6:	bf14      	ite	ne
 80098f8:	2301      	movne	r3, #1
 80098fa:	2300      	moveq	r3, #0
 80098fc:	b2db      	uxtb	r3, r3
 80098fe:	2b00      	cmp	r3, #0
 8009900:	d00a      	beq.n	8009918 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
  {
    vsync_sem = 0;
 8009902:	4b06      	ldr	r3, [pc, #24]	; (800991c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8009904:	2200      	movs	r2, #0
 8009906:	601a      	str	r2, [r3, #0]
    HAL::getInstance()->backPorchExited();
 8009908:	f7fe f9c2 	bl	8007c90 <_ZN8touchgfx3HAL11getInstanceEv>
 800990c:	4603      	mov	r3, r0
 800990e:	681a      	ldr	r2, [r3, #0]
 8009910:	3258      	adds	r2, #88	; 0x58
 8009912:	6812      	ldr	r2, [r2, #0]
 8009914:	4618      	mov	r0, r3
 8009916:	4790      	blx	r2
  }
}
 8009918:	bf00      	nop
 800991a:	bd80      	pop	{r7, pc}
 800991c:	20000548 	.word	0x20000548

08009920 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 8009920:	b580      	push	{r7, lr}
 8009922:	b082      	sub	sp, #8
 8009924:	af00      	add	r7, sp, #0
 8009926:	4603      	mov	r3, r0
 8009928:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 800992a:	88fb      	ldrh	r3, [r7, #6]
 800992c:	4618      	mov	r0, r3
 800992e:	f7f8 fbff 	bl	8002130 <HAL_Delay>
}
 8009932:	bf00      	nop
 8009934:	3708      	adds	r7, #8
 8009936:	46bd      	mov	sp, r7
 8009938:	bd80      	pop	{r7, pc}
	...

0800993c <__NVIC_EnableIRQ>:
{
 800993c:	b480      	push	{r7}
 800993e:	b083      	sub	sp, #12
 8009940:	af00      	add	r7, sp, #0
 8009942:	4603      	mov	r3, r0
 8009944:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8009946:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800994a:	2b00      	cmp	r3, #0
 800994c:	db0b      	blt.n	8009966 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800994e:	79fb      	ldrb	r3, [r7, #7]
 8009950:	f003 021f 	and.w	r2, r3, #31
 8009954:	4907      	ldr	r1, [pc, #28]	; (8009974 <__NVIC_EnableIRQ+0x38>)
 8009956:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800995a:	095b      	lsrs	r3, r3, #5
 800995c:	2001      	movs	r0, #1
 800995e:	fa00 f202 	lsl.w	r2, r0, r2
 8009962:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8009966:	bf00      	nop
 8009968:	370c      	adds	r7, #12
 800996a:	46bd      	mov	sp, r7
 800996c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009970:	4770      	bx	lr
 8009972:	bf00      	nop
 8009974:	e000e100 	.word	0xe000e100

08009978 <__NVIC_DisableIRQ>:
{
 8009978:	b480      	push	{r7}
 800997a:	b083      	sub	sp, #12
 800997c:	af00      	add	r7, sp, #0
 800997e:	4603      	mov	r3, r0
 8009980:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8009982:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009986:	2b00      	cmp	r3, #0
 8009988:	db12      	blt.n	80099b0 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800998a:	79fb      	ldrb	r3, [r7, #7]
 800998c:	f003 021f 	and.w	r2, r3, #31
 8009990:	490a      	ldr	r1, [pc, #40]	; (80099bc <__NVIC_DisableIRQ+0x44>)
 8009992:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009996:	095b      	lsrs	r3, r3, #5
 8009998:	2001      	movs	r0, #1
 800999a:	fa00 f202 	lsl.w	r2, r0, r2
 800999e:	3320      	adds	r3, #32
 80099a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80099a4:	f3bf 8f4f 	dsb	sy
}
 80099a8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80099aa:	f3bf 8f6f 	isb	sy
}
 80099ae:	bf00      	nop
}
 80099b0:	bf00      	nop
 80099b2:	370c      	adds	r7, #12
 80099b4:	46bd      	mov	sp, r7
 80099b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099ba:	4770      	bx	lr
 80099bc:	e000e100 	.word	0xe000e100

080099c0 <_ZN8touchgfx9colortypeC1Ev>:
    colortype() : color(0) {}
 80099c0:	b480      	push	{r7}
 80099c2:	b083      	sub	sp, #12
 80099c4:	af00      	add	r7, sp, #0
 80099c6:	6078      	str	r0, [r7, #4]
 80099c8:	687b      	ldr	r3, [r7, #4]
 80099ca:	2200      	movs	r2, #0
 80099cc:	601a      	str	r2, [r3, #0]
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	4618      	mov	r0, r3
 80099d2:	370c      	adds	r7, #12
 80099d4:	46bd      	mov	sp, r7
 80099d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099da:	4770      	bx	lr

080099dc <_ZNK8touchgfx9colortype10getColor32Ev>:
    inline uint32_t getColor32() const
 80099dc:	b480      	push	{r7}
 80099de:	b083      	sub	sp, #12
 80099e0:	af00      	add	r7, sp, #0
 80099e2:	6078      	str	r0, [r7, #4]
        return color;
 80099e4:	687b      	ldr	r3, [r7, #4]
 80099e6:	681b      	ldr	r3, [r3, #0]
    }
 80099e8:	4618      	mov	r0, r3
 80099ea:	370c      	adds	r7, #12
 80099ec:	46bd      	mov	sp, r7
 80099ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099f2:	4770      	bx	lr

080099f4 <_ZNK8touchgfx9colortypecvtEv>:
    operator uint16_t() const
 80099f4:	b480      	push	{r7}
 80099f6:	b083      	sub	sp, #12
 80099f8:	af00      	add	r7, sp, #0
 80099fa:	6078      	str	r0, [r7, #4]
        return (uint16_t)color;
 80099fc:	687b      	ldr	r3, [r7, #4]
 80099fe:	681b      	ldr	r3, [r3, #0]
 8009a00:	b29b      	uxth	r3, r3
    }
 8009a02:	4618      	mov	r0, r3
 8009a04:	370c      	adds	r7, #12
 8009a06:	46bd      	mov	sp, r7
 8009a08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a0c:	4770      	bx	lr
	...

08009a10 <_ZN8touchgfx9DMA_QueueD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Queue()
 8009a10:	b480      	push	{r7}
 8009a12:	b083      	sub	sp, #12
 8009a14:	af00      	add	r7, sp, #0
 8009a16:	6078      	str	r0, [r7, #4]
    {
 8009a18:	4a04      	ldr	r2, [pc, #16]	; (8009a2c <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 8009a1a:	687b      	ldr	r3, [r7, #4]
 8009a1c:	601a      	str	r2, [r3, #0]
    }
 8009a1e:	687b      	ldr	r3, [r7, #4]
 8009a20:	4618      	mov	r0, r3
 8009a22:	370c      	adds	r7, #12
 8009a24:	46bd      	mov	sp, r7
 8009a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a2a:	4770      	bx	lr
 8009a2c:	0801c65c 	.word	0x0801c65c

08009a30 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 8009a30:	b580      	push	{r7, lr}
 8009a32:	b082      	sub	sp, #8
 8009a34:	af00      	add	r7, sp, #0
 8009a36:	6078      	str	r0, [r7, #4]
    }
 8009a38:	6878      	ldr	r0, [r7, #4]
 8009a3a:	f7ff ffe9 	bl	8009a10 <_ZN8touchgfx9DMA_QueueD1Ev>
 8009a3e:	2104      	movs	r1, #4
 8009a40:	6878      	ldr	r0, [r7, #4]
 8009a42:	f010 ff3c 	bl	801a8be <_ZdlPvj>
 8009a46:	687b      	ldr	r3, [r7, #4]
 8009a48:	4618      	mov	r0, r3
 8009a4a:	3708      	adds	r7, #8
 8009a4c:	46bd      	mov	sp, r7
 8009a4e:	bd80      	pop	{r7, pc}

08009a50 <_ZN8touchgfx13DMA_Interface5flushEv>:
     *
     * @brief This function blocks until all DMA transfers in the queue have been completed.
     *
     *        This function blocks until all DMA transfers in the queue have been completed.
     */
    virtual void flush()
 8009a50:	b580      	push	{r7, lr}
 8009a52:	b082      	sub	sp, #8
 8009a54:	af00      	add	r7, sp, #0
 8009a56:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 8009a58:	687b      	ldr	r3, [r7, #4]
 8009a5a:	681b      	ldr	r3, [r3, #0]
 8009a5c:	3344      	adds	r3, #68	; 0x44
 8009a5e:	681b      	ldr	r3, [r3, #0]
 8009a60:	6878      	ldr	r0, [r7, #4]
 8009a62:	4798      	blx	r3
    }
 8009a64:	bf00      	nop
 8009a66:	3708      	adds	r7, #8
 8009a68:	46bd      	mov	sp, r7
 8009a6a:	bd80      	pop	{r7, pc}

08009a6c <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
 8009a6c:	b480      	push	{r7}
 8009a6e:	b083      	sub	sp, #12
 8009a70:	af00      	add	r7, sp, #0
 8009a72:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 8009a74:	2300      	movs	r3, #0
    }
 8009a76:	4618      	mov	r0, r3
 8009a78:	370c      	adds	r7, #12
 8009a7a:	46bd      	mov	sp, r7
 8009a7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a80:	4770      	bx	lr
	...

08009a84 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Interface()
 8009a84:	b480      	push	{r7}
 8009a86:	b083      	sub	sp, #12
 8009a88:	af00      	add	r7, sp, #0
 8009a8a:	6078      	str	r0, [r7, #4]
    {
 8009a8c:	4a04      	ldr	r2, [pc, #16]	; (8009aa0 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 8009a8e:	687b      	ldr	r3, [r7, #4]
 8009a90:	601a      	str	r2, [r3, #0]
    }
 8009a92:	687b      	ldr	r3, [r7, #4]
 8009a94:	4618      	mov	r0, r3
 8009a96:	370c      	adds	r7, #12
 8009a98:	46bd      	mov	sp, r7
 8009a9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a9e:	4770      	bx	lr
 8009aa0:	0801d1ac 	.word	0x0801d1ac

08009aa4 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 8009aa4:	b580      	push	{r7, lr}
 8009aa6:	b082      	sub	sp, #8
 8009aa8:	af00      	add	r7, sp, #0
 8009aaa:	6078      	str	r0, [r7, #4]
    }
 8009aac:	6878      	ldr	r0, [r7, #4]
 8009aae:	f7ff ffe9 	bl	8009a84 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8009ab2:	210c      	movs	r1, #12
 8009ab4:	6878      	ldr	r0, [r7, #4]
 8009ab6:	f010 ff02 	bl	801a8be <_ZdlPvj>
 8009aba:	687b      	ldr	r3, [r7, #4]
 8009abc:	4618      	mov	r0, r3
 8009abe:	3708      	adds	r7, #8
 8009ac0:	46bd      	mov	sp, r7
 8009ac2:	bd80      	pop	{r7, pc}

08009ac4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
     *
     *        Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 8009ac4:	b480      	push	{r7}
 8009ac6:	b083      	sub	sp, #12
 8009ac8:	af00      	add	r7, sp, #0
 8009aca:	6078      	str	r0, [r7, #4]
 8009acc:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8009ace:	4a09      	ldr	r2, [pc, #36]	; (8009af4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 8009ad0:	687b      	ldr	r3, [r7, #4]
 8009ad2:	601a      	str	r2, [r3, #0]
 8009ad4:	687b      	ldr	r3, [r7, #4]
 8009ad6:	683a      	ldr	r2, [r7, #0]
 8009ad8:	605a      	str	r2, [r3, #4]
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	2200      	movs	r2, #0
 8009ade:	721a      	strb	r2, [r3, #8]
 8009ae0:	687b      	ldr	r3, [r7, #4]
 8009ae2:	2200      	movs	r2, #0
 8009ae4:	725a      	strb	r2, [r3, #9]
    {
    }
 8009ae6:	687b      	ldr	r3, [r7, #4]
 8009ae8:	4618      	mov	r0, r3
 8009aea:	370c      	adds	r7, #12
 8009aec:	46bd      	mov	sp, r7
 8009aee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009af2:	4770      	bx	lr
 8009af4:	0801d1ac 	.word	0x0801d1ac

08009af8 <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 8009af8:	b580      	push	{r7, lr}
 8009afa:	b082      	sub	sp, #8
 8009afc:	af00      	add	r7, sp, #0
 8009afe:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 8009b00:	687b      	ldr	r3, [r7, #4]
 8009b02:	685a      	ldr	r2, [r3, #4]
 8009b04:	687b      	ldr	r3, [r7, #4]
 8009b06:	685b      	ldr	r3, [r3, #4]
 8009b08:	681b      	ldr	r3, [r3, #0]
 8009b0a:	3314      	adds	r3, #20
 8009b0c:	681b      	ldr	r3, [r3, #0]
 8009b0e:	4610      	mov	r0, r2
 8009b10:	4798      	blx	r3
    }
 8009b12:	bf00      	nop
 8009b14:	3708      	adds	r7, #8
 8009b16:	46bd      	mov	sp, r7
 8009b18:	bd80      	pop	{r7, pc}

08009b1a <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 8009b1a:	b580      	push	{r7, lr}
 8009b1c:	b082      	sub	sp, #8
 8009b1e:	af00      	add	r7, sp, #0
 8009b20:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 8009b22:	687a      	ldr	r2, [r7, #4]
 8009b24:	687b      	ldr	r3, [r7, #4]
 8009b26:	681b      	ldr	r3, [r3, #0]
 8009b28:	3328      	adds	r3, #40	; 0x28
 8009b2a:	681b      	ldr	r3, [r3, #0]
 8009b2c:	4610      	mov	r0, r2
 8009b2e:	4798      	blx	r3
    }
 8009b30:	bf00      	nop
 8009b32:	3708      	adds	r7, #8
 8009b34:	46bd      	mov	sp, r7
 8009b36:	bd80      	pop	{r7, pc}

08009b38 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>:
/* USER CODE END user includes */

extern DMA2D_HandleTypeDef hdma2d;

static HAL_StatusTypeDef HAL_DMA2D_SetMode(DMA2D_HandleTypeDef *hdma2d, uint32_t mode, uint32_t color, uint32_t offset)
{
 8009b38:	b480      	push	{r7}
 8009b3a:	b085      	sub	sp, #20
 8009b3c:	af00      	add	r7, sp, #0
 8009b3e:	60f8      	str	r0, [r7, #12]
 8009b40:	60b9      	str	r1, [r7, #8]
 8009b42:	607a      	str	r2, [r7, #4]
 8009b44:	603b      	str	r3, [r7, #0]
    assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));

    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8009b46:	68fb      	ldr	r3, [r7, #12]
 8009b48:	681b      	ldr	r3, [r3, #0]
 8009b4a:	681b      	ldr	r3, [r3, #0]
 8009b4c:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8009b50:	68fb      	ldr	r3, [r7, #12]
 8009b52:	681b      	ldr	r3, [r3, #0]
 8009b54:	68ba      	ldr	r2, [r7, #8]
 8009b56:	430a      	orrs	r2, r1
 8009b58:	601a      	str	r2, [r3, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8009b5a:	68fb      	ldr	r3, [r7, #12]
 8009b5c:	681b      	ldr	r3, [r3, #0]
 8009b5e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009b60:	f023 0107 	bic.w	r1, r3, #7
 8009b64:	68fb      	ldr	r3, [r7, #12]
 8009b66:	681b      	ldr	r3, [r3, #0]
 8009b68:	687a      	ldr	r2, [r7, #4]
 8009b6a:	430a      	orrs	r2, r1
 8009b6c:	635a      	str	r2, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8009b6e:	68fb      	ldr	r3, [r7, #12]
 8009b70:	681b      	ldr	r3, [r3, #0]
 8009b72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b74:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8009b78:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8009b7c:	68fa      	ldr	r2, [r7, #12]
 8009b7e:	6812      	ldr	r2, [r2, #0]
 8009b80:	6839      	ldr	r1, [r7, #0]
 8009b82:	430b      	orrs	r3, r1
 8009b84:	6413      	str	r3, [r2, #64]	; 0x40

    return HAL_OK;
 8009b86:	2300      	movs	r3, #0
}
 8009b88:	4618      	mov	r0, r3
 8009b8a:	3714      	adds	r7, #20
 8009b8c:	46bd      	mov	sp, r7
 8009b8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b92:	4770      	bx	lr

08009b94 <DMA2D_XferCpltCallback>:

extern "C" {

static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
{
 8009b94:	b580      	push	{r7, lr}
 8009b96:	b082      	sub	sp, #8
 8009b98:	af00      	add	r7, sp, #0
 8009b9a:	6078      	str	r0, [r7, #4]
    touchgfx::HAL::getInstance()->signalDMAInterrupt();
 8009b9c:	f7fe f878 	bl	8007c90 <_ZN8touchgfx3HAL11getInstanceEv>
 8009ba0:	4603      	mov	r3, r0
 8009ba2:	4618      	mov	r0, r3
 8009ba4:	f7ff ffa8 	bl	8009af8 <_ZN8touchgfx3HAL18signalDMAInterruptEv>
}
 8009ba8:	bf00      	nop
 8009baa:	3708      	adds	r7, #8
 8009bac:	46bd      	mov	sp, r7
 8009bae:	bd80      	pop	{r7, pc}

08009bb0 <DMA2D_XferErrorCallback>:

static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
{
 8009bb0:	b580      	push	{r7, lr}
 8009bb2:	b082      	sub	sp, #8
 8009bb4:	af00      	add	r7, sp, #0
 8009bb6:	6078      	str	r0, [r7, #4]
    assert(0);
 8009bb8:	4b02      	ldr	r3, [pc, #8]	; (8009bc4 <DMA2D_XferErrorCallback+0x14>)
 8009bba:	4a03      	ldr	r2, [pc, #12]	; (8009bc8 <DMA2D_XferErrorCallback+0x18>)
 8009bbc:	2136      	movs	r1, #54	; 0x36
 8009bbe:	4803      	ldr	r0, [pc, #12]	; (8009bcc <DMA2D_XferErrorCallback+0x1c>)
 8009bc0:	f010 feac 	bl	801a91c <__assert_func>
 8009bc4:	0801c120 	.word	0x0801c120
 8009bc8:	0801c124 	.word	0x0801c124
 8009bcc:	0801c158 	.word	0x0801c158

08009bd0 <_ZN8touchgfx6BlitOpC1Ev>:
 *        (frame buffer) using DMA.
 *
 *        BlitOp instances carry the required information for performing operations on the LCD
 *        (frame buffer) using DMA.
 */
struct BlitOp
 8009bd0:	b580      	push	{r7, lr}
 8009bd2:	b082      	sub	sp, #8
 8009bd4:	af00      	add	r7, sp, #0
 8009bd6:	6078      	str	r0, [r7, #4]
 8009bd8:	687b      	ldr	r3, [r7, #4]
 8009bda:	3318      	adds	r3, #24
 8009bdc:	4618      	mov	r0, r3
 8009bde:	f7ff feef 	bl	80099c0 <_ZN8touchgfx9colortypeC1Ev>
 8009be2:	687b      	ldr	r3, [r7, #4]
 8009be4:	4618      	mov	r0, r3
 8009be6:	3708      	adds	r7, #8
 8009be8:	46bd      	mov	sp, r7
 8009bea:	bd80      	pop	{r7, pc}

08009bec <_ZN10STM32F4DMAC1Ev>:
}

}

STM32F4DMA::STM32F4DMA()
 8009bec:	b5b0      	push	{r4, r5, r7, lr}
 8009bee:	b082      	sub	sp, #8
 8009bf0:	af00      	add	r7, sp, #0
 8009bf2:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8009bf4:	687a      	ldr	r2, [r7, #4]
 8009bf6:	687b      	ldr	r3, [r7, #4]
 8009bf8:	330c      	adds	r3, #12
 8009bfa:	4619      	mov	r1, r3
 8009bfc:	4610      	mov	r0, r2
 8009bfe:	f7ff ff61 	bl	8009ac4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 8009c02:	4a0e      	ldr	r2, [pc, #56]	; (8009c3c <_ZN10STM32F4DMAC1Ev+0x50>)
 8009c04:	687b      	ldr	r3, [r7, #4]
 8009c06:	601a      	str	r2, [r3, #0]
 8009c08:	687b      	ldr	r3, [r7, #4]
 8009c0a:	f103 000c 	add.w	r0, r3, #12
 8009c0e:	687b      	ldr	r3, [r7, #4]
 8009c10:	3320      	adds	r3, #32
 8009c12:	2260      	movs	r2, #96	; 0x60
 8009c14:	4619      	mov	r1, r3
 8009c16:	f002 fa9b 	bl	800c150 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8009c1a:	687b      	ldr	r3, [r7, #4]
 8009c1c:	3320      	adds	r3, #32
 8009c1e:	245f      	movs	r4, #95	; 0x5f
 8009c20:	461d      	mov	r5, r3
 8009c22:	2c00      	cmp	r4, #0
 8009c24:	db05      	blt.n	8009c32 <_ZN10STM32F4DMAC1Ev+0x46>
 8009c26:	4628      	mov	r0, r5
 8009c28:	f7ff ffd2 	bl	8009bd0 <_ZN8touchgfx6BlitOpC1Ev>
 8009c2c:	3520      	adds	r5, #32
 8009c2e:	3c01      	subs	r4, #1
 8009c30:	e7f7      	b.n	8009c22 <_ZN10STM32F4DMAC1Ev+0x36>
{}
 8009c32:	687b      	ldr	r3, [r7, #4]
 8009c34:	4618      	mov	r0, r3
 8009c36:	3708      	adds	r7, #8
 8009c38:	46bd      	mov	sp, r7
 8009c3a:	bdb0      	pop	{r4, r5, r7, pc}
 8009c3c:	0801c60c 	.word	0x0801c60c

08009c40 <_ZN10STM32F4DMAD1Ev>:

STM32F4DMA::~STM32F4DMA()
 8009c40:	b580      	push	{r7, lr}
 8009c42:	b082      	sub	sp, #8
 8009c44:	af00      	add	r7, sp, #0
 8009c46:	6078      	str	r0, [r7, #4]
 8009c48:	4a0b      	ldr	r2, [pc, #44]	; (8009c78 <_ZN10STM32F4DMAD1Ev+0x38>)
 8009c4a:	687b      	ldr	r3, [r7, #4]
 8009c4c:	601a      	str	r2, [r3, #0]
{
    HAL_DMA2D_DeInit(&hdma2d);
 8009c4e:	480b      	ldr	r0, [pc, #44]	; (8009c7c <_ZN10STM32F4DMAD1Ev+0x3c>)
 8009c50:	f7f8 ffd6 	bl	8002c00 <HAL_DMA2D_DeInit>
    NVIC_DisableIRQ(DMA2D_IRQn);
 8009c54:	205a      	movs	r0, #90	; 0x5a
 8009c56:	f7ff fe8f 	bl	8009978 <__NVIC_DisableIRQ>
STM32F4DMA::~STM32F4DMA()
 8009c5a:	687b      	ldr	r3, [r7, #4]
 8009c5c:	330c      	adds	r3, #12
 8009c5e:	4618      	mov	r0, r3
 8009c60:	f000 faa8 	bl	800a1b4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8009c64:	687b      	ldr	r3, [r7, #4]
 8009c66:	4618      	mov	r0, r3
 8009c68:	f7ff ff0c 	bl	8009a84 <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 8009c6c:	687b      	ldr	r3, [r7, #4]
 8009c6e:	4618      	mov	r0, r3
 8009c70:	3708      	adds	r7, #8
 8009c72:	46bd      	mov	sp, r7
 8009c74:	bd80      	pop	{r7, pc}
 8009c76:	bf00      	nop
 8009c78:	0801c60c 	.word	0x0801c60c
 8009c7c:	20000170 	.word	0x20000170

08009c80 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8009c80:	b580      	push	{r7, lr}
 8009c82:	b082      	sub	sp, #8
 8009c84:	af00      	add	r7, sp, #0
 8009c86:	6078      	str	r0, [r7, #4]
}
 8009c88:	6878      	ldr	r0, [r7, #4]
 8009c8a:	f7ff ffd9 	bl	8009c40 <_ZN10STM32F4DMAD1Ev>
 8009c8e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8009c92:	6878      	ldr	r0, [r7, #4]
 8009c94:	f010 fe13 	bl	801a8be <_ZdlPvj>
 8009c98:	687b      	ldr	r3, [r7, #4]
 8009c9a:	4618      	mov	r0, r3
 8009c9c:	3708      	adds	r7, #8
 8009c9e:	46bd      	mov	sp, r7
 8009ca0:	bd80      	pop	{r7, pc}
	...

08009ca4 <_ZN10STM32F4DMA10initializeEv>:

void STM32F4DMA::initialize()
{
 8009ca4:	b580      	push	{r7, lr}
 8009ca6:	b082      	sub	sp, #8
 8009ca8:	af00      	add	r7, sp, #0
 8009caa:	6078      	str	r0, [r7, #4]
    hdma2d.Instance = DMA2D;
 8009cac:	4b09      	ldr	r3, [pc, #36]	; (8009cd4 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8009cae:	4a0a      	ldr	r2, [pc, #40]	; (8009cd8 <_ZN10STM32F4DMA10initializeEv+0x34>)
 8009cb0:	601a      	str	r2, [r3, #0]
    HAL_DMA2D_Init(&hdma2d);
 8009cb2:	4808      	ldr	r0, [pc, #32]	; (8009cd4 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8009cb4:	f7f8 ff5a 	bl	8002b6c <HAL_DMA2D_Init>

    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8009cb8:	4b06      	ldr	r3, [pc, #24]	; (8009cd4 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8009cba:	4a08      	ldr	r2, [pc, #32]	; (8009cdc <_ZN10STM32F4DMA10initializeEv+0x38>)
 8009cbc:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8009cbe:	4b05      	ldr	r3, [pc, #20]	; (8009cd4 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8009cc0:	4a07      	ldr	r2, [pc, #28]	; (8009ce0 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 8009cc2:	615a      	str	r2, [r3, #20]

    NVIC_EnableIRQ(DMA2D_IRQn);
 8009cc4:	205a      	movs	r0, #90	; 0x5a
 8009cc6:	f7ff fe39 	bl	800993c <__NVIC_EnableIRQ>
}
 8009cca:	bf00      	nop
 8009ccc:	3708      	adds	r7, #8
 8009cce:	46bd      	mov	sp, r7
 8009cd0:	bd80      	pop	{r7, pc}
 8009cd2:	bf00      	nop
 8009cd4:	20000170 	.word	0x20000170
 8009cd8:	4002b000 	.word	0x4002b000
 8009cdc:	08009b95 	.word	0x08009b95
 8009ce0:	08009bb1 	.word	0x08009bb1

08009ce4 <_ZN10STM32F4DMA11getBlitCapsEv>:

BlitOperations STM32F4DMA::getBlitCaps()
{
 8009ce4:	b480      	push	{r7}
 8009ce6:	b083      	sub	sp, #12
 8009ce8:	af00      	add	r7, sp, #0
 8009cea:	6078      	str	r0, [r7, #4]
                                        | BLIT_OP_COPY
                                        | BLIT_OP_COPY_WITH_ALPHA
                                        | BLIT_OP_COPY_ARGB8888
                                        | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                        | BLIT_OP_COPY_A4
                                        | BLIT_OP_COPY_A8);
 8009cec:	f240 13ef 	movw	r3, #495	; 0x1ef
}
 8009cf0:	4618      	mov	r0, r3
 8009cf2:	370c      	adds	r7, #12
 8009cf4:	46bd      	mov	sp, r7
 8009cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cfa:	4770      	bx	lr

08009cfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8009cfc:	b590      	push	{r4, r7, lr}
 8009cfe:	b08d      	sub	sp, #52	; 0x34
 8009d00:	af02      	add	r7, sp, #8
 8009d02:	6078      	str	r0, [r7, #4]
 8009d04:	6039      	str	r1, [r7, #0]
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8009d06:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8009d0a:	627b      	str	r3, [r7, #36]	; 0x24
    uint32_t dma2dColorMode = 0;
 8009d0c:	2300      	movs	r3, #0
 8009d0e:	623b      	str	r3, [r7, #32]

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8009d10:	683b      	ldr	r3, [r7, #0]
 8009d12:	681b      	ldr	r3, [r3, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8009d14:	2b20      	cmp	r3, #32
 8009d16:	d007      	beq.n	8009d28 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8009d18:	683b      	ldr	r3, [r7, #0]
 8009d1a:	681b      	ldr	r3, [r3, #0]
 8009d1c:	2b40      	cmp	r3, #64	; 0x40
 8009d1e:	d003      	beq.n	8009d28 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8009d20:	683b      	ldr	r3, [r7, #0]
 8009d22:	681b      	ldr	r3, [r3, #0]
 8009d24:	2b04      	cmp	r3, #4
 8009d26:	d101      	bne.n	8009d2c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x30>
 8009d28:	2301      	movs	r3, #1
 8009d2a:	e000      	b.n	8009d2e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x32>
 8009d2c:	2300      	movs	r3, #0
    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8009d2e:	77fb      	strb	r3, [r7, #31]

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 8009d30:	683b      	ldr	r3, [r7, #0]
 8009d32:	681b      	ldr	r3, [r3, #0]
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8009d34:	2b80      	cmp	r3, #128	; 0x80
 8009d36:	d004      	beq.n	8009d42 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x46>
 8009d38:	683b      	ldr	r3, [r7, #0]
 8009d3a:	681b      	ldr	r3, [r3, #0]
 8009d3c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009d40:	d101      	bne.n	8009d46 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4a>
 8009d42:	2301      	movs	r3, #1
 8009d44:	e000      	b.n	8009d48 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
 8009d46:	2300      	movs	r3, #0
    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 8009d48:	77bb      	strb	r3, [r7, #30]

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8009d4a:	f7fd ffad 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 8009d4e:	4603      	mov	r3, r0
 8009d50:	681a      	ldr	r2, [r3, #0]
 8009d52:	3220      	adds	r2, #32
 8009d54:	6812      	ldr	r2, [r2, #0]
 8009d56:	4618      	mov	r0, r3
 8009d58:	4790      	blx	r2
 8009d5a:	4603      	mov	r3, r0
 8009d5c:	777b      	strb	r3, [r7, #29]

    switch (blitOp.operation)
 8009d5e:	683b      	ldr	r3, [r7, #0]
 8009d60:	681b      	ldr	r3, [r3, #0]
 8009d62:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009d66:	d012      	beq.n	8009d8e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
 8009d68:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009d6c:	d820      	bhi.n	8009db0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 8009d6e:	2b80      	cmp	r3, #128	; 0x80
 8009d70:	d00a      	beq.n	8009d88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
 8009d72:	2b80      	cmp	r3, #128	; 0x80
 8009d74:	d81c      	bhi.n	8009db0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 8009d76:	2b40      	cmp	r3, #64	; 0x40
 8009d78:	d017      	beq.n	8009daa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
 8009d7a:	2b40      	cmp	r3, #64	; 0x40
 8009d7c:	d818      	bhi.n	8009db0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 8009d7e:	2b04      	cmp	r3, #4
 8009d80:	d008      	beq.n	8009d94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x98>
 8009d82:	2b20      	cmp	r3, #32
 8009d84:	d011      	beq.n	8009daa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
 8009d86:	e013      	b.n	8009db0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
    {
    case BLIT_OP_COPY_A4:
        dma2dColorMode = CM_A4;
 8009d88:	230a      	movs	r3, #10
 8009d8a:	623b      	str	r3, [r7, #32]
        break;
 8009d8c:	e01a      	b.n	8009dc4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    case BLIT_OP_COPY_A8:
        dma2dColorMode = CM_A8;
 8009d8e:	2309      	movs	r3, #9
 8009d90:	623b      	str	r3, [r7, #32]
        break;
 8009d92:	e017      	b.n	8009dc4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    case BLIT_OP_COPY_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 8009d94:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8009d98:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8009d9a:	7f7b      	ldrb	r3, [r7, #29]
 8009d9c:	2b10      	cmp	r3, #16
 8009d9e:	d101      	bne.n	8009da4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8009da0:	2302      	movs	r3, #2
 8009da2:	e000      	b.n	8009da6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
 8009da4:	2301      	movs	r3, #1
 8009da6:	623b      	str	r3, [r7, #32]
        break;
 8009da8:	e00c      	b.n	8009dc4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
 8009daa:	2300      	movs	r3, #0
 8009dac:	623b      	str	r3, [r7, #32]
        break;
 8009dae:	e009      	b.n	8009dc4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    default:
        dma2dTransferMode = DMA2D_M2M;
 8009db0:	2300      	movs	r3, #0
 8009db2:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8009db4:	7f7b      	ldrb	r3, [r7, #29]
 8009db6:	2b10      	cmp	r3, #16
 8009db8:	d101      	bne.n	8009dbe <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc2>
 8009dba:	2302      	movs	r3, #2
 8009dbc:	e000      	b.n	8009dc0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc4>
 8009dbe:	2301      	movs	r3, #1
 8009dc0:	623b      	str	r3, [r7, #32]
        break;
 8009dc2:	bf00      	nop
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8009dc4:	4a77      	ldr	r2, [pc, #476]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009dc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009dc8:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8009dca:	7f7b      	ldrb	r3, [r7, #29]
 8009dcc:	2b10      	cmp	r3, #16
 8009dce:	d101      	bne.n	8009dd4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd8>
 8009dd0:	2302      	movs	r3, #2
 8009dd2:	e000      	b.n	8009dd6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xda>
 8009dd4:	2301      	movs	r3, #1
 8009dd6:	4a73      	ldr	r2, [pc, #460]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009dd8:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8009dda:	683b      	ldr	r3, [r7, #0]
 8009ddc:	8adb      	ldrh	r3, [r3, #22]
 8009dde:	461a      	mov	r2, r3
 8009de0:	683b      	ldr	r3, [r7, #0]
 8009de2:	8a1b      	ldrh	r3, [r3, #16]
 8009de4:	1ad3      	subs	r3, r2, r3
 8009de6:	461a      	mov	r2, r3
 8009de8:	4b6e      	ldr	r3, [pc, #440]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009dea:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 8009dec:	7f7b      	ldrb	r3, [r7, #29]
 8009dee:	2b10      	cmp	r3, #16
 8009df0:	d101      	bne.n	8009df6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8009df2:	2202      	movs	r2, #2
 8009df4:	e000      	b.n	8009df8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfc>
 8009df6:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 8009df8:	683b      	ldr	r3, [r7, #0]
 8009dfa:	8adb      	ldrh	r3, [r3, #22]
 8009dfc:	4619      	mov	r1, r3
 8009dfe:	683b      	ldr	r3, [r7, #0]
 8009e00:	8a1b      	ldrh	r3, [r3, #16]
 8009e02:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 8009e04:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8009e06:	4867      	ldr	r0, [pc, #412]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009e08:	f7ff fe96 	bl	8009b38 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8009e0c:	4a65      	ldr	r2, [pc, #404]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009e0e:	6a3b      	ldr	r3, [r7, #32]
 8009e10:	62d3      	str	r3, [r2, #44]	; 0x2c
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8009e12:	683b      	ldr	r3, [r7, #0]
 8009e14:	8a9b      	ldrh	r3, [r3, #20]
 8009e16:	461a      	mov	r2, r3
 8009e18:	683b      	ldr	r3, [r7, #0]
 8009e1a:	8a1b      	ldrh	r3, [r3, #16]
 8009e1c:	1ad3      	subs	r3, r2, r3
 8009e1e:	461a      	mov	r2, r3
 8009e20:	4b60      	ldr	r3, [pc, #384]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009e22:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8009e24:	7ffb      	ldrb	r3, [r7, #31]
 8009e26:	2b00      	cmp	r3, #0
 8009e28:	d103      	bne.n	8009e32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 8009e2a:	7fbb      	ldrb	r3, [r7, #30]
 8009e2c:	2b00      	cmp	r3, #0
 8009e2e:	f000 8084 	beq.w	8009f3a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x23e>
    {
        if (blitOp.alpha < 255)
 8009e32:	683b      	ldr	r3, [r7, #0]
 8009e34:	7f1b      	ldrb	r3, [r3, #28]
 8009e36:	2bff      	cmp	r3, #255	; 0xff
 8009e38:	d008      	beq.n	8009e4c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8009e3a:	4b5a      	ldr	r3, [pc, #360]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009e3c:	2202      	movs	r2, #2
 8009e3e:	631a      	str	r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8009e40:	683b      	ldr	r3, [r7, #0]
 8009e42:	7f1b      	ldrb	r3, [r3, #28]
 8009e44:	461a      	mov	r2, r3
 8009e46:	4b57      	ldr	r3, [pc, #348]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009e48:	635a      	str	r2, [r3, #52]	; 0x34
 8009e4a:	e002      	b.n	8009e52 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8009e4c:	4b55      	ldr	r3, [pc, #340]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009e4e:	2200      	movs	r2, #0
 8009e50:	631a      	str	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 8009e52:	7fbb      	ldrb	r3, [r7, #30]
 8009e54:	2b00      	cmp	r3, #0
 8009e56:	d05b      	beq.n	8009f10 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x214>
        {
            if (bitDepth == 16)
 8009e58:	7f7b      	ldrb	r3, [r7, #29]
 8009e5a:	2b10      	cmp	r3, #16
 8009e5c:	d14c      	bne.n	8009ef8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1fc>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8009e5e:	683b      	ldr	r3, [r7, #0]
 8009e60:	3318      	adds	r3, #24
 8009e62:	4618      	mov	r0, r3
 8009e64:	f7ff fdc6 	bl	80099f4 <_ZNK8touchgfx9colortypecvtEv>
 8009e68:	4603      	mov	r3, r0
 8009e6a:	0adb      	lsrs	r3, r3, #11
 8009e6c:	b29b      	uxth	r3, r3
 8009e6e:	f003 021f 	and.w	r2, r3, #31
 8009e72:	4613      	mov	r3, r2
 8009e74:	021b      	lsls	r3, r3, #8
 8009e76:	1a9b      	subs	r3, r3, r2
 8009e78:	4a4b      	ldr	r2, [pc, #300]	; (8009fa8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 8009e7a:	fb82 1203 	smull	r1, r2, r2, r3
 8009e7e:	441a      	add	r2, r3
 8009e80:	1112      	asrs	r2, r2, #4
 8009e82:	17db      	asrs	r3, r3, #31
 8009e84:	1ad3      	subs	r3, r2, r3
 8009e86:	61bb      	str	r3, [r7, #24]
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8009e88:	683b      	ldr	r3, [r7, #0]
 8009e8a:	3318      	adds	r3, #24
 8009e8c:	4618      	mov	r0, r3
 8009e8e:	f7ff fdb1 	bl	80099f4 <_ZNK8touchgfx9colortypecvtEv>
 8009e92:	4603      	mov	r3, r0
 8009e94:	095b      	lsrs	r3, r3, #5
 8009e96:	b29b      	uxth	r3, r3
 8009e98:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8009e9c:	4613      	mov	r3, r2
 8009e9e:	021b      	lsls	r3, r3, #8
 8009ea0:	1a9b      	subs	r3, r3, r2
 8009ea2:	4a42      	ldr	r2, [pc, #264]	; (8009fac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>)
 8009ea4:	fb82 1203 	smull	r1, r2, r2, r3
 8009ea8:	441a      	add	r2, r3
 8009eaa:	1152      	asrs	r2, r2, #5
 8009eac:	17db      	asrs	r3, r3, #31
 8009eae:	1ad3      	subs	r3, r2, r3
 8009eb0:	617b      	str	r3, [r7, #20]
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8009eb2:	683b      	ldr	r3, [r7, #0]
 8009eb4:	3318      	adds	r3, #24
 8009eb6:	4618      	mov	r0, r3
 8009eb8:	f7ff fd9c 	bl	80099f4 <_ZNK8touchgfx9colortypecvtEv>
 8009ebc:	4603      	mov	r3, r0
 8009ebe:	f003 021f 	and.w	r2, r3, #31
 8009ec2:	4613      	mov	r3, r2
 8009ec4:	021b      	lsls	r3, r3, #8
 8009ec6:	1a9b      	subs	r3, r3, r2
 8009ec8:	4a37      	ldr	r2, [pc, #220]	; (8009fa8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 8009eca:	fb82 1203 	smull	r1, r2, r2, r3
 8009ece:	441a      	add	r2, r3
 8009ed0:	1112      	asrs	r2, r2, #4
 8009ed2:	17db      	asrs	r3, r3, #31
 8009ed4:	1ad3      	subs	r3, r2, r3
 8009ed6:	613b      	str	r3, [r7, #16]
                uint32_t alpha = blitOp.alpha;
 8009ed8:	683b      	ldr	r3, [r7, #0]
 8009eda:	7f1b      	ldrb	r3, [r3, #28]
 8009edc:	60fb      	str	r3, [r7, #12]
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8009ede:	68fb      	ldr	r3, [r7, #12]
 8009ee0:	061a      	lsls	r2, r3, #24
 8009ee2:	69bb      	ldr	r3, [r7, #24]
 8009ee4:	041b      	lsls	r3, r3, #16
 8009ee6:	431a      	orrs	r2, r3
 8009ee8:	697b      	ldr	r3, [r7, #20]
 8009eea:	021b      	lsls	r3, r3, #8
 8009eec:	431a      	orrs	r2, r3
 8009eee:	693b      	ldr	r3, [r7, #16]
 8009ef0:	4313      	orrs	r3, r2
 8009ef2:	4a2c      	ldr	r2, [pc, #176]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009ef4:	6353      	str	r3, [r2, #52]	; 0x34
 8009ef6:	e00b      	b.n	8009f10 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x214>
            }
            else
            {
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8009ef8:	683b      	ldr	r3, [r7, #0]
 8009efa:	3318      	adds	r3, #24
 8009efc:	4618      	mov	r0, r3
 8009efe:	f7ff fd6d 	bl	80099dc <_ZNK8touchgfx9colortype10getColor32Ev>
 8009f02:	4602      	mov	r2, r0
 8009f04:	683b      	ldr	r3, [r7, #0]
 8009f06:	7f1b      	ldrb	r3, [r3, #28]
 8009f08:	061b      	lsls	r3, r3, #24
 8009f0a:	4313      	orrs	r3, r2
 8009f0c:	4a25      	ldr	r2, [pc, #148]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009f0e:	6353      	str	r3, [r2, #52]	; 0x34
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8009f10:	683b      	ldr	r3, [r7, #0]
 8009f12:	8adb      	ldrh	r3, [r3, #22]
 8009f14:	461a      	mov	r2, r3
 8009f16:	683b      	ldr	r3, [r7, #0]
 8009f18:	8a1b      	ldrh	r3, [r3, #16]
 8009f1a:	1ad3      	subs	r3, r2, r3
 8009f1c:	461a      	mov	r2, r3
 8009f1e:	4b21      	ldr	r3, [pc, #132]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009f20:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8009f22:	7f7b      	ldrb	r3, [r7, #29]
 8009f24:	2b10      	cmp	r3, #16
 8009f26:	d101      	bne.n	8009f2c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
 8009f28:	2302      	movs	r3, #2
 8009f2a:	e000      	b.n	8009f2e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x232>
 8009f2c:	2301      	movs	r3, #1
 8009f2e:	4a1d      	ldr	r2, [pc, #116]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009f30:	61d3      	str	r3, [r2, #28]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8009f32:	2100      	movs	r1, #0
 8009f34:	481b      	ldr	r0, [pc, #108]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009f36:	f7f9 f8e3 	bl	8003100 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8009f3a:	2101      	movs	r1, #1
 8009f3c:	4819      	ldr	r0, [pc, #100]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009f3e:	f7f9 f8df 	bl	8003100 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 8009f42:	7ffb      	ldrb	r3, [r7, #31]
 8009f44:	2b00      	cmp	r3, #0
 8009f46:	d102      	bne.n	8009f4e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x252>
 8009f48:	7fbb      	ldrb	r3, [r7, #30]
 8009f4a:	2b00      	cmp	r3, #0
 8009f4c:	d015      	beq.n	8009f7a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x27e>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pSrc,
 8009f4e:	683b      	ldr	r3, [r7, #0]
 8009f50:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009f52:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 8009f54:	683b      	ldr	r3, [r7, #0]
 8009f56:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009f58:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 8009f5a:	683b      	ldr	r3, [r7, #0]
 8009f5c:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009f5e:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 8009f60:	683b      	ldr	r3, [r7, #0]
 8009f62:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009f64:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 8009f66:	683b      	ldr	r3, [r7, #0]
 8009f68:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009f6a:	9301      	str	r3, [sp, #4]
 8009f6c:	9200      	str	r2, [sp, #0]
 8009f6e:	4623      	mov	r3, r4
 8009f70:	4602      	mov	r2, r0
 8009f72:	480c      	ldr	r0, [pc, #48]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009f74:	f7f8 fee7 	bl	8002d46 <HAL_DMA2D_BlendingStart_IT>
 8009f78:	e010      	b.n	8009f9c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>
    }
    else
    {
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
 8009f7a:	683b      	ldr	r3, [r7, #0]
 8009f7c:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_Start_IT(&hdma2d,
 8009f7e:	4619      	mov	r1, r3
                           (unsigned int)blitOp.pDst,
 8009f80:	683b      	ldr	r3, [r7, #0]
 8009f82:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_Start_IT(&hdma2d,
 8009f84:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 8009f86:	683b      	ldr	r3, [r7, #0]
 8009f88:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d,
 8009f8a:	4618      	mov	r0, r3
                           blitOp.nSteps, blitOp.nLoops);
 8009f8c:	683b      	ldr	r3, [r7, #0]
 8009f8e:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d,
 8009f90:	9300      	str	r3, [sp, #0]
 8009f92:	4603      	mov	r3, r0
 8009f94:	4803      	ldr	r0, [pc, #12]	; (8009fa4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 8009f96:	f7f8 fea3 	bl	8002ce0 <HAL_DMA2D_Start_IT>
    }
}
 8009f9a:	bf00      	nop
 8009f9c:	bf00      	nop
 8009f9e:	372c      	adds	r7, #44	; 0x2c
 8009fa0:	46bd      	mov	sp, r7
 8009fa2:	bd90      	pop	{r4, r7, pc}
 8009fa4:	20000170 	.word	0x20000170
 8009fa8:	84210843 	.word	0x84210843
 8009fac:	82082083 	.word	0x82082083

08009fb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8009fb0:	b590      	push	{r4, r7, lr}
 8009fb2:	b08d      	sub	sp, #52	; 0x34
 8009fb4:	af02      	add	r7, sp, #8
 8009fb6:	6078      	str	r0, [r7, #4]
 8009fb8:	6039      	str	r1, [r7, #0]
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8009fba:	f7fd fe75 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 8009fbe:	4603      	mov	r3, r0
 8009fc0:	681a      	ldr	r2, [r3, #0]
 8009fc2:	3220      	adds	r2, #32
 8009fc4:	6812      	ldr	r2, [r2, #0]
 8009fc6:	4618      	mov	r0, r3
 8009fc8:	4790      	blx	r2
 8009fca:	4603      	mov	r3, r0
 8009fcc:	77fb      	strb	r3, [r7, #31]
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8009fce:	7ffb      	ldrb	r3, [r7, #31]
 8009fd0:	2b10      	cmp	r3, #16
 8009fd2:	d101      	bne.n	8009fd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x28>
 8009fd4:	2302      	movs	r3, #2
 8009fd6:	e000      	b.n	8009fda <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x2a>
 8009fd8:	2301      	movs	r3, #1
 8009fda:	61bb      	str	r3, [r7, #24]

    uint32_t color = 0;
 8009fdc:	2300      	movs	r3, #0
 8009fde:	623b      	str	r3, [r7, #32]
    if (bitDepth == 16)
 8009fe0:	7ffb      	ldrb	r3, [r7, #31]
 8009fe2:	2b10      	cmp	r3, #16
 8009fe4:	d14b      	bne.n	800a07e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8009fe6:	683b      	ldr	r3, [r7, #0]
 8009fe8:	3318      	adds	r3, #24
 8009fea:	4618      	mov	r0, r3
 8009fec:	f7ff fd02 	bl	80099f4 <_ZNK8touchgfx9colortypecvtEv>
 8009ff0:	4603      	mov	r3, r0
 8009ff2:	0adb      	lsrs	r3, r3, #11
 8009ff4:	b29b      	uxth	r3, r3
 8009ff6:	f003 021f 	and.w	r2, r3, #31
 8009ffa:	4613      	mov	r3, r2
 8009ffc:	021b      	lsls	r3, r3, #8
 8009ffe:	1a9b      	subs	r3, r3, r2
 800a000:	4a69      	ldr	r2, [pc, #420]	; (800a1a8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 800a002:	fb82 1203 	smull	r1, r2, r2, r3
 800a006:	441a      	add	r2, r3
 800a008:	1112      	asrs	r2, r2, #4
 800a00a:	17db      	asrs	r3, r3, #31
 800a00c:	1ad3      	subs	r3, r2, r3
 800a00e:	617b      	str	r3, [r7, #20]
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 800a010:	683b      	ldr	r3, [r7, #0]
 800a012:	3318      	adds	r3, #24
 800a014:	4618      	mov	r0, r3
 800a016:	f7ff fced 	bl	80099f4 <_ZNK8touchgfx9colortypecvtEv>
 800a01a:	4603      	mov	r3, r0
 800a01c:	095b      	lsrs	r3, r3, #5
 800a01e:	b29b      	uxth	r3, r3
 800a020:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800a024:	4613      	mov	r3, r2
 800a026:	021b      	lsls	r3, r3, #8
 800a028:	1a9b      	subs	r3, r3, r2
 800a02a:	4a60      	ldr	r2, [pc, #384]	; (800a1ac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800a02c:	fb82 1203 	smull	r1, r2, r2, r3
 800a030:	441a      	add	r2, r3
 800a032:	1152      	asrs	r2, r2, #5
 800a034:	17db      	asrs	r3, r3, #31
 800a036:	1ad3      	subs	r3, r2, r3
 800a038:	613b      	str	r3, [r7, #16]
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 800a03a:	683b      	ldr	r3, [r7, #0]
 800a03c:	3318      	adds	r3, #24
 800a03e:	4618      	mov	r0, r3
 800a040:	f7ff fcd8 	bl	80099f4 <_ZNK8touchgfx9colortypecvtEv>
 800a044:	4603      	mov	r3, r0
 800a046:	f003 021f 	and.w	r2, r3, #31
 800a04a:	4613      	mov	r3, r2
 800a04c:	021b      	lsls	r3, r3, #8
 800a04e:	1a9b      	subs	r3, r3, r2
 800a050:	4a55      	ldr	r2, [pc, #340]	; (800a1a8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 800a052:	fb82 1203 	smull	r1, r2, r2, r3
 800a056:	441a      	add	r2, r3
 800a058:	1112      	asrs	r2, r2, #4
 800a05a:	17db      	asrs	r3, r3, #31
 800a05c:	1ad3      	subs	r3, r2, r3
 800a05e:	60fb      	str	r3, [r7, #12]
        uint32_t alpha = blitOp.alpha;
 800a060:	683b      	ldr	r3, [r7, #0]
 800a062:	7f1b      	ldrb	r3, [r3, #28]
 800a064:	60bb      	str	r3, [r7, #8]
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 800a066:	68bb      	ldr	r3, [r7, #8]
 800a068:	061a      	lsls	r2, r3, #24
 800a06a:	697b      	ldr	r3, [r7, #20]
 800a06c:	041b      	lsls	r3, r3, #16
 800a06e:	431a      	orrs	r2, r3
 800a070:	693b      	ldr	r3, [r7, #16]
 800a072:	021b      	lsls	r3, r3, #8
 800a074:	4313      	orrs	r3, r2
 800a076:	68fa      	ldr	r2, [r7, #12]
 800a078:	4313      	orrs	r3, r2
 800a07a:	623b      	str	r3, [r7, #32]
 800a07c:	e00b      	b.n	800a096 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe6>
    }
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 800a07e:	683b      	ldr	r3, [r7, #0]
 800a080:	7f1b      	ldrb	r3, [r3, #28]
 800a082:	061b      	lsls	r3, r3, #24
 800a084:	461c      	mov	r4, r3
 800a086:	683b      	ldr	r3, [r7, #0]
 800a088:	3318      	adds	r3, #24
 800a08a:	4618      	mov	r0, r3
 800a08c:	f7ff fca6 	bl	80099dc <_ZNK8touchgfx9colortype10getColor32Ev>
 800a090:	4603      	mov	r3, r0
 800a092:	4323      	orrs	r3, r4
 800a094:	623b      	str	r3, [r7, #32]
    }

    switch (blitOp.operation)
 800a096:	683b      	ldr	r3, [r7, #0]
 800a098:	681b      	ldr	r3, [r3, #0]
 800a09a:	2b08      	cmp	r3, #8
 800a09c:	d103      	bne.n	800a0a6 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf6>
    {
    case BLIT_OP_FILL_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800a09e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800a0a2:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800a0a4:	e003      	b.n	800a0ae <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfe>
    default:
        dma2dTransferMode = DMA2D_R2M;
 800a0a6:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 800a0aa:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800a0ac:	bf00      	nop
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800a0ae:	4a40      	ldr	r2, [pc, #256]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a0b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a0b2:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800a0b4:	7ffb      	ldrb	r3, [r7, #31]
 800a0b6:	2b10      	cmp	r3, #16
 800a0b8:	d101      	bne.n	800a0be <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10e>
 800a0ba:	2302      	movs	r3, #2
 800a0bc:	e000      	b.n	800a0c0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>
 800a0be:	2301      	movs	r3, #1
 800a0c0:	4a3b      	ldr	r2, [pc, #236]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a0c2:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800a0c4:	683b      	ldr	r3, [r7, #0]
 800a0c6:	8adb      	ldrh	r3, [r3, #22]
 800a0c8:	461a      	mov	r2, r3
 800a0ca:	683b      	ldr	r3, [r7, #0]
 800a0cc:	8a1b      	ldrh	r3, [r3, #16]
 800a0ce:	1ad3      	subs	r3, r2, r3
 800a0d0:	461a      	mov	r2, r3
 800a0d2:	4b37      	ldr	r3, [pc, #220]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a0d4:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800a0d6:	7ffb      	ldrb	r3, [r7, #31]
 800a0d8:	2b10      	cmp	r3, #16
 800a0da:	d101      	bne.n	800a0e0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x130>
 800a0dc:	2202      	movs	r2, #2
 800a0de:	e000      	b.n	800a0e2 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x132>
 800a0e0:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 800a0e2:	683b      	ldr	r3, [r7, #0]
 800a0e4:	8adb      	ldrh	r3, [r3, #22]
 800a0e6:	4619      	mov	r1, r3
 800a0e8:	683b      	ldr	r3, [r7, #0]
 800a0ea:	8a1b      	ldrh	r3, [r3, #16]
 800a0ec:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800a0ee:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800a0f0:	482f      	ldr	r0, [pc, #188]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a0f2:	f7ff fd21 	bl	8009b38 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    if (dma2dTransferMode == DMA2D_M2M_BLEND) {
 800a0f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a0f8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800a0fc:	d11e      	bne.n	800a13c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18c>
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 800a0fe:	4b2c      	ldr	r3, [pc, #176]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a100:	2201      	movs	r2, #1
 800a102:	631a      	str	r2, [r3, #48]	; 0x30
        hdma2d.LayerCfg[1].InputAlpha = color;
 800a104:	4a2a      	ldr	r2, [pc, #168]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a106:	6a3b      	ldr	r3, [r7, #32]
 800a108:	6353      	str	r3, [r2, #52]	; 0x34
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800a10a:	4b29      	ldr	r3, [pc, #164]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a10c:	2209      	movs	r2, #9
 800a10e:	62da      	str	r2, [r3, #44]	; 0x2c
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800a110:	683b      	ldr	r3, [r7, #0]
 800a112:	8adb      	ldrh	r3, [r3, #22]
 800a114:	461a      	mov	r2, r3
 800a116:	683b      	ldr	r3, [r7, #0]
 800a118:	8a1b      	ldrh	r3, [r3, #16]
 800a11a:	1ad3      	subs	r3, r2, r3
 800a11c:	461a      	mov	r2, r3
 800a11e:	4b24      	ldr	r3, [pc, #144]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a120:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800a122:	7ffb      	ldrb	r3, [r7, #31]
 800a124:	2b10      	cmp	r3, #16
 800a126:	d101      	bne.n	800a12c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17c>
 800a128:	2302      	movs	r3, #2
 800a12a:	e000      	b.n	800a12e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17e>
 800a12c:	2301      	movs	r3, #1
 800a12e:	4a20      	ldr	r2, [pc, #128]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a130:	61d3      	str	r3, [r2, #28]
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800a132:	2100      	movs	r1, #0
 800a134:	481e      	ldr	r0, [pc, #120]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a136:	f7f8 ffe3 	bl	8003100 <HAL_DMA2D_ConfigLayer>
 800a13a:	e005      	b.n	800a148 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x198>
    } else {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800a13c:	4a1c      	ldr	r2, [pc, #112]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a13e:	69bb      	ldr	r3, [r7, #24]
 800a140:	62d3      	str	r3, [r2, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 800a142:	4b1b      	ldr	r3, [pc, #108]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a144:	2200      	movs	r2, #0
 800a146:	629a      	str	r2, [r3, #40]	; 0x28
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 800a148:	2101      	movs	r1, #1
 800a14a:	4819      	ldr	r0, [pc, #100]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a14c:	f7f8 ffd8 	bl	8003100 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800a150:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a152:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800a156:	d115      	bne.n	800a184 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1d4>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pDst,
 800a158:	683b      	ldr	r3, [r7, #0]
 800a15a:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800a15c:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 800a15e:	683b      	ldr	r3, [r7, #0]
 800a160:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800a162:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 800a164:	683b      	ldr	r3, [r7, #0]
 800a166:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800a168:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800a16a:	683b      	ldr	r3, [r7, #0]
 800a16c:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800a16e:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800a170:	683b      	ldr	r3, [r7, #0]
 800a172:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800a174:	9301      	str	r3, [sp, #4]
 800a176:	9200      	str	r2, [sp, #0]
 800a178:	4623      	mov	r3, r4
 800a17a:	4602      	mov	r2, r0
 800a17c:	480c      	ldr	r0, [pc, #48]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a17e:	f7f8 fde2 	bl	8002d46 <HAL_DMA2D_BlendingStart_IT>
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 800a182:	e00d      	b.n	800a1a0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f0>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800a184:	683b      	ldr	r3, [r7, #0]
 800a186:	68db      	ldr	r3, [r3, #12]
 800a188:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 800a18a:	683b      	ldr	r3, [r7, #0]
 800a18c:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800a18e:	4619      	mov	r1, r3
                           blitOp.nSteps, blitOp.nLoops);
 800a190:	683b      	ldr	r3, [r7, #0]
 800a192:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800a194:	9300      	str	r3, [sp, #0]
 800a196:	460b      	mov	r3, r1
 800a198:	6a39      	ldr	r1, [r7, #32]
 800a19a:	4805      	ldr	r0, [pc, #20]	; (800a1b0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800a19c:	f7f8 fda0 	bl	8002ce0 <HAL_DMA2D_Start_IT>
}
 800a1a0:	bf00      	nop
 800a1a2:	372c      	adds	r7, #44	; 0x2c
 800a1a4:	46bd      	mov	sp, r7
 800a1a6:	bd90      	pop	{r4, r7, pc}
 800a1a8:	84210843 	.word	0x84210843
 800a1ac:	82082083 	.word	0x82082083
 800a1b0:	20000170 	.word	0x20000170

0800a1b4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800a1b4:	b580      	push	{r7, lr}
 800a1b6:	b082      	sub	sp, #8
 800a1b8:	af00      	add	r7, sp, #0
 800a1ba:	6078      	str	r0, [r7, #4]
 800a1bc:	4a05      	ldr	r2, [pc, #20]	; (800a1d4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800a1be:	687b      	ldr	r3, [r7, #4]
 800a1c0:	601a      	str	r2, [r3, #0]
 800a1c2:	687b      	ldr	r3, [r7, #4]
 800a1c4:	4618      	mov	r0, r3
 800a1c6:	f7ff fc23 	bl	8009a10 <_ZN8touchgfx9DMA_QueueD1Ev>
 800a1ca:	687b      	ldr	r3, [r7, #4]
 800a1cc:	4618      	mov	r0, r3
 800a1ce:	3708      	adds	r7, #8
 800a1d0:	46bd      	mov	sp, r7
 800a1d2:	bd80      	pop	{r7, pc}
 800a1d4:	0801d1fc 	.word	0x0801d1fc

0800a1d8 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a1d8:	b580      	push	{r7, lr}
 800a1da:	b082      	sub	sp, #8
 800a1dc:	af00      	add	r7, sp, #0
 800a1de:	6078      	str	r0, [r7, #4]
 800a1e0:	6878      	ldr	r0, [r7, #4]
 800a1e2:	f7ff ffe7 	bl	800a1b4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800a1e6:	2114      	movs	r1, #20
 800a1e8:	6878      	ldr	r0, [r7, #4]
 800a1ea:	f010 fb68 	bl	801a8be <_ZdlPvj>
 800a1ee:	687b      	ldr	r3, [r7, #4]
 800a1f0:	4618      	mov	r0, r3
 800a1f2:	3708      	adds	r7, #8
 800a1f4:	46bd      	mov	sp, r7
 800a1f6:	bd80      	pop	{r7, pc}

0800a1f8 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
    static void registerTexts(const Texts* t)
 800a1f8:	b480      	push	{r7}
 800a1fa:	b083      	sub	sp, #12
 800a1fc:	af00      	add	r7, sp, #0
 800a1fe:	6078      	str	r0, [r7, #4]
        texts = t;
 800a200:	4a04      	ldr	r2, [pc, #16]	; (800a214 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800a202:	687b      	ldr	r3, [r7, #4]
 800a204:	6013      	str	r3, [r2, #0]
    }
 800a206:	bf00      	nop
 800a208:	370c      	adds	r7, #12
 800a20a:	46bd      	mov	sp, r7
 800a20c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a210:	4770      	bx	lr
 800a212:	bf00      	nop
 800a214:	20001534 	.word	0x20001534

0800a218 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800a218:	b480      	push	{r7}
 800a21a:	b085      	sub	sp, #20
 800a21c:	af00      	add	r7, sp, #0
 800a21e:	60f8      	str	r0, [r7, #12]
 800a220:	60b9      	str	r1, [r7, #8]
 800a222:	607a      	str	r2, [r7, #4]
 800a224:	603b      	str	r3, [r7, #0]
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app) : presenterStorage(pres),
        screenStorage(scr),
        transitionStorage(tra),
        frontendApplication(app)
 800a226:	4a0b      	ldr	r2, [pc, #44]	; (800a254 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800a228:	68fb      	ldr	r3, [r7, #12]
 800a22a:	601a      	str	r2, [r3, #0]
 800a22c:	68fb      	ldr	r3, [r7, #12]
 800a22e:	68ba      	ldr	r2, [r7, #8]
 800a230:	605a      	str	r2, [r3, #4]
 800a232:	68fb      	ldr	r3, [r7, #12]
 800a234:	687a      	ldr	r2, [r7, #4]
 800a236:	609a      	str	r2, [r3, #8]
 800a238:	68fb      	ldr	r3, [r7, #12]
 800a23a:	683a      	ldr	r2, [r7, #0]
 800a23c:	60da      	str	r2, [r3, #12]
 800a23e:	68fb      	ldr	r3, [r7, #12]
 800a240:	69ba      	ldr	r2, [r7, #24]
 800a242:	611a      	str	r2, [r3, #16]
    {
    }
 800a244:	68fb      	ldr	r3, [r7, #12]
 800a246:	4618      	mov	r0, r3
 800a248:	3714      	adds	r7, #20
 800a24a:	46bd      	mov	sp, r7
 800a24c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a250:	4770      	bx	lr
 800a252:	bf00      	nop
 800a254:	0801c744 	.word	0x0801c744

0800a258 <_ZN8touchgfx7MVPHeapD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPHeap()
 800a258:	b480      	push	{r7}
 800a25a:	b083      	sub	sp, #12
 800a25c:	af00      	add	r7, sp, #0
 800a25e:	6078      	str	r0, [r7, #4]
    {
 800a260:	4a04      	ldr	r2, [pc, #16]	; (800a274 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800a262:	687b      	ldr	r3, [r7, #4]
 800a264:	601a      	str	r2, [r3, #0]
    }
 800a266:	687b      	ldr	r3, [r7, #4]
 800a268:	4618      	mov	r0, r3
 800a26a:	370c      	adds	r7, #12
 800a26c:	46bd      	mov	sp, r7
 800a26e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a272:	4770      	bx	lr
 800a274:	0801c744 	.word	0x0801c744

0800a278 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800a278:	b580      	push	{r7, lr}
 800a27a:	b082      	sub	sp, #8
 800a27c:	af00      	add	r7, sp, #0
 800a27e:	6078      	str	r0, [r7, #4]
    }
 800a280:	6878      	ldr	r0, [r7, #4]
 800a282:	f7ff ffe9 	bl	800a258 <_ZN8touchgfx7MVPHeapD1Ev>
 800a286:	2114      	movs	r1, #20
 800a288:	6878      	ldr	r0, [r7, #4]
 800a28a:	f010 fb18 	bl	801a8be <_ZdlPvj>
 800a28e:	687b      	ldr	r3, [r7, #4]
 800a290:	4618      	mov	r0, r3
 800a292:	3708      	adds	r7, #8
 800a294:	46bd      	mov	sp, r7
 800a296:	bd80      	pop	{r7, pc}

0800a298 <_ZN8touchgfx3LCDD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~LCD()
 800a298:	b480      	push	{r7}
 800a29a:	b083      	sub	sp, #12
 800a29c:	af00      	add	r7, sp, #0
 800a29e:	6078      	str	r0, [r7, #4]
    {
 800a2a0:	4a04      	ldr	r2, [pc, #16]	; (800a2b4 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800a2a2:	687b      	ldr	r3, [r7, #4]
 800a2a4:	601a      	str	r2, [r3, #0]
    }
 800a2a6:	687b      	ldr	r3, [r7, #4]
 800a2a8:	4618      	mov	r0, r3
 800a2aa:	370c      	adds	r7, #12
 800a2ac:	46bd      	mov	sp, r7
 800a2ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2b2:	4770      	bx	lr
 800a2b4:	0801d3b4 	.word	0x0801d3b4

0800a2b8 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800a2b8:	b580      	push	{r7, lr}
 800a2ba:	b082      	sub	sp, #8
 800a2bc:	af00      	add	r7, sp, #0
 800a2be:	6078      	str	r0, [r7, #4]
    }
 800a2c0:	6878      	ldr	r0, [r7, #4]
 800a2c2:	f7ff ffe9 	bl	800a298 <_ZN8touchgfx3LCDD1Ev>
 800a2c6:	2108      	movs	r1, #8
 800a2c8:	6878      	ldr	r0, [r7, #4]
 800a2ca:	f010 faf8 	bl	801a8be <_ZdlPvj>
 800a2ce:	687b      	ldr	r3, [r7, #4]
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	3708      	adds	r7, #8
 800a2d4:	46bd      	mov	sp, r7
 800a2d6:	bd80      	pop	{r7, pc}

0800a2d8 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
     *
     *        Defines the state of a drag.
     */
    struct DragState
    {
        DragState() : startX(0),
 800a2d8:	b480      	push	{r7}
 800a2da:	b083      	sub	sp, #12
 800a2dc:	af00      	add	r7, sp, #0
 800a2de:	6078      	str	r0, [r7, #4]
            downX(0),
            downY(0),
            tickCount(0),
            velocityX(0),
            velocityY(0),
            inProgress(false)
 800a2e0:	687b      	ldr	r3, [r7, #4]
 800a2e2:	2200      	movs	r2, #0
 800a2e4:	801a      	strh	r2, [r3, #0]
 800a2e6:	687b      	ldr	r3, [r7, #4]
 800a2e8:	2200      	movs	r2, #0
 800a2ea:	805a      	strh	r2, [r3, #2]
 800a2ec:	687b      	ldr	r3, [r7, #4]
 800a2ee:	2200      	movs	r2, #0
 800a2f0:	809a      	strh	r2, [r3, #4]
 800a2f2:	687b      	ldr	r3, [r7, #4]
 800a2f4:	2200      	movs	r2, #0
 800a2f6:	80da      	strh	r2, [r3, #6]
 800a2f8:	687b      	ldr	r3, [r7, #4]
 800a2fa:	2200      	movs	r2, #0
 800a2fc:	811a      	strh	r2, [r3, #8]
 800a2fe:	687b      	ldr	r3, [r7, #4]
 800a300:	2200      	movs	r2, #0
 800a302:	815a      	strh	r2, [r3, #10]
 800a304:	687b      	ldr	r3, [r7, #4]
 800a306:	2200      	movs	r2, #0
 800a308:	819a      	strh	r2, [r3, #12]
 800a30a:	687b      	ldr	r3, [r7, #4]
 800a30c:	2200      	movs	r2, #0
 800a30e:	739a      	strb	r2, [r3, #14]
        {
        }
 800a310:	687b      	ldr	r3, [r7, #4]
 800a312:	4618      	mov	r0, r3
 800a314:	370c      	adds	r7, #12
 800a316:	46bd      	mov	sp, r7
 800a318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a31c:	4770      	bx	lr

0800a31e <_ZN8touchgfx8GesturesC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Does nothing.
     */
    Gestures() : listener(0), dragThresholdValue(0) { }
 800a31e:	b580      	push	{r7, lr}
 800a320:	b082      	sub	sp, #8
 800a322:	af00      	add	r7, sp, #0
 800a324:	6078      	str	r0, [r7, #4]
 800a326:	687b      	ldr	r3, [r7, #4]
 800a328:	4618      	mov	r0, r3
 800a32a:	f7ff ffd5 	bl	800a2d8 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800a32e:	687b      	ldr	r3, [r7, #4]
 800a330:	2200      	movs	r2, #0
 800a332:	611a      	str	r2, [r3, #16]
 800a334:	687b      	ldr	r3, [r7, #4]
 800a336:	2200      	movs	r2, #0
 800a338:	829a      	strh	r2, [r3, #20]
 800a33a:	687b      	ldr	r3, [r7, #4]
 800a33c:	4618      	mov	r0, r3
 800a33e:	3708      	adds	r7, #8
 800a340:	46bd      	mov	sp, r7
 800a342:	bd80      	pop	{r7, pc}

0800a344 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height) :
 800a344:	b580      	push	{r7, lr}
 800a346:	b084      	sub	sp, #16
 800a348:	af00      	add	r7, sp, #0
 800a34a:	60f8      	str	r0, [r7, #12]
 800a34c:	60b9      	str	r1, [r7, #8]
 800a34e:	607a      	str	r2, [r7, #4]
 800a350:	603b      	str	r3, [r7, #0]
        displayOrientationChangeRequested(false)
 800a352:	4a44      	ldr	r2, [pc, #272]	; (800a464 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x120>)
 800a354:	68fb      	ldr	r3, [r7, #12]
 800a356:	601a      	str	r2, [r3, #0]
 800a358:	68fb      	ldr	r3, [r7, #12]
 800a35a:	68ba      	ldr	r2, [r7, #8]
 800a35c:	605a      	str	r2, [r3, #4]
 800a35e:	68fb      	ldr	r3, [r7, #12]
 800a360:	687a      	ldr	r2, [r7, #4]
 800a362:	609a      	str	r2, [r3, #8]
 800a364:	68fb      	ldr	r3, [r7, #12]
 800a366:	683a      	ldr	r2, [r7, #0]
 800a368:	60da      	str	r2, [r3, #12]
 800a36a:	68fb      	ldr	r3, [r7, #12]
 800a36c:	2200      	movs	r2, #0
 800a36e:	611a      	str	r2, [r3, #16]
 800a370:	68fb      	ldr	r3, [r7, #12]
 800a372:	2200      	movs	r2, #0
 800a374:	615a      	str	r2, [r3, #20]
 800a376:	68fb      	ldr	r3, [r7, #12]
 800a378:	2200      	movs	r2, #0
 800a37a:	619a      	str	r2, [r3, #24]
 800a37c:	68fb      	ldr	r3, [r7, #12]
 800a37e:	331c      	adds	r3, #28
 800a380:	4618      	mov	r0, r3
 800a382:	f7ff ffcc 	bl	800a31e <_ZN8touchgfx8GesturesC1Ev>
 800a386:	68fb      	ldr	r3, [r7, #12]
 800a388:	2200      	movs	r2, #0
 800a38a:	639a      	str	r2, [r3, #56]	; 0x38
 800a38c:	68fb      	ldr	r3, [r7, #12]
 800a38e:	2200      	movs	r2, #0
 800a390:	63da      	str	r2, [r3, #60]	; 0x3c
 800a392:	68fb      	ldr	r3, [r7, #12]
 800a394:	2200      	movs	r2, #0
 800a396:	641a      	str	r2, [r3, #64]	; 0x40
 800a398:	68fb      	ldr	r3, [r7, #12]
 800a39a:	2200      	movs	r2, #0
 800a39c:	645a      	str	r2, [r3, #68]	; 0x44
 800a39e:	68fb      	ldr	r3, [r7, #12]
 800a3a0:	2200      	movs	r2, #0
 800a3a2:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800a3a6:	68fb      	ldr	r3, [r7, #12]
 800a3a8:	2201      	movs	r2, #1
 800a3aa:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 800a3ae:	68fb      	ldr	r3, [r7, #12]
 800a3b0:	2201      	movs	r2, #1
 800a3b2:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 800a3b6:	68fb      	ldr	r3, [r7, #12]
 800a3b8:	2200      	movs	r2, #0
 800a3ba:	64da      	str	r2, [r3, #76]	; 0x4c
 800a3bc:	68fb      	ldr	r3, [r7, #12]
 800a3be:	3350      	adds	r3, #80	; 0x50
 800a3c0:	4618      	mov	r0, r3
 800a3c2:	f7fe f88e 	bl	80084e2 <_ZN8touchgfx4RectC1Ev>
 800a3c6:	68fb      	ldr	r3, [r7, #12]
 800a3c8:	2201      	movs	r2, #1
 800a3ca:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 800a3ce:	68fb      	ldr	r3, [r7, #12]
 800a3d0:	2200      	movs	r2, #0
 800a3d2:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 800a3d6:	68fb      	ldr	r3, [r7, #12]
 800a3d8:	2200      	movs	r2, #0
 800a3da:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 800a3de:	68fb      	ldr	r3, [r7, #12]
 800a3e0:	2201      	movs	r2, #1
 800a3e2:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 800a3e6:	68fb      	ldr	r3, [r7, #12]
 800a3e8:	2200      	movs	r2, #0
 800a3ea:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800a3ee:	68fb      	ldr	r3, [r7, #12]
 800a3f0:	2200      	movs	r2, #0
 800a3f2:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 800a3f6:	68fb      	ldr	r3, [r7, #12]
 800a3f8:	2200      	movs	r2, #0
 800a3fa:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 800a3fe:	68fb      	ldr	r3, [r7, #12]
 800a400:	2200      	movs	r2, #0
 800a402:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800a406:	68fb      	ldr	r3, [r7, #12]
 800a408:	2200      	movs	r2, #0
 800a40a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800a40e:	68fb      	ldr	r3, [r7, #12]
 800a410:	2200      	movs	r2, #0
 800a412:	671a      	str	r2, [r3, #112]	; 0x70
 800a414:	68fb      	ldr	r3, [r7, #12]
 800a416:	2200      	movs	r2, #0
 800a418:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
        instance = this;
 800a41c:	4a12      	ldr	r2, [pc, #72]	; (800a468 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x124>)
 800a41e:	68fb      	ldr	r3, [r7, #12]
 800a420:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
 800a422:	4a12      	ldr	r2, [pc, #72]	; (800a46c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800a424:	8b3b      	ldrh	r3, [r7, #24]
 800a426:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
 800a428:	4a11      	ldr	r2, [pc, #68]	; (800a470 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800a42a:	8bbb      	ldrh	r3, [r7, #28]
 800a42c:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 800a42e:	4b11      	ldr	r3, [pc, #68]	; (800a474 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x130>)
 800a430:	2200      	movs	r2, #0
 800a432:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800a434:	4b0d      	ldr	r3, [pc, #52]	; (800a46c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800a436:	881a      	ldrh	r2, [r3, #0]
 800a438:	4b0f      	ldr	r3, [pc, #60]	; (800a478 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x134>)
 800a43a:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800a43c:	4b0c      	ldr	r3, [pc, #48]	; (800a470 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800a43e:	881a      	ldrh	r2, [r3, #0]
 800a440:	4b0e      	ldr	r3, [pc, #56]	; (800a47c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
 800a442:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800a444:	8b3a      	ldrh	r2, [r7, #24]
 800a446:	8bbb      	ldrh	r3, [r7, #28]
 800a448:	429a      	cmp	r2, r3
 800a44a:	bf34      	ite	cc
 800a44c:	2301      	movcc	r3, #1
 800a44e:	2300      	movcs	r3, #0
 800a450:	b2db      	uxtb	r3, r3
 800a452:	461a      	mov	r2, r3
 800a454:	68fb      	ldr	r3, [r7, #12]
 800a456:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800a45a:	68fb      	ldr	r3, [r7, #12]
 800a45c:	4618      	mov	r0, r3
 800a45e:	3710      	adds	r7, #16
 800a460:	46bd      	mov	sp, r7
 800a462:	bd80      	pop	{r7, pc}
 800a464:	0801cd68 	.word	0x0801cd68
 800a468:	200014b8 	.word	0x200014b8
 800a46c:	200014ac 	.word	0x200014ac
 800a470:	200014ae 	.word	0x200014ae
 800a474:	200014b0 	.word	0x200014b0
 800a478:	200014b2 	.word	0x200014b2
 800a47c:	200014b4 	.word	0x200014b4

0800a480 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800a480:	b580      	push	{r7, lr}
 800a482:	b082      	sub	sp, #8
 800a484:	af00      	add	r7, sp, #0
 800a486:	6078      	str	r0, [r7, #4]
 800a488:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800a48a:	683b      	ldr	r3, [r7, #0]
 800a48c:	4618      	mov	r0, r3
 800a48e:	f7fd fe2f 	bl	80080f0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800a492:	bf00      	nop
 800a494:	3708      	adds	r7, #8
 800a496:	46bd      	mov	sp, r7
 800a498:	bd80      	pop	{r7, pc}
	...

0800a49c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800a49c:	b580      	push	{r7, lr}
 800a49e:	b086      	sub	sp, #24
 800a4a0:	af02      	add	r7, sp, #8
 800a4a2:	60f8      	str	r0, [r7, #12]
 800a4a4:	60b9      	str	r1, [r7, #8]
 800a4a6:	607a      	str	r2, [r7, #4]
 800a4a8:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800a4aa:	68f8      	ldr	r0, [r7, #12]
 800a4ac:	69bb      	ldr	r3, [r7, #24]
 800a4ae:	9300      	str	r3, [sp, #0]
 800a4b0:	683b      	ldr	r3, [r7, #0]
 800a4b2:	687a      	ldr	r2, [r7, #4]
 800a4b4:	68b9      	ldr	r1, [r7, #8]
 800a4b6:	f7ff feaf 	bl	800a218 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800a4ba:	4a04      	ldr	r2, [pc, #16]	; (800a4cc <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800a4bc:	68fb      	ldr	r3, [r7, #12]
 800a4be:	601a      	str	r2, [r3, #0]
    {

    }
 800a4c0:	68fb      	ldr	r3, [r7, #12]
 800a4c2:	4618      	mov	r0, r3
 800a4c4:	3710      	adds	r7, #16
 800a4c6:	46bd      	mov	sp, r7
 800a4c8:	bd80      	pop	{r7, pc}
 800a4ca:	bf00      	nop
 800a4cc:	0801c730 	.word	0x0801c730

0800a4d0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800a4d0:	b580      	push	{r7, lr}
 800a4d2:	af00      	add	r7, sp, #0
 800a4d4:	4801      	ldr	r0, [pc, #4]	; (800a4dc <__tcf_0+0xc>)
 800a4d6:	f000 f9e5 	bl	800a8a4 <_ZN12FrontendHeapD1Ev>
 800a4da:	bd80      	pop	{r7, pc}
 800a4dc:	2000054c 	.word	0x2000054c

0800a4e0 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800a4e0:	b580      	push	{r7, lr}
 800a4e2:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800a4e4:	4b12      	ldr	r3, [pc, #72]	; (800a530 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800a4e6:	781b      	ldrb	r3, [r3, #0]
 800a4e8:	f3bf 8f5b 	dmb	ish
 800a4ec:	b2db      	uxtb	r3, r3
 800a4ee:	f003 0301 	and.w	r3, r3, #1
 800a4f2:	2b00      	cmp	r3, #0
 800a4f4:	bf0c      	ite	eq
 800a4f6:	2301      	moveq	r3, #1
 800a4f8:	2300      	movne	r3, #0
 800a4fa:	b2db      	uxtb	r3, r3
 800a4fc:	2b00      	cmp	r3, #0
 800a4fe:	d013      	beq.n	800a528 <_ZN12FrontendHeap11getInstanceEv+0x48>
 800a500:	480b      	ldr	r0, [pc, #44]	; (800a530 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800a502:	f010 f9de 	bl	801a8c2 <__cxa_guard_acquire>
 800a506:	4603      	mov	r3, r0
 800a508:	2b00      	cmp	r3, #0
 800a50a:	bf14      	ite	ne
 800a50c:	2301      	movne	r3, #1
 800a50e:	2300      	moveq	r3, #0
 800a510:	b2db      	uxtb	r3, r3
 800a512:	2b00      	cmp	r3, #0
 800a514:	d008      	beq.n	800a528 <_ZN12FrontendHeap11getInstanceEv+0x48>
 800a516:	4807      	ldr	r0, [pc, #28]	; (800a534 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800a518:	f000 f832 	bl	800a580 <_ZN12FrontendHeapC1Ev>
 800a51c:	4806      	ldr	r0, [pc, #24]	; (800a538 <_ZN12FrontendHeap11getInstanceEv+0x58>)
 800a51e:	f010 fa1b 	bl	801a958 <atexit>
 800a522:	4803      	ldr	r0, [pc, #12]	; (800a530 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800a524:	f010 f9d9 	bl	801a8da <__cxa_guard_release>
        return instance;
 800a528:	4b02      	ldr	r3, [pc, #8]	; (800a534 <_ZN12FrontendHeap11getInstanceEv+0x54>)
    }
 800a52a:	4618      	mov	r0, r3
 800a52c:	bd80      	pop	{r7, pc}
 800a52e:	bf00      	nop
 800a530:	2000078c 	.word	0x2000078c
 800a534:	2000054c 	.word	0x2000054c
 800a538:	0800a4d1 	.word	0x0800a4d1

0800a53c <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800a53c:	b580      	push	{r7, lr}
 800a53e:	b082      	sub	sp, #8
 800a540:	af00      	add	r7, sp, #0
 800a542:	6078      	str	r0, [r7, #4]
 800a544:	4a05      	ldr	r2, [pc, #20]	; (800a55c <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800a546:	687b      	ldr	r3, [r7, #4]
 800a548:	601a      	str	r2, [r3, #0]
 800a54a:	687b      	ldr	r3, [r7, #4]
 800a54c:	4618      	mov	r0, r3
 800a54e:	f7ff fe83 	bl	800a258 <_ZN8touchgfx7MVPHeapD1Ev>
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	4618      	mov	r0, r3
 800a556:	3708      	adds	r7, #8
 800a558:	46bd      	mov	sp, r7
 800a55a:	bd80      	pop	{r7, pc}
 800a55c:	0801c730 	.word	0x0801c730

0800a560 <_ZN16FrontendHeapBaseD0Ev>:
 800a560:	b580      	push	{r7, lr}
 800a562:	b082      	sub	sp, #8
 800a564:	af00      	add	r7, sp, #0
 800a566:	6078      	str	r0, [r7, #4]
 800a568:	6878      	ldr	r0, [r7, #4]
 800a56a:	f7ff ffe7 	bl	800a53c <_ZN16FrontendHeapBaseD1Ev>
 800a56e:	2114      	movs	r1, #20
 800a570:	6878      	ldr	r0, [r7, #4]
 800a572:	f010 f9a4 	bl	801a8be <_ZdlPvj>
 800a576:	687b      	ldr	r3, [r7, #4]
 800a578:	4618      	mov	r0, r3
 800a57a:	3708      	adds	r7, #8
 800a57c:	46bd      	mov	sp, r7
 800a57e:	bd80      	pop	{r7, pc}

0800a580 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800a580:	b590      	push	{r4, r7, lr}
 800a582:	b085      	sub	sp, #20
 800a584:	af02      	add	r7, sp, #8
 800a586:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800a588:	6878      	ldr	r0, [r7, #4]
 800a58a:	687b      	ldr	r3, [r7, #4]
 800a58c:	f103 0114 	add.w	r1, r3, #20
 800a590:	687b      	ldr	r3, [r7, #4]
 800a592:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800a596:	687b      	ldr	r3, [r7, #4]
 800a598:	f103 04d8 	add.w	r4, r3, #216	; 0xd8
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800a59c:	687b      	ldr	r3, [r7, #4]
 800a59e:	33ec      	adds	r3, #236	; 0xec
                     app(model, *this)
 800a5a0:	9300      	str	r3, [sp, #0]
 800a5a2:	4623      	mov	r3, r4
 800a5a4:	f7ff ff7a 	bl	800a49c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800a5a8:	4a16      	ldr	r2, [pc, #88]	; (800a604 <_ZN12FrontendHeapC1Ev+0x84>)
 800a5aa:	687b      	ldr	r3, [r7, #4]
 800a5ac:	601a      	str	r2, [r3, #0]
 800a5ae:	687b      	ldr	r3, [r7, #4]
 800a5b0:	3314      	adds	r3, #20
 800a5b2:	4618      	mov	r0, r3
 800a5b4:	f000 f8da 	bl	800a76c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800a5b8:	687b      	ldr	r3, [r7, #4]
 800a5ba:	332c      	adds	r3, #44	; 0x2c
 800a5bc:	4618      	mov	r0, r3
 800a5be:	f000 f909 	bl	800a7d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800a5c2:	687b      	ldr	r3, [r7, #4]
 800a5c4:	33d8      	adds	r3, #216	; 0xd8
 800a5c6:	4618      	mov	r0, r3
 800a5c8:	f000 f938 	bl	800a83c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	f103 00ec 	add.w	r0, r3, #236	; 0xec
 800a5d2:	687b      	ldr	r3, [r7, #4]
 800a5d4:	f503 730f 	add.w	r3, r3, #572	; 0x23c
 800a5d8:	687a      	ldr	r2, [r7, #4]
 800a5da:	4619      	mov	r1, r3
 800a5dc:	f7fe fcf0 	bl	8008fc0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800a5e0:	687b      	ldr	r3, [r7, #4]
 800a5e2:	f503 730f 	add.w	r3, r3, #572	; 0x23c
 800a5e6:	4618      	mov	r0, r3
 800a5e8:	f7fe fd00 	bl	8008fec <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800a5ec:	687a      	ldr	r2, [r7, #4]
 800a5ee:	687b      	ldr	r3, [r7, #4]
 800a5f0:	33ec      	adds	r3, #236	; 0xec
 800a5f2:	4619      	mov	r1, r3
 800a5f4:	4610      	mov	r0, r2
 800a5f6:	f7ff ff43 	bl	800a480 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800a5fa:	687b      	ldr	r3, [r7, #4]
 800a5fc:	4618      	mov	r0, r3
 800a5fe:	370c      	adds	r7, #12
 800a600:	46bd      	mov	sp, r7
 800a602:	bd90      	pop	{r4, r7, pc}
 800a604:	0801c680 	.word	0x0801c680

0800a608 <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
{
public:
    LCD16bpp();

    virtual ~LCD16bpp()
 800a608:	b580      	push	{r7, lr}
 800a60a:	b082      	sub	sp, #8
 800a60c:	af00      	add	r7, sp, #0
 800a60e:	6078      	str	r0, [r7, #4]
    {
 800a610:	4a05      	ldr	r2, [pc, #20]	; (800a628 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800a612:	687b      	ldr	r3, [r7, #4]
 800a614:	601a      	str	r2, [r3, #0]
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	4618      	mov	r0, r3
 800a61a:	f7ff fe3d 	bl	800a298 <_ZN8touchgfx3LCDD1Ev>
    }
 800a61e:	687b      	ldr	r3, [r7, #4]
 800a620:	4618      	mov	r0, r3
 800a622:	3708      	adds	r7, #8
 800a624:	46bd      	mov	sp, r7
 800a626:	bd80      	pop	{r7, pc}
 800a628:	0801e68c 	.word	0x0801e68c

0800a62c <_ZN8touchgfx8LCD16bppD0Ev>:
    virtual ~LCD16bpp()
 800a62c:	b580      	push	{r7, lr}
 800a62e:	b082      	sub	sp, #8
 800a630:	af00      	add	r7, sp, #0
 800a632:	6078      	str	r0, [r7, #4]
    }
 800a634:	6878      	ldr	r0, [r7, #4]
 800a636:	f7ff ffe7 	bl	800a608 <_ZN8touchgfx8LCD16bppD1Ev>
 800a63a:	2178      	movs	r1, #120	; 0x78
 800a63c:	6878      	ldr	r0, [r7, #4]
 800a63e:	f010 f93e 	bl	801a8be <_ZdlPvj>
 800a642:	687b      	ldr	r3, [r7, #4]
 800a644:	4618      	mov	r0, r3
 800a646:	3708      	adds	r7, #8
 800a648:	46bd      	mov	sp, r7
 800a64a:	bd80      	pop	{r7, pc}

0800a64c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : touchgfx::HAL(dma, display, tc, width, height)
 800a64c:	b580      	push	{r7, lr}
 800a64e:	b086      	sub	sp, #24
 800a650:	af02      	add	r7, sp, #8
 800a652:	60f8      	str	r0, [r7, #12]
 800a654:	60b9      	str	r1, [r7, #8]
 800a656:	607a      	str	r2, [r7, #4]
 800a658:	603b      	str	r3, [r7, #0]
 800a65a:	68f8      	ldr	r0, [r7, #12]
 800a65c:	8bbb      	ldrh	r3, [r7, #28]
 800a65e:	9301      	str	r3, [sp, #4]
 800a660:	8b3b      	ldrh	r3, [r7, #24]
 800a662:	9300      	str	r3, [sp, #0]
 800a664:	683b      	ldr	r3, [r7, #0]
 800a666:	687a      	ldr	r2, [r7, #4]
 800a668:	68b9      	ldr	r1, [r7, #8]
 800a66a:	f7ff fe6b 	bl	800a344 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800a66e:	4a04      	ldr	r2, [pc, #16]	; (800a680 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800a670:	68fb      	ldr	r3, [r7, #12]
 800a672:	601a      	str	r2, [r3, #0]
    }
 800a674:	68fb      	ldr	r3, [r7, #12]
 800a676:	4618      	mov	r0, r3
 800a678:	3710      	adds	r7, #16
 800a67a:	46bd      	mov	sp, r7
 800a67c:	bd80      	pop	{r7, pc}
 800a67e:	bf00      	nop
 800a680:	0801c754 	.word	0x0801c754

0800a684 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800a684:	b580      	push	{r7, lr}
 800a686:	b086      	sub	sp, #24
 800a688:	af02      	add	r7, sp, #8
 800a68a:	60f8      	str	r0, [r7, #12]
 800a68c:	60b9      	str	r1, [r7, #8]
 800a68e:	607a      	str	r2, [r7, #4]
 800a690:	603b      	str	r3, [r7, #0]
 800a692:	68f8      	ldr	r0, [r7, #12]
 800a694:	8bbb      	ldrh	r3, [r7, #28]
 800a696:	9301      	str	r3, [sp, #4]
 800a698:	8b3b      	ldrh	r3, [r7, #24]
 800a69a:	9300      	str	r3, [sp, #0]
 800a69c:	683b      	ldr	r3, [r7, #0]
 800a69e:	687a      	ldr	r2, [r7, #4]
 800a6a0:	68b9      	ldr	r1, [r7, #8]
 800a6a2:	f7ff ffd3 	bl	800a64c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800a6a6:	4a04      	ldr	r2, [pc, #16]	; (800a6b8 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800a6a8:	68fb      	ldr	r3, [r7, #12]
 800a6aa:	601a      	str	r2, [r3, #0]
    }
 800a6ac:	68fb      	ldr	r3, [r7, #12]
 800a6ae:	4618      	mov	r0, r3
 800a6b0:	3710      	adds	r7, #16
 800a6b2:	46bd      	mov	sp, r7
 800a6b4:	bd80      	pop	{r7, pc}
 800a6b6:	bf00      	nop
 800a6b8:	0801c558 	.word	0x0801c558

0800a6bc <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800a6bc:	b480      	push	{r7}
 800a6be:	b083      	sub	sp, #12
 800a6c0:	af00      	add	r7, sp, #0
 800a6c2:	6078      	str	r0, [r7, #4]
 800a6c4:	4a04      	ldr	r2, [pc, #16]	; (800a6d8 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800a6c6:	687b      	ldr	r3, [r7, #4]
 800a6c8:	601a      	str	r2, [r3, #0]
 800a6ca:	687b      	ldr	r3, [r7, #4]
 800a6cc:	4618      	mov	r0, r3
 800a6ce:	370c      	adds	r7, #12
 800a6d0:	46bd      	mov	sp, r7
 800a6d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6d6:	4770      	bx	lr
 800a6d8:	0801c540 	.word	0x0801c540

0800a6dc <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800a6dc:	b580      	push	{r7, lr}
 800a6de:	b082      	sub	sp, #8
 800a6e0:	af00      	add	r7, sp, #0
 800a6e2:	6078      	str	r0, [r7, #4]
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	4618      	mov	r0, r3
 800a6e8:	f7ff ffe8 	bl	800a6bc <_ZN8touchgfx15TouchControllerC1Ev>
 800a6ec:	4a03      	ldr	r2, [pc, #12]	; (800a6fc <_ZN20STM32TouchControllerC1Ev+0x20>)
 800a6ee:	687b      	ldr	r3, [r7, #4]
 800a6f0:	601a      	str	r2, [r3, #0]
 800a6f2:	687b      	ldr	r3, [r7, #4]
 800a6f4:	4618      	mov	r0, r3
 800a6f6:	3708      	adds	r7, #8
 800a6f8:	46bd      	mov	sp, r7
 800a6fa:	bd80      	pop	{r7, pc}
 800a6fc:	0801c528 	.word	0x0801c528

0800a700 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800a700:	b590      	push	{r4, r7, lr}
 800a702:	b085      	sub	sp, #20
 800a704:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800a706:	f7fe fb4b 	bl	8008da0 <_ZN14BitmapDatabase11getInstanceEv>
 800a70a:	4604      	mov	r4, r0
 800a70c:	f7fe fb52 	bl	8008db4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800a710:	4603      	mov	r3, r0
 800a712:	4619      	mov	r1, r3
 800a714:	2300      	movs	r3, #0
 800a716:	9300      	str	r3, [sp, #0]
 800a718:	2300      	movs	r3, #0
 800a71a:	2200      	movs	r2, #0
 800a71c:	4620      	mov	r0, r4
 800a71e:	f004 fc31 	bl	800ef84 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
 800a722:	480c      	ldr	r0, [pc, #48]	; (800a754 <touchgfx_init+0x54>)
 800a724:	f7ff fd68 	bl	800a1f8 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
 800a728:	2000      	movs	r0, #0
 800a72a:	f7fe fb67 	bl	8008dfc <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 800a72e:	480a      	ldr	r0, [pc, #40]	; (800a758 <touchgfx_init+0x58>)
 800a730:	f004 fb76 	bl	800ee20 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
 800a734:	f7ff fed4 	bl	800a4e0 <_ZN12FrontendHeap11getInstanceEv>
 800a738:	6078      	str	r0, [r7, #4]
  (void)heap; // we need to obtain the reference above to initialize the frontend heap.

  hal.initialize();
 800a73a:	4808      	ldr	r0, [pc, #32]	; (800a75c <touchgfx_init+0x5c>)
 800a73c:	f7fe fff6 	bl	800972c <_ZN11TouchGFXHAL10initializeEv>
  hal.enableLCDControllerInterrupt();
 800a740:	4806      	ldr	r0, [pc, #24]	; (800a75c <touchgfx_init+0x5c>)
 800a742:	f7ff f84c 	bl	80097de <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>
  hal.enableInterrupts();
 800a746:	4805      	ldr	r0, [pc, #20]	; (800a75c <touchgfx_init+0x5c>)
 800a748:	f7ff f831 	bl	80097ae <_ZN11TouchGFXHAL16enableInterruptsEv>
}
 800a74c:	bf00      	nop
 800a74e:	370c      	adds	r7, #12
 800a750:	46bd      	mov	sp, r7
 800a752:	bd90      	pop	{r4, r7, pc}
 800a754:	2000142c 	.word	0x2000142c
 800a758:	20000020 	.word	0x20000020
 800a75c:	20001430 	.word	0x20001430

0800a760 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800a760:	b580      	push	{r7, lr}
 800a762:	af00      	add	r7, sp, #0
 /*
  * This function check if a VSYNC has occured.
  * If VSYNC has occured, signal TouchGFX to start a rendering
  */
  OSWrappers::waitForVSync();
 800a764:	f7ff f8c2 	bl	80098ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
}
 800a768:	bf00      	nop
 800a76a:	bd80      	pop	{r7, pc}

0800a76c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs an empty Partition.
     */
    Partition() : AbstractPartition()
 800a76c:	b580      	push	{r7, lr}
 800a76e:	b082      	sub	sp, #8
 800a770:	af00      	add	r7, sp, #0
 800a772:	6078      	str	r0, [r7, #4]
 800a774:	687b      	ldr	r3, [r7, #4]
 800a776:	4618      	mov	r0, r3
 800a778:	f000 fc64 	bl	800b044 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800a77c:	4a03      	ldr	r2, [pc, #12]	; (800a78c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800a77e:	687b      	ldr	r3, [r7, #4]
 800a780:	601a      	str	r2, [r3, #0]
    {
    }
 800a782:	687b      	ldr	r3, [r7, #4]
 800a784:	4618      	mov	r0, r3
 800a786:	3708      	adds	r7, #8
 800a788:	46bd      	mov	sp, r7
 800a78a:	bd80      	pop	{r7, pc}
 800a78c:	0801c6fc 	.word	0x0801c6fc

0800a790 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    /**
     * @fn virtual Partition::~Partition()
     *
     * @brief Destructor.
     */
    virtual ~Partition()
 800a790:	b580      	push	{r7, lr}
 800a792:	b082      	sub	sp, #8
 800a794:	af00      	add	r7, sp, #0
 800a796:	6078      	str	r0, [r7, #4]
    {
    }
 800a798:	4a05      	ldr	r2, [pc, #20]	; (800a7b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800a79a:	687b      	ldr	r3, [r7, #4]
 800a79c:	601a      	str	r2, [r3, #0]
 800a79e:	687b      	ldr	r3, [r7, #4]
 800a7a0:	4618      	mov	r0, r3
 800a7a2:	f000 fc4d 	bl	800b040 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800a7a6:	687b      	ldr	r3, [r7, #4]
 800a7a8:	4618      	mov	r0, r3
 800a7aa:	3708      	adds	r7, #8
 800a7ac:	46bd      	mov	sp, r7
 800a7ae:	bd80      	pop	{r7, pc}
 800a7b0:	0801c6fc 	.word	0x0801c6fc

0800a7b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800a7b4:	b580      	push	{r7, lr}
 800a7b6:	b082      	sub	sp, #8
 800a7b8:	af00      	add	r7, sp, #0
 800a7ba:	6078      	str	r0, [r7, #4]
    }
 800a7bc:	6878      	ldr	r0, [r7, #4]
 800a7be:	f7ff ffe7 	bl	800a790 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a7c2:	2118      	movs	r1, #24
 800a7c4:	6878      	ldr	r0, [r7, #4]
 800a7c6:	f010 f87a 	bl	801a8be <_ZdlPvj>
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	4618      	mov	r0, r3
 800a7ce:	3708      	adds	r7, #8
 800a7d0:	46bd      	mov	sp, r7
 800a7d2:	bd80      	pop	{r7, pc}

0800a7d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800a7d4:	b580      	push	{r7, lr}
 800a7d6:	b082      	sub	sp, #8
 800a7d8:	af00      	add	r7, sp, #0
 800a7da:	6078      	str	r0, [r7, #4]
 800a7dc:	687b      	ldr	r3, [r7, #4]
 800a7de:	4618      	mov	r0, r3
 800a7e0:	f000 fc30 	bl	800b044 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800a7e4:	4a03      	ldr	r2, [pc, #12]	; (800a7f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800a7e6:	687b      	ldr	r3, [r7, #4]
 800a7e8:	601a      	str	r2, [r3, #0]
    }
 800a7ea:	687b      	ldr	r3, [r7, #4]
 800a7ec:	4618      	mov	r0, r3
 800a7ee:	3708      	adds	r7, #8
 800a7f0:	46bd      	mov	sp, r7
 800a7f2:	bd80      	pop	{r7, pc}
 800a7f4:	0801c6c8 	.word	0x0801c6c8

0800a7f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800a7f8:	b580      	push	{r7, lr}
 800a7fa:	b082      	sub	sp, #8
 800a7fc:	af00      	add	r7, sp, #0
 800a7fe:	6078      	str	r0, [r7, #4]
    }
 800a800:	4a05      	ldr	r2, [pc, #20]	; (800a818 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800a802:	687b      	ldr	r3, [r7, #4]
 800a804:	601a      	str	r2, [r3, #0]
 800a806:	687b      	ldr	r3, [r7, #4]
 800a808:	4618      	mov	r0, r3
 800a80a:	f000 fc19 	bl	800b040 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800a80e:	687b      	ldr	r3, [r7, #4]
 800a810:	4618      	mov	r0, r3
 800a812:	3708      	adds	r7, #8
 800a814:	46bd      	mov	sp, r7
 800a816:	bd80      	pop	{r7, pc}
 800a818:	0801c6c8 	.word	0x0801c6c8

0800a81c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800a81c:	b580      	push	{r7, lr}
 800a81e:	b082      	sub	sp, #8
 800a820:	af00      	add	r7, sp, #0
 800a822:	6078      	str	r0, [r7, #4]
    }
 800a824:	6878      	ldr	r0, [r7, #4]
 800a826:	f7ff ffe7 	bl	800a7f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a82a:	21ac      	movs	r1, #172	; 0xac
 800a82c:	6878      	ldr	r0, [r7, #4]
 800a82e:	f010 f846 	bl	801a8be <_ZdlPvj>
 800a832:	687b      	ldr	r3, [r7, #4]
 800a834:	4618      	mov	r0, r3
 800a836:	3708      	adds	r7, #8
 800a838:	46bd      	mov	sp, r7
 800a83a:	bd80      	pop	{r7, pc}

0800a83c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800a83c:	b580      	push	{r7, lr}
 800a83e:	b082      	sub	sp, #8
 800a840:	af00      	add	r7, sp, #0
 800a842:	6078      	str	r0, [r7, #4]
 800a844:	687b      	ldr	r3, [r7, #4]
 800a846:	4618      	mov	r0, r3
 800a848:	f000 fbfc 	bl	800b044 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800a84c:	4a03      	ldr	r2, [pc, #12]	; (800a85c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	601a      	str	r2, [r3, #0]
    }
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	4618      	mov	r0, r3
 800a856:	3708      	adds	r7, #8
 800a858:	46bd      	mov	sp, r7
 800a85a:	bd80      	pop	{r7, pc}
 800a85c:	0801c694 	.word	0x0801c694

0800a860 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800a860:	b580      	push	{r7, lr}
 800a862:	b082      	sub	sp, #8
 800a864:	af00      	add	r7, sp, #0
 800a866:	6078      	str	r0, [r7, #4]
    }
 800a868:	4a05      	ldr	r2, [pc, #20]	; (800a880 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800a86a:	687b      	ldr	r3, [r7, #4]
 800a86c:	601a      	str	r2, [r3, #0]
 800a86e:	687b      	ldr	r3, [r7, #4]
 800a870:	4618      	mov	r0, r3
 800a872:	f000 fbe5 	bl	800b040 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800a876:	687b      	ldr	r3, [r7, #4]
 800a878:	4618      	mov	r0, r3
 800a87a:	3708      	adds	r7, #8
 800a87c:	46bd      	mov	sp, r7
 800a87e:	bd80      	pop	{r7, pc}
 800a880:	0801c694 	.word	0x0801c694

0800a884 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800a884:	b580      	push	{r7, lr}
 800a886:	b082      	sub	sp, #8
 800a888:	af00      	add	r7, sp, #0
 800a88a:	6078      	str	r0, [r7, #4]
    }
 800a88c:	6878      	ldr	r0, [r7, #4]
 800a88e:	f7ff ffe7 	bl	800a860 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a892:	2114      	movs	r1, #20
 800a894:	6878      	ldr	r0, [r7, #4]
 800a896:	f010 f812 	bl	801a8be <_ZdlPvj>
 800a89a:	687b      	ldr	r3, [r7, #4]
 800a89c:	4618      	mov	r0, r3
 800a89e:	3708      	adds	r7, #8
 800a8a0:	46bd      	mov	sp, r7
 800a8a2:	bd80      	pop	{r7, pc}

0800a8a4 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800a8a4:	b580      	push	{r7, lr}
 800a8a6:	b082      	sub	sp, #8
 800a8a8:	af00      	add	r7, sp, #0
 800a8aa:	6078      	str	r0, [r7, #4]
 800a8ac:	4a0f      	ldr	r2, [pc, #60]	; (800a8ec <_ZN12FrontendHeapD1Ev+0x48>)
 800a8ae:	687b      	ldr	r3, [r7, #4]
 800a8b0:	601a      	str	r2, [r3, #0]
 800a8b2:	687b      	ldr	r3, [r7, #4]
 800a8b4:	33ec      	adds	r3, #236	; 0xec
 800a8b6:	4618      	mov	r0, r3
 800a8b8:	f7fe fb4c 	bl	8008f54 <_ZN19FrontendApplicationD1Ev>
 800a8bc:	687b      	ldr	r3, [r7, #4]
 800a8be:	33d8      	adds	r3, #216	; 0xd8
 800a8c0:	4618      	mov	r0, r3
 800a8c2:	f7ff ffcd 	bl	800a860 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a8c6:	687b      	ldr	r3, [r7, #4]
 800a8c8:	332c      	adds	r3, #44	; 0x2c
 800a8ca:	4618      	mov	r0, r3
 800a8cc:	f7ff ff94 	bl	800a7f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a8d0:	687b      	ldr	r3, [r7, #4]
 800a8d2:	3314      	adds	r3, #20
 800a8d4:	4618      	mov	r0, r3
 800a8d6:	f7ff ff5b 	bl	800a790 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a8da:	687b      	ldr	r3, [r7, #4]
 800a8dc:	4618      	mov	r0, r3
 800a8de:	f7ff fe2d 	bl	800a53c <_ZN16FrontendHeapBaseD1Ev>
 800a8e2:	687b      	ldr	r3, [r7, #4]
 800a8e4:	4618      	mov	r0, r3
 800a8e6:	3708      	adds	r7, #8
 800a8e8:	46bd      	mov	sp, r7
 800a8ea:	bd80      	pop	{r7, pc}
 800a8ec:	0801c680 	.word	0x0801c680

0800a8f0 <_ZN12FrontendHeapD0Ev>:
 800a8f0:	b580      	push	{r7, lr}
 800a8f2:	b082      	sub	sp, #8
 800a8f4:	af00      	add	r7, sp, #0
 800a8f6:	6078      	str	r0, [r7, #4]
 800a8f8:	6878      	ldr	r0, [r7, #4]
 800a8fa:	f7ff ffd3 	bl	800a8a4 <_ZN12FrontendHeapD1Ev>
 800a8fe:	f44f 7110 	mov.w	r1, #576	; 0x240
 800a902:	6878      	ldr	r0, [r7, #4]
 800a904:	f00f ffdb 	bl	801a8be <_ZdlPvj>
 800a908:	687b      	ldr	r3, [r7, #4]
 800a90a:	4618      	mov	r0, r3
 800a90c:	3708      	adds	r7, #8
 800a90e:	46bd      	mov	sp, r7
 800a910:	bd80      	pop	{r7, pc}
	...

0800a914 <_Z41__static_initialization_and_destruction_0ii>:
 800a914:	b580      	push	{r7, lr}
 800a916:	b084      	sub	sp, #16
 800a918:	af02      	add	r7, sp, #8
 800a91a:	6078      	str	r0, [r7, #4]
 800a91c:	6039      	str	r1, [r7, #0]
 800a91e:	687b      	ldr	r3, [r7, #4]
 800a920:	2b01      	cmp	r3, #1
 800a922:	d118      	bne.n	800a956 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800a924:	683b      	ldr	r3, [r7, #0]
 800a926:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a92a:	4293      	cmp	r3, r2
 800a92c:	d113      	bne.n	800a956 <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800a92e:	4817      	ldr	r0, [pc, #92]	; (800a98c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800a930:	f7ff fed4 	bl	800a6dc <_ZN20STM32TouchControllerC1Ev>
static STM32F4DMA dma;
 800a934:	4816      	ldr	r0, [pc, #88]	; (800a990 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800a936:	f7ff f959 	bl	8009bec <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 800a93a:	4816      	ldr	r0, [pc, #88]	; (800a994 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800a93c:	f007 fb26 	bl	8011f8c <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 800a940:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800a944:	9301      	str	r3, [sp, #4]
 800a946:	23f0      	movs	r3, #240	; 0xf0
 800a948:	9300      	str	r3, [sp, #0]
 800a94a:	4b10      	ldr	r3, [pc, #64]	; (800a98c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800a94c:	4a11      	ldr	r2, [pc, #68]	; (800a994 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800a94e:	4910      	ldr	r1, [pc, #64]	; (800a990 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800a950:	4811      	ldr	r0, [pc, #68]	; (800a998 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800a952:	f7ff fe97 	bl	800a684 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800a956:	687b      	ldr	r3, [r7, #4]
 800a958:	2b00      	cmp	r3, #0
 800a95a:	d113      	bne.n	800a984 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800a95c:	683b      	ldr	r3, [r7, #0]
 800a95e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a962:	4293      	cmp	r3, r2
 800a964:	d10e      	bne.n	800a984 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800a966:	480c      	ldr	r0, [pc, #48]	; (800a998 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800a968:	f7fe ff46 	bl	80097f8 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800a96c:	480b      	ldr	r0, [pc, #44]	; (800a99c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800a96e:	f7fc fd99 	bl	80074a4 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800a972:	4808      	ldr	r0, [pc, #32]	; (800a994 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800a974:	f7ff fe48 	bl	800a608 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32F4DMA dma;
 800a978:	4805      	ldr	r0, [pc, #20]	; (800a990 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800a97a:	f7ff f961 	bl	8009c40 <_ZN10STM32F4DMAD1Ev>
static STM32TouchController tc;
 800a97e:	4803      	ldr	r0, [pc, #12]	; (800a98c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800a980:	f7fe fcb0 	bl	80092e4 <_ZN20STM32TouchControllerD1Ev>
}
 800a984:	bf00      	nop
 800a986:	3708      	adds	r7, #8
 800a988:	46bd      	mov	sp, r7
 800a98a:	bd80      	pop	{r7, pc}
 800a98c:	20000790 	.word	0x20000790
 800a990:	20000794 	.word	0x20000794
 800a994:	200013b4 	.word	0x200013b4
 800a998:	20001430 	.word	0x20001430
 800a99c:	20000020 	.word	0x20000020

0800a9a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     *
     * @return An uint16_t.
     *
     * @see touchgfx::AbstractPartition::capacity()
     */
    virtual uint16_t capacity() const
 800a9a0:	b480      	push	{r7}
 800a9a2:	b083      	sub	sp, #12
 800a9a4:	af00      	add	r7, sp, #0
 800a9a6:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800a9a8:	2301      	movs	r3, #1
    }
 800a9aa:	4618      	mov	r0, r3
 800a9ac:	370c      	adds	r7, #12
 800a9ae:	46bd      	mov	sp, r7
 800a9b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9b4:	4770      	bx	lr

0800a9b6 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     *
     * @return An uint32_t.
     *
     * @see touchgfx::AbstractPartition::element_size()
     */
    virtual uint32_t element_size()
 800a9b6:	b480      	push	{r7}
 800a9b8:	b083      	sub	sp, #12
 800a9ba:	af00      	add	r7, sp, #0
 800a9bc:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800a9be:	230c      	movs	r3, #12
    }
 800a9c0:	4618      	mov	r0, r3
 800a9c2:	370c      	adds	r7, #12
 800a9c4:	46bd      	mov	sp, r7
 800a9c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9ca:	4770      	bx	lr

0800a9cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual void* element(uint16_t index)
 800a9cc:	b480      	push	{r7}
 800a9ce:	b083      	sub	sp, #12
 800a9d0:	af00      	add	r7, sp, #0
 800a9d2:	6078      	str	r0, [r7, #4]
 800a9d4:	460b      	mov	r3, r1
 800a9d6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800a9d8:	887a      	ldrh	r2, [r7, #2]
 800a9da:	4613      	mov	r3, r2
 800a9dc:	005b      	lsls	r3, r3, #1
 800a9de:	4413      	add	r3, r2
 800a9e0:	009b      	lsls	r3, r3, #2
 800a9e2:	3308      	adds	r3, #8
 800a9e4:	687a      	ldr	r2, [r7, #4]
 800a9e6:	4413      	add	r3, r2
    }
 800a9e8:	4618      	mov	r0, r3
 800a9ea:	370c      	adds	r7, #12
 800a9ec:	46bd      	mov	sp, r7
 800a9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9f2:	4770      	bx	lr

0800a9f4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual const void* element(uint16_t index) const
 800a9f4:	b480      	push	{r7}
 800a9f6:	b083      	sub	sp, #12
 800a9f8:	af00      	add	r7, sp, #0
 800a9fa:	6078      	str	r0, [r7, #4]
 800a9fc:	460b      	mov	r3, r1
 800a9fe:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800aa00:	887a      	ldrh	r2, [r7, #2]
 800aa02:	4613      	mov	r3, r2
 800aa04:	005b      	lsls	r3, r3, #1
 800aa06:	4413      	add	r3, r2
 800aa08:	009b      	lsls	r3, r3, #2
 800aa0a:	3308      	adds	r3, #8
 800aa0c:	687a      	ldr	r2, [r7, #4]
 800aa0e:	4413      	add	r3, r2
    }
 800aa10:	4618      	mov	r0, r3
 800aa12:	370c      	adds	r7, #12
 800aa14:	46bd      	mov	sp, r7
 800aa16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa1a:	4770      	bx	lr

0800aa1c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800aa1c:	b480      	push	{r7}
 800aa1e:	b083      	sub	sp, #12
 800aa20:	af00      	add	r7, sp, #0
 800aa22:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800aa24:	2301      	movs	r3, #1
    }
 800aa26:	4618      	mov	r0, r3
 800aa28:	370c      	adds	r7, #12
 800aa2a:	46bd      	mov	sp, r7
 800aa2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa30:	4770      	bx	lr

0800aa32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800aa32:	b480      	push	{r7}
 800aa34:	b083      	sub	sp, #12
 800aa36:	af00      	add	r7, sp, #0
 800aa38:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800aa3a:	23a4      	movs	r3, #164	; 0xa4
    }
 800aa3c:	4618      	mov	r0, r3
 800aa3e:	370c      	adds	r7, #12
 800aa40:	46bd      	mov	sp, r7
 800aa42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa46:	4770      	bx	lr

0800aa48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800aa48:	b480      	push	{r7}
 800aa4a:	b083      	sub	sp, #12
 800aa4c:	af00      	add	r7, sp, #0
 800aa4e:	6078      	str	r0, [r7, #4]
 800aa50:	460b      	mov	r3, r1
 800aa52:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800aa54:	887b      	ldrh	r3, [r7, #2]
 800aa56:	22a4      	movs	r2, #164	; 0xa4
 800aa58:	fb02 f303 	mul.w	r3, r2, r3
 800aa5c:	3308      	adds	r3, #8
 800aa5e:	687a      	ldr	r2, [r7, #4]
 800aa60:	4413      	add	r3, r2
    }
 800aa62:	4618      	mov	r0, r3
 800aa64:	370c      	adds	r7, #12
 800aa66:	46bd      	mov	sp, r7
 800aa68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa6c:	4770      	bx	lr

0800aa6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800aa6e:	b480      	push	{r7}
 800aa70:	b083      	sub	sp, #12
 800aa72:	af00      	add	r7, sp, #0
 800aa74:	6078      	str	r0, [r7, #4]
 800aa76:	460b      	mov	r3, r1
 800aa78:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800aa7a:	887b      	ldrh	r3, [r7, #2]
 800aa7c:	22a4      	movs	r2, #164	; 0xa4
 800aa7e:	fb02 f303 	mul.w	r3, r2, r3
 800aa82:	3308      	adds	r3, #8
 800aa84:	687a      	ldr	r2, [r7, #4]
 800aa86:	4413      	add	r3, r2
    }
 800aa88:	4618      	mov	r0, r3
 800aa8a:	370c      	adds	r7, #12
 800aa8c:	46bd      	mov	sp, r7
 800aa8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa92:	4770      	bx	lr

0800aa94 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800aa94:	b480      	push	{r7}
 800aa96:	b083      	sub	sp, #12
 800aa98:	af00      	add	r7, sp, #0
 800aa9a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800aa9c:	2301      	movs	r3, #1
    }
 800aa9e:	4618      	mov	r0, r3
 800aaa0:	370c      	adds	r7, #12
 800aaa2:	46bd      	mov	sp, r7
 800aaa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaa8:	4770      	bx	lr

0800aaaa <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800aaaa:	b480      	push	{r7}
 800aaac:	b083      	sub	sp, #12
 800aaae:	af00      	add	r7, sp, #0
 800aab0:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800aab2:	2310      	movs	r3, #16
    }
 800aab4:	4618      	mov	r0, r3
 800aab6:	370c      	adds	r7, #12
 800aab8:	46bd      	mov	sp, r7
 800aaba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aabe:	4770      	bx	lr

0800aac0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800aac0:	b480      	push	{r7}
 800aac2:	b083      	sub	sp, #12
 800aac4:	af00      	add	r7, sp, #0
 800aac6:	6078      	str	r0, [r7, #4]
 800aac8:	460b      	mov	r3, r1
 800aaca:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800aacc:	887b      	ldrh	r3, [r7, #2]
 800aace:	011b      	lsls	r3, r3, #4
 800aad0:	3308      	adds	r3, #8
 800aad2:	687a      	ldr	r2, [r7, #4]
 800aad4:	4413      	add	r3, r2
    }
 800aad6:	4618      	mov	r0, r3
 800aad8:	370c      	adds	r7, #12
 800aada:	46bd      	mov	sp, r7
 800aadc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aae0:	4770      	bx	lr

0800aae2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800aae2:	b480      	push	{r7}
 800aae4:	b083      	sub	sp, #12
 800aae6:	af00      	add	r7, sp, #0
 800aae8:	6078      	str	r0, [r7, #4]
 800aaea:	460b      	mov	r3, r1
 800aaec:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800aaee:	887b      	ldrh	r3, [r7, #2]
 800aaf0:	011b      	lsls	r3, r3, #4
 800aaf2:	3308      	adds	r3, #8
 800aaf4:	687a      	ldr	r2, [r7, #4]
 800aaf6:	4413      	add	r3, r2
    }
 800aaf8:	4618      	mov	r0, r3
 800aafa:	370c      	adds	r7, #12
 800aafc:	46bd      	mov	sp, r7
 800aafe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab02:	4770      	bx	lr

0800ab04 <_GLOBAL__sub_I_touchgfx_init>:
 800ab04:	b580      	push	{r7, lr}
 800ab06:	af00      	add	r7, sp, #0
 800ab08:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ab0c:	2001      	movs	r0, #1
 800ab0e:	f7ff ff01 	bl	800a914 <_Z41__static_initialization_and_destruction_0ii>
 800ab12:	bd80      	pop	{r7, pc}

0800ab14 <_GLOBAL__sub_D_touchgfx_init>:
 800ab14:	b580      	push	{r7, lr}
 800ab16:	af00      	add	r7, sp, #0
 800ab18:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ab1c:	2000      	movs	r0, #0
 800ab1e:	f7ff fef9 	bl	800a914 <_Z41__static_initialization_and_destruction_0ii>
 800ab22:	bd80      	pop	{r7, pc}

0800ab24 <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800ab24:	b580      	push	{r7, lr}
 800ab26:	b082      	sub	sp, #8
 800ab28:	af00      	add	r7, sp, #0
 800ab2a:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800ab2c:	687b      	ldr	r3, [r7, #4]
 800ab2e:	681b      	ldr	r3, [r3, #0]
 800ab30:	3318      	adds	r3, #24
 800ab32:	681b      	ldr	r3, [r3, #0]
 800ab34:	6878      	ldr	r0, [r7, #4]
 800ab36:	4798      	blx	r3
    }
 800ab38:	bf00      	nop
 800ab3a:	3708      	adds	r7, #8
 800ab3c:	46bd      	mov	sp, r7
 800ab3e:	bd80      	pop	{r7, pc}

0800ab40 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>:
    void lockDMAToFrontPorch(bool enableLock)
 800ab40:	b480      	push	{r7}
 800ab42:	b083      	sub	sp, #12
 800ab44:	af00      	add	r7, sp, #0
 800ab46:	6078      	str	r0, [r7, #4]
 800ab48:	460b      	mov	r3, r1
 800ab4a:	70fb      	strb	r3, [r7, #3]
        lockDMAToPorch = enableLock;
 800ab4c:	687b      	ldr	r3, [r7, #4]
 800ab4e:	78fa      	ldrb	r2, [r7, #3]
 800ab50:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
    }
 800ab54:	bf00      	nop
 800ab56:	370c      	adds	r7, #12
 800ab58:	46bd      	mov	sp, r7
 800ab5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab5e:	4770      	bx	lr

0800ab60 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800ab60:	b480      	push	{r7}
 800ab62:	b083      	sub	sp, #12
 800ab64:	af00      	add	r7, sp, #0
 800ab66:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800ab68:	687b      	ldr	r3, [r7, #4]
 800ab6a:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 800ab6e:	3301      	adds	r3, #1
 800ab70:	b2da      	uxtb	r2, r3
 800ab72:	687b      	ldr	r3, [r7, #4]
 800ab74:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 800ab78:	bf00      	nop
 800ab7a:	370c      	adds	r7, #12
 800ab7c:	46bd      	mov	sp, r7
 800ab7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab82:	4770      	bx	lr

0800ab84 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800ab84:	b580      	push	{r7, lr}
 800ab86:	b082      	sub	sp, #8
 800ab88:	af00      	add	r7, sp, #0
 800ab8a:	6078      	str	r0, [r7, #4]
 800ab8c:	460b      	mov	r3, r1
 800ab8e:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800ab90:	78fb      	ldrb	r3, [r7, #3]
 800ab92:	2b00      	cmp	r3, #0
 800ab94:	d002      	beq.n	800ab9c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800ab96:	78fb      	ldrb	r3, [r7, #3]
 800ab98:	2b02      	cmp	r3, #2
 800ab9a:	d105      	bne.n	800aba8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800ab9c:	687b      	ldr	r3, [r7, #4]
 800ab9e:	78fa      	ldrb	r2, [r7, #3]
 800aba0:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800aba4:	2301      	movs	r3, #1
 800aba6:	e027      	b.n	800abf8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        else if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800aba8:	78fb      	ldrb	r3, [r7, #3]
 800abaa:	2b01      	cmp	r3, #1
 800abac:	d123      	bne.n	800abf6 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800abae:	687b      	ldr	r3, [r7, #4]
 800abb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800abb2:	2b00      	cmp	r3, #0
 800abb4:	d014      	beq.n	800abe0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800abb6:	687b      	ldr	r3, [r7, #4]
 800abb8:	681b      	ldr	r3, [r3, #0]
 800abba:	3380      	adds	r3, #128	; 0x80
 800abbc:	681b      	ldr	r3, [r3, #0]
 800abbe:	6878      	ldr	r0, [r7, #4]
 800abc0:	4798      	blx	r3
 800abc2:	4603      	mov	r3, r0
 800abc4:	461a      	mov	r2, r3
 800abc6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800abca:	429a      	cmp	r2, r3
 800abcc:	d008      	beq.n	800abe0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800abce:	4b0c      	ldr	r3, [pc, #48]	; (800ac00 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800abd0:	781b      	ldrb	r3, [r3, #0]
 800abd2:	f083 0301 	eor.w	r3, r3, #1
 800abd6:	b2db      	uxtb	r3, r3
 800abd8:	2b00      	cmp	r3, #0
 800abda:	d001      	beq.n	800abe0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800abdc:	2301      	movs	r3, #1
 800abde:	e000      	b.n	800abe2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800abe0:	2300      	movs	r3, #0
 800abe2:	2b00      	cmp	r3, #0
 800abe4:	d005      	beq.n	800abf2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800abe6:	687b      	ldr	r3, [r7, #4]
 800abe8:	78fa      	ldrb	r2, [r7, #3]
 800abea:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800abee:	2301      	movs	r3, #1
 800abf0:	e002      	b.n	800abf8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800abf2:	2300      	movs	r3, #0
 800abf4:	e000      	b.n	800abf8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800abf6:	2300      	movs	r3, #0
    }
 800abf8:	4618      	mov	r0, r3
 800abfa:	3708      	adds	r7, #8
 800abfc:	46bd      	mov	sp, r7
 800abfe:	bd80      	pop	{r7, pc}
 800ac00:	200014b6 	.word	0x200014b6

0800ac04 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void(*delayF)(uint16_t))
 800ac04:	b480      	push	{r7}
 800ac06:	b083      	sub	sp, #12
 800ac08:	af00      	add	r7, sp, #0
 800ac0a:	6078      	str	r0, [r7, #4]
 800ac0c:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 800ac0e:	687b      	ldr	r3, [r7, #4]
 800ac10:	683a      	ldr	r2, [r7, #0]
 800ac12:	639a      	str	r2, [r3, #56]	; 0x38
    }
 800ac14:	bf00      	nop
 800ac16:	370c      	adds	r7, #12
 800ac18:	46bd      	mov	sp, r7
 800ac1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac1e:	4770      	bx	lr

0800ac20 <__NVIC_EnableIRQ>:
{
 800ac20:	b480      	push	{r7}
 800ac22:	b083      	sub	sp, #12
 800ac24:	af00      	add	r7, sp, #0
 800ac26:	4603      	mov	r3, r0
 800ac28:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800ac2a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ac2e:	2b00      	cmp	r3, #0
 800ac30:	db0b      	blt.n	800ac4a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800ac32:	79fb      	ldrb	r3, [r7, #7]
 800ac34:	f003 021f 	and.w	r2, r3, #31
 800ac38:	4907      	ldr	r1, [pc, #28]	; (800ac58 <__NVIC_EnableIRQ+0x38>)
 800ac3a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ac3e:	095b      	lsrs	r3, r3, #5
 800ac40:	2001      	movs	r0, #1
 800ac42:	fa00 f202 	lsl.w	r2, r0, r2
 800ac46:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800ac4a:	bf00      	nop
 800ac4c:	370c      	adds	r7, #12
 800ac4e:	46bd      	mov	sp, r7
 800ac50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac54:	4770      	bx	lr
 800ac56:	bf00      	nop
 800ac58:	e000e100 	.word	0xe000e100

0800ac5c <__NVIC_DisableIRQ>:
{
 800ac5c:	b480      	push	{r7}
 800ac5e:	b083      	sub	sp, #12
 800ac60:	af00      	add	r7, sp, #0
 800ac62:	4603      	mov	r3, r0
 800ac64:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800ac66:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ac6a:	2b00      	cmp	r3, #0
 800ac6c:	db12      	blt.n	800ac94 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800ac6e:	79fb      	ldrb	r3, [r7, #7]
 800ac70:	f003 021f 	and.w	r2, r3, #31
 800ac74:	490a      	ldr	r1, [pc, #40]	; (800aca0 <__NVIC_DisableIRQ+0x44>)
 800ac76:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ac7a:	095b      	lsrs	r3, r3, #5
 800ac7c:	2001      	movs	r0, #1
 800ac7e:	fa00 f202 	lsl.w	r2, r0, r2
 800ac82:	3320      	adds	r3, #32
 800ac84:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800ac88:	f3bf 8f4f 	dsb	sy
}
 800ac8c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800ac8e:	f3bf 8f6f 	isb	sy
}
 800ac92:	bf00      	nop
}
 800ac94:	bf00      	nop
 800ac96:	370c      	adds	r7, #12
 800ac98:	46bd      	mov	sp, r7
 800ac9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac9e:	4770      	bx	lr
 800aca0:	e000e100 	.word	0xe000e100

0800aca4 <__NVIC_SetPriority>:
{
 800aca4:	b480      	push	{r7}
 800aca6:	b083      	sub	sp, #12
 800aca8:	af00      	add	r7, sp, #0
 800acaa:	4603      	mov	r3, r0
 800acac:	6039      	str	r1, [r7, #0]
 800acae:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800acb0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800acb4:	2b00      	cmp	r3, #0
 800acb6:	db0a      	blt.n	800acce <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800acb8:	683b      	ldr	r3, [r7, #0]
 800acba:	b2da      	uxtb	r2, r3
 800acbc:	490c      	ldr	r1, [pc, #48]	; (800acf0 <__NVIC_SetPriority+0x4c>)
 800acbe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800acc2:	0112      	lsls	r2, r2, #4
 800acc4:	b2d2      	uxtb	r2, r2
 800acc6:	440b      	add	r3, r1
 800acc8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800accc:	e00a      	b.n	800ace4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800acce:	683b      	ldr	r3, [r7, #0]
 800acd0:	b2da      	uxtb	r2, r3
 800acd2:	4908      	ldr	r1, [pc, #32]	; (800acf4 <__NVIC_SetPriority+0x50>)
 800acd4:	79fb      	ldrb	r3, [r7, #7]
 800acd6:	f003 030f 	and.w	r3, r3, #15
 800acda:	3b04      	subs	r3, #4
 800acdc:	0112      	lsls	r2, r2, #4
 800acde:	b2d2      	uxtb	r2, r2
 800ace0:	440b      	add	r3, r1
 800ace2:	761a      	strb	r2, [r3, #24]
}
 800ace4:	bf00      	nop
 800ace6:	370c      	adds	r7, #12
 800ace8:	46bd      	mov	sp, r7
 800acea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acee:	4770      	bx	lr
 800acf0:	e000e100 	.word	0xe000e100
 800acf4:	e000ed00 	.word	0xe000ed00

0800acf8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800acf8:	b5b0      	push	{r4, r5, r7, lr}
 800acfa:	b082      	sub	sp, #8
 800acfc:	af00      	add	r7, sp, #0
 800acfe:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800ad00:	687b      	ldr	r3, [r7, #4]
 800ad02:	4618      	mov	r0, r3
 800ad04:	f000 fe76 	bl	800b9f4 <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(touchgfx::Application::getInstance()));
 800ad08:	687d      	ldr	r5, [r7, #4]
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	681b      	ldr	r3, [r3, #0]
 800ad0e:	334c      	adds	r3, #76	; 0x4c
 800ad10:	681c      	ldr	r4, [r3, #0]
 800ad12:	f002 fb85 	bl	800d420 <_ZN8touchgfx11Application11getInstanceEv>
 800ad16:	4603      	mov	r3, r0
 800ad18:	4619      	mov	r1, r3
 800ad1a:	4628      	mov	r0, r5
 800ad1c:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 800ad1e:	687b      	ldr	r3, [r7, #4]
 800ad20:	490d      	ldr	r1, [pc, #52]	; (800ad58 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x60>)
 800ad22:	4618      	mov	r0, r3
 800ad24:	f7ff ff6e 	bl	800ac04 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800ad28:	687b      	ldr	r3, [r7, #4]
 800ad2a:	2101      	movs	r1, #1
 800ad2c:	4618      	mov	r0, r3
 800ad2e:	f7ff ff29 	bl	800ab84 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>

    setFrameBufferStartAddresses((void*)0xd0000000, (void*)0, (void*)0);
 800ad32:	6878      	ldr	r0, [r7, #4]
 800ad34:	687b      	ldr	r3, [r7, #4]
 800ad36:	681b      	ldr	r3, [r3, #0]
 800ad38:	3374      	adds	r3, #116	; 0x74
 800ad3a:	681c      	ldr	r4, [r3, #0]
 800ad3c:	2300      	movs	r3, #0
 800ad3e:	2200      	movs	r2, #0
 800ad40:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 800ad44:	47a0      	blx	r4
     * Set whether the DMA transfers are locked to the TFT update cycle. If
     * locked, DMA transfer will not begin until the TFT controller has finished
     * updating the display. If not locked, DMA transfers will begin as soon as
     * possible. Default is true (DMA is locked with TFT).
     */
    lockDMAToFrontPorch(true);
 800ad46:	687b      	ldr	r3, [r7, #4]
 800ad48:	2101      	movs	r1, #1
 800ad4a:	4618      	mov	r0, r3
 800ad4c:	f7ff fef8 	bl	800ab40 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>
}
 800ad50:	bf00      	nop
 800ad52:	3708      	adds	r7, #8
 800ad54:	46bd      	mov	sp, r7
 800ad56:	bdb0      	pop	{r4, r5, r7, pc}
 800ad58:	08009921 	.word	0x08009921

0800ad5c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800ad5c:	b580      	push	{r7, lr}
 800ad5e:	b082      	sub	sp, #8
 800ad60:	af00      	add	r7, sp, #0
 800ad62:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800ad64:	2109      	movs	r1, #9
 800ad66:	205a      	movs	r0, #90	; 0x5a
 800ad68:	f7ff ff9c 	bl	800aca4 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800ad6c:	2109      	movs	r1, #9
 800ad6e:	2058      	movs	r0, #88	; 0x58
 800ad70:	f7ff ff98 	bl	800aca4 <__NVIC_SetPriority>
}
 800ad74:	bf00      	nop
 800ad76:	3708      	adds	r7, #8
 800ad78:	46bd      	mov	sp, r7
 800ad7a:	bd80      	pop	{r7, pc}

0800ad7c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800ad7c:	b580      	push	{r7, lr}
 800ad7e:	b082      	sub	sp, #8
 800ad80:	af00      	add	r7, sp, #0
 800ad82:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800ad84:	205a      	movs	r0, #90	; 0x5a
 800ad86:	f7ff ff4b 	bl	800ac20 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800ad8a:	2058      	movs	r0, #88	; 0x58
 800ad8c:	f7ff ff48 	bl	800ac20 <__NVIC_EnableIRQ>
}
 800ad90:	bf00      	nop
 800ad92:	3708      	adds	r7, #8
 800ad94:	46bd      	mov	sp, r7
 800ad96:	bd80      	pop	{r7, pc}

0800ad98 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800ad98:	b580      	push	{r7, lr}
 800ad9a:	b082      	sub	sp, #8
 800ad9c:	af00      	add	r7, sp, #0
 800ad9e:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800ada0:	205a      	movs	r0, #90	; 0x5a
 800ada2:	f7ff ff5b 	bl	800ac5c <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800ada6:	2058      	movs	r0, #88	; 0x58
 800ada8:	f7ff ff58 	bl	800ac5c <__NVIC_DisableIRQ>
}
 800adac:	bf00      	nop
 800adae:	3708      	adds	r7, #8
 800adb0:	46bd      	mov	sp, r7
 800adb2:	bd80      	pop	{r7, pc}

0800adb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800adb4:	b480      	push	{r7}
 800adb6:	b083      	sub	sp, #12
 800adb8:	af00      	add	r7, sp, #0
 800adba:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800adbc:	4b11      	ldr	r3, [pc, #68]	; (800ae04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800adbe:	68db      	ldr	r3, [r3, #12]
 800adc0:	b29b      	uxth	r3, r3
 800adc2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800adc6:	b29b      	uxth	r3, r3
 800adc8:	3b01      	subs	r3, #1
 800adca:	b29a      	uxth	r2, r3
 800adcc:	4b0e      	ldr	r3, [pc, #56]	; (800ae08 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800adce:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800add0:	4b0c      	ldr	r3, [pc, #48]	; (800ae04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800add2:	691b      	ldr	r3, [r3, #16]
 800add4:	b29b      	uxth	r3, r3
 800add6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800adda:	b29b      	uxth	r3, r3
 800addc:	3b01      	subs	r3, #1
 800adde:	b29a      	uxth	r2, r3
 800ade0:	4b0a      	ldr	r3, [pc, #40]	; (800ae0c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800ade2:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800ade4:	4b08      	ldr	r3, [pc, #32]	; (800ae08 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800ade6:	881a      	ldrh	r2, [r3, #0]
 800ade8:	4b06      	ldr	r3, [pc, #24]	; (800ae04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800adea:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800adec:	4b05      	ldr	r3, [pc, #20]	; (800ae04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800adee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800adf0:	4a04      	ldr	r2, [pc, #16]	; (800ae04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800adf2:	f043 0301 	orr.w	r3, r3, #1
 800adf6:	6353      	str	r3, [r2, #52]	; 0x34
}
 800adf8:	bf00      	nop
 800adfa:	370c      	adds	r7, #12
 800adfc:	46bd      	mov	sp, r7
 800adfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae02:	4770      	bx	lr
 800ae04:	40016800 	.word	0x40016800
 800ae08:	200014a8 	.word	0x200014a8
 800ae0c:	200014aa 	.word	0x200014aa

0800ae10 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800ae10:	b480      	push	{r7}
 800ae12:	b083      	sub	sp, #12
 800ae14:	af00      	add	r7, sp, #0
 800ae16:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800ae18:	4b03      	ldr	r3, [pc, #12]	; (800ae28 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800ae1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 800ae1c:	4618      	mov	r0, r3
 800ae1e:	370c      	adds	r7, #12
 800ae20:	46bd      	mov	sp, r7
 800ae22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae26:	4770      	bx	lr
 800ae28:	40016884 	.word	0x40016884

0800ae2c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800ae2c:	b480      	push	{r7}
 800ae2e:	b083      	sub	sp, #12
 800ae30:	af00      	add	r7, sp, #0
 800ae32:	6078      	str	r0, [r7, #4]
 800ae34:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800ae36:	4a06      	ldr	r2, [pc, #24]	; (800ae50 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800ae38:	683b      	ldr	r3, [r7, #0]
 800ae3a:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800ae3c:	4b05      	ldr	r3, [pc, #20]	; (800ae54 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800ae3e:	2201      	movs	r2, #1
 800ae40:	625a      	str	r2, [r3, #36]	; 0x24
}
 800ae42:	bf00      	nop
 800ae44:	370c      	adds	r7, #12
 800ae46:	46bd      	mov	sp, r7
 800ae48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae4c:	4770      	bx	lr
 800ae4e:	bf00      	nop
 800ae50:	40016884 	.word	0x40016884
 800ae54:	40016800 	.word	0x40016800

0800ae58 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800ae58:	b580      	push	{r7, lr}
 800ae5a:	b082      	sub	sp, #8
 800ae5c:	af00      	add	r7, sp, #0
 800ae5e:	6078      	str	r0, [r7, #4]
 800ae60:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800ae62:	687b      	ldr	r3, [r7, #4]
 800ae64:	6839      	ldr	r1, [r7, #0]
 800ae66:	4618      	mov	r0, r3
 800ae68:	f000 fad4 	bl	800b414 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800ae6c:	bf00      	nop
 800ae6e:	3708      	adds	r7, #8
 800ae70:	46bd      	mov	sp, r7
 800ae72:	bd80      	pop	{r7, pc}

0800ae74 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 800ae74:	b480      	push	{r7}
 800ae76:	b085      	sub	sp, #20
 800ae78:	af00      	add	r7, sp, #0
 800ae7a:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 800ae7c:	4b0d      	ldr	r3, [pc, #52]	; (800aeb4 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800ae7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ae80:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 800ae82:	4b0c      	ldr	r3, [pc, #48]	; (800aeb4 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800ae84:	68db      	ldr	r3, [r3, #12]
 800ae86:	b29b      	uxth	r3, r3
 800ae88:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800ae8c:	b29b      	uxth	r3, r3
 800ae8e:	3301      	adds	r3, #1
 800ae90:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    if (curr < backPorchY)
 800ae92:	89fa      	ldrh	r2, [r7, #14]
 800ae94:	89bb      	ldrh	r3, [r7, #12]
 800ae96:	429a      	cmp	r2, r3
 800ae98:	d201      	bcs.n	800ae9e <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x2a>
    {
        return 0;
 800ae9a:	2300      	movs	r3, #0
 800ae9c:	e003      	b.n	800aea6 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
    }
    else
    {
        return curr - backPorchY;
 800ae9e:	89fa      	ldrh	r2, [r7, #14]
 800aea0:	89bb      	ldrh	r3, [r7, #12]
 800aea2:	1ad3      	subs	r3, r2, r3
 800aea4:	b29b      	uxth	r3, r3
    }
}
 800aea6:	4618      	mov	r0, r3
 800aea8:	3714      	adds	r7, #20
 800aeaa:	46bd      	mov	sp, r7
 800aeac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeb0:	4770      	bx	lr
 800aeb2:	bf00      	nop
 800aeb4:	40016800 	.word	0x40016800

0800aeb8 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
 800aeb8:	b580      	push	{r7, lr}
 800aeba:	b082      	sub	sp, #8
 800aebc:	af00      	add	r7, sp, #0
 800aebe:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
 800aec0:	4b1a      	ldr	r3, [pc, #104]	; (800af2c <HAL_LTDC_LineEventCallback+0x74>)
 800aec2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aec4:	4a1a      	ldr	r2, [pc, #104]	; (800af30 <HAL_LTDC_LineEventCallback+0x78>)
 800aec6:	8812      	ldrh	r2, [r2, #0]
 800aec8:	4293      	cmp	r3, r2
 800aeca:	bf0c      	ite	eq
 800aecc:	2301      	moveq	r3, #1
 800aece:	2300      	movne	r3, #0
 800aed0:	b2db      	uxtb	r3, r3
 800aed2:	2b00      	cmp	r3, #0
 800aed4:	d017      	beq.n	800af06 <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800aed6:	4b17      	ldr	r3, [pc, #92]	; (800af34 <HAL_LTDC_LineEventCallback+0x7c>)
 800aed8:	881b      	ldrh	r3, [r3, #0]
 800aeda:	4619      	mov	r1, r3
 800aedc:	6878      	ldr	r0, [r7, #4]
 800aede:	f7f8 fdc9 	bl	8003a74 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800aee2:	f7fc fed5 	bl	8007c90 <_ZN8touchgfx3HAL11getInstanceEv>
 800aee6:	4603      	mov	r3, r0
 800aee8:	4618      	mov	r0, r3
 800aeea:	f7ff fe39 	bl	800ab60 <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800aeee:	f7fe fcf1 	bl	80098d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800aef2:	f7fc fecd 	bl	8007c90 <_ZN8touchgfx3HAL11getInstanceEv>
 800aef6:	4603      	mov	r3, r0
 800aef8:	4618      	mov	r0, r3
 800aefa:	f001 f803 	bl	800bf04 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800aefe:	2000      	movs	r0, #0
 800af00:	f7fe fa12 	bl	8009328 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 800af04:	e00e      	b.n	800af24 <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800af06:	4b0a      	ldr	r3, [pc, #40]	; (800af30 <HAL_LTDC_LineEventCallback+0x78>)
 800af08:	881b      	ldrh	r3, [r3, #0]
 800af0a:	4619      	mov	r1, r3
 800af0c:	6878      	ldr	r0, [r7, #4]
 800af0e:	f7f8 fdb1 	bl	8003a74 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800af12:	2000      	movs	r0, #0
 800af14:	f7fe fa13 	bl	800933e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
 800af18:	f7fc feba 	bl	8007c90 <_ZN8touchgfx3HAL11getInstanceEv>
 800af1c:	4603      	mov	r3, r0
 800af1e:	4618      	mov	r0, r3
 800af20:	f7ff fe00 	bl	800ab24 <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
 800af24:	bf00      	nop
 800af26:	3708      	adds	r7, #8
 800af28:	46bd      	mov	sp, r7
 800af2a:	bd80      	pop	{r7, pc}
 800af2c:	40016800 	.word	0x40016800
 800af30:	200014a8 	.word	0x200014a8
 800af34:	200014aa 	.word	0x200014aa

0800af38 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800af38:	8880      	ldrh	r0, [r0, #4]
 800af3a:	4770      	bx	lr

0800af3c <_ZN8touchgfx17AbstractPartition5clearEv>:
 800af3c:	2300      	movs	r3, #0
 800af3e:	8083      	strh	r3, [r0, #4]
 800af40:	4770      	bx	lr
	...

0800af44 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800af44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800af46:	6803      	ldr	r3, [r0, #0]
 800af48:	4605      	mov	r5, r0
 800af4a:	460e      	mov	r6, r1
 800af4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800af4e:	2100      	movs	r1, #0
 800af50:	4798      	blx	r3
 800af52:	682b      	ldr	r3, [r5, #0]
 800af54:	4604      	mov	r4, r0
 800af56:	6a1b      	ldr	r3, [r3, #32]
 800af58:	4628      	mov	r0, r5
 800af5a:	4798      	blx	r3
 800af5c:	88ab      	ldrh	r3, [r5, #4]
 800af5e:	1b34      	subs	r4, r6, r4
 800af60:	b2a4      	uxth	r4, r4
 800af62:	fbb4 f4f0 	udiv	r4, r4, r0
 800af66:	42a3      	cmp	r3, r4
 800af68:	d805      	bhi.n	800af76 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800af6a:	4b0e      	ldr	r3, [pc, #56]	; (800afa4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800af6c:	4a0e      	ldr	r2, [pc, #56]	; (800afa8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800af6e:	211e      	movs	r1, #30
 800af70:	480e      	ldr	r0, [pc, #56]	; (800afac <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800af72:	f00f fcd3 	bl	801a91c <__assert_func>
 800af76:	682b      	ldr	r3, [r5, #0]
 800af78:	2100      	movs	r1, #0
 800af7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800af7c:	4628      	mov	r0, r5
 800af7e:	4798      	blx	r3
 800af80:	682b      	ldr	r3, [r5, #0]
 800af82:	4607      	mov	r7, r0
 800af84:	6a1b      	ldr	r3, [r3, #32]
 800af86:	4628      	mov	r0, r5
 800af88:	4798      	blx	r3
 800af8a:	1bf3      	subs	r3, r6, r7
 800af8c:	b29b      	uxth	r3, r3
 800af8e:	fbb3 f2f0 	udiv	r2, r3, r0
 800af92:	fb02 3010 	mls	r0, r2, r0, r3
 800af96:	b118      	cbz	r0, 800afa0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800af98:	4b05      	ldr	r3, [pc, #20]	; (800afb0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800af9a:	4a03      	ldr	r2, [pc, #12]	; (800afa8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800af9c:	211f      	movs	r1, #31
 800af9e:	e7e7      	b.n	800af70 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800afa0:	4620      	mov	r0, r4
 800afa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800afa4:	0801c800 	.word	0x0801c800
 800afa8:	0801c96e 	.word	0x0801c96e
 800afac:	0801c815 	.word	0x0801c815
 800afb0:	0801c843 	.word	0x0801c843

0800afb4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800afb4:	b538      	push	{r3, r4, r5, lr}
 800afb6:	6803      	ldr	r3, [r0, #0]
 800afb8:	6a1b      	ldr	r3, [r3, #32]
 800afba:	460d      	mov	r5, r1
 800afbc:	4604      	mov	r4, r0
 800afbe:	4798      	blx	r3
 800afc0:	4285      	cmp	r5, r0
 800afc2:	d905      	bls.n	800afd0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800afc4:	4b0c      	ldr	r3, [pc, #48]	; (800aff8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800afc6:	4a0d      	ldr	r2, [pc, #52]	; (800affc <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800afc8:	212f      	movs	r1, #47	; 0x2f
 800afca:	480d      	ldr	r0, [pc, #52]	; (800b000 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800afcc:	f00f fca6 	bl	801a91c <__assert_func>
 800afd0:	6823      	ldr	r3, [r4, #0]
 800afd2:	88a5      	ldrh	r5, [r4, #4]
 800afd4:	69db      	ldr	r3, [r3, #28]
 800afd6:	4620      	mov	r0, r4
 800afd8:	4798      	blx	r3
 800afda:	4285      	cmp	r5, r0
 800afdc:	d303      	bcc.n	800afe6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800afde:	4b09      	ldr	r3, [pc, #36]	; (800b004 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800afe0:	4a06      	ldr	r2, [pc, #24]	; (800affc <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800afe2:	2130      	movs	r1, #48	; 0x30
 800afe4:	e7f1      	b.n	800afca <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800afe6:	6823      	ldr	r3, [r4, #0]
 800afe8:	88a1      	ldrh	r1, [r4, #4]
 800afea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800afec:	4620      	mov	r0, r4
 800afee:	4798      	blx	r3
 800aff0:	88a3      	ldrh	r3, [r4, #4]
 800aff2:	3301      	adds	r3, #1
 800aff4:	80a3      	strh	r3, [r4, #4]
 800aff6:	bd38      	pop	{r3, r4, r5, pc}
 800aff8:	0801c8bd 	.word	0x0801c8bd
 800affc:	0801c9b1 	.word	0x0801c9b1
 800b000:	0801c815 	.word	0x0801c815
 800b004:	0801c8d4 	.word	0x0801c8d4

0800b008 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800b008:	b570      	push	{r4, r5, r6, lr}
 800b00a:	6803      	ldr	r3, [r0, #0]
 800b00c:	6a1b      	ldr	r3, [r3, #32]
 800b00e:	4616      	mov	r6, r2
 800b010:	4604      	mov	r4, r0
 800b012:	460d      	mov	r5, r1
 800b014:	4798      	blx	r3
 800b016:	4286      	cmp	r6, r0
 800b018:	d905      	bls.n	800b026 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800b01a:	4b06      	ldr	r3, [pc, #24]	; (800b034 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800b01c:	4a06      	ldr	r2, [pc, #24]	; (800b038 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800b01e:	4807      	ldr	r0, [pc, #28]	; (800b03c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800b020:	2139      	movs	r1, #57	; 0x39
 800b022:	f00f fc7b 	bl	801a91c <__assert_func>
 800b026:	6823      	ldr	r3, [r4, #0]
 800b028:	4629      	mov	r1, r5
 800b02a:	4620      	mov	r0, r4
 800b02c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b02e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b032:	4718      	bx	r3
 800b034:	0801c8bd 	.word	0x0801c8bd
 800b038:	0801c924 	.word	0x0801c924
 800b03c:	0801c815 	.word	0x0801c815

0800b040 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800b040:	4770      	bx	lr
	...

0800b044 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800b044:	4a02      	ldr	r2, [pc, #8]	; (800b050 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800b046:	6002      	str	r2, [r0, #0]
 800b048:	2200      	movs	r2, #0
 800b04a:	8082      	strh	r2, [r0, #4]
 800b04c:	4770      	bx	lr
 800b04e:	bf00      	nop
 800b050:	0801c8f8 	.word	0x0801c8f8

0800b054 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800b054:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b056:	2000      	movs	r0, #0
 800b058:	b12b      	cbz	r3, 800b066 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b05a:	b920      	cbnz	r0, 800b066 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800b05c:	1a5a      	subs	r2, r3, r1
 800b05e:	4250      	negs	r0, r2
 800b060:	4150      	adcs	r0, r2
 800b062:	699b      	ldr	r3, [r3, #24]
 800b064:	e7f8      	b.n	800b058 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800b066:	4770      	bx	lr

0800b068 <_ZN8touchgfx9Container9removeAllEv>:
 800b068:	2200      	movs	r2, #0
 800b06a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b06c:	b123      	cbz	r3, 800b078 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800b06e:	6999      	ldr	r1, [r3, #24]
 800b070:	6281      	str	r1, [r0, #40]	; 0x28
 800b072:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800b076:	e7f8      	b.n	800b06a <_ZN8touchgfx9Container9removeAllEv+0x2>
 800b078:	4770      	bx	lr

0800b07a <_ZN8touchgfx9Container6unlinkEv>:
 800b07a:	2300      	movs	r3, #0
 800b07c:	6283      	str	r3, [r0, #40]	; 0x28
 800b07e:	4770      	bx	lr

0800b080 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800b080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b084:	461f      	mov	r7, r3
 800b086:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800b08a:	460d      	mov	r5, r1
 800b08c:	4616      	mov	r6, r2
 800b08e:	b103      	cbz	r3, 800b092 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800b090:	6038      	str	r0, [r7, #0]
 800b092:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b094:	b314      	cbz	r4, 800b0dc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800b096:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b09a:	b1eb      	cbz	r3, 800b0d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b09c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800b0a0:	428d      	cmp	r5, r1
 800b0a2:	db19      	blt.n	800b0d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b0a4:	8923      	ldrh	r3, [r4, #8]
 800b0a6:	b289      	uxth	r1, r1
 800b0a8:	440b      	add	r3, r1
 800b0aa:	b21b      	sxth	r3, r3
 800b0ac:	429d      	cmp	r5, r3
 800b0ae:	da13      	bge.n	800b0d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b0b0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800b0b4:	4296      	cmp	r6, r2
 800b0b6:	db0f      	blt.n	800b0d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b0b8:	8963      	ldrh	r3, [r4, #10]
 800b0ba:	b292      	uxth	r2, r2
 800b0bc:	4413      	add	r3, r2
 800b0be:	b21b      	sxth	r3, r3
 800b0c0:	429e      	cmp	r6, r3
 800b0c2:	da09      	bge.n	800b0d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800b0c4:	6823      	ldr	r3, [r4, #0]
 800b0c6:	1ab2      	subs	r2, r6, r2
 800b0c8:	1a69      	subs	r1, r5, r1
 800b0ca:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800b0ce:	b212      	sxth	r2, r2
 800b0d0:	463b      	mov	r3, r7
 800b0d2:	b209      	sxth	r1, r1
 800b0d4:	4620      	mov	r0, r4
 800b0d6:	47c0      	blx	r8
 800b0d8:	69a4      	ldr	r4, [r4, #24]
 800b0da:	e7db      	b.n	800b094 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800b0dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b0e0 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800b0e0:	2200      	movs	r2, #0
 800b0e2:	8002      	strh	r2, [r0, #0]
 800b0e4:	8042      	strh	r2, [r0, #2]
 800b0e6:	8082      	strh	r2, [r0, #4]
 800b0e8:	80c2      	strh	r2, [r0, #6]
 800b0ea:	4770      	bx	lr

0800b0ec <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800b0ec:	b570      	push	{r4, r5, r6, lr}
 800b0ee:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b0f0:	460d      	mov	r5, r1
 800b0f2:	4616      	mov	r6, r2
 800b0f4:	b13c      	cbz	r4, 800b106 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800b0f6:	6823      	ldr	r3, [r4, #0]
 800b0f8:	4620      	mov	r0, r4
 800b0fa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b0fc:	4632      	mov	r2, r6
 800b0fe:	4629      	mov	r1, r5
 800b100:	4798      	blx	r3
 800b102:	69a4      	ldr	r4, [r4, #24]
 800b104:	e7f6      	b.n	800b0f4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800b106:	bd70      	pop	{r4, r5, r6, pc}

0800b108 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800b108:	b538      	push	{r3, r4, r5, lr}
 800b10a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b10c:	460d      	mov	r5, r1
 800b10e:	b134      	cbz	r4, 800b11e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800b110:	682b      	ldr	r3, [r5, #0]
 800b112:	4621      	mov	r1, r4
 800b114:	689b      	ldr	r3, [r3, #8]
 800b116:	4628      	mov	r0, r5
 800b118:	4798      	blx	r3
 800b11a:	69a4      	ldr	r4, [r4, #24]
 800b11c:	e7f7      	b.n	800b10e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800b11e:	bd38      	pop	{r3, r4, r5, pc}

0800b120 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800b120:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b122:	b19b      	cbz	r3, 800b14c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800b124:	428b      	cmp	r3, r1
 800b126:	d109      	bne.n	800b13c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800b128:	699a      	ldr	r2, [r3, #24]
 800b12a:	2100      	movs	r1, #0
 800b12c:	6159      	str	r1, [r3, #20]
 800b12e:	6282      	str	r2, [r0, #40]	; 0x28
 800b130:	b902      	cbnz	r2, 800b134 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800b132:	4770      	bx	lr
 800b134:	6199      	str	r1, [r3, #24]
 800b136:	4770      	bx	lr
 800b138:	4613      	mov	r3, r2
 800b13a:	b13a      	cbz	r2, 800b14c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800b13c:	699a      	ldr	r2, [r3, #24]
 800b13e:	428a      	cmp	r2, r1
 800b140:	d1fa      	bne.n	800b138 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800b142:	698a      	ldr	r2, [r1, #24]
 800b144:	619a      	str	r2, [r3, #24]
 800b146:	2300      	movs	r3, #0
 800b148:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800b14c:	4770      	bx	lr

0800b14e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800b14e:	b410      	push	{r4}
 800b150:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b152:	4604      	mov	r4, r0
 800b154:	b92b      	cbnz	r3, 800b162 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800b156:	6803      	ldr	r3, [r0, #0]
 800b158:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b15c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800b15e:	4611      	mov	r1, r2
 800b160:	4718      	bx	r3
 800b162:	b941      	cbnz	r1, 800b176 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800b164:	6193      	str	r3, [r2, #24]
 800b166:	6282      	str	r2, [r0, #40]	; 0x28
 800b168:	6154      	str	r4, [r2, #20]
 800b16a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b16e:	4770      	bx	lr
 800b170:	4603      	mov	r3, r0
 800b172:	2800      	cmp	r0, #0
 800b174:	d0f9      	beq.n	800b16a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800b176:	4299      	cmp	r1, r3
 800b178:	6998      	ldr	r0, [r3, #24]
 800b17a:	d1f9      	bne.n	800b170 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800b17c:	6190      	str	r0, [r2, #24]
 800b17e:	618a      	str	r2, [r1, #24]
 800b180:	e7f2      	b.n	800b168 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800b184 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800b184:	4288      	cmp	r0, r1
 800b186:	b508      	push	{r3, lr}
 800b188:	d105      	bne.n	800b196 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800b18a:	4b11      	ldr	r3, [pc, #68]	; (800b1d0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800b18c:	4a11      	ldr	r2, [pc, #68]	; (800b1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b18e:	2123      	movs	r1, #35	; 0x23
 800b190:	4811      	ldr	r0, [pc, #68]	; (800b1d8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800b192:	f00f fbc3 	bl	801a91c <__assert_func>
 800b196:	694b      	ldr	r3, [r1, #20]
 800b198:	b11b      	cbz	r3, 800b1a2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800b19a:	4b10      	ldr	r3, [pc, #64]	; (800b1dc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800b19c:	4a0d      	ldr	r2, [pc, #52]	; (800b1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b19e:	2124      	movs	r1, #36	; 0x24
 800b1a0:	e7f6      	b.n	800b190 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b1a2:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800b1a6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b1a8:	b913      	cbnz	r3, 800b1b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800b1aa:	6281      	str	r1, [r0, #40]	; 0x28
 800b1ac:	bd08      	pop	{r3, pc}
 800b1ae:	4613      	mov	r3, r2
 800b1b0:	699a      	ldr	r2, [r3, #24]
 800b1b2:	b12a      	cbz	r2, 800b1c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800b1b4:	428b      	cmp	r3, r1
 800b1b6:	d1fa      	bne.n	800b1ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800b1b8:	4b09      	ldr	r3, [pc, #36]	; (800b1e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800b1ba:	4a06      	ldr	r2, [pc, #24]	; (800b1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b1bc:	2135      	movs	r1, #53	; 0x35
 800b1be:	e7e7      	b.n	800b190 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b1c0:	428b      	cmp	r3, r1
 800b1c2:	d103      	bne.n	800b1cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800b1c4:	4b06      	ldr	r3, [pc, #24]	; (800b1e0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800b1c6:	4a03      	ldr	r2, [pc, #12]	; (800b1d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800b1c8:	2138      	movs	r1, #56	; 0x38
 800b1ca:	e7e1      	b.n	800b190 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800b1cc:	6199      	str	r1, [r3, #24]
 800b1ce:	e7ed      	b.n	800b1ac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800b1d0:	0801c9ef 	.word	0x0801c9ef
 800b1d4:	0801cb44 	.word	0x0801cb44
 800b1d8:	0801ca1b 	.word	0x0801ca1b
 800b1dc:	0801ca4e 	.word	0x0801ca4e
 800b1e0:	0801ca84 	.word	0x0801ca84

0800b1e4 <_ZN8touchgfx4RectaNERKS0_>:
 800b1e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b1e8:	888b      	ldrh	r3, [r1, #4]
 800b1ea:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b1ee:	f9b0 a000 	ldrsh.w	sl, [r0]
 800b1f2:	444b      	add	r3, r9
 800b1f4:	b29b      	uxth	r3, r3
 800b1f6:	fa0f f883 	sxth.w	r8, r3
 800b1fa:	45c2      	cmp	sl, r8
 800b1fc:	da30      	bge.n	800b260 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800b1fe:	8882      	ldrh	r2, [r0, #4]
 800b200:	4452      	add	r2, sl
 800b202:	b292      	uxth	r2, r2
 800b204:	fa0f fe82 	sxth.w	lr, r2
 800b208:	45f1      	cmp	r9, lr
 800b20a:	da29      	bge.n	800b260 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800b20c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b210:	88cc      	ldrh	r4, [r1, #6]
 800b212:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800b216:	442c      	add	r4, r5
 800b218:	b224      	sxth	r4, r4
 800b21a:	42a6      	cmp	r6, r4
 800b21c:	da20      	bge.n	800b260 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800b21e:	88c7      	ldrh	r7, [r0, #6]
 800b220:	4437      	add	r7, r6
 800b222:	b2bf      	uxth	r7, r7
 800b224:	fa0f fc87 	sxth.w	ip, r7
 800b228:	4565      	cmp	r5, ip
 800b22a:	da19      	bge.n	800b260 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800b22c:	45ca      	cmp	sl, r9
 800b22e:	4654      	mov	r4, sl
 800b230:	bfb8      	it	lt
 800b232:	464c      	movlt	r4, r9
 800b234:	42b5      	cmp	r5, r6
 800b236:	bfb8      	it	lt
 800b238:	4635      	movlt	r5, r6
 800b23a:	45f0      	cmp	r8, lr
 800b23c:	bfc8      	it	gt
 800b23e:	4613      	movgt	r3, r2
 800b240:	1b1b      	subs	r3, r3, r4
 800b242:	8083      	strh	r3, [r0, #4]
 800b244:	88ca      	ldrh	r2, [r1, #6]
 800b246:	884b      	ldrh	r3, [r1, #2]
 800b248:	8004      	strh	r4, [r0, #0]
 800b24a:	4413      	add	r3, r2
 800b24c:	b29b      	uxth	r3, r3
 800b24e:	b21a      	sxth	r2, r3
 800b250:	4594      	cmp	ip, r2
 800b252:	bfb8      	it	lt
 800b254:	463b      	movlt	r3, r7
 800b256:	1b5b      	subs	r3, r3, r5
 800b258:	80c3      	strh	r3, [r0, #6]
 800b25a:	8045      	strh	r5, [r0, #2]
 800b25c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b260:	2300      	movs	r3, #0
 800b262:	8003      	strh	r3, [r0, #0]
 800b264:	8043      	strh	r3, [r0, #2]
 800b266:	8083      	strh	r3, [r0, #4]
 800b268:	80c3      	strh	r3, [r0, #6]
 800b26a:	e7f7      	b.n	800b25c <_ZN8touchgfx4RectaNERKS0_+0x78>

0800b26c <_ZNK8touchgfx4Rect7isEmptyEv>:
 800b26c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b270:	b12b      	cbz	r3, 800b27e <_ZNK8touchgfx4Rect7isEmptyEv+0x12>
 800b272:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800b276:	fab0 f080 	clz	r0, r0
 800b27a:	0940      	lsrs	r0, r0, #5
 800b27c:	4770      	bx	lr
 800b27e:	2001      	movs	r0, #1
 800b280:	4770      	bx	lr

0800b282 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800b282:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b286:	2300      	movs	r3, #0
 800b288:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800b28a:	8003      	strh	r3, [r0, #0]
 800b28c:	4604      	mov	r4, r0
 800b28e:	8043      	strh	r3, [r0, #2]
 800b290:	8083      	strh	r3, [r0, #4]
 800b292:	80c3      	strh	r3, [r0, #6]
 800b294:	2d00      	cmp	r5, #0
 800b296:	d040      	beq.n	800b31a <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800b298:	1d28      	adds	r0, r5, #4
 800b29a:	f7ff ffe7 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800b29e:	b988      	cbnz	r0, 800b2c4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b2a0:	4620      	mov	r0, r4
 800b2a2:	f7ff ffe3 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800b2a6:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b2aa:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b2ae:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800b2b2:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800b2b6:	b138      	cbz	r0, 800b2c8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800b2b8:	8022      	strh	r2, [r4, #0]
 800b2ba:	8063      	strh	r3, [r4, #2]
 800b2bc:	f8a4 e004 	strh.w	lr, [r4, #4]
 800b2c0:	f8a4 c006 	strh.w	ip, [r4, #6]
 800b2c4:	69ad      	ldr	r5, [r5, #24]
 800b2c6:	e7e5      	b.n	800b294 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800b2c8:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b2cc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b2d0:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800b2d4:	4290      	cmp	r0, r2
 800b2d6:	4607      	mov	r7, r0
 800b2d8:	bfa8      	it	ge
 800b2da:	4617      	movge	r7, r2
 800b2dc:	4472      	add	r2, lr
 800b2de:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800b2e2:	8027      	strh	r7, [r4, #0]
 800b2e4:	4299      	cmp	r1, r3
 800b2e6:	460e      	mov	r6, r1
 800b2e8:	4440      	add	r0, r8
 800b2ea:	bfa8      	it	ge
 800b2ec:	461e      	movge	r6, r3
 800b2ee:	4471      	add	r1, lr
 800b2f0:	4463      	add	r3, ip
 800b2f2:	b200      	sxth	r0, r0
 800b2f4:	b212      	sxth	r2, r2
 800b2f6:	b209      	sxth	r1, r1
 800b2f8:	b21b      	sxth	r3, r3
 800b2fa:	4290      	cmp	r0, r2
 800b2fc:	bfac      	ite	ge
 800b2fe:	ebc7 0200 	rsbge	r2, r7, r0
 800b302:	ebc7 0202 	rsblt	r2, r7, r2
 800b306:	4299      	cmp	r1, r3
 800b308:	bfac      	ite	ge
 800b30a:	ebc6 0301 	rsbge	r3, r6, r1
 800b30e:	ebc6 0303 	rsblt	r3, r6, r3
 800b312:	8066      	strh	r6, [r4, #2]
 800b314:	80a2      	strh	r2, [r4, #4]
 800b316:	80e3      	strh	r3, [r4, #6]
 800b318:	e7d4      	b.n	800b2c4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b31a:	4620      	mov	r0, r4
 800b31c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b320 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b320:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b324:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b328:	b383      	cbz	r3, 800b38c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b32a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b32c:	b374      	cbz	r4, 800b38c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b32e:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b332:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b336:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b33a:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b33e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b342:	b303      	cbz	r3, 800b386 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b344:	4668      	mov	r0, sp
 800b346:	1d21      	adds	r1, r4, #4
 800b348:	f8ad 5000 	strh.w	r5, [sp]
 800b34c:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b350:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b354:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b358:	f7ff ff44 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800b35c:	4668      	mov	r0, sp
 800b35e:	f7ff ff85 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800b362:	b980      	cbnz	r0, 800b386 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b364:	f8bd 3000 	ldrh.w	r3, [sp]
 800b368:	88a2      	ldrh	r2, [r4, #4]
 800b36a:	1a9b      	subs	r3, r3, r2
 800b36c:	f8ad 3000 	strh.w	r3, [sp]
 800b370:	88e2      	ldrh	r2, [r4, #6]
 800b372:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b376:	1a9b      	subs	r3, r3, r2
 800b378:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b37c:	6823      	ldr	r3, [r4, #0]
 800b37e:	4669      	mov	r1, sp
 800b380:	689b      	ldr	r3, [r3, #8]
 800b382:	4620      	mov	r0, r4
 800b384:	4798      	blx	r3
 800b386:	69a4      	ldr	r4, [r4, #24]
 800b388:	2c00      	cmp	r4, #0
 800b38a:	d1d8      	bne.n	800b33e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b38c:	b002      	add	sp, #8
 800b38e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b392 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b392:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b394:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b398:	460d      	mov	r5, r1
 800b39a:	4616      	mov	r6, r2
 800b39c:	b323      	cbz	r3, 800b3e8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b39e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b3a0:	b314      	cbz	r4, 800b3e8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b3a2:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b3a6:	b1eb      	cbz	r3, 800b3e4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b3a8:	6828      	ldr	r0, [r5, #0]
 800b3aa:	6869      	ldr	r1, [r5, #4]
 800b3ac:	466b      	mov	r3, sp
 800b3ae:	c303      	stmia	r3!, {r0, r1}
 800b3b0:	4668      	mov	r0, sp
 800b3b2:	1d21      	adds	r1, r4, #4
 800b3b4:	f7ff ff16 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800b3b8:	4668      	mov	r0, sp
 800b3ba:	f7ff ff57 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800b3be:	b988      	cbnz	r0, 800b3e4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b3c0:	f8bd 3000 	ldrh.w	r3, [sp]
 800b3c4:	88a2      	ldrh	r2, [r4, #4]
 800b3c6:	1a9b      	subs	r3, r3, r2
 800b3c8:	f8ad 3000 	strh.w	r3, [sp]
 800b3cc:	88e2      	ldrh	r2, [r4, #6]
 800b3ce:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b3d2:	1a9b      	subs	r3, r3, r2
 800b3d4:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b3d8:	6823      	ldr	r3, [r4, #0]
 800b3da:	4632      	mov	r2, r6
 800b3dc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b3de:	4669      	mov	r1, sp
 800b3e0:	4620      	mov	r0, r4
 800b3e2:	4798      	blx	r3
 800b3e4:	69a4      	ldr	r4, [r4, #24]
 800b3e6:	e7db      	b.n	800b3a0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b3e8:	b002      	add	sp, #8
 800b3ea:	bd70      	pop	{r4, r5, r6, pc}

0800b3ec <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800b3ec:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800b3f0:	4770      	bx	lr

0800b3f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b3f2:	b513      	push	{r0, r1, r4, lr}
 800b3f4:	6803      	ldr	r3, [r0, #0]
 800b3f6:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800b3fa:	2300      	movs	r3, #0
 800b3fc:	e9cd 3300 	strd	r3, r3, [sp]
 800b400:	466b      	mov	r3, sp
 800b402:	47a0      	blx	r4
 800b404:	b002      	add	sp, #8
 800b406:	bd10      	pop	{r4, pc}

0800b408 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b408:	2301      	movs	r3, #1
 800b40a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b40e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b412:	4770      	bx	lr

0800b414 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b414:	2301      	movs	r3, #1
 800b416:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b41a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b41e:	4770      	bx	lr

0800b420 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b420:	6843      	ldr	r3, [r0, #4]
 800b422:	2201      	movs	r2, #1
 800b424:	725a      	strb	r2, [r3, #9]
 800b426:	6840      	ldr	r0, [r0, #4]
 800b428:	6803      	ldr	r3, [r0, #0]
 800b42a:	691b      	ldr	r3, [r3, #16]
 800b42c:	4718      	bx	r3

0800b42e <_ZN8touchgfx3HAL8flushDMAEv>:
 800b42e:	6840      	ldr	r0, [r0, #4]
 800b430:	6803      	ldr	r3, [r0, #0]
 800b432:	689b      	ldr	r3, [r3, #8]
 800b434:	4718      	bx	r3
	...

0800b438 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b438:	4b04      	ldr	r3, [pc, #16]	; (800b44c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b43a:	781b      	ldrb	r3, [r3, #0]
 800b43c:	b123      	cbz	r3, 800b448 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b43e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b442:	f080 0001 	eor.w	r0, r0, #1
 800b446:	4770      	bx	lr
 800b448:	2001      	movs	r0, #1
 800b44a:	4770      	bx	lr
 800b44c:	200014b6 	.word	0x200014b6

0800b450 <_ZN8touchgfx3HAL8endFrameEv>:
 800b450:	b510      	push	{r4, lr}
 800b452:	4604      	mov	r4, r0
 800b454:	6840      	ldr	r0, [r0, #4]
 800b456:	6803      	ldr	r3, [r0, #0]
 800b458:	689b      	ldr	r3, [r3, #8]
 800b45a:	4798      	blx	r3
 800b45c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b460:	b113      	cbz	r3, 800b468 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b462:	2301      	movs	r3, #1
 800b464:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b468:	bd10      	pop	{r4, pc}

0800b46a <_ZN8touchgfx3HAL9taskEntryEv>:
 800b46a:	b508      	push	{r3, lr}
 800b46c:	6803      	ldr	r3, [r0, #0]
 800b46e:	4604      	mov	r4, r0
 800b470:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800b472:	4798      	blx	r3
 800b474:	6823      	ldr	r3, [r4, #0]
 800b476:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800b478:	4620      	mov	r0, r4
 800b47a:	4798      	blx	r3
 800b47c:	f7fe fa36 	bl	80098ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800b480:	6823      	ldr	r3, [r4, #0]
 800b482:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800b484:	e7f8      	b.n	800b478 <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

0800b488 <_ZN8touchgfx3HAL4tickEv>:
 800b488:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b48a:	6803      	ldr	r3, [r0, #0]
 800b48c:	4d5c      	ldr	r5, [pc, #368]	; (800b600 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b48e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b492:	4604      	mov	r4, r0
 800b494:	4798      	blx	r3
 800b496:	2800      	cmp	r0, #0
 800b498:	f000 8097 	beq.w	800b5ca <_ZN8touchgfx3HAL4tickEv+0x142>
 800b49c:	2001      	movs	r0, #1
 800b49e:	f7fd ff43 	bl	8009328 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b4a2:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b4a6:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b4aa:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b4ae:	2600      	movs	r6, #0
 800b4b0:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b4b4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b4b8:	b133      	cbz	r3, 800b4c8 <_ZN8touchgfx3HAL4tickEv+0x40>
 800b4ba:	6823      	ldr	r3, [r4, #0]
 800b4bc:	4620      	mov	r0, r4
 800b4be:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800b4c2:	4798      	blx	r3
 800b4c4:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b4c8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b4cc:	6862      	ldr	r2, [r4, #4]
 800b4ce:	f083 0301 	eor.w	r3, r3, #1
 800b4d2:	7253      	strb	r3, [r2, #9]
 800b4d4:	2601      	movs	r6, #1
 800b4d6:	702e      	strb	r6, [r5, #0]
 800b4d8:	f001 ffa2 	bl	800d420 <_ZN8touchgfx11Application11getInstanceEv>
 800b4dc:	6803      	ldr	r3, [r0, #0]
 800b4de:	4631      	mov	r1, r6
 800b4e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4e2:	4798      	blx	r3
 800b4e4:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b4e8:	b90b      	cbnz	r3, 800b4ee <_ZN8touchgfx3HAL4tickEv+0x66>
 800b4ea:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b4ee:	f001 ff97 	bl	800d420 <_ZN8touchgfx11Application11getInstanceEv>
 800b4f2:	6803      	ldr	r3, [r0, #0]
 800b4f4:	695b      	ldr	r3, [r3, #20]
 800b4f6:	4798      	blx	r3
 800b4f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b4fa:	6803      	ldr	r3, [r0, #0]
 800b4fc:	691b      	ldr	r3, [r3, #16]
 800b4fe:	4798      	blx	r3
 800b500:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b504:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b508:	3b01      	subs	r3, #1
 800b50a:	b2db      	uxtb	r3, r3
 800b50c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b510:	b10a      	cbz	r2, 800b516 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800b512:	2b00      	cmp	r3, #0
 800b514:	d1eb      	bne.n	800b4ee <_ZN8touchgfx3HAL4tickEv+0x66>
 800b516:	4a3b      	ldr	r2, [pc, #236]	; (800b604 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b518:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b51c:	7813      	ldrb	r3, [r2, #0]
 800b51e:	3301      	adds	r3, #1
 800b520:	b25b      	sxtb	r3, r3
 800b522:	4299      	cmp	r1, r3
 800b524:	7013      	strb	r3, [r2, #0]
 800b526:	dc10      	bgt.n	800b54a <_ZN8touchgfx3HAL4tickEv+0xc2>
 800b528:	68e0      	ldr	r0, [r4, #12]
 800b52a:	2300      	movs	r3, #0
 800b52c:	7013      	strb	r3, [r2, #0]
 800b52e:	6803      	ldr	r3, [r0, #0]
 800b530:	aa03      	add	r2, sp, #12
 800b532:	68db      	ldr	r3, [r3, #12]
 800b534:	a902      	add	r1, sp, #8
 800b536:	4798      	blx	r3
 800b538:	6823      	ldr	r3, [r4, #0]
 800b53a:	2800      	cmp	r0, #0
 800b53c:	d051      	beq.n	800b5e2 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800b53e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800b542:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b546:	4620      	mov	r0, r4
 800b548:	4798      	blx	r3
 800b54a:	6960      	ldr	r0, [r4, #20]
 800b54c:	2300      	movs	r3, #0
 800b54e:	f88d 3007 	strb.w	r3, [sp, #7]
 800b552:	b158      	cbz	r0, 800b56c <_ZN8touchgfx3HAL4tickEv+0xe4>
 800b554:	6803      	ldr	r3, [r0, #0]
 800b556:	f10d 0107 	add.w	r1, sp, #7
 800b55a:	68db      	ldr	r3, [r3, #12]
 800b55c:	4798      	blx	r3
 800b55e:	b128      	cbz	r0, 800b56c <_ZN8touchgfx3HAL4tickEv+0xe4>
 800b560:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b562:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b566:	6803      	ldr	r3, [r0, #0]
 800b568:	68db      	ldr	r3, [r3, #12]
 800b56a:	4798      	blx	r3
 800b56c:	f104 001c 	add.w	r0, r4, #28
 800b570:	f00f f8f0 	bl	801a754 <_ZN8touchgfx8Gestures4tickEv>
 800b574:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b578:	b30b      	cbz	r3, 800b5be <_ZN8touchgfx3HAL4tickEv+0x136>
 800b57a:	6920      	ldr	r0, [r4, #16]
 800b57c:	6803      	ldr	r3, [r0, #0]
 800b57e:	691b      	ldr	r3, [r3, #16]
 800b580:	4798      	blx	r3
 800b582:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b584:	4606      	mov	r6, r0
 800b586:	b903      	cbnz	r3, 800b58a <_ZN8touchgfx3HAL4tickEv+0x102>
 800b588:	6720      	str	r0, [r4, #112]	; 0x70
 800b58a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b58c:	4a1e      	ldr	r2, [pc, #120]	; (800b608 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800b58e:	1af3      	subs	r3, r6, r3
 800b590:	4293      	cmp	r3, r2
 800b592:	d914      	bls.n	800b5be <_ZN8touchgfx3HAL4tickEv+0x136>
 800b594:	6920      	ldr	r0, [r4, #16]
 800b596:	6803      	ldr	r3, [r0, #0]
 800b598:	699b      	ldr	r3, [r3, #24]
 800b59a:	4798      	blx	r3
 800b59c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b59e:	2264      	movs	r2, #100	; 0x64
 800b5a0:	1af3      	subs	r3, r6, r3
 800b5a2:	fbb3 f3f2 	udiv	r3, r3, r2
 800b5a6:	fbb0 f0f3 	udiv	r0, r0, r3
 800b5aa:	2800      	cmp	r0, #0
 800b5ac:	dc1e      	bgt.n	800b5ec <_ZN8touchgfx3HAL4tickEv+0x164>
 800b5ae:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b5b2:	6920      	ldr	r0, [r4, #16]
 800b5b4:	6803      	ldr	r3, [r0, #0]
 800b5b6:	2100      	movs	r1, #0
 800b5b8:	69db      	ldr	r3, [r3, #28]
 800b5ba:	4798      	blx	r3
 800b5bc:	6726      	str	r6, [r4, #112]	; 0x70
 800b5be:	f001 ff2f 	bl	800d420 <_ZN8touchgfx11Application11getInstanceEv>
 800b5c2:	6803      	ldr	r3, [r0, #0]
 800b5c4:	2100      	movs	r1, #0
 800b5c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b5c8:	4798      	blx	r3
 800b5ca:	6823      	ldr	r3, [r4, #0]
 800b5cc:	4620      	mov	r0, r4
 800b5ce:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800b5d2:	4798      	blx	r3
 800b5d4:	2001      	movs	r0, #1
 800b5d6:	f7fd feb2 	bl	800933e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b5da:	2300      	movs	r3, #0
 800b5dc:	702b      	strb	r3, [r5, #0]
 800b5de:	b004      	add	sp, #16
 800b5e0:	bd70      	pop	{r4, r5, r6, pc}
 800b5e2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b5e6:	4620      	mov	r0, r4
 800b5e8:	4798      	blx	r3
 800b5ea:	e7ae      	b.n	800b54a <_ZN8touchgfx3HAL4tickEv+0xc2>
 800b5ec:	2863      	cmp	r0, #99	; 0x63
 800b5ee:	bfcb      	itete	gt
 800b5f0:	2300      	movgt	r3, #0
 800b5f2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b5f6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b5fa:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b5fe:	e7d8      	b.n	800b5b2 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800b600:	200014bc 	.word	0x200014bc
 800b604:	200014bd 	.word	0x200014bd
 800b608:	05f5e100 	.word	0x05f5e100

0800b60c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b60c:	f7fe b93e 	b.w	800988c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b610 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b610:	6581      	str	r1, [r0, #88]	; 0x58
 800b612:	301c      	adds	r0, #28
 800b614:	f00f b89c 	b.w	801a750 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b618 <_ZN8touchgfx3HAL5touchEll>:
 800b618:	b530      	push	{r4, r5, lr}
 800b61a:	b087      	sub	sp, #28
 800b61c:	4604      	mov	r4, r0
 800b61e:	a804      	add	r0, sp, #16
 800b620:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b624:	f001 fcba 	bl	800cf9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b628:	9b04      	ldr	r3, [sp, #16]
 800b62a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b62e:	a906      	add	r1, sp, #24
 800b630:	9b05      	ldr	r3, [sp, #20]
 800b632:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b636:	a803      	add	r0, sp, #12
 800b638:	f001 fcfe 	bl	800d038 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b63c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b640:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b644:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b648:	f104 001c 	add.w	r0, r4, #28
 800b64c:	b189      	cbz	r1, 800b672 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b64e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b652:	9300      	str	r3, [sp, #0]
 800b654:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b658:	4613      	mov	r3, r2
 800b65a:	462a      	mov	r2, r5
 800b65c:	f00f f888 	bl	801a770 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b660:	b128      	cbz	r0, 800b66e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b662:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b666:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b668:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b66c:	6623      	str	r3, [r4, #96]	; 0x60
 800b66e:	b007      	add	sp, #28
 800b670:	bd30      	pop	{r4, r5, pc}
 800b672:	f00f f8c1 	bl	801a7f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b676:	2301      	movs	r3, #1
 800b678:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b67c:	e7f1      	b.n	800b662 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b67e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b67e:	b570      	push	{r4, r5, r6, lr}
 800b680:	2b00      	cmp	r3, #0
 800b682:	d050      	beq.n	800b726 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800b684:	ea81 0002 	eor.w	r0, r1, r2
 800b688:	07c6      	lsls	r6, r0, #31
 800b68a:	d508      	bpl.n	800b69e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b68c:	3a01      	subs	r2, #1
 800b68e:	18cc      	adds	r4, r1, r3
 800b690:	42a1      	cmp	r1, r4
 800b692:	d048      	beq.n	800b726 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800b694:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b698:	f801 0b01 	strb.w	r0, [r1], #1
 800b69c:	e7f8      	b.n	800b690 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b69e:	07d5      	lsls	r5, r2, #31
 800b6a0:	bf42      	ittt	mi
 800b6a2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b6a6:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b6aa:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b6ae:	2b01      	cmp	r3, #1
 800b6b0:	d915      	bls.n	800b6de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800b6b2:	ea82 0001 	eor.w	r0, r2, r1
 800b6b6:	0784      	lsls	r4, r0, #30
 800b6b8:	d02d      	beq.n	800b716 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800b6ba:	1e94      	subs	r4, r2, #2
 800b6bc:	4608      	mov	r0, r1
 800b6be:	18ce      	adds	r6, r1, r3
 800b6c0:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800b6c4:	f820 5b02 	strh.w	r5, [r0], #2
 800b6c8:	1a35      	subs	r5, r6, r0
 800b6ca:	2d01      	cmp	r5, #1
 800b6cc:	d8f8      	bhi.n	800b6c0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800b6ce:	1e98      	subs	r0, r3, #2
 800b6d0:	f020 0001 	bic.w	r0, r0, #1
 800b6d4:	3002      	adds	r0, #2
 800b6d6:	4401      	add	r1, r0
 800b6d8:	4402      	add	r2, r0
 800b6da:	f003 0301 	and.w	r3, r3, #1
 800b6de:	1f14      	subs	r4, r2, #4
 800b6e0:	4608      	mov	r0, r1
 800b6e2:	18ce      	adds	r6, r1, r3
 800b6e4:	1a35      	subs	r5, r6, r0
 800b6e6:	2d03      	cmp	r5, #3
 800b6e8:	d810      	bhi.n	800b70c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800b6ea:	089c      	lsrs	r4, r3, #2
 800b6ec:	00a0      	lsls	r0, r4, #2
 800b6ee:	4401      	add	r1, r0
 800b6f0:	3801      	subs	r0, #1
 800b6f2:	4402      	add	r2, r0
 800b6f4:	f06f 0003 	mvn.w	r0, #3
 800b6f8:	fb00 3404 	mla	r4, r0, r4, r3
 800b6fc:	440c      	add	r4, r1
 800b6fe:	42a1      	cmp	r1, r4
 800b700:	d011      	beq.n	800b726 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800b702:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800b706:	f801 3b01 	strb.w	r3, [r1], #1
 800b70a:	e7f8      	b.n	800b6fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800b70c:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800b710:	f840 5b04 	str.w	r5, [r0], #4
 800b714:	e7e6      	b.n	800b6e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800b716:	0790      	lsls	r0, r2, #30
 800b718:	d0e1      	beq.n	800b6de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800b71a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b71e:	f821 0b02 	strh.w	r0, [r1], #2
 800b722:	3b02      	subs	r3, #2
 800b724:	e7db      	b.n	800b6de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800b726:	2001      	movs	r0, #1
 800b728:	bd70      	pop	{r4, r5, r6, pc}

0800b72a <_ZN8touchgfx3HAL7noTouchEv>:
 800b72a:	b510      	push	{r4, lr}
 800b72c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b730:	4604      	mov	r4, r0
 800b732:	b153      	cbz	r3, 800b74a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b734:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b738:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b73c:	2101      	movs	r1, #1
 800b73e:	301c      	adds	r0, #28
 800b740:	f00f f85a 	bl	801a7f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b744:	2300      	movs	r3, #0
 800b746:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b74a:	bd10      	pop	{r4, pc}

0800b74c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b74c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b750:	4605      	mov	r5, r0
 800b752:	6980      	ldr	r0, [r0, #24]
 800b754:	b085      	sub	sp, #20
 800b756:	460f      	mov	r7, r1
 800b758:	4690      	mov	r8, r2
 800b75a:	4699      	mov	r9, r3
 800b75c:	b930      	cbnz	r0, 800b76c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800b75e:	4b1f      	ldr	r3, [pc, #124]	; (800b7dc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800b760:	4a1f      	ldr	r2, [pc, #124]	; (800b7e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800b762:	f44f 7198 	mov.w	r1, #304	; 0x130
 800b766:	481f      	ldr	r0, [pc, #124]	; (800b7e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 800b768:	f00f f8d8 	bl	801a91c <__assert_func>
 800b76c:	ac04      	add	r4, sp, #16
 800b76e:	2600      	movs	r6, #0
 800b770:	f844 6d04 	str.w	r6, [r4, #-4]!
 800b774:	6806      	ldr	r6, [r0, #0]
 800b776:	9401      	str	r4, [sp, #4]
 800b778:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800b77c:	9400      	str	r4, [sp, #0]
 800b77e:	6834      	ldr	r4, [r6, #0]
 800b780:	47a0      	blx	r4
 800b782:	4c19      	ldr	r4, [pc, #100]	; (800b7e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 800b784:	4606      	mov	r6, r0
 800b786:	f8a4 9000 	strh.w	r9, [r4]
 800b78a:	f7fc fa8d 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800b78e:	6803      	ldr	r3, [r0, #0]
 800b790:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b792:	4798      	blx	r3
 800b794:	280c      	cmp	r0, #12
 800b796:	d80f      	bhi.n	800b7b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800b798:	e8df f000 	tbb	[pc, r0]
 800b79c:	1b1b1207 	.word	0x1b1b1207
 800b7a0:	1b1b1b1b 	.word	0x1b1b1b1b
 800b7a4:	1b1b1b1b 	.word	0x1b1b1b1b
 800b7a8:	1b          	.byte	0x1b
 800b7a9:	00          	.byte	0x00
 800b7aa:	8823      	ldrh	r3, [r4, #0]
 800b7ac:	fb08 7203 	mla	r2, r8, r3, r7
 800b7b0:	9b03      	ldr	r3, [sp, #12]
 800b7b2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b7b6:	63eb      	str	r3, [r5, #60]	; 0x3c
 800b7b8:	4630      	mov	r0, r6
 800b7ba:	b005      	add	sp, #20
 800b7bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b7c0:	8822      	ldrh	r2, [r4, #0]
 800b7c2:	9b03      	ldr	r3, [sp, #12]
 800b7c4:	fb08 7202 	mla	r2, r8, r2, r7
 800b7c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b7cc:	1a9a      	subs	r2, r3, r2
 800b7ce:	63ea      	str	r2, [r5, #60]	; 0x3c
 800b7d0:	e7f2      	b.n	800b7b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800b7d2:	4b06      	ldr	r3, [pc, #24]	; (800b7ec <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 800b7d4:	4a02      	ldr	r2, [pc, #8]	; (800b7e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800b7d6:	f240 114d 	movw	r1, #333	; 0x14d
 800b7da:	e7c4      	b.n	800b766 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800b7dc:	0801cbed 	.word	0x0801cbed
 800b7e0:	0801cefe 	.word	0x0801cefe
 800b7e4:	0801cc32 	.word	0x0801cc32
 800b7e8:	200014b2 	.word	0x200014b2
 800b7ec:	0801cc58 	.word	0x0801cc58

0800b7f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800b7f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b7f4:	4698      	mov	r8, r3
 800b7f6:	6803      	ldr	r3, [r0, #0]
 800b7f8:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800b7fa:	4b0f      	ldr	r3, [pc, #60]	; (800b838 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800b7fc:	b087      	sub	sp, #28
 800b7fe:	f8b3 9000 	ldrh.w	r9, [r3]
 800b802:	460e      	mov	r6, r1
 800b804:	4617      	mov	r7, r2
 800b806:	4604      	mov	r4, r0
 800b808:	f7fc fa4e 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800b80c:	6803      	ldr	r3, [r0, #0]
 800b80e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b810:	4798      	blx	r3
 800b812:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b816:	9302      	str	r3, [sp, #8]
 800b818:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b81c:	9301      	str	r3, [sp, #4]
 800b81e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b822:	9300      	str	r3, [sp, #0]
 800b824:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800b828:	4643      	mov	r3, r8
 800b82a:	463a      	mov	r2, r7
 800b82c:	4631      	mov	r1, r6
 800b82e:	4620      	mov	r0, r4
 800b830:	47a8      	blx	r5
 800b832:	b007      	add	sp, #28
 800b834:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b838:	200014b2 	.word	0x200014b2

0800b83c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b83c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b840:	4606      	mov	r6, r0
 800b842:	b089      	sub	sp, #36	; 0x24
 800b844:	4610      	mov	r0, r2
 800b846:	460c      	mov	r4, r1
 800b848:	4691      	mov	r9, r2
 800b84a:	4698      	mov	r8, r3
 800b84c:	f003 faee 	bl	800ee2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b850:	2800      	cmp	r0, #0
 800b852:	f000 8092 	beq.w	800b97a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x13e>
 800b856:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800b994 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800b85a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 800b998 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800b85e:	f8da 0000 	ldr.w	r0, [sl]
 800b862:	4f4b      	ldr	r7, [pc, #300]	; (800b990 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800b864:	6802      	ldr	r2, [r0, #0]
 800b866:	6a12      	ldr	r2, [r2, #32]
 800b868:	4790      	blx	r2
 800b86a:	f8da 0000 	ldr.w	r0, [sl]
 800b86e:	6802      	ldr	r2, [r0, #0]
 800b870:	ad08      	add	r5, sp, #32
 800b872:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800b874:	4790      	blx	r2
 800b876:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 800b87a:	f8bb 3000 	ldrh.w	r3, [fp]
 800b87e:	9300      	str	r3, [sp, #0]
 800b880:	4628      	mov	r0, r5
 800b882:	883b      	ldrh	r3, [r7, #0]
 800b884:	9301      	str	r3, [sp, #4]
 800b886:	f003 fb91 	bl	800efac <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b88a:	f8ab 0000 	strh.w	r0, [fp]
 800b88e:	4628      	mov	r0, r5
 800b890:	f003 fbc6 	bl	800f020 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b894:	f8da b000 	ldr.w	fp, [sl]
 800b898:	8038      	strh	r0, [r7, #0]
 800b89a:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800b89e:	9302      	str	r3, [sp, #8]
 800b8a0:	4648      	mov	r0, r9
 800b8a2:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800b8a6:	f003 fac1 	bl	800ee2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b8aa:	f8da 2000 	ldr.w	r2, [sl]
 800b8ae:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800b8b2:	63d0      	str	r0, [r2, #60]	; 0x3c
 800b8b4:	6822      	ldr	r2, [r4, #0]
 800b8b6:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800b8ba:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800b8bc:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800b8c0:	2200      	movs	r2, #0
 800b8c2:	4611      	mov	r1, r2
 800b8c4:	4620      	mov	r0, r4
 800b8c6:	4798      	blx	r3
 800b8c8:	2201      	movs	r2, #1
 800b8ca:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800b8ce:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800b8d2:	f9b8 1004 	ldrsh.w	r1, [r8, #4]
 800b8d6:	1d22      	adds	r2, r4, #4
 800b8d8:	2900      	cmp	r1, #0
 800b8da:	d051      	beq.n	800b980 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800b8dc:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800b8e0:	2900      	cmp	r1, #0
 800b8e2:	d04d      	beq.n	800b980 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800b8e4:	6810      	ldr	r0, [r2, #0]
 800b8e6:	6851      	ldr	r1, [r2, #4]
 800b8e8:	f10d 0c18 	add.w	ip, sp, #24
 800b8ec:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800b8f0:	4641      	mov	r1, r8
 800b8f2:	a806      	add	r0, sp, #24
 800b8f4:	f7ff fc76 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800b8f8:	4628      	mov	r0, r5
 800b8fa:	f003 fce3 	bl	800f2c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b8fe:	4680      	mov	r8, r0
 800b900:	f7fc f9d2 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800b904:	6802      	ldr	r2, [r0, #0]
 800b906:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800b908:	4790      	blx	r2
 800b90a:	4580      	cmp	r8, r0
 800b90c:	d03d      	beq.n	800b98a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x14e>
 800b90e:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800b910:	b150      	cbz	r0, 800b928 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800b912:	4628      	mov	r0, r5
 800b914:	f003 fcd6 	bl	800f2c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b918:	4605      	mov	r5, r0
 800b91a:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800b91c:	6803      	ldr	r3, [r0, #0]
 800b91e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b920:	4798      	blx	r3
 800b922:	1a2b      	subs	r3, r5, r0
 800b924:	4258      	negs	r0, r3
 800b926:	4158      	adcs	r0, r3
 800b928:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800b92c:	6822      	ldr	r2, [r4, #0]
 800b92e:	6963      	ldr	r3, [r4, #20]
 800b930:	9303      	str	r3, [sp, #12]
 800b932:	2500      	movs	r5, #0
 800b934:	6165      	str	r5, [r4, #20]
 800b936:	4620      	mov	r0, r4
 800b938:	6892      	ldr	r2, [r2, #8]
 800b93a:	a906      	add	r1, sp, #24
 800b93c:	4790      	blx	r2
 800b93e:	9b03      	ldr	r3, [sp, #12]
 800b940:	6163      	str	r3, [r4, #20]
 800b942:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 800b946:	6823      	ldr	r3, [r4, #0]
 800b948:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800b94c:	4620      	mov	r0, r4
 800b94e:	4c11      	ldr	r4, [pc, #68]	; (800b994 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800b950:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b952:	4652      	mov	r2, sl
 800b954:	4649      	mov	r1, r9
 800b956:	4798      	blx	r3
 800b958:	6820      	ldr	r0, [r4, #0]
 800b95a:	9b02      	ldr	r3, [sp, #8]
 800b95c:	9a00      	ldr	r2, [sp, #0]
 800b95e:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800b962:	4b0d      	ldr	r3, [pc, #52]	; (800b998 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800b964:	801a      	strh	r2, [r3, #0]
 800b966:	4b0a      	ldr	r3, [pc, #40]	; (800b990 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800b968:	9a01      	ldr	r2, [sp, #4]
 800b96a:	801a      	strh	r2, [r3, #0]
 800b96c:	6803      	ldr	r3, [r0, #0]
 800b96e:	6a1b      	ldr	r3, [r3, #32]
 800b970:	4798      	blx	r3
 800b972:	6820      	ldr	r0, [r4, #0]
 800b974:	6803      	ldr	r3, [r0, #0]
 800b976:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b978:	4798      	blx	r3
 800b97a:	b009      	add	sp, #36	; 0x24
 800b97c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b980:	6810      	ldr	r0, [r2, #0]
 800b982:	6851      	ldr	r1, [r2, #4]
 800b984:	ab06      	add	r3, sp, #24
 800b986:	c303      	stmia	r3!, {r0, r1}
 800b988:	e7b6      	b.n	800b8f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbc>
 800b98a:	2000      	movs	r0, #0
 800b98c:	e7cc      	b.n	800b928 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800b98e:	bf00      	nop
 800b990:	200014b4 	.word	0x200014b4
 800b994:	200014b8 	.word	0x200014b8
 800b998:	200014b2 	.word	0x200014b2

0800b99c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b99c:	b510      	push	{r4, lr}
 800b99e:	4b07      	ldr	r3, [pc, #28]	; (800b9bc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b9a0:	781b      	ldrb	r3, [r3, #0]
 800b9a2:	4604      	mov	r4, r0
 800b9a4:	b13b      	cbz	r3, 800b9b6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b9a6:	6803      	ldr	r3, [r0, #0]
 800b9a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b9aa:	4798      	blx	r3
 800b9ac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b9ae:	4283      	cmp	r3, r0
 800b9b0:	d101      	bne.n	800b9b6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b9b2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b9b4:	bd10      	pop	{r4, pc}
 800b9b6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b9b8:	e7fc      	b.n	800b9b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b9ba:	bf00      	nop
 800b9bc:	200014b6 	.word	0x200014b6

0800b9c0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b9c0:	b510      	push	{r4, lr}
 800b9c2:	4b0b      	ldr	r3, [pc, #44]	; (800b9f0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800b9c4:	781b      	ldrb	r3, [r3, #0]
 800b9c6:	4604      	mov	r4, r0
 800b9c8:	b95b      	cbnz	r3, 800b9e2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b9ca:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b9ce:	2b02      	cmp	r3, #2
 800b9d0:	d007      	beq.n	800b9e2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b9d2:	6840      	ldr	r0, [r0, #4]
 800b9d4:	f000 fbc8 	bl	800c168 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b9d8:	b118      	cbz	r0, 800b9e2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b9da:	6862      	ldr	r2, [r4, #4]
 800b9dc:	7a53      	ldrb	r3, [r2, #9]
 800b9de:	2b00      	cmp	r3, #0
 800b9e0:	d0fc      	beq.n	800b9dc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b9e2:	f7fd ff3d 	bl	8009860 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b9e6:	4620      	mov	r0, r4
 800b9e8:	f7ff ffd8 	bl	800b99c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9ec:	bd10      	pop	{r4, pc}
 800b9ee:	bf00      	nop
 800b9f0:	200014b6 	.word	0x200014b6

0800b9f4 <_ZN8touchgfx3HAL10initializeEv>:
 800b9f4:	b510      	push	{r4, lr}
 800b9f6:	4604      	mov	r4, r0
 800b9f8:	f7fd ff20 	bl	800983c <_ZN8touchgfx10OSWrappers10initializeEv>
 800b9fc:	6860      	ldr	r0, [r4, #4]
 800b9fe:	6803      	ldr	r3, [r0, #0]
 800ba00:	68db      	ldr	r3, [r3, #12]
 800ba02:	4798      	blx	r3
 800ba04:	68e0      	ldr	r0, [r4, #12]
 800ba06:	6803      	ldr	r3, [r0, #0]
 800ba08:	689b      	ldr	r3, [r3, #8]
 800ba0a:	4798      	blx	r3
 800ba0c:	6823      	ldr	r3, [r4, #0]
 800ba0e:	4620      	mov	r0, r4
 800ba10:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ba12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba16:	4718      	bx	r3

0800ba18 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800ba18:	b508      	push	{r3, lr}
 800ba1a:	290c      	cmp	r1, #12
 800ba1c:	d817      	bhi.n	800ba4e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800ba1e:	e8df f001 	tbb	[pc, r1]
 800ba22:	090b      	.short	0x090b
 800ba24:	0d0d0d07 	.word	0x0d0d0d07
 800ba28:	1414140d 	.word	0x1414140d
 800ba2c:	1414      	.short	0x1414
 800ba2e:	0d          	.byte	0x0d
 800ba2f:	00          	.byte	0x00
 800ba30:	2020      	movs	r0, #32
 800ba32:	bd08      	pop	{r3, pc}
 800ba34:	2018      	movs	r0, #24
 800ba36:	e7fc      	b.n	800ba32 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ba38:	2010      	movs	r0, #16
 800ba3a:	e7fa      	b.n	800ba32 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ba3c:	4b05      	ldr	r3, [pc, #20]	; (800ba54 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800ba3e:	4a06      	ldr	r2, [pc, #24]	; (800ba58 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800ba40:	4806      	ldr	r0, [pc, #24]	; (800ba5c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800ba42:	f44f 710c 	mov.w	r1, #560	; 0x230
 800ba46:	f00e ff69 	bl	801a91c <__assert_func>
 800ba4a:	2008      	movs	r0, #8
 800ba4c:	e7f1      	b.n	800ba32 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ba4e:	2000      	movs	r0, #0
 800ba50:	e7ef      	b.n	800ba32 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ba52:	bf00      	nop
 800ba54:	0801cd2b 	.word	0x0801cd2b
 800ba58:	0801d0c0 	.word	0x0801d0c0
 800ba5c:	0801cc32 	.word	0x0801cc32

0800ba60 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800ba60:	b570      	push	{r4, r5, r6, lr}
 800ba62:	460d      	mov	r5, r1
 800ba64:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800ba68:	4616      	mov	r6, r2
 800ba6a:	461c      	mov	r4, r3
 800ba6c:	f7ff ffd4 	bl	800ba18 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800ba70:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800ba74:	10c0      	asrs	r0, r0, #3
 800ba76:	fb06 5101 	mla	r1, r6, r1, r5
 800ba7a:	fb00 4001 	mla	r0, r0, r1, r4
 800ba7e:	bd70      	pop	{r4, r5, r6, pc}

0800ba80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800ba80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ba84:	b08a      	sub	sp, #40	; 0x28
 800ba86:	f04f 0c00 	mov.w	ip, #0
 800ba8a:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800ba8e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800ba92:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800ba96:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800ba9a:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800ba9e:	f8cd c020 	str.w	ip, [sp, #32]
 800baa2:	f1b8 0f02 	cmp.w	r8, #2
 800baa6:	4604      	mov	r4, r0
 800baa8:	469a      	mov	sl, r3
 800baaa:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800baae:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800bab2:	d030      	beq.n	800bb16 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800bab4:	2bff      	cmp	r3, #255	; 0xff
 800bab6:	d12c      	bne.n	800bb12 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800bab8:	4560      	cmp	r0, ip
 800baba:	bf14      	ite	ne
 800babc:	2004      	movne	r0, #4
 800babe:	2001      	moveq	r0, #1
 800bac0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bac4:	9204      	str	r2, [sp, #16]
 800bac6:	4620      	mov	r0, r4
 800bac8:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800bacc:	f8ad 201c 	strh.w	r2, [sp, #28]
 800bad0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bad4:	f8ad 6018 	strh.w	r6, [sp, #24]
 800bad8:	f8ad 501a 	strh.w	r5, [sp, #26]
 800badc:	f7ff ff5e 	bl	800b99c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bae0:	e9cd 9700 	strd	r9, r7, [sp]
 800bae4:	4603      	mov	r3, r0
 800bae6:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800baea:	4651      	mov	r1, sl
 800baec:	4620      	mov	r0, r4
 800baee:	f7ff ffb7 	bl	800ba60 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800baf2:	f8ad 901e 	strh.w	r9, [sp, #30]
 800baf6:	9005      	str	r0, [sp, #20]
 800baf8:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800bafc:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800bb00:	b106      	cbz	r6, 800bb04 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800bb02:	b98d      	cbnz	r5, 800bb28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800bb04:	4b12      	ldr	r3, [pc, #72]	; (800bb50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800bb06:	4a13      	ldr	r2, [pc, #76]	; (800bb54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800bb08:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800bb0c:	4812      	ldr	r0, [pc, #72]	; (800bb58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800bb0e:	f00e ff05 	bl	801a91c <__assert_func>
 800bb12:	2004      	movs	r0, #4
 800bb14:	e7d4      	b.n	800bac0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800bb16:	2bff      	cmp	r3, #255	; 0xff
 800bb18:	d104      	bne.n	800bb24 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800bb1a:	2800      	cmp	r0, #0
 800bb1c:	bf14      	ite	ne
 800bb1e:	2040      	movne	r0, #64	; 0x40
 800bb20:	2020      	moveq	r0, #32
 800bb22:	e7cd      	b.n	800bac0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800bb24:	2040      	movs	r0, #64	; 0x40
 800bb26:	e7cb      	b.n	800bac0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800bb28:	6823      	ldr	r3, [r4, #0]
 800bb2a:	9d02      	ldr	r5, [sp, #8]
 800bb2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bb2e:	4620      	mov	r0, r4
 800bb30:	4798      	blx	r3
 800bb32:	4228      	tst	r0, r5
 800bb34:	d104      	bne.n	800bb40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800bb36:	4b09      	ldr	r3, [pc, #36]	; (800bb5c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800bb38:	4a06      	ldr	r2, [pc, #24]	; (800bb54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800bb3a:	f240 11b1 	movw	r1, #433	; 0x1b1
 800bb3e:	e7e5      	b.n	800bb0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800bb40:	6860      	ldr	r0, [r4, #4]
 800bb42:	6803      	ldr	r3, [r0, #0]
 800bb44:	a902      	add	r1, sp, #8
 800bb46:	685b      	ldr	r3, [r3, #4]
 800bb48:	4798      	blx	r3
 800bb4a:	b00a      	add	sp, #40	; 0x28
 800bb4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bb50:	0801ccae 	.word	0x0801ccae
 800bb54:	0801cf62 	.word	0x0801cf62
 800bb58:	0801cc32 	.word	0x0801cc32
 800bb5c:	0801cce6 	.word	0x0801cce6

0800bb60 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800bb60:	b510      	push	{r4, lr}
 800bb62:	b08a      	sub	sp, #40	; 0x28
 800bb64:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800bb68:	9408      	str	r4, [sp, #32]
 800bb6a:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800bb6e:	9407      	str	r4, [sp, #28]
 800bb70:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800bb74:	9406      	str	r4, [sp, #24]
 800bb76:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800bb7a:	9405      	str	r4, [sp, #20]
 800bb7c:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800bb80:	9404      	str	r4, [sp, #16]
 800bb82:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800bb86:	9403      	str	r4, [sp, #12]
 800bb88:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800bb8c:	9402      	str	r4, [sp, #8]
 800bb8e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800bb92:	e9cd 3400 	strd	r3, r4, [sp]
 800bb96:	4613      	mov	r3, r2
 800bb98:	2200      	movs	r2, #0
 800bb9a:	f7ff ff71 	bl	800ba80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800bb9e:	b00a      	add	sp, #40	; 0x28
 800bba0:	bd10      	pop	{r4, pc}
	...

0800bba4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800bba4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bba6:	b08b      	sub	sp, #44	; 0x2c
 800bba8:	4616      	mov	r6, r2
 800bbaa:	460d      	mov	r5, r1
 800bbac:	461f      	mov	r7, r3
 800bbae:	4604      	mov	r4, r0
 800bbb0:	f7fc f87a 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800bbb4:	6803      	ldr	r3, [r0, #0]
 800bbb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bbb8:	4798      	blx	r3
 800bbba:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800bbbe:	4b0d      	ldr	r3, [pc, #52]	; (800bbf4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800bbc0:	881b      	ldrh	r3, [r3, #0]
 800bbc2:	9306      	str	r3, [sp, #24]
 800bbc4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800bbc8:	9305      	str	r3, [sp, #20]
 800bbca:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800bbce:	9304      	str	r3, [sp, #16]
 800bbd0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bbd4:	9303      	str	r3, [sp, #12]
 800bbd6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bbda:	9302      	str	r3, [sp, #8]
 800bbdc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bbe0:	2200      	movs	r2, #0
 800bbe2:	e9cd 7300 	strd	r7, r3, [sp]
 800bbe6:	4629      	mov	r1, r5
 800bbe8:	4633      	mov	r3, r6
 800bbea:	4620      	mov	r0, r4
 800bbec:	f7ff ff48 	bl	800ba80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800bbf0:	b00b      	add	sp, #44	; 0x2c
 800bbf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bbf4:	200014b2 	.word	0x200014b2

0800bbf8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800bbf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbfc:	461f      	mov	r7, r3
 800bbfe:	4b14      	ldr	r3, [pc, #80]	; (800bc50 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800bc00:	b08a      	sub	sp, #40	; 0x28
 800bc02:	4616      	mov	r6, r2
 800bc04:	f8b3 8000 	ldrh.w	r8, [r3]
 800bc08:	460d      	mov	r5, r1
 800bc0a:	4604      	mov	r4, r0
 800bc0c:	f7fc f84c 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800bc10:	6803      	ldr	r3, [r0, #0]
 800bc12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bc14:	4798      	blx	r3
 800bc16:	2302      	movs	r3, #2
 800bc18:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800bc1c:	2301      	movs	r3, #1
 800bc1e:	9305      	str	r3, [sp, #20]
 800bc20:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800bc24:	9304      	str	r3, [sp, #16]
 800bc26:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bc2a:	9303      	str	r3, [sp, #12]
 800bc2c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bc30:	9302      	str	r3, [sp, #8]
 800bc32:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bc36:	9008      	str	r0, [sp, #32]
 800bc38:	e9cd 7300 	strd	r7, r3, [sp]
 800bc3c:	2200      	movs	r2, #0
 800bc3e:	4633      	mov	r3, r6
 800bc40:	4629      	mov	r1, r5
 800bc42:	4620      	mov	r0, r4
 800bc44:	f7ff ff1c 	bl	800ba80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800bc48:	b00a      	add	sp, #40	; 0x28
 800bc4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc4e:	bf00      	nop
 800bc50:	200014b2 	.word	0x200014b2

0800bc54 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800bc54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc58:	b08b      	sub	sp, #44	; 0x2c
 800bc5a:	469b      	mov	fp, r3
 800bc5c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800bc60:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800bc64:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800bc68:	2fff      	cmp	r7, #255	; 0xff
 800bc6a:	bf14      	ite	ne
 800bc6c:	2308      	movne	r3, #8
 800bc6e:	2302      	moveq	r3, #2
 800bc70:	2600      	movs	r6, #0
 800bc72:	4604      	mov	r4, r0
 800bc74:	4689      	mov	r9, r1
 800bc76:	4692      	mov	sl, r2
 800bc78:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800bc7c:	9608      	str	r6, [sp, #32]
 800bc7e:	f7ff fe8d 	bl	800b99c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc82:	e9cd 8500 	strd	r8, r5, [sp]
 800bc86:	4603      	mov	r3, r0
 800bc88:	465a      	mov	r2, fp
 800bc8a:	4651      	mov	r1, sl
 800bc8c:	4620      	mov	r0, r4
 800bc8e:	f7ff fee7 	bl	800ba60 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800bc92:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800bc96:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bc9a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800bc9e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bca2:	6823      	ldr	r3, [r4, #0]
 800bca4:	9005      	str	r0, [sp, #20]
 800bca6:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800bcaa:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800bcae:	f8ad 601c 	strh.w	r6, [sp, #28]
 800bcb2:	f8ad 801e 	strh.w	r8, [sp, #30]
 800bcb6:	f8cd 9020 	str.w	r9, [sp, #32]
 800bcba:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800bcbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bcc0:	9d02      	ldr	r5, [sp, #8]
 800bcc2:	4620      	mov	r0, r4
 800bcc4:	4798      	blx	r3
 800bcc6:	4228      	tst	r0, r5
 800bcc8:	d106      	bne.n	800bcd8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800bcca:	4b07      	ldr	r3, [pc, #28]	; (800bce8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800bccc:	4a07      	ldr	r2, [pc, #28]	; (800bcec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800bcce:	4808      	ldr	r0, [pc, #32]	; (800bcf0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800bcd0:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
 800bcd4:	f00e fe22 	bl	801a91c <__assert_func>
 800bcd8:	6860      	ldr	r0, [r4, #4]
 800bcda:	6803      	ldr	r3, [r0, #0]
 800bcdc:	a902      	add	r1, sp, #8
 800bcde:	685b      	ldr	r3, [r3, #4]
 800bce0:	4798      	blx	r3
 800bce2:	b00b      	add	sp, #44	; 0x2c
 800bce4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bce8:	0801cce6 	.word	0x0801cce6
 800bcec:	0801d02b 	.word	0x0801d02b
 800bcf0:	0801cc32 	.word	0x0801cc32

0800bcf4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800bcf4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800bcf8:	461f      	mov	r7, r3
 800bcfa:	4b0b      	ldr	r3, [pc, #44]	; (800bd28 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800bcfc:	460d      	mov	r5, r1
 800bcfe:	f8b3 8000 	ldrh.w	r8, [r3]
 800bd02:	4616      	mov	r6, r2
 800bd04:	4604      	mov	r4, r0
 800bd06:	f7fb ffcf 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800bd0a:	6803      	ldr	r3, [r0, #0]
 800bd0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd0e:	4798      	blx	r3
 800bd10:	463b      	mov	r3, r7
 800bd12:	e9cd 8000 	strd	r8, r0, [sp]
 800bd16:	4632      	mov	r2, r6
 800bd18:	4629      	mov	r1, r5
 800bd1a:	4620      	mov	r0, r4
 800bd1c:	f7ff fea0 	bl	800ba60 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800bd20:	b002      	add	sp, #8
 800bd22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd26:	bf00      	nop
 800bd28:	200014b2 	.word	0x200014b2

0800bd2c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800bd2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd30:	b088      	sub	sp, #32
 800bd32:	4698      	mov	r8, r3
 800bd34:	2300      	movs	r3, #0
 800bd36:	9306      	str	r3, [sp, #24]
 800bd38:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800bd3c:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800bd40:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800bd44:	f8ad 6010 	strh.w	r6, [sp, #16]
 800bd48:	e9cd 3100 	strd	r3, r1, [sp]
 800bd4c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bd50:	f8ad 3014 	strh.w	r3, [sp, #20]
 800bd54:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800bd58:	f88d 301c 	strb.w	r3, [sp, #28]
 800bd5c:	4617      	mov	r7, r2
 800bd5e:	4604      	mov	r4, r0
 800bd60:	f8ad 5012 	strh.w	r5, [sp, #18]
 800bd64:	f7ff fe1a 	bl	800b99c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bd68:	4642      	mov	r2, r8
 800bd6a:	4603      	mov	r3, r0
 800bd6c:	4639      	mov	r1, r7
 800bd6e:	4620      	mov	r0, r4
 800bd70:	f7ff ffc0 	bl	800bcf4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bd74:	4b16      	ldr	r3, [pc, #88]	; (800bdd0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800bd76:	9003      	str	r0, [sp, #12]
 800bd78:	881b      	ldrh	r3, [r3, #0]
 800bd7a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bd7e:	f7fb ff93 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800bd82:	6803      	ldr	r3, [r0, #0]
 800bd84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd86:	4798      	blx	r3
 800bd88:	f88d 001e 	strb.w	r0, [sp, #30]
 800bd8c:	f88d 001d 	strb.w	r0, [sp, #29]
 800bd90:	b106      	cbz	r6, 800bd94 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800bd92:	b935      	cbnz	r5, 800bda2 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800bd94:	4b0f      	ldr	r3, [pc, #60]	; (800bdd4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800bd96:	4a10      	ldr	r2, [pc, #64]	; (800bdd8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800bd98:	f240 11cd 	movw	r1, #461	; 0x1cd
 800bd9c:	480f      	ldr	r0, [pc, #60]	; (800bddc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800bd9e:	f00e fdbd 	bl	801a91c <__assert_func>
 800bda2:	6823      	ldr	r3, [r4, #0]
 800bda4:	9d00      	ldr	r5, [sp, #0]
 800bda6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bda8:	4620      	mov	r0, r4
 800bdaa:	4798      	blx	r3
 800bdac:	4228      	tst	r0, r5
 800bdae:	d104      	bne.n	800bdba <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800bdb0:	4b0b      	ldr	r3, [pc, #44]	; (800bde0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800bdb2:	4a09      	ldr	r2, [pc, #36]	; (800bdd8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800bdb4:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 800bdb8:	e7f0      	b.n	800bd9c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800bdba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bdbc:	6860      	ldr	r0, [r4, #4]
 800bdbe:	9306      	str	r3, [sp, #24]
 800bdc0:	6803      	ldr	r3, [r0, #0]
 800bdc2:	4669      	mov	r1, sp
 800bdc4:	685b      	ldr	r3, [r3, #4]
 800bdc6:	4798      	blx	r3
 800bdc8:	b008      	add	sp, #32
 800bdca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bdce:	bf00      	nop
 800bdd0:	200014b2 	.word	0x200014b2
 800bdd4:	0801ccae 	.word	0x0801ccae
 800bdd8:	0801ce14 	.word	0x0801ce14
 800bddc:	0801cc32 	.word	0x0801cc32
 800bde0:	0801cce6 	.word	0x0801cce6

0800bde4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800bde4:	b570      	push	{r4, r5, r6, lr}
 800bde6:	b08a      	sub	sp, #40	; 0x28
 800bde8:	466b      	mov	r3, sp
 800bdea:	e883 0006 	stmia.w	r3, {r1, r2}
 800bdee:	4b20      	ldr	r3, [pc, #128]	; (800be70 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800bdf0:	781b      	ldrb	r3, [r3, #0]
 800bdf2:	4604      	mov	r4, r0
 800bdf4:	b933      	cbnz	r3, 800be04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800bdf6:	4b1f      	ldr	r3, [pc, #124]	; (800be74 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800bdf8:	4a1f      	ldr	r2, [pc, #124]	; (800be78 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800bdfa:	4820      	ldr	r0, [pc, #128]	; (800be7c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800bdfc:	f240 11f9 	movw	r1, #505	; 0x1f9
 800be00:	f00e fd8c 	bl	801a91c <__assert_func>
 800be04:	2300      	movs	r3, #0
 800be06:	9308      	str	r3, [sp, #32]
 800be08:	2301      	movs	r3, #1
 800be0a:	9302      	str	r3, [sp, #8]
 800be0c:	6803      	ldr	r3, [r0, #0]
 800be0e:	f8bd 5000 	ldrh.w	r5, [sp]
 800be12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800be14:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800be18:	4798      	blx	r3
 800be1a:	4632      	mov	r2, r6
 800be1c:	4629      	mov	r1, r5
 800be1e:	4603      	mov	r3, r0
 800be20:	4620      	mov	r0, r4
 800be22:	f7ff ff67 	bl	800bcf4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800be26:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800be28:	9305      	str	r3, [sp, #20]
 800be2a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800be2e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800be32:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800be36:	f8ad 301a 	strh.w	r3, [sp, #26]
 800be3a:	4b11      	ldr	r3, [pc, #68]	; (800be80 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800be3c:	9003      	str	r0, [sp, #12]
 800be3e:	881b      	ldrh	r3, [r3, #0]
 800be40:	f8ad 301c 	strh.w	r3, [sp, #28]
 800be44:	f8ad 301e 	strh.w	r3, [sp, #30]
 800be48:	f7fb ff2e 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800be4c:	6803      	ldr	r3, [r0, #0]
 800be4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be50:	4798      	blx	r3
 800be52:	23ff      	movs	r3, #255	; 0xff
 800be54:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800be58:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800be5c:	6860      	ldr	r0, [r4, #4]
 800be5e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800be62:	6803      	ldr	r3, [r0, #0]
 800be64:	a902      	add	r1, sp, #8
 800be66:	685b      	ldr	r3, [r3, #4]
 800be68:	4798      	blx	r3
 800be6a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800be6c:	b00a      	add	sp, #40	; 0x28
 800be6e:	bd70      	pop	{r4, r5, r6, pc}
 800be70:	200014b7 	.word	0x200014b7
 800be74:	0801cb7f 	.word	0x0801cb7f
 800be78:	0801ceb8 	.word	0x0801ceb8
 800be7c:	0801cc32 	.word	0x0801cc32
 800be80:	200014b2 	.word	0x200014b2

0800be84 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800be84:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be86:	b08b      	sub	sp, #44	; 0x2c
 800be88:	466d      	mov	r5, sp
 800be8a:	e885 0006 	stmia.w	r5, {r1, r2}
 800be8e:	461d      	mov	r5, r3
 800be90:	2300      	movs	r3, #0
 800be92:	9308      	str	r3, [sp, #32]
 800be94:	2301      	movs	r3, #1
 800be96:	9302      	str	r3, [sp, #8]
 800be98:	6803      	ldr	r3, [r0, #0]
 800be9a:	f8bd 6000 	ldrh.w	r6, [sp]
 800be9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bea0:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800bea4:	4604      	mov	r4, r0
 800bea6:	4798      	blx	r3
 800bea8:	463a      	mov	r2, r7
 800beaa:	4631      	mov	r1, r6
 800beac:	4603      	mov	r3, r0
 800beae:	4620      	mov	r0, r4
 800beb0:	f7ff ff20 	bl	800bcf4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800beb4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800beb8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bebc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bec0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bec4:	4b0e      	ldr	r3, [pc, #56]	; (800bf00 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800bec6:	9003      	str	r0, [sp, #12]
 800bec8:	881b      	ldrh	r3, [r3, #0]
 800beca:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bece:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bed0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bed4:	9505      	str	r5, [sp, #20]
 800bed6:	f7fb fee7 	bl	8007ca8 <_ZN8touchgfx3HAL3lcdEv>
 800beda:	6803      	ldr	r3, [r0, #0]
 800bedc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bede:	4798      	blx	r3
 800bee0:	23ff      	movs	r3, #255	; 0xff
 800bee2:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800bee6:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800beea:	6860      	ldr	r0, [r4, #4]
 800beec:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bef0:	6803      	ldr	r3, [r0, #0]
 800bef2:	a902      	add	r1, sp, #8
 800bef4:	685b      	ldr	r3, [r3, #4]
 800bef6:	4798      	blx	r3
 800bef8:	4628      	mov	r0, r5
 800befa:	b00b      	add	sp, #44	; 0x2c
 800befc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800befe:	bf00      	nop
 800bf00:	200014b2 	.word	0x200014b2

0800bf04 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bf04:	b570      	push	{r4, r5, r6, lr}
 800bf06:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800bf0a:	4604      	mov	r4, r0
 800bf0c:	b19b      	cbz	r3, 800bf36 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bf0e:	2002      	movs	r0, #2
 800bf10:	f7fd fa20 	bl	8009354 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bf14:	2300      	movs	r3, #0
 800bf16:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800bf1a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800bf1e:	6823      	ldr	r3, [r4, #0]
 800bf20:	4620      	mov	r0, r4
 800bf22:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800bf26:	f7ff fd39 	bl	800b99c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bf2a:	462b      	mov	r3, r5
 800bf2c:	4601      	mov	r1, r0
 800bf2e:	4620      	mov	r0, r4
 800bf30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf34:	4718      	bx	r3
 800bf36:	bd70      	pop	{r4, r5, r6, pc}

0800bf38 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800bf38:	4770      	bx	lr

0800bf3a <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bf3a:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bf3e:	1a13      	subs	r3, r2, r0
 800bf40:	4258      	negs	r0, r3
 800bf42:	4158      	adcs	r0, r3
 800bf44:	4770      	bx	lr

0800bf46 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bf46:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bf4a:	1a9b      	subs	r3, r3, r2
 800bf4c:	2b00      	cmp	r3, #0
 800bf4e:	bfdc      	itt	le
 800bf50:	6882      	ldrle	r2, [r0, #8]
 800bf52:	189b      	addle	r3, r3, r2
 800bf54:	2b01      	cmp	r3, #1
 800bf56:	bfcc      	ite	gt
 800bf58:	2000      	movgt	r0, #0
 800bf5a:	2001      	movle	r0, #1
 800bf5c:	4770      	bx	lr

0800bf5e <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bf5e:	6902      	ldr	r2, [r0, #16]
 800bf60:	6840      	ldr	r0, [r0, #4]
 800bf62:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800bf66:	4770      	bx	lr

0800bf68 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bf68:	6803      	ldr	r3, [r0, #0]
 800bf6a:	691b      	ldr	r3, [r3, #16]
 800bf6c:	4718      	bx	r3

0800bf6e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bf6e:	4770      	bx	lr

0800bf70 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bf70:	4770      	bx	lr
	...

0800bf74 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bf74:	b570      	push	{r4, r5, r6, lr}
 800bf76:	2301      	movs	r3, #1
 800bf78:	7203      	strb	r3, [r0, #8]
 800bf7a:	4604      	mov	r4, r0
 800bf7c:	6840      	ldr	r0, [r0, #4]
 800bf7e:	6803      	ldr	r3, [r0, #0]
 800bf80:	699b      	ldr	r3, [r3, #24]
 800bf82:	4798      	blx	r3
 800bf84:	6803      	ldr	r3, [r0, #0]
 800bf86:	2b08      	cmp	r3, #8
 800bf88:	4605      	mov	r5, r0
 800bf8a:	d01e      	beq.n	800bfca <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800bf8c:	d80b      	bhi.n	800bfa6 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bf8e:	2b02      	cmp	r3, #2
 800bf90:	d027      	beq.n	800bfe2 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800bf92:	2b04      	cmp	r3, #4
 800bf94:	d011      	beq.n	800bfba <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800bf96:	2b01      	cmp	r3, #1
 800bf98:	d028      	beq.n	800bfec <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bf9a:	4b17      	ldr	r3, [pc, #92]	; (800bff8 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800bf9c:	4a17      	ldr	r2, [pc, #92]	; (800bffc <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800bf9e:	4818      	ldr	r0, [pc, #96]	; (800c000 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800bfa0:	218b      	movs	r1, #139	; 0x8b
 800bfa2:	f00e fcbb 	bl	801a91c <__assert_func>
 800bfa6:	2b40      	cmp	r3, #64	; 0x40
 800bfa8:	d020      	beq.n	800bfec <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bfaa:	d801      	bhi.n	800bfb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bfac:	2b20      	cmp	r3, #32
 800bfae:	e7f3      	b.n	800bf98 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800bfb0:	2b80      	cmp	r3, #128	; 0x80
 800bfb2:	d01b      	beq.n	800bfec <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bfb4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bfb8:	e7ee      	b.n	800bf98 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800bfba:	6823      	ldr	r3, [r4, #0]
 800bfbc:	7f01      	ldrb	r1, [r0, #28]
 800bfbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bfc0:	4620      	mov	r0, r4
 800bfc2:	4798      	blx	r3
 800bfc4:	6823      	ldr	r3, [r4, #0]
 800bfc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bfc8:	e006      	b.n	800bfd8 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bfca:	6823      	ldr	r3, [r4, #0]
 800bfcc:	7f01      	ldrb	r1, [r0, #28]
 800bfce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bfd0:	4620      	mov	r0, r4
 800bfd2:	4798      	blx	r3
 800bfd4:	6823      	ldr	r3, [r4, #0]
 800bfd6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bfd8:	4629      	mov	r1, r5
 800bfda:	4620      	mov	r0, r4
 800bfdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bfe0:	4718      	bx	r3
 800bfe2:	6823      	ldr	r3, [r4, #0]
 800bfe4:	4620      	mov	r0, r4
 800bfe6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bfe8:	4798      	blx	r3
 800bfea:	e7f3      	b.n	800bfd4 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800bfec:	6823      	ldr	r3, [r4, #0]
 800bfee:	4620      	mov	r0, r4
 800bff0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bff2:	4798      	blx	r3
 800bff4:	e7e6      	b.n	800bfc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800bff6:	bf00      	nop
 800bff8:	0801d109 	.word	0x0801d109
 800bffc:	0801d218 	.word	0x0801d218
 800c000:	0801d12e 	.word	0x0801d12e

0800c004 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800c004:	b570      	push	{r4, r5, r6, lr}
 800c006:	4604      	mov	r4, r0
 800c008:	460e      	mov	r6, r1
 800c00a:	6860      	ldr	r0, [r4, #4]
 800c00c:	6803      	ldr	r3, [r0, #0]
 800c00e:	685b      	ldr	r3, [r3, #4]
 800c010:	4798      	blx	r3
 800c012:	2800      	cmp	r0, #0
 800c014:	d1f9      	bne.n	800c00a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800c016:	4d0b      	ldr	r5, [pc, #44]	; (800c044 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800c018:	6828      	ldr	r0, [r5, #0]
 800c01a:	6803      	ldr	r3, [r0, #0]
 800c01c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c01e:	4798      	blx	r3
 800c020:	f7fd fc40 	bl	80098a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800c024:	6860      	ldr	r0, [r4, #4]
 800c026:	6803      	ldr	r3, [r0, #0]
 800c028:	4631      	mov	r1, r6
 800c02a:	689b      	ldr	r3, [r3, #8]
 800c02c:	4798      	blx	r3
 800c02e:	6823      	ldr	r3, [r4, #0]
 800c030:	4620      	mov	r0, r4
 800c032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c034:	4798      	blx	r3
 800c036:	6828      	ldr	r0, [r5, #0]
 800c038:	6803      	ldr	r3, [r0, #0]
 800c03a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c03e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c040:	4718      	bx	r3
 800c042:	bf00      	nop
 800c044:	200014b8 	.word	0x200014b8

0800c048 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800c048:	b508      	push	{r3, lr}
 800c04a:	f7fd fc09 	bl	8009860 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c04e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c052:	f7fd bc1b 	b.w	800988c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c056 <_ZN8touchgfx13DMA_Interface5startEv>:
 800c056:	b510      	push	{r4, lr}
 800c058:	4604      	mov	r4, r0
 800c05a:	6840      	ldr	r0, [r0, #4]
 800c05c:	6803      	ldr	r3, [r0, #0]
 800c05e:	681b      	ldr	r3, [r3, #0]
 800c060:	4798      	blx	r3
 800c062:	b948      	cbnz	r0, 800c078 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c064:	7a63      	ldrb	r3, [r4, #9]
 800c066:	b13b      	cbz	r3, 800c078 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c068:	7a23      	ldrb	r3, [r4, #8]
 800c06a:	b92b      	cbnz	r3, 800c078 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c06c:	6823      	ldr	r3, [r4, #0]
 800c06e:	4620      	mov	r0, r4
 800c070:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c072:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c076:	4718      	bx	r3
 800c078:	bd10      	pop	{r4, pc}
	...

0800c07c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800c07c:	b510      	push	{r4, lr}
 800c07e:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800c082:	1b12      	subs	r2, r2, r4
 800c084:	2a00      	cmp	r2, #0
 800c086:	bfdc      	itt	le
 800c088:	6883      	ldrle	r3, [r0, #8]
 800c08a:	18d2      	addle	r2, r2, r3
 800c08c:	2a01      	cmp	r2, #1
 800c08e:	dd18      	ble.n	800c0c2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800c090:	6843      	ldr	r3, [r0, #4]
 800c092:	f101 021c 	add.w	r2, r1, #28
 800c096:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800c09a:	f851 4b04 	ldr.w	r4, [r1], #4
 800c09e:	f843 4b04 	str.w	r4, [r3], #4
 800c0a2:	4291      	cmp	r1, r2
 800c0a4:	d1f9      	bne.n	800c09a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800c0a6:	880a      	ldrh	r2, [r1, #0]
 800c0a8:	801a      	strh	r2, [r3, #0]
 800c0aa:	788a      	ldrb	r2, [r1, #2]
 800c0ac:	709a      	strb	r2, [r3, #2]
 800c0ae:	68c3      	ldr	r3, [r0, #12]
 800c0b0:	6882      	ldr	r2, [r0, #8]
 800c0b2:	f3bf 8f5b 	dmb	ish
 800c0b6:	3301      	adds	r3, #1
 800c0b8:	429a      	cmp	r2, r3
 800c0ba:	bfd8      	it	le
 800c0bc:	1a9b      	suble	r3, r3, r2
 800c0be:	60c3      	str	r3, [r0, #12]
 800c0c0:	bd10      	pop	{r4, pc}
 800c0c2:	4b03      	ldr	r3, [pc, #12]	; (800c0d0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800c0c4:	4a03      	ldr	r2, [pc, #12]	; (800c0d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800c0c6:	4804      	ldr	r0, [pc, #16]	; (800c0d8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800c0c8:	2139      	movs	r1, #57	; 0x39
 800c0ca:	f00e fc27 	bl	801a91c <__assert_func>
 800c0ce:	bf00      	nop
 800c0d0:	0801d154 	.word	0x0801d154
 800c0d4:	0801d248 	.word	0x0801d248
 800c0d8:	0801d12e 	.word	0x0801d12e

0800c0dc <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800c0dc:	b510      	push	{r4, lr}
 800c0de:	6803      	ldr	r3, [r0, #0]
 800c0e0:	681b      	ldr	r3, [r3, #0]
 800c0e2:	4604      	mov	r4, r0
 800c0e4:	4798      	blx	r3
 800c0e6:	b128      	cbz	r0, 800c0f4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800c0e8:	4b07      	ldr	r3, [pc, #28]	; (800c108 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800c0ea:	4a08      	ldr	r2, [pc, #32]	; (800c10c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800c0ec:	4808      	ldr	r0, [pc, #32]	; (800c110 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800c0ee:	213f      	movs	r1, #63	; 0x3f
 800c0f0:	f00e fc14 	bl	801a91c <__assert_func>
 800c0f4:	6923      	ldr	r3, [r4, #16]
 800c0f6:	68a2      	ldr	r2, [r4, #8]
 800c0f8:	f3bf 8f5b 	dmb	ish
 800c0fc:	3301      	adds	r3, #1
 800c0fe:	429a      	cmp	r2, r3
 800c100:	bfd8      	it	le
 800c102:	1a9b      	suble	r3, r3, r2
 800c104:	6123      	str	r3, [r4, #16]
 800c106:	bd10      	pop	{r4, pc}
 800c108:	0801d177 	.word	0x0801d177
 800c10c:	0801d296 	.word	0x0801d296
 800c110:	0801d12e 	.word	0x0801d12e

0800c114 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800c114:	b570      	push	{r4, r5, r6, lr}
 800c116:	4604      	mov	r4, r0
 800c118:	6840      	ldr	r0, [r0, #4]
 800c11a:	6803      	ldr	r3, [r0, #0]
 800c11c:	681b      	ldr	r3, [r3, #0]
 800c11e:	4798      	blx	r3
 800c120:	4605      	mov	r5, r0
 800c122:	b930      	cbnz	r0, 800c132 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c124:	7a23      	ldrb	r3, [r4, #8]
 800c126:	b123      	cbz	r3, 800c132 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c128:	6860      	ldr	r0, [r4, #4]
 800c12a:	6803      	ldr	r3, [r0, #0]
 800c12c:	695b      	ldr	r3, [r3, #20]
 800c12e:	4798      	blx	r3
 800c130:	7225      	strb	r5, [r4, #8]
 800c132:	6860      	ldr	r0, [r4, #4]
 800c134:	6803      	ldr	r3, [r0, #0]
 800c136:	681b      	ldr	r3, [r3, #0]
 800c138:	4798      	blx	r3
 800c13a:	b928      	cbnz	r0, 800c148 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c13c:	6823      	ldr	r3, [r4, #0]
 800c13e:	4620      	mov	r0, r4
 800c140:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c142:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c146:	4718      	bx	r3
 800c148:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c14c:	f7fd bbb6 	b.w	80098bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c150 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c150:	b510      	push	{r4, lr}
 800c152:	4c04      	ldr	r4, [pc, #16]	; (800c164 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c154:	6082      	str	r2, [r0, #8]
 800c156:	2200      	movs	r2, #0
 800c158:	e9c0 4100 	strd	r4, r1, [r0]
 800c15c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c160:	bd10      	pop	{r4, pc}
 800c162:	bf00      	nop
 800c164:	0801d1fc 	.word	0x0801d1fc

0800c168 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c168:	6840      	ldr	r0, [r0, #4]
 800c16a:	6803      	ldr	r3, [r0, #0]
 800c16c:	681b      	ldr	r3, [r3, #0]
 800c16e:	4718      	bx	r3

0800c170 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800c170:	2200      	movs	r2, #0
 800c172:	8002      	strh	r2, [r0, #0]
 800c174:	8042      	strh	r2, [r0, #2]
 800c176:	8082      	strh	r2, [r0, #4]
 800c178:	80c2      	strh	r2, [r0, #6]
 800c17a:	4770      	bx	lr

0800c17c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800c17c:	b570      	push	{r4, r5, r6, lr}
 800c17e:	6803      	ldr	r3, [r0, #0]
 800c180:	4604      	mov	r4, r0
 800c182:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c184:	4615      	mov	r5, r2
 800c186:	4798      	blx	r3
 800c188:	6823      	ldr	r3, [r4, #0]
 800c18a:	4629      	mov	r1, r5
 800c18c:	4620      	mov	r0, r4
 800c18e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c194:	4718      	bx	r3
	...

0800c198 <_ZNK8touchgfx9TypedText7getTextEv>:
 800c198:	b510      	push	{r4, lr}
 800c19a:	4604      	mov	r4, r0
 800c19c:	f7fb faaa 	bl	80076f4 <_ZNK8touchgfx9TypedText11assertValidEv>
 800c1a0:	4b03      	ldr	r3, [pc, #12]	; (800c1b0 <_ZNK8touchgfx9TypedText7getTextEv+0x18>)
 800c1a2:	8821      	ldrh	r1, [r4, #0]
 800c1a4:	6818      	ldr	r0, [r3, #0]
 800c1a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1aa:	f7fc be7d 	b.w	8008ea8 <_ZNK8touchgfx5Texts7getTextEt>
 800c1ae:	bf00      	nop
 800c1b0:	20001534 	.word	0x20001534

0800c1b4 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800c1b4:	b570      	push	{r4, r5, r6, lr}
 800c1b6:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c1b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c1bc:	429a      	cmp	r2, r3
 800c1be:	4604      	mov	r4, r0
 800c1c0:	d00c      	beq.n	800c1dc <_ZN8touchgfx8TextArea13getTextHeightEv+0x28>
 800c1c2:	f850 3b26 	ldr.w	r3, [r0], #38
 800c1c6:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800c1c8:	f7ff ffe6 	bl	800c198 <_ZNK8touchgfx9TypedText7getTextEv>
 800c1cc:	2300      	movs	r3, #0
 800c1ce:	4601      	mov	r1, r0
 800c1d0:	46ac      	mov	ip, r5
 800c1d2:	4620      	mov	r0, r4
 800c1d4:	461a      	mov	r2, r3
 800c1d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c1da:	4760      	bx	ip
 800c1dc:	2000      	movs	r0, #0
 800c1de:	bd70      	pop	{r4, r5, r6, pc}

0800c1e0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800c1e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c1e2:	6803      	ldr	r3, [r0, #0]
 800c1e4:	4604      	mov	r4, r0
 800c1e6:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800c1e8:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 800c1ea:	a802      	add	r0, sp, #8
 800c1ec:	460d      	mov	r5, r1
 800c1ee:	f820 3d04 	strh.w	r3, [r0, #-4]!
 800c1f2:	f7fb fa4b 	bl	800768c <_ZNK8touchgfx9TypedText7getFontEv>
 800c1f6:	6803      	ldr	r3, [r0, #0]
 800c1f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c1fa:	4798      	blx	r3
 800c1fc:	1a29      	subs	r1, r5, r0
 800c1fe:	b209      	sxth	r1, r1
 800c200:	4620      	mov	r0, r4
 800c202:	47b0      	blx	r6
 800c204:	b002      	add	sp, #8
 800c206:	bd70      	pop	{r4, r5, r6, pc}

0800c208 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800c208:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c20a:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c20c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c210:	429a      	cmp	r2, r3
 800c212:	d016      	beq.n	800c242 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x3a>
 800c214:	f100 0426 	add.w	r4, r0, #38	; 0x26
 800c218:	4620      	mov	r0, r4
 800c21a:	f7fb fa37 	bl	800768c <_ZNK8touchgfx9TypedText7getFontEv>
 800c21e:	6803      	ldr	r3, [r0, #0]
 800c220:	4605      	mov	r5, r0
 800c222:	4620      	mov	r0, r4
 800c224:	69de      	ldr	r6, [r3, #28]
 800c226:	f7fb fa4d 	bl	80076c4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800c22a:	4607      	mov	r7, r0
 800c22c:	4620      	mov	r0, r4
 800c22e:	f7ff ffb3 	bl	800c198 <_ZNK8touchgfx9TypedText7getTextEv>
 800c232:	2300      	movs	r3, #0
 800c234:	4602      	mov	r2, r0
 800c236:	9300      	str	r3, [sp, #0]
 800c238:	4639      	mov	r1, r7
 800c23a:	4628      	mov	r0, r5
 800c23c:	47b0      	blx	r6
 800c23e:	b003      	add	sp, #12
 800c240:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c242:	2000      	movs	r0, #0
 800c244:	e7fb      	b.n	800c23e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x36>

0800c246 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800c246:	b40e      	push	{r1, r2, r3}
 800c248:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c24c:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c24e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c252:	429a      	cmp	r2, r3
 800c254:	b09b      	sub	sp, #108	; 0x6c
 800c256:	4604      	mov	r4, r0
 800c258:	d03f      	beq.n	800c2da <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x94>
 800c25a:	f100 0726 	add.w	r7, r0, #38	; 0x26
 800c25e:	ab22      	add	r3, sp, #136	; 0x88
 800c260:	4638      	mov	r0, r7
 800c262:	9303      	str	r3, [sp, #12]
 800c264:	f7fb fa12 	bl	800768c <_ZNK8touchgfx9TypedText7getFontEv>
 800c268:	6803      	ldr	r3, [r0, #0]
 800c26a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c26c:	4680      	mov	r8, r0
 800c26e:	4798      	blx	r3
 800c270:	b205      	sxth	r5, r0
 800c272:	4606      	mov	r6, r0
 800c274:	a804      	add	r0, sp, #16
 800c276:	f002 fbe3 	bl	800ea40 <_ZN8touchgfx12TextProviderC1Ev>
 800c27a:	f8d8 3000 	ldr.w	r3, [r8]
 800c27e:	4640      	mov	r0, r8
 800c280:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c282:	4798      	blx	r3
 800c284:	9a03      	ldr	r2, [sp, #12]
 800c286:	9921      	ldr	r1, [sp, #132]	; 0x84
 800c288:	4603      	mov	r3, r0
 800c28a:	a804      	add	r0, sp, #16
 800c28c:	f002 fbf5 	bl	800ea7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c290:	4638      	mov	r0, r7
 800c292:	f7fb fa17 	bl	80076c4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800c296:	4680      	mov	r8, r0
 800c298:	4638      	mov	r0, r7
 800c29a:	f7fb f9f7 	bl	800768c <_ZNK8touchgfx9TypedText7getFontEv>
 800c29e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c2a2:	f894 1031 	ldrb.w	r1, [r4, #49]	; 0x31
 800c2a6:	9300      	str	r3, [sp, #0]
 800c2a8:	4642      	mov	r2, r8
 800c2aa:	4603      	mov	r3, r0
 800c2ac:	a804      	add	r0, sp, #16
 800c2ae:	f000 fc98 	bl	800cbe2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800c2b2:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800c2b6:	18a9      	adds	r1, r5, r2
 800c2b8:	2900      	cmp	r1, #0
 800c2ba:	b203      	sxth	r3, r0
 800c2bc:	dd0b      	ble.n	800c2d6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x90>
 800c2be:	3b01      	subs	r3, #1
 800c2c0:	fb13 f302 	smulbb	r3, r3, r2
 800c2c4:	fb16 3300 	smlabb	r3, r6, r0, r3
 800c2c8:	b21d      	sxth	r5, r3
 800c2ca:	4628      	mov	r0, r5
 800c2cc:	b01b      	add	sp, #108	; 0x6c
 800c2ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c2d2:	b003      	add	sp, #12
 800c2d4:	4770      	bx	lr
 800c2d6:	2b00      	cmp	r3, #0
 800c2d8:	dcf7      	bgt.n	800c2ca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x84>
 800c2da:	2500      	movs	r5, #0
 800c2dc:	e7f5      	b.n	800c2ca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x84>
	...

0800c2e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800c2e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2e4:	8cc6      	ldrh	r6, [r0, #38]	; 0x26
 800c2e6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c2ea:	429e      	cmp	r6, r3
 800c2ec:	b08d      	sub	sp, #52	; 0x34
 800c2ee:	4604      	mov	r4, r0
 800c2f0:	4688      	mov	r8, r1
 800c2f2:	d04b      	beq.n	800c38c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xac>
 800c2f4:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800c2f8:	4628      	mov	r0, r5
 800c2fa:	f7fb f9c7 	bl	800768c <_ZNK8touchgfx9TypedText7getFontEv>
 800c2fe:	4607      	mov	r7, r0
 800c300:	2800      	cmp	r0, #0
 800c302:	d043      	beq.n	800c38c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xac>
 800c304:	4628      	mov	r0, r5
 800c306:	f7fb f9f5 	bl	80076f4 <_ZNK8touchgfx9TypedText11assertValidEv>
 800c30a:	4b22      	ldr	r3, [pc, #136]	; (800c394 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xb4>)
 800c30c:	f894 902e 	ldrb.w	r9, [r4, #46]	; 0x2e
 800c310:	681b      	ldr	r3, [r3, #0]
 800c312:	f9b4 a02c 	ldrsh.w	sl, [r4, #44]	; 0x2c
 800c316:	f894 b030 	ldrb.w	fp, [r4, #48]	; 0x30
 800c31a:	eb03 0346 	add.w	r3, r3, r6, lsl #1
 800c31e:	4628      	mov	r0, r5
 800c320:	785e      	ldrb	r6, [r3, #1]
 800c322:	f7fb f9cf 	bl	80076c4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800c326:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c328:	9309      	str	r3, [sp, #36]	; 0x24
 800c32a:	4b1b      	ldr	r3, [pc, #108]	; (800c398 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xb8>)
 800c32c:	f894 2031 	ldrb.w	r2, [r4, #49]	; 0x31
 800c330:	681b      	ldr	r3, [r3, #0]
 800c332:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
 800c336:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c33a:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 800c33e:	9707      	str	r7, [sp, #28]
 800c340:	f3c6 0601 	ubfx	r6, r6, #0, #2
 800c344:	f88d 902a 	strb.w	r9, [sp, #42]	; 0x2a
 800c348:	f88d 6020 	strb.w	r6, [sp, #32]
 800c34c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800c350:	f88d b022 	strb.w	fp, [sp, #34]	; 0x22
 800c354:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800c358:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 800c35c:	b10a      	cbz	r2, 800c362 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800c35e:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800c360:	b906      	cbnz	r6, 800c364 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x84>
 800c362:	689e      	ldr	r6, [r3, #8]
 800c364:	af05      	add	r7, sp, #20
 800c366:	4621      	mov	r1, r4
 800c368:	4638      	mov	r0, r7
 800c36a:	f001 fd2a 	bl	800ddc2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c36e:	4628      	mov	r0, r5
 800c370:	f7ff ff12 	bl	800c198 <_ZNK8touchgfx9TypedText7getTextEv>
 800c374:	2300      	movs	r3, #0
 800c376:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800c37a:	ab07      	add	r3, sp, #28
 800c37c:	9001      	str	r0, [sp, #4]
 800c37e:	9300      	str	r3, [sp, #0]
 800c380:	e897 0006 	ldmia.w	r7, {r1, r2}
 800c384:	4643      	mov	r3, r8
 800c386:	4630      	mov	r0, r6
 800c388:	f000 f9f6 	bl	800c778 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c38c:	b00d      	add	sp, #52	; 0x34
 800c38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c392:	bf00      	nop
 800c394:	20001528 	.word	0x20001528
 800c398:	200014b8 	.word	0x200014b8

0800c39c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800c39c:	b570      	push	{r4, r5, r6, lr}
 800c39e:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c3a0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c3a4:	429a      	cmp	r2, r3
 800c3a6:	4604      	mov	r4, r0
 800c3a8:	d021      	beq.n	800c3ee <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800c3aa:	6803      	ldr	r3, [r0, #0]
 800c3ac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c3ae:	4798      	blx	r3
 800c3b0:	6823      	ldr	r3, [r4, #0]
 800c3b2:	4605      	mov	r5, r0
 800c3b4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c3b6:	4620      	mov	r0, r4
 800c3b8:	4798      	blx	r3
 800c3ba:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800c3be:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c3c2:	6823      	ldr	r3, [r4, #0]
 800c3c4:	4606      	mov	r6, r0
 800c3c6:	b22d      	sxth	r5, r5
 800c3c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c3ca:	d109      	bne.n	800c3e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800c3cc:	4629      	mov	r1, r5
 800c3ce:	4620      	mov	r0, r4
 800c3d0:	4798      	blx	r3
 800c3d2:	6823      	ldr	r3, [r4, #0]
 800c3d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c3d6:	4631      	mov	r1, r6
 800c3d8:	4620      	mov	r0, r4
 800c3da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c3de:	4718      	bx	r3
 800c3e0:	4601      	mov	r1, r0
 800c3e2:	4620      	mov	r0, r4
 800c3e4:	4798      	blx	r3
 800c3e6:	6823      	ldr	r3, [r4, #0]
 800c3e8:	4629      	mov	r1, r5
 800c3ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c3ec:	e7f4      	b.n	800c3d8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800c3ee:	bd70      	pop	{r4, r5, r6, pc}

0800c3f0 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800c3f0:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800c3f4:	84c1      	strh	r1, [r0, #38]	; 0x26
 800c3f6:	b922      	cbnz	r2, 800c402 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x12>
 800c3f8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c3fc:	b90b      	cbnz	r3, 800c402 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x12>
 800c3fe:	f7ff bfcd 	b.w	800c39c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800c402:	4770      	bx	lr

0800c404 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c404:	2300      	movs	r3, #0
 800c406:	8003      	strh	r3, [r0, #0]
 800c408:	8043      	strh	r3, [r0, #2]
 800c40a:	8083      	strh	r3, [r0, #4]
 800c40c:	80c3      	strh	r3, [r0, #6]
 800c40e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800c412:	b91b      	cbnz	r3, 800c41c <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800c414:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800c418:	2bff      	cmp	r3, #255	; 0xff
 800c41a:	d103      	bne.n	800c424 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800c41c:	890b      	ldrh	r3, [r1, #8]
 800c41e:	8083      	strh	r3, [r0, #4]
 800c420:	894b      	ldrh	r3, [r1, #10]
 800c422:	80c3      	strh	r3, [r0, #6]
 800c424:	4770      	bx	lr
	...

0800c428 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c428:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c42a:	4604      	mov	r4, r0
 800c42c:	6808      	ldr	r0, [r1, #0]
 800c42e:	6849      	ldr	r1, [r1, #4]
 800c430:	466b      	mov	r3, sp
 800c432:	c303      	stmia	r3!, {r0, r1}
 800c434:	6823      	ldr	r3, [r4, #0]
 800c436:	4669      	mov	r1, sp
 800c438:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c43a:	4620      	mov	r0, r4
 800c43c:	4798      	blx	r3
 800c43e:	4b08      	ldr	r3, [pc, #32]	; (800c460 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c440:	681b      	ldr	r3, [r3, #0]
 800c442:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c446:	b10a      	cbz	r2, 800c44c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c448:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c44a:	b900      	cbnz	r0, 800c44e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c44c:	6898      	ldr	r0, [r3, #8]
 800c44e:	6803      	ldr	r3, [r0, #0]
 800c450:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c452:	69dd      	ldr	r5, [r3, #28]
 800c454:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c458:	4669      	mov	r1, sp
 800c45a:	47a8      	blx	r5
 800c45c:	b003      	add	sp, #12
 800c45e:	bd30      	pop	{r4, r5, pc}
 800c460:	200014b8 	.word	0x200014b8

0800c464 <_ZN8touchgfx3LCD4initEv>:
 800c464:	4770      	bx	lr

0800c466 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800c466:	2000      	movs	r0, #0
 800c468:	4770      	bx	lr

0800c46a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c46a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c46e:	b091      	sub	sp, #68	; 0x44
 800c470:	4699      	mov	r9, r3
 800c472:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800c476:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800c478:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800c47c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c480:	4680      	mov	r8, r0
 800c482:	4617      	mov	r7, r2
 800c484:	a80e      	add	r0, sp, #56	; 0x38
 800c486:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800c48a:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800c48e:	2500      	movs	r5, #0
 800c490:	910d      	str	r1, [sp, #52]	; 0x34
 800c492:	950e      	str	r5, [sp, #56]	; 0x38
 800c494:	f000 fe3e 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c498:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800c49a:	f8d9 6000 	ldr.w	r6, [r9]
 800c49e:	6818      	ldr	r0, [r3, #0]
 800c4a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c4a2:	f9b4 b000 	ldrsh.w	fp, [r4]
 800c4a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c4aa:	eb02 0c06 	add.w	ip, r2, r6
 800c4ae:	1b80      	subs	r0, r0, r6
 800c4b0:	ebab 0e0c 	sub.w	lr, fp, ip
 800c4b4:	4570      	cmp	r0, lr
 800c4b6:	f340 80bd 	ble.w	800c634 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800c4ba:	88a1      	ldrh	r1, [r4, #4]
 800c4bc:	4459      	add	r1, fp
 800c4be:	b209      	sxth	r1, r1
 800c4c0:	458c      	cmp	ip, r1
 800c4c2:	f300 80b7 	bgt.w	800c634 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800c4c6:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800c4ca:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800c4ce:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800c4d2:	edd9 6a07 	vldr	s13, [r9, #28]
 800c4d6:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800c4da:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800c4de:	4283      	cmp	r3, r0
 800c4e0:	bfa8      	it	ge
 800c4e2:	4603      	movge	r3, r0
 800c4e4:	ee07 3a90 	vmov	s15, r3
 800c4e8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c4ec:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800c4f0:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c4f4:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c4f8:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c4fc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800c500:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c504:	45e3      	cmp	fp, ip
 800c506:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c50a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c50e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c512:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c516:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c51a:	f340 808e 	ble.w	800c63a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800c51e:	fb9e f5f3 	sdiv	r5, lr, r3
 800c522:	ee07 5a10 	vmov	s14, r5
 800c526:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c52a:	2d00      	cmp	r5, #0
 800c52c:	fb03 e415 	mls	r4, r3, r5, lr
 800c530:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c534:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c538:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c53c:	dd13      	ble.n	800c566 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c53e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c542:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c546:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c54a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c54e:	bf18      	it	ne
 800c550:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c554:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c558:	bf08      	it	eq
 800c55a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c55e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c562:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c566:	fb05 f703 	mul.w	r7, r5, r3
 800c56a:	1bc0      	subs	r0, r0, r7
 800c56c:	443e      	add	r6, r7
 800c56e:	1997      	adds	r7, r2, r6
 800c570:	4407      	add	r7, r0
 800c572:	42b9      	cmp	r1, r7
 800c574:	bfbc      	itt	lt
 800c576:	1a88      	sublt	r0, r1, r2
 800c578:	1b80      	sublt	r0, r0, r6
 800c57a:	2800      	cmp	r0, #0
 800c57c:	dd5a      	ble.n	800c634 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800c57e:	fb90 f1f3 	sdiv	r1, r0, r3
 800c582:	fb03 0211 	mls	r2, r3, r1, r0
 800c586:	b90a      	cbnz	r2, 800c58c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800c588:	3901      	subs	r1, #1
 800c58a:	461a      	mov	r2, r3
 800c58c:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c590:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800c594:	44a4      	add	ip, r4
 800c596:	fb03 c505 	mla	r5, r3, r5, ip
 800c59a:	2900      	cmp	r1, #0
 800c59c:	bfcc      	ite	gt
 800c59e:	469e      	movgt	lr, r3
 800c5a0:	4696      	movle	lr, r2
 800c5a2:	eef0 6a42 	vmov.f32	s13, s4
 800c5a6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c5aa:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c5ae:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c5b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c5b6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c5ba:	eeb0 7a61 	vmov.f32	s14, s3
 800c5be:	ee17 0a90 	vmov	r0, s15
 800c5c2:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c5c6:	fb90 f6f3 	sdiv	r6, r0, r3
 800c5ca:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c5ce:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c5d2:	ee17 0a90 	vmov	r0, s15
 800c5d6:	fb90 f7f3 	sdiv	r7, r0, r3
 800c5da:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800c5de:	900c      	str	r0, [sp, #48]	; 0x30
 800c5e0:	f8d0 8000 	ldr.w	r8, [r0]
 800c5e4:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c5e6:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800c5ea:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800c5ee:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800c5f2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800c5f6:	f8cd a020 	str.w	sl, [sp, #32]
 800c5fa:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800c5fe:	980d      	ldr	r0, [sp, #52]	; 0x34
 800c600:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800c604:	9603      	str	r6, [sp, #12]
 800c606:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800c60a:	ee16 0a90 	vmov	r0, s13
 800c60e:	fb07 0704 	mla	r7, r7, r4, r0
 800c612:	ee17 0a10 	vmov	r0, s14
 800c616:	fb06 0604 	mla	r6, r6, r4, r0
 800c61a:	e9cd 3600 	strd	r3, r6, [sp]
 800c61e:	44ca      	add	sl, r9
 800c620:	f8cd a01c 	str.w	sl, [sp, #28]
 800c624:	9506      	str	r5, [sp, #24]
 800c626:	9702      	str	r7, [sp, #8]
 800c628:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800c62c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c62e:	ebae 0304 	sub.w	r3, lr, r4
 800c632:	47a8      	blx	r5
 800c634:	b011      	add	sp, #68	; 0x44
 800c636:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c63a:	462c      	mov	r4, r5
 800c63c:	e797      	b.n	800c56e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800c63e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800c63e:	b570      	push	{r4, r5, r6, lr}
 800c640:	4604      	mov	r4, r0
 800c642:	2500      	movs	r5, #0
 800c644:	7223      	strb	r3, [r4, #8]
 800c646:	9804      	ldr	r0, [sp, #16]
 800c648:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c64c:	8025      	strh	r5, [r4, #0]
 800c64e:	6061      	str	r1, [r4, #4]
 800c650:	7263      	strb	r3, [r4, #9]
 800c652:	60e0      	str	r0, [r4, #12]
 800c654:	8222      	strh	r2, [r4, #16]
 800c656:	8265      	strh	r5, [r4, #18]
 800c658:	82a5      	strh	r5, [r4, #20]
 800c65a:	82e5      	strh	r5, [r4, #22]
 800c65c:	8325      	strh	r5, [r4, #24]
 800c65e:	8365      	strh	r5, [r4, #26]
 800c660:	83a5      	strh	r5, [r4, #28]
 800c662:	77a5      	strb	r5, [r4, #30]
 800c664:	6803      	ldr	r3, [r0, #0]
 800c666:	695b      	ldr	r3, [r3, #20]
 800c668:	4798      	blx	r3
 800c66a:	4606      	mov	r6, r0
 800c66c:	b1f8      	cbz	r0, 800c6ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800c66e:	68e0      	ldr	r0, [r4, #12]
 800c670:	6803      	ldr	r3, [r0, #0]
 800c672:	4631      	mov	r1, r6
 800c674:	68db      	ldr	r3, [r3, #12]
 800c676:	4798      	blx	r3
 800c678:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800c67c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c680:	7a83      	ldrb	r3, [r0, #10]
 800c682:	4313      	orrs	r3, r2
 800c684:	83a3      	strh	r3, [r4, #28]
 800c686:	7a63      	ldrb	r3, [r4, #9]
 800c688:	2b04      	cmp	r3, #4
 800c68a:	4605      	mov	r5, r0
 800c68c:	d10f      	bne.n	800c6ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800c68e:	68e0      	ldr	r0, [r4, #12]
 800c690:	6803      	ldr	r3, [r0, #0]
 800c692:	462a      	mov	r2, r5
 800c694:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c696:	4631      	mov	r1, r6
 800c698:	4798      	blx	r3
 800c69a:	f995 300d 	ldrsb.w	r3, [r5, #13]
 800c69e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c6a2:	7aab      	ldrb	r3, [r5, #10]
 800c6a4:	4313      	orrs	r3, r2
 800c6a6:	4418      	add	r0, r3
 800c6a8:	8ba3      	ldrh	r3, [r4, #28]
 800c6aa:	4418      	add	r0, r3
 800c6ac:	83a0      	strh	r0, [r4, #28]
 800c6ae:	4620      	mov	r0, r4
 800c6b0:	bd70      	pop	{r4, r5, r6, pc}

0800c6b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800c6b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6b6:	2400      	movs	r4, #0
 800c6b8:	b085      	sub	sp, #20
 800c6ba:	4681      	mov	r9, r0
 800c6bc:	460f      	mov	r7, r1
 800c6be:	4692      	mov	sl, r2
 800c6c0:	469b      	mov	fp, r3
 800c6c2:	46a0      	mov	r8, r4
 800c6c4:	4626      	mov	r6, r4
 800c6c6:	4554      	cmp	r4, sl
 800c6c8:	da21      	bge.n	800c70e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800c6ca:	2300      	movs	r3, #0
 800c6cc:	9303      	str	r3, [sp, #12]
 800c6ce:	463a      	mov	r2, r7
 800c6d0:	ab03      	add	r3, sp, #12
 800c6d2:	4659      	mov	r1, fp
 800c6d4:	4648      	mov	r0, r9
 800c6d6:	f002 fb35 	bl	800ed44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c6da:	4605      	mov	r5, r0
 800c6dc:	b1b8      	cbz	r0, 800c70e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800c6de:	280a      	cmp	r0, #10
 800c6e0:	d015      	beq.n	800c70e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800c6e2:	9a03      	ldr	r2, [sp, #12]
 800c6e4:	b182      	cbz	r2, 800c708 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x56>
 800c6e6:	f992 000d 	ldrsb.w	r0, [r2, #13]
 800c6ea:	7a93      	ldrb	r3, [r2, #10]
 800c6ec:	8895      	ldrh	r5, [r2, #4]
 800c6ee:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c6f2:	4303      	orrs	r3, r0
 800c6f4:	9301      	str	r3, [sp, #4]
 800c6f6:	683b      	ldr	r3, [r7, #0]
 800c6f8:	4641      	mov	r1, r8
 800c6fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c6fc:	4638      	mov	r0, r7
 800c6fe:	4798      	blx	r3
 800c700:	9b01      	ldr	r3, [sp, #4]
 800c702:	4418      	add	r0, r3
 800c704:	4406      	add	r6, r0
 800c706:	b2b6      	uxth	r6, r6
 800c708:	3401      	adds	r4, #1
 800c70a:	46a8      	mov	r8, r5
 800c70c:	e7db      	b.n	800c6c6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x14>
 800c70e:	4630      	mov	r0, r6
 800c710:	b005      	add	sp, #20
 800c712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c716 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800c716:	2a02      	cmp	r2, #2
 800c718:	b530      	push	{r4, r5, lr}
 800c71a:	d011      	beq.n	800c740 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800c71c:	2a03      	cmp	r2, #3
 800c71e:	d01c      	beq.n	800c75a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800c720:	2a01      	cmp	r2, #1
 800c722:	d10c      	bne.n	800c73e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c724:	888b      	ldrh	r3, [r1, #4]
 800c726:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c72a:	8801      	ldrh	r1, [r0, #0]
 800c72c:	8844      	ldrh	r4, [r0, #2]
 800c72e:	8004      	strh	r4, [r0, #0]
 800c730:	1a9b      	subs	r3, r3, r2
 800c732:	1a5b      	subs	r3, r3, r1
 800c734:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c738:	8043      	strh	r3, [r0, #2]
 800c73a:	8081      	strh	r1, [r0, #4]
 800c73c:	80c2      	strh	r2, [r0, #6]
 800c73e:	bd30      	pop	{r4, r5, pc}
 800c740:	88cb      	ldrh	r3, [r1, #6]
 800c742:	88c2      	ldrh	r2, [r0, #6]
 800c744:	1a9b      	subs	r3, r3, r2
 800c746:	8842      	ldrh	r2, [r0, #2]
 800c748:	1a9b      	subs	r3, r3, r2
 800c74a:	888a      	ldrh	r2, [r1, #4]
 800c74c:	8881      	ldrh	r1, [r0, #4]
 800c74e:	8043      	strh	r3, [r0, #2]
 800c750:	1a52      	subs	r2, r2, r1
 800c752:	8801      	ldrh	r1, [r0, #0]
 800c754:	1a52      	subs	r2, r2, r1
 800c756:	8002      	strh	r2, [r0, #0]
 800c758:	e7f1      	b.n	800c73e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c75a:	88cb      	ldrh	r3, [r1, #6]
 800c75c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800c760:	8841      	ldrh	r1, [r0, #2]
 800c762:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c766:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800c76a:	8045      	strh	r5, [r0, #2]
 800c76c:	1a9b      	subs	r3, r3, r2
 800c76e:	1a5b      	subs	r3, r3, r1
 800c770:	8003      	strh	r3, [r0, #0]
 800c772:	8082      	strh	r2, [r0, #4]
 800c774:	80c4      	strh	r4, [r0, #6]
 800c776:	e7e2      	b.n	800c73e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800c778 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
 800c778:	b570      	push	{r4, r5, r6, lr}
 800c77a:	b086      	sub	sp, #24
 800c77c:	ac02      	add	r4, sp, #8
 800c77e:	e884 0006 	stmia.w	r4, {r1, r2}
 800c782:	461a      	mov	r2, r3
 800c784:	ab0c      	add	r3, sp, #48	; 0x30
 800c786:	9305      	str	r3, [sp, #20]
 800c788:	4b0a      	ldr	r3, [pc, #40]	; (800c7b4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz+0x3c>)
 800c78a:	685d      	ldr	r5, [r3, #4]
 800c78c:	1069      	asrs	r1, r5, #1
 800c78e:	07ed      	lsls	r5, r5, #31
 800c790:	bf4c      	ite	mi
 800c792:	681b      	ldrmi	r3, [r3, #0]
 800c794:	681d      	ldrpl	r5, [r3, #0]
 800c796:	eb00 0601 	add.w	r6, r0, r1
 800c79a:	bf44      	itt	mi
 800c79c:	5841      	ldrmi	r1, [r0, r1]
 800c79e:	58cd      	ldrmi	r5, [r1, r3]
 800c7a0:	9b05      	ldr	r3, [sp, #20]
 800c7a2:	9301      	str	r3, [sp, #4]
 800c7a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c7a6:	9300      	str	r3, [sp, #0]
 800c7a8:	4621      	mov	r1, r4
 800c7aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c7ac:	4630      	mov	r0, r6
 800c7ae:	47a8      	blx	r5
 800c7b0:	b006      	add	sp, #24
 800c7b2:	bd70      	pop	{r4, r5, r6, pc}
 800c7b4:	20000018 	.word	0x20000018

0800c7b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800c7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7bc:	b09d      	sub	sp, #116	; 0x74
 800c7be:	9114      	str	r1, [sp, #80]	; 0x50
 800c7c0:	9315      	str	r3, [sp, #84]	; 0x54
 800c7c2:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800c7c4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800c7c6:	8809      	ldrh	r1, [r1, #0]
 800c7c8:	889b      	ldrh	r3, [r3, #4]
 800c7ca:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 800c7cc:	9210      	str	r2, [sp, #64]	; 0x40
 800c7ce:	440b      	add	r3, r1
 800c7d0:	b21b      	sxth	r3, r3
 800c7d2:	930e      	str	r3, [sp, #56]	; 0x38
 800c7d4:	6833      	ldr	r3, [r6, #0]
 800c7d6:	f89d 20b0 	ldrb.w	r2, [sp, #176]	; 0xb0
 800c7da:	7a59      	ldrb	r1, [r3, #9]
 800c7dc:	7a1b      	ldrb	r3, [r3, #8]
 800c7de:	9312      	str	r3, [sp, #72]	; 0x48
 800c7e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800c7e2:	900f      	str	r0, [sp, #60]	; 0x3c
 800c7e4:	f89d b0a4 	ldrb.w	fp, [sp, #164]	; 0xa4
 800c7e8:	9113      	str	r1, [sp, #76]	; 0x4c
 800c7ea:	f9b3 4000 	ldrsh.w	r4, [r3]
 800c7ee:	2a00      	cmp	r2, #0
 800c7f0:	d059      	beq.n	800c8a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xee>
 800c7f2:	7c33      	ldrb	r3, [r6, #16]
 800c7f4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 800c7f6:	2b04      	cmp	r3, #4
 800c7f8:	bf14      	ite	ne
 800c7fa:	2301      	movne	r3, #1
 800c7fc:	2302      	moveq	r3, #2
 800c7fe:	4413      	add	r3, r2
 800c800:	f04f 0800 	mov.w	r8, #0
 800c804:	930d      	str	r3, [sp, #52]	; 0x34
 800c806:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800c80a:	4645      	mov	r5, r8
 800c80c:	e9dd 320c 	ldrd	r3, r2, [sp, #48]	; 0x30
 800c810:	4293      	cmp	r3, r2
 800c812:	da75      	bge.n	800c900 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x148>
 800c814:	2300      	movs	r3, #0
 800c816:	931a      	str	r3, [sp, #104]	; 0x68
 800c818:	992b      	ldr	r1, [sp, #172]	; 0xac
 800c81a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c81c:	6832      	ldr	r2, [r6, #0]
 800c81e:	428b      	cmp	r3, r1
 800c820:	db43      	blt.n	800c8aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf2>
 800c822:	6813      	ldr	r3, [r2, #0]
 800c824:	4610      	mov	r0, r2
 800c826:	695b      	ldr	r3, [r3, #20]
 800c828:	4798      	blx	r3
 800c82a:	4681      	mov	r9, r0
 800c82c:	6830      	ldr	r0, [r6, #0]
 800c82e:	6803      	ldr	r3, [r0, #0]
 800c830:	aa1b      	add	r2, sp, #108	; 0x6c
 800c832:	689f      	ldr	r7, [r3, #8]
 800c834:	4649      	mov	r1, r9
 800c836:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800c83a:	47b8      	blx	r7
 800c83c:	901a      	str	r0, [sp, #104]	; 0x68
 800c83e:	f64f 6aff 	movw	sl, #65279	; 0xfeff
 800c842:	45d1      	cmp	r9, sl
 800c844:	d045      	beq.n	800c8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800c846:	f242 070b 	movw	r7, #8203	; 0x200b
 800c84a:	45b9      	cmp	r9, r7
 800c84c:	d041      	beq.n	800c8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800c84e:	f1b9 0f00 	cmp.w	r9, #0
 800c852:	f000 80ef 	beq.w	800ca34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800c856:	f1b9 0f0a 	cmp.w	r9, #10
 800c85a:	d057      	beq.n	800c90c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800c85c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800c85e:	b383      	cbz	r3, 800c8c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10a>
 800c860:	f8b3 9004 	ldrh.w	r9, [r3, #4]
 800c864:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800c866:	2a00      	cmp	r2, #0
 800c868:	f000 80d3 	beq.w	800ca12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x25a>
 800c86c:	f1bb 0f00 	cmp.w	fp, #0
 800c870:	d100      	bne.n	800c874 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xbc>
 800c872:	4444      	add	r4, r8
 800c874:	f992 800d 	ldrsb.w	r8, [r2, #13]
 800c878:	f408 7380 	and.w	r3, r8, #256	; 0x100
 800c87c:	f892 800a 	ldrb.w	r8, [r2, #10]
 800c880:	f1bb 0f01 	cmp.w	fp, #1
 800c884:	ea48 0803 	orr.w	r8, r8, r3
 800c888:	d128      	bne.n	800c8dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x124>
 800c88a:	eba4 0408 	sub.w	r4, r4, r8
 800c88e:	2d00      	cmp	r5, #0
 800c890:	d143      	bne.n	800c91a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x162>
 800c892:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800c894:	eb08 0304 	add.w	r3, r8, r4
 800c898:	4413      	add	r3, r2
 800c89a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800c89c:	f9b2 2000 	ldrsh.w	r2, [r2]
 800c8a0:	4293      	cmp	r3, r2
 800c8a2:	da44      	bge.n	800c92e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800c8a4:	e02b      	b.n	800c8fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x146>
 800c8a6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800c8a8:	e7aa      	b.n	800c800 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x48>
 800c8aa:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800c8ae:	9301      	str	r3, [sp, #4]
 800c8b0:	ab1b      	add	r3, sp, #108	; 0x6c
 800c8b2:	9300      	str	r3, [sp, #0]
 800c8b4:	4659      	mov	r1, fp
 800c8b6:	ab1a      	add	r3, sp, #104	; 0x68
 800c8b8:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800c8ba:	f002 fa77 	bl	800edac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800c8be:	4681      	mov	r9, r0
 800c8c0:	e7bd      	b.n	800c83e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800c8c2:	6830      	ldr	r0, [r6, #0]
 800c8c4:	6803      	ldr	r3, [r0, #0]
 800c8c6:	691b      	ldr	r3, [r3, #16]
 800c8c8:	4798      	blx	r3
 800c8ca:	4550      	cmp	r0, sl
 800c8cc:	d001      	beq.n	800c8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800c8ce:	42b8      	cmp	r0, r7
 800c8d0:	d1c8      	bne.n	800c864 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800c8d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c8d4:	3301      	adds	r3, #1
 800c8d6:	930c      	str	r3, [sp, #48]	; 0x30
 800c8d8:	464d      	mov	r5, r9
 800c8da:	e797      	b.n	800c80c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x54>
 800c8dc:	2d00      	cmp	r5, #0
 800c8de:	f000 80ab 	beq.w	800ca38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x280>
 800c8e2:	f1bb 0f00 	cmp.w	fp, #0
 800c8e6:	d118      	bne.n	800c91a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x162>
 800c8e8:	6830      	ldr	r0, [r6, #0]
 800c8ea:	6803      	ldr	r3, [r0, #0]
 800c8ec:	4629      	mov	r1, r5
 800c8ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c8f0:	4798      	blx	r3
 800c8f2:	4404      	add	r4, r0
 800c8f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c8f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c8f8:	1ae3      	subs	r3, r4, r3
 800c8fa:	4293      	cmp	r3, r2
 800c8fc:	dd17      	ble.n	800c92e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800c8fe:	464d      	mov	r5, r9
 800c900:	2d00      	cmp	r5, #0
 800c902:	f000 8097 	beq.w	800ca34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800c906:	2d0a      	cmp	r5, #10
 800c908:	f040 8085 	bne.w	800ca16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x25e>
 800c90c:	250a      	movs	r5, #10
 800c90e:	fab5 f085 	clz	r0, r5
 800c912:	0940      	lsrs	r0, r0, #5
 800c914:	b01d      	add	sp, #116	; 0x74
 800c916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c91a:	6830      	ldr	r0, [r6, #0]
 800c91c:	6803      	ldr	r3, [r0, #0]
 800c91e:	4629      	mov	r1, r5
 800c920:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c922:	4798      	blx	r3
 800c924:	f1bb 0f01 	cmp.w	fp, #1
 800c928:	eba4 0400 	sub.w	r4, r4, r0
 800c92c:	d0b1      	beq.n	800c892 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800c92e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800c930:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800c932:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c936:	f9b3 5000 	ldrsh.w	r5, [r3]
 800c93a:	7b43      	ldrb	r3, [r0, #13]
 800c93c:	015b      	lsls	r3, r3, #5
 800c93e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c942:	7983      	ldrb	r3, [r0, #6]
 800c944:	4421      	add	r1, r4
 800c946:	4313      	orrs	r3, r2
 800c948:	440b      	add	r3, r1
 800c94a:	42ab      	cmp	r3, r5
 800c94c:	dbc1      	blt.n	800c8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800c94e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c950:	4299      	cmp	r1, r3
 800c952:	dabe      	bge.n	800c8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800c954:	6830      	ldr	r0, [r6, #0]
 800c956:	6803      	ldr	r3, [r0, #0]
 800c958:	42a5      	cmp	r5, r4
 800c95a:	bfc8      	it	gt
 800c95c:	1b2d      	subgt	r5, r5, r4
 800c95e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c960:	bfcc      	ite	gt
 800c962:	b2ad      	uxthgt	r5, r5
 800c964:	2500      	movle	r5, #0
 800c966:	4798      	blx	r3
 800c968:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800c96a:	4936      	ldr	r1, [pc, #216]	; (800ca44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>)
 800c96c:	7b5a      	ldrb	r2, [r3, #13]
 800c96e:	f893 e008 	ldrb.w	lr, [r3, #8]
 800c972:	f012 0f40 	tst.w	r2, #64	; 0x40
 800c976:	bf18      	it	ne
 800c978:	468c      	movne	ip, r1
 800c97a:	9915      	ldr	r1, [sp, #84]	; 0x54
 800c97c:	4408      	add	r0, r1
 800c97e:	ea4f 01c2 	mov.w	r1, r2, lsl #3
 800c982:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800c986:	bf08      	it	eq
 800c988:	f04f 0c00 	moveq.w	ip, #0
 800c98c:	ea41 070e 	orr.w	r7, r1, lr
 800c990:	ea4c 0707 	orr.w	r7, ip, r7
 800c994:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800c996:	1bc7      	subs	r7, r0, r7
 800c998:	b2bf      	uxth	r7, r7
 800c99a:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c99e:	fa0f fa87 	sxth.w	sl, r7
 800c9a2:	4551      	cmp	r1, sl
 800c9a4:	dd33      	ble.n	800ca0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x256>
 800c9a6:	0112      	lsls	r2, r2, #4
 800c9a8:	79d8      	ldrb	r0, [r3, #7]
 800c9aa:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c9ae:	4302      	orrs	r2, r0
 800c9b0:	4492      	add	sl, r2
 800c9b2:	4551      	cmp	r1, sl
 800c9b4:	dc8d      	bgt.n	800c8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800c9b6:	1bcf      	subs	r7, r1, r7
 800c9b8:	b2bf      	uxth	r7, r7
 800c9ba:	468a      	mov	sl, r1
 800c9bc:	9317      	str	r3, [sp, #92]	; 0x5c
 800c9be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c9c0:	6830      	ldr	r0, [r6, #0]
 800c9c2:	681a      	ldr	r2, [r3, #0]
 800c9c4:	6801      	ldr	r1, [r0, #0]
 800c9c6:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800c9c8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800c9ca:	9311      	str	r3, [sp, #68]	; 0x44
 800c9cc:	9216      	str	r2, [sp, #88]	; 0x58
 800c9ce:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800c9d0:	4788      	blx	r1
 800c9d2:	79b1      	ldrb	r1, [r6, #6]
 800c9d4:	910b      	str	r1, [sp, #44]	; 0x2c
 800c9d6:	7bb1      	ldrb	r1, [r6, #14]
 800c9d8:	910a      	str	r1, [sp, #40]	; 0x28
 800c9da:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
 800c9de:	9109      	str	r1, [sp, #36]	; 0x24
 800c9e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c9e2:	68b1      	ldr	r1, [r6, #8]
 800c9e4:	9305      	str	r3, [sp, #20]
 800c9e6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800c9e8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800c9ea:	9206      	str	r2, [sp, #24]
 800c9ec:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c9f0:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800c9f4:	e9cd a501 	strd	sl, r5, [sp, #4]
 800c9f8:	4425      	add	r5, r4
 800c9fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c9fc:	9914      	ldr	r1, [sp, #80]	; 0x50
 800c9fe:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800ca00:	b22d      	sxth	r5, r5
 800ca02:	9500      	str	r5, [sp, #0]
 800ca04:	681a      	ldr	r2, [r3, #0]
 800ca06:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800ca08:	685b      	ldr	r3, [r3, #4]
 800ca0a:	47a8      	blx	r5
 800ca0c:	e761      	b.n	800c8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800ca0e:	2700      	movs	r7, #0
 800ca10:	e7d4      	b.n	800c9bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x204>
 800ca12:	4690      	mov	r8, r2
 800ca14:	e75d      	b.n	800c8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800ca16:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ca18:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800ca1a:	3401      	adds	r4, #1
 800ca1c:	429c      	cmp	r4, r3
 800ca1e:	f6bf af76 	bge.w	800c90e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x156>
 800ca22:	4659      	mov	r1, fp
 800ca24:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800ca26:	f002 f94d 	bl	800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ca2a:	4605      	mov	r5, r0
 800ca2c:	b110      	cbz	r0, 800ca34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800ca2e:	280a      	cmp	r0, #10
 800ca30:	d1f2      	bne.n	800ca18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x260>
 800ca32:	e76b      	b.n	800c90c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800ca34:	2500      	movs	r5, #0
 800ca36:	e76a      	b.n	800c90e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x156>
 800ca38:	f1bb 0f00 	cmp.w	fp, #0
 800ca3c:	f43f af5a 	beq.w	800c8f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x13c>
 800ca40:	e775      	b.n	800c92e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800ca42:	bf00      	nop
 800ca44:	fffffe00 	.word	0xfffffe00

0800ca48 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800ca48:	b530      	push	{r4, r5, lr}
 800ca4a:	8a44      	ldrh	r4, [r0, #18]
 800ca4c:	8ac5      	ldrh	r5, [r0, #22]
 800ca4e:	82c3      	strh	r3, [r0, #22]
 800ca50:	442c      	add	r4, r5
 800ca52:	1ae4      	subs	r4, r4, r3
 800ca54:	8244      	strh	r4, [r0, #18]
 800ca56:	8b03      	ldrh	r3, [r0, #24]
 800ca58:	8a84      	ldrh	r4, [r0, #20]
 800ca5a:	4422      	add	r2, r4
 800ca5c:	440c      	add	r4, r1
 800ca5e:	1a59      	subs	r1, r3, r1
 800ca60:	8342      	strh	r2, [r0, #26]
 800ca62:	8284      	strh	r4, [r0, #20]
 800ca64:	8301      	strh	r1, [r0, #24]
 800ca66:	bd30      	pop	{r4, r5, pc}

0800ca68 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800ca68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca6c:	7a45      	ldrb	r5, [r0, #9]
 800ca6e:	1eeb      	subs	r3, r5, #3
 800ca70:	b085      	sub	sp, #20
 800ca72:	4604      	mov	r4, r0
 800ca74:	b2db      	uxtb	r3, r3
 800ca76:	4689      	mov	r9, r1
 800ca78:	b329      	cbz	r1, 800cac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x5e>
 800ca7a:	2b01      	cmp	r3, #1
 800ca7c:	d921      	bls.n	800cac2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x5a>
 800ca7e:	1e69      	subs	r1, r5, #1
 800ca80:	f1d1 0b00 	rsbs	fp, r1, #0
 800ca84:	eb4b 0b01 	adc.w	fp, fp, r1
 800ca88:	1eaa      	subs	r2, r5, #2
 800ca8a:	4253      	negs	r3, r2
 800ca8c:	4153      	adcs	r3, r2
 800ca8e:	2500      	movs	r5, #0
 800ca90:	9301      	str	r3, [sp, #4]
 800ca92:	9500      	str	r5, [sp, #0]
 800ca94:	2600      	movs	r6, #0
 800ca96:	8266      	strh	r6, [r4, #18]
 800ca98:	82a6      	strh	r6, [r4, #20]
 800ca9a:	f242 080b 	movw	r8, #8203	; 0x200b
 800ca9e:	2300      	movs	r3, #0
 800caa0:	9303      	str	r3, [sp, #12]
 800caa2:	68e2      	ldr	r2, [r4, #12]
 800caa4:	7a21      	ldrb	r1, [r4, #8]
 800caa6:	6860      	ldr	r0, [r4, #4]
 800caa8:	8827      	ldrh	r7, [r4, #0]
 800caaa:	ab03      	add	r3, sp, #12
 800caac:	f002 f94a 	bl	800ed44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800cab0:	8020      	strh	r0, [r4, #0]
 800cab2:	b9b0      	cbnz	r0, 800cae2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7a>
 800cab4:	8b22      	ldrh	r2, [r4, #24]
 800cab6:	2300      	movs	r3, #0
 800cab8:	4611      	mov	r1, r2
 800caba:	4620      	mov	r0, r4
 800cabc:	f7ff ffc4 	bl	800ca48 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800cac0:	e062      	b.n	800cb88 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x120>
 800cac2:	468b      	mov	fp, r1
 800cac4:	e7e0      	b.n	800ca88 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x20>
 800cac6:	2b01      	cmp	r3, #1
 800cac8:	f105 35ff 	add.w	r5, r5, #4294967295
 800cacc:	bf8c      	ite	hi
 800cace:	2300      	movhi	r3, #0
 800cad0:	2301      	movls	r3, #1
 800cad2:	2d01      	cmp	r5, #1
 800cad4:	9300      	str	r3, [sp, #0]
 800cad6:	bf8c      	ite	hi
 800cad8:	2500      	movhi	r5, #0
 800cada:	2501      	movls	r5, #1
 800cadc:	9101      	str	r1, [sp, #4]
 800cade:	468b      	mov	fp, r1
 800cae0:	e7d8      	b.n	800ca94 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x2c>
 800cae2:	8ae3      	ldrh	r3, [r4, #22]
 800cae4:	280a      	cmp	r0, #10
 800cae6:	f103 0301 	add.w	r3, r3, #1
 800caea:	82e3      	strh	r3, [r4, #22]
 800caec:	d0e2      	beq.n	800cab4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x4c>
 800caee:	9a03      	ldr	r2, [sp, #12]
 800caf0:	b972      	cbnz	r2, 800cb10 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa8>
 800caf2:	4540      	cmp	r0, r8
 800caf4:	d1d3      	bne.n	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800caf6:	8823      	ldrh	r3, [r4, #0]
 800caf8:	8b21      	ldrh	r1, [r4, #24]
 800cafa:	2b20      	cmp	r3, #32
 800cafc:	d001      	beq.n	800cb02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9a>
 800cafe:	4543      	cmp	r3, r8
 800cb00:	d11d      	bne.n	800cb3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800cb02:	2f20      	cmp	r7, #32
 800cb04:	d002      	beq.n	800cb0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800cb06:	4547      	cmp	r7, r8
 800cb08:	bf18      	it	ne
 800cb0a:	460e      	movne	r6, r1
 800cb0c:	2001      	movs	r0, #1
 800cb0e:	e017      	b.n	800cb40 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd8>
 800cb10:	4540      	cmp	r0, r8
 800cb12:	d012      	beq.n	800cb3a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd2>
 800cb14:	8893      	ldrh	r3, [r2, #4]
 800cb16:	8023      	strh	r3, [r4, #0]
 800cb18:	f992 a00d 	ldrsb.w	sl, [r2, #13]
 800cb1c:	f40a 7080 	and.w	r0, sl, #256	; 0x100
 800cb20:	f892 a00a 	ldrb.w	sl, [r2, #10]
 800cb24:	ea4a 0a00 	orr.w	sl, sl, r0
 800cb28:	68e0      	ldr	r0, [r4, #12]
 800cb2a:	6803      	ldr	r3, [r0, #0]
 800cb2c:	4639      	mov	r1, r7
 800cb2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb30:	4798      	blx	r3
 800cb32:	eb0a 0200 	add.w	r2, sl, r0
 800cb36:	b292      	uxth	r2, r2
 800cb38:	e7dd      	b.n	800caf6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x8e>
 800cb3a:	2200      	movs	r2, #0
 800cb3c:	e7db      	b.n	800caf6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x8e>
 800cb3e:	2000      	movs	r0, #0
 800cb40:	440a      	add	r2, r1
 800cb42:	8aa3      	ldrh	r3, [r4, #20]
 800cb44:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800cb48:	b292      	uxth	r2, r2
 800cb4a:	8322      	strh	r2, [r4, #24]
 800cb4c:	4413      	add	r3, r2
 800cb4e:	f1b9 0f00 	cmp.w	r9, #0
 800cb52:	d022      	beq.n	800cb9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x132>
 800cb54:	f1bb 0f00 	cmp.w	fp, #0
 800cb58:	d102      	bne.n	800cb60 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf8>
 800cb5a:	9901      	ldr	r1, [sp, #4]
 800cb5c:	b149      	cbz	r1, 800cb72 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x10a>
 800cb5e:	b140      	cbz	r0, 800cb72 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x10a>
 800cb60:	8ba1      	ldrh	r1, [r4, #28]
 800cb62:	4419      	add	r1, r3
 800cb64:	458c      	cmp	ip, r1
 800cb66:	da12      	bge.n	800cb8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x126>
 800cb68:	8a61      	ldrh	r1, [r4, #18]
 800cb6a:	b181      	cbz	r1, 800cb8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x126>
 800cb6c:	4563      	cmp	r3, ip
 800cb6e:	dd96      	ble.n	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cb70:	e004      	b.n	800cb7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x114>
 800cb72:	4563      	cmp	r3, ip
 800cb74:	dd93      	ble.n	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cb76:	8a63      	ldrh	r3, [r4, #18]
 800cb78:	2b00      	cmp	r3, #0
 800cb7a:	d090      	beq.n	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cb7c:	2301      	movs	r3, #1
 800cb7e:	77a3      	strb	r3, [r4, #30]
 800cb80:	8ba2      	ldrh	r2, [r4, #28]
 800cb82:	8b63      	ldrh	r3, [r4, #26]
 800cb84:	4413      	add	r3, r2
 800cb86:	8363      	strh	r3, [r4, #26]
 800cb88:	b005      	add	sp, #20
 800cb8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb8e:	2300      	movs	r3, #0
 800cb90:	4611      	mov	r1, r2
 800cb92:	4620      	mov	r0, r4
 800cb94:	f7ff ff58 	bl	800ca48 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800cb98:	e781      	b.n	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cb9a:	4563      	cmp	r3, ip
 800cb9c:	dd16      	ble.n	800cbcc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x164>
 800cb9e:	9b00      	ldr	r3, [sp, #0]
 800cba0:	b113      	cbz	r3, 800cba8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800cba2:	2301      	movs	r3, #1
 800cba4:	460a      	mov	r2, r1
 800cba6:	e787      	b.n	800cab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x50>
 800cba8:	2d00      	cmp	r5, #0
 800cbaa:	f43f af78 	beq.w	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cbae:	2800      	cmp	r0, #0
 800cbb0:	f47f af75 	bne.w	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cbb4:	2f20      	cmp	r7, #32
 800cbb6:	d001      	beq.n	800cbbc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x154>
 800cbb8:	4547      	cmp	r7, r8
 800cbba:	d102      	bne.n	800cbc2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15a>
 800cbbc:	2301      	movs	r3, #1
 800cbbe:	4632      	mov	r2, r6
 800cbc0:	e77b      	b.n	800caba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x52>
 800cbc2:	8a63      	ldrh	r3, [r4, #18]
 800cbc4:	2b00      	cmp	r3, #0
 800cbc6:	f43f af6a 	beq.w	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cbca:	e7dd      	b.n	800cb88 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x120>
 800cbcc:	2800      	cmp	r0, #0
 800cbce:	f47f af66 	bne.w	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cbd2:	2f20      	cmp	r7, #32
 800cbd4:	d002      	beq.n	800cbdc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x174>
 800cbd6:	4547      	cmp	r7, r8
 800cbd8:	f47f af61 	bne.w	800ca9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cbdc:	2301      	movs	r3, #1
 800cbde:	4632      	mov	r2, r6
 800cbe0:	e7d7      	b.n	800cb92 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x12a>

0800cbe2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800cbe2:	b570      	push	{r4, r5, r6, lr}
 800cbe4:	4606      	mov	r6, r0
 800cbe6:	b08a      	sub	sp, #40	; 0x28
 800cbe8:	4615      	mov	r5, r2
 800cbea:	b191      	cbz	r1, 800cc12 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x30>
 800cbec:	e9cd 3100 	strd	r3, r1, [sp]
 800cbf0:	4613      	mov	r3, r2
 800cbf2:	4601      	mov	r1, r0
 800cbf4:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800cbf8:	a802      	add	r0, sp, #8
 800cbfa:	f7ff fd20 	bl	800c63e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800cbfe:	2401      	movs	r4, #1
 800cc00:	2100      	movs	r1, #0
 800cc02:	a802      	add	r0, sp, #8
 800cc04:	f7ff ff30 	bl	800ca68 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800cc08:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800cc0c:	b173      	cbz	r3, 800cc2c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800cc0e:	3401      	adds	r4, #1
 800cc10:	e7f6      	b.n	800cc00 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1e>
 800cc12:	4611      	mov	r1, r2
 800cc14:	f002 f856 	bl	800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cc18:	2401      	movs	r4, #1
 800cc1a:	280a      	cmp	r0, #10
 800cc1c:	4629      	mov	r1, r5
 800cc1e:	4630      	mov	r0, r6
 800cc20:	bf08      	it	eq
 800cc22:	3401      	addeq	r4, #1
 800cc24:	f002 f84e 	bl	800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cc28:	2800      	cmp	r0, #0
 800cc2a:	d1f6      	bne.n	800cc1a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x38>
 800cc2c:	b2a0      	uxth	r0, r4
 800cc2e:	b00a      	add	sp, #40	; 0x28
 800cc30:	bd70      	pop	{r4, r5, r6, pc}

0800cc32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800cc32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc36:	b0db      	sub	sp, #364	; 0x16c
 800cc38:	468a      	mov	sl, r1
 800cc3a:	f8dd b190 	ldr.w	fp, [sp, #400]	; 0x190
 800cc3e:	9009      	str	r0, [sp, #36]	; 0x24
 800cc40:	461c      	mov	r4, r3
 800cc42:	f1bb 0f00 	cmp.w	fp, #0
 800cc46:	f000 80c7 	beq.w	800cdd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800cc4a:	681b      	ldr	r3, [r3, #0]
 800cc4c:	2b00      	cmp	r3, #0
 800cc4e:	f000 80c3 	beq.w	800cdd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800cc52:	7ba3      	ldrb	r3, [r4, #14]
 800cc54:	2b00      	cmp	r3, #0
 800cc56:	f000 80bf 	beq.w	800cdd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800cc5a:	6810      	ldr	r0, [r2, #0]
 800cc5c:	6851      	ldr	r1, [r2, #4]
 800cc5e:	f9ba 2004 	ldrsh.w	r2, [sl, #4]
 800cc62:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800cc66:	af0c      	add	r7, sp, #48	; 0x30
 800cc68:	463b      	mov	r3, r7
 800cc6a:	c303      	stmia	r3!, {r0, r1}
 800cc6c:	2100      	movs	r1, #0
 800cc6e:	f9ba 3006 	ldrsh.w	r3, [sl, #6]
 800cc72:	910e      	str	r1, [sp, #56]	; 0x38
 800cc74:	79a2      	ldrb	r2, [r4, #6]
 800cc76:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800cc7a:	a90e      	add	r1, sp, #56	; 0x38
 800cc7c:	4638      	mov	r0, r7
 800cc7e:	f7ff fd4a 	bl	800c716 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800cc82:	a90e      	add	r1, sp, #56	; 0x38
 800cc84:	4608      	mov	r0, r1
 800cc86:	79a2      	ldrb	r2, [r4, #6]
 800cc88:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 800cc8c:	f7ff fd43 	bl	800c716 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800cc90:	4648      	mov	r0, r9
 800cc92:	f001 fed5 	bl	800ea40 <_ZN8touchgfx12TextProviderC1Ev>
 800cc96:	6820      	ldr	r0, [r4, #0]
 800cc98:	6803      	ldr	r3, [r0, #0]
 800cc9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cc9c:	4798      	blx	r3
 800cc9e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800cca0:	4603      	mov	r3, r0
 800cca2:	4659      	mov	r1, fp
 800cca4:	4648      	mov	r0, r9
 800cca6:	f001 fee8 	bl	800ea7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ccaa:	a82e      	add	r0, sp, #184	; 0xb8
 800ccac:	f001 fec8 	bl	800ea40 <_ZN8touchgfx12TextProviderC1Ev>
 800ccb0:	f894 8004 	ldrb.w	r8, [r4, #4]
 800ccb4:	f1b8 0f00 	cmp.w	r8, #0
 800ccb8:	d009      	beq.n	800ccce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800ccba:	6820      	ldr	r0, [r4, #0]
 800ccbc:	6803      	ldr	r3, [r0, #0]
 800ccbe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ccc0:	4798      	blx	r3
 800ccc2:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800ccc4:	4603      	mov	r3, r0
 800ccc6:	4659      	mov	r1, fp
 800ccc8:	a82e      	add	r0, sp, #184	; 0xb8
 800ccca:	f001 fed6 	bl	800ea7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ccce:	6820      	ldr	r0, [r4, #0]
 800ccd0:	6803      	ldr	r3, [r0, #0]
 800ccd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ccd4:	4798      	blx	r3
 800ccd6:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800ccda:	182e      	adds	r6, r5, r0
 800ccdc:	2e00      	cmp	r6, #0
 800ccde:	dd45      	ble.n	800cd6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13a>
 800cce0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800cce4:	4283      	cmp	r3, r0
 800cce6:	db41      	blt.n	800cd6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13a>
 800cce8:	441d      	add	r5, r3
 800ccea:	fb95 f5f6 	sdiv	r5, r5, r6
 800ccee:	a844      	add	r0, sp, #272	; 0x110
 800ccf0:	f001 fea6 	bl	800ea40 <_ZN8touchgfx12TextProviderC1Ev>
 800ccf4:	7c23      	ldrb	r3, [r4, #16]
 800ccf6:	b14b      	cbz	r3, 800cd0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xda>
 800ccf8:	6820      	ldr	r0, [r4, #0]
 800ccfa:	6803      	ldr	r3, [r0, #0]
 800ccfc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ccfe:	4798      	blx	r3
 800cd00:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800cd02:	4603      	mov	r3, r0
 800cd04:	4659      	mov	r1, fp
 800cd06:	a844      	add	r0, sp, #272	; 0x110
 800cd08:	f001 feb7 	bl	800ea7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800cd0c:	7c21      	ldrb	r1, [r4, #16]
 800cd0e:	9101      	str	r1, [sp, #4]
 800cd10:	6821      	ldr	r1, [r4, #0]
 800cd12:	7963      	ldrb	r3, [r4, #5]
 800cd14:	9100      	str	r1, [sp, #0]
 800cd16:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800cd1a:	a944      	add	r1, sp, #272	; 0x110
 800cd1c:	a810      	add	r0, sp, #64	; 0x40
 800cd1e:	f7ff fc8e 	bl	800c63e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800cd22:	7c23      	ldrb	r3, [r4, #16]
 800cd24:	bb23      	cbnz	r3, 800cd70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13e>
 800cd26:	fa1f fb86 	uxth.w	fp, r6
 800cd2a:	2d00      	cmp	r5, #0
 800cd2c:	dd57      	ble.n	800cdde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ac>
 800cd2e:	7961      	ldrb	r1, [r4, #5]
 800cd30:	4648      	mov	r0, r9
 800cd32:	f001 ffc7 	bl	800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cd36:	4603      	mov	r3, r0
 800cd38:	f1b8 0f00 	cmp.w	r8, #0
 800cd3c:	d005      	beq.n	800cd4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x118>
 800cd3e:	9008      	str	r0, [sp, #32]
 800cd40:	7961      	ldrb	r1, [r4, #5]
 800cd42:	a82e      	add	r0, sp, #184	; 0xb8
 800cd44:	f001 ffbe 	bl	800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cd48:	9b08      	ldr	r3, [sp, #32]
 800cd4a:	2b00      	cmp	r3, #0
 800cd4c:	d044      	beq.n	800cdd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800cd4e:	2b0a      	cmp	r3, #10
 800cd50:	d1eb      	bne.n	800cd2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf8>
 800cd52:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800cd56:	445b      	add	r3, fp
 800cd58:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800cd5c:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800cd60:	eba3 030b 	sub.w	r3, r3, fp
 800cd64:	3d01      	subs	r5, #1
 800cd66:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800cd6a:	e7de      	b.n	800cd2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf8>
 800cd6c:	2500      	movs	r5, #0
 800cd6e:	e7be      	b.n	800ccee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xbc>
 800cd70:	0073      	lsls	r3, r6, #1
 800cd72:	9308      	str	r3, [sp, #32]
 800cd74:	2d00      	cmp	r5, #0
 800cd76:	dd32      	ble.n	800cdde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ac>
 800cd78:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800cd7c:	9b08      	ldr	r3, [sp, #32]
 800cd7e:	428b      	cmp	r3, r1
 800cd80:	bfd4      	ite	le
 800cd82:	2100      	movle	r1, #0
 800cd84:	2101      	movgt	r1, #1
 800cd86:	a810      	add	r0, sp, #64	; 0x40
 800cd88:	f7ff fe6e 	bl	800ca68 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800cd8c:	f8bd b052 	ldrh.w	fp, [sp, #82]	; 0x52
 800cd90:	f10b 33ff 	add.w	r3, fp, #4294967295
 800cd94:	fa1f fb83 	uxth.w	fp, r3
 800cd98:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cd9c:	459b      	cmp	fp, r3
 800cd9e:	d00b      	beq.n	800cdb8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800cda0:	7961      	ldrb	r1, [r4, #5]
 800cda2:	4648      	mov	r0, r9
 800cda4:	f001 ff8e 	bl	800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cda8:	f1b8 0f00 	cmp.w	r8, #0
 800cdac:	d0f0      	beq.n	800cd90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15e>
 800cdae:	7961      	ldrb	r1, [r4, #5]
 800cdb0:	a82e      	add	r0, sp, #184	; 0xb8
 800cdb2:	f001 ff87 	bl	800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cdb6:	e7eb      	b.n	800cd90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15e>
 800cdb8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 800cdbc:	b2b3      	uxth	r3, r6
 800cdbe:	441a      	add	r2, r3
 800cdc0:	f8ad 203a 	strh.w	r2, [sp, #58]	; 0x3a
 800cdc4:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800cdc8:	1ad3      	subs	r3, r2, r3
 800cdca:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800cdce:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800cdd2:	3d01      	subs	r5, #1
 800cdd4:	2b00      	cmp	r3, #0
 800cdd6:	d1cd      	bne.n	800cd74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800cdd8:	b05b      	add	sp, #364	; 0x16c
 800cdda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdde:	ea4f 0b46 	mov.w	fp, r6, lsl #1
 800cde2:	f10d 052e 	add.w	r5, sp, #46	; 0x2e
 800cde6:	7c23      	ldrb	r3, [r4, #16]
 800cde8:	2b00      	cmp	r3, #0
 800cdea:	d05f      	beq.n	800ceac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x27a>
 800cdec:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800cdf0:	458b      	cmp	fp, r1
 800cdf2:	bfd4      	ite	le
 800cdf4:	2100      	movle	r1, #0
 800cdf6:	2101      	movgt	r1, #1
 800cdf8:	a810      	add	r0, sp, #64	; 0x40
 800cdfa:	f7ff fe35 	bl	800ca68 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800cdfe:	f1b8 0f00 	cmp.w	r8, #0
 800ce02:	d04c      	beq.n	800ce9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800ce04:	7c23      	ldrb	r3, [r4, #16]
 800ce06:	2b00      	cmp	r3, #0
 800ce08:	d053      	beq.n	800ceb2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x280>
 800ce0a:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800ce0e:	7922      	ldrb	r2, [r4, #4]
 800ce10:	2a01      	cmp	r2, #1
 800ce12:	d13c      	bne.n	800ce8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800ce14:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800ce18:	1ac0      	subs	r0, r0, r3
 800ce1a:	2302      	movs	r3, #2
 800ce1c:	fb90 f0f3 	sdiv	r0, r0, r3
 800ce20:	b200      	sxth	r0, r0
 800ce22:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ce26:	4418      	add	r0, r3
 800ce28:	7c23      	ldrb	r3, [r4, #16]
 800ce2a:	8028      	strh	r0, [r5, #0]
 800ce2c:	2b00      	cmp	r3, #0
 800ce2e:	d03a      	beq.n	800cea6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x274>
 800ce30:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800ce34:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800ce38:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800ce3c:	f8cd 9010 	str.w	r9, [sp, #16]
 800ce40:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800ce44:	2200      	movs	r2, #0
 800ce46:	e9cd 4202 	strd	r4, r2, [sp, #8]
 800ce4a:	e9cd 5700 	strd	r5, r7, [sp]
 800ce4e:	4652      	mov	r2, sl
 800ce50:	2100      	movs	r1, #0
 800ce52:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ce54:	f7ff fcb0 	bl	800c7b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800ce58:	2800      	cmp	r0, #0
 800ce5a:	d1bd      	bne.n	800cdd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800ce5c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800ce60:	b2b2      	uxth	r2, r6
 800ce62:	4611      	mov	r1, r2
 800ce64:	4413      	add	r3, r2
 800ce66:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800ce6a:	1a52      	subs	r2, r2, r1
 800ce6c:	7c21      	ldrb	r1, [r4, #16]
 800ce6e:	b21b      	sxth	r3, r3
 800ce70:	b212      	sxth	r2, r2
 800ce72:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800ce76:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800ce7a:	b109      	cbz	r1, 800ce80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800ce7c:	42b2      	cmp	r2, r6
 800ce7e:	dbab      	blt.n	800cdd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800ce80:	887a      	ldrh	r2, [r7, #2]
 800ce82:	88f9      	ldrh	r1, [r7, #6]
 800ce84:	440a      	add	r2, r1
 800ce86:	b212      	sxth	r2, r2
 800ce88:	4293      	cmp	r3, r2
 800ce8a:	ddac      	ble.n	800cde6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b4>
 800ce8c:	e7a4      	b.n	800cdd8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800ce8e:	2a02      	cmp	r2, #2
 800ce90:	d107      	bne.n	800cea2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800ce92:	7be2      	ldrb	r2, [r4, #15]
 800ce94:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800ce98:	1a80      	subs	r0, r0, r2
 800ce9a:	1ac0      	subs	r0, r0, r3
 800ce9c:	e7c0      	b.n	800ce20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 800ce9e:	7be0      	ldrb	r0, [r4, #15]
 800cea0:	e7bf      	b.n	800ce22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1f0>
 800cea2:	2000      	movs	r0, #0
 800cea4:	e7bd      	b.n	800ce22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1f0>
 800cea6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ceaa:	e7c3      	b.n	800ce34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x202>
 800ceac:	f1b8 0f00 	cmp.w	r8, #0
 800ceb0:	d0f5      	beq.n	800ce9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800ceb2:	2300      	movs	r3, #0
 800ceb4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ceb8:	6821      	ldr	r1, [r4, #0]
 800ceba:	a82e      	add	r0, sp, #184	; 0xb8
 800cebc:	f7ff fbf9 	bl	800c6b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800cec0:	b203      	sxth	r3, r0
 800cec2:	e7a4      	b.n	800ce0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>

0800cec4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800cec4:	b510      	push	{r4, lr}
 800cec6:	2b02      	cmp	r3, #2
 800cec8:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cecc:	d00b      	beq.n	800cee6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800cece:	2b03      	cmp	r3, #3
 800ced0:	d00e      	beq.n	800cef0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800ced2:	2b01      	cmp	r3, #1
 800ced4:	d001      	beq.n	800ceda <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800ced6:	1860      	adds	r0, r4, r1
 800ced8:	bd10      	pop	{r4, pc}
 800ceda:	8880      	ldrh	r0, [r0, #4]
 800cedc:	4420      	add	r0, r4
 800cede:	b200      	sxth	r0, r0
 800cee0:	1a80      	subs	r0, r0, r2
 800cee2:	3801      	subs	r0, #1
 800cee4:	e7f8      	b.n	800ced8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800cee6:	8880      	ldrh	r0, [r0, #4]
 800cee8:	4420      	add	r0, r4
 800ceea:	b200      	sxth	r0, r0
 800ceec:	1a40      	subs	r0, r0, r1
 800ceee:	e7f8      	b.n	800cee2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800cef0:	18a0      	adds	r0, r4, r2
 800cef2:	e7f1      	b.n	800ced8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800cef4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800cef4:	b510      	push	{r4, lr}
 800cef6:	2b02      	cmp	r3, #2
 800cef8:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800cefc:	d006      	beq.n	800cf0c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800cefe:	2b03      	cmp	r3, #3
 800cf00:	d00a      	beq.n	800cf18 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800cf02:	2b01      	cmp	r3, #1
 800cf04:	bf14      	ite	ne
 800cf06:	18a0      	addne	r0, r4, r2
 800cf08:	1860      	addeq	r0, r4, r1
 800cf0a:	bd10      	pop	{r4, pc}
 800cf0c:	88c0      	ldrh	r0, [r0, #6]
 800cf0e:	4420      	add	r0, r4
 800cf10:	b200      	sxth	r0, r0
 800cf12:	1a80      	subs	r0, r0, r2
 800cf14:	3801      	subs	r0, #1
 800cf16:	e7f8      	b.n	800cf0a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800cf18:	88c0      	ldrh	r0, [r0, #6]
 800cf1a:	4420      	add	r0, r4
 800cf1c:	b200      	sxth	r0, r0
 800cf1e:	1a40      	subs	r0, r0, r1
 800cf20:	e7f8      	b.n	800cf14 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800cf24 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800cf24:	4b01      	ldr	r3, [pc, #4]	; (800cf2c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800cf26:	2200      	movs	r2, #0
 800cf28:	601a      	str	r2, [r3, #0]
 800cf2a:	4770      	bx	lr
 800cf2c:	200014c0 	.word	0x200014c0

0800cf30 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800cf30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf32:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800cf36:	1e05      	subs	r5, r0, #0
 800cf38:	bfba      	itte	lt
 800cf3a:	f04f 37ff 	movlt.w	r7, #4294967295
 800cf3e:	426d      	neglt	r5, r5
 800cf40:	2701      	movge	r7, #1
 800cf42:	f1be 0f00 	cmp.w	lr, #0
 800cf46:	bfb8      	it	lt
 800cf48:	f1ce 0e00 	rsblt	lr, lr, #0
 800cf4c:	f04f 0601 	mov.w	r6, #1
 800cf50:	fa4e f001 	asr.w	r0, lr, r1
 800cf54:	fa06 f101 	lsl.w	r1, r6, r1
 800cf58:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800cf5c:	f101 31ff 	add.w	r1, r1, #4294967295
 800cf60:	ea01 010e 	and.w	r1, r1, lr
 800cf64:	bfb8      	it	lt
 800cf66:	427f      	neglt	r7, r7
 800cf68:	434d      	muls	r5, r1
 800cf6a:	2c00      	cmp	r4, #0
 800cf6c:	f8dc 1000 	ldr.w	r1, [ip]
 800cf70:	bfb8      	it	lt
 800cf72:	4264      	neglt	r4, r4
 800cf74:	fb03 1300 	mla	r3, r3, r0, r1
 800cf78:	fb95 f1f4 	sdiv	r1, r5, r4
 800cf7c:	fb04 5511 	mls	r5, r4, r1, r5
 800cf80:	441d      	add	r5, r3
 800cf82:	fb95 f3f4 	sdiv	r3, r5, r4
 800cf86:	fb04 5413 	mls	r4, r4, r3, r5
 800cf8a:	4419      	add	r1, r3
 800cf8c:	bfb8      	it	lt
 800cf8e:	427f      	neglt	r7, r7
 800cf90:	fb02 1000 	mla	r0, r2, r0, r1
 800cf94:	f8cc 4000 	str.w	r4, [ip]
 800cf98:	4378      	muls	r0, r7
 800cf9a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cf9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800cf9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cfa0:	4c24      	ldr	r4, [pc, #144]	; (800d034 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800cfa2:	6807      	ldr	r7, [r0, #0]
 800cfa4:	69a3      	ldr	r3, [r4, #24]
 800cfa6:	b086      	sub	sp, #24
 800cfa8:	4605      	mov	r5, r0
 800cfaa:	b92b      	cbnz	r3, 800cfb8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800cfac:	6840      	ldr	r0, [r0, #4]
 800cfae:	e9c5 7000 	strd	r7, r0, [r5]
 800cfb2:	b006      	add	sp, #24
 800cfb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfb8:	68a2      	ldr	r2, [r4, #8]
 800cfba:	6820      	ldr	r0, [r4, #0]
 800cfbc:	ae06      	add	r6, sp, #24
 800cfbe:	f04f 0802 	mov.w	r8, #2
 800cfc2:	fb93 f1f8 	sdiv	r1, r3, r8
 800cfc6:	440a      	add	r2, r1
 800cfc8:	f846 2d04 	str.w	r2, [r6, #-4]!
 800cfcc:	69e1      	ldr	r1, [r4, #28]
 800cfce:	9700      	str	r7, [sp, #0]
 800cfd0:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800cfd4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cfd6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800cfd8:	f7ff ffaa 	bl	800cf30 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800cfdc:	69a3      	ldr	r3, [r4, #24]
 800cfde:	9301      	str	r3, [sp, #4]
 800cfe0:	686b      	ldr	r3, [r5, #4]
 800cfe2:	9300      	str	r3, [sp, #0]
 800cfe4:	4607      	mov	r7, r0
 800cfe6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cfe8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cfea:	6a21      	ldr	r1, [r4, #32]
 800cfec:	9602      	str	r6, [sp, #8]
 800cfee:	6860      	ldr	r0, [r4, #4]
 800cff0:	f7ff ff9e 	bl	800cf30 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800cff4:	6963      	ldr	r3, [r4, #20]
 800cff6:	69a2      	ldr	r2, [r4, #24]
 800cff8:	fb92 f8f8 	sdiv	r8, r2, r8
 800cffc:	4443      	add	r3, r8
 800cffe:	9305      	str	r3, [sp, #20]
 800d000:	682b      	ldr	r3, [r5, #0]
 800d002:	9300      	str	r3, [sp, #0]
 800d004:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800d008:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d00a:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d00c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d00e:	4407      	add	r7, r0
 800d010:	68e0      	ldr	r0, [r4, #12]
 800d012:	f7ff ff8d 	bl	800cf30 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d016:	69a3      	ldr	r3, [r4, #24]
 800d018:	9301      	str	r3, [sp, #4]
 800d01a:	686b      	ldr	r3, [r5, #4]
 800d01c:	9300      	str	r3, [sp, #0]
 800d01e:	4680      	mov	r8, r0
 800d020:	9602      	str	r6, [sp, #8]
 800d022:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800d024:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d026:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800d028:	6920      	ldr	r0, [r4, #16]
 800d02a:	f7ff ff81 	bl	800cf30 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d02e:	4440      	add	r0, r8
 800d030:	e7bd      	b.n	800cfae <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800d032:	bf00      	nop
 800d034:	200014c4 	.word	0x200014c4

0800d038 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800d038:	b510      	push	{r4, lr}
 800d03a:	4b07      	ldr	r3, [pc, #28]	; (800d058 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800d03c:	781b      	ldrb	r3, [r3, #0]
 800d03e:	2b01      	cmp	r3, #1
 800d040:	d108      	bne.n	800d054 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800d042:	4b06      	ldr	r3, [pc, #24]	; (800d05c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800d044:	880c      	ldrh	r4, [r1, #0]
 800d046:	881b      	ldrh	r3, [r3, #0]
 800d048:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d04c:	3b01      	subs	r3, #1
 800d04e:	1b1b      	subs	r3, r3, r4
 800d050:	8003      	strh	r3, [r0, #0]
 800d052:	800a      	strh	r2, [r1, #0]
 800d054:	bd10      	pop	{r4, pc}
 800d056:	bf00      	nop
 800d058:	200014b0 	.word	0x200014b0
 800d05c:	200014b4 	.word	0x200014b4

0800d060 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800d060:	b510      	push	{r4, lr}
 800d062:	4b0a      	ldr	r3, [pc, #40]	; (800d08c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800d064:	781b      	ldrb	r3, [r3, #0]
 800d066:	2b01      	cmp	r3, #1
 800d068:	d10e      	bne.n	800d088 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800d06a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d06e:	8843      	ldrh	r3, [r0, #2]
 800d070:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d074:	8044      	strh	r4, [r0, #2]
 800d076:	18ca      	adds	r2, r1, r3
 800d078:	4b05      	ldr	r3, [pc, #20]	; (800d090 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800d07a:	881b      	ldrh	r3, [r3, #0]
 800d07c:	1a9b      	subs	r3, r3, r2
 800d07e:	8003      	strh	r3, [r0, #0]
 800d080:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d084:	80c3      	strh	r3, [r0, #6]
 800d086:	8081      	strh	r1, [r0, #4]
 800d088:	bd10      	pop	{r4, pc}
 800d08a:	bf00      	nop
 800d08c:	200014b0 	.word	0x200014b0
 800d090:	200014ac 	.word	0x200014ac

0800d094 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800d094:	b510      	push	{r4, lr}
 800d096:	4b07      	ldr	r3, [pc, #28]	; (800d0b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800d098:	781b      	ldrb	r3, [r3, #0]
 800d09a:	2b01      	cmp	r3, #1
 800d09c:	d108      	bne.n	800d0b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800d09e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800d0a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d0a6:	8003      	strh	r3, [r0, #0]
 800d0a8:	8893      	ldrh	r3, [r2, #4]
 800d0aa:	3b01      	subs	r3, #1
 800d0ac:	1b1b      	subs	r3, r3, r4
 800d0ae:	800b      	strh	r3, [r1, #0]
 800d0b0:	bd10      	pop	{r4, pc}
 800d0b2:	bf00      	nop
 800d0b4:	200014b0 	.word	0x200014b0

0800d0b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800d0b8:	b513      	push	{r0, r1, r4, lr}
 800d0ba:	4b08      	ldr	r3, [pc, #32]	; (800d0dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800d0bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d0c0:	4b07      	ldr	r3, [pc, #28]	; (800d0e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800d0c2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d0c6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d0ca:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d0ce:	2400      	movs	r4, #0
 800d0d0:	466a      	mov	r2, sp
 800d0d2:	9400      	str	r4, [sp, #0]
 800d0d4:	f7ff ffde 	bl	800d094 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800d0d8:	b002      	add	sp, #8
 800d0da:	bd10      	pop	{r4, pc}
 800d0dc:	200014ac 	.word	0x200014ac
 800d0e0:	200014ae 	.word	0x200014ae

0800d0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800d0e4:	b510      	push	{r4, lr}
 800d0e6:	4b0a      	ldr	r3, [pc, #40]	; (800d110 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800d0e8:	781b      	ldrb	r3, [r3, #0]
 800d0ea:	2b01      	cmp	r3, #1
 800d0ec:	460a      	mov	r2, r1
 800d0ee:	d10d      	bne.n	800d10c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800d0f0:	8881      	ldrh	r1, [r0, #4]
 800d0f2:	8803      	ldrh	r3, [r0, #0]
 800d0f4:	440b      	add	r3, r1
 800d0f6:	4601      	mov	r1, r0
 800d0f8:	3b01      	subs	r3, #1
 800d0fa:	f821 3b02 	strh.w	r3, [r1], #2
 800d0fe:	f7ff ffc9 	bl	800d094 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800d102:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d106:	88c2      	ldrh	r2, [r0, #6]
 800d108:	8082      	strh	r2, [r0, #4]
 800d10a:	80c3      	strh	r3, [r0, #6]
 800d10c:	bd10      	pop	{r4, pc}
 800d10e:	bf00      	nop
 800d110:	200014b0 	.word	0x200014b0

0800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800d114:	b507      	push	{r0, r1, r2, lr}
 800d116:	4b09      	ldr	r3, [pc, #36]	; (800d13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800d118:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d11c:	4b08      	ldr	r3, [pc, #32]	; (800d140 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800d11e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d122:	2100      	movs	r1, #0
 800d124:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d128:	9100      	str	r1, [sp, #0]
 800d12a:	4669      	mov	r1, sp
 800d12c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d130:	f7ff ffd8 	bl	800d0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800d134:	b003      	add	sp, #12
 800d136:	f85d fb04 	ldr.w	pc, [sp], #4
 800d13a:	bf00      	nop
 800d13c:	200014ac 	.word	0x200014ac
 800d140:	200014ae 	.word	0x200014ae

0800d144 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800d144:	4b03      	ldr	r3, [pc, #12]	; (800d154 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800d146:	6818      	ldr	r0, [r3, #0]
 800d148:	b110      	cbz	r0, 800d150 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800d14a:	6803      	ldr	r3, [r0, #0]
 800d14c:	699b      	ldr	r3, [r3, #24]
 800d14e:	4718      	bx	r3
 800d150:	4770      	bx	lr
 800d152:	bf00      	nop
 800d154:	20001514 	.word	0x20001514

0800d158 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800d158:	4770      	bx	lr
	...

0800d15c <_ZN8touchgfx11Application4drawEv>:
 800d15c:	b507      	push	{r0, r1, r2, lr}
 800d15e:	4b09      	ldr	r3, [pc, #36]	; (800d184 <_ZN8touchgfx11Application4drawEv+0x28>)
 800d160:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d164:	4b08      	ldr	r3, [pc, #32]	; (800d188 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800d166:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d16a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d16e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d172:	6803      	ldr	r3, [r0, #0]
 800d174:	2100      	movs	r1, #0
 800d176:	9100      	str	r1, [sp, #0]
 800d178:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d17a:	4669      	mov	r1, sp
 800d17c:	4798      	blx	r3
 800d17e:	b003      	add	sp, #12
 800d180:	f85d fb04 	ldr.w	pc, [sp], #4
 800d184:	200014ac 	.word	0x200014ac
 800d188:	200014ae 	.word	0x200014ae

0800d18c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800d18c:	4b03      	ldr	r3, [pc, #12]	; (800d19c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800d18e:	6818      	ldr	r0, [r3, #0]
 800d190:	b110      	cbz	r0, 800d198 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800d192:	6803      	ldr	r3, [r0, #0]
 800d194:	69db      	ldr	r3, [r3, #28]
 800d196:	4718      	bx	r3
 800d198:	4770      	bx	lr
 800d19a:	bf00      	nop
 800d19c:	20001514 	.word	0x20001514

0800d1a0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800d1a0:	4b03      	ldr	r3, [pc, #12]	; (800d1b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800d1a2:	6818      	ldr	r0, [r3, #0]
 800d1a4:	b110      	cbz	r0, 800d1ac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800d1a6:	6803      	ldr	r3, [r0, #0]
 800d1a8:	6a1b      	ldr	r3, [r3, #32]
 800d1aa:	4718      	bx	r3
 800d1ac:	4770      	bx	lr
 800d1ae:	bf00      	nop
 800d1b0:	20001514 	.word	0x20001514

0800d1b4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800d1b4:	4b03      	ldr	r3, [pc, #12]	; (800d1c4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800d1b6:	6818      	ldr	r0, [r3, #0]
 800d1b8:	b110      	cbz	r0, 800d1c0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800d1ba:	6803      	ldr	r3, [r0, #0]
 800d1bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d1be:	4718      	bx	r3
 800d1c0:	4770      	bx	lr
 800d1c2:	bf00      	nop
 800d1c4:	20001514 	.word	0x20001514

0800d1c8 <_ZN8touchgfx11Application15handleTickEventEv>:
 800d1c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d1cc:	4d3a      	ldr	r5, [pc, #232]	; (800d2b8 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800d1ce:	4604      	mov	r4, r0
 800d1d0:	6828      	ldr	r0, [r5, #0]
 800d1d2:	b140      	cbz	r0, 800d1e6 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800d1d4:	7a03      	ldrb	r3, [r0, #8]
 800d1d6:	b933      	cbnz	r3, 800d1e6 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800d1d8:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800d1dc:	6803      	ldr	r3, [r0, #0]
 800d1de:	689b      	ldr	r3, [r3, #8]
 800d1e0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d1e4:	4718      	bx	r3
 800d1e6:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
 800d1ea:	b97b      	cbnz	r3, 800d20c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800d1ec:	b170      	cbz	r0, 800d20c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800d1ee:	7a03      	ldrb	r3, [r0, #8]
 800d1f0:	b163      	cbz	r3, 800d20c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800d1f2:	4b32      	ldr	r3, [pc, #200]	; (800d2bc <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800d1f4:	6818      	ldr	r0, [r3, #0]
 800d1f6:	b110      	cbz	r0, 800d1fe <_ZN8touchgfx11Application15handleTickEventEv+0x36>
 800d1f8:	6803      	ldr	r3, [r0, #0]
 800d1fa:	691b      	ldr	r3, [r3, #16]
 800d1fc:	4798      	blx	r3
 800d1fe:	6828      	ldr	r0, [r5, #0]
 800d200:	6803      	ldr	r3, [r0, #0]
 800d202:	68db      	ldr	r3, [r3, #12]
 800d204:	4798      	blx	r3
 800d206:	2301      	movs	r3, #1
 800d208:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800d20c:	2500      	movs	r5, #0
 800d20e:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800d212:	42a8      	cmp	r0, r5
 800d214:	dd0c      	ble.n	800d230 <_ZN8touchgfx11Application15handleTickEventEv+0x68>
 800d216:	1963      	adds	r3, r4, r5
 800d218:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800d21c:	b132      	cbz	r2, 800d22c <_ZN8touchgfx11Application15handleTickEventEv+0x64>
 800d21e:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800d222:	4413      	add	r3, r2
 800d224:	6858      	ldr	r0, [r3, #4]
 800d226:	6803      	ldr	r3, [r0, #0]
 800d228:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d22a:	4798      	blx	r3
 800d22c:	3501      	adds	r5, #1
 800d22e:	e7ee      	b.n	800d20e <_ZN8touchgfx11Application15handleTickEventEv+0x46>
 800d230:	f5c4 467f 	rsb	r6, r4, #65280	; 0xff00
 800d234:	3801      	subs	r0, #1
 800d236:	3678      	adds	r6, #120	; 0x78
 800d238:	f04f 0c00 	mov.w	ip, #0
 800d23c:	1c43      	adds	r3, r0, #1
 800d23e:	d033      	beq.n	800d2a8 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800d240:	1823      	adds	r3, r4, r0
 800d242:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800d246:	bb6a      	cbnz	r2, 800d2a4 <_ZN8touchgfx11Application15handleTickEventEv+0xdc>
 800d248:	b281      	uxth	r1, r0
 800d24a:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800d24e:	1d25      	adds	r5, r4, #4
 800d250:	f8d3 9004 	ldr.w	r9, [r3, #4]
 800d254:	f8b4 3084 	ldrh.w	r3, [r4, #132]	; 0x84
 800d258:	4293      	cmp	r3, r2
 800d25a:	dc0a      	bgt.n	800d272 <_ZN8touchgfx11Application15handleTickEventEv+0xaa>
 800d25c:	f101 0288 	add.w	r2, r1, #136	; 0x88
 800d260:	4422      	add	r2, r4
 800d262:	18b1      	adds	r1, r6, r2
 800d264:	b289      	uxth	r1, r1
 800d266:	428b      	cmp	r3, r1
 800d268:	d919      	bls.n	800d29e <_ZN8touchgfx11Application15handleTickEventEv+0xd6>
 800d26a:	7851      	ldrb	r1, [r2, #1]
 800d26c:	f802 1b01 	strb.w	r1, [r2], #1
 800d270:	e7f7      	b.n	800d262 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800d272:	682f      	ldr	r7, [r5, #0]
 800d274:	45b9      	cmp	r9, r7
 800d276:	f105 0804 	add.w	r8, r5, #4
 800d27a:	d10d      	bne.n	800d298 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>
 800d27c:	4696      	mov	lr, r2
 800d27e:	f1be 0f1e 	cmp.w	lr, #30
 800d282:	dc06      	bgt.n	800d292 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800d284:	f10e 0e01 	add.w	lr, lr, #1
 800d288:	686f      	ldr	r7, [r5, #4]
 800d28a:	f845 7b04 	str.w	r7, [r5], #4
 800d28e:	4573      	cmp	r3, lr
 800d290:	dcf5      	bgt.n	800d27e <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800d292:	3b01      	subs	r3, #1
 800d294:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800d298:	3201      	adds	r2, #1
 800d29a:	4645      	mov	r5, r8
 800d29c:	e7da      	b.n	800d254 <_ZN8touchgfx11Application15handleTickEventEv+0x8c>
 800d29e:	4423      	add	r3, r4
 800d2a0:	f883 c088 	strb.w	ip, [r3, #136]	; 0x88
 800d2a4:	3801      	subs	r0, #1
 800d2a6:	e7c9      	b.n	800d23c <_ZN8touchgfx11Application15handleTickEventEv+0x74>
 800d2a8:	4b04      	ldr	r3, [pc, #16]	; (800d2bc <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800d2aa:	6818      	ldr	r0, [r3, #0]
 800d2ac:	b110      	cbz	r0, 800d2b4 <_ZN8touchgfx11Application15handleTickEventEv+0xec>
 800d2ae:	6803      	ldr	r3, [r0, #0]
 800d2b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d2b2:	e795      	b.n	800d1e0 <_ZN8touchgfx11Application15handleTickEventEv+0x18>
 800d2b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d2b8:	20001518 	.word	0x20001518
 800d2bc:	20001514 	.word	0x20001514

0800d2c0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800d2c0:	b570      	push	{r4, r5, r6, lr}
 800d2c2:	4606      	mov	r6, r0
 800d2c4:	460c      	mov	r4, r1
 800d2c6:	b929      	cbnz	r1, 800d2d4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800d2c8:	4b0c      	ldr	r3, [pc, #48]	; (800d2fc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800d2ca:	4a0d      	ldr	r2, [pc, #52]	; (800d300 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800d2cc:	480d      	ldr	r0, [pc, #52]	; (800d304 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800d2ce:	2164      	movs	r1, #100	; 0x64
 800d2d0:	f00d fb24 	bl	801a91c <__assert_func>
 800d2d4:	4d0c      	ldr	r5, [pc, #48]	; (800d308 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800d2d6:	2300      	movs	r3, #0
 800d2d8:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800d2dc:	6828      	ldr	r0, [r5, #0]
 800d2de:	b110      	cbz	r0, 800d2e6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800d2e0:	6803      	ldr	r3, [r0, #0]
 800d2e2:	695b      	ldr	r3, [r3, #20]
 800d2e4:	4798      	blx	r3
 800d2e6:	602c      	str	r4, [r5, #0]
 800d2e8:	6823      	ldr	r3, [r4, #0]
 800d2ea:	4620      	mov	r0, r4
 800d2ec:	68db      	ldr	r3, [r3, #12]
 800d2ee:	4798      	blx	r3
 800d2f0:	6833      	ldr	r3, [r6, #0]
 800d2f2:	4630      	mov	r0, r6
 800d2f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d2f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d2fa:	4718      	bx	r3
 800d2fc:	0801d3fc 	.word	0x0801d3fc
 800d300:	0801d4c4 	.word	0x0801d4c4
 800d304:	0801d406 	.word	0x0801d406
 800d308:	20001514 	.word	0x20001514

0800d30c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800d30c:	b510      	push	{r4, lr}
 800d30e:	f9b1 4000 	ldrsh.w	r4, [r1]
 800d312:	888a      	ldrh	r2, [r1, #4]
 800d314:	f9b0 3000 	ldrsh.w	r3, [r0]
 800d318:	4422      	add	r2, r4
 800d31a:	b212      	sxth	r2, r2
 800d31c:	4293      	cmp	r3, r2
 800d31e:	da15      	bge.n	800d34c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d320:	8882      	ldrh	r2, [r0, #4]
 800d322:	4413      	add	r3, r2
 800d324:	b21b      	sxth	r3, r3
 800d326:	429c      	cmp	r4, r3
 800d328:	da10      	bge.n	800d34c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d32a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800d32e:	88c9      	ldrh	r1, [r1, #6]
 800d330:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800d334:	4419      	add	r1, r3
 800d336:	b209      	sxth	r1, r1
 800d338:	428a      	cmp	r2, r1
 800d33a:	da07      	bge.n	800d34c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d33c:	88c0      	ldrh	r0, [r0, #6]
 800d33e:	4410      	add	r0, r2
 800d340:	b200      	sxth	r0, r0
 800d342:	4283      	cmp	r3, r0
 800d344:	bfac      	ite	ge
 800d346:	2000      	movge	r0, #0
 800d348:	2001      	movlt	r0, #1
 800d34a:	bd10      	pop	{r4, pc}
 800d34c:	2000      	movs	r0, #0
 800d34e:	e7fc      	b.n	800d34a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800d350 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800d350:	b570      	push	{r4, r5, r6, lr}
 800d352:	f9b1 4000 	ldrsh.w	r4, [r1]
 800d356:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d35a:	42ac      	cmp	r4, r5
 800d35c:	db18      	blt.n	800d390 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800d35e:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800d362:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800d366:	429a      	cmp	r2, r3
 800d368:	db12      	blt.n	800d390 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800d36a:	8886      	ldrh	r6, [r0, #4]
 800d36c:	4435      	add	r5, r6
 800d36e:	888e      	ldrh	r6, [r1, #4]
 800d370:	4434      	add	r4, r6
 800d372:	b22d      	sxth	r5, r5
 800d374:	b224      	sxth	r4, r4
 800d376:	42a5      	cmp	r5, r4
 800d378:	db0a      	blt.n	800d390 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800d37a:	88c0      	ldrh	r0, [r0, #6]
 800d37c:	4418      	add	r0, r3
 800d37e:	88cb      	ldrh	r3, [r1, #6]
 800d380:	441a      	add	r2, r3
 800d382:	b200      	sxth	r0, r0
 800d384:	b212      	sxth	r2, r2
 800d386:	4290      	cmp	r0, r2
 800d388:	bfb4      	ite	lt
 800d38a:	2000      	movlt	r0, #0
 800d38c:	2001      	movge	r0, #1
 800d38e:	bd70      	pop	{r4, r5, r6, pc}
 800d390:	2000      	movs	r0, #0
 800d392:	e7fc      	b.n	800d38e <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800d394 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800d394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d396:	4604      	mov	r4, r0
 800d398:	4608      	mov	r0, r1
 800d39a:	460d      	mov	r5, r1
 800d39c:	f7fd ff66 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800d3a0:	b978      	cbnz	r0, 800d3c2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800d3a2:	4620      	mov	r0, r4
 800d3a4:	f7fd ff62 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800d3a8:	f9b5 6000 	ldrsh.w	r6, [r5]
 800d3ac:	b150      	cbz	r0, 800d3c4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800d3ae:	8026      	strh	r6, [r4, #0]
 800d3b0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d3b4:	8063      	strh	r3, [r4, #2]
 800d3b6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800d3ba:	80a3      	strh	r3, [r4, #4]
 800d3bc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d3c0:	80e3      	strh	r3, [r4, #6]
 800d3c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d3c4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d3c8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d3cc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800d3d0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800d3d4:	88ed      	ldrh	r5, [r5, #6]
 800d3d6:	42b1      	cmp	r1, r6
 800d3d8:	460f      	mov	r7, r1
 800d3da:	bfa8      	it	ge
 800d3dc:	4637      	movge	r7, r6
 800d3de:	4293      	cmp	r3, r2
 800d3e0:	4618      	mov	r0, r3
 800d3e2:	4466      	add	r6, ip
 800d3e4:	bfa8      	it	ge
 800d3e6:	4610      	movge	r0, r2
 800d3e8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d3ec:	8027      	strh	r7, [r4, #0]
 800d3ee:	442a      	add	r2, r5
 800d3f0:	88e5      	ldrh	r5, [r4, #6]
 800d3f2:	8060      	strh	r0, [r4, #2]
 800d3f4:	4461      	add	r1, ip
 800d3f6:	442b      	add	r3, r5
 800d3f8:	b236      	sxth	r6, r6
 800d3fa:	b209      	sxth	r1, r1
 800d3fc:	b212      	sxth	r2, r2
 800d3fe:	b21b      	sxth	r3, r3
 800d400:	428e      	cmp	r6, r1
 800d402:	bfac      	ite	ge
 800d404:	ebc7 0106 	rsbge	r1, r7, r6
 800d408:	ebc7 0101 	rsblt	r1, r7, r1
 800d40c:	429a      	cmp	r2, r3
 800d40e:	bfac      	ite	ge
 800d410:	ebc0 0202 	rsbge	r2, r0, r2
 800d414:	ebc0 0203 	rsblt	r2, r0, r3
 800d418:	80a1      	strh	r1, [r4, #4]
 800d41a:	80e2      	strh	r2, [r4, #6]
 800d41c:	e7d1      	b.n	800d3c2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d420 <_ZN8touchgfx11Application11getInstanceEv>:
 800d420:	4b01      	ldr	r3, [pc, #4]	; (800d428 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d422:	6818      	ldr	r0, [r3, #0]
 800d424:	4770      	bx	lr
 800d426:	bf00      	nop
 800d428:	20001524 	.word	0x20001524

0800d42c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800d42c:	2300      	movs	r3, #0
 800d42e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800d432:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800d436:	30a8      	adds	r0, #168	; 0xa8
 800d438:	f802 3b01 	strb.w	r3, [r2], #1
 800d43c:	4282      	cmp	r2, r0
 800d43e:	d1fb      	bne.n	800d438 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800d440:	4770      	bx	lr

0800d442 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d442:	4603      	mov	r3, r0
 800d444:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800d448:	2200      	movs	r2, #0
 800d44a:	801a      	strh	r2, [r3, #0]
 800d44c:	805a      	strh	r2, [r3, #2]
 800d44e:	809a      	strh	r2, [r3, #4]
 800d450:	80da      	strh	r2, [r3, #6]
 800d452:	3308      	adds	r3, #8
 800d454:	428b      	cmp	r3, r1
 800d456:	d1f8      	bne.n	800d44a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d458:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800d45c:	4770      	bx	lr
	...

0800d460 <_ZN8touchgfx11ApplicationC1Ev>:
 800d460:	b570      	push	{r4, r5, r6, lr}
 800d462:	4b16      	ldr	r3, [pc, #88]	; (800d4bc <_ZN8touchgfx11ApplicationC1Ev+0x5c>)
 800d464:	6003      	str	r3, [r0, #0]
 800d466:	2500      	movs	r5, #0
 800d468:	4604      	mov	r4, r0
 800d46a:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800d46e:	30a8      	adds	r0, #168	; 0xa8
 800d470:	f7ff ffe7 	bl	800d442 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d474:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800d478:	f7ff ffe3 	bl	800d442 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d47c:	f884 512c 	strb.w	r5, [r4, #300]	; 0x12c
 800d480:	f884 512d 	strb.w	r5, [r4, #301]	; 0x12d
 800d484:	490e      	ldr	r1, [pc, #56]	; (800d4c0 <_ZN8touchgfx11ApplicationC1Ev+0x60>)
 800d486:	480f      	ldr	r0, [pc, #60]	; (800d4c4 <_ZN8touchgfx11ApplicationC1Ev+0x64>)
 800d488:	4e0f      	ldr	r6, [pc, #60]	; (800d4c8 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800d48a:	f00d f915 	bl	801a6b8 <CRC_Lock>
 800d48e:	4b0f      	ldr	r3, [pc, #60]	; (800d4cc <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800d490:	b158      	cbz	r0, 800d4aa <_ZN8touchgfx11ApplicationC1Ev+0x4a>
 800d492:	801d      	strh	r5, [r3, #0]
 800d494:	4a0e      	ldr	r2, [pc, #56]	; (800d4d0 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800d496:	2300      	movs	r3, #0
 800d498:	6013      	str	r3, [r2, #0]
 800d49a:	4a0e      	ldr	r2, [pc, #56]	; (800d4d4 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800d49c:	6033      	str	r3, [r6, #0]
 800d49e:	4620      	mov	r0, r4
 800d4a0:	6013      	str	r3, [r2, #0]
 800d4a2:	f7ff ffc3 	bl	800d42c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800d4a6:	4620      	mov	r0, r4
 800d4a8:	bd70      	pop	{r4, r5, r6, pc}
 800d4aa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d4ae:	2002      	movs	r0, #2
 800d4b0:	801a      	strh	r2, [r3, #0]
 800d4b2:	6030      	str	r0, [r6, #0]
 800d4b4:	f000 ff1e 	bl	800e2f4 <_ZN8touchgfx6Screen4drawEv>
 800d4b8:	e7ec      	b.n	800d494 <_ZN8touchgfx11ApplicationC1Ev+0x34>
 800d4ba:	bf00      	nop
 800d4bc:	0801d490 	.word	0x0801d490
 800d4c0:	b5e8b5cd 	.word	0xb5e8b5cd
 800d4c4:	f407a5c2 	.word	0xf407a5c2
 800d4c8:	20001514 	.word	0x20001514
 800d4cc:	20000024 	.word	0x20000024
 800d4d0:	20001524 	.word	0x20001524
 800d4d4:	20001518 	.word	0x20001518

0800d4d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d4d8:	2300      	movs	r3, #0
 800d4da:	8003      	strh	r3, [r0, #0]
 800d4dc:	8043      	strh	r3, [r0, #2]
 800d4de:	8083      	strh	r3, [r0, #4]
 800d4e0:	80c3      	strh	r3, [r0, #6]
 800d4e2:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800d4e6:	4293      	cmp	r3, r2
 800d4e8:	b530      	push	{r4, r5, lr}
 800d4ea:	d912      	bls.n	800d512 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800d4ec:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800d4f0:	3b01      	subs	r3, #1
 800d4f2:	6825      	ldr	r5, [r4, #0]
 800d4f4:	6005      	str	r5, [r0, #0]
 800d4f6:	b29b      	uxth	r3, r3
 800d4f8:	6865      	ldr	r5, [r4, #4]
 800d4fa:	6045      	str	r5, [r0, #4]
 800d4fc:	4293      	cmp	r3, r2
 800d4fe:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800d502:	d906      	bls.n	800d512 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800d504:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800d508:	681d      	ldr	r5, [r3, #0]
 800d50a:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800d50e:	685d      	ldr	r5, [r3, #4]
 800d510:	6065      	str	r5, [r4, #4]
 800d512:	bd30      	pop	{r4, r5, pc}

0800d514 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800d514:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d516:	466b      	mov	r3, sp
 800d518:	e883 0006 	stmia.w	r3, {r1, r2}
 800d51c:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800d520:	2a07      	cmp	r2, #7
 800d522:	4604      	mov	r4, r0
 800d524:	d906      	bls.n	800d534 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800d526:	4b09      	ldr	r3, [pc, #36]	; (800d54c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800d528:	4a09      	ldr	r2, [pc, #36]	; (800d550 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800d52a:	480a      	ldr	r0, [pc, #40]	; (800d554 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800d52c:	f44f 7102 	mov.w	r1, #520	; 0x208
 800d530:	f00d f9f4 	bl	801a91c <__assert_func>
 800d534:	1c51      	adds	r1, r2, #1
 800d536:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800d53a:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800d53e:	cb03      	ldmia	r3!, {r0, r1}
 800d540:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800d544:	6069      	str	r1, [r5, #4]
 800d546:	b003      	add	sp, #12
 800d548:	bd30      	pop	{r4, r5, pc}
 800d54a:	bf00      	nop
 800d54c:	0801d430 	.word	0x0801d430
 800d550:	0801d508 	.word	0x0801d508
 800d554:	0801d45f 	.word	0x0801d45f

0800d558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d558:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d55c:	b089      	sub	sp, #36	; 0x24
 800d55e:	466c      	mov	r4, sp
 800d560:	4606      	mov	r6, r0
 800d562:	4620      	mov	r0, r4
 800d564:	e884 0006 	stmia.w	r4, {r1, r2}
 800d568:	f7fd fe80 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800d56c:	bbb0      	cbnz	r0, 800d5dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800d56e:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800d572:	b1fd      	cbz	r5, 800d5b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800d574:	3d01      	subs	r5, #1
 800d576:	af04      	add	r7, sp, #16
 800d578:	f04f 090a 	mov.w	r9, #10
 800d57c:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800d580:	ab02      	add	r3, sp, #8
 800d582:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d586:	6851      	ldr	r1, [r2, #4]
 800d588:	c303      	stmia	r3!, {r0, r1}
 800d58a:	4621      	mov	r1, r4
 800d58c:	a802      	add	r0, sp, #8
 800d58e:	fa1f f885 	uxth.w	r8, r5
 800d592:	f7ff fedd 	bl	800d350 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d596:	bb08      	cbnz	r0, 800d5dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800d598:	a902      	add	r1, sp, #8
 800d59a:	4620      	mov	r0, r4
 800d59c:	f7ff fed8 	bl	800d350 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d5a0:	b1f8      	cbz	r0, 800d5e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800d5a2:	4642      	mov	r2, r8
 800d5a4:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d5a8:	a806      	add	r0, sp, #24
 800d5aa:	f7ff ff95 	bl	800d4d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d5ae:	f115 35ff 	adds.w	r5, r5, #4294967295
 800d5b2:	d2e3      	bcs.n	800d57c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800d5b4:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800d5b8:	2b08      	cmp	r3, #8
 800d5ba:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800d5be:	d108      	bne.n	800d5d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d5c0:	4629      	mov	r1, r5
 800d5c2:	a806      	add	r0, sp, #24
 800d5c4:	2207      	movs	r2, #7
 800d5c6:	f7ff ff87 	bl	800d4d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d5ca:	a906      	add	r1, sp, #24
 800d5cc:	4620      	mov	r0, r4
 800d5ce:	f7ff fee1 	bl	800d394 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d5d2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800d5d6:	4628      	mov	r0, r5
 800d5d8:	f7ff ff9c 	bl	800d514 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d5dc:	b009      	add	sp, #36	; 0x24
 800d5de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d5e2:	4621      	mov	r1, r4
 800d5e4:	a802      	add	r0, sp, #8
 800d5e6:	f7ff fe91 	bl	800d30c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d5ea:	b150      	cbz	r0, 800d602 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800d5ec:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d5f0:	a806      	add	r0, sp, #24
 800d5f2:	4642      	mov	r2, r8
 800d5f4:	f7ff ff70 	bl	800d4d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d5f8:	a902      	add	r1, sp, #8
 800d5fa:	4620      	mov	r0, r4
 800d5fc:	f7ff feca 	bl	800d394 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d600:	e7d5      	b.n	800d5ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d602:	e894 0003 	ldmia.w	r4, {r0, r1}
 800d606:	e887 0003 	stmia.w	r7, {r0, r1}
 800d60a:	a902      	add	r1, sp, #8
 800d60c:	4638      	mov	r0, r7
 800d60e:	f7ff fec1 	bl	800d394 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d612:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d616:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d61a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800d61e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800d622:	fb13 f302 	smulbb	r3, r3, r2
 800d626:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d62a:	fb11 f102 	smulbb	r1, r1, r2
 800d62e:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d632:	fb12 1100 	smlabb	r1, r2, r0, r1
 800d636:	220b      	movs	r2, #11
 800d638:	fb09 f303 	mul.w	r3, r9, r3
 800d63c:	434a      	muls	r2, r1
 800d63e:	4293      	cmp	r3, r2
 800d640:	dab5      	bge.n	800d5ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d642:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d646:	a806      	add	r0, sp, #24
 800d648:	4642      	mov	r2, r8
 800d64a:	f7ff ff45 	bl	800d4d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d64e:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d652:	e884 0003 	stmia.w	r4, {r0, r1}
 800d656:	e7aa      	b.n	800d5ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800d658 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d658:	b530      	push	{r4, r5, lr}
 800d65a:	4b1d      	ldr	r3, [pc, #116]	; (800d6d0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d65c:	b085      	sub	sp, #20
 800d65e:	460c      	mov	r4, r1
 800d660:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d664:	4b1b      	ldr	r3, [pc, #108]	; (800d6d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d666:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d66a:	2100      	movs	r1, #0
 800d66c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d670:	9100      	str	r1, [sp, #0]
 800d672:	4605      	mov	r5, r0
 800d674:	6861      	ldr	r1, [r4, #4]
 800d676:	6820      	ldr	r0, [r4, #0]
 800d678:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d67c:	ab02      	add	r3, sp, #8
 800d67e:	c303      	stmia	r3!, {r0, r1}
 800d680:	4669      	mov	r1, sp
 800d682:	a802      	add	r0, sp, #8
 800d684:	f7fd fdae 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800d688:	ab02      	add	r3, sp, #8
 800d68a:	cb03      	ldmia	r3!, {r0, r1}
 800d68c:	4b12      	ldr	r3, [pc, #72]	; (800d6d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d68e:	6020      	str	r0, [r4, #0]
 800d690:	6818      	ldr	r0, [r3, #0]
 800d692:	6061      	str	r1, [r4, #4]
 800d694:	b138      	cbz	r0, 800d6a6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d696:	f895 312c 	ldrb.w	r3, [r5, #300]	; 0x12c
 800d69a:	b133      	cbz	r3, 800d6aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d69c:	6821      	ldr	r1, [r4, #0]
 800d69e:	6862      	ldr	r2, [r4, #4]
 800d6a0:	4628      	mov	r0, r5
 800d6a2:	f7ff ff59 	bl	800d558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d6a6:	b005      	add	sp, #20
 800d6a8:	bd30      	pop	{r4, r5, pc}
 800d6aa:	6803      	ldr	r3, [r0, #0]
 800d6ac:	4621      	mov	r1, r4
 800d6ae:	689b      	ldr	r3, [r3, #8]
 800d6b0:	4798      	blx	r3
 800d6b2:	4b0a      	ldr	r3, [pc, #40]	; (800d6dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d6b4:	6818      	ldr	r0, [r3, #0]
 800d6b6:	b118      	cbz	r0, 800d6c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d6b8:	6803      	ldr	r3, [r0, #0]
 800d6ba:	4621      	mov	r1, r4
 800d6bc:	689b      	ldr	r3, [r3, #8]
 800d6be:	4798      	blx	r3
 800d6c0:	4b07      	ldr	r3, [pc, #28]	; (800d6e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d6c2:	6818      	ldr	r0, [r3, #0]
 800d6c4:	6803      	ldr	r3, [r0, #0]
 800d6c6:	4621      	mov	r1, r4
 800d6c8:	695b      	ldr	r3, [r3, #20]
 800d6ca:	4798      	blx	r3
 800d6cc:	e7eb      	b.n	800d6a6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d6ce:	bf00      	nop
 800d6d0:	200014ac 	.word	0x200014ac
 800d6d4:	200014ae 	.word	0x200014ae
 800d6d8:	20001514 	.word	0x20001514
 800d6dc:	20001510 	.word	0x20001510
 800d6e0:	200014b8 	.word	0x200014b8

0800d6e4 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d6e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6e8:	4604      	mov	r4, r0
 800d6ea:	b09b      	sub	sp, #108	; 0x6c
 800d6ec:	f880 112c 	strb.w	r1, [r0, #300]	; 0x12c
 800d6f0:	b129      	cbz	r1, 800d6fe <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d6f2:	2300      	movs	r3, #0
 800d6f4:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d6f8:	b01b      	add	sp, #108	; 0x6c
 800d6fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6fe:	4baf      	ldr	r3, [pc, #700]	; (800d9bc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800d700:	681b      	ldr	r3, [r3, #0]
 800d702:	b33b      	cbz	r3, 800d754 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d704:	4dae      	ldr	r5, [pc, #696]	; (800d9c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800d706:	4628      	mov	r0, r5
 800d708:	f7fd fdb0 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800d70c:	4606      	mov	r6, r0
 800d70e:	bb08      	cbnz	r0, 800d754 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d710:	4628      	mov	r0, r5
 800d712:	f7ff fca5 	bl	800d060 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d716:	6829      	ldr	r1, [r5, #0]
 800d718:	686a      	ldr	r2, [r5, #4]
 800d71a:	4620      	mov	r0, r4
 800d71c:	f7ff ff1c 	bl	800d558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d720:	802e      	strh	r6, [r5, #0]
 800d722:	806e      	strh	r6, [r5, #2]
 800d724:	80ae      	strh	r6, [r5, #4]
 800d726:	80ee      	strh	r6, [r5, #6]
 800d728:	4fa6      	ldr	r7, [pc, #664]	; (800d9c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800d72a:	a809      	add	r0, sp, #36	; 0x24
 800d72c:	f7ff fe89 	bl	800d442 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d730:	883d      	ldrh	r5, [r7, #0]
 800d732:	462e      	mov	r6, r5
 800d734:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d738:	42b3      	cmp	r3, r6
 800d73a:	d910      	bls.n	800d75e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7a>
 800d73c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d740:	a809      	add	r0, sp, #36	; 0x24
 800d742:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d746:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d74a:	3601      	adds	r6, #1
 800d74c:	f7ff fee2 	bl	800d514 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d750:	b2b6      	uxth	r6, r6
 800d752:	e7ef      	b.n	800d734 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x50>
 800d754:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d758:	2b00      	cmp	r3, #0
 800d75a:	d1e5      	bne.n	800d728 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x44>
 800d75c:	e7cc      	b.n	800d6f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d75e:	462e      	mov	r6, r5
 800d760:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d764:	42b3      	cmp	r3, r6
 800d766:	d90b      	bls.n	800d780 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d768:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d76c:	4620      	mov	r0, r4
 800d76e:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d772:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d776:	3601      	adds	r6, #1
 800d778:	f7ff feee 	bl	800d558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d77c:	b2b6      	uxth	r6, r6
 800d77e:	e7ef      	b.n	800d760 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7c>
 800d780:	4e91      	ldr	r6, [pc, #580]	; (800d9c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800d782:	6833      	ldr	r3, [r6, #0]
 800d784:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d788:	2b01      	cmp	r3, #1
 800d78a:	f040 8092 	bne.w	800d8b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ce>
 800d78e:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d792:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800d796:	33aa      	adds	r3, #170	; 0xaa
 800d798:	f04f 0900 	mov.w	r9, #0
 800d79c:	42a8      	cmp	r0, r5
 800d79e:	f103 0308 	add.w	r3, r3, #8
 800d7a2:	dd0a      	ble.n	800d7ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xd6>
 800d7a4:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d7a8:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800d7ac:	440a      	add	r2, r1
 800d7ae:	b212      	sxth	r2, r2
 800d7b0:	4591      	cmp	r9, r2
 800d7b2:	bfb8      	it	lt
 800d7b4:	4691      	movlt	r9, r2
 800d7b6:	3501      	adds	r5, #1
 800d7b8:	e7f0      	b.n	800d79c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xb8>
 800d7ba:	4b84      	ldr	r3, [pc, #528]	; (800d9cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800d7bc:	f8df 8214 	ldr.w	r8, [pc, #532]	; 800d9d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>
 800d7c0:	881d      	ldrh	r5, [r3, #0]
 800d7c2:	2300      	movs	r3, #0
 800d7c4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d7c8:	2d0f      	cmp	r5, #15
 800d7ca:	bf8c      	ite	hi
 800d7cc:	08ed      	lsrhi	r5, r5, #3
 800d7ce:	2501      	movls	r5, #1
 800d7d0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d7d4:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d7d8:	6830      	ldr	r0, [r6, #0]
 800d7da:	440b      	add	r3, r1
 800d7dc:	b21b      	sxth	r3, r3
 800d7de:	4599      	cmp	r9, r3
 800d7e0:	6802      	ldr	r2, [r0, #0]
 800d7e2:	dd49      	ble.n	800d878 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x194>
 800d7e4:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800d7e8:	4798      	blx	r3
 800d7ea:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d7ee:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d7f2:	4413      	add	r3, r2
 800d7f4:	b21b      	sxth	r3, r3
 800d7f6:	195a      	adds	r2, r3, r5
 800d7f8:	4290      	cmp	r0, r2
 800d7fa:	da07      	bge.n	800d80c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800d7fc:	4581      	cmp	r9, r0
 800d7fe:	dd05      	ble.n	800d80c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800d800:	4298      	cmp	r0, r3
 800d802:	da33      	bge.n	800d86c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800d804:	2b00      	cmp	r3, #0
 800d806:	dd31      	ble.n	800d86c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800d808:	4648      	mov	r0, r9
 800d80a:	e004      	b.n	800d816 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x132>
 800d80c:	4298      	cmp	r0, r3
 800d80e:	dbfb      	blt.n	800d808 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x124>
 800d810:	4548      	cmp	r0, r9
 800d812:	bfa8      	it	ge
 800d814:	4648      	movge	r0, r9
 800d816:	f9b8 2000 	ldrsh.w	r2, [r8]
 800d81a:	f8b7 a000 	ldrh.w	sl, [r7]
 800d81e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d822:	2100      	movs	r1, #0
 800d824:	1ac0      	subs	r0, r0, r3
 800d826:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d82a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d82e:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d832:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d836:	4553      	cmp	r3, sl
 800d838:	d9ca      	bls.n	800d7d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800d83a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d83e:	ab07      	add	r3, sp, #28
 800d840:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d844:	6851      	ldr	r1, [r2, #4]
 800d846:	c303      	stmia	r3!, {r0, r1}
 800d848:	a807      	add	r0, sp, #28
 800d84a:	a905      	add	r1, sp, #20
 800d84c:	f7fd fcca 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800d850:	a807      	add	r0, sp, #28
 800d852:	f7fd fd0b 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800d856:	b920      	cbnz	r0, 800d862 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x17e>
 800d858:	6823      	ldr	r3, [r4, #0]
 800d85a:	a907      	add	r1, sp, #28
 800d85c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d85e:	4620      	mov	r0, r4
 800d860:	4798      	blx	r3
 800d862:	f10a 0a01 	add.w	sl, sl, #1
 800d866:	fa1f fa8a 	uxth.w	sl, sl
 800d86a:	e7e2      	b.n	800d832 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14e>
 800d86c:	6830      	ldr	r0, [r6, #0]
 800d86e:	6803      	ldr	r3, [r0, #0]
 800d870:	2101      	movs	r1, #1
 800d872:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d874:	4798      	blx	r3
 800d876:	e7ab      	b.n	800d7d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800d878:	69d3      	ldr	r3, [r2, #28]
 800d87a:	4798      	blx	r3
 800d87c:	4b54      	ldr	r3, [pc, #336]	; (800d9d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800d87e:	781b      	ldrb	r3, [r3, #0]
 800d880:	2b00      	cmp	r3, #0
 800d882:	f43f af39 	beq.w	800d6f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d886:	2300      	movs	r3, #0
 800d888:	883d      	ldrh	r5, [r7, #0]
 800d88a:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d88e:	34ea      	adds	r4, #234	; 0xea
 800d890:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d894:	42ab      	cmp	r3, r5
 800d896:	f67f af2f 	bls.w	800d6f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d89a:	ab1a      	add	r3, sp, #104	; 0x68
 800d89c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d8a0:	3b44      	subs	r3, #68	; 0x44
 800d8a2:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d8a6:	4620      	mov	r0, r4
 800d8a8:	3501      	adds	r5, #1
 800d8aa:	f7ff fe33 	bl	800d514 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d8ae:	b2ad      	uxth	r5, r5
 800d8b0:	e7ee      	b.n	800d890 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ac>
 800d8b2:	2b02      	cmp	r3, #2
 800d8b4:	d16a      	bne.n	800d98c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800d8b6:	f8df a120 	ldr.w	sl, [pc, #288]	; 800d9d8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800d8ba:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d8be:	42ab      	cmp	r3, r5
 800d8c0:	d9dc      	bls.n	800d87c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800d8c2:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d8c6:	ab03      	add	r3, sp, #12
 800d8c8:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d8cc:	6851      	ldr	r1, [r2, #4]
 800d8ce:	c303      	stmia	r3!, {r0, r1}
 800d8d0:	f89a 3000 	ldrb.w	r3, [sl]
 800d8d4:	2b01      	cmp	r3, #1
 800d8d6:	d102      	bne.n	800d8de <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1fa>
 800d8d8:	a803      	add	r0, sp, #12
 800d8da:	f7ff fc1b 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d8de:	a803      	add	r0, sp, #12
 800d8e0:	f7fd fcc4 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800d8e4:	2800      	cmp	r0, #0
 800d8e6:	d14a      	bne.n	800d97e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29a>
 800d8e8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800d8ec:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d8f0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800d8f4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d8f8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800d8fc:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d900:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d904:	f10d 0914 	add.w	r9, sp, #20
 800d908:	f10d 081c 	add.w	r8, sp, #28
 800d90c:	f8bd b012 	ldrh.w	fp, [sp, #18]
 800d910:	f8bd c00e 	ldrh.w	ip, [sp, #14]
 800d914:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d918:	6830      	ldr	r0, [r6, #0]
 800d91a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800d91e:	f8d0 e000 	ldr.w	lr, [r0]
 800d922:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800d926:	44dc      	add	ip, fp
 800d928:	ebac 0c02 	sub.w	ip, ip, r2
 800d92c:	fa1f fc8c 	uxth.w	ip, ip
 800d930:	f8cd c000 	str.w	ip, [sp]
 800d934:	f8de b078 	ldr.w	fp, [lr, #120]	; 0x78
 800d938:	47d8      	blx	fp
 800d93a:	f89a 3000 	ldrb.w	r3, [sl]
 800d93e:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d942:	2b01      	cmp	r3, #1
 800d944:	d11e      	bne.n	800d984 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>
 800d946:	e899 0003 	ldmia.w	r9, {r0, r1}
 800d94a:	e888 0003 	stmia.w	r8, {r0, r1}
 800d94e:	4640      	mov	r0, r8
 800d950:	f7ff fb86 	bl	800d060 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d954:	6823      	ldr	r3, [r4, #0]
 800d956:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d958:	4641      	mov	r1, r8
 800d95a:	4620      	mov	r0, r4
 800d95c:	4798      	blx	r3
 800d95e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d962:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d966:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d96a:	4413      	add	r3, r2
 800d96c:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d970:	440a      	add	r2, r1
 800d972:	b21b      	sxth	r3, r3
 800d974:	b212      	sxth	r2, r2
 800d976:	4293      	cmp	r3, r2
 800d978:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d97c:	dbc6      	blt.n	800d90c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800d97e:	3501      	adds	r5, #1
 800d980:	b2ad      	uxth	r5, r5
 800d982:	e79a      	b.n	800d8ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d6>
 800d984:	6823      	ldr	r3, [r4, #0]
 800d986:	4649      	mov	r1, r9
 800d988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d98a:	e7e6      	b.n	800d95a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800d98c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d990:	42ab      	cmp	r3, r5
 800d992:	f67f af73 	bls.w	800d87c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800d996:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d99a:	ab07      	add	r3, sp, #28
 800d99c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d9a0:	6851      	ldr	r1, [r2, #4]
 800d9a2:	c303      	stmia	r3!, {r0, r1}
 800d9a4:	a807      	add	r0, sp, #28
 800d9a6:	f7fd fc61 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 800d9aa:	b920      	cbnz	r0, 800d9b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d2>
 800d9ac:	6823      	ldr	r3, [r4, #0]
 800d9ae:	a907      	add	r1, sp, #28
 800d9b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d9b2:	4620      	mov	r0, r4
 800d9b4:	4798      	blx	r3
 800d9b6:	3501      	adds	r5, #1
 800d9b8:	b2ad      	uxth	r5, r5
 800d9ba:	e7e7      	b.n	800d98c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800d9bc:	20001510 	.word	0x20001510
 800d9c0:	2000151c 	.word	0x2000151c
 800d9c4:	20000024 	.word	0x20000024
 800d9c8:	200014b8 	.word	0x200014b8
 800d9cc:	200014ae 	.word	0x200014ae
 800d9d0:	200014b6 	.word	0x200014b6
 800d9d4:	200014ac 	.word	0x200014ac
 800d9d8:	200014b0 	.word	0x200014b0

0800d9dc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d9dc:	4b03      	ldr	r3, [pc, #12]	; (800d9ec <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d9de:	2200      	movs	r2, #0
 800d9e0:	801a      	strh	r2, [r3, #0]
 800d9e2:	805a      	strh	r2, [r3, #2]
 800d9e4:	809a      	strh	r2, [r3, #4]
 800d9e6:	80da      	strh	r2, [r3, #6]
 800d9e8:	4770      	bx	lr
 800d9ea:	bf00      	nop
 800d9ec:	2000151c 	.word	0x2000151c

0800d9f0 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
 800d9f0:	2000      	movs	r0, #0
 800d9f2:	4770      	bx	lr

0800d9f4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
 800d9f4:	2000      	movs	r0, #0
 800d9f6:	4770      	bx	lr

0800d9f8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d9f8:	b508      	push	{r3, lr}
 800d9fa:	6803      	ldr	r3, [r0, #0]
 800d9fc:	68db      	ldr	r3, [r3, #12]
 800d9fe:	4798      	blx	r3
 800da00:	b128      	cbz	r0, 800da0e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800da02:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800da06:	7a80      	ldrb	r0, [r0, #10]
 800da08:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800da0c:	4318      	orrs	r0, r3
 800da0e:	bd08      	pop	{r3, pc}

0800da10 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
 800da10:	b40e      	push	{r1, r2, r3}
 800da12:	b533      	push	{r0, r1, r4, r5, lr}
 800da14:	ab05      	add	r3, sp, #20
 800da16:	f853 2b04 	ldr.w	r2, [r3], #4
 800da1a:	9301      	str	r3, [sp, #4]
 800da1c:	4b09      	ldr	r3, [pc, #36]	; (800da44 <_ZNK8touchgfx4Font14getStringWidthEPKtz+0x34>)
 800da1e:	685c      	ldr	r4, [r3, #4]
 800da20:	1061      	asrs	r1, r4, #1
 800da22:	07e4      	lsls	r4, r4, #31
 800da24:	eb00 0501 	add.w	r5, r0, r1
 800da28:	bf45      	ittet	mi
 800da2a:	681b      	ldrmi	r3, [r3, #0]
 800da2c:	5841      	ldrmi	r1, [r0, r1]
 800da2e:	681c      	ldrpl	r4, [r3, #0]
 800da30:	58cc      	ldrmi	r4, [r1, r3]
 800da32:	9b01      	ldr	r3, [sp, #4]
 800da34:	2100      	movs	r1, #0
 800da36:	4628      	mov	r0, r5
 800da38:	47a0      	blx	r4
 800da3a:	b002      	add	sp, #8
 800da3c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800da40:	b003      	add	sp, #12
 800da42:	4770      	bx	lr
 800da44:	20000010 	.word	0x20000010

0800da48 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:
 800da48:	b40c      	push	{r2, r3}
 800da4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800da4c:	ab06      	add	r3, sp, #24
 800da4e:	f853 2b04 	ldr.w	r2, [r3], #4
 800da52:	9301      	str	r3, [sp, #4]
 800da54:	4b09      	ldr	r3, [pc, #36]	; (800da7c <_ZNK8touchgfx4Font14getStringWidthEhPKtz+0x34>)
 800da56:	685d      	ldr	r5, [r3, #4]
 800da58:	106c      	asrs	r4, r5, #1
 800da5a:	07ed      	lsls	r5, r5, #31
 800da5c:	eb00 0604 	add.w	r6, r0, r4
 800da60:	bf45      	ittet	mi
 800da62:	681b      	ldrmi	r3, [r3, #0]
 800da64:	5900      	ldrmi	r0, [r0, r4]
 800da66:	681c      	ldrpl	r4, [r3, #0]
 800da68:	58c4      	ldrmi	r4, [r0, r3]
 800da6a:	9b01      	ldr	r3, [sp, #4]
 800da6c:	4630      	mov	r0, r6
 800da6e:	47a0      	blx	r4
 800da70:	b002      	add	sp, #8
 800da72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800da76:	b002      	add	sp, #8
 800da78:	4770      	bx	lr
 800da7a:	bf00      	nop
 800da7c:	20000010 	.word	0x20000010

0800da80 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800da80:	b40e      	push	{r1, r2, r3}
 800da82:	b530      	push	{r4, r5, lr}
 800da84:	b098      	sub	sp, #96	; 0x60
 800da86:	ab1b      	add	r3, sp, #108	; 0x6c
 800da88:	4604      	mov	r4, r0
 800da8a:	f853 5b04 	ldr.w	r5, [r3], #4
 800da8e:	9301      	str	r3, [sp, #4]
 800da90:	a802      	add	r0, sp, #8
 800da92:	f000 ffd5 	bl	800ea40 <_ZN8touchgfx12TextProviderC1Ev>
 800da96:	6823      	ldr	r3, [r4, #0]
 800da98:	4620      	mov	r0, r4
 800da9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800da9c:	4798      	blx	r3
 800da9e:	9a01      	ldr	r2, [sp, #4]
 800daa0:	4603      	mov	r3, r0
 800daa2:	4629      	mov	r1, r5
 800daa4:	a802      	add	r0, sp, #8
 800daa6:	f000 ffe8 	bl	800ea7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800daaa:	a802      	add	r0, sp, #8
 800daac:	f001 f81e 	bl	800eaec <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dab0:	2401      	movs	r4, #1
 800dab2:	b2a3      	uxth	r3, r4
 800dab4:	b140      	cbz	r0, 800dac8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800dab6:	280a      	cmp	r0, #10
 800dab8:	bf08      	it	eq
 800daba:	3301      	addeq	r3, #1
 800dabc:	a802      	add	r0, sp, #8
 800dabe:	bf08      	it	eq
 800dac0:	b21c      	sxtheq	r4, r3
 800dac2:	f001 f813 	bl	800eaec <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dac6:	e7f4      	b.n	800dab2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800dac8:	4618      	mov	r0, r3
 800daca:	b018      	add	sp, #96	; 0x60
 800dacc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dad0:	b003      	add	sp, #12
 800dad2:	4770      	bx	lr

0800dad4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800dad4:	b40e      	push	{r1, r2, r3}
 800dad6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dad8:	b098      	sub	sp, #96	; 0x60
 800dada:	ab1d      	add	r3, sp, #116	; 0x74
 800dadc:	4605      	mov	r5, r0
 800dade:	f853 4b04 	ldr.w	r4, [r3], #4
 800dae2:	9300      	str	r3, [sp, #0]
 800dae4:	a802      	add	r0, sp, #8
 800dae6:	f000 ffab 	bl	800ea40 <_ZN8touchgfx12TextProviderC1Ev>
 800daea:	682b      	ldr	r3, [r5, #0]
 800daec:	4f21      	ldr	r7, [pc, #132]	; (800db74 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0xa0>)
 800daee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800daf0:	4628      	mov	r0, r5
 800daf2:	4798      	blx	r3
 800daf4:	ae18      	add	r6, sp, #96	; 0x60
 800daf6:	4603      	mov	r3, r0
 800daf8:	4621      	mov	r1, r4
 800dafa:	9a00      	ldr	r2, [sp, #0]
 800dafc:	a802      	add	r0, sp, #8
 800dafe:	2400      	movs	r4, #0
 800db00:	f000 ffbb 	bl	800ea7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800db04:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800db08:	462a      	mov	r2, r5
 800db0a:	4633      	mov	r3, r6
 800db0c:	4621      	mov	r1, r4
 800db0e:	a802      	add	r0, sp, #8
 800db10:	f001 f918 	bl	800ed44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800db14:	b338      	cbz	r0, 800db66 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x92>
 800db16:	280a      	cmp	r0, #10
 800db18:	d01e      	beq.n	800db58 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800db1a:	9901      	ldr	r1, [sp, #4]
 800db1c:	b1e1      	cbz	r1, 800db58 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800db1e:	7b4b      	ldrb	r3, [r1, #13]
 800db20:	f891 c008 	ldrb.w	ip, [r1, #8]
 800db24:	79c9      	ldrb	r1, [r1, #7]
 800db26:	88aa      	ldrh	r2, [r5, #4]
 800db28:	f013 0f40 	tst.w	r3, #64	; 0x40
 800db2c:	ea4f 1e03 	mov.w	lr, r3, lsl #4
 800db30:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800db34:	f40e 7e80 	and.w	lr, lr, #256	; 0x100
 800db38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800db3c:	bf14      	ite	ne
 800db3e:	4638      	movne	r0, r7
 800db40:	2000      	moveq	r0, #0
 800db42:	ea41 010e 	orr.w	r1, r1, lr
 800db46:	ea43 030c 	orr.w	r3, r3, ip
 800db4a:	440a      	add	r2, r1
 800db4c:	4303      	orrs	r3, r0
 800db4e:	1ad3      	subs	r3, r2, r3
 800db50:	b29b      	uxth	r3, r3
 800db52:	42a3      	cmp	r3, r4
 800db54:	bfc8      	it	gt
 800db56:	b21c      	sxthgt	r4, r3
 800db58:	4633      	mov	r3, r6
 800db5a:	462a      	mov	r2, r5
 800db5c:	2100      	movs	r1, #0
 800db5e:	a802      	add	r0, sp, #8
 800db60:	f001 f8f0 	bl	800ed44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800db64:	e7d6      	b.n	800db14 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x40>
 800db66:	b2a0      	uxth	r0, r4
 800db68:	b018      	add	sp, #96	; 0x60
 800db6a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800db6e:	b003      	add	sp, #12
 800db70:	4770      	bx	lr
 800db72:	bf00      	nop
 800db74:	fffffe00 	.word	0xfffffe00

0800db78 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800db78:	b40e      	push	{r1, r2, r3}
 800db7a:	b570      	push	{r4, r5, r6, lr}
 800db7c:	b099      	sub	sp, #100	; 0x64
 800db7e:	ab1d      	add	r3, sp, #116	; 0x74
 800db80:	4604      	mov	r4, r0
 800db82:	f853 5b04 	ldr.w	r5, [r3], #4
 800db86:	9300      	str	r3, [sp, #0]
 800db88:	a802      	add	r0, sp, #8
 800db8a:	f000 ff59 	bl	800ea40 <_ZN8touchgfx12TextProviderC1Ev>
 800db8e:	6823      	ldr	r3, [r4, #0]
 800db90:	4620      	mov	r0, r4
 800db92:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800db94:	4798      	blx	r3
 800db96:	4629      	mov	r1, r5
 800db98:	4603      	mov	r3, r0
 800db9a:	9a00      	ldr	r2, [sp, #0]
 800db9c:	a802      	add	r0, sp, #8
 800db9e:	ad18      	add	r5, sp, #96	; 0x60
 800dba0:	f000 ff6b 	bl	800ea7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dba4:	2100      	movs	r1, #0
 800dba6:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800dbaa:	4622      	mov	r2, r4
 800dbac:	462b      	mov	r3, r5
 800dbae:	a802      	add	r0, sp, #8
 800dbb0:	f001 f8c8 	bl	800ed44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dbb4:	26ff      	movs	r6, #255	; 0xff
 800dbb6:	b190      	cbz	r0, 800dbde <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x66>
 800dbb8:	280a      	cmp	r0, #10
 800dbba:	d009      	beq.n	800dbd0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800dbbc:	9a01      	ldr	r2, [sp, #4]
 800dbbe:	b13a      	cbz	r2, 800dbd0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800dbc0:	7923      	ldrb	r3, [r4, #4]
 800dbc2:	7a12      	ldrb	r2, [r2, #8]
 800dbc4:	1a9b      	subs	r3, r3, r2
 800dbc6:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 800dbca:	429e      	cmp	r6, r3
 800dbcc:	bf28      	it	cs
 800dbce:	461e      	movcs	r6, r3
 800dbd0:	462b      	mov	r3, r5
 800dbd2:	4622      	mov	r2, r4
 800dbd4:	2100      	movs	r1, #0
 800dbd6:	a802      	add	r0, sp, #8
 800dbd8:	f001 f8b4 	bl	800ed44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dbdc:	e7eb      	b.n	800dbb6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800dbde:	4630      	mov	r0, r6
 800dbe0:	b019      	add	sp, #100	; 0x64
 800dbe2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbe6:	b003      	add	sp, #12
 800dbe8:	4770      	bx	lr

0800dbea <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800dbea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dbee:	4606      	mov	r6, r0
 800dbf0:	b099      	sub	sp, #100	; 0x64
 800dbf2:	a802      	add	r0, sp, #8
 800dbf4:	4614      	mov	r4, r2
 800dbf6:	4688      	mov	r8, r1
 800dbf8:	461d      	mov	r5, r3
 800dbfa:	f000 ff21 	bl	800ea40 <_ZN8touchgfx12TextProviderC1Ev>
 800dbfe:	6833      	ldr	r3, [r6, #0]
 800dc00:	4630      	mov	r0, r6
 800dc02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dc04:	4798      	blx	r3
 800dc06:	462a      	mov	r2, r5
 800dc08:	4603      	mov	r3, r0
 800dc0a:	4621      	mov	r1, r4
 800dc0c:	a802      	add	r0, sp, #8
 800dc0e:	f000 ff34 	bl	800ea7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dc12:	f04f 0b00 	mov.w	fp, #0
 800dc16:	465f      	mov	r7, fp
 800dc18:	46da      	mov	sl, fp
 800dc1a:	46d9      	mov	r9, fp
 800dc1c:	ab01      	add	r3, sp, #4
 800dc1e:	4632      	mov	r2, r6
 800dc20:	4641      	mov	r1, r8
 800dc22:	a802      	add	r0, sp, #8
 800dc24:	f8cd 9004 	str.w	r9, [sp, #4]
 800dc28:	f001 f88c 	bl	800ed44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dc2c:	4605      	mov	r5, r0
 800dc2e:	b108      	cbz	r0, 800dc34 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x4a>
 800dc30:	280a      	cmp	r0, #10
 800dc32:	d10b      	bne.n	800dc4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x62>
 800dc34:	4557      	cmp	r7, sl
 800dc36:	bf38      	it	cc
 800dc38:	4657      	movcc	r7, sl
 800dc3a:	f04f 0a00 	mov.w	sl, #0
 800dc3e:	b91d      	cbnz	r5, 800dc48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800dc40:	4638      	mov	r0, r7
 800dc42:	b019      	add	sp, #100	; 0x64
 800dc44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc48:	46ab      	mov	fp, r5
 800dc4a:	e7e7      	b.n	800dc1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x32>
 800dc4c:	9a01      	ldr	r2, [sp, #4]
 800dc4e:	2a00      	cmp	r2, #0
 800dc50:	d0fa      	beq.n	800dc48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800dc52:	f992 400d 	ldrsb.w	r4, [r2, #13]
 800dc56:	6833      	ldr	r3, [r6, #0]
 800dc58:	8895      	ldrh	r5, [r2, #4]
 800dc5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dc5c:	f404 7080 	and.w	r0, r4, #256	; 0x100
 800dc60:	7a94      	ldrb	r4, [r2, #10]
 800dc62:	4659      	mov	r1, fp
 800dc64:	4304      	orrs	r4, r0
 800dc66:	4630      	mov	r0, r6
 800dc68:	4798      	blx	r3
 800dc6a:	4420      	add	r0, r4
 800dc6c:	4450      	add	r0, sl
 800dc6e:	fa1f fa80 	uxth.w	sl, r0
 800dc72:	e7e4      	b.n	800dc3e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x54>

0800dc74 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800dc74:	b513      	push	{r0, r1, r4, lr}
 800dc76:	1d01      	adds	r1, r0, #4
 800dc78:	4603      	mov	r3, r0
 800dc7a:	c903      	ldmia	r1, {r0, r1}
 800dc7c:	466a      	mov	r2, sp
 800dc7e:	e882 0003 	stmia.w	r2, {r0, r1}
 800dc82:	2100      	movs	r1, #0
 800dc84:	9100      	str	r1, [sp, #0]
 800dc86:	6819      	ldr	r1, [r3, #0]
 800dc88:	4618      	mov	r0, r3
 800dc8a:	690c      	ldr	r4, [r1, #16]
 800dc8c:	4611      	mov	r1, r2
 800dc8e:	47a0      	blx	r4
 800dc90:	b002      	add	sp, #8
 800dc92:	bd10      	pop	{r4, pc}

0800dc94 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800dc94:	b538      	push	{r3, r4, r5, lr}
 800dc96:	680b      	ldr	r3, [r1, #0]
 800dc98:	460c      	mov	r4, r1
 800dc9a:	68db      	ldr	r3, [r3, #12]
 800dc9c:	4605      	mov	r5, r0
 800dc9e:	4798      	blx	r3
 800dca0:	6823      	ldr	r3, [r4, #0]
 800dca2:	4620      	mov	r0, r4
 800dca4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dca6:	4629      	mov	r1, r5
 800dca8:	4798      	blx	r3
 800dcaa:	4628      	mov	r0, r5
 800dcac:	bd38      	pop	{r3, r4, r5, pc}

0800dcae <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800dcae:	b410      	push	{r4}
 800dcb0:	880a      	ldrh	r2, [r1, #0]
 800dcb2:	8884      	ldrh	r4, [r0, #4]
 800dcb4:	4422      	add	r2, r4
 800dcb6:	800a      	strh	r2, [r1, #0]
 800dcb8:	88c4      	ldrh	r4, [r0, #6]
 800dcba:	884a      	ldrh	r2, [r1, #2]
 800dcbc:	4422      	add	r2, r4
 800dcbe:	804a      	strh	r2, [r1, #2]
 800dcc0:	6940      	ldr	r0, [r0, #20]
 800dcc2:	b120      	cbz	r0, 800dcce <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800dcc4:	6803      	ldr	r3, [r0, #0]
 800dcc6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dcca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dccc:	4718      	bx	r3
 800dcce:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dcd2:	4770      	bx	lr

0800dcd4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800dcd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dcd6:	460b      	mov	r3, r1
 800dcd8:	b085      	sub	sp, #20
 800dcda:	4604      	mov	r4, r0
 800dcdc:	b901      	cbnz	r1, 800dce0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800dcde:	b1fa      	cbz	r2, 800dd20 <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800dce0:	1d27      	adds	r7, r4, #4
 800dce2:	e897 0003 	ldmia.w	r7, {r0, r1}
 800dce6:	466e      	mov	r6, sp
 800dce8:	e886 0003 	stmia.w	r6, {r0, r1}
 800dcec:	88e1      	ldrh	r1, [r4, #6]
 800dcee:	440a      	add	r2, r1
 800dcf0:	88a1      	ldrh	r1, [r4, #4]
 800dcf2:	4419      	add	r1, r3
 800dcf4:	6823      	ldr	r3, [r4, #0]
 800dcf6:	b209      	sxth	r1, r1
 800dcf8:	4620      	mov	r0, r4
 800dcfa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dcfc:	b212      	sxth	r2, r2
 800dcfe:	4798      	blx	r3
 800dd00:	e897 0003 	ldmia.w	r7, {r0, r1}
 800dd04:	ad02      	add	r5, sp, #8
 800dd06:	e885 0003 	stmia.w	r5, {r0, r1}
 800dd0a:	6960      	ldr	r0, [r4, #20]
 800dd0c:	b150      	cbz	r0, 800dd24 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800dd0e:	6803      	ldr	r3, [r0, #0]
 800dd10:	4631      	mov	r1, r6
 800dd12:	691b      	ldr	r3, [r3, #16]
 800dd14:	4798      	blx	r3
 800dd16:	6960      	ldr	r0, [r4, #20]
 800dd18:	6803      	ldr	r3, [r0, #0]
 800dd1a:	691b      	ldr	r3, [r3, #16]
 800dd1c:	4629      	mov	r1, r5
 800dd1e:	4798      	blx	r3
 800dd20:	b005      	add	sp, #20
 800dd22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dd24:	f7ff fb7c 	bl	800d420 <_ZN8touchgfx11Application11getInstanceEv>
 800dd28:	6803      	ldr	r3, [r0, #0]
 800dd2a:	4631      	mov	r1, r6
 800dd2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd2e:	4798      	blx	r3
 800dd30:	f7ff fb76 	bl	800d420 <_ZN8touchgfx11Application11getInstanceEv>
 800dd34:	6803      	ldr	r3, [r0, #0]
 800dd36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd38:	e7f0      	b.n	800dd1c <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800dd3a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800dd3a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd3c:	8882      	ldrh	r2, [r0, #4]
 800dd3e:	880b      	ldrh	r3, [r1, #0]
 800dd40:	4413      	add	r3, r2
 800dd42:	800b      	strh	r3, [r1, #0]
 800dd44:	88c2      	ldrh	r2, [r0, #6]
 800dd46:	884b      	ldrh	r3, [r1, #2]
 800dd48:	4413      	add	r3, r2
 800dd4a:	4602      	mov	r2, r0
 800dd4c:	804b      	strh	r3, [r1, #2]
 800dd4e:	4605      	mov	r5, r0
 800dd50:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800dd54:	460c      	mov	r4, r1
 800dd56:	6851      	ldr	r1, [r2, #4]
 800dd58:	466b      	mov	r3, sp
 800dd5a:	c303      	stmia	r3!, {r0, r1}
 800dd5c:	4621      	mov	r1, r4
 800dd5e:	4668      	mov	r0, sp
 800dd60:	f7fd fa40 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800dd64:	466b      	mov	r3, sp
 800dd66:	cb03      	ldmia	r3!, {r0, r1}
 800dd68:	6020      	str	r0, [r4, #0]
 800dd6a:	6061      	str	r1, [r4, #4]
 800dd6c:	6968      	ldr	r0, [r5, #20]
 800dd6e:	b128      	cbz	r0, 800dd7c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800dd70:	6803      	ldr	r3, [r0, #0]
 800dd72:	691b      	ldr	r3, [r3, #16]
 800dd74:	4621      	mov	r1, r4
 800dd76:	4798      	blx	r3
 800dd78:	b003      	add	sp, #12
 800dd7a:	bd30      	pop	{r4, r5, pc}
 800dd7c:	f7ff fb50 	bl	800d420 <_ZN8touchgfx11Application11getInstanceEv>
 800dd80:	6803      	ldr	r3, [r0, #0]
 800dd82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd84:	e7f6      	b.n	800dd74 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800dd86 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800dd86:	b570      	push	{r4, r5, r6, lr}
 800dd88:	8882      	ldrh	r2, [r0, #4]
 800dd8a:	880b      	ldrh	r3, [r1, #0]
 800dd8c:	4413      	add	r3, r2
 800dd8e:	800b      	strh	r3, [r1, #0]
 800dd90:	88c2      	ldrh	r2, [r0, #6]
 800dd92:	884b      	ldrh	r3, [r1, #2]
 800dd94:	460c      	mov	r4, r1
 800dd96:	4413      	add	r3, r2
 800dd98:	804b      	strh	r3, [r1, #2]
 800dd9a:	4605      	mov	r5, r0
 800dd9c:	1d01      	adds	r1, r0, #4
 800dd9e:	4620      	mov	r0, r4
 800dda0:	f7fd fa20 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800dda4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800dda8:	b153      	cbz	r3, 800ddc0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800ddaa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ddae:	b13b      	cbz	r3, 800ddc0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800ddb0:	6968      	ldr	r0, [r5, #20]
 800ddb2:	b128      	cbz	r0, 800ddc0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800ddb4:	6803      	ldr	r3, [r0, #0]
 800ddb6:	4621      	mov	r1, r4
 800ddb8:	6a1b      	ldr	r3, [r3, #32]
 800ddba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ddbe:	4718      	bx	r3
 800ddc0:	bd70      	pop	{r4, r5, r6, pc}

0800ddc2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800ddc2:	b510      	push	{r4, lr}
 800ddc4:	4604      	mov	r4, r0
 800ddc6:	4608      	mov	r0, r1
 800ddc8:	2300      	movs	r3, #0
 800ddca:	8023      	strh	r3, [r4, #0]
 800ddcc:	8063      	strh	r3, [r4, #2]
 800ddce:	6803      	ldr	r3, [r0, #0]
 800ddd0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ddd4:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800ddd8:	80a1      	strh	r1, [r4, #4]
 800ddda:	80e2      	strh	r2, [r4, #6]
 800dddc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ddde:	4621      	mov	r1, r4
 800dde0:	4798      	blx	r3
 800dde2:	4620      	mov	r0, r4
 800dde4:	bd10      	pop	{r4, pc}
	...

0800dde8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800dde8:	b530      	push	{r4, r5, lr}
 800ddea:	8083      	strh	r3, [r0, #4]
 800ddec:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ddf0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800ddf4:	7183      	strb	r3, [r0, #6]
 800ddf6:	79c3      	ldrb	r3, [r0, #7]
 800ddf8:	6101      	str	r1, [r0, #16]
 800ddfa:	f365 0306 	bfi	r3, r5, #0, #7
 800ddfe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800de02:	8282      	strh	r2, [r0, #20]
 800de04:	f365 13c7 	bfi	r3, r5, #7, #1
 800de08:	71c3      	strb	r3, [r0, #7]
 800de0a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800de0e:	7203      	strb	r3, [r0, #8]
 800de10:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800de14:	7243      	strb	r3, [r0, #9]
 800de16:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800de1a:	8143      	strh	r3, [r0, #10]
 800de1c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800de20:	8183      	strh	r3, [r0, #12]
 800de22:	4b01      	ldr	r3, [pc, #4]	; (800de28 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800de24:	6003      	str	r3, [r0, #0]
 800de26:	bd30      	pop	{r4, r5, pc}
 800de28:	0801d630 	.word	0x0801d630

0800de2c <_ZNK8touchgfx9ConstFont4findEt>:
 800de2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de2e:	8a84      	ldrh	r4, [r0, #20]
 800de30:	2500      	movs	r5, #0
 800de32:	3c01      	subs	r4, #1
 800de34:	260e      	movs	r6, #14
 800de36:	42a5      	cmp	r5, r4
 800de38:	dc0c      	bgt.n	800de54 <_ZNK8touchgfx9ConstFont4findEt+0x28>
 800de3a:	192a      	adds	r2, r5, r4
 800de3c:	6903      	ldr	r3, [r0, #16]
 800de3e:	1052      	asrs	r2, r2, #1
 800de40:	fb06 3302 	mla	r3, r6, r2, r3
 800de44:	889f      	ldrh	r7, [r3, #4]
 800de46:	428f      	cmp	r7, r1
 800de48:	d901      	bls.n	800de4e <_ZNK8touchgfx9ConstFont4findEt+0x22>
 800de4a:	1e54      	subs	r4, r2, #1
 800de4c:	e7f3      	b.n	800de36 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800de4e:	d202      	bcs.n	800de56 <_ZNK8touchgfx9ConstFont4findEt+0x2a>
 800de50:	1c55      	adds	r5, r2, #1
 800de52:	e7f0      	b.n	800de36 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800de54:	2300      	movs	r3, #0
 800de56:	4618      	mov	r0, r3
 800de58:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800de5a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800de5a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de5c:	4605      	mov	r5, r0
 800de5e:	4617      	mov	r7, r2
 800de60:	461e      	mov	r6, r3
 800de62:	f7ff ffe3 	bl	800de2c <_ZNK8touchgfx9ConstFont4findEt>
 800de66:	b9e0      	cbnz	r0, 800dea2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x48>
 800de68:	b911      	cbnz	r1, 800de70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x16>
 800de6a:	2400      	movs	r4, #0
 800de6c:	4620      	mov	r0, r4
 800de6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800de70:	290a      	cmp	r1, #10
 800de72:	d0fa      	beq.n	800de6a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800de74:	682b      	ldr	r3, [r5, #0]
 800de76:	4628      	mov	r0, r5
 800de78:	691b      	ldr	r3, [r3, #16]
 800de7a:	4798      	blx	r3
 800de7c:	4601      	mov	r1, r0
 800de7e:	4628      	mov	r0, r5
 800de80:	f7ff ffd4 	bl	800de2c <_ZNK8touchgfx9ConstFont4findEt>
 800de84:	4604      	mov	r4, r0
 800de86:	2800      	cmp	r0, #0
 800de88:	d0ef      	beq.n	800de6a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800de8a:	682b      	ldr	r3, [r5, #0]
 800de8c:	4621      	mov	r1, r4
 800de8e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800de90:	4628      	mov	r0, r5
 800de92:	4798      	blx	r3
 800de94:	6038      	str	r0, [r7, #0]
 800de96:	682b      	ldr	r3, [r5, #0]
 800de98:	4628      	mov	r0, r5
 800de9a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800de9c:	4798      	blx	r3
 800de9e:	7030      	strb	r0, [r6, #0]
 800dea0:	e7e4      	b.n	800de6c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x12>
 800dea2:	4604      	mov	r4, r0
 800dea4:	e7f1      	b.n	800de8a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x30>

0800dea6 <_ZN8touchgfx10ClickEventD1Ev>:
 800dea6:	4770      	bx	lr

0800dea8 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800dea8:	2000      	movs	r0, #0
 800deaa:	4770      	bx	lr

0800deac <_ZN8touchgfx9DragEventD1Ev>:
 800deac:	4770      	bx	lr

0800deae <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800deae:	2001      	movs	r0, #1
 800deb0:	4770      	bx	lr

0800deb2 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800deb2:	2002      	movs	r0, #2
 800deb4:	4770      	bx	lr

0800deb6 <_ZN8touchgfx12GestureEventD1Ev>:
 800deb6:	4770      	bx	lr

0800deb8 <_ZN8touchgfx10ClickEventD0Ev>:
 800deb8:	b510      	push	{r4, lr}
 800deba:	210c      	movs	r1, #12
 800debc:	4604      	mov	r4, r0
 800debe:	f00c fcfe 	bl	801a8be <_ZdlPvj>
 800dec2:	4620      	mov	r0, r4
 800dec4:	bd10      	pop	{r4, pc}

0800dec6 <_ZN8touchgfx9DragEventD0Ev>:
 800dec6:	b510      	push	{r4, lr}
 800dec8:	2110      	movs	r1, #16
 800deca:	4604      	mov	r4, r0
 800decc:	f00c fcf7 	bl	801a8be <_ZdlPvj>
 800ded0:	4620      	mov	r0, r4
 800ded2:	bd10      	pop	{r4, pc}

0800ded4 <_ZN8touchgfx12GestureEventD0Ev>:
 800ded4:	b510      	push	{r4, lr}
 800ded6:	210c      	movs	r1, #12
 800ded8:	4604      	mov	r4, r0
 800deda:	f00c fcf0 	bl	801a8be <_ZdlPvj>
 800dede:	4620      	mov	r0, r4
 800dee0:	bd10      	pop	{r4, pc}
	...

0800dee4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800dee4:	b530      	push	{r4, r5, lr}
 800dee6:	460d      	mov	r5, r1
 800dee8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800deea:	b087      	sub	sp, #28
 800deec:	4604      	mov	r4, r0
 800deee:	b301      	cbz	r1, 800df32 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800def0:	a801      	add	r0, sp, #4
 800def2:	f7ff ff66 	bl	800ddc2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800def6:	892a      	ldrh	r2, [r5, #8]
 800def8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800defc:	7928      	ldrb	r0, [r5, #4]
 800defe:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800df02:	f88d 0010 	strb.w	r0, [sp, #16]
 800df06:	1ad2      	subs	r2, r2, r3
 800df08:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800df0a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800df0c:	f8ad 1012 	strh.w	r1, [sp, #18]
 800df10:	441a      	add	r2, r3
 800df12:	896b      	ldrh	r3, [r5, #10]
 800df14:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800df18:	f8ad 2014 	strh.w	r2, [sp, #20]
 800df1c:	1b5b      	subs	r3, r3, r5
 800df1e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800df20:	442b      	add	r3, r5
 800df22:	4d05      	ldr	r5, [pc, #20]	; (800df38 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800df24:	9503      	str	r5, [sp, #12]
 800df26:	f8ad 3016 	strh.w	r3, [sp, #22]
 800df2a:	6803      	ldr	r3, [r0, #0]
 800df2c:	a903      	add	r1, sp, #12
 800df2e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800df30:	4798      	blx	r3
 800df32:	b007      	add	sp, #28
 800df34:	bd30      	pop	{r4, r5, pc}
 800df36:	bf00      	nop
 800df38:	0801d6ac 	.word	0x0801d6ac

0800df3c <_ZNK8touchgfx4Rect9intersectEss>:
 800df3c:	b510      	push	{r4, lr}
 800df3e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800df42:	428b      	cmp	r3, r1
 800df44:	dc10      	bgt.n	800df68 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800df46:	8884      	ldrh	r4, [r0, #4]
 800df48:	4423      	add	r3, r4
 800df4a:	b21b      	sxth	r3, r3
 800df4c:	4299      	cmp	r1, r3
 800df4e:	da0b      	bge.n	800df68 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800df50:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800df54:	4293      	cmp	r3, r2
 800df56:	dc07      	bgt.n	800df68 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800df58:	88c0      	ldrh	r0, [r0, #6]
 800df5a:	4418      	add	r0, r3
 800df5c:	b200      	sxth	r0, r0
 800df5e:	4282      	cmp	r2, r0
 800df60:	bfac      	ite	ge
 800df62:	2000      	movge	r0, #0
 800df64:	2001      	movlt	r0, #1
 800df66:	bd10      	pop	{r4, pc}
 800df68:	2000      	movs	r0, #0
 800df6a:	e7fc      	b.n	800df66 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800df6c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800df6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df6e:	460c      	mov	r4, r1
 800df70:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800df72:	b089      	sub	sp, #36	; 0x24
 800df74:	4605      	mov	r5, r0
 800df76:	2900      	cmp	r1, #0
 800df78:	d054      	beq.n	800e024 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800df7a:	4668      	mov	r0, sp
 800df7c:	f7ff ff21 	bl	800ddc2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800df80:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800df82:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800df84:	8922      	ldrh	r2, [r4, #8]
 800df86:	88e1      	ldrh	r1, [r4, #6]
 800df88:	443a      	add	r2, r7
 800df8a:	4431      	add	r1, r6
 800df8c:	b212      	sxth	r2, r2
 800df8e:	b209      	sxth	r1, r1
 800df90:	4668      	mov	r0, sp
 800df92:	f7ff ffd3 	bl	800df3c <_ZNK8touchgfx4Rect9intersectEss>
 800df96:	b1d0      	cbz	r0, 800dfce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800df98:	89a2      	ldrh	r2, [r4, #12]
 800df9a:	8961      	ldrh	r1, [r4, #10]
 800df9c:	443a      	add	r2, r7
 800df9e:	4431      	add	r1, r6
 800dfa0:	b212      	sxth	r2, r2
 800dfa2:	b209      	sxth	r1, r1
 800dfa4:	4668      	mov	r0, sp
 800dfa6:	f7ff ffc9 	bl	800df3c <_ZNK8touchgfx4Rect9intersectEss>
 800dfaa:	4603      	mov	r3, r0
 800dfac:	b978      	cbnz	r0, 800dfce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800dfae:	4a1e      	ldr	r2, [pc, #120]	; (800e028 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800dfb0:	9204      	str	r2, [sp, #16]
 800dfb2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800dfb4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dfb8:	2202      	movs	r2, #2
 800dfba:	f88d 2014 	strb.w	r2, [sp, #20]
 800dfbe:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dfc2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dfc6:	6803      	ldr	r3, [r0, #0]
 800dfc8:	a904      	add	r1, sp, #16
 800dfca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dfcc:	4798      	blx	r3
 800dfce:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800dfd0:	a802      	add	r0, sp, #8
 800dfd2:	f7ff fef6 	bl	800ddc2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dfd6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800dfda:	88e0      	ldrh	r0, [r4, #6]
 800dfdc:	8961      	ldrh	r1, [r4, #10]
 800dfde:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800dfe2:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800dfe6:	8923      	ldrh	r3, [r4, #8]
 800dfe8:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800dfea:	7927      	ldrb	r7, [r4, #4]
 800dfec:	f88d 7014 	strb.w	r7, [sp, #20]
 800dff0:	1a80      	subs	r0, r0, r2
 800dff2:	1a89      	subs	r1, r1, r2
 800dff4:	89a2      	ldrh	r2, [r4, #12]
 800dff6:	4c0d      	ldr	r4, [pc, #52]	; (800e02c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800dff8:	9404      	str	r4, [sp, #16]
 800dffa:	4460      	add	r0, ip
 800dffc:	eba3 030e 	sub.w	r3, r3, lr
 800e000:	eba2 020e 	sub.w	r2, r2, lr
 800e004:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e008:	4433      	add	r3, r6
 800e00a:	4461      	add	r1, ip
 800e00c:	4432      	add	r2, r6
 800e00e:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e010:	f8ad 101a 	strh.w	r1, [sp, #26]
 800e014:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e018:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e01c:	6803      	ldr	r3, [r0, #0]
 800e01e:	a904      	add	r1, sp, #16
 800e020:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e022:	4798      	blx	r3
 800e024:	b009      	add	sp, #36	; 0x24
 800e026:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e028:	0801d684 	.word	0x0801d684
 800e02c:	0801d698 	.word	0x0801d698

0800e030 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e034:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800e038:	790b      	ldrb	r3, [r1, #4]
 800e03a:	b0a1      	sub	sp, #132	; 0x84
 800e03c:	4604      	mov	r4, r0
 800e03e:	460d      	mov	r5, r1
 800e040:	f1b9 0f00 	cmp.w	r9, #0
 800e044:	d00f      	beq.n	800e066 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800e046:	2b00      	cmp	r3, #0
 800e048:	f040 80a0 	bne.w	800e18c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e04c:	b021      	add	sp, #132	; 0x84
 800e04e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e052:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800e056:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e05a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e05e:	1d20      	adds	r0, r4, #4
 800e060:	f7fd f80e 	bl	800b080 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e064:	e092      	b.n	800e18c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e066:	2b00      	cmp	r3, #0
 800e068:	d1f0      	bne.n	800e04c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e06a:	4b5e      	ldr	r3, [pc, #376]	; (800e1e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800e06c:	681b      	ldr	r3, [r3, #0]
 800e06e:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800e072:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800e076:	f1ba 0f03 	cmp.w	sl, #3
 800e07a:	ddea      	ble.n	800e052 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800e07c:	f1ba 0f0c 	cmp.w	sl, #12
 800e080:	f04f 0303 	mov.w	r3, #3
 800e084:	bfdc      	itt	le
 800e086:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800e08a:	fb92 f3f3 	sdivle	r3, r2, r3
 800e08e:	9301      	str	r3, [sp, #4]
 800e090:	4b55      	ldr	r3, [pc, #340]	; (800e1e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800e092:	4956      	ldr	r1, [pc, #344]	; (800e1ec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800e094:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e098:	4b55      	ldr	r3, [pc, #340]	; (800e1f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800e09a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e09e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e0a2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e0a6:	ab0e      	add	r3, sp, #56	; 0x38
 800e0a8:	2248      	movs	r2, #72	; 0x48
 800e0aa:	2600      	movs	r6, #0
 800e0ac:	4618      	mov	r0, r3
 800e0ae:	960a      	str	r6, [sp, #40]	; 0x28
 800e0b0:	f00c fcb2 	bl	801aa18 <memcpy>
 800e0b4:	f04f 32ff 	mov.w	r2, #4294967295
 800e0b8:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800e0bc:	f8cd a008 	str.w	sl, [sp, #8]
 800e0c0:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e0c4:	fb93 f3f2 	sdiv	r3, r3, r2
 800e0c8:	b29b      	uxth	r3, r3
 800e0ca:	46b3      	mov	fp, r6
 800e0cc:	9303      	str	r3, [sp, #12]
 800e0ce:	2300      	movs	r3, #0
 800e0d0:	9309      	str	r3, [sp, #36]	; 0x24
 800e0d2:	9b07      	ldr	r3, [sp, #28]
 800e0d4:	9a03      	ldr	r2, [sp, #12]
 800e0d6:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800e0da:	88ef      	ldrh	r7, [r5, #6]
 800e0dc:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800e0e0:	fb13 f302 	smulbb	r3, r3, r2
 800e0e4:	b29b      	uxth	r3, r3
 800e0e6:	9304      	str	r3, [sp, #16]
 800e0e8:	9b07      	ldr	r3, [sp, #28]
 800e0ea:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800e0ee:	a80a      	add	r0, sp, #40	; 0x28
 800e0f0:	685b      	ldr	r3, [r3, #4]
 800e0f2:	fb13 f302 	smulbb	r3, r3, r2
 800e0f6:	b29b      	uxth	r3, r3
 800e0f8:	9305      	str	r3, [sp, #20]
 800e0fa:	9b04      	ldr	r3, [sp, #16]
 800e0fc:	441f      	add	r7, r3
 800e0fe:	9b05      	ldr	r3, [sp, #20]
 800e100:	4498      	add	r8, r3
 800e102:	b23f      	sxth	r7, r7
 800e104:	fa0f f888 	sxth.w	r8, r8
 800e108:	4642      	mov	r2, r8
 800e10a:	4639      	mov	r1, r7
 800e10c:	f7ff ff16 	bl	800df3c <_ZNK8touchgfx4Rect9intersectEss>
 800e110:	b380      	cbz	r0, 800e174 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e112:	4639      	mov	r1, r7
 800e114:	ab09      	add	r3, sp, #36	; 0x24
 800e116:	4642      	mov	r2, r8
 800e118:	1d20      	adds	r0, r4, #4
 800e11a:	f7fc ffb1 	bl	800b080 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e11e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e120:	b341      	cbz	r1, 800e174 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e122:	4549      	cmp	r1, r9
 800e124:	d026      	beq.n	800e174 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e126:	a80c      	add	r0, sp, #48	; 0x30
 800e128:	f7ff fe4b 	bl	800ddc2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e12c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800e130:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e134:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800e138:	2002      	movs	r0, #2
 800e13a:	fb92 f2f0 	sdiv	r2, r2, r0
 800e13e:	440a      	add	r2, r1
 800e140:	1a99      	subs	r1, r3, r2
 800e142:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800e146:	fb93 f3f0 	sdiv	r3, r3, r0
 800e14a:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800e14e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e152:	4403      	add	r3, r0
 800e154:	1ad3      	subs	r3, r2, r3
 800e156:	435b      	muls	r3, r3
 800e158:	9a06      	ldr	r2, [sp, #24]
 800e15a:	fb01 3301 	mla	r3, r1, r1, r3
 800e15e:	4293      	cmp	r3, r2
 800e160:	d208      	bcs.n	800e174 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e162:	9a04      	ldr	r2, [sp, #16]
 800e164:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800e168:	86a2      	strh	r2, [r4, #52]	; 0x34
 800e16a:	9a05      	ldr	r2, [sp, #20]
 800e16c:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800e170:	86e2      	strh	r2, [r4, #54]	; 0x36
 800e172:	9306      	str	r3, [sp, #24]
 800e174:	f10b 0b02 	add.w	fp, fp, #2
 800e178:	f1bb 0f08 	cmp.w	fp, #8
 800e17c:	dda7      	ble.n	800e0ce <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e17e:	9b02      	ldr	r3, [sp, #8]
 800e180:	4453      	add	r3, sl
 800e182:	9302      	str	r3, [sp, #8]
 800e184:	9b01      	ldr	r3, [sp, #4]
 800e186:	3601      	adds	r6, #1
 800e188:	42b3      	cmp	r3, r6
 800e18a:	d199      	bne.n	800e0c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800e18c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e18e:	2900      	cmp	r1, #0
 800e190:	f43f af5c 	beq.w	800e04c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e194:	a80c      	add	r0, sp, #48	; 0x30
 800e196:	f7ff fe14 	bl	800ddc2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e19a:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800e19e:	88ea      	ldrh	r2, [r5, #6]
 800e1a0:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800e1a4:	7929      	ldrb	r1, [r5, #4]
 800e1a6:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800e1aa:	1ad2      	subs	r2, r2, r3
 800e1ac:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e1ae:	441a      	add	r2, r3
 800e1b0:	892b      	ldrh	r3, [r5, #8]
 800e1b2:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800e1b6:	1a1b      	subs	r3, r3, r0
 800e1b8:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800e1ba:	4403      	add	r3, r0
 800e1bc:	480d      	ldr	r0, [pc, #52]	; (800e1f4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800e1be:	900e      	str	r0, [sp, #56]	; 0x38
 800e1c0:	2600      	movs	r6, #0
 800e1c2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e1c4:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800e1c8:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800e1cc:	6803      	ldr	r3, [r0, #0]
 800e1ce:	a90e      	add	r1, sp, #56	; 0x38
 800e1d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e1d2:	4798      	blx	r3
 800e1d4:	792b      	ldrb	r3, [r5, #4]
 800e1d6:	2b00      	cmp	r3, #0
 800e1d8:	f43f af38 	beq.w	800e04c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e1dc:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e1e0:	e734      	b.n	800e04c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e1e2:	bf00      	nop
 800e1e4:	200014b8 	.word	0x200014b8
 800e1e8:	200014ac 	.word	0x200014ac
 800e1ec:	0801c184 	.word	0x0801c184
 800e1f0:	200014ae 	.word	0x200014ae
 800e1f4:	0801d684 	.word	0x0801d684

0800e1f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e1f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e1fa:	4604      	mov	r4, r0
 800e1fc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e200:	3201      	adds	r2, #1
 800e202:	d112      	bne.n	800e22a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e204:	6803      	ldr	r3, [r0, #0]
 800e206:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e20a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e20e:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e212:	2500      	movs	r5, #0
 800e214:	9500      	str	r5, [sp, #0]
 800e216:	466d      	mov	r5, sp
 800e218:	4629      	mov	r1, r5
 800e21a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e21e:	6a1b      	ldr	r3, [r3, #32]
 800e220:	4798      	blx	r3
 800e222:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e226:	e884 0003 	stmia.w	r4, {r0, r1}
 800e22a:	4620      	mov	r0, r4
 800e22c:	b003      	add	sp, #12
 800e22e:	bd30      	pop	{r4, r5, pc}

0800e230 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e230:	b513      	push	{r0, r1, r4, lr}
 800e232:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e236:	3301      	adds	r3, #1
 800e238:	4604      	mov	r4, r0
 800e23a:	d109      	bne.n	800e250 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e23c:	4601      	mov	r1, r0
 800e23e:	4668      	mov	r0, sp
 800e240:	f7ff fdbf 	bl	800ddc2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e244:	f8bd 3000 	ldrh.w	r3, [sp]
 800e248:	8423      	strh	r3, [r4, #32]
 800e24a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e24e:	8463      	strh	r3, [r4, #34]	; 0x22
 800e250:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e254:	b002      	add	sp, #8
 800e256:	bd10      	pop	{r4, pc}

0800e258 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e258:	b513      	push	{r0, r1, r4, lr}
 800e25a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800e25e:	3301      	adds	r3, #1
 800e260:	4604      	mov	r4, r0
 800e262:	d109      	bne.n	800e278 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e264:	4601      	mov	r1, r0
 800e266:	4668      	mov	r0, sp
 800e268:	f7ff fdab 	bl	800ddc2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e26c:	f8bd 3000 	ldrh.w	r3, [sp]
 800e270:	8423      	strh	r3, [r4, #32]
 800e272:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e276:	8463      	strh	r3, [r4, #34]	; 0x22
 800e278:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e27c:	b002      	add	sp, #8
 800e27e:	bd10      	pop	{r4, pc}

0800e280 <_ZN8touchgfx6ScreenC1Ev>:
 800e280:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e282:	4605      	mov	r5, r0
 800e284:	4b17      	ldr	r3, [pc, #92]	; (800e2e4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e286:	f845 3b04 	str.w	r3, [r5], #4
 800e28a:	2301      	movs	r3, #1
 800e28c:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800e290:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800e294:	4b14      	ldr	r3, [pc, #80]	; (800e2e8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e296:	4915      	ldr	r1, [pc, #84]	; (800e2ec <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800e298:	f9b3 7000 	ldrsh.w	r7, [r3]
 800e29c:	4b14      	ldr	r3, [pc, #80]	; (800e2f0 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800e29e:	6041      	str	r1, [r0, #4]
 800e2a0:	2200      	movs	r2, #0
 800e2a2:	8102      	strh	r2, [r0, #8]
 800e2a4:	8142      	strh	r2, [r0, #10]
 800e2a6:	8182      	strh	r2, [r0, #12]
 800e2a8:	81c2      	strh	r2, [r0, #14]
 800e2aa:	8202      	strh	r2, [r0, #16]
 800e2ac:	8242      	strh	r2, [r0, #18]
 800e2ae:	8282      	strh	r2, [r0, #20]
 800e2b0:	82c2      	strh	r2, [r0, #22]
 800e2b2:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800e2b6:	6202      	str	r2, [r0, #32]
 800e2b8:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800e2bc:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800e2c0:	6342      	str	r2, [r0, #52]	; 0x34
 800e2c2:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e2c6:	4611      	mov	r1, r2
 800e2c8:	4604      	mov	r4, r0
 800e2ca:	4628      	mov	r0, r5
 800e2cc:	f7fa f9d9 	bl	8008682 <_ZN8touchgfx8Drawable5setXYEss>
 800e2d0:	4639      	mov	r1, r7
 800e2d2:	4628      	mov	r0, r5
 800e2d4:	f7fa f9f3 	bl	80086be <_ZN8touchgfx8Drawable8setWidthEs>
 800e2d8:	4628      	mov	r0, r5
 800e2da:	4631      	mov	r1, r6
 800e2dc:	f7fa f9fe 	bl	80086dc <_ZN8touchgfx8Drawable9setHeightEs>
 800e2e0:	4620      	mov	r0, r4
 800e2e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e2e4:	0801d6c0 	.word	0x0801d6c0
 800e2e8:	200014ac 	.word	0x200014ac
 800e2ec:	0801cac0 	.word	0x0801cac0
 800e2f0:	200014ae 	.word	0x200014ae

0800e2f4 <_ZN8touchgfx6Screen4drawEv>:
 800e2f4:	b507      	push	{r0, r1, r2, lr}
 800e2f6:	4b09      	ldr	r3, [pc, #36]	; (800e31c <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e2f8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e2fc:	4b08      	ldr	r3, [pc, #32]	; (800e320 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e2fe:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e302:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e306:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e30a:	6803      	ldr	r3, [r0, #0]
 800e30c:	2100      	movs	r1, #0
 800e30e:	9100      	str	r1, [sp, #0]
 800e310:	689b      	ldr	r3, [r3, #8]
 800e312:	4669      	mov	r1, sp
 800e314:	4798      	blx	r3
 800e316:	b003      	add	sp, #12
 800e318:	f85d fb04 	ldr.w	pc, [sp], #4
 800e31c:	200014ac 	.word	0x200014ac
 800e320:	200014ae 	.word	0x200014ae

0800e324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e328:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e32c:	b089      	sub	sp, #36	; 0x24
 800e32e:	4680      	mov	r8, r0
 800e330:	460c      	mov	r4, r1
 800e332:	4615      	mov	r5, r2
 800e334:	b16b      	cbz	r3, 800e352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e336:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e33a:	b153      	cbz	r3, 800e352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e33c:	4628      	mov	r0, r5
 800e33e:	f7ff ff5b 	bl	800e1f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e342:	4621      	mov	r1, r4
 800e344:	f7fe ffe2 	bl	800d30c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e348:	69eb      	ldr	r3, [r5, #28]
 800e34a:	b928      	cbnz	r0, 800e358 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x34>
 800e34c:	461d      	mov	r5, r3
 800e34e:	2b00      	cmp	r3, #0
 800e350:	d1f4      	bne.n	800e33c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18>
 800e352:	b009      	add	sp, #36	; 0x24
 800e354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e358:	ae04      	add	r6, sp, #16
 800e35a:	2b00      	cmp	r3, #0
 800e35c:	d051      	beq.n	800e402 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e35e:	682b      	ldr	r3, [r5, #0]
 800e360:	4629      	mov	r1, r5
 800e362:	68db      	ldr	r3, [r3, #12]
 800e364:	a802      	add	r0, sp, #8
 800e366:	4798      	blx	r3
 800e368:	4628      	mov	r0, r5
 800e36a:	f7ff ff61 	bl	800e230 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e36e:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e372:	4407      	add	r7, r0
 800e374:	4628      	mov	r0, r5
 800e376:	f7ff ff6f 	bl	800e258 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e37a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e37e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e382:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e386:	4418      	add	r0, r3
 800e388:	4621      	mov	r1, r4
 800e38a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e38e:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e392:	b23f      	sxth	r7, r7
 800e394:	4630      	mov	r0, r6
 800e396:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e39a:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e39e:	f7fc ff21 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800e3a2:	4628      	mov	r0, r5
 800e3a4:	f7ff ff28 	bl	800e1f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e3a8:	4602      	mov	r2, r0
 800e3aa:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e3ae:	ab06      	add	r3, sp, #24
 800e3b0:	e883 0003 	stmia.w	r3, {r0, r1}
 800e3b4:	4611      	mov	r1, r2
 800e3b6:	4618      	mov	r0, r3
 800e3b8:	f7fc ff14 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800e3bc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e3c0:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e3c4:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e3c8:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e3cc:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e3d0:	4299      	cmp	r1, r3
 800e3d2:	d10b      	bne.n	800e3ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800e3d4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e3d8:	4552      	cmp	r2, sl
 800e3da:	d107      	bne.n	800e3ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800e3dc:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e3e0:	455a      	cmp	r2, fp
 800e3e2:	d103      	bne.n	800e3ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800e3e4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e3e8:	454a      	cmp	r2, r9
 800e3ea:	d00a      	beq.n	800e402 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e3ec:	f1bb 0f00 	cmp.w	fp, #0
 800e3f0:	d002      	beq.n	800e3f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800e3f2:	f1b9 0f00 	cmp.w	r9, #0
 800e3f6:	d12e      	bne.n	800e456 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x132>
 800e3f8:	69ea      	ldr	r2, [r5, #28]
 800e3fa:	4621      	mov	r1, r4
 800e3fc:	4640      	mov	r0, r8
 800e3fe:	f7ff ff91 	bl	800e324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e402:	4628      	mov	r0, r5
 800e404:	f7ff fef8 	bl	800e1f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e408:	6861      	ldr	r1, [r4, #4]
 800e40a:	4602      	mov	r2, r0
 800e40c:	6820      	ldr	r0, [r4, #0]
 800e40e:	4633      	mov	r3, r6
 800e410:	c303      	stmia	r3!, {r0, r1}
 800e412:	4611      	mov	r1, r2
 800e414:	4630      	mov	r0, r6
 800e416:	f7fc fee5 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800e41a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e41e:	2b00      	cmp	r3, #0
 800e420:	d097      	beq.n	800e352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e422:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e426:	2b00      	cmp	r3, #0
 800e428:	d093      	beq.n	800e352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e42a:	4628      	mov	r0, r5
 800e42c:	f7ff ff00 	bl	800e230 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e430:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e434:	1a18      	subs	r0, r3, r0
 800e436:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e43a:	4628      	mov	r0, r5
 800e43c:	f7ff ff0c 	bl	800e258 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e440:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e444:	1a18      	subs	r0, r3, r0
 800e446:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e44a:	682b      	ldr	r3, [r5, #0]
 800e44c:	4631      	mov	r1, r6
 800e44e:	689b      	ldr	r3, [r3, #8]
 800e450:	4628      	mov	r0, r5
 800e452:	4798      	blx	r3
 800e454:	e77d      	b.n	800e352 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e456:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e45a:	fa1f f08a 	uxth.w	r0, sl
 800e45e:	4552      	cmp	r2, sl
 800e460:	9000      	str	r0, [sp, #0]
 800e462:	da12      	bge.n	800e48a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x166>
 800e464:	9301      	str	r3, [sp, #4]
 800e466:	9b00      	ldr	r3, [sp, #0]
 800e468:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e46c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e470:	1a9a      	subs	r2, r3, r2
 800e472:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e476:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e47a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e47e:	69ea      	ldr	r2, [r5, #28]
 800e480:	4631      	mov	r1, r6
 800e482:	4640      	mov	r0, r8
 800e484:	f7ff ff4e 	bl	800e324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e488:	9b01      	ldr	r3, [sp, #4]
 800e48a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e48e:	429a      	cmp	r2, r3
 800e490:	b29f      	uxth	r7, r3
 800e492:	da0d      	bge.n	800e4b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18c>
 800e494:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e498:	1aba      	subs	r2, r7, r2
 800e49a:	f8ad a012 	strh.w	sl, [sp, #18]
 800e49e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e4a2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e4a6:	69ea      	ldr	r2, [r5, #28]
 800e4a8:	4631      	mov	r1, r6
 800e4aa:	4640      	mov	r0, r8
 800e4ac:	f7ff ff3a 	bl	800e324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e4b0:	8822      	ldrh	r2, [r4, #0]
 800e4b2:	88a3      	ldrh	r3, [r4, #4]
 800e4b4:	445f      	add	r7, fp
 800e4b6:	4413      	add	r3, r2
 800e4b8:	b29b      	uxth	r3, r3
 800e4ba:	b2bf      	uxth	r7, r7
 800e4bc:	b23a      	sxth	r2, r7
 800e4be:	b219      	sxth	r1, r3
 800e4c0:	4291      	cmp	r1, r2
 800e4c2:	dd0d      	ble.n	800e4e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1bc>
 800e4c4:	1bdb      	subs	r3, r3, r7
 800e4c6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e4ca:	f8ad a012 	strh.w	sl, [sp, #18]
 800e4ce:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e4d2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e4d6:	69ea      	ldr	r2, [r5, #28]
 800e4d8:	4631      	mov	r1, r6
 800e4da:	4640      	mov	r0, r8
 800e4dc:	f7ff ff22 	bl	800e324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e4e0:	88e2      	ldrh	r2, [r4, #6]
 800e4e2:	8863      	ldrh	r3, [r4, #2]
 800e4e4:	4413      	add	r3, r2
 800e4e6:	9a00      	ldr	r2, [sp, #0]
 800e4e8:	444a      	add	r2, r9
 800e4ea:	b29b      	uxth	r3, r3
 800e4ec:	fa1f f982 	uxth.w	r9, r2
 800e4f0:	fa0f f289 	sxth.w	r2, r9
 800e4f4:	b219      	sxth	r1, r3
 800e4f6:	428a      	cmp	r2, r1
 800e4f8:	da83      	bge.n	800e402 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e4fa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e4fe:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e502:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e506:	eba3 0309 	sub.w	r3, r3, r9
 800e50a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e50e:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e512:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e516:	69ea      	ldr	r2, [r5, #28]
 800e518:	4631      	mov	r1, r6
 800e51a:	e76f      	b.n	800e3fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>

0800e51c <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e51c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e51e:	aa02      	add	r2, sp, #8
 800e520:	2300      	movs	r3, #0
 800e522:	f842 3d04 	str.w	r3, [r2, #-4]!
 800e526:	4604      	mov	r4, r0
 800e528:	3004      	adds	r0, #4
 800e52a:	460d      	mov	r5, r1
 800e52c:	f7fc ff31 	bl	800b392 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e530:	9a01      	ldr	r2, [sp, #4]
 800e532:	b11a      	cbz	r2, 800e53c <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800e534:	4629      	mov	r1, r5
 800e536:	4620      	mov	r0, r4
 800e538:	f7ff fef4 	bl	800e324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e53c:	b003      	add	sp, #12
 800e53e:	bd30      	pop	{r4, r5, pc}

0800e540 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e540:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e542:	4602      	mov	r2, r0
 800e544:	4604      	mov	r4, r0
 800e546:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e54a:	460d      	mov	r5, r1
 800e54c:	6851      	ldr	r1, [r2, #4]
 800e54e:	466b      	mov	r3, sp
 800e550:	c303      	stmia	r3!, {r0, r1}
 800e552:	4629      	mov	r1, r5
 800e554:	4668      	mov	r0, sp
 800e556:	f7fc fe45 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 800e55a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e55e:	4669      	mov	r1, sp
 800e560:	b123      	cbz	r3, 800e56c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800e562:	4620      	mov	r0, r4
 800e564:	f7ff ffda 	bl	800e51c <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e568:	b003      	add	sp, #12
 800e56a:	bd30      	pop	{r4, r5, pc}
 800e56c:	1d20      	adds	r0, r4, #4
 800e56e:	f7fc fed7 	bl	800b320 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e572:	e7f9      	b.n	800e568 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800e574 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e574:	680a      	ldr	r2, [r1, #0]
 800e576:	460b      	mov	r3, r1
 800e578:	6952      	ldr	r2, [r2, #20]
 800e57a:	1d01      	adds	r1, r0, #4
 800e57c:	4618      	mov	r0, r3
 800e57e:	4710      	bx	r2

0800e580 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>:
 800e580:	f011 0f40 	tst.w	r1, #64	; 0x40
 800e584:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 800e588:	4b03      	ldr	r3, [pc, #12]	; (800e598 <_ZNK8touchgfx9GlyphNode3topEv.isra.2+0x18>)
 800e58a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e58e:	bf08      	it	eq
 800e590:	2300      	moveq	r3, #0
 800e592:	4308      	orrs	r0, r1
 800e594:	4318      	orrs	r0, r3
 800e596:	4770      	bx	lr
 800e598:	fffffe00 	.word	0xfffffe00

0800e59c <_ZN8touchgfx9GlyphNode6setTopEs>:
 800e59c:	7b43      	ldrb	r3, [r0, #13]
 800e59e:	7201      	strb	r1, [r0, #8]
 800e5a0:	b289      	uxth	r1, r1
 800e5a2:	f003 039f 	and.w	r3, r3, #159	; 0x9f
 800e5a6:	05ca      	lsls	r2, r1, #23
 800e5a8:	bf48      	it	mi
 800e5aa:	f043 0320 	orrmi.w	r3, r3, #32
 800e5ae:	7343      	strb	r3, [r0, #13]
 800e5b0:	058b      	lsls	r3, r1, #22
 800e5b2:	bf42      	ittt	mi
 800e5b4:	7b43      	ldrbmi	r3, [r0, #13]
 800e5b6:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 800e5ba:	7343      	strbmi	r3, [r0, #13]
 800e5bc:	4770      	bx	lr

0800e5be <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e5be:	b530      	push	{r4, r5, lr}
 800e5c0:	2500      	movs	r5, #0
 800e5c2:	2401      	movs	r4, #1
 800e5c4:	6843      	ldr	r3, [r0, #4]
 800e5c6:	b913      	cbnz	r3, 800e5ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e5c8:	6803      	ldr	r3, [r0, #0]
 800e5ca:	b1f3      	cbz	r3, 800e60a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e5cc:	6043      	str	r3, [r0, #4]
 800e5ce:	7c03      	ldrb	r3, [r0, #16]
 800e5d0:	b143      	cbz	r3, 800e5e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e5d2:	68c3      	ldr	r3, [r0, #12]
 800e5d4:	b12b      	cbz	r3, 800e5e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e5d6:	881a      	ldrh	r2, [r3, #0]
 800e5d8:	b11a      	cbz	r2, 800e5e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e5da:	1c9a      	adds	r2, r3, #2
 800e5dc:	60c2      	str	r2, [r0, #12]
 800e5de:	8818      	ldrh	r0, [r3, #0]
 800e5e0:	bd30      	pop	{r4, r5, pc}
 800e5e2:	7405      	strb	r5, [r0, #16]
 800e5e4:	6843      	ldr	r3, [r0, #4]
 800e5e6:	8819      	ldrh	r1, [r3, #0]
 800e5e8:	b179      	cbz	r1, 800e60a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e5ea:	1c9a      	adds	r2, r3, #2
 800e5ec:	2902      	cmp	r1, #2
 800e5ee:	6042      	str	r2, [r0, #4]
 800e5f0:	d1f5      	bne.n	800e5de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e5f2:	6883      	ldr	r3, [r0, #8]
 800e5f4:	1d1a      	adds	r2, r3, #4
 800e5f6:	6082      	str	r2, [r0, #8]
 800e5f8:	681b      	ldr	r3, [r3, #0]
 800e5fa:	60c3      	str	r3, [r0, #12]
 800e5fc:	2b00      	cmp	r3, #0
 800e5fe:	d0e1      	beq.n	800e5c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e600:	881b      	ldrh	r3, [r3, #0]
 800e602:	2b00      	cmp	r3, #0
 800e604:	d0de      	beq.n	800e5c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e606:	7404      	strb	r4, [r0, #16]
 800e608:	e7dc      	b.n	800e5c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e60a:	2000      	movs	r0, #0
 800e60c:	e7e8      	b.n	800e5e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e60e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e60e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e610:	4605      	mov	r5, r0
 800e612:	4608      	mov	r0, r1
 800e614:	b1e9      	cbz	r1, 800e652 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e616:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800e61a:	460b      	mov	r3, r1
 800e61c:	f101 0708 	add.w	r7, r1, #8
 800e620:	4622      	mov	r2, r4
 800e622:	6818      	ldr	r0, [r3, #0]
 800e624:	6859      	ldr	r1, [r3, #4]
 800e626:	4626      	mov	r6, r4
 800e628:	c603      	stmia	r6!, {r0, r1}
 800e62a:	3308      	adds	r3, #8
 800e62c:	42bb      	cmp	r3, r7
 800e62e:	4634      	mov	r4, r6
 800e630:	d1f7      	bne.n	800e622 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e632:	6818      	ldr	r0, [r3, #0]
 800e634:	6030      	str	r0, [r6, #0]
 800e636:	889b      	ldrh	r3, [r3, #4]
 800e638:	80b3      	strh	r3, [r6, #4]
 800e63a:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800e63e:	015b      	lsls	r3, r3, #5
 800e640:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e644:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800e648:	430b      	orrs	r3, r1
 800e64a:	425b      	negs	r3, r3
 800e64c:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800e650:	4610      	mov	r0, r2
 800e652:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e654 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e654:	b538      	push	{r3, r4, r5, lr}
 800e656:	460c      	mov	r4, r1
 800e658:	6811      	ldr	r1, [r2, #0]
 800e65a:	4610      	mov	r0, r2
 800e65c:	68cd      	ldr	r5, [r1, #12]
 800e65e:	4619      	mov	r1, r3
 800e660:	47a8      	blx	r5
 800e662:	2800      	cmp	r0, #0
 800e664:	bf08      	it	eq
 800e666:	4620      	moveq	r0, r4
 800e668:	bd38      	pop	{r3, r4, r5, pc}

0800e66a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800e66a:	b570      	push	{r4, r5, r6, lr}
 800e66c:	8810      	ldrh	r0, [r2, #0]
 800e66e:	4298      	cmp	r0, r3
 800e670:	d817      	bhi.n	800e6a2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e672:	1e48      	subs	r0, r1, #1
 800e674:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800e678:	4298      	cmp	r0, r3
 800e67a:	d312      	bcc.n	800e6a2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e67c:	2400      	movs	r4, #0
 800e67e:	428c      	cmp	r4, r1
 800e680:	d20f      	bcs.n	800e6a2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e682:	1860      	adds	r0, r4, r1
 800e684:	1040      	asrs	r0, r0, #1
 800e686:	0085      	lsls	r5, r0, #2
 800e688:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800e68c:	42b3      	cmp	r3, r6
 800e68e:	d902      	bls.n	800e696 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800e690:	3001      	adds	r0, #1
 800e692:	b284      	uxth	r4, r0
 800e694:	e7f3      	b.n	800e67e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e696:	d102      	bne.n	800e69e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x34>
 800e698:	442a      	add	r2, r5
 800e69a:	8850      	ldrh	r0, [r2, #2]
 800e69c:	bd70      	pop	{r4, r5, r6, pc}
 800e69e:	b281      	uxth	r1, r0
 800e6a0:	e7ed      	b.n	800e67e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e6a2:	2000      	movs	r0, #0
 800e6a4:	e7fa      	b.n	800e69c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
	...

0800e6a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>:
 800e6a8:	b510      	push	{r4, lr}
 800e6aa:	8ac3      	ldrh	r3, [r0, #22]
 800e6ac:	428b      	cmp	r3, r1
 800e6ae:	d805      	bhi.n	800e6bc <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x14>
 800e6b0:	4b07      	ldr	r3, [pc, #28]	; (800e6d0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x28>)
 800e6b2:	4a08      	ldr	r2, [pc, #32]	; (800e6d4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x2c>)
 800e6b4:	4808      	ldr	r0, [pc, #32]	; (800e6d8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x30>)
 800e6b6:	21fd      	movs	r1, #253	; 0xfd
 800e6b8:	f00c f930 	bl	801a91c <__assert_func>
 800e6bc:	8a83      	ldrh	r3, [r0, #20]
 800e6be:	240a      	movs	r4, #10
 800e6c0:	4419      	add	r1, r3
 800e6c2:	fbb1 f3f4 	udiv	r3, r1, r4
 800e6c6:	fb04 1113 	mls	r1, r4, r3, r1
 800e6ca:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800e6ce:	bd10      	pop	{r4, pc}
 800e6d0:	0801d70d 	.word	0x0801d70d
 800e6d4:	0801db3c 	.word	0x0801db3c
 800e6d8:	0801d71b 	.word	0x0801d71b

0800e6dc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>:
 800e6dc:	b508      	push	{r3, lr}
 800e6de:	8ac3      	ldrh	r3, [r0, #22]
 800e6e0:	428b      	cmp	r3, r1
 800e6e2:	d805      	bhi.n	800e6f0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x14>
 800e6e4:	4b07      	ldr	r3, [pc, #28]	; (800e704 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x28>)
 800e6e6:	4a08      	ldr	r2, [pc, #32]	; (800e708 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x2c>)
 800e6e8:	4808      	ldr	r0, [pc, #32]	; (800e70c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x30>)
 800e6ea:	21d3      	movs	r1, #211	; 0xd3
 800e6ec:	f00c f916 	bl	801a91c <__assert_func>
 800e6f0:	8a83      	ldrh	r3, [r0, #20]
 800e6f2:	220a      	movs	r2, #10
 800e6f4:	4419      	add	r1, r3
 800e6f6:	fbb1 f3f2 	udiv	r3, r1, r2
 800e6fa:	fb02 1113 	mls	r1, r2, r3, r1
 800e6fe:	f830 0011 	ldrh.w	r0, [r0, r1, lsl #1]
 800e702:	bd08      	pop	{r3, pc}
 800e704:	0801d70d 	.word	0x0801d70d
 800e708:	0801d88c 	.word	0x0801d88c
 800e70c:	0801d71b 	.word	0x0801d71b

0800e710 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e710:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e714:	4604      	mov	r4, r0
 800e716:	4688      	mov	r8, r1
 800e718:	4615      	mov	r5, r2
 800e71a:	b94a      	cbnz	r2, 800e730 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20>
 800e71c:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800e720:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800e724:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e728:	4691      	mov	r9, r2
 800e72a:	4648      	mov	r0, r9
 800e72c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e730:	f100 0640 	add.w	r6, r0, #64	; 0x40
 800e734:	8892      	ldrh	r2, [r2, #4]
 800e736:	462b      	mov	r3, r5
 800e738:	f105 0c08 	add.w	ip, r5, #8
 800e73c:	46b3      	mov	fp, r6
 800e73e:	6818      	ldr	r0, [r3, #0]
 800e740:	6859      	ldr	r1, [r3, #4]
 800e742:	4637      	mov	r7, r6
 800e744:	c703      	stmia	r7!, {r0, r1}
 800e746:	3308      	adds	r3, #8
 800e748:	4563      	cmp	r3, ip
 800e74a:	463e      	mov	r6, r7
 800e74c:	d1f7      	bne.n	800e73e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x2e>
 800e74e:	6818      	ldr	r0, [r3, #0]
 800e750:	6038      	str	r0, [r7, #0]
 800e752:	889b      	ldrh	r3, [r3, #4]
 800e754:	80bb      	strh	r3, [r7, #4]
 800e756:	f894 704d 	ldrb.w	r7, [r4, #77]	; 0x4d
 800e75a:	f46f 6363 	mvn.w	r3, #3632	; 0xe30
 800e75e:	ea4f 1a07 	mov.w	sl, r7, lsl #4
 800e762:	f40a 7180 	and.w	r1, sl, #256	; 0x100
 800e766:	18d3      	adds	r3, r2, r3
 800e768:	f894 a047 	ldrb.w	sl, [r4, #71]	; 0x47
 800e76c:	b298      	uxth	r0, r3
 800e76e:	ea4a 0a01 	orr.w	sl, sl, r1
 800e772:	281d      	cmp	r0, #29
 800e774:	fa1f f68a 	uxth.w	r6, sl
 800e778:	46d9      	mov	r9, fp
 800e77a:	d842      	bhi.n	800e802 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf2>
 800e77c:	2301      	movs	r3, #1
 800e77e:	4950      	ldr	r1, [pc, #320]	; (800e8c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b0>)
 800e780:	4083      	lsls	r3, r0
 800e782:	420b      	tst	r3, r1
 800e784:	ea4f 0aea 	mov.w	sl, sl, asr #3
 800e788:	d114      	bne.n	800e7b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800e78a:	f413 7f60 	tst.w	r3, #896	; 0x380
 800e78e:	d03c      	beq.n	800e80a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xfa>
 800e790:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800e794:	fa1f fa8a 	uxth.w	sl, sl
 800e798:	eba1 010a 	sub.w	r1, r1, sl
 800e79c:	4658      	mov	r0, fp
 800e79e:	b209      	sxth	r1, r1
 800e7a0:	f7ff fefc 	bl	800e59c <_ZN8touchgfx9GlyphNode6setTopEs>
 800e7a4:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 800e7a8:	1b86      	subs	r6, r0, r6
 800e7aa:	eba6 0a0a 	sub.w	sl, r6, sl
 800e7ae:	f8a4 a050 	strh.w	sl, [r4, #80]	; 0x50
 800e7b2:	e7ba      	b.n	800e72a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e7b4:	2100      	movs	r1, #0
 800e7b6:	f104 001a 	add.w	r0, r4, #26
 800e7ba:	f7ff ff8f 	bl	800e6dc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800e7be:	f640 6333 	movw	r3, #3635	; 0xe33
 800e7c2:	4298      	cmp	r0, r3
 800e7c4:	4601      	mov	r1, r0
 800e7c6:	d10a      	bne.n	800e7de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xce>
 800e7c8:	f8d8 3000 	ldr.w	r3, [r8]
 800e7cc:	4640      	mov	r0, r8
 800e7ce:	68db      	ldr	r3, [r3, #12]
 800e7d0:	4798      	blx	r3
 800e7d2:	7b41      	ldrb	r1, [r0, #13]
 800e7d4:	7a00      	ldrb	r0, [r0, #8]
 800e7d6:	f7ff fed3 	bl	800e580 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e7da:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800e7de:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800e7e2:	4431      	add	r1, r6
 800e7e4:	4451      	add	r1, sl
 800e7e6:	b209      	sxth	r1, r1
 800e7e8:	f8a4 104e 	strh.w	r1, [r4, #78]	; 0x4e
 800e7ec:	4658      	mov	r0, fp
 800e7ee:	f7ff fed5 	bl	800e59c <_ZN8touchgfx9GlyphNode6setTopEs>
 800e7f2:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800e7f6:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800e7fa:	1a9b      	subs	r3, r3, r2
 800e7fc:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800e800:	e793      	b.n	800e72a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e802:	f640 631b 	movw	r3, #3611	; 0xe1b
 800e806:	429a      	cmp	r2, r3
 800e808:	d005      	beq.n	800e816 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x106>
 800e80a:	f022 0302 	bic.w	r3, r2, #2
 800e80e:	f640 611d 	movw	r1, #3613	; 0xe1d
 800e812:	428b      	cmp	r3, r1
 800e814:	d119      	bne.n	800e84a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 800e816:	1e53      	subs	r3, r2, #1
 800e818:	b29b      	uxth	r3, r3
 800e81a:	4642      	mov	r2, r8
 800e81c:	4629      	mov	r1, r5
 800e81e:	4620      	mov	r0, r4
 800e820:	f7ff ff18 	bl	800e654 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e824:	7b41      	ldrb	r1, [r0, #13]
 800e826:	7a00      	ldrb	r0, [r0, #8]
 800e828:	f7ff feaa 	bl	800e580 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e82c:	f994 304d 	ldrsb.w	r3, [r4, #77]	; 0x4d
 800e830:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800e834:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e838:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800e83c:	4313      	orrs	r3, r2
 800e83e:	115a      	asrs	r2, r3, #5
 800e840:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e844:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e848:	e02d      	b.n	800e8a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x196>
 800e84a:	4639      	mov	r1, r7
 800e84c:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800e850:	f7ff fe96 	bl	800e580 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e854:	f640 6109 	movw	r1, #3593	; 0xe09
 800e858:	f022 0310 	bic.w	r3, r2, #16
 800e85c:	428b      	cmp	r3, r1
 800e85e:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800e862:	d003      	beq.n	800e86c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15c>
 800e864:	f640 6313 	movw	r3, #3603	; 0xe13
 800e868:	429a      	cmp	r2, r3
 800e86a:	d126      	bne.n	800e8ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1aa>
 800e86c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800e870:	b27f      	sxtb	r7, r7
 800e872:	f407 7780 	and.w	r7, r7, #256	; 0x100
 800e876:	431f      	orrs	r7, r3
 800e878:	f640 6313 	movw	r3, #3603	; 0xe13
 800e87c:	429a      	cmp	r2, r3
 800e87e:	bf1a      	itte	ne
 800e880:	f102 33ff 	addne.w	r3, r2, #4294967295
 800e884:	b29b      	uxthne	r3, r3
 800e886:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e88a:	4642      	mov	r2, r8
 800e88c:	4629      	mov	r1, r5
 800e88e:	4620      	mov	r0, r4
 800e890:	f7ff fee0 	bl	800e654 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e894:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800e898:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e89c:	7a83      	ldrb	r3, [r0, #10]
 800e89e:	4313      	orrs	r3, r2
 800e8a0:	1aff      	subs	r7, r7, r3
 800e8a2:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
 800e8a6:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800e8aa:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800e8ae:	f7ff fe67 	bl	800e580 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e8b2:	1b80      	subs	r0, r0, r6
 800e8b4:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 800e8b8:	e737      	b.n	800e72a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e8ba:	2300      	movs	r3, #0
 800e8bc:	e7c2      	b.n	800e844 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x134>
 800e8be:	bf00      	nop
 800e8c0:	3fc00079 	.word	0x3fc00079

0800e8c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800e8c4:	3a01      	subs	r2, #1
 800e8c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8ca:	b292      	uxth	r2, r2
 800e8cc:	460c      	mov	r4, r1
 800e8ce:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800e8d2:	42b2      	cmp	r2, r6
 800e8d4:	d018      	beq.n	800e908 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x44>
 800e8d6:	8b01      	ldrh	r1, [r0, #24]
 800e8d8:	f834 5b02 	ldrh.w	r5, [r4], #2
 800e8dc:	4291      	cmp	r1, r2
 800e8de:	d805      	bhi.n	800e8ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x28>
 800e8e0:	4b14      	ldr	r3, [pc, #80]	; (800e934 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x70>)
 800e8e2:	4a15      	ldr	r2, [pc, #84]	; (800e938 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x74>)
 800e8e4:	4815      	ldr	r0, [pc, #84]	; (800e93c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x78>)
 800e8e6:	21d3      	movs	r1, #211	; 0xd3
 800e8e8:	f00c f818 	bl	801a91c <__assert_func>
 800e8ec:	8ac1      	ldrh	r1, [r0, #22]
 800e8ee:	4411      	add	r1, r2
 800e8f0:	f001 0101 	and.w	r1, r1, #1
 800e8f4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800e8f8:	3a01      	subs	r2, #1
 800e8fa:	8a49      	ldrh	r1, [r1, #18]
 800e8fc:	428d      	cmp	r5, r1
 800e8fe:	b292      	uxth	r2, r2
 800e900:	d0e7      	beq.n	800e8d2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xe>
 800e902:	2000      	movs	r0, #0
 800e904:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e908:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800e90c:	2600      	movs	r6, #0
 800e90e:	441f      	add	r7, r3
 800e910:	f100 051a 	add.w	r5, r0, #26
 800e914:	b2b1      	uxth	r1, r6
 800e916:	42b9      	cmp	r1, r7
 800e918:	da09      	bge.n	800e92e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x6a>
 800e91a:	4628      	mov	r0, r5
 800e91c:	f7ff fede 	bl	800e6dc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800e920:	f834 8016 	ldrh.w	r8, [r4, r6, lsl #1]
 800e924:	4540      	cmp	r0, r8
 800e926:	f106 0601 	add.w	r6, r6, #1
 800e92a:	d0f3      	beq.n	800e914 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x50>
 800e92c:	e7e9      	b.n	800e902 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800e92e:	2001      	movs	r0, #1
 800e930:	e7e8      	b.n	800e904 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800e932:	bf00      	nop
 800e934:	0801d70d 	.word	0x0801d70d
 800e938:	0801dc9c 	.word	0x0801dc9c
 800e93c:	0801d71b 	.word	0x0801d71b

0800e940 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>:
 800e940:	b538      	push	{r3, r4, r5, lr}
 800e942:	8ac3      	ldrh	r3, [r0, #22]
 800e944:	428b      	cmp	r3, r1
 800e946:	d205      	bcs.n	800e954 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x14>
 800e948:	4b08      	ldr	r3, [pc, #32]	; (800e96c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x2c>)
 800e94a:	4a09      	ldr	r2, [pc, #36]	; (800e970 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x30>)
 800e94c:	4809      	ldr	r0, [pc, #36]	; (800e974 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x34>)
 800e94e:	21d8      	movs	r1, #216	; 0xd8
 800e950:	f00b ffe4 	bl	801a91c <__assert_func>
 800e954:	8a82      	ldrh	r2, [r0, #20]
 800e956:	250a      	movs	r5, #10
 800e958:	440a      	add	r2, r1
 800e95a:	1a5b      	subs	r3, r3, r1
 800e95c:	fbb2 f4f5 	udiv	r4, r2, r5
 800e960:	fb05 2214 	mls	r2, r5, r4, r2
 800e964:	8282      	strh	r2, [r0, #20]
 800e966:	82c3      	strh	r3, [r0, #22]
 800e968:	bd38      	pop	{r3, r4, r5, pc}
 800e96a:	bf00      	nop
 800e96c:	0801d701 	.word	0x0801d701
 800e970:	0801dab8 	.word	0x0801dab8
 800e974:	0801d71b 	.word	0x0801d71b

0800e978 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>:
 800e978:	b538      	push	{r3, r4, r5, lr}
 800e97a:	8ac3      	ldrh	r3, [r0, #22]
 800e97c:	2b09      	cmp	r3, #9
 800e97e:	d905      	bls.n	800e98c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x14>
 800e980:	4b08      	ldr	r3, [pc, #32]	; (800e9a4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x2c>)
 800e982:	4a09      	ldr	r2, [pc, #36]	; (800e9a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x30>)
 800e984:	4809      	ldr	r0, [pc, #36]	; (800e9ac <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x34>)
 800e986:	21f7      	movs	r1, #247	; 0xf7
 800e988:	f00b ffc8 	bl	801a91c <__assert_func>
 800e98c:	8a82      	ldrh	r2, [r0, #20]
 800e98e:	250a      	movs	r5, #10
 800e990:	441a      	add	r2, r3
 800e992:	fbb2 f4f5 	udiv	r4, r2, r5
 800e996:	fb05 2214 	mls	r2, r5, r4, r2
 800e99a:	3301      	adds	r3, #1
 800e99c:	f820 1012 	strh.w	r1, [r0, r2, lsl #1]
 800e9a0:	82c3      	strh	r3, [r0, #22]
 800e9a2:	bd38      	pop	{r3, r4, r5, pc}
 800e9a4:	0801d6f5 	.word	0x0801d6f5
 800e9a8:	0801da09 	.word	0x0801da09
 800e9ac:	0801d71b 	.word	0x0801d71b

0800e9b0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e9b0:	b538      	push	{r3, r4, r5, lr}
 800e9b2:	4604      	mov	r4, r0
 800e9b4:	f100 051a 	add.w	r5, r0, #26
 800e9b8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e9ba:	2b0a      	cmp	r3, #10
 800e9bc:	d01c      	beq.n	800e9f8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800e9be:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800e9c0:	b962      	cbnz	r2, 800e9dc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800e9c2:	f104 051a 	add.w	r5, r4, #26
 800e9c6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e9c8:	2b0a      	cmp	r3, #10
 800e9ca:	d015      	beq.n	800e9f8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800e9cc:	4620      	mov	r0, r4
 800e9ce:	f7ff fdf6 	bl	800e5be <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e9d2:	4601      	mov	r1, r0
 800e9d4:	4628      	mov	r0, r5
 800e9d6:	f7ff ffcf 	bl	800e978 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800e9da:	e7f4      	b.n	800e9c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x16>
 800e9dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e9de:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800e9e2:	3301      	adds	r3, #1
 800e9e4:	f003 0301 	and.w	r3, r3, #1
 800e9e8:	3a01      	subs	r2, #1
 800e9ea:	8e49      	ldrh	r1, [r1, #50]	; 0x32
 800e9ec:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e9ee:	8722      	strh	r2, [r4, #56]	; 0x38
 800e9f0:	4628      	mov	r0, r5
 800e9f2:	f7ff ffc1 	bl	800e978 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800e9f6:	e7df      	b.n	800e9b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8>
 800e9f8:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e9fc <_ZN8touchgfx12TextProvider18initializeInternalEv>:
 800e9fc:	2300      	movs	r3, #0
 800e9fe:	b510      	push	{r4, lr}
 800ea00:	6043      	str	r3, [r0, #4]
 800ea02:	60c3      	str	r3, [r0, #12]
 800ea04:	7403      	strb	r3, [r0, #16]
 800ea06:	8603      	strh	r3, [r0, #48]	; 0x30
 800ea08:	8303      	strh	r3, [r0, #24]
 800ea0a:	8703      	strh	r3, [r0, #56]	; 0x38
 800ea0c:	4604      	mov	r4, r0
 800ea0e:	f7ff ffcf 	bl	800e9b0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ea12:	4a0a      	ldr	r2, [pc, #40]	; (800ea3c <_ZN8touchgfx12TextProvider18initializeInternalEv+0x40>)
 800ea14:	6813      	ldr	r3, [r2, #0]
 800ea16:	4611      	mov	r1, r2
 800ea18:	b913      	cbnz	r3, 800ea20 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x24>
 800ea1a:	6852      	ldr	r2, [r2, #4]
 800ea1c:	07d0      	lsls	r0, r2, #31
 800ea1e:	d50b      	bpl.n	800ea38 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x3c>
 800ea20:	6849      	ldr	r1, [r1, #4]
 800ea22:	104a      	asrs	r2, r1, #1
 800ea24:	07c9      	lsls	r1, r1, #31
 800ea26:	eb04 0002 	add.w	r0, r4, r2
 800ea2a:	bf48      	it	mi
 800ea2c:	58a2      	ldrmi	r2, [r4, r2]
 800ea2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ea32:	bf48      	it	mi
 800ea34:	58d3      	ldrmi	r3, [r2, r3]
 800ea36:	4718      	bx	r3
 800ea38:	bd10      	pop	{r4, pc}
 800ea3a:	bf00      	nop
 800ea3c:	20000518 	.word	0x20000518

0800ea40 <_ZN8touchgfx12TextProviderC1Ev>:
 800ea40:	b510      	push	{r4, lr}
 800ea42:	2300      	movs	r3, #0
 800ea44:	2201      	movs	r2, #1
 800ea46:	4604      	mov	r4, r0
 800ea48:	e9c0 3300 	strd	r3, r3, [r0]
 800ea4c:	60c3      	str	r3, [r0, #12]
 800ea4e:	7403      	strb	r3, [r0, #16]
 800ea50:	82c3      	strh	r3, [r0, #22]
 800ea52:	8303      	strh	r3, [r0, #24]
 800ea54:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800ea56:	8603      	strh	r3, [r0, #48]	; 0x30
 800ea58:	86c3      	strh	r3, [r0, #54]	; 0x36
 800ea5a:	8703      	strh	r3, [r0, #56]	; 0x38
 800ea5c:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ea5e:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800ea62:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800ea66:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800ea6a:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800ea6e:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800ea72:	f7ff ffc3 	bl	800e9fc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800ea76:	4620      	mov	r0, r4
 800ea78:	bd10      	pop	{r4, pc}

0800ea7a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800ea7a:	b410      	push	{r4}
 800ea7c:	6082      	str	r2, [r0, #8]
 800ea7e:	6001      	str	r1, [r0, #0]
 800ea80:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ea82:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ea86:	f7ff bfb9 	b.w	800e9fc <_ZN8touchgfx12TextProvider18initializeInternalEv>
	...

0800ea8c <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>:
 800ea8c:	b508      	push	{r3, lr}
 800ea8e:	88c2      	ldrh	r2, [r0, #6]
 800ea90:	440a      	add	r2, r1
 800ea92:	2a02      	cmp	r2, #2
 800ea94:	dd05      	ble.n	800eaa2 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x16>
 800ea96:	4b06      	ldr	r3, [pc, #24]	; (800eab0 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x24>)
 800ea98:	4a06      	ldr	r2, [pc, #24]	; (800eab4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x28>)
 800ea9a:	4807      	ldr	r0, [pc, #28]	; (800eab8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x2c>)
 800ea9c:	21ec      	movs	r1, #236	; 0xec
 800ea9e:	f00b ff3d 	bl	801a91c <__assert_func>
 800eaa2:	8883      	ldrh	r3, [r0, #4]
 800eaa4:	80c2      	strh	r2, [r0, #6]
 800eaa6:	1a59      	subs	r1, r3, r1
 800eaa8:	f001 0101 	and.w	r1, r1, #1
 800eaac:	8081      	strh	r1, [r0, #4]
 800eaae:	bd08      	pop	{r3, pc}
 800eab0:	0801d747 	.word	0x0801d747
 800eab4:	0801dc15 	.word	0x0801dc15
 800eab8:	0801d71b 	.word	0x0801d71b

0800eabc <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>:
 800eabc:	b508      	push	{r3, lr}
 800eabe:	88c3      	ldrh	r3, [r0, #6]
 800eac0:	428b      	cmp	r3, r1
 800eac2:	d805      	bhi.n	800ead0 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x14>
 800eac4:	4b06      	ldr	r3, [pc, #24]	; (800eae0 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x24>)
 800eac6:	4a07      	ldr	r2, [pc, #28]	; (800eae4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x28>)
 800eac8:	4807      	ldr	r0, [pc, #28]	; (800eae8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x2c>)
 800eaca:	21fd      	movs	r1, #253	; 0xfd
 800eacc:	f00b ff26 	bl	801a91c <__assert_func>
 800ead0:	8883      	ldrh	r3, [r0, #4]
 800ead2:	4419      	add	r1, r3
 800ead4:	f001 0101 	and.w	r1, r1, #1
 800ead8:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800eadc:	bd08      	pop	{r3, pc}
 800eade:	bf00      	nop
 800eae0:	0801d70d 	.word	0x0801d70d
 800eae4:	0801dd6d 	.word	0x0801dd6d
 800eae8:	0801d71b 	.word	0x0801d71b

0800eaec <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800eaec:	b570      	push	{r4, r5, r6, lr}
 800eaee:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800eaf0:	4604      	mov	r4, r0
 800eaf2:	b92a      	cbnz	r2, 800eb00 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800eaf4:	4b12      	ldr	r3, [pc, #72]	; (800eb40 <_ZN8touchgfx12TextProvider11getNextCharEv+0x54>)
 800eaf6:	4a13      	ldr	r2, [pc, #76]	; (800eb44 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800eaf8:	4813      	ldr	r0, [pc, #76]	; (800eb48 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800eafa:	21de      	movs	r1, #222	; 0xde
 800eafc:	f00b ff0e 	bl	801a91c <__assert_func>
 800eb00:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800eb02:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800eb06:	260a      	movs	r6, #10
 800eb08:	3301      	adds	r3, #1
 800eb0a:	8b4d      	ldrh	r5, [r1, #26]
 800eb0c:	fbb3 f1f6 	udiv	r1, r3, r6
 800eb10:	3a01      	subs	r2, #1
 800eb12:	fb06 3311 	mls	r3, r6, r1, r3
 800eb16:	8602      	strh	r2, [r0, #48]	; 0x30
 800eb18:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800eb1a:	f7ff ff49 	bl	800e9b0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800eb1e:	8b23      	ldrh	r3, [r4, #24]
 800eb20:	2b02      	cmp	r3, #2
 800eb22:	bf04      	itt	eq
 800eb24:	2301      	moveq	r3, #1
 800eb26:	8323      	strheq	r3, [r4, #24]
 800eb28:	3412      	adds	r4, #18
 800eb2a:	4620      	mov	r0, r4
 800eb2c:	2101      	movs	r1, #1
 800eb2e:	f7ff ffad 	bl	800ea8c <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800eb32:	4620      	mov	r0, r4
 800eb34:	462a      	mov	r2, r5
 800eb36:	2100      	movs	r1, #0
 800eb38:	f7ff ffc0 	bl	800eabc <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800eb3c:	4628      	mov	r0, r5
 800eb3e:	bd70      	pop	{r4, r5, r6, pc}
 800eb40:	0801d6ec 	.word	0x0801d6ec
 800eb44:	0801d95e 	.word	0x0801d95e
 800eb48:	0801d71b 	.word	0x0801d71b

0800eb4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800eb4c:	428a      	cmp	r2, r1
 800eb4e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb52:	4604      	mov	r4, r0
 800eb54:	460e      	mov	r6, r1
 800eb56:	4615      	mov	r5, r2
 800eb58:	469a      	mov	sl, r3
 800eb5a:	d92b      	bls.n	800ebb4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x68>
 800eb5c:	1a57      	subs	r7, r2, r1
 800eb5e:	b2bf      	uxth	r7, r7
 800eb60:	f04f 0800 	mov.w	r8, #0
 800eb64:	f100 0932 	add.w	r9, r0, #50	; 0x32
 800eb68:	f04f 0b0a 	mov.w	fp, #10
 800eb6c:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800eb6e:	b92b      	cbnz	r3, 800eb7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x30>
 800eb70:	4b24      	ldr	r3, [pc, #144]	; (800ec04 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xb8>)
 800eb72:	4a25      	ldr	r2, [pc, #148]	; (800ec08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xbc>)
 800eb74:	21e6      	movs	r1, #230	; 0xe6
 800eb76:	4825      	ldr	r0, [pc, #148]	; (800ec0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc0>)
 800eb78:	f00b fed0 	bl	801a91c <__assert_func>
 800eb7c:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800eb7e:	3b01      	subs	r3, #1
 800eb80:	b29b      	uxth	r3, r3
 800eb82:	441a      	add	r2, r3
 800eb84:	8623      	strh	r3, [r4, #48]	; 0x30
 800eb86:	fbb2 f3fb 	udiv	r3, r2, fp
 800eb8a:	fb0b 2313 	mls	r3, fp, r3, r2
 800eb8e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800eb92:	2101      	movs	r1, #1
 800eb94:	8b5a      	ldrh	r2, [r3, #26]
 800eb96:	9201      	str	r2, [sp, #4]
 800eb98:	4648      	mov	r0, r9
 800eb9a:	f7ff ff77 	bl	800ea8c <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800eb9e:	f108 0801 	add.w	r8, r8, #1
 800eba2:	9a01      	ldr	r2, [sp, #4]
 800eba4:	2100      	movs	r1, #0
 800eba6:	4648      	mov	r0, r9
 800eba8:	f7ff ff88 	bl	800eabc <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800ebac:	fa1f f388 	uxth.w	r3, r8
 800ebb0:	429f      	cmp	r7, r3
 800ebb2:	d8db      	bhi.n	800eb6c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x20>
 800ebb4:	f104 071a 	add.w	r7, r4, #26
 800ebb8:	4631      	mov	r1, r6
 800ebba:	4638      	mov	r0, r7
 800ebbc:	f7ff fec0 	bl	800e940 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>
 800ebc0:	260a      	movs	r6, #10
 800ebc2:	b1c5      	cbz	r5, 800ebf6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 800ebc4:	3d01      	subs	r5, #1
 800ebc6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ebc8:	b2ad      	uxth	r5, r5
 800ebca:	2b09      	cmp	r3, #9
 800ebcc:	f83a 2015 	ldrh.w	r2, [sl, r5, lsl #1]
 800ebd0:	d903      	bls.n	800ebda <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8e>
 800ebd2:	4b0f      	ldr	r3, [pc, #60]	; (800ec10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc4>)
 800ebd4:	4a0f      	ldr	r2, [pc, #60]	; (800ec14 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc8>)
 800ebd6:	21ec      	movs	r1, #236	; 0xec
 800ebd8:	e7cd      	b.n	800eb76 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2a>
 800ebda:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800ebdc:	3109      	adds	r1, #9
 800ebde:	3301      	adds	r3, #1
 800ebe0:	fbb1 f0f6 	udiv	r0, r1, r6
 800ebe4:	fb06 1110 	mls	r1, r6, r0, r1
 800ebe8:	85e1      	strh	r1, [r4, #46]	; 0x2e
 800ebea:	8623      	strh	r3, [r4, #48]	; 0x30
 800ebec:	2100      	movs	r1, #0
 800ebee:	4638      	mov	r0, r7
 800ebf0:	f7ff fd5a 	bl	800e6a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ebf4:	e7e5      	b.n	800ebc2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x76>
 800ebf6:	4620      	mov	r0, r4
 800ebf8:	b003      	add	sp, #12
 800ebfa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebfe:	f7ff bed7 	b.w	800e9b0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ec02:	bf00      	nop
 800ec04:	0801d6ec 	.word	0x0801d6ec
 800ec08:	0801d7e2 	.word	0x0801d7e2
 800ec0c:	0801d71b 	.word	0x0801d71b
 800ec10:	0801d747 	.word	0x0801d747
 800ec14:	0801d75a 	.word	0x0801d75a

0800ec18 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800ec18:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec1c:	4605      	mov	r5, r0
 800ec1e:	4616      	mov	r6, r2
 800ec20:	1c8c      	adds	r4, r1, #2
 800ec22:	8809      	ldrh	r1, [r1, #0]
 800ec24:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800ec28:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800ec2c:	42b3      	cmp	r3, r6
 800ec2e:	d124      	bne.n	800ec7a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800ec30:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800ec34:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800ec38:	f001 070f 	and.w	r7, r1, #15
 800ec3c:	f8cd 8000 	str.w	r8, [sp]
 800ec40:	464b      	mov	r3, r9
 800ec42:	4652      	mov	r2, sl
 800ec44:	4621      	mov	r1, r4
 800ec46:	4628      	mov	r0, r5
 800ec48:	f7ff fe3c 	bl	800e8c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800ec4c:	4683      	mov	fp, r0
 800ec4e:	b168      	cbz	r0, 800ec6c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800ec50:	eb0a 0109 	add.w	r1, sl, r9
 800ec54:	4441      	add	r1, r8
 800ec56:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800ec5a:	463a      	mov	r2, r7
 800ec5c:	4649      	mov	r1, r9
 800ec5e:	4628      	mov	r0, r5
 800ec60:	f7ff ff74 	bl	800eb4c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800ec64:	4658      	mov	r0, fp
 800ec66:	b003      	add	sp, #12
 800ec68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec6c:	eb07 010a 	add.w	r1, r7, sl
 800ec70:	4449      	add	r1, r9
 800ec72:	4441      	add	r1, r8
 800ec74:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800ec78:	e7d2      	b.n	800ec20 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800ec7a:	f04f 0b00 	mov.w	fp, #0
 800ec7e:	e7f1      	b.n	800ec64 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800ec80 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800ec80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ec84:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800ec86:	886f      	ldrh	r7, [r5, #2]
 800ec88:	4604      	mov	r4, r0
 800ec8a:	087f      	lsrs	r7, r7, #1
 800ec8c:	260b      	movs	r6, #11
 800ec8e:	f100 091a 	add.w	r9, r0, #26
 800ec92:	3e01      	subs	r6, #1
 800ec94:	d013      	beq.n	800ecbe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800ec96:	2100      	movs	r1, #0
 800ec98:	4648      	mov	r0, r9
 800ec9a:	f7ff fd1f 	bl	800e6dc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ec9e:	462a      	mov	r2, r5
 800eca0:	4680      	mov	r8, r0
 800eca2:	4603      	mov	r3, r0
 800eca4:	4639      	mov	r1, r7
 800eca6:	4620      	mov	r0, r4
 800eca8:	f7ff fcdf 	bl	800e66a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800ecac:	b138      	cbz	r0, 800ecbe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800ecae:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800ecb2:	4642      	mov	r2, r8
 800ecb4:	4620      	mov	r0, r4
 800ecb6:	f7ff ffaf 	bl	800ec18 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800ecba:	2800      	cmp	r0, #0
 800ecbc:	d1e9      	bne.n	800ec92 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x12>
 800ecbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:
 800ecc4:	b570      	push	{r4, r5, r6, lr}
 800ecc6:	4b1e      	ldr	r3, [pc, #120]	; (800ed40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800ecc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eccc:	4604      	mov	r4, r0
 800ecce:	f003 0501 	and.w	r5, r3, #1
 800ecd2:	b902      	cbnz	r2, 800ecd6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
 800ecd4:	b165      	cbz	r5, 800ecf0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2c>
 800ecd6:	105b      	asrs	r3, r3, #1
 800ecd8:	f104 061a 	add.w	r6, r4, #26
 800ecdc:	18e0      	adds	r0, r4, r3
 800ecde:	b10d      	cbz	r5, 800ece4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
 800ece0:	58e3      	ldr	r3, [r4, r3]
 800ece2:	589a      	ldr	r2, [r3, r2]
 800ece4:	4790      	blx	r2
 800ece6:	2100      	movs	r1, #0
 800ece8:	4602      	mov	r2, r0
 800ecea:	4630      	mov	r0, r6
 800ecec:	f7ff fcdc 	bl	800e6a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ecf0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ecf2:	b303      	cbz	r3, 800ed36 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800ecf4:	f104 051a 	add.w	r5, r4, #26
 800ecf8:	2100      	movs	r1, #0
 800ecfa:	4628      	mov	r0, r5
 800ecfc:	f7ff fcee 	bl	800e6dc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ed00:	b1c8      	cbz	r0, 800ed36 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800ed02:	4620      	mov	r0, r4
 800ed04:	f7ff ffbc 	bl	800ec80 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 800ed08:	2101      	movs	r1, #1
 800ed0a:	4628      	mov	r0, r5
 800ed0c:	f7ff fce6 	bl	800e6dc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ed10:	f640 133f 	movw	r3, #2367	; 0x93f
 800ed14:	4298      	cmp	r0, r3
 800ed16:	4606      	mov	r6, r0
 800ed18:	d10d      	bne.n	800ed36 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800ed1a:	2100      	movs	r1, #0
 800ed1c:	4628      	mov	r0, r5
 800ed1e:	f7ff fcdd 	bl	800e6dc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ed22:	2101      	movs	r1, #1
 800ed24:	4602      	mov	r2, r0
 800ed26:	4628      	mov	r0, r5
 800ed28:	f7ff fcbe 	bl	800e6a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ed2c:	4632      	mov	r2, r6
 800ed2e:	2100      	movs	r1, #0
 800ed30:	4628      	mov	r0, r5
 800ed32:	f7ff fcb9 	bl	800e6a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ed36:	4620      	mov	r0, r4
 800ed38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ed3c:	f7ff bed6 	b.w	800eaec <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ed40:	20000520 	.word	0x20000520

0800ed44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ed44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ed46:	4617      	mov	r7, r2
 800ed48:	461e      	mov	r6, r3
 800ed4a:	4605      	mov	r5, r0
 800ed4c:	f7ff ffba 	bl	800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ed50:	683b      	ldr	r3, [r7, #0]
 800ed52:	4604      	mov	r4, r0
 800ed54:	68db      	ldr	r3, [r3, #12]
 800ed56:	4601      	mov	r1, r0
 800ed58:	4638      	mov	r0, r7
 800ed5a:	4798      	blx	r3
 800ed5c:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800ed60:	b29b      	uxth	r3, r3
 800ed62:	2b7f      	cmp	r3, #127	; 0x7f
 800ed64:	4602      	mov	r2, r0
 800ed66:	6030      	str	r0, [r6, #0]
 800ed68:	d813      	bhi.n	800ed92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x4e>
 800ed6a:	4639      	mov	r1, r7
 800ed6c:	4628      	mov	r0, r5
 800ed6e:	f7ff fccf 	bl	800e710 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ed72:	6030      	str	r0, [r6, #0]
 800ed74:	6833      	ldr	r3, [r6, #0]
 800ed76:	b143      	cbz	r3, 800ed8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800ed78:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800ed7c:	7a9b      	ldrb	r3, [r3, #10]
 800ed7e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ed82:	4313      	orrs	r3, r2
 800ed84:	bf0c      	ite	eq
 800ed86:	2301      	moveq	r3, #1
 800ed88:	2300      	movne	r3, #0
 800ed8a:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800ed8e:	4620      	mov	r0, r4
 800ed90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ed92:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800ed96:	2b00      	cmp	r3, #0
 800ed98:	d0ec      	beq.n	800ed74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800ed9a:	f640 1302 	movw	r3, #2306	; 0x902
 800ed9e:	429c      	cmp	r4, r3
 800eda0:	d1e8      	bne.n	800ed74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800eda2:	4601      	mov	r1, r0
 800eda4:	4628      	mov	r0, r5
 800eda6:	f7ff fc32 	bl	800e60e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800edaa:	e7e2      	b.n	800ed72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>

0800edac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800edac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800edb0:	4617      	mov	r7, r2
 800edb2:	461e      	mov	r6, r3
 800edb4:	4605      	mov	r5, r0
 800edb6:	f7ff ff85 	bl	800ecc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800edba:	683b      	ldr	r3, [r7, #0]
 800edbc:	4604      	mov	r4, r0
 800edbe:	f8d3 8008 	ldr.w	r8, [r3, #8]
 800edc2:	4601      	mov	r1, r0
 800edc4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800edc8:	4638      	mov	r0, r7
 800edca:	47c0      	blx	r8
 800edcc:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800edd0:	b29b      	uxth	r3, r3
 800edd2:	2b7f      	cmp	r3, #127	; 0x7f
 800edd4:	4602      	mov	r2, r0
 800edd6:	6030      	str	r0, [r6, #0]
 800edd8:	d814      	bhi.n	800ee04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x58>
 800edda:	4639      	mov	r1, r7
 800eddc:	4628      	mov	r0, r5
 800edde:	f7ff fc97 	bl	800e710 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ede2:	6030      	str	r0, [r6, #0]
 800ede4:	6833      	ldr	r3, [r6, #0]
 800ede6:	b143      	cbz	r3, 800edfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800ede8:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800edec:	7a9b      	ldrb	r3, [r3, #10]
 800edee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800edf2:	4313      	orrs	r3, r2
 800edf4:	bf0c      	ite	eq
 800edf6:	2301      	moveq	r3, #1
 800edf8:	2300      	movne	r3, #0
 800edfa:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800edfe:	4620      	mov	r0, r4
 800ee00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ee04:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800ee08:	2b00      	cmp	r3, #0
 800ee0a:	d0eb      	beq.n	800ede4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x38>
 800ee0c:	f640 1302 	movw	r3, #2306	; 0x902
 800ee10:	429c      	cmp	r4, r3
 800ee12:	d1e7      	bne.n	800ede4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x38>
 800ee14:	4601      	mov	r1, r0
 800ee16:	4628      	mov	r0, r5
 800ee18:	f7ff fbf9 	bl	800e60e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ee1c:	e7e1      	b.n	800ede2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x36>
	...

0800ee20 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800ee20:	4b01      	ldr	r3, [pc, #4]	; (800ee28 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800ee22:	6018      	str	r0, [r3, #0]
 800ee24:	4770      	bx	lr
 800ee26:	bf00      	nop
 800ee28:	20001538 	.word	0x20001538

0800ee2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800ee2c:	4b07      	ldr	r3, [pc, #28]	; (800ee4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800ee2e:	881a      	ldrh	r2, [r3, #0]
 800ee30:	4282      	cmp	r2, r0
 800ee32:	d809      	bhi.n	800ee48 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800ee34:	4b06      	ldr	r3, [pc, #24]	; (800ee50 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800ee36:	881b      	ldrh	r3, [r3, #0]
 800ee38:	4413      	add	r3, r2
 800ee3a:	4298      	cmp	r0, r3
 800ee3c:	da04      	bge.n	800ee48 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800ee3e:	4b05      	ldr	r3, [pc, #20]	; (800ee54 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800ee40:	681b      	ldr	r3, [r3, #0]
 800ee42:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800ee46:	4770      	bx	lr
 800ee48:	2000      	movs	r0, #0
 800ee4a:	4770      	bx	lr
 800ee4c:	20001558 	.word	0x20001558
 800ee50:	2000155c 	.word	0x2000155c
 800ee54:	2000153c 	.word	0x2000153c

0800ee58 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800ee58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ee5c:	4d26      	ldr	r5, [pc, #152]	; (800eef8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800ee5e:	682b      	ldr	r3, [r5, #0]
 800ee60:	2b00      	cmp	r3, #0
 800ee62:	d046      	beq.n	800eef2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800ee64:	4a25      	ldr	r2, [pc, #148]	; (800eefc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800ee66:	4f26      	ldr	r7, [pc, #152]	; (800ef00 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800ee68:	8810      	ldrh	r0, [r2, #0]
 800ee6a:	883c      	ldrh	r4, [r7, #0]
 800ee6c:	4e25      	ldr	r6, [pc, #148]	; (800ef04 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800ee6e:	4420      	add	r0, r4
 800ee70:	1c42      	adds	r2, r0, #1
 800ee72:	f022 0201 	bic.w	r2, r2, #1
 800ee76:	0412      	lsls	r2, r2, #16
 800ee78:	0c12      	lsrs	r2, r2, #16
 800ee7a:	0051      	lsls	r1, r2, #1
 800ee7c:	220e      	movs	r2, #14
 800ee7e:	fb02 fc04 	mul.w	ip, r2, r4
 800ee82:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800ee86:	4c20      	ldr	r4, [pc, #128]	; (800ef08 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800ee88:	eb03 0208 	add.w	r2, r3, r8
 800ee8c:	eb08 0e01 	add.w	lr, r8, r1
 800ee90:	6022      	str	r2, [r4, #0]
 800ee92:	eb03 020e 	add.w	r2, r3, lr
 800ee96:	6032      	str	r2, [r6, #0]
 800ee98:	44e6      	add	lr, ip
 800ee9a:	4a1c      	ldr	r2, [pc, #112]	; (800ef0c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800ee9c:	4473      	add	r3, lr
 800ee9e:	6013      	str	r3, [r2, #0]
 800eea0:	4a1b      	ldr	r2, [pc, #108]	; (800ef10 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800eea2:	2300      	movs	r3, #0
 800eea4:	8013      	strh	r3, [r2, #0]
 800eea6:	4a1b      	ldr	r2, [pc, #108]	; (800ef14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800eea8:	6812      	ldr	r2, [r2, #0]
 800eeaa:	eba2 0208 	sub.w	r2, r2, r8
 800eeae:	1a52      	subs	r2, r2, r1
 800eeb0:	4919      	ldr	r1, [pc, #100]	; (800ef18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800eeb2:	eba2 020c 	sub.w	r2, r2, ip
 800eeb6:	600a      	str	r2, [r1, #0]
 800eeb8:	4a18      	ldr	r2, [pc, #96]	; (800ef1c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800eeba:	469c      	mov	ip, r3
 800eebc:	8013      	strh	r3, [r2, #0]
 800eebe:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800eec2:	4283      	cmp	r3, r0
 800eec4:	d10d      	bne.n	800eee2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x8a>
 800eec6:	883d      	ldrh	r5, [r7, #0]
 800eec8:	6830      	ldr	r0, [r6, #0]
 800eeca:	2300      	movs	r3, #0
 800eecc:	240e      	movs	r4, #14
 800eece:	429d      	cmp	r5, r3
 800eed0:	d90f      	bls.n	800eef2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800eed2:	fb04 0203 	mla	r2, r4, r3, r0
 800eed6:	3301      	adds	r3, #1
 800eed8:	7b11      	ldrb	r1, [r2, #12]
 800eeda:	f36f 1145 	bfc	r1, #5, #1
 800eede:	7311      	strb	r1, [r2, #12]
 800eee0:	e7f5      	b.n	800eece <_ZN8touchgfx6Bitmap10clearCacheEv+0x76>
 800eee2:	682a      	ldr	r2, [r5, #0]
 800eee4:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800eee8:	6822      	ldr	r2, [r4, #0]
 800eeea:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800eeee:	3301      	adds	r3, #1
 800eef0:	e7e7      	b.n	800eec2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6a>
 800eef2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eef6:	bf00      	nop
 800eef8:	2000153c 	.word	0x2000153c
 800eefc:	20001558 	.word	0x20001558
 800ef00:	2000155c 	.word	0x2000155c
 800ef04:	20001540 	.word	0x20001540
 800ef08:	20001550 	.word	0x20001550
 800ef0c:	20001548 	.word	0x20001548
 800ef10:	2000155a 	.word	0x2000155a
 800ef14:	20001544 	.word	0x20001544
 800ef18:	20001554 	.word	0x20001554
 800ef1c:	2000154c 	.word	0x2000154c

0800ef20 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800ef20:	b510      	push	{r4, lr}
 800ef22:	4b10      	ldr	r3, [pc, #64]	; (800ef64 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800ef24:	681b      	ldr	r3, [r3, #0]
 800ef26:	b9db      	cbnz	r3, 800ef60 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800ef28:	b1d1      	cbz	r1, 800ef60 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800ef2a:	4b0f      	ldr	r3, [pc, #60]	; (800ef68 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800ef2c:	801a      	strh	r2, [r3, #0]
 800ef2e:	4b0f      	ldr	r3, [pc, #60]	; (800ef6c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800ef30:	881b      	ldrh	r3, [r3, #0]
 800ef32:	b292      	uxth	r2, r2
 800ef34:	240e      	movs	r4, #14
 800ef36:	4413      	add	r3, r2
 800ef38:	4362      	muls	r2, r4
 800ef3a:	2406      	movs	r4, #6
 800ef3c:	fb04 2203 	mla	r2, r4, r3, r2
 800ef40:	428a      	cmp	r2, r1
 800ef42:	d305      	bcc.n	800ef50 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800ef44:	4b0a      	ldr	r3, [pc, #40]	; (800ef70 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800ef46:	4a0b      	ldr	r2, [pc, #44]	; (800ef74 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800ef48:	480b      	ldr	r0, [pc, #44]	; (800ef78 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800ef4a:	2137      	movs	r1, #55	; 0x37
 800ef4c:	f00b fce6 	bl	801a91c <__assert_func>
 800ef50:	4b0a      	ldr	r3, [pc, #40]	; (800ef7c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800ef52:	6019      	str	r1, [r3, #0]
 800ef54:	4b0a      	ldr	r3, [pc, #40]	; (800ef80 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800ef56:	6018      	str	r0, [r3, #0]
 800ef58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef5c:	f7ff bf7c 	b.w	800ee58 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ef60:	bd10      	pop	{r4, pc}
 800ef62:	bf00      	nop
 800ef64:	20001548 	.word	0x20001548
 800ef68:	2000155c 	.word	0x2000155c
 800ef6c:	20001558 	.word	0x20001558
 800ef70:	0801dea2 	.word	0x0801dea2
 800ef74:	0801df37 	.word	0x0801df37
 800ef78:	0801de7d 	.word	0x0801de7d
 800ef7c:	20001544 	.word	0x20001544
 800ef80:	2000153c 	.word	0x2000153c

0800ef84 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800ef84:	b470      	push	{r4, r5, r6}
 800ef86:	4c07      	ldr	r4, [pc, #28]	; (800efa4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800ef88:	6826      	ldr	r6, [r4, #0]
 800ef8a:	4605      	mov	r5, r0
 800ef8c:	4610      	mov	r0, r2
 800ef8e:	9a03      	ldr	r2, [sp, #12]
 800ef90:	b936      	cbnz	r6, 800efa0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800ef92:	6025      	str	r5, [r4, #0]
 800ef94:	4c04      	ldr	r4, [pc, #16]	; (800efa8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800ef96:	8021      	strh	r1, [r4, #0]
 800ef98:	bc70      	pop	{r4, r5, r6}
 800ef9a:	4619      	mov	r1, r3
 800ef9c:	f7ff bfc0 	b.w	800ef20 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800efa0:	bc70      	pop	{r4, r5, r6}
 800efa2:	4770      	bx	lr
 800efa4:	20001560 	.word	0x20001560
 800efa8:	20001558 	.word	0x20001558

0800efac <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800efac:	b508      	push	{r3, lr}
 800efae:	4b14      	ldr	r3, [pc, #80]	; (800f000 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800efb0:	6819      	ldr	r1, [r3, #0]
 800efb2:	b931      	cbnz	r1, 800efc2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800efb4:	4b13      	ldr	r3, [pc, #76]	; (800f004 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800efb6:	4a14      	ldr	r2, [pc, #80]	; (800f008 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800efb8:	4814      	ldr	r0, [pc, #80]	; (800f00c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800efba:	f240 21e6 	movw	r1, #742	; 0x2e6
 800efbe:	f00b fcad 	bl	801a91c <__assert_func>
 800efc2:	4a13      	ldr	r2, [pc, #76]	; (800f010 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800efc4:	8803      	ldrh	r3, [r0, #0]
 800efc6:	8812      	ldrh	r2, [r2, #0]
 800efc8:	4293      	cmp	r3, r2
 800efca:	d204      	bcs.n	800efd6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800efcc:	2214      	movs	r2, #20
 800efce:	fb02 1303 	mla	r3, r2, r3, r1
 800efd2:	8918      	ldrh	r0, [r3, #8]
 800efd4:	bd08      	pop	{r3, pc}
 800efd6:	490f      	ldr	r1, [pc, #60]	; (800f014 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800efd8:	8809      	ldrh	r1, [r1, #0]
 800efda:	4411      	add	r1, r2
 800efdc:	428b      	cmp	r3, r1
 800efde:	da06      	bge.n	800efee <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800efe0:	1a9b      	subs	r3, r3, r2
 800efe2:	4a0d      	ldr	r2, [pc, #52]	; (800f018 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800efe4:	6812      	ldr	r2, [r2, #0]
 800efe6:	210e      	movs	r1, #14
 800efe8:	fb01 2303 	mla	r3, r1, r3, r2
 800efec:	e7f1      	b.n	800efd2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800efee:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800eff2:	4293      	cmp	r3, r2
 800eff4:	bf0a      	itet	eq
 800eff6:	4b09      	ldreq	r3, [pc, #36]	; (800f01c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800eff8:	2000      	movne	r0, #0
 800effa:	8818      	ldrheq	r0, [r3, #0]
 800effc:	e7ea      	b.n	800efd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800effe:	bf00      	nop
 800f000:	20001560 	.word	0x20001560
 800f004:	0801defb 	.word	0x0801defb
 800f008:	0801dfe4 	.word	0x0801dfe4
 800f00c:	0801de7d 	.word	0x0801de7d
 800f010:	20001558 	.word	0x20001558
 800f014:	2000155c 	.word	0x2000155c
 800f018:	20001540 	.word	0x20001540
 800f01c:	200014ac 	.word	0x200014ac

0800f020 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f020:	b508      	push	{r3, lr}
 800f022:	4b14      	ldr	r3, [pc, #80]	; (800f074 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f024:	6819      	ldr	r1, [r3, #0]
 800f026:	b931      	cbnz	r1, 800f036 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f028:	4b13      	ldr	r3, [pc, #76]	; (800f078 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f02a:	4a14      	ldr	r2, [pc, #80]	; (800f07c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f02c:	4814      	ldr	r0, [pc, #80]	; (800f080 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f02e:	f240 21fa 	movw	r1, #762	; 0x2fa
 800f032:	f00b fc73 	bl	801a91c <__assert_func>
 800f036:	4a13      	ldr	r2, [pc, #76]	; (800f084 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f038:	8803      	ldrh	r3, [r0, #0]
 800f03a:	8812      	ldrh	r2, [r2, #0]
 800f03c:	4293      	cmp	r3, r2
 800f03e:	d204      	bcs.n	800f04a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800f040:	2214      	movs	r2, #20
 800f042:	fb02 1303 	mla	r3, r2, r3, r1
 800f046:	8958      	ldrh	r0, [r3, #10]
 800f048:	bd08      	pop	{r3, pc}
 800f04a:	490f      	ldr	r1, [pc, #60]	; (800f088 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800f04c:	8809      	ldrh	r1, [r1, #0]
 800f04e:	4411      	add	r1, r2
 800f050:	428b      	cmp	r3, r1
 800f052:	da06      	bge.n	800f062 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800f054:	1a9b      	subs	r3, r3, r2
 800f056:	4a0d      	ldr	r2, [pc, #52]	; (800f08c <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800f058:	6812      	ldr	r2, [r2, #0]
 800f05a:	210e      	movs	r1, #14
 800f05c:	fb01 2303 	mla	r3, r1, r3, r2
 800f060:	e7f1      	b.n	800f046 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800f062:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f066:	4293      	cmp	r3, r2
 800f068:	bf0a      	itet	eq
 800f06a:	4b09      	ldreq	r3, [pc, #36]	; (800f090 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800f06c:	2000      	movne	r0, #0
 800f06e:	8818      	ldrheq	r0, [r3, #0]
 800f070:	e7ea      	b.n	800f048 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800f072:	bf00      	nop
 800f074:	20001560 	.word	0x20001560
 800f078:	0801defb 	.word	0x0801defb
 800f07c:	0801e010 	.word	0x0801e010
 800f080:	0801de7d 	.word	0x0801de7d
 800f084:	20001558 	.word	0x20001558
 800f088:	2000155c 	.word	0x2000155c
 800f08c:	20001540 	.word	0x20001540
 800f090:	200014ae 	.word	0x200014ae

0800f094 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800f094:	b510      	push	{r4, lr}
 800f096:	4b23      	ldr	r3, [pc, #140]	; (800f124 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800f098:	681c      	ldr	r4, [r3, #0]
 800f09a:	b934      	cbnz	r4, 800f0aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800f09c:	4b22      	ldr	r3, [pc, #136]	; (800f128 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800f09e:	4a23      	ldr	r2, [pc, #140]	; (800f12c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800f0a0:	4823      	ldr	r0, [pc, #140]	; (800f130 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800f0a2:	f240 310e 	movw	r1, #782	; 0x30e
 800f0a6:	f00b fc39 	bl	801a91c <__assert_func>
 800f0aa:	4a22      	ldr	r2, [pc, #136]	; (800f134 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800f0ac:	880b      	ldrh	r3, [r1, #0]
 800f0ae:	8812      	ldrh	r2, [r2, #0]
 800f0b0:	4293      	cmp	r3, r2
 800f0b2:	d211      	bcs.n	800f0d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800f0b4:	2214      	movs	r2, #20
 800f0b6:	fb02 4303 	mla	r3, r2, r3, r4
 800f0ba:	8a1a      	ldrh	r2, [r3, #16]
 800f0bc:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800f0c0:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800f0c4:	8a5b      	ldrh	r3, [r3, #18]
 800f0c6:	8004      	strh	r4, [r0, #0]
 800f0c8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f0cc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800f0d0:	8041      	strh	r1, [r0, #2]
 800f0d2:	8082      	strh	r2, [r0, #4]
 800f0d4:	80c3      	strh	r3, [r0, #6]
 800f0d6:	e00e      	b.n	800f0f6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f0d8:	4917      	ldr	r1, [pc, #92]	; (800f138 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800f0da:	8809      	ldrh	r1, [r1, #0]
 800f0dc:	4411      	add	r1, r2
 800f0de:	428b      	cmp	r3, r1
 800f0e0:	da0a      	bge.n	800f0f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800f0e2:	1a9b      	subs	r3, r3, r2
 800f0e4:	4a15      	ldr	r2, [pc, #84]	; (800f13c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800f0e6:	6812      	ldr	r2, [r2, #0]
 800f0e8:	210e      	movs	r1, #14
 800f0ea:	fb01 2303 	mla	r3, r1, r3, r2
 800f0ee:	681a      	ldr	r2, [r3, #0]
 800f0f0:	6002      	str	r2, [r0, #0]
 800f0f2:	685a      	ldr	r2, [r3, #4]
 800f0f4:	6042      	str	r2, [r0, #4]
 800f0f6:	bd10      	pop	{r4, pc}
 800f0f8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f0fc:	4293      	cmp	r3, r2
 800f0fe:	d10b      	bne.n	800f118 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800f100:	4b0f      	ldr	r3, [pc, #60]	; (800f140 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800f102:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f106:	4b0f      	ldr	r3, [pc, #60]	; (800f144 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800f108:	8081      	strh	r1, [r0, #4]
 800f10a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f10e:	80c2      	strh	r2, [r0, #6]
 800f110:	2300      	movs	r3, #0
 800f112:	8003      	strh	r3, [r0, #0]
 800f114:	8043      	strh	r3, [r0, #2]
 800f116:	e7ee      	b.n	800f0f6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f118:	2300      	movs	r3, #0
 800f11a:	8003      	strh	r3, [r0, #0]
 800f11c:	8043      	strh	r3, [r0, #2]
 800f11e:	8083      	strh	r3, [r0, #4]
 800f120:	e7d8      	b.n	800f0d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800f122:	bf00      	nop
 800f124:	20001560 	.word	0x20001560
 800f128:	0801defb 	.word	0x0801defb
 800f12c:	0801df7d 	.word	0x0801df7d
 800f130:	0801de7d 	.word	0x0801de7d
 800f134:	20001558 	.word	0x20001558
 800f138:	2000155c 	.word	0x2000155c
 800f13c:	20001540 	.word	0x20001540
 800f140:	200014ac 	.word	0x200014ac
 800f144:	200014ae 	.word	0x200014ae

0800f148 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800f148:	4b18      	ldr	r3, [pc, #96]	; (800f1ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800f14a:	681b      	ldr	r3, [r3, #0]
 800f14c:	b34b      	cbz	r3, 800f1a2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f14e:	4a18      	ldr	r2, [pc, #96]	; (800f1b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800f150:	8800      	ldrh	r0, [r0, #0]
 800f152:	8812      	ldrh	r2, [r2, #0]
 800f154:	4290      	cmp	r0, r2
 800f156:	d211      	bcs.n	800f17c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800f158:	2214      	movs	r2, #20
 800f15a:	fb02 3300 	mla	r3, r2, r0, r3
 800f15e:	8a1a      	ldrh	r2, [r3, #16]
 800f160:	8919      	ldrh	r1, [r3, #8]
 800f162:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f166:	428a      	cmp	r2, r1
 800f168:	db1d      	blt.n	800f1a6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f16a:	8a58      	ldrh	r0, [r3, #18]
 800f16c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800f170:	895b      	ldrh	r3, [r3, #10]
 800f172:	4298      	cmp	r0, r3
 800f174:	bfac      	ite	ge
 800f176:	2000      	movge	r0, #0
 800f178:	2001      	movlt	r0, #1
 800f17a:	4770      	bx	lr
 800f17c:	4b0d      	ldr	r3, [pc, #52]	; (800f1b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800f17e:	881b      	ldrh	r3, [r3, #0]
 800f180:	4413      	add	r3, r2
 800f182:	4298      	cmp	r0, r3
 800f184:	da0d      	bge.n	800f1a2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f186:	4b0c      	ldr	r3, [pc, #48]	; (800f1b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800f188:	681b      	ldr	r3, [r3, #0]
 800f18a:	1a80      	subs	r0, r0, r2
 800f18c:	220e      	movs	r2, #14
 800f18e:	fb02 3300 	mla	r3, r2, r0, r3
 800f192:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800f196:	891a      	ldrh	r2, [r3, #8]
 800f198:	4291      	cmp	r1, r2
 800f19a:	db04      	blt.n	800f1a6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f19c:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800f1a0:	e7e6      	b.n	800f170 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800f1a2:	2000      	movs	r0, #0
 800f1a4:	4770      	bx	lr
 800f1a6:	2001      	movs	r0, #1
 800f1a8:	4770      	bx	lr
 800f1aa:	bf00      	nop
 800f1ac:	20001560 	.word	0x20001560
 800f1b0:	20001558 	.word	0x20001558
 800f1b4:	2000155c 	.word	0x2000155c
 800f1b8:	20001540 	.word	0x20001540

0800f1bc <_ZNK8touchgfx6Bitmap7getDataEv>:
 800f1bc:	b508      	push	{r3, lr}
 800f1be:	4b12      	ldr	r3, [pc, #72]	; (800f208 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800f1c0:	6819      	ldr	r1, [r3, #0]
 800f1c2:	b931      	cbnz	r1, 800f1d2 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800f1c4:	4b11      	ldr	r3, [pc, #68]	; (800f20c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800f1c6:	4a12      	ldr	r2, [pc, #72]	; (800f210 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800f1c8:	4812      	ldr	r0, [pc, #72]	; (800f214 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800f1ca:	f240 3132 	movw	r1, #818	; 0x332
 800f1ce:	f00b fba5 	bl	801a91c <__assert_func>
 800f1d2:	8803      	ldrh	r3, [r0, #0]
 800f1d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f1d8:	4293      	cmp	r3, r2
 800f1da:	d012      	beq.n	800f202 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800f1dc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f1e0:	4293      	cmp	r3, r2
 800f1e2:	d103      	bne.n	800f1ec <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800f1e4:	4b0c      	ldr	r3, [pc, #48]	; (800f218 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800f1e6:	681b      	ldr	r3, [r3, #0]
 800f1e8:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800f1ea:	bd08      	pop	{r3, pc}
 800f1ec:	4a0b      	ldr	r2, [pc, #44]	; (800f21c <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800f1ee:	6812      	ldr	r2, [r2, #0]
 800f1f0:	b11a      	cbz	r2, 800f1fa <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800f1f2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800f1f6:	2800      	cmp	r0, #0
 800f1f8:	d1f7      	bne.n	800f1ea <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f1fa:	2214      	movs	r2, #20
 800f1fc:	4353      	muls	r3, r2
 800f1fe:	58c8      	ldr	r0, [r1, r3]
 800f200:	e7f3      	b.n	800f1ea <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f202:	2000      	movs	r0, #0
 800f204:	e7f1      	b.n	800f1ea <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f206:	bf00      	nop
 800f208:	20001560 	.word	0x20001560
 800f20c:	0801defb 	.word	0x0801defb
 800f210:	0801dfb3 	.word	0x0801dfb3
 800f214:	0801de7d 	.word	0x0801de7d
 800f218:	200014b8 	.word	0x200014b8
 800f21c:	2000153c 	.word	0x2000153c

0800f220 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800f220:	8802      	ldrh	r2, [r0, #0]
 800f222:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800f226:	429a      	cmp	r2, r3
 800f228:	d840      	bhi.n	800f2ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f22a:	4b21      	ldr	r3, [pc, #132]	; (800f2b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800f22c:	881b      	ldrh	r3, [r3, #0]
 800f22e:	429a      	cmp	r2, r3
 800f230:	d220      	bcs.n	800f274 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800f232:	4b20      	ldr	r3, [pc, #128]	; (800f2b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800f234:	6819      	ldr	r1, [r3, #0]
 800f236:	2314      	movs	r3, #20
 800f238:	fb03 1302 	mla	r3, r3, r2, r1
 800f23c:	6858      	ldr	r0, [r3, #4]
 800f23e:	2800      	cmp	r0, #0
 800f240:	d035      	beq.n	800f2ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f242:	491d      	ldr	r1, [pc, #116]	; (800f2b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800f244:	6809      	ldr	r1, [r1, #0]
 800f246:	2900      	cmp	r1, #0
 800f248:	d031      	beq.n	800f2ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f24a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800f24e:	b371      	cbz	r1, 800f2ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f250:	895a      	ldrh	r2, [r3, #10]
 800f252:	8918      	ldrh	r0, [r3, #8]
 800f254:	4350      	muls	r0, r2
 800f256:	7c5a      	ldrb	r2, [r3, #17]
 800f258:	7cdb      	ldrb	r3, [r3, #19]
 800f25a:	0952      	lsrs	r2, r2, #5
 800f25c:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800f260:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800f264:	2b0b      	cmp	r3, #11
 800f266:	bf18      	it	ne
 800f268:	0040      	lslne	r0, r0, #1
 800f26a:	3003      	adds	r0, #3
 800f26c:	f020 0003 	bic.w	r0, r0, #3
 800f270:	4408      	add	r0, r1
 800f272:	4770      	bx	lr
 800f274:	4911      	ldr	r1, [pc, #68]	; (800f2bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800f276:	8809      	ldrh	r1, [r1, #0]
 800f278:	4419      	add	r1, r3
 800f27a:	428a      	cmp	r2, r1
 800f27c:	da16      	bge.n	800f2ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f27e:	4910      	ldr	r1, [pc, #64]	; (800f2c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800f280:	6809      	ldr	r1, [r1, #0]
 800f282:	1ad3      	subs	r3, r2, r3
 800f284:	200e      	movs	r0, #14
 800f286:	fb00 1303 	mla	r3, r0, r3, r1
 800f28a:	7b19      	ldrb	r1, [r3, #12]
 800f28c:	f001 011f 	and.w	r1, r1, #31
 800f290:	290b      	cmp	r1, #11
 800f292:	d10b      	bne.n	800f2ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f294:	8919      	ldrh	r1, [r3, #8]
 800f296:	8958      	ldrh	r0, [r3, #10]
 800f298:	4b07      	ldr	r3, [pc, #28]	; (800f2b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800f29a:	4348      	muls	r0, r1
 800f29c:	6819      	ldr	r1, [r3, #0]
 800f29e:	3003      	adds	r0, #3
 800f2a0:	f020 0303 	bic.w	r3, r0, #3
 800f2a4:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800f2a8:	4418      	add	r0, r3
 800f2aa:	4770      	bx	lr
 800f2ac:	2000      	movs	r0, #0
 800f2ae:	4770      	bx	lr
 800f2b0:	20001558 	.word	0x20001558
 800f2b4:	20001560 	.word	0x20001560
 800f2b8:	2000153c 	.word	0x2000153c
 800f2bc:	2000155c 	.word	0x2000155c
 800f2c0:	20001540 	.word	0x20001540

0800f2c4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800f2c4:	4b19      	ldr	r3, [pc, #100]	; (800f32c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800f2c6:	6819      	ldr	r1, [r3, #0]
 800f2c8:	8803      	ldrh	r3, [r0, #0]
 800f2ca:	b1e9      	cbz	r1, 800f308 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800f2cc:	4a18      	ldr	r2, [pc, #96]	; (800f330 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800f2ce:	8812      	ldrh	r2, [r2, #0]
 800f2d0:	429a      	cmp	r2, r3
 800f2d2:	d90a      	bls.n	800f2ea <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800f2d4:	2214      	movs	r2, #20
 800f2d6:	fb02 1303 	mla	r3, r2, r3, r1
 800f2da:	7c58      	ldrb	r0, [r3, #17]
 800f2dc:	0942      	lsrs	r2, r0, #5
 800f2de:	7cd8      	ldrb	r0, [r3, #19]
 800f2e0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800f2e4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800f2e8:	4770      	bx	lr
 800f2ea:	4912      	ldr	r1, [pc, #72]	; (800f334 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800f2ec:	8809      	ldrh	r1, [r1, #0]
 800f2ee:	4411      	add	r1, r2
 800f2f0:	428b      	cmp	r3, r1
 800f2f2:	da09      	bge.n	800f308 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800f2f4:	1a9b      	subs	r3, r3, r2
 800f2f6:	4a10      	ldr	r2, [pc, #64]	; (800f338 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800f2f8:	6812      	ldr	r2, [r2, #0]
 800f2fa:	210e      	movs	r1, #14
 800f2fc:	fb01 2303 	mla	r3, r1, r3, r2
 800f300:	7b18      	ldrb	r0, [r3, #12]
 800f302:	f000 001f 	and.w	r0, r0, #31
 800f306:	4770      	bx	lr
 800f308:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f30c:	4293      	cmp	r3, r2
 800f30e:	d10a      	bne.n	800f326 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800f310:	4b0a      	ldr	r3, [pc, #40]	; (800f33c <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800f312:	681b      	ldr	r3, [r3, #0]
 800f314:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f318:	b10a      	cbz	r2, 800f31e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800f31a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f31c:	b900      	cbnz	r0, 800f320 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800f31e:	6898      	ldr	r0, [r3, #8]
 800f320:	6803      	ldr	r3, [r0, #0]
 800f322:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f324:	4718      	bx	r3
 800f326:	2000      	movs	r0, #0
 800f328:	4770      	bx	lr
 800f32a:	bf00      	nop
 800f32c:	20001560 	.word	0x20001560
 800f330:	20001558 	.word	0x20001558
 800f334:	2000155c 	.word	0x2000155c
 800f338:	20001540 	.word	0x20001540
 800f33c:	200014b8 	.word	0x200014b8

0800f340 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800f340:	2010      	movs	r0, #16
 800f342:	4770      	bx	lr

0800f344 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800f344:	2000      	movs	r0, #0
 800f346:	4770      	bx	lr

0800f348 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800f348:	00d2      	lsls	r2, r2, #3
 800f34a:	0209      	lsls	r1, r1, #8
 800f34c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800f350:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800f354:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800f358:	4310      	orrs	r0, r2
 800f35a:	4770      	bx	lr

0800f35c <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800f35c:	1209      	asrs	r1, r1, #8
 800f35e:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800f362:	4770      	bx	lr

0800f364 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800f364:	f3c1 01cc 	ubfx	r1, r1, #3, #13
 800f368:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800f36c:	4770      	bx	lr

0800f36e <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800f36e:	00c9      	lsls	r1, r1, #3
 800f370:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800f374:	4770      	bx	lr

0800f376 <_ZN8touchgfx8LCD16bpp4initEv>:
 800f376:	4770      	bx	lr

0800f378 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800f378:	2bff      	cmp	r3, #255	; 0xff
 800f37a:	d050      	beq.n	800f41e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800f37c:	2a0b      	cmp	r2, #11
 800f37e:	d04a      	beq.n	800f416 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f380:	d80e      	bhi.n	800f3a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800f382:	2a03      	cmp	r2, #3
 800f384:	d03f      	beq.n	800f406 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800f386:	d804      	bhi.n	800f392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800f388:	2a01      	cmp	r2, #1
 800f38a:	d03e      	beq.n	800f40a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800f38c:	d93f      	bls.n	800f40e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800f38e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800f390:	4770      	bx	lr
 800f392:	2a09      	cmp	r2, #9
 800f394:	d03f      	beq.n	800f416 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f396:	d83c      	bhi.n	800f412 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f398:	2a08      	cmp	r2, #8
 800f39a:	d03a      	beq.n	800f412 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f39c:	2000      	movs	r0, #0
 800f39e:	4770      	bx	lr
 800f3a0:	2a2f      	cmp	r2, #47	; 0x2f
 800f3a2:	d024      	beq.n	800f3ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800f3a4:	d80d      	bhi.n	800f3c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800f3a6:	2a2d      	cmp	r2, #45	; 0x2d
 800f3a8:	d014      	beq.n	800f3d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800f3aa:	d826      	bhi.n	800f3fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800f3ac:	2a2c      	cmp	r2, #44	; 0x2c
 800f3ae:	d1f5      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f3b0:	684b      	ldr	r3, [r1, #4]
 800f3b2:	781b      	ldrb	r3, [r3, #0]
 800f3b4:	2b01      	cmp	r3, #1
 800f3b6:	d018      	beq.n	800f3ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800f3b8:	d323      	bcc.n	800f402 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800f3ba:	2b02      	cmp	r3, #2
 800f3bc:	d1ee      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f3be:	6880      	ldr	r0, [r0, #8]
 800f3c0:	4770      	bx	lr
 800f3c2:	2a31      	cmp	r2, #49	; 0x31
 800f3c4:	d004      	beq.n	800f3d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800f3c6:	d328      	bcc.n	800f41a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800f3c8:	2a32      	cmp	r2, #50	; 0x32
 800f3ca:	d026      	beq.n	800f41a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800f3cc:	2a33      	cmp	r2, #51	; 0x33
 800f3ce:	d1e5      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f3d0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800f3d2:	4770      	bx	lr
 800f3d4:	684b      	ldr	r3, [r1, #4]
 800f3d6:	781b      	ldrb	r3, [r3, #0]
 800f3d8:	2b01      	cmp	r3, #1
 800f3da:	d004      	beq.n	800f3e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800f3dc:	d30b      	bcc.n	800f3f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800f3de:	2b02      	cmp	r3, #2
 800f3e0:	d1dc      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f3e2:	6900      	ldr	r0, [r0, #16]
 800f3e4:	4770      	bx	lr
 800f3e6:	6a00      	ldr	r0, [r0, #32]
 800f3e8:	4770      	bx	lr
 800f3ea:	6980      	ldr	r0, [r0, #24]
 800f3ec:	4770      	bx	lr
 800f3ee:	684b      	ldr	r3, [r1, #4]
 800f3f0:	781b      	ldrb	r3, [r3, #0]
 800f3f2:	2b00      	cmp	r3, #0
 800f3f4:	d1d2      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f3f6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800f3f8:	4770      	bx	lr
 800f3fa:	684b      	ldr	r3, [r1, #4]
 800f3fc:	781b      	ldrb	r3, [r3, #0]
 800f3fe:	2b00      	cmp	r3, #0
 800f400:	d1cc      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f402:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800f404:	4770      	bx	lr
 800f406:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800f408:	4770      	bx	lr
 800f40a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800f40c:	4770      	bx	lr
 800f40e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800f410:	4770      	bx	lr
 800f412:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800f414:	4770      	bx	lr
 800f416:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800f418:	4770      	bx	lr
 800f41a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800f41c:	4770      	bx	lr
 800f41e:	2a0b      	cmp	r2, #11
 800f420:	d049      	beq.n	800f4b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800f422:	d80e      	bhi.n	800f442 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800f424:	2a03      	cmp	r2, #3
 800f426:	d040      	beq.n	800f4aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800f428:	d804      	bhi.n	800f434 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800f42a:	2a01      	cmp	r2, #1
 800f42c:	d03f      	beq.n	800f4ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800f42e:	d940      	bls.n	800f4b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800f430:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800f432:	4770      	bx	lr
 800f434:	2a09      	cmp	r2, #9
 800f436:	d03e      	beq.n	800f4b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800f438:	d801      	bhi.n	800f43e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800f43a:	2a08      	cmp	r2, #8
 800f43c:	d1ae      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f43e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800f440:	4770      	bx	lr
 800f442:	2a2f      	cmp	r2, #47	; 0x2f
 800f444:	d024      	beq.n	800f490 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800f446:	d80d      	bhi.n	800f464 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800f448:	2a2d      	cmp	r2, #45	; 0x2d
 800f44a:	d014      	beq.n	800f476 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800f44c:	d826      	bhi.n	800f49c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800f44e:	2a2c      	cmp	r2, #44	; 0x2c
 800f450:	d1a4      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f452:	684b      	ldr	r3, [r1, #4]
 800f454:	781b      	ldrb	r3, [r3, #0]
 800f456:	2b01      	cmp	r3, #1
 800f458:	d018      	beq.n	800f48c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800f45a:	d324      	bcc.n	800f4a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800f45c:	2b02      	cmp	r3, #2
 800f45e:	d19d      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f460:	68c0      	ldr	r0, [r0, #12]
 800f462:	4770      	bx	lr
 800f464:	2a31      	cmp	r2, #49	; 0x31
 800f466:	d004      	beq.n	800f472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800f468:	d327      	bcc.n	800f4ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800f46a:	2a32      	cmp	r2, #50	; 0x32
 800f46c:	d025      	beq.n	800f4ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800f46e:	2a33      	cmp	r2, #51	; 0x33
 800f470:	d194      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f472:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800f474:	4770      	bx	lr
 800f476:	684b      	ldr	r3, [r1, #4]
 800f478:	781b      	ldrb	r3, [r3, #0]
 800f47a:	2b01      	cmp	r3, #1
 800f47c:	d004      	beq.n	800f488 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800f47e:	d30b      	bcc.n	800f498 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800f480:	2b02      	cmp	r3, #2
 800f482:	d18b      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f484:	6940      	ldr	r0, [r0, #20]
 800f486:	4770      	bx	lr
 800f488:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800f48a:	4770      	bx	lr
 800f48c:	69c0      	ldr	r0, [r0, #28]
 800f48e:	4770      	bx	lr
 800f490:	684b      	ldr	r3, [r1, #4]
 800f492:	781b      	ldrb	r3, [r3, #0]
 800f494:	2b00      	cmp	r3, #0
 800f496:	d181      	bne.n	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f498:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800f49a:	4770      	bx	lr
 800f49c:	684b      	ldr	r3, [r1, #4]
 800f49e:	781b      	ldrb	r3, [r3, #0]
 800f4a0:	2b00      	cmp	r3, #0
 800f4a2:	f47f af7b 	bne.w	800f39c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f4a6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800f4a8:	4770      	bx	lr
 800f4aa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f4ac:	4770      	bx	lr
 800f4ae:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800f4b0:	4770      	bx	lr
 800f4b2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800f4b4:	4770      	bx	lr
 800f4b6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800f4b8:	4770      	bx	lr
 800f4ba:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800f4bc:	4770      	bx	lr

0800f4be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f4be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4c2:	b087      	sub	sp, #28
 800f4c4:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800f4c6:	9205      	str	r2, [sp, #20]
 800f4c8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f4cc:	9202      	str	r2, [sp, #8]
 800f4ce:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800f4d2:	9101      	str	r1, [sp, #4]
 800f4d4:	6871      	ldr	r1, [r6, #4]
 800f4d6:	981a      	ldr	r0, [sp, #104]	; 0x68
 800f4d8:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800f4dc:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800f4e0:	fb01 2505 	mla	r5, r1, r5, r2
 800f4e4:	6832      	ldr	r2, [r6, #0]
 800f4e6:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800f4ea:	6802      	ldr	r2, [r0, #0]
 800f4ec:	9203      	str	r2, [sp, #12]
 800f4ee:	6842      	ldr	r2, [r0, #4]
 800f4f0:	fa1f fe84 	uxth.w	lr, r4
 800f4f4:	3204      	adds	r2, #4
 800f4f6:	43e4      	mvns	r4, r4
 800f4f8:	9204      	str	r2, [sp, #16]
 800f4fa:	b2e4      	uxtb	r4, r4
 800f4fc:	9a01      	ldr	r2, [sp, #4]
 800f4fe:	2a00      	cmp	r2, #0
 800f500:	dc03      	bgt.n	800f50a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f502:	9a05      	ldr	r2, [sp, #20]
 800f504:	2a00      	cmp	r2, #0
 800f506:	f340 8119 	ble.w	800f73c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800f50a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f50c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f510:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f512:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f516:	2b00      	cmp	r3, #0
 800f518:	dd0f      	ble.n	800f53a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800f51a:	1408      	asrs	r0, r1, #16
 800f51c:	d406      	bmi.n	800f52c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f51e:	4540      	cmp	r0, r8
 800f520:	da04      	bge.n	800f52c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f522:	1410      	asrs	r0, r2, #16
 800f524:	d402      	bmi.n	800f52c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f526:	9e02      	ldr	r6, [sp, #8]
 800f528:	42b0      	cmp	r0, r6
 800f52a:	db07      	blt.n	800f53c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f52c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f52e:	4401      	add	r1, r0
 800f530:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f532:	3b01      	subs	r3, #1
 800f534:	4402      	add	r2, r0
 800f536:	3502      	adds	r5, #2
 800f538:	e7ed      	b.n	800f516 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800f53a:	d00f      	beq.n	800f55c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f53c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f53e:	1e58      	subs	r0, r3, #1
 800f540:	fb06 1600 	mla	r6, r6, r0, r1
 800f544:	1436      	asrs	r6, r6, #16
 800f546:	d547      	bpl.n	800f5d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800f548:	469b      	mov	fp, r3
 800f54a:	46aa      	mov	sl, r5
 800f54c:	f1bb 0f00 	cmp.w	fp, #0
 800f550:	f300 809e 	bgt.w	800f690 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800f554:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f558:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f55c:	9b01      	ldr	r3, [sp, #4]
 800f55e:	2b00      	cmp	r3, #0
 800f560:	f340 80ec 	ble.w	800f73c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800f564:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f568:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f56c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f570:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f572:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f576:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f57a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f57e:	eef0 6a62 	vmov.f32	s13, s5
 800f582:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f586:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f58a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f58e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f592:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f596:	eef0 6a43 	vmov.f32	s13, s6
 800f59a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f59e:	ee12 2a90 	vmov	r2, s5
 800f5a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f5a6:	fb92 f3f3 	sdiv	r3, r2, r3
 800f5aa:	ee13 2a10 	vmov	r2, s6
 800f5ae:	9313      	str	r3, [sp, #76]	; 0x4c
 800f5b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f5b2:	fb92 f3f3 	sdiv	r3, r2, r3
 800f5b6:	9314      	str	r3, [sp, #80]	; 0x50
 800f5b8:	9b01      	ldr	r3, [sp, #4]
 800f5ba:	9a05      	ldr	r2, [sp, #20]
 800f5bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f5c0:	3b01      	subs	r3, #1
 800f5c2:	9301      	str	r3, [sp, #4]
 800f5c4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f5c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f5ca:	eeb0 3a67 	vmov.f32	s6, s15
 800f5ce:	bf08      	it	eq
 800f5d0:	4613      	moveq	r3, r2
 800f5d2:	eef0 2a47 	vmov.f32	s5, s14
 800f5d6:	e791      	b.n	800f4fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f5d8:	4546      	cmp	r6, r8
 800f5da:	dab5      	bge.n	800f548 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f5dc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f5de:	fb06 2000 	mla	r0, r6, r0, r2
 800f5e2:	1400      	asrs	r0, r0, #16
 800f5e4:	d4b0      	bmi.n	800f548 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f5e6:	9e02      	ldr	r6, [sp, #8]
 800f5e8:	42b0      	cmp	r0, r6
 800f5ea:	daad      	bge.n	800f548 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f5ec:	469a      	mov	sl, r3
 800f5ee:	46ab      	mov	fp, r5
 800f5f0:	f1ba 0f00 	cmp.w	sl, #0
 800f5f4:	ddae      	ble.n	800f554 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f5f6:	9f03      	ldr	r7, [sp, #12]
 800f5f8:	1410      	asrs	r0, r2, #16
 800f5fa:	140e      	asrs	r6, r1, #16
 800f5fc:	fb08 7000 	mla	r0, r8, r0, r7
 800f600:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f604:	5d80      	ldrb	r0, [r0, r6]
 800f606:	9e04      	ldr	r6, [sp, #16]
 800f608:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f60c:	f8bb 6000 	ldrh.w	r6, [fp]
 800f610:	1237      	asrs	r7, r6, #8
 800f612:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f616:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f61a:	fb17 f704 	smulbb	r7, r7, r4
 800f61e:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f622:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f626:	00f6      	lsls	r6, r6, #3
 800f628:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f62c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f630:	10c7      	asrs	r7, r0, #3
 800f632:	b2f6      	uxtb	r6, r6
 800f634:	00c0      	lsls	r0, r0, #3
 800f636:	fb19 f904 	smulbb	r9, r9, r4
 800f63a:	fb16 f604 	smulbb	r6, r6, r4
 800f63e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f642:	b2c0      	uxtb	r0, r0
 800f644:	fa1f fc8c 	uxth.w	ip, ip
 800f648:	fb07 970e 	mla	r7, r7, lr, r9
 800f64c:	fb00 600e 	mla	r0, r0, lr, r6
 800f650:	b280      	uxth	r0, r0
 800f652:	b2bf      	uxth	r7, r7
 800f654:	f10c 0601 	add.w	r6, ip, #1
 800f658:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f65c:	f107 0901 	add.w	r9, r7, #1
 800f660:	1c46      	adds	r6, r0, #1
 800f662:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f666:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f66a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f66c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f670:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f674:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f678:	ea4c 0c06 	orr.w	ip, ip, r6
 800f67c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f680:	4401      	add	r1, r0
 800f682:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f684:	ea4c 0c09 	orr.w	ip, ip, r9
 800f688:	f82b cb02 	strh.w	ip, [fp], #2
 800f68c:	4402      	add	r2, r0
 800f68e:	e7af      	b.n	800f5f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800f690:	140e      	asrs	r6, r1, #16
 800f692:	d44a      	bmi.n	800f72a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f694:	4546      	cmp	r6, r8
 800f696:	da48      	bge.n	800f72a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f698:	1410      	asrs	r0, r2, #16
 800f69a:	d446      	bmi.n	800f72a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f69c:	9f02      	ldr	r7, [sp, #8]
 800f69e:	42b8      	cmp	r0, r7
 800f6a0:	da43      	bge.n	800f72a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f6a2:	9f03      	ldr	r7, [sp, #12]
 800f6a4:	fb08 7000 	mla	r0, r8, r0, r7
 800f6a8:	5d80      	ldrb	r0, [r0, r6]
 800f6aa:	9e04      	ldr	r6, [sp, #16]
 800f6ac:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f6b0:	f8ba 6000 	ldrh.w	r6, [sl]
 800f6b4:	1237      	asrs	r7, r6, #8
 800f6b6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f6ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f6be:	fb17 f704 	smulbb	r7, r7, r4
 800f6c2:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f6c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f6ca:	00f6      	lsls	r6, r6, #3
 800f6cc:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f6d0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f6d4:	10c7      	asrs	r7, r0, #3
 800f6d6:	b2f6      	uxtb	r6, r6
 800f6d8:	00c0      	lsls	r0, r0, #3
 800f6da:	fb19 f904 	smulbb	r9, r9, r4
 800f6de:	fb16 f604 	smulbb	r6, r6, r4
 800f6e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f6e6:	b2c0      	uxtb	r0, r0
 800f6e8:	fa1f fc8c 	uxth.w	ip, ip
 800f6ec:	fb07 970e 	mla	r7, r7, lr, r9
 800f6f0:	fb00 600e 	mla	r0, r0, lr, r6
 800f6f4:	b2bf      	uxth	r7, r7
 800f6f6:	b280      	uxth	r0, r0
 800f6f8:	f10c 0601 	add.w	r6, ip, #1
 800f6fc:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f700:	f107 0901 	add.w	r9, r7, #1
 800f704:	1c46      	adds	r6, r0, #1
 800f706:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f70a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f70e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f712:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f716:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f71a:	ea4c 0c06 	orr.w	ip, ip, r6
 800f71e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f722:	ea4c 0c09 	orr.w	ip, ip, r9
 800f726:	f8aa c000 	strh.w	ip, [sl]
 800f72a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f72c:	4401      	add	r1, r0
 800f72e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f730:	f10a 0a02 	add.w	sl, sl, #2
 800f734:	4402      	add	r2, r0
 800f736:	f10b 3bff 	add.w	fp, fp, #4294967295
 800f73a:	e707      	b.n	800f54c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f73c:	b007      	add	sp, #28
 800f73e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f742 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f742:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f746:	b085      	sub	sp, #20
 800f748:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800f74c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f74e:	9203      	str	r2, [sp, #12]
 800f750:	6842      	ldr	r2, [r0, #4]
 800f752:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f754:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800f756:	6800      	ldr	r0, [r0, #0]
 800f758:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800f75c:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800f760:	4696      	mov	lr, r2
 800f762:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f764:	fb0e 2505 	mla	r5, lr, r5, r2
 800f768:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f76c:	6860      	ldr	r0, [r4, #4]
 800f76e:	6822      	ldr	r2, [r4, #0]
 800f770:	9201      	str	r2, [sp, #4]
 800f772:	1d02      	adds	r2, r0, #4
 800f774:	9202      	str	r2, [sp, #8]
 800f776:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f77a:	2900      	cmp	r1, #0
 800f77c:	dc03      	bgt.n	800f786 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800f77e:	9a03      	ldr	r2, [sp, #12]
 800f780:	2a00      	cmp	r2, #0
 800f782:	f340 809b 	ble.w	800f8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800f786:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f788:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800f78c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f78e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f792:	2b00      	cmp	r3, #0
 800f794:	dd0e      	ble.n	800f7b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800f796:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800f79a:	d406      	bmi.n	800f7aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f79c:	45e6      	cmp	lr, ip
 800f79e:	da04      	bge.n	800f7aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f7a0:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800f7a4:	d401      	bmi.n	800f7aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f7a6:	45c6      	cmp	lr, r8
 800f7a8:	db05      	blt.n	800f7b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f7aa:	443c      	add	r4, r7
 800f7ac:	4430      	add	r0, r6
 800f7ae:	3b01      	subs	r3, #1
 800f7b0:	3502      	adds	r5, #2
 800f7b2:	e7ee      	b.n	800f792 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800f7b4:	d010      	beq.n	800f7d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f7b6:	f103 3eff 	add.w	lr, r3, #4294967295
 800f7ba:	fb07 490e 	mla	r9, r7, lr, r4
 800f7be:	ea5f 4929 	movs.w	r9, r9, asr #16
 800f7c2:	d53d      	bpl.n	800f840 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800f7c4:	469e      	mov	lr, r3
 800f7c6:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800f7ca:	f1be 0f00 	cmp.w	lr, #0
 800f7ce:	dc58      	bgt.n	800f882 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800f7d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f7d4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f7d8:	2900      	cmp	r1, #0
 800f7da:	dd6f      	ble.n	800f8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800f7dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f7e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f7e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f7e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f7ea:	3901      	subs	r1, #1
 800f7ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f7f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f7f4:	eeb0 6a62 	vmov.f32	s12, s5
 800f7f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f7fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f800:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f804:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f808:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f80c:	eeb0 6a43 	vmov.f32	s12, s6
 800f810:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f814:	ee12 2a90 	vmov	r2, s5
 800f818:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f81c:	fb92 f7f3 	sdiv	r7, r2, r3
 800f820:	ee13 2a10 	vmov	r2, s6
 800f824:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f828:	fb92 f6f3 	sdiv	r6, r2, r3
 800f82c:	9a03      	ldr	r2, [sp, #12]
 800f82e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f832:	bf08      	it	eq
 800f834:	4613      	moveq	r3, r2
 800f836:	eeb0 3a67 	vmov.f32	s6, s15
 800f83a:	eef0 2a47 	vmov.f32	s5, s14
 800f83e:	e79c      	b.n	800f77a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800f840:	45e1      	cmp	r9, ip
 800f842:	dabf      	bge.n	800f7c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f844:	fb06 0e0e 	mla	lr, r6, lr, r0
 800f848:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800f84c:	d4ba      	bmi.n	800f7c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f84e:	45c6      	cmp	lr, r8
 800f850:	dab8      	bge.n	800f7c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800f852:	469e      	mov	lr, r3
 800f854:	46aa      	mov	sl, r5
 800f856:	f1be 0f00 	cmp.w	lr, #0
 800f85a:	ddb9      	ble.n	800f7d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f85c:	9a01      	ldr	r2, [sp, #4]
 800f85e:	ea4f 4920 	mov.w	r9, r0, asr #16
 800f862:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800f866:	fb0c 2909 	mla	r9, ip, r9, r2
 800f86a:	9a02      	ldr	r2, [sp, #8]
 800f86c:	f819 900b 	ldrb.w	r9, [r9, fp]
 800f870:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800f874:	f82a 9b02 	strh.w	r9, [sl], #2
 800f878:	443c      	add	r4, r7
 800f87a:	4430      	add	r0, r6
 800f87c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f880:	e7e9      	b.n	800f856 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800f882:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800f886:	d414      	bmi.n	800f8b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f888:	45e2      	cmp	sl, ip
 800f88a:	da12      	bge.n	800f8b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f88c:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f890:	d40f      	bmi.n	800f8b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f892:	45c1      	cmp	r9, r8
 800f894:	da0d      	bge.n	800f8b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800f896:	9a01      	ldr	r2, [sp, #4]
 800f898:	fb0c 2909 	mla	r9, ip, r9, r2
 800f89c:	9a02      	ldr	r2, [sp, #8]
 800f89e:	f819 900a 	ldrb.w	r9, [r9, sl]
 800f8a2:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800f8a6:	f06f 0201 	mvn.w	r2, #1
 800f8aa:	fb02 f90e 	mul.w	r9, r2, lr
 800f8ae:	f82b a009 	strh.w	sl, [fp, r9]
 800f8b2:	443c      	add	r4, r7
 800f8b4:	4430      	add	r0, r6
 800f8b6:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f8ba:	e786      	b.n	800f7ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800f8bc:	b005      	add	sp, #20
 800f8be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f8c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f8c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8c6:	b087      	sub	sp, #28
 800f8c8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800f8ca:	9205      	str	r2, [sp, #20]
 800f8cc:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f8d0:	9202      	str	r2, [sp, #8]
 800f8d2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f8d6:	9101      	str	r1, [sp, #4]
 800f8d8:	6871      	ldr	r1, [r6, #4]
 800f8da:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800f8dc:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800f8e0:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800f8e4:	fb01 2404 	mla	r4, r1, r4, r2
 800f8e8:	6832      	ldr	r2, [r6, #0]
 800f8ea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f8ee:	682a      	ldr	r2, [r5, #0]
 800f8f0:	9203      	str	r2, [sp, #12]
 800f8f2:	686a      	ldr	r2, [r5, #4]
 800f8f4:	fa1f fc80 	uxth.w	ip, r0
 800f8f8:	3204      	adds	r2, #4
 800f8fa:	43c0      	mvns	r0, r0
 800f8fc:	9200      	str	r2, [sp, #0]
 800f8fe:	b2c0      	uxtb	r0, r0
 800f900:	9a01      	ldr	r2, [sp, #4]
 800f902:	2a00      	cmp	r2, #0
 800f904:	dc03      	bgt.n	800f90e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f906:	9a05      	ldr	r2, [sp, #20]
 800f908:	2a00      	cmp	r2, #0
 800f90a:	f340 811b 	ble.w	800fb44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800f90e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f910:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f914:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f916:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f91a:	2b00      	cmp	r3, #0
 800f91c:	dd0f      	ble.n	800f93e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800f91e:	140d      	asrs	r5, r1, #16
 800f920:	d406      	bmi.n	800f930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f922:	4575      	cmp	r5, lr
 800f924:	da04      	bge.n	800f930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f926:	1415      	asrs	r5, r2, #16
 800f928:	d402      	bmi.n	800f930 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f92a:	9e02      	ldr	r6, [sp, #8]
 800f92c:	42b5      	cmp	r5, r6
 800f92e:	db07      	blt.n	800f940 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f930:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f932:	4429      	add	r1, r5
 800f934:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f936:	3b01      	subs	r3, #1
 800f938:	442a      	add	r2, r5
 800f93a:	3402      	adds	r4, #2
 800f93c:	e7ed      	b.n	800f91a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800f93e:	d00f      	beq.n	800f960 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f940:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f942:	1e5d      	subs	r5, r3, #1
 800f944:	fb06 1605 	mla	r6, r6, r5, r1
 800f948:	1436      	asrs	r6, r6, #16
 800f94a:	d547      	bpl.n	800f9dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800f94c:	469a      	mov	sl, r3
 800f94e:	46a1      	mov	r9, r4
 800f950:	f1ba 0f00 	cmp.w	sl, #0
 800f954:	f300 809f 	bgt.w	800fa96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800f958:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f95c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f960:	9b01      	ldr	r3, [sp, #4]
 800f962:	2b00      	cmp	r3, #0
 800f964:	f340 80ee 	ble.w	800fb44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800f968:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f96c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f970:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f974:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f976:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f97a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f97e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f982:	eef0 6a62 	vmov.f32	s13, s5
 800f986:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f98a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f98e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f992:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f996:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f99a:	eef0 6a43 	vmov.f32	s13, s6
 800f99e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f9a2:	ee12 2a90 	vmov	r2, s5
 800f9a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f9aa:	fb92 f3f3 	sdiv	r3, r2, r3
 800f9ae:	ee13 2a10 	vmov	r2, s6
 800f9b2:	9313      	str	r3, [sp, #76]	; 0x4c
 800f9b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f9b6:	fb92 f3f3 	sdiv	r3, r2, r3
 800f9ba:	9314      	str	r3, [sp, #80]	; 0x50
 800f9bc:	9b01      	ldr	r3, [sp, #4]
 800f9be:	9a05      	ldr	r2, [sp, #20]
 800f9c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f9c4:	3b01      	subs	r3, #1
 800f9c6:	9301      	str	r3, [sp, #4]
 800f9c8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f9cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f9ce:	eeb0 3a67 	vmov.f32	s6, s15
 800f9d2:	bf08      	it	eq
 800f9d4:	4613      	moveq	r3, r2
 800f9d6:	eef0 2a47 	vmov.f32	s5, s14
 800f9da:	e791      	b.n	800f900 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f9dc:	4576      	cmp	r6, lr
 800f9de:	dab5      	bge.n	800f94c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f9e0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f9e2:	fb06 2505 	mla	r5, r6, r5, r2
 800f9e6:	142d      	asrs	r5, r5, #16
 800f9e8:	d4b0      	bmi.n	800f94c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f9ea:	9e02      	ldr	r6, [sp, #8]
 800f9ec:	42b5      	cmp	r5, r6
 800f9ee:	daad      	bge.n	800f94c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f9f0:	4699      	mov	r9, r3
 800f9f2:	46a2      	mov	sl, r4
 800f9f4:	f1b9 0f00 	cmp.w	r9, #0
 800f9f8:	ddae      	ble.n	800f958 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f9fa:	9f03      	ldr	r7, [sp, #12]
 800f9fc:	1415      	asrs	r5, r2, #16
 800f9fe:	140e      	asrs	r6, r1, #16
 800fa00:	fb0e 7505 	mla	r5, lr, r5, r7
 800fa04:	f109 39ff 	add.w	r9, r9, #4294967295
 800fa08:	f815 8006 	ldrb.w	r8, [r5, r6]
 800fa0c:	9d00      	ldr	r5, [sp, #0]
 800fa0e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800fa12:	eb05 0b08 	add.w	fp, r5, r8
 800fa16:	f8ba 5000 	ldrh.w	r5, [sl]
 800fa1a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800fa1e:	f89b b001 	ldrb.w	fp, [fp, #1]
 800fa22:	122f      	asrs	r7, r5, #8
 800fa24:	fb16 f60c 	smulbb	r6, r6, ip
 800fa28:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fa2c:	fb07 6700 	mla	r7, r7, r0, r6
 800fa30:	10ee      	asrs	r6, r5, #3
 800fa32:	fb1b fb0c 	smulbb	fp, fp, ip
 800fa36:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fa3a:	fb06 b600 	mla	r6, r6, r0, fp
 800fa3e:	b2b6      	uxth	r6, r6
 800fa40:	9604      	str	r6, [sp, #16]
 800fa42:	9e00      	ldr	r6, [sp, #0]
 800fa44:	00ed      	lsls	r5, r5, #3
 800fa46:	f816 8008 	ldrb.w	r8, [r6, r8]
 800fa4a:	b2ed      	uxtb	r5, r5
 800fa4c:	fb15 f500 	smulbb	r5, r5, r0
 800fa50:	b2bf      	uxth	r7, r7
 800fa52:	fb08 580c 	mla	r8, r8, ip, r5
 800fa56:	fa1f f888 	uxth.w	r8, r8
 800fa5a:	1c7d      	adds	r5, r7, #1
 800fa5c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800fa60:	f108 0501 	add.w	r5, r8, #1
 800fa64:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800fa68:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fa6c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fa70:	432f      	orrs	r7, r5
 800fa72:	9d04      	ldr	r5, [sp, #16]
 800fa74:	f105 0b01 	add.w	fp, r5, #1
 800fa78:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800fa7c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fa7e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800fa82:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800fa86:	4429      	add	r1, r5
 800fa88:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fa8a:	ea47 070b 	orr.w	r7, r7, fp
 800fa8e:	f82a 7b02 	strh.w	r7, [sl], #2
 800fa92:	442a      	add	r2, r5
 800fa94:	e7ae      	b.n	800f9f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800fa96:	140e      	asrs	r6, r1, #16
 800fa98:	d44b      	bmi.n	800fb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fa9a:	4576      	cmp	r6, lr
 800fa9c:	da49      	bge.n	800fb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fa9e:	1415      	asrs	r5, r2, #16
 800faa0:	d447      	bmi.n	800fb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800faa2:	9f02      	ldr	r7, [sp, #8]
 800faa4:	42bd      	cmp	r5, r7
 800faa6:	da44      	bge.n	800fb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800faa8:	9f03      	ldr	r7, [sp, #12]
 800faaa:	fb0e 7505 	mla	r5, lr, r5, r7
 800faae:	f815 8006 	ldrb.w	r8, [r5, r6]
 800fab2:	9d00      	ldr	r5, [sp, #0]
 800fab4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800fab8:	eb05 0b08 	add.w	fp, r5, r8
 800fabc:	f8b9 5000 	ldrh.w	r5, [r9]
 800fac0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800fac4:	f89b b001 	ldrb.w	fp, [fp, #1]
 800fac8:	122f      	asrs	r7, r5, #8
 800faca:	fb16 f60c 	smulbb	r6, r6, ip
 800face:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fad2:	fb07 6700 	mla	r7, r7, r0, r6
 800fad6:	10ee      	asrs	r6, r5, #3
 800fad8:	fb1b fb0c 	smulbb	fp, fp, ip
 800fadc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fae0:	fb06 b600 	mla	r6, r6, r0, fp
 800fae4:	b2b6      	uxth	r6, r6
 800fae6:	9604      	str	r6, [sp, #16]
 800fae8:	9e00      	ldr	r6, [sp, #0]
 800faea:	00ed      	lsls	r5, r5, #3
 800faec:	f816 8008 	ldrb.w	r8, [r6, r8]
 800faf0:	b2ed      	uxtb	r5, r5
 800faf2:	fb15 f500 	smulbb	r5, r5, r0
 800faf6:	b2bf      	uxth	r7, r7
 800faf8:	fb08 580c 	mla	r8, r8, ip, r5
 800fafc:	fa1f f888 	uxth.w	r8, r8
 800fb00:	1c7d      	adds	r5, r7, #1
 800fb02:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800fb06:	f108 0501 	add.w	r5, r8, #1
 800fb0a:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800fb0e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fb12:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fb16:	432f      	orrs	r7, r5
 800fb18:	9d04      	ldr	r5, [sp, #16]
 800fb1a:	f105 0b01 	add.w	fp, r5, #1
 800fb1e:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800fb22:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800fb26:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800fb2a:	ea47 070b 	orr.w	r7, r7, fp
 800fb2e:	f8a9 7000 	strh.w	r7, [r9]
 800fb32:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fb34:	4429      	add	r1, r5
 800fb36:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fb38:	f109 0902 	add.w	r9, r9, #2
 800fb3c:	442a      	add	r2, r5
 800fb3e:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fb42:	e705      	b.n	800f950 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800fb44:	b007      	add	sp, #28
 800fb46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800fb4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fb4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb50:	b085      	sub	sp, #20
 800fb52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fb56:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fb58:	9203      	str	r2, [sp, #12]
 800fb5a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800fb5e:	6870      	ldr	r0, [r6, #4]
 800fb60:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800fb62:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800fb66:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800fb6a:	9101      	str	r1, [sp, #4]
 800fb6c:	fb00 2404 	mla	r4, r0, r4, r2
 800fb70:	6832      	ldr	r2, [r6, #0]
 800fb72:	686e      	ldr	r6, [r5, #4]
 800fb74:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fb78:	682a      	ldr	r2, [r5, #0]
 800fb7a:	9202      	str	r2, [sp, #8]
 800fb7c:	3604      	adds	r6, #4
 800fb7e:	9a01      	ldr	r2, [sp, #4]
 800fb80:	2a00      	cmp	r2, #0
 800fb82:	dc03      	bgt.n	800fb8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800fb84:	9a03      	ldr	r2, [sp, #12]
 800fb86:	2a00      	cmp	r2, #0
 800fb88:	f340 80c7 	ble.w	800fd1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800fb8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fb8e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fb92:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fb94:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fb98:	2b00      	cmp	r3, #0
 800fb9a:	dd0e      	ble.n	800fbba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fb9c:	1405      	asrs	r5, r0, #16
 800fb9e:	d405      	bmi.n	800fbac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fba0:	42bd      	cmp	r5, r7
 800fba2:	da03      	bge.n	800fbac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fba4:	1415      	asrs	r5, r2, #16
 800fba6:	d401      	bmi.n	800fbac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fba8:	4545      	cmp	r5, r8
 800fbaa:	db07      	blt.n	800fbbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fbac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800fbae:	4428      	add	r0, r5
 800fbb0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800fbb2:	3b01      	subs	r3, #1
 800fbb4:	442a      	add	r2, r5
 800fbb6:	3402      	adds	r4, #2
 800fbb8:	e7ee      	b.n	800fb98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800fbba:	d010      	beq.n	800fbde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800fbbc:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fbbe:	1e5d      	subs	r5, r3, #1
 800fbc0:	fb01 0c05 	mla	ip, r1, r5, r0
 800fbc4:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800fbc8:	d545      	bpl.n	800fc56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800fbca:	469e      	mov	lr, r3
 800fbcc:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800fbd0:	f1be 0f00 	cmp.w	lr, #0
 800fbd4:	dc72      	bgt.n	800fcbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800fbd6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fbda:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fbde:	9b01      	ldr	r3, [sp, #4]
 800fbe0:	2b00      	cmp	r3, #0
 800fbe2:	f340 809a 	ble.w	800fd1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800fbe6:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fbea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fbee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fbf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fbf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fbf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fbfc:	eeb0 6a62 	vmov.f32	s12, s5
 800fc00:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fc04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fc08:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fc0c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800fc10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fc14:	eeb0 6a43 	vmov.f32	s12, s6
 800fc18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fc1c:	ee12 2a90 	vmov	r2, s5
 800fc20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fc24:	fb92 f3f3 	sdiv	r3, r2, r3
 800fc28:	ee13 2a10 	vmov	r2, s6
 800fc2c:	9311      	str	r3, [sp, #68]	; 0x44
 800fc2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc30:	fb92 f3f3 	sdiv	r3, r2, r3
 800fc34:	9312      	str	r3, [sp, #72]	; 0x48
 800fc36:	9b01      	ldr	r3, [sp, #4]
 800fc38:	9a03      	ldr	r2, [sp, #12]
 800fc3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fc3e:	3b01      	subs	r3, #1
 800fc40:	9301      	str	r3, [sp, #4]
 800fc42:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800fc46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc48:	eeb0 3a67 	vmov.f32	s6, s15
 800fc4c:	bf08      	it	eq
 800fc4e:	4613      	moveq	r3, r2
 800fc50:	eef0 2a47 	vmov.f32	s5, s14
 800fc54:	e793      	b.n	800fb7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800fc56:	45bc      	cmp	ip, r7
 800fc58:	dab7      	bge.n	800fbca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fc5a:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fc5c:	fb01 2505 	mla	r5, r1, r5, r2
 800fc60:	142d      	asrs	r5, r5, #16
 800fc62:	d4b2      	bmi.n	800fbca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fc64:	4545      	cmp	r5, r8
 800fc66:	dab0      	bge.n	800fbca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fc68:	469e      	mov	lr, r3
 800fc6a:	46a2      	mov	sl, r4
 800fc6c:	f1be 0f00 	cmp.w	lr, #0
 800fc70:	ddb1      	ble.n	800fbd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fc72:	9902      	ldr	r1, [sp, #8]
 800fc74:	1415      	asrs	r5, r2, #16
 800fc76:	fb07 1505 	mla	r5, r7, r5, r1
 800fc7a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800fc7e:	4928      	ldr	r1, [pc, #160]	; (800fd20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800fc80:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800fc84:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800fc88:	eb06 0b0c 	add.w	fp, r6, ip
 800fc8c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fc90:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800fc94:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800fc98:	00ed      	lsls	r5, r5, #3
 800fc9a:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800fc9e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fca2:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fca4:	ea49 0505 	orr.w	r5, r9, r5
 800fca8:	f816 900c 	ldrb.w	r9, [r6, ip]
 800fcac:	4408      	add	r0, r1
 800fcae:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fcb0:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800fcb4:	f82a 5b02 	strh.w	r5, [sl], #2
 800fcb8:	440a      	add	r2, r1
 800fcba:	e7d7      	b.n	800fc6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800fcbc:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800fcc0:	d424      	bmi.n	800fd0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fcc2:	45bc      	cmp	ip, r7
 800fcc4:	da22      	bge.n	800fd0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fcc6:	1415      	asrs	r5, r2, #16
 800fcc8:	d420      	bmi.n	800fd0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fcca:	4545      	cmp	r5, r8
 800fccc:	da1e      	bge.n	800fd0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fcce:	9902      	ldr	r1, [sp, #8]
 800fcd0:	fb07 1505 	mla	r5, r7, r5, r1
 800fcd4:	f06f 0101 	mvn.w	r1, #1
 800fcd8:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800fcdc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800fce0:	eb06 050c 	add.w	r5, r6, ip
 800fce4:	fb01 f90e 	mul.w	r9, r1, lr
 800fce8:	f895 a002 	ldrb.w	sl, [r5, #2]
 800fcec:	786d      	ldrb	r5, [r5, #1]
 800fcee:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800fcf2:	00ed      	lsls	r5, r5, #3
 800fcf4:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800fcf8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fcfc:	ea4a 0505 	orr.w	r5, sl, r5
 800fd00:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800fd04:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800fd08:	f82b 5009 	strh.w	r5, [fp, r9]
 800fd0c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fd0e:	4408      	add	r0, r1
 800fd10:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fd12:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fd16:	440a      	add	r2, r1
 800fd18:	e75a      	b.n	800fbd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800fd1a:	b005      	add	sp, #20
 800fd1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd20:	fffff800 	.word	0xfffff800

0800fd24 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fd24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd28:	b087      	sub	sp, #28
 800fd2a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fd2e:	9204      	str	r2, [sp, #16]
 800fd30:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fd34:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800fd36:	9201      	str	r2, [sp, #4]
 800fd38:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800fd3c:	9205      	str	r2, [sp, #20]
 800fd3e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fd42:	9100      	str	r1, [sp, #0]
 800fd44:	6869      	ldr	r1, [r5, #4]
 800fd46:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fd48:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800fd4c:	fb01 2404 	mla	r4, r1, r4, r2
 800fd50:	682a      	ldr	r2, [r5, #0]
 800fd52:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fd56:	6802      	ldr	r2, [r0, #0]
 800fd58:	9202      	str	r2, [sp, #8]
 800fd5a:	6842      	ldr	r2, [r0, #4]
 800fd5c:	3204      	adds	r2, #4
 800fd5e:	9203      	str	r2, [sp, #12]
 800fd60:	9a00      	ldr	r2, [sp, #0]
 800fd62:	2a00      	cmp	r2, #0
 800fd64:	dc03      	bgt.n	800fd6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800fd66:	9a04      	ldr	r2, [sp, #16]
 800fd68:	2a00      	cmp	r2, #0
 800fd6a:	f340 812c 	ble.w	800ffc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800fd6e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fd70:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fd74:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fd76:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fd7a:	2b00      	cmp	r3, #0
 800fd7c:	dd0f      	ble.n	800fd9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800fd7e:	1402      	asrs	r2, r0, #16
 800fd80:	d406      	bmi.n	800fd90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800fd82:	4572      	cmp	r2, lr
 800fd84:	da04      	bge.n	800fd90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800fd86:	140a      	asrs	r2, r1, #16
 800fd88:	d402      	bmi.n	800fd90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800fd8a:	9d01      	ldr	r5, [sp, #4]
 800fd8c:	42aa      	cmp	r2, r5
 800fd8e:	db07      	blt.n	800fda0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800fd90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fd92:	4410      	add	r0, r2
 800fd94:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fd96:	3b01      	subs	r3, #1
 800fd98:	4411      	add	r1, r2
 800fd9a:	3402      	adds	r4, #2
 800fd9c:	e7ed      	b.n	800fd7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800fd9e:	d00f      	beq.n	800fdc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800fda0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fda2:	1e5a      	subs	r2, r3, #1
 800fda4:	fb05 0502 	mla	r5, r5, r2, r0
 800fda8:	142d      	asrs	r5, r5, #16
 800fdaa:	d545      	bpl.n	800fe38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800fdac:	4699      	mov	r9, r3
 800fdae:	46a0      	mov	r8, r4
 800fdb0:	f1b9 0f00 	cmp.w	r9, #0
 800fdb4:	f300 80a7 	bgt.w	800ff06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800fdb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fdbc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fdc0:	9b00      	ldr	r3, [sp, #0]
 800fdc2:	2b00      	cmp	r3, #0
 800fdc4:	f340 80ff 	ble.w	800ffc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800fdc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fdcc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fdd0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fdd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fdd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fdda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fdde:	eeb0 6a62 	vmov.f32	s12, s5
 800fde2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fde6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fdea:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fdee:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fdf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fdf6:	eeb0 6a43 	vmov.f32	s12, s6
 800fdfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fdfe:	ee12 2a90 	vmov	r2, s5
 800fe02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fe06:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe0a:	ee13 2a10 	vmov	r2, s6
 800fe0e:	9313      	str	r3, [sp, #76]	; 0x4c
 800fe10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe12:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe16:	9314      	str	r3, [sp, #80]	; 0x50
 800fe18:	9b00      	ldr	r3, [sp, #0]
 800fe1a:	9a04      	ldr	r2, [sp, #16]
 800fe1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe20:	3b01      	subs	r3, #1
 800fe22:	9300      	str	r3, [sp, #0]
 800fe24:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fe28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe2a:	eeb0 3a67 	vmov.f32	s6, s15
 800fe2e:	bf08      	it	eq
 800fe30:	4613      	moveq	r3, r2
 800fe32:	eef0 2a47 	vmov.f32	s5, s14
 800fe36:	e793      	b.n	800fd60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 800fe38:	4575      	cmp	r5, lr
 800fe3a:	dab7      	bge.n	800fdac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800fe3c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fe3e:	fb05 1202 	mla	r2, r5, r2, r1
 800fe42:	1412      	asrs	r2, r2, #16
 800fe44:	d4b2      	bmi.n	800fdac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800fe46:	9d01      	ldr	r5, [sp, #4]
 800fe48:	42aa      	cmp	r2, r5
 800fe4a:	daaf      	bge.n	800fdac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800fe4c:	f04f 0800 	mov.w	r8, #0
 800fe50:	eba3 0208 	sub.w	r2, r3, r8
 800fe54:	2a00      	cmp	r2, #0
 800fe56:	ddaf      	ble.n	800fdb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800fe58:	9e02      	ldr	r6, [sp, #8]
 800fe5a:	140a      	asrs	r2, r1, #16
 800fe5c:	1405      	asrs	r5, r0, #16
 800fe5e:	fb0e 6202 	mla	r2, lr, r2, r6
 800fe62:	5d52      	ldrb	r2, [r2, r5]
 800fe64:	9d03      	ldr	r5, [sp, #12]
 800fe66:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800fe6a:	0e2e      	lsrs	r6, r5, #24
 800fe6c:	d044      	beq.n	800fef8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800fe6e:	9a05      	ldr	r2, [sp, #20]
 800fe70:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800fe74:	4356      	muls	r6, r2
 800fe76:	1c72      	adds	r2, r6, #1
 800fe78:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800fe7c:	1212      	asrs	r2, r2, #8
 800fe7e:	fa1f f982 	uxth.w	r9, r2
 800fe82:	ea4f 272c 	mov.w	r7, ip, asr #8
 800fe86:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800fe8a:	43d2      	mvns	r2, r2
 800fe8c:	b2d2      	uxtb	r2, r2
 800fe8e:	fb16 f609 	smulbb	r6, r6, r9
 800fe92:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fe96:	fb07 6702 	mla	r7, r7, r2, r6
 800fe9a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800fe9e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800fea2:	b2ed      	uxtb	r5, r5
 800fea4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800fea8:	fa5f fc8c 	uxtb.w	ip, ip
 800feac:	fb15 f509 	smulbb	r5, r5, r9
 800feb0:	fb0c 5502 	mla	r5, ip, r2, r5
 800feb4:	b2bf      	uxth	r7, r7
 800feb6:	fb1a fa09 	smulbb	sl, sl, r9
 800feba:	b2ad      	uxth	r5, r5
 800febc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fec0:	fb06 a602 	mla	r6, r6, r2, sl
 800fec4:	1c7a      	adds	r2, r7, #1
 800fec6:	f105 0a01 	add.w	sl, r5, #1
 800feca:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800fece:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fed2:	b2b6      	uxth	r6, r6
 800fed4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fed8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fedc:	ea47 070a 	orr.w	r7, r7, sl
 800fee0:	f106 0a01 	add.w	sl, r6, #1
 800fee4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fee8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800feec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fef0:	ea47 070a 	orr.w	r7, r7, sl
 800fef4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800fef8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fefa:	4410      	add	r0, r2
 800fefc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fefe:	f108 0801 	add.w	r8, r8, #1
 800ff02:	4411      	add	r1, r2
 800ff04:	e7a4      	b.n	800fe50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800ff06:	1405      	asrs	r5, r0, #16
 800ff08:	d454      	bmi.n	800ffb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800ff0a:	4575      	cmp	r5, lr
 800ff0c:	da52      	bge.n	800ffb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800ff0e:	140a      	asrs	r2, r1, #16
 800ff10:	d450      	bmi.n	800ffb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800ff12:	9e01      	ldr	r6, [sp, #4]
 800ff14:	42b2      	cmp	r2, r6
 800ff16:	da4d      	bge.n	800ffb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800ff18:	9e02      	ldr	r6, [sp, #8]
 800ff1a:	fb0e 6202 	mla	r2, lr, r2, r6
 800ff1e:	5d52      	ldrb	r2, [r2, r5]
 800ff20:	9d03      	ldr	r5, [sp, #12]
 800ff22:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800ff26:	0e2e      	lsrs	r6, r5, #24
 800ff28:	d044      	beq.n	800ffb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800ff2a:	9a05      	ldr	r2, [sp, #20]
 800ff2c:	f8b8 c000 	ldrh.w	ip, [r8]
 800ff30:	4356      	muls	r6, r2
 800ff32:	1c72      	adds	r2, r6, #1
 800ff34:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800ff38:	1212      	asrs	r2, r2, #8
 800ff3a:	fa1f fa82 	uxth.w	sl, r2
 800ff3e:	ea4f 272c 	mov.w	r7, ip, asr #8
 800ff42:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800ff46:	43d2      	mvns	r2, r2
 800ff48:	b2d2      	uxtb	r2, r2
 800ff4a:	fb16 f60a 	smulbb	r6, r6, sl
 800ff4e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ff52:	fb07 6702 	mla	r7, r7, r2, r6
 800ff56:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 800ff5a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800ff5e:	b2ed      	uxtb	r5, r5
 800ff60:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800ff64:	fa5f fc8c 	uxtb.w	ip, ip
 800ff68:	fb15 f50a 	smulbb	r5, r5, sl
 800ff6c:	fb0c 5502 	mla	r5, ip, r2, r5
 800ff70:	b2bf      	uxth	r7, r7
 800ff72:	fb1b fb0a 	smulbb	fp, fp, sl
 800ff76:	b2ad      	uxth	r5, r5
 800ff78:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ff7c:	fb06 b602 	mla	r6, r6, r2, fp
 800ff80:	1c7a      	adds	r2, r7, #1
 800ff82:	f105 0b01 	add.w	fp, r5, #1
 800ff86:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800ff8a:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800ff8e:	b2b6      	uxth	r6, r6
 800ff90:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 800ff94:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ff98:	ea47 070b 	orr.w	r7, r7, fp
 800ff9c:	f106 0b01 	add.w	fp, r6, #1
 800ffa0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800ffa4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800ffa8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800ffac:	ea47 070b 	orr.w	r7, r7, fp
 800ffb0:	f8a8 7000 	strh.w	r7, [r8]
 800ffb4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ffb6:	4410      	add	r0, r2
 800ffb8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ffba:	f108 0802 	add.w	r8, r8, #2
 800ffbe:	4411      	add	r1, r2
 800ffc0:	f109 39ff 	add.w	r9, r9, #4294967295
 800ffc4:	e6f4      	b.n	800fdb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800ffc6:	b007      	add	sp, #28
 800ffc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ffcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ffcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffd0:	b087      	sub	sp, #28
 800ffd2:	468b      	mov	fp, r1
 800ffd4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800ffd6:	9205      	str	r2, [sp, #20]
 800ffd8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800ffdc:	9201      	str	r2, [sp, #4]
 800ffde:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800ffe2:	6869      	ldr	r1, [r5, #4]
 800ffe4:	981a      	ldr	r0, [sp, #104]	; 0x68
 800ffe6:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800ffea:	fb01 2404 	mla	r4, r1, r4, r2
 800ffee:	682a      	ldr	r2, [r5, #0]
 800fff0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fff4:	6802      	ldr	r2, [r0, #0]
 800fff6:	9203      	str	r2, [sp, #12]
 800fff8:	6842      	ldr	r2, [r0, #4]
 800fffa:	3204      	adds	r2, #4
 800fffc:	9204      	str	r2, [sp, #16]
 800fffe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010002:	f1bb 0f00 	cmp.w	fp, #0
 8010006:	dc03      	bgt.n	8010010 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8010008:	9a05      	ldr	r2, [sp, #20]
 801000a:	2a00      	cmp	r2, #0
 801000c:	f340 814a 	ble.w	80102a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8010010:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010012:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010016:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010018:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801001c:	2b00      	cmp	r3, #0
 801001e:	dd0f      	ble.n	8010040 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010020:	1408      	asrs	r0, r1, #16
 8010022:	d406      	bmi.n	8010032 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010024:	4540      	cmp	r0, r8
 8010026:	da04      	bge.n	8010032 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010028:	1410      	asrs	r0, r2, #16
 801002a:	d402      	bmi.n	8010032 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 801002c:	9d01      	ldr	r5, [sp, #4]
 801002e:	42a8      	cmp	r0, r5
 8010030:	db07      	blt.n	8010042 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8010032:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010034:	4401      	add	r1, r0
 8010036:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010038:	3b01      	subs	r3, #1
 801003a:	4402      	add	r2, r0
 801003c:	3402      	adds	r4, #2
 801003e:	e7ed      	b.n	801001c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010040:	d018      	beq.n	8010074 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 8010042:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010044:	1e58      	subs	r0, r3, #1
 8010046:	fb05 1500 	mla	r5, r5, r0, r1
 801004a:	142d      	asrs	r5, r5, #16
 801004c:	d40a      	bmi.n	8010064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801004e:	4545      	cmp	r5, r8
 8010050:	da08      	bge.n	8010064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010052:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010054:	fb05 2000 	mla	r0, r5, r0, r2
 8010058:	1400      	asrs	r0, r0, #16
 801005a:	d403      	bmi.n	8010064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801005c:	9d01      	ldr	r5, [sp, #4]
 801005e:	42a8      	cmp	r0, r5
 8010060:	f2c0 80b7 	blt.w	80101d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 8010064:	2600      	movs	r6, #0
 8010066:	1998      	adds	r0, r3, r6
 8010068:	2800      	cmp	r0, #0
 801006a:	dc3e      	bgt.n	80100ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 801006c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010070:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010074:	f1bb 0f00 	cmp.w	fp, #0
 8010078:	f340 8114 	ble.w	80102a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 801007c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010080:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010084:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010088:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801008a:	f1bb 0b01 	subs.w	fp, fp, #1
 801008e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010092:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010096:	eeb0 6a62 	vmov.f32	s12, s5
 801009a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801009e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80100a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80100a6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80100aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80100ae:	eeb0 6a43 	vmov.f32	s12, s6
 80100b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80100b6:	ee12 2a90 	vmov	r2, s5
 80100ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80100be:	fb92 f3f3 	sdiv	r3, r2, r3
 80100c2:	ee13 2a10 	vmov	r2, s6
 80100c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80100ca:	9313      	str	r3, [sp, #76]	; 0x4c
 80100cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80100d2:	9a05      	ldr	r2, [sp, #20]
 80100d4:	9314      	str	r3, [sp, #80]	; 0x50
 80100d6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80100da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100dc:	eeb0 3a67 	vmov.f32	s6, s15
 80100e0:	bf08      	it	eq
 80100e2:	4613      	moveq	r3, r2
 80100e4:	eef0 2a47 	vmov.f32	s5, s14
 80100e8:	e78b      	b.n	8010002 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 80100ea:	140d      	asrs	r5, r1, #16
 80100ec:	d459      	bmi.n	80101a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80100ee:	4545      	cmp	r5, r8
 80100f0:	da57      	bge.n	80101a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80100f2:	1410      	asrs	r0, r2, #16
 80100f4:	d455      	bmi.n	80101a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80100f6:	9f01      	ldr	r7, [sp, #4]
 80100f8:	42b8      	cmp	r0, r7
 80100fa:	da52      	bge.n	80101a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80100fc:	9f03      	ldr	r7, [sp, #12]
 80100fe:	fb08 7000 	mla	r0, r8, r0, r7
 8010102:	5d40      	ldrb	r0, [r0, r5]
 8010104:	9d04      	ldr	r5, [sp, #16]
 8010106:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801010a:	0e07      	lsrs	r7, r0, #24
 801010c:	2fff      	cmp	r7, #255	; 0xff
 801010e:	d04e      	beq.n	80101ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010110:	b2fd      	uxtb	r5, r7
 8010112:	2f00      	cmp	r7, #0
 8010114:	d045      	beq.n	80101a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010116:	f06f 0701 	mvn.w	r7, #1
 801011a:	4377      	muls	r7, r6
 801011c:	fa1f f985 	uxth.w	r9, r5
 8010120:	f834 e007 	ldrh.w	lr, [r4, r7]
 8010124:	9702      	str	r7, [sp, #8]
 8010126:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801012a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801012e:	43ed      	mvns	r5, r5
 8010130:	b2ed      	uxtb	r5, r5
 8010132:	fb17 f709 	smulbb	r7, r7, r9
 8010136:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801013a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801013e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010142:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8010146:	b2c0      	uxtb	r0, r0
 8010148:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801014c:	fa5f fe8e 	uxtb.w	lr, lr
 8010150:	fb10 f009 	smulbb	r0, r0, r9
 8010154:	fb0e 0005 	mla	r0, lr, r5, r0
 8010158:	b280      	uxth	r0, r0
 801015a:	fa1f fc8c 	uxth.w	ip, ip
 801015e:	fb1a fa09 	smulbb	sl, sl, r9
 8010162:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010166:	fb07 a705 	mla	r7, r7, r5, sl
 801016a:	f100 0a01 	add.w	sl, r0, #1
 801016e:	f10c 0501 	add.w	r5, ip, #1
 8010172:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010176:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801017a:	b2bf      	uxth	r7, r7
 801017c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010180:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010184:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010188:	f107 0a01 	add.w	sl, r7, #1
 801018c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010190:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010194:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010198:	9802      	ldr	r0, [sp, #8]
 801019a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801019e:	f824 c000 	strh.w	ip, [r4, r0]
 80101a2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80101a4:	4401      	add	r1, r0
 80101a6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80101a8:	3e01      	subs	r6, #1
 80101aa:	4402      	add	r2, r0
 80101ac:	e75b      	b.n	8010066 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80101ae:	f06f 0501 	mvn.w	r5, #1
 80101b2:	fb05 f706 	mul.w	r7, r5, r6
 80101b6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80101ba:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80101be:	0945      	lsrs	r5, r0, #5
 80101c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80101c4:	ea4c 0505 	orr.w	r5, ip, r5
 80101c8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80101cc:	4305      	orrs	r5, r0
 80101ce:	53e5      	strh	r5, [r4, r7]
 80101d0:	e7e7      	b.n	80101a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80101d2:	f04f 0e00 	mov.w	lr, #0
 80101d6:	eba3 000e 	sub.w	r0, r3, lr
 80101da:	2800      	cmp	r0, #0
 80101dc:	f77f af46 	ble.w	801006c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 80101e0:	9e03      	ldr	r6, [sp, #12]
 80101e2:	1410      	asrs	r0, r2, #16
 80101e4:	140d      	asrs	r5, r1, #16
 80101e6:	fb08 6000 	mla	r0, r8, r0, r6
 80101ea:	5d40      	ldrb	r0, [r0, r5]
 80101ec:	9d04      	ldr	r5, [sp, #16]
 80101ee:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80101f2:	0e06      	lsrs	r6, r0, #24
 80101f4:	2eff      	cmp	r6, #255	; 0xff
 80101f6:	d048      	beq.n	801028a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 80101f8:	b2f5      	uxtb	r5, r6
 80101fa:	2e00      	cmp	r6, #0
 80101fc:	d03e      	beq.n	801027c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80101fe:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010202:	fa1f f985 	uxth.w	r9, r5
 8010206:	ea4f 272c 	mov.w	r7, ip, asr #8
 801020a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801020e:	43ed      	mvns	r5, r5
 8010210:	b2ed      	uxtb	r5, r5
 8010212:	fb16 f609 	smulbb	r6, r6, r9
 8010216:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801021a:	fb07 6705 	mla	r7, r7, r5, r6
 801021e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010222:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010226:	b2c0      	uxtb	r0, r0
 8010228:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801022c:	fa5f fc8c 	uxtb.w	ip, ip
 8010230:	fb10 f009 	smulbb	r0, r0, r9
 8010234:	fb0c 0005 	mla	r0, ip, r5, r0
 8010238:	b2bf      	uxth	r7, r7
 801023a:	fb1a fa09 	smulbb	sl, sl, r9
 801023e:	b280      	uxth	r0, r0
 8010240:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010244:	fb06 a605 	mla	r6, r6, r5, sl
 8010248:	1c7d      	adds	r5, r7, #1
 801024a:	f100 0a01 	add.w	sl, r0, #1
 801024e:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010252:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010256:	b2b6      	uxth	r6, r6
 8010258:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801025c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010260:	ea47 070a 	orr.w	r7, r7, sl
 8010264:	f106 0a01 	add.w	sl, r6, #1
 8010268:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801026c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010270:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010274:	ea47 070a 	orr.w	r7, r7, sl
 8010278:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801027c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801027e:	4401      	add	r1, r0
 8010280:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010282:	f10e 0e01 	add.w	lr, lr, #1
 8010286:	4402      	add	r2, r0
 8010288:	e7a5      	b.n	80101d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 801028a:	4d08      	ldr	r5, [pc, #32]	; (80102ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 801028c:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8010290:	0945      	lsrs	r5, r0, #5
 8010292:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010296:	4335      	orrs	r5, r6
 8010298:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801029c:	4305      	orrs	r5, r0
 801029e:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 80102a2:	e7eb      	b.n	801027c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80102a4:	b007      	add	sp, #28
 80102a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102aa:	bf00      	nop
 80102ac:	fffff800 	.word	0xfffff800

080102b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80102b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102b4:	b087      	sub	sp, #28
 80102b6:	468b      	mov	fp, r1
 80102b8:	9204      	str	r2, [sp, #16]
 80102ba:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80102be:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80102c0:	9201      	str	r2, [sp, #4]
 80102c2:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 80102c6:	9205      	str	r2, [sp, #20]
 80102c8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80102cc:	6869      	ldr	r1, [r5, #4]
 80102ce:	981a      	ldr	r0, [sp, #104]	; 0x68
 80102d0:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 80102d4:	fb01 2404 	mla	r4, r1, r4, r2
 80102d8:	682a      	ldr	r2, [r5, #0]
 80102da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80102de:	6802      	ldr	r2, [r0, #0]
 80102e0:	9202      	str	r2, [sp, #8]
 80102e2:	6842      	ldr	r2, [r0, #4]
 80102e4:	9203      	str	r2, [sp, #12]
 80102e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80102ea:	f1bb 0f00 	cmp.w	fp, #0
 80102ee:	dc03      	bgt.n	80102f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 80102f0:	9a04      	ldr	r2, [sp, #16]
 80102f2:	2a00      	cmp	r2, #0
 80102f4:	f340 8136 	ble.w	8010564 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 80102f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80102fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80102fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010300:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010304:	2b00      	cmp	r3, #0
 8010306:	dd0f      	ble.n	8010328 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010308:	1408      	asrs	r0, r1, #16
 801030a:	d406      	bmi.n	801031a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801030c:	4540      	cmp	r0, r8
 801030e:	da04      	bge.n	801031a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010310:	1410      	asrs	r0, r2, #16
 8010312:	d402      	bmi.n	801031a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010314:	9d01      	ldr	r5, [sp, #4]
 8010316:	42a8      	cmp	r0, r5
 8010318:	db07      	blt.n	801032a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 801031a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801031c:	4401      	add	r1, r0
 801031e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010320:	3b01      	subs	r3, #1
 8010322:	4402      	add	r2, r0
 8010324:	3402      	adds	r4, #2
 8010326:	e7ed      	b.n	8010304 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8010328:	d00f      	beq.n	801034a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801032a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801032c:	1e58      	subs	r0, r3, #1
 801032e:	fb05 1500 	mla	r5, r5, r0, r1
 8010332:	142d      	asrs	r5, r5, #16
 8010334:	d544      	bpl.n	80103c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8010336:	9300      	str	r3, [sp, #0]
 8010338:	46a2      	mov	sl, r4
 801033a:	9800      	ldr	r0, [sp, #0]
 801033c:	2800      	cmp	r0, #0
 801033e:	f300 80ab 	bgt.w	8010498 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8010342:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010346:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801034a:	f1bb 0f00 	cmp.w	fp, #0
 801034e:	f340 8109 	ble.w	8010564 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8010352:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010356:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801035a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801035e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010360:	f1bb 0b01 	subs.w	fp, fp, #1
 8010364:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010368:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801036c:	eeb0 6a62 	vmov.f32	s12, s5
 8010370:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010374:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010378:	ee77 2a62 	vsub.f32	s5, s14, s5
 801037c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010380:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010384:	eeb0 6a43 	vmov.f32	s12, s6
 8010388:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801038c:	ee12 2a90 	vmov	r2, s5
 8010390:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010394:	fb92 f3f3 	sdiv	r3, r2, r3
 8010398:	ee13 2a10 	vmov	r2, s6
 801039c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80103a0:	9313      	str	r3, [sp, #76]	; 0x4c
 80103a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80103a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80103a8:	9a04      	ldr	r2, [sp, #16]
 80103aa:	9314      	str	r3, [sp, #80]	; 0x50
 80103ac:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80103b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80103b2:	eeb0 3a67 	vmov.f32	s6, s15
 80103b6:	bf08      	it	eq
 80103b8:	4613      	moveq	r3, r2
 80103ba:	eef0 2a47 	vmov.f32	s5, s14
 80103be:	e794      	b.n	80102ea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 80103c0:	4545      	cmp	r5, r8
 80103c2:	dab8      	bge.n	8010336 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 80103c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80103c6:	fb05 2000 	mla	r0, r5, r0, r2
 80103ca:	1400      	asrs	r0, r0, #16
 80103cc:	d4b3      	bmi.n	8010336 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 80103ce:	9d01      	ldr	r5, [sp, #4]
 80103d0:	42a8      	cmp	r0, r5
 80103d2:	dab0      	bge.n	8010336 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 80103d4:	f04f 0900 	mov.w	r9, #0
 80103d8:	eba3 0009 	sub.w	r0, r3, r9
 80103dc:	2800      	cmp	r0, #0
 80103de:	ddb0      	ble.n	8010342 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80103e0:	140d      	asrs	r5, r1, #16
 80103e2:	1410      	asrs	r0, r2, #16
 80103e4:	fb08 5000 	mla	r0, r8, r0, r5
 80103e8:	9d03      	ldr	r5, [sp, #12]
 80103ea:	5c2e      	ldrb	r6, [r5, r0]
 80103ec:	2e00      	cmp	r6, #0
 80103ee:	d04c      	beq.n	801048a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 80103f0:	9d02      	ldr	r5, [sp, #8]
 80103f2:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 80103f6:	9805      	ldr	r0, [sp, #20]
 80103f8:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 80103fc:	4346      	muls	r6, r0
 80103fe:	1c70      	adds	r0, r6, #1
 8010400:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8010404:	1200      	asrs	r0, r0, #8
 8010406:	b287      	uxth	r7, r0
 8010408:	122e      	asrs	r6, r5, #8
 801040a:	43c0      	mvns	r0, r0
 801040c:	b2c0      	uxtb	r0, r0
 801040e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010412:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010416:	fb16 f600 	smulbb	r6, r6, r0
 801041a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801041e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010422:	00ed      	lsls	r5, r5, #3
 8010424:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010428:	b2ed      	uxtb	r5, r5
 801042a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801042e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010432:	fb15 f500 	smulbb	r5, r5, r0
 8010436:	fa5f fe8e 	uxtb.w	lr, lr
 801043a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801043e:	fb0e 5507 	mla	r5, lr, r7, r5
 8010442:	fb1a fa00 	smulbb	sl, sl, r0
 8010446:	fa1f fc8c 	uxth.w	ip, ip
 801044a:	b2ad      	uxth	r5, r5
 801044c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010450:	fb06 a607 	mla	r6, r6, r7, sl
 8010454:	f10c 0001 	add.w	r0, ip, #1
 8010458:	f105 0a01 	add.w	sl, r5, #1
 801045c:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8010460:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010464:	b2b6      	uxth	r6, r6
 8010466:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801046a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801046e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010472:	f106 0a01 	add.w	sl, r6, #1
 8010476:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801047a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801047e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010482:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010486:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 801048a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801048c:	4401      	add	r1, r0
 801048e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010490:	f109 0901 	add.w	r9, r9, #1
 8010494:	4402      	add	r2, r0
 8010496:	e79f      	b.n	80103d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 8010498:	1408      	asrs	r0, r1, #16
 801049a:	d459      	bmi.n	8010550 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 801049c:	4540      	cmp	r0, r8
 801049e:	da57      	bge.n	8010550 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80104a0:	1415      	asrs	r5, r2, #16
 80104a2:	d455      	bmi.n	8010550 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80104a4:	9e01      	ldr	r6, [sp, #4]
 80104a6:	42b5      	cmp	r5, r6
 80104a8:	da52      	bge.n	8010550 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80104aa:	fb08 0005 	mla	r0, r8, r5, r0
 80104ae:	9d03      	ldr	r5, [sp, #12]
 80104b0:	5c2e      	ldrb	r6, [r5, r0]
 80104b2:	2e00      	cmp	r6, #0
 80104b4:	d04c      	beq.n	8010550 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80104b6:	9d02      	ldr	r5, [sp, #8]
 80104b8:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 80104bc:	9805      	ldr	r0, [sp, #20]
 80104be:	f8ba 5000 	ldrh.w	r5, [sl]
 80104c2:	4346      	muls	r6, r0
 80104c4:	1c70      	adds	r0, r6, #1
 80104c6:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 80104ca:	1200      	asrs	r0, r0, #8
 80104cc:	b287      	uxth	r7, r0
 80104ce:	122e      	asrs	r6, r5, #8
 80104d0:	43c0      	mvns	r0, r0
 80104d2:	b2c0      	uxtb	r0, r0
 80104d4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80104d8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80104dc:	fb16 f600 	smulbb	r6, r6, r0
 80104e0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80104e4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80104e8:	00ed      	lsls	r5, r5, #3
 80104ea:	fb0c 6c07 	mla	ip, ip, r7, r6
 80104ee:	b2ed      	uxtb	r5, r5
 80104f0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80104f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80104f8:	fb15 f500 	smulbb	r5, r5, r0
 80104fc:	fa5f fe8e 	uxtb.w	lr, lr
 8010500:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010504:	fb0e 5507 	mla	r5, lr, r7, r5
 8010508:	fb19 f900 	smulbb	r9, r9, r0
 801050c:	fa1f fc8c 	uxth.w	ip, ip
 8010510:	b2ad      	uxth	r5, r5
 8010512:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010516:	fb06 9607 	mla	r6, r6, r7, r9
 801051a:	f10c 0001 	add.w	r0, ip, #1
 801051e:	f105 0901 	add.w	r9, r5, #1
 8010522:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8010526:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 801052a:	b2b6      	uxth	r6, r6
 801052c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8010530:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010534:	ea4c 0c09 	orr.w	ip, ip, r9
 8010538:	f106 0901 	add.w	r9, r6, #1
 801053c:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8010540:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010544:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010548:	ea4c 0c09 	orr.w	ip, ip, r9
 801054c:	f8aa c000 	strh.w	ip, [sl]
 8010550:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010552:	4401      	add	r1, r0
 8010554:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010556:	4402      	add	r2, r0
 8010558:	9800      	ldr	r0, [sp, #0]
 801055a:	3801      	subs	r0, #1
 801055c:	f10a 0a02 	add.w	sl, sl, #2
 8010560:	9000      	str	r0, [sp, #0]
 8010562:	e6ea      	b.n	801033a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010564:	b007      	add	sp, #28
 8010566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801056a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801056a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801056e:	b087      	sub	sp, #28
 8010570:	468b      	mov	fp, r1
 8010572:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010574:	9205      	str	r2, [sp, #20]
 8010576:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 801057a:	9202      	str	r2, [sp, #8]
 801057c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010580:	6869      	ldr	r1, [r5, #4]
 8010582:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8010584:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8010588:	fb01 2000 	mla	r0, r1, r0, r2
 801058c:	682a      	ldr	r2, [r5, #0]
 801058e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010592:	6822      	ldr	r2, [r4, #0]
 8010594:	9201      	str	r2, [sp, #4]
 8010596:	6862      	ldr	r2, [r4, #4]
 8010598:	9204      	str	r2, [sp, #16]
 801059a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801059e:	f1bb 0f00 	cmp.w	fp, #0
 80105a2:	dc03      	bgt.n	80105ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 80105a4:	9a05      	ldr	r2, [sp, #20]
 80105a6:	2a00      	cmp	r2, #0
 80105a8:	f340 813d 	ble.w	8010826 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 80105ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80105ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80105b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80105b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80105b8:	2b00      	cmp	r3, #0
 80105ba:	dd0f      	ble.n	80105dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80105bc:	140c      	asrs	r4, r1, #16
 80105be:	d406      	bmi.n	80105ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80105c0:	454c      	cmp	r4, r9
 80105c2:	da04      	bge.n	80105ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80105c4:	1414      	asrs	r4, r2, #16
 80105c6:	d402      	bmi.n	80105ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80105c8:	9d02      	ldr	r5, [sp, #8]
 80105ca:	42ac      	cmp	r4, r5
 80105cc:	db07      	blt.n	80105de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80105ce:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80105d0:	4421      	add	r1, r4
 80105d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80105d4:	3b01      	subs	r3, #1
 80105d6:	4422      	add	r2, r4
 80105d8:	3002      	adds	r0, #2
 80105da:	e7ed      	b.n	80105b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 80105dc:	d018      	beq.n	8010610 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 80105de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80105e0:	1e5c      	subs	r4, r3, #1
 80105e2:	fb05 1504 	mla	r5, r5, r4, r1
 80105e6:	142d      	asrs	r5, r5, #16
 80105e8:	d40a      	bmi.n	8010600 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80105ea:	454d      	cmp	r5, r9
 80105ec:	da08      	bge.n	8010600 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80105ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80105f0:	fb05 2404 	mla	r4, r5, r4, r2
 80105f4:	1424      	asrs	r4, r4, #16
 80105f6:	d403      	bmi.n	8010600 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80105f8:	9d02      	ldr	r5, [sp, #8]
 80105fa:	42ac      	cmp	r4, r5
 80105fc:	f2c0 80ae 	blt.w	801075c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 8010600:	2600      	movs	r6, #0
 8010602:	199c      	adds	r4, r3, r6
 8010604:	2c00      	cmp	r4, #0
 8010606:	dc3e      	bgt.n	8010686 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8010608:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801060c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010610:	f1bb 0f00 	cmp.w	fp, #0
 8010614:	f340 8107 	ble.w	8010826 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8010618:	ee30 0a04 	vadd.f32	s0, s0, s8
 801061c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010620:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010624:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010626:	f1bb 0b01 	subs.w	fp, fp, #1
 801062a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801062e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010632:	eeb0 6a62 	vmov.f32	s12, s5
 8010636:	ee61 7a27 	vmul.f32	s15, s2, s15
 801063a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801063e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010642:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010646:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801064a:	eeb0 6a43 	vmov.f32	s12, s6
 801064e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010652:	ee12 2a90 	vmov	r2, s5
 8010656:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801065a:	fb92 f3f3 	sdiv	r3, r2, r3
 801065e:	ee13 2a10 	vmov	r2, s6
 8010662:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010666:	9313      	str	r3, [sp, #76]	; 0x4c
 8010668:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801066a:	fb92 f3f3 	sdiv	r3, r2, r3
 801066e:	9a05      	ldr	r2, [sp, #20]
 8010670:	9314      	str	r3, [sp, #80]	; 0x50
 8010672:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010676:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010678:	eeb0 3a67 	vmov.f32	s6, s15
 801067c:	bf08      	it	eq
 801067e:	4613      	moveq	r3, r2
 8010680:	eef0 2a47 	vmov.f32	s5, s14
 8010684:	e78b      	b.n	801059e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 8010686:	140c      	asrs	r4, r1, #16
 8010688:	d45a      	bmi.n	8010740 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801068a:	454c      	cmp	r4, r9
 801068c:	da58      	bge.n	8010740 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801068e:	1415      	asrs	r5, r2, #16
 8010690:	d456      	bmi.n	8010740 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010692:	9f02      	ldr	r7, [sp, #8]
 8010694:	42bd      	cmp	r5, r7
 8010696:	da53      	bge.n	8010740 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010698:	fb09 4505 	mla	r5, r9, r5, r4
 801069c:	9c04      	ldr	r4, [sp, #16]
 801069e:	5d64      	ldrb	r4, [r4, r5]
 80106a0:	2cff      	cmp	r4, #255	; 0xff
 80106a2:	d053      	beq.n	801074c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 80106a4:	2c00      	cmp	r4, #0
 80106a6:	d04b      	beq.n	8010740 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80106a8:	9f01      	ldr	r7, [sp, #4]
 80106aa:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 80106ae:	f06f 0501 	mvn.w	r5, #1
 80106b2:	4375      	muls	r5, r6
 80106b4:	9503      	str	r5, [sp, #12]
 80106b6:	5b45      	ldrh	r5, [r0, r5]
 80106b8:	fa1f fc84 	uxth.w	ip, r4
 80106bc:	122f      	asrs	r7, r5, #8
 80106be:	43e4      	mvns	r4, r4
 80106c0:	b2e4      	uxtb	r4, r4
 80106c2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80106c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80106ca:	fb17 f704 	smulbb	r7, r7, r4
 80106ce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80106d2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80106d6:	00ed      	lsls	r5, r5, #3
 80106d8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80106dc:	b2ed      	uxtb	r5, r5
 80106de:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80106e2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80106e6:	fb15 f504 	smulbb	r5, r5, r4
 80106ea:	fa5f f888 	uxtb.w	r8, r8
 80106ee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80106f2:	fb08 550c 	mla	r5, r8, ip, r5
 80106f6:	fb1a fa04 	smulbb	sl, sl, r4
 80106fa:	fa1f fe8e 	uxth.w	lr, lr
 80106fe:	b2ad      	uxth	r5, r5
 8010700:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010704:	fb07 a70c 	mla	r7, r7, ip, sl
 8010708:	f10e 0401 	add.w	r4, lr, #1
 801070c:	f105 0a01 	add.w	sl, r5, #1
 8010710:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8010714:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010718:	b2bf      	uxth	r7, r7
 801071a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801071e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8010722:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010726:	f107 0a01 	add.w	sl, r7, #1
 801072a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801072e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010732:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010736:	9c03      	ldr	r4, [sp, #12]
 8010738:	ea4e 0e0a 	orr.w	lr, lr, sl
 801073c:	f820 e004 	strh.w	lr, [r0, r4]
 8010740:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010742:	4421      	add	r1, r4
 8010744:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010746:	3e01      	subs	r6, #1
 8010748:	4422      	add	r2, r4
 801074a:	e75a      	b.n	8010602 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801074c:	9c01      	ldr	r4, [sp, #4]
 801074e:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8010752:	f06f 0401 	mvn.w	r4, #1
 8010756:	4374      	muls	r4, r6
 8010758:	5305      	strh	r5, [r0, r4]
 801075a:	e7f1      	b.n	8010740 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801075c:	f04f 0800 	mov.w	r8, #0
 8010760:	eba3 0408 	sub.w	r4, r3, r8
 8010764:	2c00      	cmp	r4, #0
 8010766:	f77f af4f 	ble.w	8010608 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801076a:	140c      	asrs	r4, r1, #16
 801076c:	1415      	asrs	r5, r2, #16
 801076e:	fb09 4505 	mla	r5, r9, r5, r4
 8010772:	9c04      	ldr	r4, [sp, #16]
 8010774:	5d64      	ldrb	r4, [r4, r5]
 8010776:	2cff      	cmp	r4, #255	; 0xff
 8010778:	d04f      	beq.n	801081a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801077a:	2c00      	cmp	r4, #0
 801077c:	d046      	beq.n	801080c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 801077e:	9e01      	ldr	r6, [sp, #4]
 8010780:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8010784:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 8010788:	b2a7      	uxth	r7, r4
 801078a:	122e      	asrs	r6, r5, #8
 801078c:	43e4      	mvns	r4, r4
 801078e:	b2e4      	uxtb	r4, r4
 8010790:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010794:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010798:	fb16 f604 	smulbb	r6, r6, r4
 801079c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80107a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80107a4:	00ed      	lsls	r5, r5, #3
 80107a6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80107aa:	b2ed      	uxtb	r5, r5
 80107ac:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80107b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80107b4:	fb15 f504 	smulbb	r5, r5, r4
 80107b8:	fa5f fe8e 	uxtb.w	lr, lr
 80107bc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80107c0:	fb0e 5507 	mla	r5, lr, r7, r5
 80107c4:	fb1a fa04 	smulbb	sl, sl, r4
 80107c8:	fa1f fc8c 	uxth.w	ip, ip
 80107cc:	b2ad      	uxth	r5, r5
 80107ce:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80107d2:	fb06 a607 	mla	r6, r6, r7, sl
 80107d6:	f10c 0401 	add.w	r4, ip, #1
 80107da:	f105 0a01 	add.w	sl, r5, #1
 80107de:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80107e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80107e6:	b2b6      	uxth	r6, r6
 80107e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80107ec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80107f0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80107f4:	f106 0a01 	add.w	sl, r6, #1
 80107f8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80107fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010800:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010804:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010808:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 801080c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801080e:	4421      	add	r1, r4
 8010810:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010812:	f108 0801 	add.w	r8, r8, #1
 8010816:	4422      	add	r2, r4
 8010818:	e7a2      	b.n	8010760 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801081a:	9c01      	ldr	r4, [sp, #4]
 801081c:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8010820:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 8010824:	e7f2      	b.n	801080c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8010826:	b007      	add	sp, #28
 8010828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801082c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801082c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010830:	b085      	sub	sp, #20
 8010832:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010834:	9203      	str	r2, [sp, #12]
 8010836:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801083a:	9201      	str	r2, [sp, #4]
 801083c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010840:	9100      	str	r1, [sp, #0]
 8010842:	6841      	ldr	r1, [r0, #4]
 8010844:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 8010848:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 801084c:	fb01 2404 	mla	r4, r1, r4, r2
 8010850:	6802      	ldr	r2, [r0, #0]
 8010852:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010856:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010858:	fa1f fe85 	uxth.w	lr, r5
 801085c:	6812      	ldr	r2, [r2, #0]
 801085e:	9202      	str	r2, [sp, #8]
 8010860:	43ed      	mvns	r5, r5
 8010862:	b2ed      	uxtb	r5, r5
 8010864:	9a00      	ldr	r2, [sp, #0]
 8010866:	2a00      	cmp	r2, #0
 8010868:	dc03      	bgt.n	8010872 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 801086a:	9a03      	ldr	r2, [sp, #12]
 801086c:	2a00      	cmp	r2, #0
 801086e:	f340 8117 	ble.w	8010aa0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8010872:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010874:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010878:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801087a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801087e:	2b00      	cmp	r3, #0
 8010880:	dd0f      	ble.n	80108a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8010882:	1408      	asrs	r0, r1, #16
 8010884:	d406      	bmi.n	8010894 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010886:	4540      	cmp	r0, r8
 8010888:	da04      	bge.n	8010894 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801088a:	1410      	asrs	r0, r2, #16
 801088c:	d402      	bmi.n	8010894 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801088e:	9e01      	ldr	r6, [sp, #4]
 8010890:	42b0      	cmp	r0, r6
 8010892:	db07      	blt.n	80108a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010894:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010896:	4401      	add	r1, r0
 8010898:	9812      	ldr	r0, [sp, #72]	; 0x48
 801089a:	3b01      	subs	r3, #1
 801089c:	4402      	add	r2, r0
 801089e:	3402      	adds	r4, #2
 80108a0:	e7ed      	b.n	801087e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 80108a2:	d069      	beq.n	8010978 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 80108a4:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80108a6:	1e58      	subs	r0, r3, #1
 80108a8:	fb06 1600 	mla	r6, r6, r0, r1
 80108ac:	1436      	asrs	r6, r6, #16
 80108ae:	d459      	bmi.n	8010964 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80108b0:	4546      	cmp	r6, r8
 80108b2:	da57      	bge.n	8010964 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80108b4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80108b6:	fb06 2000 	mla	r0, r6, r0, r2
 80108ba:	1400      	asrs	r0, r0, #16
 80108bc:	d452      	bmi.n	8010964 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80108be:	9e01      	ldr	r6, [sp, #4]
 80108c0:	42b0      	cmp	r0, r6
 80108c2:	da4f      	bge.n	8010964 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80108c4:	469a      	mov	sl, r3
 80108c6:	46a3      	mov	fp, r4
 80108c8:	f1ba 0f00 	cmp.w	sl, #0
 80108cc:	dd50      	ble.n	8010970 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 80108ce:	140e      	asrs	r6, r1, #16
 80108d0:	1410      	asrs	r0, r2, #16
 80108d2:	fb08 6000 	mla	r0, r8, r0, r6
 80108d6:	9e02      	ldr	r6, [sp, #8]
 80108d8:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 80108dc:	f8bb 6000 	ldrh.w	r6, [fp]
 80108e0:	1237      	asrs	r7, r6, #8
 80108e2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80108e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80108ea:	fb17 f705 	smulbb	r7, r7, r5
 80108ee:	ea4f 09e6 	mov.w	r9, r6, asr #3
 80108f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80108f6:	00f6      	lsls	r6, r6, #3
 80108f8:	fb0c 7c0e 	mla	ip, ip, lr, r7
 80108fc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010900:	10c7      	asrs	r7, r0, #3
 8010902:	b2f6      	uxtb	r6, r6
 8010904:	00c0      	lsls	r0, r0, #3
 8010906:	fb19 f905 	smulbb	r9, r9, r5
 801090a:	fb16 f605 	smulbb	r6, r6, r5
 801090e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010912:	b2c0      	uxtb	r0, r0
 8010914:	fa1f fc8c 	uxth.w	ip, ip
 8010918:	fb07 970e 	mla	r7, r7, lr, r9
 801091c:	fb00 600e 	mla	r0, r0, lr, r6
 8010920:	b280      	uxth	r0, r0
 8010922:	b2bf      	uxth	r7, r7
 8010924:	f10c 0601 	add.w	r6, ip, #1
 8010928:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801092c:	f107 0901 	add.w	r9, r7, #1
 8010930:	1c46      	adds	r6, r0, #1
 8010932:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8010936:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801093a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801093c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010940:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010944:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010948:	ea4c 0c06 	orr.w	ip, ip, r6
 801094c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010950:	4401      	add	r1, r0
 8010952:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010954:	ea4c 0c09 	orr.w	ip, ip, r9
 8010958:	f82b cb02 	strh.w	ip, [fp], #2
 801095c:	4402      	add	r2, r0
 801095e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010962:	e7b1      	b.n	80108c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010964:	f04f 0900 	mov.w	r9, #0
 8010968:	eb03 0009 	add.w	r0, r3, r9
 801096c:	2800      	cmp	r0, #0
 801096e:	dc41      	bgt.n	80109f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 8010970:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010974:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010978:	9b00      	ldr	r3, [sp, #0]
 801097a:	2b00      	cmp	r3, #0
 801097c:	f340 8090 	ble.w	8010aa0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8010980:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010984:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010988:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801098c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801098e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010992:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010996:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801099a:	eef0 6a62 	vmov.f32	s13, s5
 801099e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80109a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80109a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80109aa:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80109ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80109b2:	eef0 6a43 	vmov.f32	s13, s6
 80109b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80109ba:	ee12 2a90 	vmov	r2, s5
 80109be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80109c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80109c6:	ee13 2a10 	vmov	r2, s6
 80109ca:	9311      	str	r3, [sp, #68]	; 0x44
 80109cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80109ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80109d2:	9312      	str	r3, [sp, #72]	; 0x48
 80109d4:	9b00      	ldr	r3, [sp, #0]
 80109d6:	9a03      	ldr	r2, [sp, #12]
 80109d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80109dc:	3b01      	subs	r3, #1
 80109de:	9300      	str	r3, [sp, #0]
 80109e0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80109e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80109e6:	eeb0 3a67 	vmov.f32	s6, s15
 80109ea:	bf08      	it	eq
 80109ec:	4613      	moveq	r3, r2
 80109ee:	eef0 2a47 	vmov.f32	s5, s14
 80109f2:	e737      	b.n	8010864 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 80109f4:	140e      	asrs	r6, r1, #16
 80109f6:	d44c      	bmi.n	8010a92 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80109f8:	4546      	cmp	r6, r8
 80109fa:	da4a      	bge.n	8010a92 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80109fc:	1410      	asrs	r0, r2, #16
 80109fe:	d448      	bmi.n	8010a92 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010a00:	9f01      	ldr	r7, [sp, #4]
 8010a02:	42b8      	cmp	r0, r7
 8010a04:	da45      	bge.n	8010a92 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010a06:	fb08 6000 	mla	r0, r8, r0, r6
 8010a0a:	9e02      	ldr	r6, [sp, #8]
 8010a0c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010a10:	f06f 0601 	mvn.w	r6, #1
 8010a14:	fb06 fb09 	mul.w	fp, r6, r9
 8010a18:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010a1c:	f834 600b 	ldrh.w	r6, [r4, fp]
 8010a20:	1237      	asrs	r7, r6, #8
 8010a22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010a26:	fb17 f705 	smulbb	r7, r7, r5
 8010a2a:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 8010a2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010a32:	00f6      	lsls	r6, r6, #3
 8010a34:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010a38:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010a3c:	10c7      	asrs	r7, r0, #3
 8010a3e:	b2f6      	uxtb	r6, r6
 8010a40:	00c0      	lsls	r0, r0, #3
 8010a42:	fb1a fa05 	smulbb	sl, sl, r5
 8010a46:	fb16 f605 	smulbb	r6, r6, r5
 8010a4a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010a4e:	b2c0      	uxtb	r0, r0
 8010a50:	fa1f fc8c 	uxth.w	ip, ip
 8010a54:	fb07 a70e 	mla	r7, r7, lr, sl
 8010a58:	fb00 600e 	mla	r0, r0, lr, r6
 8010a5c:	b2bf      	uxth	r7, r7
 8010a5e:	b280      	uxth	r0, r0
 8010a60:	f10c 0601 	add.w	r6, ip, #1
 8010a64:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010a68:	f107 0a01 	add.w	sl, r7, #1
 8010a6c:	1c46      	adds	r6, r0, #1
 8010a6e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8010a72:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010a76:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010a7a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010a7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010a82:	ea4c 0c06 	orr.w	ip, ip, r6
 8010a86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010a8a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010a8e:	f824 c00b 	strh.w	ip, [r4, fp]
 8010a92:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010a94:	4401      	add	r1, r0
 8010a96:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010a98:	f109 39ff 	add.w	r9, r9, #4294967295
 8010a9c:	4402      	add	r2, r0
 8010a9e:	e763      	b.n	8010968 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 8010aa0:	b005      	add	sp, #20
 8010aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010aa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010aa6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010aaa:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010aac:	9201      	str	r2, [sp, #4]
 8010aae:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 8010ab2:	6844      	ldr	r4, [r0, #4]
 8010ab4:	6800      	ldr	r0, [r0, #0]
 8010ab6:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 8010aba:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 8010abe:	fb04 2505 	mla	r5, r4, r5, r2
 8010ac2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010ac6:	9816      	ldr	r0, [sp, #88]	; 0x58
 8010ac8:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 8010acc:	6802      	ldr	r2, [r0, #0]
 8010ace:	9200      	str	r2, [sp, #0]
 8010ad0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010ad4:	2900      	cmp	r1, #0
 8010ad6:	dc03      	bgt.n	8010ae0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010ad8:	9a01      	ldr	r2, [sp, #4]
 8010ada:	2a00      	cmp	r2, #0
 8010adc:	f340 8095 	ble.w	8010c0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8010ae0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010ae2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8010ae6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010ae8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010aec:	2b00      	cmp	r3, #0
 8010aee:	dd0e      	ble.n	8010b0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010af0:	ea5f 4824 	movs.w	r8, r4, asr #16
 8010af4:	d406      	bmi.n	8010b04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010af6:	45e0      	cmp	r8, ip
 8010af8:	da04      	bge.n	8010b04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010afa:	ea5f 4820 	movs.w	r8, r0, asr #16
 8010afe:	d401      	bmi.n	8010b04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010b00:	45f0      	cmp	r8, lr
 8010b02:	db05      	blt.n	8010b10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010b04:	443c      	add	r4, r7
 8010b06:	4430      	add	r0, r6
 8010b08:	3b01      	subs	r3, #1
 8010b0a:	3502      	adds	r5, #2
 8010b0c:	e7ee      	b.n	8010aec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8010b0e:	d010      	beq.n	8010b32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010b10:	f103 38ff 	add.w	r8, r3, #4294967295
 8010b14:	fb07 4908 	mla	r9, r7, r8, r4
 8010b18:	ea5f 4929 	movs.w	r9, r9, asr #16
 8010b1c:	d53d      	bpl.n	8010b9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8010b1e:	4698      	mov	r8, r3
 8010b20:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 8010b24:	f1b8 0f00 	cmp.w	r8, #0
 8010b28:	dc55      	bgt.n	8010bd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 8010b2a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010b2e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010b32:	2900      	cmp	r1, #0
 8010b34:	dd69      	ble.n	8010c0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8010b36:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010b3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010b3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010b42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010b44:	3901      	subs	r1, #1
 8010b46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010b4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010b4e:	eeb0 6a62 	vmov.f32	s12, s5
 8010b52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010b56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010b5e:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8010b62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010b66:	eeb0 6a43 	vmov.f32	s12, s6
 8010b6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010b6e:	ee12 2a90 	vmov	r2, s5
 8010b72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010b76:	fb92 f7f3 	sdiv	r7, r2, r3
 8010b7a:	ee13 2a10 	vmov	r2, s6
 8010b7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b82:	fb92 f6f3 	sdiv	r6, r2, r3
 8010b86:	9a01      	ldr	r2, [sp, #4]
 8010b88:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8010b8c:	bf08      	it	eq
 8010b8e:	4613      	moveq	r3, r2
 8010b90:	eeb0 3a67 	vmov.f32	s6, s15
 8010b94:	eef0 2a47 	vmov.f32	s5, s14
 8010b98:	e79c      	b.n	8010ad4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 8010b9a:	45e1      	cmp	r9, ip
 8010b9c:	dabf      	bge.n	8010b1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010b9e:	fb06 0808 	mla	r8, r6, r8, r0
 8010ba2:	ea5f 4828 	movs.w	r8, r8, asr #16
 8010ba6:	d4ba      	bmi.n	8010b1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010ba8:	45f0      	cmp	r8, lr
 8010baa:	dab8      	bge.n	8010b1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010bac:	4698      	mov	r8, r3
 8010bae:	46aa      	mov	sl, r5
 8010bb0:	f1b8 0f00 	cmp.w	r8, #0
 8010bb4:	ddb9      	ble.n	8010b2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8010bb6:	ea4f 4920 	mov.w	r9, r0, asr #16
 8010bba:	ea4f 4b24 	mov.w	fp, r4, asr #16
 8010bbe:	fb0c b909 	mla	r9, ip, r9, fp
 8010bc2:	9a00      	ldr	r2, [sp, #0]
 8010bc4:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 8010bc8:	f82a 9b02 	strh.w	r9, [sl], #2
 8010bcc:	443c      	add	r4, r7
 8010bce:	4430      	add	r0, r6
 8010bd0:	f108 38ff 	add.w	r8, r8, #4294967295
 8010bd4:	e7ec      	b.n	8010bb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8010bd6:	ea5f 4a24 	movs.w	sl, r4, asr #16
 8010bda:	d411      	bmi.n	8010c00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010bdc:	45e2      	cmp	sl, ip
 8010bde:	da0f      	bge.n	8010c00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010be0:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010be4:	d40c      	bmi.n	8010c00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010be6:	45f1      	cmp	r9, lr
 8010be8:	da0a      	bge.n	8010c00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010bea:	fb0c a909 	mla	r9, ip, r9, sl
 8010bee:	9a00      	ldr	r2, [sp, #0]
 8010bf0:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 8010bf4:	f06f 0201 	mvn.w	r2, #1
 8010bf8:	fb02 f908 	mul.w	r9, r2, r8
 8010bfc:	f82b a009 	strh.w	sl, [fp, r9]
 8010c00:	443c      	add	r4, r7
 8010c02:	4430      	add	r0, r6
 8010c04:	f108 38ff 	add.w	r8, r8, #4294967295
 8010c08:	e78c      	b.n	8010b24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010c0a:	b003      	add	sp, #12
 8010c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c14:	b087      	sub	sp, #28
 8010c16:	468b      	mov	fp, r1
 8010c18:	9204      	str	r2, [sp, #16]
 8010c1a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010c1e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010c20:	9201      	str	r2, [sp, #4]
 8010c22:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010c26:	9205      	str	r2, [sp, #20]
 8010c28:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010c2c:	6841      	ldr	r1, [r0, #4]
 8010c2e:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010c32:	fb01 2404 	mla	r4, r1, r4, r2
 8010c36:	6802      	ldr	r2, [r0, #0]
 8010c38:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010c3c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010c3e:	6812      	ldr	r2, [r2, #0]
 8010c40:	9203      	str	r2, [sp, #12]
 8010c42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010c46:	f1bb 0f00 	cmp.w	fp, #0
 8010c4a:	dc03      	bgt.n	8010c54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8010c4c:	9a04      	ldr	r2, [sp, #16]
 8010c4e:	2a00      	cmp	r2, #0
 8010c50:	f340 812c 	ble.w	8010eac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8010c54:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010c56:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010c5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010c5c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010c60:	2b00      	cmp	r3, #0
 8010c62:	dd0f      	ble.n	8010c84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010c64:	1402      	asrs	r2, r0, #16
 8010c66:	d406      	bmi.n	8010c76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010c68:	4542      	cmp	r2, r8
 8010c6a:	da04      	bge.n	8010c76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010c6c:	140a      	asrs	r2, r1, #16
 8010c6e:	d402      	bmi.n	8010c76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010c70:	9d01      	ldr	r5, [sp, #4]
 8010c72:	42aa      	cmp	r2, r5
 8010c74:	db07      	blt.n	8010c86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8010c76:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010c78:	4410      	add	r0, r2
 8010c7a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010c7c:	3b01      	subs	r3, #1
 8010c7e:	4411      	add	r1, r2
 8010c80:	3402      	adds	r4, #2
 8010c82:	e7ed      	b.n	8010c60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010c84:	d01a      	beq.n	8010cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8010c86:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010c88:	1e5a      	subs	r2, r3, #1
 8010c8a:	fb05 0502 	mla	r5, r5, r2, r0
 8010c8e:	142d      	asrs	r5, r5, #16
 8010c90:	d40a      	bmi.n	8010ca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010c92:	4545      	cmp	r5, r8
 8010c94:	da08      	bge.n	8010ca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010c96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010c98:	fb05 1202 	mla	r2, r5, r2, r1
 8010c9c:	1412      	asrs	r2, r2, #16
 8010c9e:	d403      	bmi.n	8010ca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010ca0:	9d01      	ldr	r5, [sp, #4]
 8010ca2:	42aa      	cmp	r2, r5
 8010ca4:	f2c0 80a6 	blt.w	8010df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8010ca8:	f04f 0c00 	mov.w	ip, #0
 8010cac:	eb03 020c 	add.w	r2, r3, ip
 8010cb0:	2a00      	cmp	r2, #0
 8010cb2:	dc3e      	bgt.n	8010d32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 8010cb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010cb8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010cbc:	f1bb 0f00 	cmp.w	fp, #0
 8010cc0:	f340 80f4 	ble.w	8010eac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8010cc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010cc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010ccc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010cd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010cd2:	f1bb 0b01 	subs.w	fp, fp, #1
 8010cd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010cda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010cde:	eeb0 6a62 	vmov.f32	s12, s5
 8010ce2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010ce6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010cea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010cee:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010cf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010cf6:	eeb0 6a43 	vmov.f32	s12, s6
 8010cfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010cfe:	ee12 2a90 	vmov	r2, s5
 8010d02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010d06:	fb92 f3f3 	sdiv	r3, r2, r3
 8010d0a:	ee13 2a10 	vmov	r2, s6
 8010d0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010d12:	9313      	str	r3, [sp, #76]	; 0x4c
 8010d14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d16:	fb92 f3f3 	sdiv	r3, r2, r3
 8010d1a:	9a04      	ldr	r2, [sp, #16]
 8010d1c:	9314      	str	r3, [sp, #80]	; 0x50
 8010d1e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010d22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d24:	eeb0 3a67 	vmov.f32	s6, s15
 8010d28:	bf08      	it	eq
 8010d2a:	4613      	moveq	r3, r2
 8010d2c:	eef0 2a47 	vmov.f32	s5, s14
 8010d30:	e789      	b.n	8010c46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8010d32:	1405      	asrs	r5, r0, #16
 8010d34:	d457      	bmi.n	8010de6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010d36:	4545      	cmp	r5, r8
 8010d38:	da55      	bge.n	8010de6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010d3a:	140a      	asrs	r2, r1, #16
 8010d3c:	d453      	bmi.n	8010de6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010d3e:	9e01      	ldr	r6, [sp, #4]
 8010d40:	42b2      	cmp	r2, r6
 8010d42:	da50      	bge.n	8010de6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010d44:	fb08 5202 	mla	r2, r8, r2, r5
 8010d48:	9d03      	ldr	r5, [sp, #12]
 8010d4a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010d4e:	0e2e      	lsrs	r6, r5, #24
 8010d50:	d049      	beq.n	8010de6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010d52:	f06f 0201 	mvn.w	r2, #1
 8010d56:	fb02 f20c 	mul.w	r2, r2, ip
 8010d5a:	9202      	str	r2, [sp, #8]
 8010d5c:	f834 e002 	ldrh.w	lr, [r4, r2]
 8010d60:	9a05      	ldr	r2, [sp, #20]
 8010d62:	4356      	muls	r6, r2
 8010d64:	1c72      	adds	r2, r6, #1
 8010d66:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010d6a:	1212      	asrs	r2, r2, #8
 8010d6c:	fa1f f982 	uxth.w	r9, r2
 8010d70:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010d74:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010d78:	43d2      	mvns	r2, r2
 8010d7a:	b2d2      	uxtb	r2, r2
 8010d7c:	fb16 f609 	smulbb	r6, r6, r9
 8010d80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010d84:	fb07 6702 	mla	r7, r7, r2, r6
 8010d88:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010d8c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010d90:	b2ed      	uxtb	r5, r5
 8010d92:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010d96:	fa5f fe8e 	uxtb.w	lr, lr
 8010d9a:	fb15 f509 	smulbb	r5, r5, r9
 8010d9e:	fb0e 5502 	mla	r5, lr, r2, r5
 8010da2:	b2bf      	uxth	r7, r7
 8010da4:	fb1a fa09 	smulbb	sl, sl, r9
 8010da8:	b2ad      	uxth	r5, r5
 8010daa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010dae:	fb06 a602 	mla	r6, r6, r2, sl
 8010db2:	1c7a      	adds	r2, r7, #1
 8010db4:	f105 0a01 	add.w	sl, r5, #1
 8010db8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010dbc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010dc0:	b2b6      	uxth	r6, r6
 8010dc2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010dc6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010dca:	ea47 070a 	orr.w	r7, r7, sl
 8010dce:	f106 0a01 	add.w	sl, r6, #1
 8010dd2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010dd6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010dda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010dde:	9a02      	ldr	r2, [sp, #8]
 8010de0:	ea47 070a 	orr.w	r7, r7, sl
 8010de4:	52a7      	strh	r7, [r4, r2]
 8010de6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010de8:	4410      	add	r0, r2
 8010dea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010dec:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010df0:	4411      	add	r1, r2
 8010df2:	e75b      	b.n	8010cac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010df4:	f04f 0e00 	mov.w	lr, #0
 8010df8:	eba3 020e 	sub.w	r2, r3, lr
 8010dfc:	2a00      	cmp	r2, #0
 8010dfe:	f77f af59 	ble.w	8010cb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8010e02:	1405      	asrs	r5, r0, #16
 8010e04:	140a      	asrs	r2, r1, #16
 8010e06:	fb08 5202 	mla	r2, r8, r2, r5
 8010e0a:	9d03      	ldr	r5, [sp, #12]
 8010e0c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010e10:	0e2e      	lsrs	r6, r5, #24
 8010e12:	d044      	beq.n	8010e9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 8010e14:	9a05      	ldr	r2, [sp, #20]
 8010e16:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010e1a:	4356      	muls	r6, r2
 8010e1c:	1c72      	adds	r2, r6, #1
 8010e1e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010e22:	1212      	asrs	r2, r2, #8
 8010e24:	fa1f f982 	uxth.w	r9, r2
 8010e28:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010e2c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010e30:	43d2      	mvns	r2, r2
 8010e32:	b2d2      	uxtb	r2, r2
 8010e34:	fb16 f609 	smulbb	r6, r6, r9
 8010e38:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010e3c:	fb07 6702 	mla	r7, r7, r2, r6
 8010e40:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010e44:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010e48:	b2ed      	uxtb	r5, r5
 8010e4a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010e4e:	fa5f fc8c 	uxtb.w	ip, ip
 8010e52:	fb15 f509 	smulbb	r5, r5, r9
 8010e56:	fb0c 5502 	mla	r5, ip, r2, r5
 8010e5a:	b2bf      	uxth	r7, r7
 8010e5c:	fb1a fa09 	smulbb	sl, sl, r9
 8010e60:	b2ad      	uxth	r5, r5
 8010e62:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010e66:	fb06 a602 	mla	r6, r6, r2, sl
 8010e6a:	1c7a      	adds	r2, r7, #1
 8010e6c:	f105 0a01 	add.w	sl, r5, #1
 8010e70:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010e74:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010e78:	b2b6      	uxth	r6, r6
 8010e7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010e7e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010e82:	ea47 070a 	orr.w	r7, r7, sl
 8010e86:	f106 0a01 	add.w	sl, r6, #1
 8010e8a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010e8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010e92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010e96:	ea47 070a 	orr.w	r7, r7, sl
 8010e9a:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8010e9e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010ea0:	4410      	add	r0, r2
 8010ea2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010ea4:	f10e 0e01 	add.w	lr, lr, #1
 8010ea8:	4411      	add	r1, r2
 8010eaa:	e7a5      	b.n	8010df8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8010eac:	b007      	add	sp, #28
 8010eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010eb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010eb8:	b087      	sub	sp, #28
 8010eba:	468b      	mov	fp, r1
 8010ebc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010ebe:	9205      	str	r2, [sp, #20]
 8010ec0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010ec4:	9201      	str	r2, [sp, #4]
 8010ec6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010eca:	6861      	ldr	r1, [r4, #4]
 8010ecc:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8010ed0:	fb01 2000 	mla	r0, r1, r0, r2
 8010ed4:	6822      	ldr	r2, [r4, #0]
 8010ed6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010eda:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010edc:	6812      	ldr	r2, [r2, #0]
 8010ede:	9203      	str	r2, [sp, #12]
 8010ee0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010ee4:	f1bb 0f00 	cmp.w	fp, #0
 8010ee8:	dc03      	bgt.n	8010ef2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010eea:	9a05      	ldr	r2, [sp, #20]
 8010eec:	2a00      	cmp	r2, #0
 8010eee:	f340 814b 	ble.w	8011188 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8010ef2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010ef4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010ef8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010efa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010efe:	2b00      	cmp	r3, #0
 8010f00:	dd0f      	ble.n	8010f22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010f02:	140c      	asrs	r4, r1, #16
 8010f04:	d406      	bmi.n	8010f14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010f06:	454c      	cmp	r4, r9
 8010f08:	da04      	bge.n	8010f14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010f0a:	1414      	asrs	r4, r2, #16
 8010f0c:	d402      	bmi.n	8010f14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010f0e:	9d01      	ldr	r5, [sp, #4]
 8010f10:	42ac      	cmp	r4, r5
 8010f12:	db07      	blt.n	8010f24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010f14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010f16:	4421      	add	r1, r4
 8010f18:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010f1a:	3b01      	subs	r3, #1
 8010f1c:	4422      	add	r2, r4
 8010f1e:	3002      	adds	r0, #2
 8010f20:	e7ed      	b.n	8010efe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8010f22:	d018      	beq.n	8010f56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 8010f24:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010f26:	1e5c      	subs	r4, r3, #1
 8010f28:	fb05 1504 	mla	r5, r5, r4, r1
 8010f2c:	142d      	asrs	r5, r5, #16
 8010f2e:	d40a      	bmi.n	8010f46 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010f30:	454d      	cmp	r5, r9
 8010f32:	da08      	bge.n	8010f46 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010f34:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010f36:	fb05 2404 	mla	r4, r5, r4, r2
 8010f3a:	1424      	asrs	r4, r4, #16
 8010f3c:	d403      	bmi.n	8010f46 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010f3e:	9d01      	ldr	r5, [sp, #4]
 8010f40:	42ac      	cmp	r4, r5
 8010f42:	f2c0 80bb 	blt.w	80110bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 8010f46:	2700      	movs	r7, #0
 8010f48:	19dc      	adds	r4, r3, r7
 8010f4a:	2c00      	cmp	r4, #0
 8010f4c:	dc3e      	bgt.n	8010fcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 8010f4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010f52:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010f56:	f1bb 0f00 	cmp.w	fp, #0
 8010f5a:	f340 8115 	ble.w	8011188 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8010f5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010f62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010f66:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010f6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010f6c:	f1bb 0b01 	subs.w	fp, fp, #1
 8010f70:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010f74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010f78:	eeb0 6a62 	vmov.f32	s12, s5
 8010f7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010f80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010f84:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010f88:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010f8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010f90:	eeb0 6a43 	vmov.f32	s12, s6
 8010f94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010f98:	ee12 2a90 	vmov	r2, s5
 8010f9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010fa0:	fb92 f3f3 	sdiv	r3, r2, r3
 8010fa4:	ee13 2a10 	vmov	r2, s6
 8010fa8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010fac:	9313      	str	r3, [sp, #76]	; 0x4c
 8010fae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010fb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8010fb4:	9a05      	ldr	r2, [sp, #20]
 8010fb6:	9314      	str	r3, [sp, #80]	; 0x50
 8010fb8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010fbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010fbe:	eeb0 3a67 	vmov.f32	s6, s15
 8010fc2:	bf08      	it	eq
 8010fc4:	4613      	moveq	r3, r2
 8010fc6:	eef0 2a47 	vmov.f32	s5, s14
 8010fca:	e78b      	b.n	8010ee4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 8010fcc:	140d      	asrs	r5, r1, #16
 8010fce:	d45c      	bmi.n	801108a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fd0:	454d      	cmp	r5, r9
 8010fd2:	da5a      	bge.n	801108a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fd4:	1414      	asrs	r4, r2, #16
 8010fd6:	d458      	bmi.n	801108a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fd8:	9e01      	ldr	r6, [sp, #4]
 8010fda:	42b4      	cmp	r4, r6
 8010fdc:	da55      	bge.n	801108a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fde:	fb09 5404 	mla	r4, r9, r4, r5
 8010fe2:	9d03      	ldr	r5, [sp, #12]
 8010fe4:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8010fe8:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8010fec:	d04d      	beq.n	801108a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fee:	0a26      	lsrs	r6, r4, #8
 8010ff0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8010ff4:	fa5f f58e 	uxtb.w	r5, lr
 8010ff8:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8010ffc:	9604      	str	r6, [sp, #16]
 8010ffe:	d04a      	beq.n	8011096 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8011000:	f06f 0601 	mvn.w	r6, #1
 8011004:	437e      	muls	r6, r7
 8011006:	fa1f fa85 	uxth.w	sl, r5
 801100a:	f830 8006 	ldrh.w	r8, [r0, r6]
 801100e:	9602      	str	r6, [sp, #8]
 8011010:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011014:	43ed      	mvns	r5, r5
 8011016:	fa5f fc8c 	uxtb.w	ip, ip
 801101a:	b2ed      	uxtb	r5, r5
 801101c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011020:	fb1c fc0a 	smulbb	ip, ip, sl
 8011024:	fb0e cc05 	mla	ip, lr, r5, ip
 8011028:	b2e4      	uxtb	r4, r4
 801102a:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 801102e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011032:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8011036:	fa5f f888 	uxtb.w	r8, r8
 801103a:	fb14 f40a 	smulbb	r4, r4, sl
 801103e:	fb08 4405 	mla	r4, r8, r5, r4
 8011042:	b2a4      	uxth	r4, r4
 8011044:	fa1f fc8c 	uxth.w	ip, ip
 8011048:	fb16 f60a 	smulbb	r6, r6, sl
 801104c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011050:	fb0e 6e05 	mla	lr, lr, r5, r6
 8011054:	1c66      	adds	r6, r4, #1
 8011056:	f10c 0501 	add.w	r5, ip, #1
 801105a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801105e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011062:	fa1f fe8e 	uxth.w	lr, lr
 8011066:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801106a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801106e:	ea4c 0c06 	orr.w	ip, ip, r6
 8011072:	f10e 0601 	add.w	r6, lr, #1
 8011076:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 801107a:	0976      	lsrs	r6, r6, #5
 801107c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011080:	9c02      	ldr	r4, [sp, #8]
 8011082:	ea4c 0c06 	orr.w	ip, ip, r6
 8011086:	f820 c004 	strh.w	ip, [r0, r4]
 801108a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801108c:	4421      	add	r1, r4
 801108e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011090:	3f01      	subs	r7, #1
 8011092:	4422      	add	r2, r4
 8011094:	e758      	b.n	8010f48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8011096:	4e3e      	ldr	r6, [pc, #248]	; (8011190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011098:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801109c:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 80110a0:	ea4c 0c04 	orr.w	ip, ip, r4
 80110a4:	9c04      	ldr	r4, [sp, #16]
 80110a6:	f06f 0501 	mvn.w	r5, #1
 80110aa:	00e6      	lsls	r6, r4, #3
 80110ac:	437d      	muls	r5, r7
 80110ae:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80110b2:	ea4c 0c04 	orr.w	ip, ip, r4
 80110b6:	f820 c005 	strh.w	ip, [r0, r5]
 80110ba:	e7e6      	b.n	801108a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80110bc:	f04f 0800 	mov.w	r8, #0
 80110c0:	eba3 0408 	sub.w	r4, r3, r8
 80110c4:	2c00      	cmp	r4, #0
 80110c6:	f77f af42 	ble.w	8010f4e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80110ca:	140d      	asrs	r5, r1, #16
 80110cc:	1414      	asrs	r4, r2, #16
 80110ce:	fb09 5404 	mla	r4, r9, r4, r5
 80110d2:	9d03      	ldr	r5, [sp, #12]
 80110d4:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 80110d8:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 80110dc:	d042      	beq.n	8011164 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80110de:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80110e2:	fa5f f58c 	uxtb.w	r5, ip
 80110e6:	ea4f 4714 	mov.w	r7, r4, lsr #16
 80110ea:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80110ee:	d040      	beq.n	8011172 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 80110f0:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 80110f4:	fa1f fa85 	uxth.w	sl, r5
 80110f8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80110fc:	43ed      	mvns	r5, r5
 80110fe:	b2ff      	uxtb	r7, r7
 8011100:	b2ed      	uxtb	r5, r5
 8011102:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011106:	fb17 f70a 	smulbb	r7, r7, sl
 801110a:	fb0c 7705 	mla	r7, ip, r5, r7
 801110e:	b2e4      	uxtb	r4, r4
 8011110:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011114:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011118:	fa5f fe8e 	uxtb.w	lr, lr
 801111c:	fb14 f40a 	smulbb	r4, r4, sl
 8011120:	fb0e 4405 	mla	r4, lr, r5, r4
 8011124:	b2f6      	uxtb	r6, r6
 8011126:	b2bf      	uxth	r7, r7
 8011128:	fb16 f60a 	smulbb	r6, r6, sl
 801112c:	b2a4      	uxth	r4, r4
 801112e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011132:	fb0c 6c05 	mla	ip, ip, r5, r6
 8011136:	1c7d      	adds	r5, r7, #1
 8011138:	1c66      	adds	r6, r4, #1
 801113a:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 801113e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011142:	fa1f fc8c 	uxth.w	ip, ip
 8011146:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801114a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801114e:	4337      	orrs	r7, r6
 8011150:	f10c 0601 	add.w	r6, ip, #1
 8011154:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011158:	0976      	lsrs	r6, r6, #5
 801115a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801115e:	4337      	orrs	r7, r6
 8011160:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8011164:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011166:	4421      	add	r1, r4
 8011168:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801116a:	f108 0801 	add.w	r8, r8, #1
 801116e:	4422      	add	r2, r4
 8011170:	e7a6      	b.n	80110c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 8011172:	4d07      	ldr	r5, [pc, #28]	; (8011190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011174:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011178:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 801117c:	00f6      	lsls	r6, r6, #3
 801117e:	4327      	orrs	r7, r4
 8011180:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8011184:	4327      	orrs	r7, r4
 8011186:	e7eb      	b.n	8011160 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 8011188:	b007      	add	sp, #28
 801118a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801118e:	bf00      	nop
 8011190:	fffff800 	.word	0xfffff800

08011194 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011198:	b089      	sub	sp, #36	; 0x24
 801119a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801119e:	9206      	str	r2, [sp, #24]
 80111a0:	f9bd 2068 	ldrsh.w	r2, [sp, #104]	; 0x68
 80111a4:	9202      	str	r2, [sp, #8]
 80111a6:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	; 0x6c
 80111aa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80111ac:	9203      	str	r2, [sp, #12]
 80111ae:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 80111b2:	9207      	str	r2, [sp, #28]
 80111b4:	e9dd 2518 	ldrd	r2, r5, [sp, #96]	; 0x60
 80111b8:	6860      	ldr	r0, [r4, #4]
 80111ba:	9101      	str	r1, [sp, #4]
 80111bc:	fb00 2505 	mla	r5, r0, r5, r2
 80111c0:	6822      	ldr	r2, [r4, #0]
 80111c2:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80111c6:	9a02      	ldr	r2, [sp, #8]
 80111c8:	3201      	adds	r2, #1
 80111ca:	f022 0201 	bic.w	r2, r2, #1
 80111ce:	9204      	str	r2, [sp, #16]
 80111d0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80111d2:	6812      	ldr	r2, [r2, #0]
 80111d4:	9205      	str	r2, [sp, #20]
 80111d6:	9a01      	ldr	r2, [sp, #4]
 80111d8:	2a00      	cmp	r2, #0
 80111da:	dc03      	bgt.n	80111e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 80111dc:	9a06      	ldr	r2, [sp, #24]
 80111de:	2a00      	cmp	r2, #0
 80111e0:	f340 8153 	ble.w	801148a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 80111e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80111e6:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80111ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80111ec:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80111f0:	2b00      	cmp	r3, #0
 80111f2:	dd10      	ble.n	8011216 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80111f4:	1422      	asrs	r2, r4, #16
 80111f6:	d407      	bmi.n	8011208 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80111f8:	9e02      	ldr	r6, [sp, #8]
 80111fa:	4296      	cmp	r6, r2
 80111fc:	dd04      	ble.n	8011208 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80111fe:	1402      	asrs	r2, r0, #16
 8011200:	d402      	bmi.n	8011208 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011202:	9e03      	ldr	r6, [sp, #12]
 8011204:	42b2      	cmp	r2, r6
 8011206:	db07      	blt.n	8011218 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8011208:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801120a:	4414      	add	r4, r2
 801120c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801120e:	3b01      	subs	r3, #1
 8011210:	4410      	add	r0, r2
 8011212:	3502      	adds	r5, #2
 8011214:	e7ec      	b.n	80111f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5c>
 8011216:	d00f      	beq.n	8011238 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011218:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801121a:	1e5a      	subs	r2, r3, #1
 801121c:	fb06 4602 	mla	r6, r6, r2, r4
 8011220:	1436      	asrs	r6, r6, #16
 8011222:	d545      	bpl.n	80112b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8011224:	469a      	mov	sl, r3
 8011226:	46a9      	mov	r9, r5
 8011228:	f1ba 0f00 	cmp.w	sl, #0
 801122c:	f300 80ba 	bgt.w	80113a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x210>
 8011230:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011234:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011238:	9b01      	ldr	r3, [sp, #4]
 801123a:	2b00      	cmp	r3, #0
 801123c:	f340 8125 	ble.w	801148a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8011240:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011244:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011248:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801124c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801124e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011252:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011256:	eeb0 6a62 	vmov.f32	s12, s5
 801125a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801125e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011262:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011266:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 801126a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801126e:	eeb0 6a43 	vmov.f32	s12, s6
 8011272:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011276:	ee12 2a90 	vmov	r2, s5
 801127a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801127e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011282:	ee13 2a10 	vmov	r2, s6
 8011286:	9315      	str	r3, [sp, #84]	; 0x54
 8011288:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801128a:	fb92 f3f3 	sdiv	r3, r2, r3
 801128e:	9316      	str	r3, [sp, #88]	; 0x58
 8011290:	9b01      	ldr	r3, [sp, #4]
 8011292:	9a06      	ldr	r2, [sp, #24]
 8011294:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011298:	3b01      	subs	r3, #1
 801129a:	9301      	str	r3, [sp, #4]
 801129c:	ed8d 6a14 	vstr	s12, [sp, #80]	; 0x50
 80112a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80112a2:	eeb0 3a67 	vmov.f32	s6, s15
 80112a6:	bf08      	it	eq
 80112a8:	4613      	moveq	r3, r2
 80112aa:	eef0 2a47 	vmov.f32	s5, s14
 80112ae:	e792      	b.n	80111d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 80112b0:	9f02      	ldr	r7, [sp, #8]
 80112b2:	42b7      	cmp	r7, r6
 80112b4:	ddb6      	ble.n	8011224 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80112b6:	9e16      	ldr	r6, [sp, #88]	; 0x58
 80112b8:	fb06 0202 	mla	r2, r6, r2, r0
 80112bc:	1412      	asrs	r2, r2, #16
 80112be:	d4b1      	bmi.n	8011224 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80112c0:	9e03      	ldr	r6, [sp, #12]
 80112c2:	42b2      	cmp	r2, r6
 80112c4:	daae      	bge.n	8011224 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80112c6:	f04f 0800 	mov.w	r8, #0
 80112ca:	eba3 0208 	sub.w	r2, r3, r8
 80112ce:	2a00      	cmp	r2, #0
 80112d0:	ddae      	ble.n	8011230 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80112d2:	9904      	ldr	r1, [sp, #16]
 80112d4:	1422      	asrs	r2, r4, #16
 80112d6:	1406      	asrs	r6, r0, #16
 80112d8:	fb01 2606 	mla	r6, r1, r6, r2
 80112dc:	0872      	lsrs	r2, r6, #1
 80112de:	9905      	ldr	r1, [sp, #20]
 80112e0:	5c8a      	ldrb	r2, [r1, r2]
 80112e2:	07f1      	lsls	r1, r6, #31
 80112e4:	bf54      	ite	pl
 80112e6:	f002 020f 	andpl.w	r2, r2, #15
 80112ea:	1112      	asrmi	r2, r2, #4
 80112ec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80112f0:	b2d2      	uxtb	r2, r2
 80112f2:	2a00      	cmp	r2, #0
 80112f4:	d04f      	beq.n	8011396 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80112f6:	4966      	ldr	r1, [pc, #408]	; (8011490 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 80112f8:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80112fc:	680e      	ldr	r6, [r1, #0]
 80112fe:	9907      	ldr	r1, [sp, #28]
 8011300:	434a      	muls	r2, r1
 8011302:	1c57      	adds	r7, r2, #1
 8011304:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8011308:	1212      	asrs	r2, r2, #8
 801130a:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801130e:	fa1f fa82 	uxth.w	sl, r2
 8011312:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011316:	43d2      	mvns	r2, r2
 8011318:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801131c:	b2d2      	uxtb	r2, r2
 801131e:	fb1c fc0a 	smulbb	ip, ip, sl
 8011322:	f3c6 09cc 	ubfx	r9, r6, #3, #13
 8011326:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801132a:	495a      	ldr	r1, [pc, #360]	; (8011494 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 801132c:	fb07 c702 	mla	r7, r7, r2, ip
 8011330:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011334:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011338:	fb19 f90a 	smulbb	r9, r9, sl
 801133c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011340:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011344:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011348:	b2f6      	uxtb	r6, r6
 801134a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801134e:	fa1f fc8c 	uxth.w	ip, ip
 8011352:	fa5f fe8e 	uxtb.w	lr, lr
 8011356:	fb16 f60a 	smulbb	r6, r6, sl
 801135a:	b2bf      	uxth	r7, r7
 801135c:	fb0e 6602 	mla	r6, lr, r2, r6
 8011360:	f10c 0901 	add.w	r9, ip, #1
 8011364:	b2b6      	uxth	r6, r6
 8011366:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801136a:	f107 0b01 	add.w	fp, r7, #1
 801136e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8011372:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8011376:	f106 0e01 	add.w	lr, r6, #1
 801137a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801137e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011382:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011386:	ea4c 0c07 	orr.w	ip, ip, r7
 801138a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801138e:	ea4c 0c0e 	orr.w	ip, ip, lr
 8011392:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011396:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011398:	4414      	add	r4, r2
 801139a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801139c:	f108 0801 	add.w	r8, r8, #1
 80113a0:	4410      	add	r0, r2
 80113a2:	e792      	b.n	80112ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x136>
 80113a4:	1422      	asrs	r2, r4, #16
 80113a6:	d467      	bmi.n	8011478 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80113a8:	9e02      	ldr	r6, [sp, #8]
 80113aa:	4296      	cmp	r6, r2
 80113ac:	dd64      	ble.n	8011478 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80113ae:	1406      	asrs	r6, r0, #16
 80113b0:	d462      	bmi.n	8011478 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80113b2:	9f03      	ldr	r7, [sp, #12]
 80113b4:	42be      	cmp	r6, r7
 80113b6:	da5f      	bge.n	8011478 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80113b8:	9f04      	ldr	r7, [sp, #16]
 80113ba:	fb06 2607 	mla	r6, r6, r7, r2
 80113be:	0872      	lsrs	r2, r6, #1
 80113c0:	9f05      	ldr	r7, [sp, #20]
 80113c2:	5cba      	ldrb	r2, [r7, r2]
 80113c4:	07f6      	lsls	r6, r6, #31
 80113c6:	bf54      	ite	pl
 80113c8:	f002 020f 	andpl.w	r2, r2, #15
 80113cc:	1112      	asrmi	r2, r2, #4
 80113ce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80113d2:	b2d2      	uxtb	r2, r2
 80113d4:	2a00      	cmp	r2, #0
 80113d6:	d04f      	beq.n	8011478 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80113d8:	9f07      	ldr	r7, [sp, #28]
 80113da:	4e2d      	ldr	r6, [pc, #180]	; (8011490 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 80113dc:	f8b9 e000 	ldrh.w	lr, [r9]
 80113e0:	6836      	ldr	r6, [r6, #0]
 80113e2:	492c      	ldr	r1, [pc, #176]	; (8011494 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 80113e4:	437a      	muls	r2, r7
 80113e6:	1c57      	adds	r7, r2, #1
 80113e8:	eb07 2222 	add.w	r2, r7, r2, asr #8
 80113ec:	1212      	asrs	r2, r2, #8
 80113ee:	ea4f 2c26 	mov.w	ip, r6, asr #8
 80113f2:	fa1f fb82 	uxth.w	fp, r2
 80113f6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80113fa:	43d2      	mvns	r2, r2
 80113fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011400:	b2d2      	uxtb	r2, r2
 8011402:	fb1c fc0b 	smulbb	ip, ip, fp
 8011406:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 801140a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801140e:	fb07 c702 	mla	r7, r7, r2, ip
 8011412:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011416:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801141a:	fb18 f80b 	smulbb	r8, r8, fp
 801141e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011422:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011426:	fb0c 8c02 	mla	ip, ip, r2, r8
 801142a:	b2f6      	uxtb	r6, r6
 801142c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011430:	fa1f fc8c 	uxth.w	ip, ip
 8011434:	fa5f fe8e 	uxtb.w	lr, lr
 8011438:	fb16 f60b 	smulbb	r6, r6, fp
 801143c:	b2bf      	uxth	r7, r7
 801143e:	fb0e 6602 	mla	r6, lr, r2, r6
 8011442:	f10c 0801 	add.w	r8, ip, #1
 8011446:	b2b6      	uxth	r6, r6
 8011448:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801144c:	f107 0801 	add.w	r8, r7, #1
 8011450:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8011454:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8011458:	f106 0e01 	add.w	lr, r6, #1
 801145c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8011460:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011464:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011468:	ea4c 0c07 	orr.w	ip, ip, r7
 801146c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011470:	ea4c 0c0e 	orr.w	ip, ip, lr
 8011474:	f8a9 c000 	strh.w	ip, [r9]
 8011478:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801147a:	4414      	add	r4, r2
 801147c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801147e:	f109 0902 	add.w	r9, r9, #2
 8011482:	4410      	add	r0, r2
 8011484:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011488:	e6ce      	b.n	8011228 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801148a:	b009      	add	sp, #36	; 0x24
 801148c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011490:	200014c0 	.word	0x200014c0
 8011494:	0007fff8 	.word	0x0007fff8

08011498 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801149c:	b087      	sub	sp, #28
 801149e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80114a2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80114a4:	9205      	str	r2, [sp, #20]
 80114a6:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80114aa:	9201      	str	r2, [sp, #4]
 80114ac:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80114b0:	6860      	ldr	r0, [r4, #4]
 80114b2:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 80114b6:	9100      	str	r1, [sp, #0]
 80114b8:	fb00 2505 	mla	r5, r0, r5, r2
 80114bc:	6822      	ldr	r2, [r4, #0]
 80114be:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80114c2:	f10b 0201 	add.w	r2, fp, #1
 80114c6:	f022 0201 	bic.w	r2, r2, #1
 80114ca:	9203      	str	r2, [sp, #12]
 80114cc:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80114ce:	6812      	ldr	r2, [r2, #0]
 80114d0:	9204      	str	r2, [sp, #16]
 80114d2:	9a00      	ldr	r2, [sp, #0]
 80114d4:	2a00      	cmp	r2, #0
 80114d6:	dc03      	bgt.n	80114e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 80114d8:	9a05      	ldr	r2, [sp, #20]
 80114da:	2a00      	cmp	r2, #0
 80114dc:	f340 815c 	ble.w	8011798 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 80114e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80114e2:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80114e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80114e8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80114ec:	2b00      	cmp	r3, #0
 80114ee:	dd0f      	ble.n	8011510 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80114f0:	1422      	asrs	r2, r4, #16
 80114f2:	d406      	bmi.n	8011502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80114f4:	4593      	cmp	fp, r2
 80114f6:	dd04      	ble.n	8011502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80114f8:	1402      	asrs	r2, r0, #16
 80114fa:	d402      	bmi.n	8011502 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80114fc:	9e01      	ldr	r6, [sp, #4]
 80114fe:	42b2      	cmp	r2, r6
 8011500:	db07      	blt.n	8011512 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8011502:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011504:	4414      	add	r4, r2
 8011506:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011508:	3b01      	subs	r3, #1
 801150a:	4410      	add	r0, r2
 801150c:	3502      	adds	r5, #2
 801150e:	e7ed      	b.n	80114ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8011510:	d018      	beq.n	8011544 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8011512:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011514:	1e5a      	subs	r2, r3, #1
 8011516:	fb06 4602 	mla	r6, r6, r2, r4
 801151a:	1436      	asrs	r6, r6, #16
 801151c:	d40a      	bmi.n	8011534 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801151e:	45b3      	cmp	fp, r6
 8011520:	dd08      	ble.n	8011534 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011522:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8011524:	fb06 0202 	mla	r2, r6, r2, r0
 8011528:	1412      	asrs	r2, r2, #16
 801152a:	d403      	bmi.n	8011534 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801152c:	9e01      	ldr	r6, [sp, #4]
 801152e:	42b2      	cmp	r2, r6
 8011530:	f2c0 80bf 	blt.w	80116b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 8011534:	2700      	movs	r7, #0
 8011536:	19da      	adds	r2, r3, r7
 8011538:	2a00      	cmp	r2, #0
 801153a:	dc3f      	bgt.n	80115bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 801153c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011540:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011544:	9b00      	ldr	r3, [sp, #0]
 8011546:	2b00      	cmp	r3, #0
 8011548:	f340 8126 	ble.w	8011798 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 801154c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011550:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011554:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011558:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801155a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801155e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011562:	eeb0 6a62 	vmov.f32	s12, s5
 8011566:	ee61 7a27 	vmul.f32	s15, s2, s15
 801156a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801156e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011572:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011576:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801157a:	eeb0 6a43 	vmov.f32	s12, s6
 801157e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011582:	ee12 2a90 	vmov	r2, s5
 8011586:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801158a:	fb92 f3f3 	sdiv	r3, r2, r3
 801158e:	ee13 2a10 	vmov	r2, s6
 8011592:	9313      	str	r3, [sp, #76]	; 0x4c
 8011594:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011596:	fb92 f3f3 	sdiv	r3, r2, r3
 801159a:	9314      	str	r3, [sp, #80]	; 0x50
 801159c:	9b00      	ldr	r3, [sp, #0]
 801159e:	9a05      	ldr	r2, [sp, #20]
 80115a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80115a4:	3b01      	subs	r3, #1
 80115a6:	9300      	str	r3, [sp, #0]
 80115a8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80115ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80115ae:	eeb0 3a67 	vmov.f32	s6, s15
 80115b2:	bf08      	it	eq
 80115b4:	4613      	moveq	r3, r2
 80115b6:	eef0 2a47 	vmov.f32	s5, s14
 80115ba:	e78a      	b.n	80114d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 80115bc:	1422      	asrs	r2, r4, #16
 80115be:	d466      	bmi.n	801168e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80115c0:	4593      	cmp	fp, r2
 80115c2:	dd64      	ble.n	801168e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80115c4:	1406      	asrs	r6, r0, #16
 80115c6:	d462      	bmi.n	801168e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80115c8:	9901      	ldr	r1, [sp, #4]
 80115ca:	428e      	cmp	r6, r1
 80115cc:	da5f      	bge.n	801168e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80115ce:	9903      	ldr	r1, [sp, #12]
 80115d0:	fb06 2601 	mla	r6, r6, r1, r2
 80115d4:	0872      	lsrs	r2, r6, #1
 80115d6:	9904      	ldr	r1, [sp, #16]
 80115d8:	5c8a      	ldrb	r2, [r1, r2]
 80115da:	07f6      	lsls	r6, r6, #31
 80115dc:	bf54      	ite	pl
 80115de:	f002 020f 	andpl.w	r2, r2, #15
 80115e2:	1112      	asrmi	r2, r2, #4
 80115e4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80115e8:	b2d2      	uxtb	r2, r2
 80115ea:	2a00      	cmp	r2, #0
 80115ec:	d04f      	beq.n	801168e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80115ee:	496c      	ldr	r1, [pc, #432]	; (80117a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 80115f0:	680e      	ldr	r6, [r1, #0]
 80115f2:	496c      	ldr	r1, [pc, #432]	; (80117a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 80115f4:	ea4f 2926 	mov.w	r9, r6, asr #8
 80115f8:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 80115fc:	2aff      	cmp	r2, #255	; 0xff
 80115fe:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011602:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8011606:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801160a:	b2f6      	uxtb	r6, r6
 801160c:	d045      	beq.n	801169a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 801160e:	f06f 0101 	mvn.w	r1, #1
 8011612:	4379      	muls	r1, r7
 8011614:	fa1f fa82 	uxth.w	sl, r2
 8011618:	f835 e001 	ldrh.w	lr, [r5, r1]
 801161c:	9102      	str	r1, [sp, #8]
 801161e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011622:	43d2      	mvns	r2, r2
 8011624:	b2d2      	uxtb	r2, r2
 8011626:	fb19 f90a 	smulbb	r9, r9, sl
 801162a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801162e:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011632:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8011636:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801163a:	fb18 f80a 	smulbb	r8, r8, sl
 801163e:	fb09 8802 	mla	r8, r9, r2, r8
 8011642:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011646:	fa1f f888 	uxth.w	r8, r8
 801164a:	fa5f fe8e 	uxtb.w	lr, lr
 801164e:	fb16 f60a 	smulbb	r6, r6, sl
 8011652:	fa1f fc8c 	uxth.w	ip, ip
 8011656:	fb0e 6602 	mla	r6, lr, r2, r6
 801165a:	f108 0901 	add.w	r9, r8, #1
 801165e:	b2b6      	uxth	r6, r6
 8011660:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8011664:	f10c 0901 	add.w	r9, ip, #1
 8011668:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801166c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011670:	1c72      	adds	r2, r6, #1
 8011672:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011676:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801167a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801167e:	ea48 080c 	orr.w	r8, r8, ip
 8011682:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011686:	ea48 0806 	orr.w	r8, r8, r6
 801168a:	f825 8001 	strh.w	r8, [r5, r1]
 801168e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011690:	4414      	add	r4, r2
 8011692:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011694:	3f01      	subs	r7, #1
 8011696:	4410      	add	r0, r2
 8011698:	e74d      	b.n	8011536 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801169a:	f06f 0201 	mvn.w	r2, #1
 801169e:	08f6      	lsrs	r6, r6, #3
 80116a0:	fb02 fe07 	mul.w	lr, r2, r7
 80116a4:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80116a8:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 80116ac:	f825 600e 	strh.w	r6, [r5, lr]
 80116b0:	e7ed      	b.n	801168e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80116b2:	f04f 0e00 	mov.w	lr, #0
 80116b6:	eba3 020e 	sub.w	r2, r3, lr
 80116ba:	2a00      	cmp	r2, #0
 80116bc:	f77f af3e 	ble.w	801153c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 80116c0:	9903      	ldr	r1, [sp, #12]
 80116c2:	1422      	asrs	r2, r4, #16
 80116c4:	1406      	asrs	r6, r0, #16
 80116c6:	fb01 2606 	mla	r6, r1, r6, r2
 80116ca:	0872      	lsrs	r2, r6, #1
 80116cc:	9904      	ldr	r1, [sp, #16]
 80116ce:	5c8a      	ldrb	r2, [r1, r2]
 80116d0:	07f1      	lsls	r1, r6, #31
 80116d2:	bf54      	ite	pl
 80116d4:	f002 020f 	andpl.w	r2, r2, #15
 80116d8:	1112      	asrmi	r2, r2, #4
 80116da:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80116de:	b2d2      	uxtb	r2, r2
 80116e0:	2a00      	cmp	r2, #0
 80116e2:	d04a      	beq.n	801177a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 80116e4:	492e      	ldr	r1, [pc, #184]	; (80117a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 80116e6:	680e      	ldr	r6, [r1, #0]
 80116e8:	492e      	ldr	r1, [pc, #184]	; (80117a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 80116ea:	ea4f 2926 	mov.w	r9, r6, asr #8
 80116ee:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 80116f2:	2aff      	cmp	r2, #255	; 0xff
 80116f4:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 80116f8:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80116fc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011700:	b2f6      	uxtb	r6, r6
 8011702:	d041      	beq.n	8011788 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f0>
 8011704:	f835 c01e 	ldrh.w	ip, [r5, lr, lsl #1]
 8011708:	fa1f fa82 	uxth.w	sl, r2
 801170c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011710:	43d2      	mvns	r2, r2
 8011712:	b2d2      	uxtb	r2, r2
 8011714:	fb19 f90a 	smulbb	r9, r9, sl
 8011718:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801171c:	fb07 9702 	mla	r7, r7, r2, r9
 8011720:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8011724:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011728:	fb18 f80a 	smulbb	r8, r8, sl
 801172c:	fb09 8802 	mla	r8, r9, r2, r8
 8011730:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011734:	fa1f f888 	uxth.w	r8, r8
 8011738:	fa5f fc8c 	uxtb.w	ip, ip
 801173c:	fb16 f60a 	smulbb	r6, r6, sl
 8011740:	b2bf      	uxth	r7, r7
 8011742:	fb0c 6602 	mla	r6, ip, r2, r6
 8011746:	f108 0901 	add.w	r9, r8, #1
 801174a:	b2b6      	uxth	r6, r6
 801174c:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8011750:	f107 0901 	add.w	r9, r7, #1
 8011754:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011758:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801175c:	1c72      	adds	r2, r6, #1
 801175e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011762:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011766:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801176a:	ea48 0807 	orr.w	r8, r8, r7
 801176e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011772:	ea48 0806 	orr.w	r8, r8, r6
 8011776:	f825 801e 	strh.w	r8, [r5, lr, lsl #1]
 801177a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801177c:	4414      	add	r4, r2
 801177e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011780:	f10e 0e01 	add.w	lr, lr, #1
 8011784:	4410      	add	r0, r2
 8011786:	e796      	b.n	80116b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 8011788:	08f6      	lsrs	r6, r6, #3
 801178a:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 801178e:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 8011792:	f825 601e 	strh.w	r6, [r5, lr, lsl #1]
 8011796:	e7f0      	b.n	801177a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 8011798:	b007      	add	sp, #28
 801179a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801179e:	bf00      	nop
 80117a0:	200014c0 	.word	0x200014c0
 80117a4:	0007fff8 	.word	0x0007fff8

080117a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80117a8:	4770      	bx	lr

080117aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80117aa:	4770      	bx	lr

080117ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80117ac:	4770      	bx	lr

080117ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80117ae:	4770      	bx	lr

080117b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80117b0:	4770      	bx	lr

080117b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80117b2:	4770      	bx	lr

080117b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80117b4:	4770      	bx	lr

080117b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80117b6:	4770      	bx	lr

080117b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80117b8:	4770      	bx	lr

080117ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80117ba:	4770      	bx	lr

080117bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80117bc:	4770      	bx	lr

080117be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80117be:	4770      	bx	lr

080117c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80117c0:	4770      	bx	lr

080117c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80117c2:	4770      	bx	lr

080117c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80117c4:	4770      	bx	lr

080117c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80117c6:	4770      	bx	lr

080117c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80117c8:	4770      	bx	lr

080117ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80117ca:	4770      	bx	lr

080117cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80117cc:	4770      	bx	lr

080117ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80117ce:	4770      	bx	lr

080117d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80117d0:	4770      	bx	lr

080117d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80117d2:	4770      	bx	lr

080117d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80117d4:	4770      	bx	lr

080117d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80117d6:	4770      	bx	lr

080117d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80117d8:	4770      	bx	lr

080117da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80117da:	4770      	bx	lr

080117dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80117dc:	4770      	bx	lr

080117de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80117de:	4770      	bx	lr

080117e0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80117e0:	b508      	push	{r3, lr}
 80117e2:	4b06      	ldr	r3, [pc, #24]	; (80117fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80117e4:	8818      	ldrh	r0, [r3, #0]
 80117e6:	b928      	cbnz	r0, 80117f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80117e8:	4b05      	ldr	r3, [pc, #20]	; (8011800 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80117ea:	4a06      	ldr	r2, [pc, #24]	; (8011804 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80117ec:	4806      	ldr	r0, [pc, #24]	; (8011808 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80117ee:	21d7      	movs	r1, #215	; 0xd7
 80117f0:	f009 f894 	bl	801a91c <__assert_func>
 80117f4:	0040      	lsls	r0, r0, #1
 80117f6:	b280      	uxth	r0, r0
 80117f8:	bd08      	pop	{r3, pc}
 80117fa:	bf00      	nop
 80117fc:	200014b2 	.word	0x200014b2
 8011800:	0801e3dd 	.word	0x0801e3dd
 8011804:	0801e963 	.word	0x0801e963
 8011808:	0801e41f 	.word	0x0801e41f

0801180c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801180c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011810:	b08d      	sub	sp, #52	; 0x34
 8011812:	460f      	mov	r7, r1
 8011814:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011818:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801181c:	4616      	mov	r6, r2
 801181e:	f1b9 0f00 	cmp.w	r9, #0
 8011822:	d046      	beq.n	80118b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8011824:	6810      	ldr	r0, [r2, #0]
 8011826:	6851      	ldr	r1, [r2, #4]
 8011828:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80119f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 801182c:	ad08      	add	r5, sp, #32
 801182e:	c503      	stmia	r5!, {r0, r1}
 8011830:	6818      	ldr	r0, [r3, #0]
 8011832:	6859      	ldr	r1, [r3, #4]
 8011834:	ad0a      	add	r5, sp, #40	; 0x28
 8011836:	c503      	stmia	r5!, {r0, r1}
 8011838:	a808      	add	r0, sp, #32
 801183a:	f7fb fc6b 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801183e:	4631      	mov	r1, r6
 8011840:	a80a      	add	r0, sp, #40	; 0x28
 8011842:	f7fb fc4f 	bl	800d0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011846:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801184a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801184e:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8011852:	f8d8 0000 	ldr.w	r0, [r8]
 8011856:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 801185a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801185e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8011862:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8011866:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 801186a:	440a      	add	r2, r1
 801186c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011870:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011874:	4413      	add	r3, r2
 8011876:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801187a:	6803      	ldr	r3, [r0, #0]
 801187c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801187e:	4798      	blx	r3
 8011880:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011884:	d018      	beq.n	80118b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8011886:	f010 0f04 	tst.w	r0, #4
 801188a:	d019      	beq.n	80118c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801188c:	f8d8 0000 	ldr.w	r0, [r8]
 8011890:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8011894:	6801      	ldr	r1, [r0, #0]
 8011896:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801189a:	e9cd 9403 	strd	r9, r4, [sp, #12]
 801189e:	b2bf      	uxth	r7, r7
 80118a0:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80118a4:	9402      	str	r4, [sp, #8]
 80118a6:	b2ad      	uxth	r5, r5
 80118a8:	9701      	str	r7, [sp, #4]
 80118aa:	9500      	str	r5, [sp, #0]
 80118ac:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 80118ae:	4631      	mov	r1, r6
 80118b0:	47a0      	blx	r4
 80118b2:	b00d      	add	sp, #52	; 0x34
 80118b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80118b8:	b914      	cbnz	r4, 80118c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80118ba:	f010 0f01 	tst.w	r0, #1
 80118be:	e7e4      	b.n	801188a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80118c0:	f8d8 0000 	ldr.w	r0, [r8]
 80118c4:	6803      	ldr	r3, [r0, #0]
 80118c6:	6a1b      	ldr	r3, [r3, #32]
 80118c8:	4798      	blx	r3
 80118ca:	4a48      	ldr	r2, [pc, #288]	; (80119ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 80118cc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80118d0:	8814      	ldrh	r4, [r2, #0]
 80118d2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80118d6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80118da:	fb01 3404 	mla	r4, r1, r4, r3
 80118de:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80118e2:	4692      	mov	sl, r2
 80118e4:	d118      	bne.n	8011918 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 80118e6:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 80118ea:	f04f 0900 	mov.w	r9, #0
 80118ee:	f8d8 0000 	ldr.w	r0, [r8]
 80118f2:	45b9      	cmp	r9, r7
 80118f4:	6803      	ldr	r3, [r0, #0]
 80118f6:	da73      	bge.n	80119e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 80118f8:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80118fa:	4632      	mov	r2, r6
 80118fc:	465b      	mov	r3, fp
 80118fe:	4621      	mov	r1, r4
 8011900:	47a8      	blx	r5
 8011902:	f8ba 3000 	ldrh.w	r3, [sl]
 8011906:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801190a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801190e:	f109 0901 	add.w	r9, r9, #1
 8011912:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8011916:	e7ea      	b.n	80118ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 8011918:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 801191c:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8011920:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8011924:	f04f 0b00 	mov.w	fp, #0
 8011928:	fa1f f389 	uxth.w	r3, r9
 801192c:	fa1f f888 	uxth.w	r8, r8
 8011930:	9207      	str	r2, [sp, #28]
 8011932:	45bb      	cmp	fp, r7
 8011934:	da54      	bge.n	80119e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8011936:	f04f 0e00 	mov.w	lr, #0
 801193a:	45ae      	cmp	lr, r5
 801193c:	da41      	bge.n	80119c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 801193e:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 8011942:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 8011946:	1208      	asrs	r0, r1, #8
 8011948:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801194c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011950:	fb10 f008 	smulbb	r0, r0, r8
 8011954:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8011958:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801195c:	00c9      	lsls	r1, r1, #3
 801195e:	fb0c 0c03 	mla	ip, ip, r3, r0
 8011962:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011966:	10d0      	asrs	r0, r2, #3
 8011968:	b2c9      	uxtb	r1, r1
 801196a:	00d2      	lsls	r2, r2, #3
 801196c:	fa1f fc8c 	uxth.w	ip, ip
 8011970:	fb19 f908 	smulbb	r9, r9, r8
 8011974:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8011978:	b2d2      	uxtb	r2, r2
 801197a:	fb11 f108 	smulbb	r1, r1, r8
 801197e:	fb00 9003 	mla	r0, r0, r3, r9
 8011982:	fb02 1203 	mla	r2, r2, r3, r1
 8011986:	f10c 0901 	add.w	r9, ip, #1
 801198a:	b292      	uxth	r2, r2
 801198c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011990:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8011994:	f102 0c01 	add.w	ip, r2, #1
 8011998:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801199c:	b280      	uxth	r0, r0
 801199e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80119a2:	ea49 0c02 	orr.w	ip, r9, r2
 80119a6:	f100 0901 	add.w	r9, r0, #1
 80119aa:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 80119ae:	0940      	lsrs	r0, r0, #5
 80119b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80119b4:	ea4c 0c00 	orr.w	ip, ip, r0
 80119b8:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 80119bc:	f10e 0e01 	add.w	lr, lr, #1
 80119c0:	e7bb      	b.n	801193a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 80119c2:	9a07      	ldr	r2, [sp, #28]
 80119c4:	8812      	ldrh	r2, [r2, #0]
 80119c6:	1b52      	subs	r2, r2, r5
 80119c8:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 80119cc:	4414      	add	r4, r2
 80119ce:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 80119d2:	1b52      	subs	r2, r2, r5
 80119d4:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 80119d8:	4416      	add	r6, r2
 80119da:	f10b 0b01 	add.w	fp, fp, #1
 80119de:	e7a8      	b.n	8011932 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 80119e0:	4b03      	ldr	r3, [pc, #12]	; (80119f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 80119e2:	6818      	ldr	r0, [r3, #0]
 80119e4:	6803      	ldr	r3, [r0, #0]
 80119e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80119e8:	4798      	blx	r3
 80119ea:	e762      	b.n	80118b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80119ec:	200014b2 	.word	0x200014b2
 80119f0:	200014b8 	.word	0x200014b8

080119f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80119f4:	b510      	push	{r4, lr}
 80119f6:	2104      	movs	r1, #4
 80119f8:	4604      	mov	r4, r0
 80119fa:	f008 ff60 	bl	801a8be <_ZdlPvj>
 80119fe:	4620      	mov	r0, r4
 8011a00:	bd10      	pop	{r4, pc}

08011a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011a02:	b510      	push	{r4, lr}
 8011a04:	2104      	movs	r1, #4
 8011a06:	4604      	mov	r4, r0
 8011a08:	f008 ff59 	bl	801a8be <_ZdlPvj>
 8011a0c:	4620      	mov	r0, r4
 8011a0e:	bd10      	pop	{r4, pc}

08011a10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011a10:	b510      	push	{r4, lr}
 8011a12:	2104      	movs	r1, #4
 8011a14:	4604      	mov	r4, r0
 8011a16:	f008 ff52 	bl	801a8be <_ZdlPvj>
 8011a1a:	4620      	mov	r0, r4
 8011a1c:	bd10      	pop	{r4, pc}

08011a1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8011a1e:	b510      	push	{r4, lr}
 8011a20:	2104      	movs	r1, #4
 8011a22:	4604      	mov	r4, r0
 8011a24:	f008 ff4b 	bl	801a8be <_ZdlPvj>
 8011a28:	4620      	mov	r0, r4
 8011a2a:	bd10      	pop	{r4, pc}

08011a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011a2c:	b510      	push	{r4, lr}
 8011a2e:	2104      	movs	r1, #4
 8011a30:	4604      	mov	r4, r0
 8011a32:	f008 ff44 	bl	801a8be <_ZdlPvj>
 8011a36:	4620      	mov	r0, r4
 8011a38:	bd10      	pop	{r4, pc}

08011a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8011a3a:	b510      	push	{r4, lr}
 8011a3c:	2104      	movs	r1, #4
 8011a3e:	4604      	mov	r4, r0
 8011a40:	f008 ff3d 	bl	801a8be <_ZdlPvj>
 8011a44:	4620      	mov	r0, r4
 8011a46:	bd10      	pop	{r4, pc}

08011a48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011a48:	b510      	push	{r4, lr}
 8011a4a:	2104      	movs	r1, #4
 8011a4c:	4604      	mov	r4, r0
 8011a4e:	f008 ff36 	bl	801a8be <_ZdlPvj>
 8011a52:	4620      	mov	r0, r4
 8011a54:	bd10      	pop	{r4, pc}

08011a56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8011a56:	b510      	push	{r4, lr}
 8011a58:	2104      	movs	r1, #4
 8011a5a:	4604      	mov	r4, r0
 8011a5c:	f008 ff2f 	bl	801a8be <_ZdlPvj>
 8011a60:	4620      	mov	r0, r4
 8011a62:	bd10      	pop	{r4, pc}

08011a64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011a64:	b510      	push	{r4, lr}
 8011a66:	2104      	movs	r1, #4
 8011a68:	4604      	mov	r4, r0
 8011a6a:	f008 ff28 	bl	801a8be <_ZdlPvj>
 8011a6e:	4620      	mov	r0, r4
 8011a70:	bd10      	pop	{r4, pc}

08011a72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011a72:	b510      	push	{r4, lr}
 8011a74:	2104      	movs	r1, #4
 8011a76:	4604      	mov	r4, r0
 8011a78:	f008 ff21 	bl	801a8be <_ZdlPvj>
 8011a7c:	4620      	mov	r0, r4
 8011a7e:	bd10      	pop	{r4, pc}

08011a80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011a80:	b510      	push	{r4, lr}
 8011a82:	2104      	movs	r1, #4
 8011a84:	4604      	mov	r4, r0
 8011a86:	f008 ff1a 	bl	801a8be <_ZdlPvj>
 8011a8a:	4620      	mov	r0, r4
 8011a8c:	bd10      	pop	{r4, pc}

08011a8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011a8e:	b510      	push	{r4, lr}
 8011a90:	2104      	movs	r1, #4
 8011a92:	4604      	mov	r4, r0
 8011a94:	f008 ff13 	bl	801a8be <_ZdlPvj>
 8011a98:	4620      	mov	r0, r4
 8011a9a:	bd10      	pop	{r4, pc}

08011a9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011a9c:	b510      	push	{r4, lr}
 8011a9e:	2104      	movs	r1, #4
 8011aa0:	4604      	mov	r4, r0
 8011aa2:	f008 ff0c 	bl	801a8be <_ZdlPvj>
 8011aa6:	4620      	mov	r0, r4
 8011aa8:	bd10      	pop	{r4, pc}

08011aaa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011aaa:	b510      	push	{r4, lr}
 8011aac:	2104      	movs	r1, #4
 8011aae:	4604      	mov	r4, r0
 8011ab0:	f008 ff05 	bl	801a8be <_ZdlPvj>
 8011ab4:	4620      	mov	r0, r4
 8011ab6:	bd10      	pop	{r4, pc}

08011ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011ab8:	b510      	push	{r4, lr}
 8011aba:	2104      	movs	r1, #4
 8011abc:	4604      	mov	r4, r0
 8011abe:	f008 fefe 	bl	801a8be <_ZdlPvj>
 8011ac2:	4620      	mov	r0, r4
 8011ac4:	bd10      	pop	{r4, pc}

08011ac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011ac6:	b510      	push	{r4, lr}
 8011ac8:	2104      	movs	r1, #4
 8011aca:	4604      	mov	r4, r0
 8011acc:	f008 fef7 	bl	801a8be <_ZdlPvj>
 8011ad0:	4620      	mov	r0, r4
 8011ad2:	bd10      	pop	{r4, pc}

08011ad4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011ad4:	b510      	push	{r4, lr}
 8011ad6:	2104      	movs	r1, #4
 8011ad8:	4604      	mov	r4, r0
 8011ada:	f008 fef0 	bl	801a8be <_ZdlPvj>
 8011ade:	4620      	mov	r0, r4
 8011ae0:	bd10      	pop	{r4, pc}

08011ae2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8011ae2:	b510      	push	{r4, lr}
 8011ae4:	2104      	movs	r1, #4
 8011ae6:	4604      	mov	r4, r0
 8011ae8:	f008 fee9 	bl	801a8be <_ZdlPvj>
 8011aec:	4620      	mov	r0, r4
 8011aee:	bd10      	pop	{r4, pc}

08011af0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011af0:	b510      	push	{r4, lr}
 8011af2:	2104      	movs	r1, #4
 8011af4:	4604      	mov	r4, r0
 8011af6:	f008 fee2 	bl	801a8be <_ZdlPvj>
 8011afa:	4620      	mov	r0, r4
 8011afc:	bd10      	pop	{r4, pc}

08011afe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011afe:	b510      	push	{r4, lr}
 8011b00:	2104      	movs	r1, #4
 8011b02:	4604      	mov	r4, r0
 8011b04:	f008 fedb 	bl	801a8be <_ZdlPvj>
 8011b08:	4620      	mov	r0, r4
 8011b0a:	bd10      	pop	{r4, pc}

08011b0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011b0c:	b510      	push	{r4, lr}
 8011b0e:	2104      	movs	r1, #4
 8011b10:	4604      	mov	r4, r0
 8011b12:	f008 fed4 	bl	801a8be <_ZdlPvj>
 8011b16:	4620      	mov	r0, r4
 8011b18:	bd10      	pop	{r4, pc}

08011b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011b1a:	b510      	push	{r4, lr}
 8011b1c:	2104      	movs	r1, #4
 8011b1e:	4604      	mov	r4, r0
 8011b20:	f008 fecd 	bl	801a8be <_ZdlPvj>
 8011b24:	4620      	mov	r0, r4
 8011b26:	bd10      	pop	{r4, pc}

08011b28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011b28:	b510      	push	{r4, lr}
 8011b2a:	2104      	movs	r1, #4
 8011b2c:	4604      	mov	r4, r0
 8011b2e:	f008 fec6 	bl	801a8be <_ZdlPvj>
 8011b32:	4620      	mov	r0, r4
 8011b34:	bd10      	pop	{r4, pc}

08011b36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011b36:	b510      	push	{r4, lr}
 8011b38:	2104      	movs	r1, #4
 8011b3a:	4604      	mov	r4, r0
 8011b3c:	f008 febf 	bl	801a8be <_ZdlPvj>
 8011b40:	4620      	mov	r0, r4
 8011b42:	bd10      	pop	{r4, pc}

08011b44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8011b44:	b510      	push	{r4, lr}
 8011b46:	2104      	movs	r1, #4
 8011b48:	4604      	mov	r4, r0
 8011b4a:	f008 feb8 	bl	801a8be <_ZdlPvj>
 8011b4e:	4620      	mov	r0, r4
 8011b50:	bd10      	pop	{r4, pc}

08011b52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8011b52:	b510      	push	{r4, lr}
 8011b54:	2104      	movs	r1, #4
 8011b56:	4604      	mov	r4, r0
 8011b58:	f008 feb1 	bl	801a8be <_ZdlPvj>
 8011b5c:	4620      	mov	r0, r4
 8011b5e:	bd10      	pop	{r4, pc}

08011b60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8011b60:	b510      	push	{r4, lr}
 8011b62:	2104      	movs	r1, #4
 8011b64:	4604      	mov	r4, r0
 8011b66:	f008 feaa 	bl	801a8be <_ZdlPvj>
 8011b6a:	4620      	mov	r0, r4
 8011b6c:	bd10      	pop	{r4, pc}

08011b6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8011b6e:	b510      	push	{r4, lr}
 8011b70:	2104      	movs	r1, #4
 8011b72:	4604      	mov	r4, r0
 8011b74:	f008 fea3 	bl	801a8be <_ZdlPvj>
 8011b78:	4620      	mov	r0, r4
 8011b7a:	bd10      	pop	{r4, pc}

08011b7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8011b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b80:	460e      	mov	r6, r1
 8011b82:	b08b      	sub	sp, #44	; 0x2c
 8011b84:	4615      	mov	r5, r2
 8011b86:	461c      	mov	r4, r3
 8011b88:	b323      	cbz	r3, 8011bd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011b8a:	4608      	mov	r0, r1
 8011b8c:	f7f9 fb6e 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b90:	bb00      	cbnz	r0, 8011bd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011b92:	6830      	ldr	r0, [r6, #0]
 8011b94:	6871      	ldr	r1, [r6, #4]
 8011b96:	4e55      	ldr	r6, [pc, #340]	; (8011cec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8011b98:	ab08      	add	r3, sp, #32
 8011b9a:	c303      	stmia	r3!, {r0, r1}
 8011b9c:	a808      	add	r0, sp, #32
 8011b9e:	f7fb fab9 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011ba2:	6830      	ldr	r0, [r6, #0]
 8011ba4:	6803      	ldr	r3, [r0, #0]
 8011ba6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011ba8:	4798      	blx	r3
 8011baa:	2cff      	cmp	r4, #255	; 0xff
 8011bac:	d015      	beq.n	8011bda <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 8011bae:	f010 0f08 	tst.w	r0, #8
 8011bb2:	d015      	beq.n	8011be0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 8011bb4:	6830      	ldr	r0, [r6, #0]
 8011bb6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8011bba:	6801      	ldr	r1, [r0, #0]
 8011bbc:	9402      	str	r4, [sp, #8]
 8011bbe:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8011bc2:	9401      	str	r4, [sp, #4]
 8011bc4:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8011bc8:	9400      	str	r4, [sp, #0]
 8011bca:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 8011bcc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8011bd0:	4629      	mov	r1, r5
 8011bd2:	47a0      	blx	r4
 8011bd4:	b00b      	add	sp, #44	; 0x2c
 8011bd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bda:	f010 0f02 	tst.w	r0, #2
 8011bde:	e7e8      	b.n	8011bb2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8011be0:	6830      	ldr	r0, [r6, #0]
 8011be2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8011be6:	6803      	ldr	r3, [r0, #0]
 8011be8:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8011bec:	6a1b      	ldr	r3, [r3, #32]
 8011bee:	4798      	blx	r3
 8011bf0:	4a3f      	ldr	r2, [pc, #252]	; (8011cf0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 8011bf2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8011bf6:	8816      	ldrh	r6, [r2, #0]
 8011bf8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011bfc:	2cff      	cmp	r4, #255	; 0xff
 8011bfe:	fb06 1303 	mla	r3, r6, r3, r1
 8011c02:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011c06:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8011c0a:	4616      	mov	r6, r2
 8011c0c:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8011c10:	d10a      	bne.n	8011c28 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8011c12:	0049      	lsls	r1, r1, #1
 8011c14:	2200      	movs	r2, #0
 8011c16:	454a      	cmp	r2, r9
 8011c18:	da62      	bge.n	8011ce0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8011c1a:	2300      	movs	r3, #0
 8011c1c:	4543      	cmp	r3, r8
 8011c1e:	da58      	bge.n	8011cd2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x156>
 8011c20:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8011c24:	3301      	adds	r3, #1
 8011c26:	e7f9      	b.n	8011c1c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8011c28:	122b      	asrs	r3, r5, #8
 8011c2a:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 8011c2e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8011c32:	b2a4      	uxth	r4, r4
 8011c34:	4363      	muls	r3, r4
 8011c36:	9305      	str	r3, [sp, #20]
 8011c38:	f3c5 06cc 	ubfx	r6, r5, #3, #13
 8011c3c:	00eb      	lsls	r3, r5, #3
 8011c3e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011c42:	b2db      	uxtb	r3, r3
 8011c44:	0049      	lsls	r1, r1, #1
 8011c46:	4366      	muls	r6, r4
 8011c48:	4363      	muls	r3, r4
 8011c4a:	9106      	str	r1, [sp, #24]
 8011c4c:	f04f 0c00 	mov.w	ip, #0
 8011c50:	b2bf      	uxth	r7, r7
 8011c52:	9207      	str	r2, [sp, #28]
 8011c54:	45cc      	cmp	ip, r9
 8011c56:	da43      	bge.n	8011ce0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8011c58:	4682      	mov	sl, r0
 8011c5a:	f04f 0e00 	mov.w	lr, #0
 8011c5e:	45c6      	cmp	lr, r8
 8011c60:	da2d      	bge.n	8011cbe <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x142>
 8011c62:	f8ba 2000 	ldrh.w	r2, [sl]
 8011c66:	9905      	ldr	r1, [sp, #20]
 8011c68:	1214      	asrs	r4, r2, #8
 8011c6a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8011c6e:	fb14 f407 	smulbb	r4, r4, r7
 8011c72:	440c      	add	r4, r1
 8011c74:	10d1      	asrs	r1, r2, #3
 8011c76:	00d2      	lsls	r2, r2, #3
 8011c78:	b2d2      	uxtb	r2, r2
 8011c7a:	fb12 f207 	smulbb	r2, r2, r7
 8011c7e:	b2a4      	uxth	r4, r4
 8011c80:	441a      	add	r2, r3
 8011c82:	b292      	uxth	r2, r2
 8011c84:	1c65      	adds	r5, r4, #1
 8011c86:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011c8a:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8011c8e:	fb11 f107 	smulbb	r1, r1, r7
 8011c92:	1c55      	adds	r5, r2, #1
 8011c94:	4431      	add	r1, r6
 8011c96:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8011c9a:	b289      	uxth	r1, r1
 8011c9c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011ca0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8011ca4:	4314      	orrs	r4, r2
 8011ca6:	1c4a      	adds	r2, r1, #1
 8011ca8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8011cac:	0949      	lsrs	r1, r1, #5
 8011cae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011cb2:	430c      	orrs	r4, r1
 8011cb4:	f82a 4b02 	strh.w	r4, [sl], #2
 8011cb8:	f10e 0e01 	add.w	lr, lr, #1
 8011cbc:	e7cf      	b.n	8011c5e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe2>
 8011cbe:	9a07      	ldr	r2, [sp, #28]
 8011cc0:	9906      	ldr	r1, [sp, #24]
 8011cc2:	8812      	ldrh	r2, [r2, #0]
 8011cc4:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 8011cc8:	440a      	add	r2, r1
 8011cca:	4410      	add	r0, r2
 8011ccc:	f10c 0c01 	add.w	ip, ip, #1
 8011cd0:	e7c0      	b.n	8011c54 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd8>
 8011cd2:	8833      	ldrh	r3, [r6, #0]
 8011cd4:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 8011cd8:	440b      	add	r3, r1
 8011cda:	4418      	add	r0, r3
 8011cdc:	3201      	adds	r2, #1
 8011cde:	e79a      	b.n	8011c16 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 8011ce0:	4b02      	ldr	r3, [pc, #8]	; (8011cec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8011ce2:	6818      	ldr	r0, [r3, #0]
 8011ce4:	6803      	ldr	r3, [r0, #0]
 8011ce6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ce8:	4798      	blx	r3
 8011cea:	e773      	b.n	8011bd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011cec:	200014b8 	.word	0x200014b8
 8011cf0:	200014b2 	.word	0x200014b2

08011cf4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8011cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cf8:	4d9b      	ldr	r5, [pc, #620]	; (8011f68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8011cfa:	4690      	mov	r8, r2
 8011cfc:	682a      	ldr	r2, [r5, #0]
 8011cfe:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8011d02:	2a02      	cmp	r2, #2
 8011d04:	b08f      	sub	sp, #60	; 0x3c
 8011d06:	4604      	mov	r4, r0
 8011d08:	4689      	mov	r9, r1
 8011d0a:	d106      	bne.n	8011d1a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8011d0c:	4b97      	ldr	r3, [pc, #604]	; (8011f6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8011d0e:	4a98      	ldr	r2, [pc, #608]	; (8011f70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011d10:	f240 21c2 	movw	r1, #706	; 0x2c2
 8011d14:	4897      	ldr	r0, [pc, #604]	; (8011f74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8011d16:	f008 fe01 	bl	801a91c <__assert_func>
 8011d1a:	ae0e      	add	r6, sp, #56	; 0x38
 8011d1c:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8011d20:	4630      	mov	r0, r6
 8011d22:	f7fd facf 	bl	800f2c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011d26:	6823      	ldr	r3, [r4, #0]
 8011d28:	4607      	mov	r7, r0
 8011d2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011d2c:	4620      	mov	r0, r4
 8011d2e:	4798      	blx	r3
 8011d30:	4287      	cmp	r7, r0
 8011d32:	d004      	beq.n	8011d3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8011d34:	4b90      	ldr	r3, [pc, #576]	; (8011f78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8011d36:	4a8e      	ldr	r2, [pc, #568]	; (8011f70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011d38:	f44f 7131 	mov.w	r1, #708	; 0x2c4
 8011d3c:	e7ea      	b.n	8011d14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011d3e:	4630      	mov	r0, r6
 8011d40:	f7fd fa3c 	bl	800f1bc <_ZNK8touchgfx6Bitmap7getDataEv>
 8011d44:	4607      	mov	r7, r0
 8011d46:	b920      	cbnz	r0, 8011d52 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8011d48:	4b8c      	ldr	r3, [pc, #560]	; (8011f7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 8011d4a:	4a89      	ldr	r2, [pc, #548]	; (8011f70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011d4c:	f240 21c6 	movw	r1, #710	; 0x2c6
 8011d50:	e7e0      	b.n	8011d14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011d52:	f8d8 0000 	ldr.w	r0, [r8]
 8011d56:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8011d5a:	f9b8 a000 	ldrsh.w	sl, [r8]
 8011d5e:	ab06      	add	r3, sp, #24
 8011d60:	c303      	stmia	r3!, {r0, r1}
 8011d62:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8011d66:	f8d9 0000 	ldr.w	r0, [r9]
 8011d6a:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 8011d6e:	ab08      	add	r3, sp, #32
 8011d70:	c303      	stmia	r3!, {r0, r1}
 8011d72:	4630      	mov	r0, r6
 8011d74:	f7fd f91a 	bl	800efac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011d78:	4680      	mov	r8, r0
 8011d7a:	4630      	mov	r0, r6
 8011d7c:	f7fd f950 	bl	800f020 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011d80:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011d84:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8011d88:	f10d 0920 	add.w	r9, sp, #32
 8011d8c:	a806      	add	r0, sp, #24
 8011d8e:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8011d92:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8011d96:	f7fb f9bd 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011d9a:	4648      	mov	r0, r9
 8011d9c:	f7fb f9ba 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011da0:	a80a      	add	r0, sp, #40	; 0x28
 8011da2:	f7fb f9b7 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011da6:	4e76      	ldr	r6, [pc, #472]	; (8011f80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8011da8:	4b76      	ldr	r3, [pc, #472]	; (8011f84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8011daa:	f9b6 2000 	ldrsh.w	r2, [r6]
 8011dae:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011db2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011db6:	2100      	movs	r1, #0
 8011db8:	910c      	str	r1, [sp, #48]	; 0x30
 8011dba:	4648      	mov	r0, r9
 8011dbc:	a90c      	add	r1, sp, #48	; 0x30
 8011dbe:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011dc2:	f7f9 fa0f 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 8011dc6:	4648      	mov	r0, r9
 8011dc8:	f7f9 fa50 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 8011dcc:	2800      	cmp	r0, #0
 8011dce:	f040 80bd 	bne.w	8011f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011dd2:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8011dd6:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8011dda:	4288      	cmp	r0, r1
 8011ddc:	db37      	blt.n	8011e4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011dde:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8011de2:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011de6:	429a      	cmp	r2, r3
 8011de8:	db31      	blt.n	8011e4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011dea:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8011dee:	4460      	add	r0, ip
 8011df0:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 8011df4:	4461      	add	r1, ip
 8011df6:	b200      	sxth	r0, r0
 8011df8:	b209      	sxth	r1, r1
 8011dfa:	4288      	cmp	r0, r1
 8011dfc:	dc27      	bgt.n	8011e4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011dfe:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011e02:	440a      	add	r2, r1
 8011e04:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8011e08:	440b      	add	r3, r1
 8011e0a:	b212      	sxth	r2, r2
 8011e0c:	b21b      	sxth	r3, r3
 8011e0e:	429a      	cmp	r2, r3
 8011e10:	dc1d      	bgt.n	8011e4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8011e12:	6823      	ldr	r3, [r4, #0]
 8011e14:	4620      	mov	r0, r4
 8011e16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011e18:	4798      	blx	r3
 8011e1a:	4682      	mov	sl, r0
 8011e1c:	6828      	ldr	r0, [r5, #0]
 8011e1e:	6803      	ldr	r3, [r0, #0]
 8011e20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011e22:	4798      	blx	r3
 8011e24:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011e28:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011e2c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8011e30:	1a9b      	subs	r3, r3, r2
 8011e32:	b29b      	uxth	r3, r3
 8011e34:	b21c      	sxth	r4, r3
 8011e36:	2c00      	cmp	r4, #0
 8011e38:	dc0e      	bgt.n	8011e58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 8011e3a:	bf1f      	itttt	ne
 8011e3c:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8011e40:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 8011e44:	189b      	addne	r3, r3, r2
 8011e46:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8011e4a:	463c      	mov	r4, r7
 8011e4c:	e00a      	b.n	8011e64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 8011e4e:	4b4e      	ldr	r3, [pc, #312]	; (8011f88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8011e50:	4a47      	ldr	r2, [pc, #284]	; (8011f70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011e52:	f44f 7135 	mov.w	r1, #724	; 0x2d4
 8011e56:	e75d      	b.n	8011d14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011e58:	ebab 0303 	sub.w	r3, fp, r3
 8011e5c:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8011e60:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8011e64:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011e68:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8011e6c:	1a5b      	subs	r3, r3, r1
 8011e6e:	b29b      	uxth	r3, r3
 8011e70:	b21a      	sxth	r2, r3
 8011e72:	2a00      	cmp	r2, #0
 8011e74:	dd4a      	ble.n	8011f0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8011e76:	fb02 f20b 	mul.w	r2, r2, fp
 8011e7a:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8011e7e:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8011e82:	1ad3      	subs	r3, r2, r3
 8011e84:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011e88:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8011e8c:	2b00      	cmp	r3, #0
 8011e8e:	dd5d      	ble.n	8011f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011e90:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8011e94:	f1bc 0f00 	cmp.w	ip, #0
 8011e98:	dd58      	ble.n	8011f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011e9a:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8011e9e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011ea2:	fb0a f801 	mul.w	r8, sl, r1
 8011ea6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8011eaa:	4480      	add	r8, r0
 8011eac:	8830      	ldrh	r0, [r6, #0]
 8011eae:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8011eb2:	42b3      	cmp	r3, r6
 8011eb4:	bfa8      	it	ge
 8011eb6:	4633      	movge	r3, r6
 8011eb8:	1a82      	subs	r2, r0, r2
 8011eba:	4293      	cmp	r3, r2
 8011ebc:	bfa8      	it	ge
 8011ebe:	4613      	movge	r3, r2
 8011ec0:	4a30      	ldr	r2, [pc, #192]	; (8011f84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8011ec2:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8011ec6:	8812      	ldrh	r2, [r2, #0]
 8011ec8:	4566      	cmp	r6, ip
 8011eca:	eba2 0101 	sub.w	r1, r2, r1
 8011ece:	bfa8      	it	ge
 8011ed0:	4666      	movge	r6, ip
 8011ed2:	428e      	cmp	r6, r1
 8011ed4:	4632      	mov	r2, r6
 8011ed6:	bfa8      	it	ge
 8011ed8:	460a      	movge	r2, r1
 8011eda:	4298      	cmp	r0, r3
 8011edc:	9202      	str	r2, [sp, #8]
 8011ede:	d01e      	beq.n	8011f1e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8011ee0:	005b      	lsls	r3, r3, #1
 8011ee2:	9303      	str	r3, [sp, #12]
 8011ee4:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8011ee8:	f04f 0900 	mov.w	r9, #0
 8011eec:	9b02      	ldr	r3, [sp, #8]
 8011eee:	454b      	cmp	r3, r9
 8011ef0:	dd2c      	ble.n	8011f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011ef2:	6828      	ldr	r0, [r5, #0]
 8011ef4:	6803      	ldr	r3, [r0, #0]
 8011ef6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ef8:	4642      	mov	r2, r8
 8011efa:	461e      	mov	r6, r3
 8011efc:	4621      	mov	r1, r4
 8011efe:	9b03      	ldr	r3, [sp, #12]
 8011f00:	47b0      	blx	r6
 8011f02:	44d0      	add	r8, sl
 8011f04:	445c      	add	r4, fp
 8011f06:	f109 0901 	add.w	r9, r9, #1
 8011f0a:	e7ef      	b.n	8011eec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8011f0c:	bf1f      	itttt	ne
 8011f0e:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 8011f12:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 8011f16:	189b      	addne	r3, r3, r2
 8011f18:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8011f1c:	e7b4      	b.n	8011e88 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8011f1e:	4558      	cmp	r0, fp
 8011f20:	d1de      	bne.n	8011ee0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 8011f22:	6828      	ldr	r0, [r5, #0]
 8011f24:	6803      	ldr	r3, [r0, #0]
 8011f26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011f28:	4798      	blx	r3
 8011f2a:	07c3      	lsls	r3, r0, #31
 8011f2c:	d512      	bpl.n	8011f54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8011f2e:	6828      	ldr	r0, [r5, #0]
 8011f30:	9b02      	ldr	r3, [sp, #8]
 8011f32:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8011f36:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011f3a:	6803      	ldr	r3, [r0, #0]
 8011f3c:	f8cd b000 	str.w	fp, [sp]
 8011f40:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8011f42:	e899 0006 	ldmia.w	r9, {r1, r2}
 8011f46:	4623      	mov	r3, r4
 8011f48:	47a8      	blx	r5
 8011f4a:	4607      	mov	r7, r0
 8011f4c:	4638      	mov	r0, r7
 8011f4e:	b00f      	add	sp, #60	; 0x3c
 8011f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f54:	6828      	ldr	r0, [r5, #0]
 8011f56:	6803      	ldr	r3, [r0, #0]
 8011f58:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8011f5a:	9b02      	ldr	r3, [sp, #8]
 8011f5c:	4642      	mov	r2, r8
 8011f5e:	fb03 f30a 	mul.w	r3, r3, sl
 8011f62:	4621      	mov	r1, r4
 8011f64:	47a8      	blx	r5
 8011f66:	e7f1      	b.n	8011f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011f68:	200014b8 	.word	0x200014b8
 8011f6c:	0801e1cf 	.word	0x0801e1cf
 8011f70:	0801ea13 	.word	0x0801ea13
 8011f74:	0801e283 	.word	0x0801e283
 8011f78:	0801e2b5 	.word	0x0801e2b5
 8011f7c:	0801e30a 	.word	0x0801e30a
 8011f80:	200014b2 	.word	0x200014b2
 8011f84:	200014b4 	.word	0x200014b4
 8011f88:	0801e348 	.word	0x0801e348

08011f8c <_ZN8touchgfx8LCD16bppC1Ev>:
 8011f8c:	2200      	movs	r2, #0
 8011f8e:	4910      	ldr	r1, [pc, #64]	; (8011fd0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8011f90:	6042      	str	r2, [r0, #4]
 8011f92:	6001      	str	r1, [r0, #0]
 8011f94:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8011f98:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8011f9c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8011fa0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8011fa4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8011fa8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8011fac:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8011fb0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8011fb4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8011fb8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8011fbc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8011fc0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8011fc4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8011fc8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8011fcc:	4770      	bx	lr
 8011fce:	bf00      	nop
 8011fd0:	0801e68c 	.word	0x0801e68c

08011fd4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8011fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fd8:	460c      	mov	r4, r1
 8011fda:	b08d      	sub	sp, #52	; 0x34
 8011fdc:	4682      	mov	sl, r0
 8011fde:	6808      	ldr	r0, [r1, #0]
 8011fe0:	6849      	ldr	r1, [r1, #4]
 8011fe2:	469b      	mov	fp, r3
 8011fe4:	ab08      	add	r3, sp, #32
 8011fe6:	c303      	stmia	r3!, {r0, r1}
 8011fe8:	6810      	ldr	r0, [r2, #0]
 8011fea:	6851      	ldr	r1, [r2, #4]
 8011fec:	ab0a      	add	r3, sp, #40	; 0x28
 8011fee:	c303      	stmia	r3!, {r0, r1}
 8011ff0:	a808      	add	r0, sp, #32
 8011ff2:	f7fb f88f 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011ff6:	4621      	mov	r1, r4
 8011ff8:	a80a      	add	r0, sp, #40	; 0x28
 8011ffa:	f7fb f873 	bl	800d0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011ffe:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012002:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012006:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801200a:	4c60      	ldr	r4, [pc, #384]	; (801218c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 801200c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012010:	6820      	ldr	r0, [r4, #0]
 8012012:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 8012016:	fb11 2103 	smlabb	r1, r1, r3, r2
 801201a:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 801201e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012022:	440a      	add	r2, r1
 8012024:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012028:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801202c:	4413      	add	r3, r2
 801202e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012032:	6803      	ldr	r3, [r0, #0]
 8012034:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012036:	4798      	blx	r3
 8012038:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801203c:	d119      	bne.n	8012072 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801203e:	f010 0f20 	tst.w	r0, #32
 8012042:	6820      	ldr	r0, [r4, #0]
 8012044:	d018      	beq.n	8012078 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8012046:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801204a:	6801      	ldr	r1, [r0, #0]
 801204c:	9402      	str	r4, [sp, #8]
 801204e:	fa1f f489 	uxth.w	r4, r9
 8012052:	9401      	str	r4, [sp, #4]
 8012054:	fa1f f488 	uxth.w	r4, r8
 8012058:	f8cd b00c 	str.w	fp, [sp, #12]
 801205c:	9400      	str	r4, [sp, #0]
 801205e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8012060:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012064:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012068:	4651      	mov	r1, sl
 801206a:	47a0      	blx	r4
 801206c:	b00d      	add	sp, #52	; 0x34
 801206e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012072:	f010 0f40 	tst.w	r0, #64	; 0x40
 8012076:	e7e4      	b.n	8012042 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012078:	6803      	ldr	r3, [r0, #0]
 801207a:	6a1b      	ldr	r3, [r3, #32]
 801207c:	4798      	blx	r3
 801207e:	4a44      	ldr	r2, [pc, #272]	; (8012190 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 8012080:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012084:	8813      	ldrh	r3, [r2, #0]
 8012086:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 801208a:	9207      	str	r2, [sp, #28]
 801208c:	fb04 1303 	mla	r3, r4, r3, r1
 8012090:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012094:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8012098:	0099      	lsls	r1, r3, #2
 801209a:	005b      	lsls	r3, r3, #1
 801209c:	9106      	str	r1, [sp, #24]
 801209e:	9305      	str	r3, [sp, #20]
 80120a0:	f04f 0c00 	mov.w	ip, #0
 80120a4:	45cc      	cmp	ip, r9
 80120a6:	da6b      	bge.n	8012180 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 80120a8:	2300      	movs	r3, #0
 80120aa:	4543      	cmp	r3, r8
 80120ac:	da55      	bge.n	801215a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 80120ae:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 80120b2:	0e25      	lsrs	r5, r4, #24
 80120b4:	d013      	beq.n	80120de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80120b6:	2dff      	cmp	r5, #255	; 0xff
 80120b8:	ea4f 2714 	mov.w	r7, r4, lsr #8
 80120bc:	d111      	bne.n	80120e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 80120be:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80120c2:	d10e      	bne.n	80120e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 80120c4:	0962      	lsrs	r2, r4, #5
 80120c6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80120ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80120ce:	f027 0707 	bic.w	r7, r7, #7
 80120d2:	4317      	orrs	r7, r2
 80120d4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80120d8:	433c      	orrs	r4, r7
 80120da:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 80120de:	3301      	adds	r3, #1
 80120e0:	e7e3      	b.n	80120aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 80120e2:	fb0b f505 	mul.w	r5, fp, r5
 80120e6:	1c6a      	adds	r2, r5, #1
 80120e8:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 80120ec:	eb02 2225 	add.w	r2, r2, r5, asr #8
 80120f0:	1212      	asrs	r2, r2, #8
 80120f2:	fa1f fe82 	uxth.w	lr, r2
 80120f6:	120e      	asrs	r6, r1, #8
 80120f8:	f3c4 4507 	ubfx	r5, r4, #16, #8
 80120fc:	43d2      	mvns	r2, r2
 80120fe:	b2d2      	uxtb	r2, r2
 8012100:	fb15 f50e 	smulbb	r5, r5, lr
 8012104:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012108:	fb06 5602 	mla	r6, r6, r2, r5
 801210c:	b2e4      	uxtb	r4, r4
 801210e:	10cd      	asrs	r5, r1, #3
 8012110:	00c9      	lsls	r1, r1, #3
 8012112:	b2c9      	uxtb	r1, r1
 8012114:	fb14 f40e 	smulbb	r4, r4, lr
 8012118:	fb01 4402 	mla	r4, r1, r2, r4
 801211c:	b2ff      	uxtb	r7, r7
 801211e:	b2b6      	uxth	r6, r6
 8012120:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012124:	b2a4      	uxth	r4, r4
 8012126:	fb17 f70e 	smulbb	r7, r7, lr
 801212a:	fb05 7702 	mla	r7, r5, r2, r7
 801212e:	1c72      	adds	r2, r6, #1
 8012130:	1c65      	adds	r5, r4, #1
 8012132:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8012136:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 801213a:	b2bf      	uxth	r7, r7
 801213c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012140:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012144:	432e      	orrs	r6, r5
 8012146:	1c7d      	adds	r5, r7, #1
 8012148:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 801214c:	097f      	lsrs	r7, r7, #5
 801214e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012152:	433e      	orrs	r6, r7
 8012154:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8012158:	e7c1      	b.n	80120de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 801215a:	9b07      	ldr	r3, [sp, #28]
 801215c:	9a05      	ldr	r2, [sp, #20]
 801215e:	881b      	ldrh	r3, [r3, #0]
 8012160:	eba3 0308 	sub.w	r3, r3, r8
 8012164:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012168:	4418      	add	r0, r3
 801216a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801216e:	9a06      	ldr	r2, [sp, #24]
 8012170:	eba3 0308 	sub.w	r3, r3, r8
 8012174:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8012178:	449a      	add	sl, r3
 801217a:	f10c 0c01 	add.w	ip, ip, #1
 801217e:	e791      	b.n	80120a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 8012180:	4b02      	ldr	r3, [pc, #8]	; (801218c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8012182:	6818      	ldr	r0, [r3, #0]
 8012184:	6803      	ldr	r3, [r0, #0]
 8012186:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012188:	4798      	blx	r3
 801218a:	e76f      	b.n	801206c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801218c:	200014b8 	.word	0x200014b8
 8012190:	200014b2 	.word	0x200014b2

08012194 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8012194:	b570      	push	{r4, r5, r6, lr}
 8012196:	9d04      	ldr	r5, [sp, #16]
 8012198:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801219c:	460c      	mov	r4, r1
 801219e:	4619      	mov	r1, r3
 80121a0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80121a4:	2a0c      	cmp	r2, #12
 80121a6:	d820      	bhi.n	80121ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 80121a8:	e8df f002 	tbb	[pc, r2]
 80121ac:	18121807 	.word	0x18121807
 80121b0:	18181818 	.word	0x18181818
 80121b4:	18181818 	.word	0x18181818
 80121b8:	18          	.byte	0x18
 80121b9:	00          	.byte	0x00
 80121ba:	6802      	ldr	r2, [r0, #0]
 80121bc:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80121c0:	6916      	ldr	r6, [r2, #16]
 80121c2:	462b      	mov	r3, r5
 80121c4:	460a      	mov	r2, r1
 80121c6:	46b4      	mov	ip, r6
 80121c8:	4621      	mov	r1, r4
 80121ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121ce:	4760      	bx	ip
 80121d0:	462a      	mov	r2, r5
 80121d2:	4620      	mov	r0, r4
 80121d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121d8:	f7ff befc 	b.w	8011fd4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80121dc:	4b03      	ldr	r3, [pc, #12]	; (80121ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 80121de:	4a04      	ldr	r2, [pc, #16]	; (80121f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 80121e0:	4804      	ldr	r0, [pc, #16]	; (80121f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 80121e2:	f240 21bb 	movw	r1, #699	; 0x2bb
 80121e6:	f008 fb99 	bl	801a91c <__assert_func>
 80121ea:	bd70      	pop	{r4, r5, r6, pc}
 80121ec:	0801e3a8 	.word	0x0801e3a8
 80121f0:	0801ea99 	.word	0x0801ea99
 80121f4:	0801e283 	.word	0x0801e283

080121f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80121f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121fc:	b093      	sub	sp, #76	; 0x4c
 80121fe:	880f      	ldrh	r7, [r1, #0]
 8012200:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012204:	4681      	mov	r9, r0
 8012206:	4688      	mov	r8, r1
 8012208:	4615      	mov	r5, r2
 801220a:	b12f      	cbz	r7, 8012218 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 801220c:	4b71      	ldr	r3, [pc, #452]	; (80123d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801220e:	4a72      	ldr	r2, [pc, #456]	; (80123d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8012210:	4872      	ldr	r0, [pc, #456]	; (80123dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012212:	21ec      	movs	r1, #236	; 0xec
 8012214:	f008 fb82 	bl	801a91c <__assert_func>
 8012218:	6810      	ldr	r0, [r2, #0]
 801221a:	6851      	ldr	r1, [r2, #4]
 801221c:	ac0e      	add	r4, sp, #56	; 0x38
 801221e:	c403      	stmia	r4!, {r0, r1}
 8012220:	6818      	ldr	r0, [r3, #0]
 8012222:	6859      	ldr	r1, [r3, #4]
 8012224:	ac10      	add	r4, sp, #64	; 0x40
 8012226:	c403      	stmia	r4!, {r0, r1}
 8012228:	a80e      	add	r0, sp, #56	; 0x38
 801222a:	f7fa ff73 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801222e:	4629      	mov	r1, r5
 8012230:	a810      	add	r0, sp, #64	; 0x40
 8012232:	f7fa ff57 	bl	800d0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012236:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801223a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801223e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012242:	4d67      	ldr	r5, [pc, #412]	; (80123e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8012244:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8012248:	6828      	ldr	r0, [r5, #0]
 801224a:	4c66      	ldr	r4, [pc, #408]	; (80123e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 801224c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012250:	4489      	add	r9, r1
 8012252:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012256:	440a      	add	r2, r1
 8012258:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801225c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012260:	4413      	add	r3, r2
 8012262:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012266:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 801226a:	930a      	str	r3, [sp, #40]	; 0x28
 801226c:	6803      	ldr	r3, [r0, #0]
 801226e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012272:	4798      	blx	r3
 8012274:	2801      	cmp	r0, #1
 8012276:	d11d      	bne.n	80122b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8012278:	220b      	movs	r2, #11
 801227a:	9708      	str	r7, [sp, #32]
 801227c:	9207      	str	r2, [sp, #28]
 801227e:	8822      	ldrh	r2, [r4, #0]
 8012280:	f8cd a010 	str.w	sl, [sp, #16]
 8012284:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012288:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801228c:	9203      	str	r2, [sp, #12]
 801228e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012292:	9202      	str	r2, [sp, #8]
 8012294:	fa1f f28b 	uxth.w	r2, fp
 8012298:	9201      	str	r2, [sp, #4]
 801229a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801229e:	9200      	str	r2, [sp, #0]
 80122a0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80122a4:	6828      	ldr	r0, [r5, #0]
 80122a6:	4642      	mov	r2, r8
 80122a8:	4649      	mov	r1, r9
 80122aa:	f7f9 fbe9 	bl	800ba80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80122ae:	b013      	add	sp, #76	; 0x4c
 80122b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122b4:	6828      	ldr	r0, [r5, #0]
 80122b6:	6803      	ldr	r3, [r0, #0]
 80122b8:	6a1b      	ldr	r3, [r3, #32]
 80122ba:	4798      	blx	r3
 80122bc:	8823      	ldrh	r3, [r4, #0]
 80122be:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80122c2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80122c6:	fb01 2303 	mla	r3, r1, r3, r2
 80122ca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80122ce:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 80122d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80122d4:	005b      	lsls	r3, r3, #1
 80122d6:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 80122da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80122dc:	429f      	cmp	r7, r3
 80122de:	da72      	bge.n	80123c6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 80122e0:	2100      	movs	r1, #0
 80122e2:	4559      	cmp	r1, fp
 80122e4:	da5e      	bge.n	80123a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80122e6:	f819 3001 	ldrb.w	r3, [r9, r1]
 80122ea:	2204      	movs	r2, #4
 80122ec:	fb12 2303 	smlabb	r3, r2, r3, r2
 80122f0:	f858 2003 	ldr.w	r2, [r8, r3]
 80122f4:	0e15      	lsrs	r5, r2, #24
 80122f6:	d013      	beq.n	8012320 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80122f8:	2dff      	cmp	r5, #255	; 0xff
 80122fa:	ea4f 2412 	mov.w	r4, r2, lsr #8
 80122fe:	d111      	bne.n	8012324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012300:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012304:	d10e      	bne.n	8012324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012306:	0953      	lsrs	r3, r2, #5
 8012308:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 801230c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012310:	f024 0407 	bic.w	r4, r4, #7
 8012314:	431c      	orrs	r4, r3
 8012316:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801231a:	4314      	orrs	r4, r2
 801231c:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8012320:	3101      	adds	r1, #1
 8012322:	e7de      	b.n	80122e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 8012324:	fb0a f505 	mul.w	r5, sl, r5
 8012328:	1c6b      	adds	r3, r5, #1
 801232a:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 801232e:	eb03 2325 	add.w	r3, r3, r5, asr #8
 8012332:	121b      	asrs	r3, r3, #8
 8012334:	fa1f fe83 	uxth.w	lr, r3
 8012338:	ea4f 262c 	mov.w	r6, ip, asr #8
 801233c:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8012340:	43db      	mvns	r3, r3
 8012342:	b2db      	uxtb	r3, r3
 8012344:	fb15 f50e 	smulbb	r5, r5, lr
 8012348:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801234c:	fb06 5603 	mla	r6, r6, r3, r5
 8012350:	b2d2      	uxtb	r2, r2
 8012352:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012356:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801235a:	fa5f fc8c 	uxtb.w	ip, ip
 801235e:	fb12 f20e 	smulbb	r2, r2, lr
 8012362:	fb0c 2203 	mla	r2, ip, r3, r2
 8012366:	b2e4      	uxtb	r4, r4
 8012368:	b2b6      	uxth	r6, r6
 801236a:	fb14 f40e 	smulbb	r4, r4, lr
 801236e:	b292      	uxth	r2, r2
 8012370:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012374:	fb05 4503 	mla	r5, r5, r3, r4
 8012378:	1c73      	adds	r3, r6, #1
 801237a:	1c54      	adds	r4, r2, #1
 801237c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8012380:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8012384:	b2ad      	uxth	r5, r5
 8012386:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801238a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801238e:	4326      	orrs	r6, r4
 8012390:	1c6c      	adds	r4, r5, #1
 8012392:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8012396:	0964      	lsrs	r4, r4, #5
 8012398:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801239c:	4326      	orrs	r6, r4
 801239e:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 80123a2:	e7bd      	b.n	8012320 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80123a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80123a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80123a8:	881b      	ldrh	r3, [r3, #0]
 80123aa:	eba3 030b 	sub.w	r3, r3, fp
 80123ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80123b2:	4418      	add	r0, r3
 80123b4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80123b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80123ba:	eba3 030b 	sub.w	r3, r3, fp
 80123be:	4413      	add	r3, r2
 80123c0:	4499      	add	r9, r3
 80123c2:	3701      	adds	r7, #1
 80123c4:	e789      	b.n	80122da <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80123c6:	4b06      	ldr	r3, [pc, #24]	; (80123e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 80123c8:	6818      	ldr	r0, [r3, #0]
 80123ca:	6803      	ldr	r3, [r0, #0]
 80123cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80123ce:	4798      	blx	r3
 80123d0:	e76d      	b.n	80122ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 80123d2:	bf00      	nop
 80123d4:	0801e17f 	.word	0x0801e17f
 80123d8:	0801e86a 	.word	0x0801e86a
 80123dc:	0801e283 	.word	0x0801e283
 80123e0:	200014b8 	.word	0x200014b8
 80123e4:	200014b2 	.word	0x200014b2

080123e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80123e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123ec:	4614      	mov	r4, r2
 80123ee:	880a      	ldrh	r2, [r1, #0]
 80123f0:	b093      	sub	sp, #76	; 0x4c
 80123f2:	2a02      	cmp	r2, #2
 80123f4:	4606      	mov	r6, r0
 80123f6:	4689      	mov	r9, r1
 80123f8:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 80123fc:	d006      	beq.n	801240c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 80123fe:	4b7a      	ldr	r3, [pc, #488]	; (80125e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8012400:	4a7a      	ldr	r2, [pc, #488]	; (80125ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8012402:	487b      	ldr	r0, [pc, #492]	; (80125f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8012404:	f44f 71a3 	mov.w	r1, #326	; 0x146
 8012408:	f008 fa88 	bl	801a91c <__assert_func>
 801240c:	2f00      	cmp	r7, #0
 801240e:	d04b      	beq.n	80124a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012410:	6820      	ldr	r0, [r4, #0]
 8012412:	6861      	ldr	r1, [r4, #4]
 8012414:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 80125f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8012418:	ad0e      	add	r5, sp, #56	; 0x38
 801241a:	c503      	stmia	r5!, {r0, r1}
 801241c:	6818      	ldr	r0, [r3, #0]
 801241e:	6859      	ldr	r1, [r3, #4]
 8012420:	ad10      	add	r5, sp, #64	; 0x40
 8012422:	c503      	stmia	r5!, {r0, r1}
 8012424:	a80e      	add	r0, sp, #56	; 0x38
 8012426:	f7fa fe75 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801242a:	4621      	mov	r1, r4
 801242c:	a810      	add	r0, sp, #64	; 0x40
 801242e:	f7fa fe59 	bl	800d0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012432:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012436:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801243a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801243e:	f8da 0000 	ldr.w	r0, [sl]
 8012442:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 8012446:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 801244a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801244e:	1874      	adds	r4, r6, r1
 8012450:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012454:	4e67      	ldr	r6, [pc, #412]	; (80125f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 8012456:	440a      	add	r2, r1
 8012458:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801245c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012460:	4413      	add	r3, r2
 8012462:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012466:	6803      	ldr	r3, [r0, #0]
 8012468:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801246c:	4798      	blx	r3
 801246e:	2801      	cmp	r0, #1
 8012470:	d11d      	bne.n	80124ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8012472:	2200      	movs	r2, #0
 8012474:	210b      	movs	r1, #11
 8012476:	e9cd 1207 	strd	r1, r2, [sp, #28]
 801247a:	8831      	ldrh	r1, [r6, #0]
 801247c:	9704      	str	r7, [sp, #16]
 801247e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8012482:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012486:	9203      	str	r2, [sp, #12]
 8012488:	fa1f f288 	uxth.w	r2, r8
 801248c:	9202      	str	r2, [sp, #8]
 801248e:	b2ad      	uxth	r5, r5
 8012490:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012494:	9200      	str	r2, [sp, #0]
 8012496:	9501      	str	r5, [sp, #4]
 8012498:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801249c:	f8da 0000 	ldr.w	r0, [sl]
 80124a0:	464a      	mov	r2, r9
 80124a2:	4621      	mov	r1, r4
 80124a4:	f7f9 faec 	bl	800ba80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80124a8:	b013      	add	sp, #76	; 0x4c
 80124aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124ae:	f8da 0000 	ldr.w	r0, [sl]
 80124b2:	6803      	ldr	r3, [r0, #0]
 80124b4:	6a1b      	ldr	r3, [r3, #32]
 80124b6:	4798      	blx	r3
 80124b8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80124bc:	8833      	ldrh	r3, [r6, #0]
 80124be:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80124c2:	fb01 2303 	mla	r3, r1, r3, r2
 80124c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80124ca:	2fff      	cmp	r7, #255	; 0xff
 80124cc:	f109 0304 	add.w	r3, r9, #4
 80124d0:	930a      	str	r3, [sp, #40]	; 0x28
 80124d2:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 80124d6:	d111      	bne.n	80124fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 80124d8:	b212      	sxth	r2, r2
 80124da:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 80124de:	2100      	movs	r1, #0
 80124e0:	4541      	cmp	r1, r8
 80124e2:	da7a      	bge.n	80125da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 80124e4:	2300      	movs	r3, #0
 80124e6:	42ab      	cmp	r3, r5
 80124e8:	da6b      	bge.n	80125c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 80124ea:	f814 c003 	ldrb.w	ip, [r4, r3]
 80124ee:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80124f0:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 80124f4:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 80124f8:	3301      	adds	r3, #1
 80124fa:	e7f4      	b.n	80124e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 80124fc:	b213      	sxth	r3, r2
 80124fe:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8012502:	930b      	str	r3, [sp, #44]	; 0x2c
 8012504:	005b      	lsls	r3, r3, #1
 8012506:	930c      	str	r3, [sp, #48]	; 0x30
 8012508:	f04f 0900 	mov.w	r9, #0
 801250c:	b2ba      	uxth	r2, r7
 801250e:	fa1f fc8c 	uxth.w	ip, ip
 8012512:	960d      	str	r6, [sp, #52]	; 0x34
 8012514:	45c1      	cmp	r9, r8
 8012516:	da60      	bge.n	80125da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8012518:	46a3      	mov	fp, r4
 801251a:	4682      	mov	sl, r0
 801251c:	ebab 0304 	sub.w	r3, fp, r4
 8012520:	429d      	cmp	r5, r3
 8012522:	dd3e      	ble.n	80125a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 8012524:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8012528:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801252a:	f8ba 1000 	ldrh.w	r1, [sl]
 801252e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012532:	120e      	asrs	r6, r1, #8
 8012534:	121f      	asrs	r7, r3, #8
 8012536:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801253a:	fb16 f60c 	smulbb	r6, r6, ip
 801253e:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 8012542:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012546:	00c9      	lsls	r1, r1, #3
 8012548:	fb07 6702 	mla	r7, r7, r2, r6
 801254c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012550:	10de      	asrs	r6, r3, #3
 8012552:	b2c9      	uxtb	r1, r1
 8012554:	00db      	lsls	r3, r3, #3
 8012556:	fb1e fe0c 	smulbb	lr, lr, ip
 801255a:	fb11 f10c 	smulbb	r1, r1, ip
 801255e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012562:	b2db      	uxtb	r3, r3
 8012564:	b2bf      	uxth	r7, r7
 8012566:	fb06 e602 	mla	r6, r6, r2, lr
 801256a:	fb03 1302 	mla	r3, r3, r2, r1
 801256e:	b2b6      	uxth	r6, r6
 8012570:	b29b      	uxth	r3, r3
 8012572:	1c79      	adds	r1, r7, #1
 8012574:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8012578:	f106 0e01 	add.w	lr, r6, #1
 801257c:	1c59      	adds	r1, r3, #1
 801257e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8012582:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8012586:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801258a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801258e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8012592:	430f      	orrs	r7, r1
 8012594:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8012598:	ea47 070e 	orr.w	r7, r7, lr
 801259c:	f82a 7b02 	strh.w	r7, [sl], #2
 80125a0:	e7bc      	b.n	801251c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 80125a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80125a4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80125a6:	881b      	ldrh	r3, [r3, #0]
 80125a8:	1b5b      	subs	r3, r3, r5
 80125aa:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80125ae:	4418      	add	r0, r3
 80125b0:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80125b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80125b6:	1b5b      	subs	r3, r3, r5
 80125b8:	440b      	add	r3, r1
 80125ba:	441c      	add	r4, r3
 80125bc:	f109 0901 	add.w	r9, r9, #1
 80125c0:	e7a8      	b.n	8012514 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 80125c2:	8833      	ldrh	r3, [r6, #0]
 80125c4:	1b5b      	subs	r3, r3, r5
 80125c6:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 80125ca:	4418      	add	r0, r3
 80125cc:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80125d0:	1b5b      	subs	r3, r3, r5
 80125d2:	4413      	add	r3, r2
 80125d4:	441c      	add	r4, r3
 80125d6:	3101      	adds	r1, #1
 80125d8:	e782      	b.n	80124e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 80125da:	4b07      	ldr	r3, [pc, #28]	; (80125f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 80125dc:	6818      	ldr	r0, [r3, #0]
 80125de:	6803      	ldr	r3, [r0, #0]
 80125e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80125e2:	4798      	blx	r3
 80125e4:	e760      	b.n	80124a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80125e6:	bf00      	nop
 80125e8:	0801e03d 	.word	0x0801e03d
 80125ec:	0801e6d4 	.word	0x0801e6d4
 80125f0:	0801e283 	.word	0x0801e283
 80125f4:	200014b2 	.word	0x200014b2
 80125f8:	200014b8 	.word	0x200014b8

080125fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80125fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012600:	4616      	mov	r6, r2
 8012602:	880a      	ldrh	r2, [r1, #0]
 8012604:	b093      	sub	sp, #76	; 0x4c
 8012606:	2a01      	cmp	r2, #1
 8012608:	4681      	mov	r9, r0
 801260a:	4688      	mov	r8, r1
 801260c:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012610:	d006      	beq.n	8012620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8012612:	4b6c      	ldr	r3, [pc, #432]	; (80127c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8012614:	4a6c      	ldr	r2, [pc, #432]	; (80127c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 8012616:	486d      	ldr	r0, [pc, #436]	; (80127cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 8012618:	f240 11a1 	movw	r1, #417	; 0x1a1
 801261c:	f008 f97e 	bl	801a91c <__assert_func>
 8012620:	f1ba 0f00 	cmp.w	sl, #0
 8012624:	d04a      	beq.n	80126bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8012626:	6830      	ldr	r0, [r6, #0]
 8012628:	6871      	ldr	r1, [r6, #4]
 801262a:	4d69      	ldr	r5, [pc, #420]	; (80127d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 801262c:	ac0e      	add	r4, sp, #56	; 0x38
 801262e:	c403      	stmia	r4!, {r0, r1}
 8012630:	6818      	ldr	r0, [r3, #0]
 8012632:	6859      	ldr	r1, [r3, #4]
 8012634:	ac10      	add	r4, sp, #64	; 0x40
 8012636:	c403      	stmia	r4!, {r0, r1}
 8012638:	a80e      	add	r0, sp, #56	; 0x38
 801263a:	f7fa fd6b 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801263e:	4631      	mov	r1, r6
 8012640:	a810      	add	r0, sp, #64	; 0x40
 8012642:	f7fa fd4f 	bl	800d0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012646:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801264a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801264e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012652:	6828      	ldr	r0, [r5, #0]
 8012654:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8012658:	4c5e      	ldr	r4, [pc, #376]	; (80127d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801265a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801265e:	4489      	add	r9, r1
 8012660:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012664:	440a      	add	r2, r1
 8012666:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801266a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801266e:	4413      	add	r3, r2
 8012670:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012674:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8012678:	930a      	str	r3, [sp, #40]	; 0x28
 801267a:	6803      	ldr	r3, [r0, #0]
 801267c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012680:	4798      	blx	r3
 8012682:	2801      	cmp	r0, #1
 8012684:	d11d      	bne.n	80126c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8012686:	220b      	movs	r2, #11
 8012688:	2100      	movs	r1, #0
 801268a:	e9cd 2107 	strd	r2, r1, [sp, #28]
 801268e:	8822      	ldrh	r2, [r4, #0]
 8012690:	f8cd a010 	str.w	sl, [sp, #16]
 8012694:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012698:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801269c:	9203      	str	r2, [sp, #12]
 801269e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80126a2:	9202      	str	r2, [sp, #8]
 80126a4:	b2b6      	uxth	r6, r6
 80126a6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80126aa:	9200      	str	r2, [sp, #0]
 80126ac:	9601      	str	r6, [sp, #4]
 80126ae:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80126b2:	6828      	ldr	r0, [r5, #0]
 80126b4:	4642      	mov	r2, r8
 80126b6:	4649      	mov	r1, r9
 80126b8:	f7f9 f9e2 	bl	800ba80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80126bc:	b013      	add	sp, #76	; 0x4c
 80126be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126c2:	6828      	ldr	r0, [r5, #0]
 80126c4:	6803      	ldr	r3, [r0, #0]
 80126c6:	6a1b      	ldr	r3, [r3, #32]
 80126c8:	4798      	blx	r3
 80126ca:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80126ce:	8823      	ldrh	r3, [r4, #0]
 80126d0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80126d4:	940d      	str	r4, [sp, #52]	; 0x34
 80126d6:	fb01 2303 	mla	r3, r1, r3, r2
 80126da:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80126de:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 80126e2:	930b      	str	r3, [sp, #44]	; 0x2c
 80126e4:	ea6f 010a 	mvn.w	r1, sl
 80126e8:	005b      	lsls	r3, r3, #1
 80126ea:	930c      	str	r3, [sp, #48]	; 0x30
 80126ec:	f04f 0e00 	mov.w	lr, #0
 80126f0:	b2c9      	uxtb	r1, r1
 80126f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80126f4:	459e      	cmp	lr, r3
 80126f6:	da5f      	bge.n	80127b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80126f8:	2700      	movs	r7, #0
 80126fa:	fa1f fb8a 	uxth.w	fp, sl
 80126fe:	42b7      	cmp	r7, r6
 8012700:	da4a      	bge.n	8012798 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8012702:	f819 3007 	ldrb.w	r3, [r9, r7]
 8012706:	2203      	movs	r2, #3
 8012708:	2404      	movs	r4, #4
 801270a:	fb12 4303 	smlabb	r3, r2, r3, r4
 801270e:	eb08 0403 	add.w	r4, r8, r3
 8012712:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012716:	78a2      	ldrb	r2, [r4, #2]
 8012718:	7865      	ldrb	r5, [r4, #1]
 801271a:	f818 c003 	ldrb.w	ip, [r8, r3]
 801271e:	d10c      	bne.n	801273a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8012720:	4b2d      	ldr	r3, [pc, #180]	; (80127d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012722:	00ed      	lsls	r5, r5, #3
 8012724:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8012728:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801272c:	432a      	orrs	r2, r5
 801272e:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 8012732:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 8012736:	3701      	adds	r7, #1
 8012738:	e7e1      	b.n	80126fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 801273a:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 801273e:	121c      	asrs	r4, r3, #8
 8012740:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012744:	fb12 f20b 	smulbb	r2, r2, fp
 8012748:	fb04 2201 	mla	r2, r4, r1, r2
 801274c:	10dc      	asrs	r4, r3, #3
 801274e:	00db      	lsls	r3, r3, #3
 8012750:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8012754:	b2db      	uxtb	r3, r3
 8012756:	fb15 f50b 	smulbb	r5, r5, fp
 801275a:	fb1c fc0b 	smulbb	ip, ip, fp
 801275e:	b292      	uxth	r2, r2
 8012760:	fb04 5501 	mla	r5, r4, r1, r5
 8012764:	fb03 cc01 	mla	ip, r3, r1, ip
 8012768:	b2ad      	uxth	r5, r5
 801276a:	fa1f fc8c 	uxth.w	ip, ip
 801276e:	1c53      	adds	r3, r2, #1
 8012770:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8012774:	1c6c      	adds	r4, r5, #1
 8012776:	f10c 0301 	add.w	r3, ip, #1
 801277a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801277e:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 8012782:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8012786:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801278a:	096d      	lsrs	r5, r5, #5
 801278c:	ea42 020c 	orr.w	r2, r2, ip
 8012790:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012794:	432a      	orrs	r2, r5
 8012796:	e7cc      	b.n	8012732 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 8012798:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801279a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801279c:	881b      	ldrh	r3, [r3, #0]
 801279e:	1b9b      	subs	r3, r3, r6
 80127a0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80127a4:	4418      	add	r0, r3
 80127a6:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80127aa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80127ac:	1b9b      	subs	r3, r3, r6
 80127ae:	4413      	add	r3, r2
 80127b0:	4499      	add	r9, r3
 80127b2:	f10e 0e01 	add.w	lr, lr, #1
 80127b6:	e79c      	b.n	80126f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 80127b8:	4b05      	ldr	r3, [pc, #20]	; (80127d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80127ba:	6818      	ldr	r0, [r3, #0]
 80127bc:	6803      	ldr	r3, [r0, #0]
 80127be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80127c0:	4798      	blx	r3
 80127c2:	e77b      	b.n	80126bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80127c4:	0801e08b 	.word	0x0801e08b
 80127c8:	0801e75d 	.word	0x0801e75d
 80127cc:	0801e283 	.word	0x0801e283
 80127d0:	200014b8 	.word	0x200014b8
 80127d4:	200014b2 	.word	0x200014b2
 80127d8:	fffff800 	.word	0xfffff800

080127dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80127dc:	b430      	push	{r4, r5}
 80127de:	780d      	ldrb	r5, [r1, #0]
 80127e0:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80127e4:	2d01      	cmp	r5, #1
 80127e6:	d00a      	beq.n	80127fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80127e8:	d305      	bcc.n	80127f6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80127ea:	2d02      	cmp	r5, #2
 80127ec:	d10b      	bne.n	8012806 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80127ee:	9402      	str	r4, [sp, #8]
 80127f0:	bc30      	pop	{r4, r5}
 80127f2:	f7ff bdf9 	b.w	80123e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80127f6:	9402      	str	r4, [sp, #8]
 80127f8:	bc30      	pop	{r4, r5}
 80127fa:	f7ff bcfd 	b.w	80121f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80127fe:	9402      	str	r4, [sp, #8]
 8012800:	bc30      	pop	{r4, r5}
 8012802:	f7ff befb 	b.w	80125fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8012806:	bc30      	pop	{r4, r5}
 8012808:	4770      	bx	lr
	...

0801280c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801280c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012810:	4605      	mov	r5, r0
 8012812:	b089      	sub	sp, #36	; 0x24
 8012814:	6810      	ldr	r0, [r2, #0]
 8012816:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 801281a:	460c      	mov	r4, r1
 801281c:	6851      	ldr	r1, [r2, #4]
 801281e:	ae04      	add	r6, sp, #16
 8012820:	c603      	stmia	r6!, {r0, r1}
 8012822:	6818      	ldr	r0, [r3, #0]
 8012824:	6859      	ldr	r1, [r3, #4]
 8012826:	ae06      	add	r6, sp, #24
 8012828:	4617      	mov	r7, r2
 801282a:	c603      	stmia	r6!, {r0, r1}
 801282c:	a804      	add	r0, sp, #16
 801282e:	f7fa fc71 	bl	800d114 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012832:	4639      	mov	r1, r7
 8012834:	a806      	add	r0, sp, #24
 8012836:	f7fa fc55 	bl	800d0e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801283a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 801283e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012842:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8012846:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 801284a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801284e:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 8012852:	440c      	add	r4, r1
 8012854:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8012858:	440a      	add	r2, r1
 801285a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801285e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012862:	4413      	add	r3, r2
 8012864:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012868:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801286c:	9300      	str	r3, [sp, #0]
 801286e:	4b80      	ldr	r3, [pc, #512]	; (8012a70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8012870:	6818      	ldr	r0, [r3, #0]
 8012872:	6803      	ldr	r3, [r0, #0]
 8012874:	6a1b      	ldr	r3, [r3, #32]
 8012876:	4798      	blx	r3
 8012878:	4b7e      	ldr	r3, [pc, #504]	; (8012a74 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 801287a:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 801287e:	881a      	ldrh	r2, [r3, #0]
 8012880:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8012884:	fb06 1202 	mla	r2, r6, r2, r1
 8012888:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801288c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012890:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 8012894:	b212      	sxth	r2, r2
 8012896:	d117      	bne.n	80128c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 8012898:	9201      	str	r2, [sp, #4]
 801289a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801289e:	f04f 0a00 	mov.w	sl, #0
 80128a2:	9302      	str	r3, [sp, #8]
 80128a4:	9b00      	ldr	r3, [sp, #0]
 80128a6:	459a      	cmp	sl, r3
 80128a8:	f280 80d9 	bge.w	8012a5e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80128ac:	2100      	movs	r1, #0
 80128ae:	4541      	cmp	r1, r8
 80128b0:	f280 80c1 	bge.w	8012a36 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 80128b4:	5c63      	ldrb	r3, [r4, r1]
 80128b6:	b12b      	cbz	r3, 80128c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 80128b8:	2bff      	cmp	r3, #255	; 0xff
 80128ba:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 80128be:	d176      	bne.n	80129ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 80128c0:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 80128c4:	3101      	adds	r1, #1
 80128c6:	e7f2      	b.n	80128ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 80128c8:	9202      	str	r2, [sp, #8]
 80128ca:	0052      	lsls	r2, r2, #1
 80128cc:	9201      	str	r2, [sp, #4]
 80128ce:	f04f 0b00 	mov.w	fp, #0
 80128d2:	9303      	str	r3, [sp, #12]
 80128d4:	9b00      	ldr	r3, [sp, #0]
 80128d6:	459b      	cmp	fp, r3
 80128d8:	f280 80c1 	bge.w	8012a5e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80128dc:	f04f 0c00 	mov.w	ip, #0
 80128e0:	45c4      	cmp	ip, r8
 80128e2:	da4f      	bge.n	8012984 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 80128e4:	f814 300c 	ldrb.w	r3, [r4, ip]
 80128e8:	2b00      	cmp	r3, #0
 80128ea:	d048      	beq.n	801297e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 80128ec:	fb09 f303 	mul.w	r3, r9, r3
 80128f0:	1c5a      	adds	r2, r3, #1
 80128f2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80128f6:	121b      	asrs	r3, r3, #8
 80128f8:	d041      	beq.n	801297e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 80128fa:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 80128fe:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 8012902:	b29e      	uxth	r6, r3
 8012904:	1211      	asrs	r1, r2, #8
 8012906:	43db      	mvns	r3, r3
 8012908:	b2db      	uxtb	r3, r3
 801290a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801290e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012912:	fb11 f103 	smulbb	r1, r1, r3
 8012916:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801291a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801291e:	00d2      	lsls	r2, r2, #3
 8012920:	fb07 1706 	mla	r7, r7, r6, r1
 8012924:	b2d2      	uxtb	r2, r2
 8012926:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801292a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801292e:	fb12 f203 	smulbb	r2, r2, r3
 8012932:	fa5f fe8e 	uxtb.w	lr, lr
 8012936:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801293a:	fb0e 2206 	mla	r2, lr, r6, r2
 801293e:	fb1a fa03 	smulbb	sl, sl, r3
 8012942:	b2bf      	uxth	r7, r7
 8012944:	b292      	uxth	r2, r2
 8012946:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801294a:	fb01 a106 	mla	r1, r1, r6, sl
 801294e:	1c7b      	adds	r3, r7, #1
 8012950:	f102 0a01 	add.w	sl, r2, #1
 8012954:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8012958:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 801295c:	b289      	uxth	r1, r1
 801295e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012962:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012966:	ea47 070a 	orr.w	r7, r7, sl
 801296a:	f101 0a01 	add.w	sl, r1, #1
 801296e:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8012972:	0949      	lsrs	r1, r1, #5
 8012974:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012978:	430f      	orrs	r7, r1
 801297a:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 801297e:	f10c 0c01 	add.w	ip, ip, #1
 8012982:	e7ad      	b.n	80128e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 8012984:	9b03      	ldr	r3, [sp, #12]
 8012986:	9a01      	ldr	r2, [sp, #4]
 8012988:	881b      	ldrh	r3, [r3, #0]
 801298a:	eba3 0308 	sub.w	r3, r3, r8
 801298e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012992:	4418      	add	r0, r3
 8012994:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012998:	eba3 0308 	sub.w	r3, r3, r8
 801299c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80129a0:	4415      	add	r5, r2
 80129a2:	9a02      	ldr	r2, [sp, #8]
 80129a4:	4413      	add	r3, r2
 80129a6:	441c      	add	r4, r3
 80129a8:	f10b 0b01 	add.w	fp, fp, #1
 80129ac:	e792      	b.n	80128d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 80129ae:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 80129b2:	b29f      	uxth	r7, r3
 80129b4:	1216      	asrs	r6, r2, #8
 80129b6:	43db      	mvns	r3, r3
 80129b8:	b2db      	uxtb	r3, r3
 80129ba:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80129be:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80129c2:	fb16 f603 	smulbb	r6, r6, r3
 80129c6:	ea4f 09e2 	mov.w	r9, r2, asr #3
 80129ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80129ce:	00d2      	lsls	r2, r2, #3
 80129d0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80129d4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80129d8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80129dc:	b2d2      	uxtb	r2, r2
 80129de:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80129e2:	fa1f fc8c 	uxth.w	ip, ip
 80129e6:	fb19 f903 	smulbb	r9, r9, r3
 80129ea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80129ee:	fa5f fe8e 	uxtb.w	lr, lr
 80129f2:	fb12 f203 	smulbb	r2, r2, r3
 80129f6:	fb06 9607 	mla	r6, r6, r7, r9
 80129fa:	fb0e 2207 	mla	r2, lr, r7, r2
 80129fe:	f10c 0901 	add.w	r9, ip, #1
 8012a02:	b292      	uxth	r2, r2
 8012a04:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012a08:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8012a0c:	f102 0c01 	add.w	ip, r2, #1
 8012a10:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012a14:	b2b6      	uxth	r6, r6
 8012a16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012a1a:	ea49 0c02 	orr.w	ip, r9, r2
 8012a1e:	f106 0901 	add.w	r9, r6, #1
 8012a22:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8012a26:	0976      	lsrs	r6, r6, #5
 8012a28:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012a2c:	ea4c 0c06 	orr.w	ip, ip, r6
 8012a30:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8012a34:	e746      	b.n	80128c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8012a36:	9b02      	ldr	r3, [sp, #8]
 8012a38:	881b      	ldrh	r3, [r3, #0]
 8012a3a:	eba3 0308 	sub.w	r3, r3, r8
 8012a3e:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8012a42:	4418      	add	r0, r3
 8012a44:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012a48:	eba3 0308 	sub.w	r3, r3, r8
 8012a4c:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8012a50:	4415      	add	r5, r2
 8012a52:	9a01      	ldr	r2, [sp, #4]
 8012a54:	4413      	add	r3, r2
 8012a56:	441c      	add	r4, r3
 8012a58:	f10a 0a01 	add.w	sl, sl, #1
 8012a5c:	e722      	b.n	80128a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 8012a5e:	4b04      	ldr	r3, [pc, #16]	; (8012a70 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8012a60:	6818      	ldr	r0, [r3, #0]
 8012a62:	6803      	ldr	r3, [r0, #0]
 8012a64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012a66:	4798      	blx	r3
 8012a68:	b009      	add	sp, #36	; 0x24
 8012a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a6e:	bf00      	nop
 8012a70:	200014b8 	.word	0x200014b8
 8012a74:	200014b2 	.word	0x200014b2

08012a78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8012a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a7c:	b089      	sub	sp, #36	; 0x24
 8012a7e:	4682      	mov	sl, r0
 8012a80:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8012a84:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012a86:	460d      	mov	r5, r1
 8012a88:	4691      	mov	r9, r2
 8012a8a:	4698      	mov	r8, r3
 8012a8c:	b3ae      	cbz	r6, 8012afa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012a8e:	4608      	mov	r0, r1
 8012a90:	f7fc fa8c 	bl	800efac <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012a94:	4607      	mov	r7, r0
 8012a96:	4628      	mov	r0, r5
 8012a98:	f7fc fac2 	bl	800f020 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012a9c:	f8ad 000e 	strh.w	r0, [sp, #14]
 8012aa0:	4628      	mov	r0, r5
 8012aa2:	f8ad 9008 	strh.w	r9, [sp, #8]
 8012aa6:	f8ad 800a 	strh.w	r8, [sp, #10]
 8012aaa:	f8ad 700c 	strh.w	r7, [sp, #12]
 8012aae:	f7fc fc09 	bl	800f2c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012ab2:	b178      	cbz	r0, 8012ad4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012ab4:	4628      	mov	r0, r5
 8012ab6:	f7fc fc05 	bl	800f2c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012aba:	2802      	cmp	r0, #2
 8012abc:	d00a      	beq.n	8012ad4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012abe:	4628      	mov	r0, r5
 8012ac0:	f7fc fc00 	bl	800f2c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012ac4:	280b      	cmp	r0, #11
 8012ac6:	d005      	beq.n	8012ad4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012ac8:	4b69      	ldr	r3, [pc, #420]	; (8012c70 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8012aca:	4a6a      	ldr	r2, [pc, #424]	; (8012c74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8012acc:	486a      	ldr	r0, [pc, #424]	; (8012c78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8012ace:	214f      	movs	r1, #79	; 0x4f
 8012ad0:	f007 ff24 	bl	801a91c <__assert_func>
 8012ad4:	4628      	mov	r0, r5
 8012ad6:	f7fc fb71 	bl	800f1bc <_ZNK8touchgfx6Bitmap7getDataEv>
 8012ada:	4607      	mov	r7, r0
 8012adc:	4628      	mov	r0, r5
 8012ade:	f7fc fb9f 	bl	800f220 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8012ae2:	4681      	mov	r9, r0
 8012ae4:	4628      	mov	r0, r5
 8012ae6:	f7fc fbed 	bl	800f2c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012aea:	2802      	cmp	r0, #2
 8012aec:	d108      	bne.n	8012b00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8012aee:	4633      	mov	r3, r6
 8012af0:	4622      	mov	r2, r4
 8012af2:	a902      	add	r1, sp, #8
 8012af4:	4638      	mov	r0, r7
 8012af6:	f7ff fa6d 	bl	8011fd4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012afa:	b009      	add	sp, #36	; 0x24
 8012afc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b00:	4628      	mov	r0, r5
 8012b02:	f7fc fbdf 	bl	800f2c4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012b06:	280b      	cmp	r0, #11
 8012b08:	d107      	bne.n	8012b1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8012b0a:	9600      	str	r6, [sp, #0]
 8012b0c:	4623      	mov	r3, r4
 8012b0e:	aa02      	add	r2, sp, #8
 8012b10:	4649      	mov	r1, r9
 8012b12:	4638      	mov	r0, r7
 8012b14:	f7ff fe62 	bl	80127dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8012b18:	e7ef      	b.n	8012afa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012b1a:	4628      	mov	r0, r5
 8012b1c:	f7fc fb14 	bl	800f148 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012b20:	b950      	cbnz	r0, 8012b38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8012b22:	e9cd 6000 	strd	r6, r0, [sp]
 8012b26:	f8da 3000 	ldr.w	r3, [sl]
 8012b2a:	aa02      	add	r2, sp, #8
 8012b2c:	691d      	ldr	r5, [r3, #16]
 8012b2e:	4639      	mov	r1, r7
 8012b30:	4623      	mov	r3, r4
 8012b32:	4650      	mov	r0, sl
 8012b34:	47a8      	blx	r5
 8012b36:	e7e0      	b.n	8012afa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012b38:	f10d 0818 	add.w	r8, sp, #24
 8012b3c:	4629      	mov	r1, r5
 8012b3e:	4640      	mov	r0, r8
 8012b40:	f7fc faa8 	bl	800f094 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012b44:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012b48:	ad04      	add	r5, sp, #16
 8012b4a:	e885 0003 	stmia.w	r5, {r0, r1}
 8012b4e:	4628      	mov	r0, r5
 8012b50:	4621      	mov	r1, r4
 8012b52:	f7f8 fb47 	bl	800b1e4 <_ZN8touchgfx4RectaNERKS0_>
 8012b56:	4628      	mov	r0, r5
 8012b58:	f7f8 fb88 	bl	800b26c <_ZNK8touchgfx4Rect7isEmptyEv>
 8012b5c:	b138      	cbz	r0, 8012b6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8012b5e:	9600      	str	r6, [sp, #0]
 8012b60:	4623      	mov	r3, r4
 8012b62:	aa02      	add	r2, sp, #8
 8012b64:	4649      	mov	r1, r9
 8012b66:	4638      	mov	r0, r7
 8012b68:	f7ff fe50 	bl	801280c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012b6c:	e7c5      	b.n	8012afa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012b6e:	e9cd 6000 	strd	r6, r0, [sp]
 8012b72:	f8da 3000 	ldr.w	r3, [sl]
 8012b76:	aa02      	add	r2, sp, #8
 8012b78:	f8d3 b010 	ldr.w	fp, [r3, #16]
 8012b7c:	4639      	mov	r1, r7
 8012b7e:	462b      	mov	r3, r5
 8012b80:	4650      	mov	r0, sl
 8012b82:	47d8      	blx	fp
 8012b84:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012b88:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012b8c:	4293      	cmp	r3, r2
 8012b8e:	dd13      	ble.n	8012bb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8012b90:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012b94:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012b98:	f8ad 0018 	strh.w	r0, [sp, #24]
 8012b9c:	1a9b      	subs	r3, r3, r2
 8012b9e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8012ba2:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012ba6:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012baa:	9600      	str	r6, [sp, #0]
 8012bac:	4643      	mov	r3, r8
 8012bae:	aa02      	add	r2, sp, #8
 8012bb0:	4649      	mov	r1, r9
 8012bb2:	4638      	mov	r0, r7
 8012bb4:	f7ff fe2a 	bl	801280c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012bb8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8012bbc:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012bc0:	4293      	cmp	r3, r2
 8012bc2:	dd13      	ble.n	8012bec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8012bc4:	1a9b      	subs	r3, r3, r2
 8012bc6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8012bca:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8012bce:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012bd2:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012bd6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012bda:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012bde:	9600      	str	r6, [sp, #0]
 8012be0:	4643      	mov	r3, r8
 8012be2:	aa02      	add	r2, sp, #8
 8012be4:	4649      	mov	r1, r9
 8012be6:	4638      	mov	r0, r7
 8012be8:	f7ff fe10 	bl	801280c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012bec:	88a2      	ldrh	r2, [r4, #4]
 8012bee:	8823      	ldrh	r3, [r4, #0]
 8012bf0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8012bf4:	4413      	add	r3, r2
 8012bf6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012bfa:	440a      	add	r2, r1
 8012bfc:	b29b      	uxth	r3, r3
 8012bfe:	b292      	uxth	r2, r2
 8012c00:	b211      	sxth	r1, r2
 8012c02:	b218      	sxth	r0, r3
 8012c04:	4288      	cmp	r0, r1
 8012c06:	dd13      	ble.n	8012c30 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8012c08:	1a9b      	subs	r3, r3, r2
 8012c0a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8012c0e:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8012c12:	f8ad 1018 	strh.w	r1, [sp, #24]
 8012c16:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012c1a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012c1e:	9600      	str	r6, [sp, #0]
 8012c20:	4643      	mov	r3, r8
 8012c22:	aa02      	add	r2, sp, #8
 8012c24:	4649      	mov	r1, r9
 8012c26:	4638      	mov	r0, r7
 8012c28:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012c2c:	f7ff fdee 	bl	801280c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012c30:	88e2      	ldrh	r2, [r4, #6]
 8012c32:	8863      	ldrh	r3, [r4, #2]
 8012c34:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8012c38:	4413      	add	r3, r2
 8012c3a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012c3e:	440a      	add	r2, r1
 8012c40:	b29b      	uxth	r3, r3
 8012c42:	b292      	uxth	r2, r2
 8012c44:	b211      	sxth	r1, r2
 8012c46:	b218      	sxth	r0, r3
 8012c48:	4288      	cmp	r0, r1
 8012c4a:	f77f af56 	ble.w	8012afa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012c4e:	f9b4 5000 	ldrsh.w	r5, [r4]
 8012c52:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012c56:	f8ad 5018 	strh.w	r5, [sp, #24]
 8012c5a:	1a9b      	subs	r3, r3, r2
 8012c5c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012c60:	f8ad 101a 	strh.w	r1, [sp, #26]
 8012c64:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012c68:	9600      	str	r6, [sp, #0]
 8012c6a:	4643      	mov	r3, r8
 8012c6c:	e779      	b.n	8012b62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8012c6e:	bf00      	nop
 8012c70:	0801e0d9 	.word	0x0801e0d9
 8012c74:	0801e7e6 	.word	0x0801e7e6
 8012c78:	0801e283 	.word	0x0801e283

08012c7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8012c7c:	b508      	push	{r3, lr}
 8012c7e:	b180      	cbz	r0, 8012ca2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8012c80:	2902      	cmp	r1, #2
 8012c82:	d014      	beq.n	8012cae <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8012c84:	2903      	cmp	r1, #3
 8012c86:	d01d      	beq.n	8012cc4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012c88:	2901      	cmp	r1, #1
 8012c8a:	d101      	bne.n	8012c90 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012c8c:	2001      	movs	r0, #1
 8012c8e:	bd08      	pop	{r3, pc}
 8012c90:	4b0e      	ldr	r3, [pc, #56]	; (8012ccc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012c92:	8818      	ldrh	r0, [r3, #0]
 8012c94:	b990      	cbnz	r0, 8012cbc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8012c96:	4b0e      	ldr	r3, [pc, #56]	; (8012cd0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8012c98:	4a0e      	ldr	r2, [pc, #56]	; (8012cd4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8012c9a:	480f      	ldr	r0, [pc, #60]	; (8012cd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8012c9c:	21d7      	movs	r1, #215	; 0xd7
 8012c9e:	f007 fe3d 	bl	801a91c <__assert_func>
 8012ca2:	2902      	cmp	r1, #2
 8012ca4:	d00e      	beq.n	8012cc4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012ca6:	2903      	cmp	r1, #3
 8012ca8:	d0f2      	beq.n	8012c90 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012caa:	2901      	cmp	r1, #1
 8012cac:	d1ee      	bne.n	8012c8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8012cae:	4b07      	ldr	r3, [pc, #28]	; (8012ccc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012cb0:	8818      	ldrh	r0, [r3, #0]
 8012cb2:	2800      	cmp	r0, #0
 8012cb4:	d0ef      	beq.n	8012c96 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8012cb6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012cba:	e7e8      	b.n	8012c8e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012cbc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012cc0:	4240      	negs	r0, r0
 8012cc2:	e7e4      	b.n	8012c8e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012cc4:	f04f 30ff 	mov.w	r0, #4294967295
 8012cc8:	e7e1      	b.n	8012c8e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012cca:	bf00      	nop
 8012ccc:	200014b2 	.word	0x200014b2
 8012cd0:	0801e3dd 	.word	0x0801e3dd
 8012cd4:	0801e963 	.word	0x0801e963
 8012cd8:	0801e41f 	.word	0x0801e41f

08012cdc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8012cdc:	b508      	push	{r3, lr}
 8012cde:	b180      	cbz	r0, 8012d02 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8012ce0:	2902      	cmp	r1, #2
 8012ce2:	d014      	beq.n	8012d0e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8012ce4:	2903      	cmp	r1, #3
 8012ce6:	d018      	beq.n	8012d1a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012ce8:	2901      	cmp	r1, #1
 8012cea:	d001      	beq.n	8012cf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012cec:	2001      	movs	r0, #1
 8012cee:	e013      	b.n	8012d18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012cf0:	4b0e      	ldr	r3, [pc, #56]	; (8012d2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012cf2:	8818      	ldrh	r0, [r3, #0]
 8012cf4:	b970      	cbnz	r0, 8012d14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8012cf6:	4b0e      	ldr	r3, [pc, #56]	; (8012d30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8012cf8:	4a0e      	ldr	r2, [pc, #56]	; (8012d34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8012cfa:	480f      	ldr	r0, [pc, #60]	; (8012d38 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8012cfc:	21d7      	movs	r1, #215	; 0xd7
 8012cfe:	f007 fe0d 	bl	801a91c <__assert_func>
 8012d02:	2902      	cmp	r1, #2
 8012d04:	d009      	beq.n	8012d1a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012d06:	2903      	cmp	r1, #3
 8012d08:	d0f0      	beq.n	8012cec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8012d0a:	2901      	cmp	r1, #1
 8012d0c:	d1f0      	bne.n	8012cf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012d0e:	f04f 30ff 	mov.w	r0, #4294967295
 8012d12:	e001      	b.n	8012d18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012d14:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012d18:	bd08      	pop	{r3, pc}
 8012d1a:	4b04      	ldr	r3, [pc, #16]	; (8012d2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012d1c:	8818      	ldrh	r0, [r3, #0]
 8012d1e:	2800      	cmp	r0, #0
 8012d20:	d0e9      	beq.n	8012cf6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8012d22:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012d26:	4240      	negs	r0, r0
 8012d28:	e7f6      	b.n	8012d18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012d2a:	bf00      	nop
 8012d2c:	200014b2 	.word	0x200014b2
 8012d30:	0801e3dd 	.word	0x0801e3dd
 8012d34:	0801e963 	.word	0x0801e963
 8012d38:	0801e41f 	.word	0x0801e41f

08012d3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8012d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d40:	b097      	sub	sp, #92	; 0x5c
 8012d42:	9109      	str	r1, [sp, #36]	; 0x24
 8012d44:	a912      	add	r1, sp, #72	; 0x48
 8012d46:	e881 000c 	stmia.w	r1, {r2, r3}
 8012d4a:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8012d4e:	9306      	str	r3, [sp, #24]
 8012d50:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8012d54:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8012d58:	930e      	str	r3, [sp, #56]	; 0x38
 8012d5a:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8012d5e:	930a      	str	r3, [sp, #40]	; 0x28
 8012d60:	7b4b      	ldrb	r3, [r1, #13]
 8012d62:	798f      	ldrb	r7, [r1, #6]
 8012d64:	f9bd 4080 	ldrsh.w	r4, [sp, #128]	; 0x80
 8012d68:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 8012d6c:	f8bd 508c 	ldrh.w	r5, [sp, #140]	; 0x8c
 8012d70:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8012d74:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8012d78:	0158      	lsls	r0, r3, #5
 8012d7a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012d7e:	4338      	orrs	r0, r7
 8012d80:	9008      	str	r0, [sp, #32]
 8012d82:	f000 8149 	beq.w	8013018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8012d86:	011b      	lsls	r3, r3, #4
 8012d88:	79c8      	ldrb	r0, [r1, #7]
 8012d8a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012d8e:	4303      	orrs	r3, r0
 8012d90:	9307      	str	r3, [sp, #28]
 8012d92:	f000 8141 	beq.w	8013018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8012d96:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8012d9a:	b29b      	uxth	r3, r3
 8012d9c:	2e00      	cmp	r6, #0
 8012d9e:	f000 80e5 	beq.w	8012f6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x230>
 8012da2:	1af6      	subs	r6, r6, r3
 8012da4:	b2b6      	uxth	r6, r6
 8012da6:	0433      	lsls	r3, r6, #16
 8012da8:	d502      	bpl.n	8012db0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8012daa:	1ba4      	subs	r4, r4, r6
 8012dac:	b224      	sxth	r4, r4
 8012dae:	2600      	movs	r6, #0
 8012db0:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012db4:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8012db8:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 8012dbc:	428c      	cmp	r4, r1
 8012dbe:	b28b      	uxth	r3, r1
 8012dc0:	bfbf      	itttt	lt
 8012dc2:	18f6      	addlt	r6, r6, r3
 8012dc4:	1b34      	sublt	r4, r6, r4
 8012dc6:	b2a6      	uxthlt	r6, r4
 8012dc8:	460c      	movlt	r4, r1
 8012dca:	8891      	ldrh	r1, [r2, #4]
 8012dcc:	440b      	add	r3, r1
 8012dce:	b21b      	sxth	r3, r3
 8012dd0:	930d      	str	r3, [sp, #52]	; 0x34
 8012dd2:	88d3      	ldrh	r3, [r2, #6]
 8012dd4:	9a06      	ldr	r2, [sp, #24]
 8012dd6:	449a      	add	sl, r3
 8012dd8:	fa0f f38a 	sxth.w	r3, sl
 8012ddc:	930c      	str	r3, [sp, #48]	; 0x30
 8012dde:	4bb5      	ldr	r3, [pc, #724]	; (80130b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8012de0:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 8012de4:	f893 9000 	ldrb.w	r9, [r3]
 8012de8:	f109 3cff 	add.w	ip, r9, #4294967295
 8012dec:	f1dc 0300 	rsbs	r3, ip, #0
 8012df0:	eb43 030c 	adc.w	r3, r3, ip
 8012df4:	930b      	str	r3, [sp, #44]	; 0x2c
 8012df6:	4621      	mov	r1, r4
 8012df8:	465b      	mov	r3, fp
 8012dfa:	a812      	add	r0, sp, #72	; 0x48
 8012dfc:	f7fa f862 	bl	800cec4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8012e00:	4621      	mov	r1, r4
 8012e02:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8012e06:	465b      	mov	r3, fp
 8012e08:	9a06      	ldr	r2, [sp, #24]
 8012e0a:	a812      	add	r0, sp, #72	; 0x48
 8012e0c:	f7fa f872 	bl	800cef4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8012e10:	a916      	add	r1, sp, #88	; 0x58
 8012e12:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8012e16:	a815      	add	r0, sp, #84	; 0x54
 8012e18:	f7fa f94e 	bl	800d0b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8012e1c:	f1bb 0f00 	cmp.w	fp, #0
 8012e20:	f040 80a7 	bne.w	8012f72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x236>
 8012e24:	f1b9 0f01 	cmp.w	r9, #1
 8012e28:	f040 80ab 	bne.w	8012f82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
 8012e2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012e2e:	2b00      	cmp	r3, #0
 8012e30:	f040 80f7 	bne.w	8013022 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e6>
 8012e34:	4ba0      	ldr	r3, [pc, #640]	; (80130b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8012e36:	6818      	ldr	r0, [r3, #0]
 8012e38:	6803      	ldr	r3, [r0, #0]
 8012e3a:	6a1b      	ldr	r3, [r3, #32]
 8012e3c:	4798      	blx	r3
 8012e3e:	4a9f      	ldr	r2, [pc, #636]	; (80130bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8012e40:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8012e44:	8811      	ldrh	r1, [r2, #0]
 8012e46:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8012e4a:	fb01 2303 	mla	r3, r1, r3, r2
 8012e4e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012e52:	f04f 0901 	mov.w	r9, #1
 8012e56:	9307      	str	r3, [sp, #28]
 8012e58:	fa09 f308 	lsl.w	r3, r9, r8
 8012e5c:	3b01      	subs	r3, #1
 8012e5e:	b2db      	uxtb	r3, r3
 8012e60:	45c8      	cmp	r8, r9
 8012e62:	930f      	str	r3, [sp, #60]	; 0x3c
 8012e64:	f000 80df 	beq.w	8013026 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
 8012e68:	f1b8 0f02 	cmp.w	r8, #2
 8012e6c:	f000 8153 	beq.w	8013116 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3da>
 8012e70:	f1b8 0f04 	cmp.w	r8, #4
 8012e74:	f000 8146 	beq.w	8013104 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c8>
 8012e78:	b906      	cbnz	r6, 8012e7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 8012e7a:	b175      	cbz	r5, 8012e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8012e7c:	fb17 6305 	smlabb	r3, r7, r5, r6
 8012e80:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8012e82:	fb13 f308 	smulbb	r3, r3, r8
 8012e86:	b29b      	uxth	r3, r3
 8012e88:	ebaa 0a05 	sub.w	sl, sl, r5
 8012e8c:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8012e90:	9226      	str	r2, [sp, #152]	; 0x98
 8012e92:	fa1f fa8a 	uxth.w	sl, sl
 8012e96:	f003 0507 	and.w	r5, r3, #7
 8012e9a:	4659      	mov	r1, fp
 8012e9c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8012e9e:	f7ff feed 	bl	8012c7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8012ea2:	4659      	mov	r1, fp
 8012ea4:	9010      	str	r0, [sp, #64]	; 0x40
 8012ea6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8012ea8:	f7ff ff18 	bl	8012cdc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8012eac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012eae:	9a06      	ldr	r2, [sp, #24]
 8012eb0:	1a9a      	subs	r2, r3, r2
 8012eb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012eb4:	1ba4      	subs	r4, r4, r6
 8012eb6:	1b1c      	subs	r4, r3, r4
 8012eb8:	9b08      	ldr	r3, [sp, #32]
 8012eba:	4592      	cmp	sl, r2
 8012ebc:	bfa8      	it	ge
 8012ebe:	4692      	movge	sl, r2
 8012ec0:	429c      	cmp	r4, r3
 8012ec2:	bfd4      	ite	le
 8012ec4:	ebc6 0604 	rsble	r6, r6, r4
 8012ec8:	ebc6 0603 	rsbgt	r6, r6, r3
 8012ecc:	1bbf      	subs	r7, r7, r6
 8012ece:	fb08 f307 	mul.w	r3, r8, r7
 8012ed2:	930b      	str	r3, [sp, #44]	; 0x2c
 8012ed4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012ed6:	781a      	ldrb	r2, [r3, #0]
 8012ed8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012eda:	1219      	asrs	r1, r3, #8
 8012edc:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8012ee0:	930c      	str	r3, [sp, #48]	; 0x30
 8012ee2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012ee4:	f3c3 01cc 	ubfx	r1, r3, #3, #13
 8012ee8:	f001 03fc 	and.w	r3, r1, #252	; 0xfc
 8012eec:	930d      	str	r3, [sp, #52]	; 0x34
 8012eee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012ef0:	00d9      	lsls	r1, r3, #3
 8012ef2:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8012ef6:	930e      	str	r3, [sp, #56]	; 0x38
 8012ef8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012efa:	0059      	lsls	r1, r3, #1
 8012efc:	fb03 0016 	mls	r0, r3, r6, r0
 8012f00:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8012f04:	434b      	muls	r3, r1
 8012f06:	9106      	str	r1, [sp, #24]
 8012f08:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8012f0a:	412a      	asrs	r2, r5
 8012f0c:	b289      	uxth	r1, r1
 8012f0e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8012f12:	b2d2      	uxtb	r2, r2
 8012f14:	9110      	str	r1, [sp, #64]	; 0x40
 8012f16:	9311      	str	r3, [sp, #68]	; 0x44
 8012f18:	f1ba 0f00 	cmp.w	sl, #0
 8012f1c:	f340 80e4 	ble.w	80130e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8012f20:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8012f24:	46b6      	mov	lr, r6
 8012f26:	f1be 0f00 	cmp.w	lr, #0
 8012f2a:	f340 80c9 	ble.w	80130c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>
 8012f2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012f30:	4013      	ands	r3, r2
 8012f32:	d009      	beq.n	8012f48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20c>
 8012f34:	fb13 f309 	smulbb	r3, r3, r9
 8012f38:	2bfe      	cmp	r3, #254	; 0xfe
 8012f3a:	dd77      	ble.n	801302c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8012f3c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012f3e:	29ff      	cmp	r1, #255	; 0xff
 8012f40:	d174      	bne.n	801302c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8012f42:	9810      	ldr	r0, [sp, #64]	; 0x40
 8012f44:	f8ac 0000 	strh.w	r0, [ip]
 8012f48:	4445      	add	r5, r8
 8012f4a:	b2ad      	uxth	r5, r5
 8012f4c:	2d07      	cmp	r5, #7
 8012f4e:	bf81      	itttt	hi
 8012f50:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8012f52:	785a      	ldrbhi	r2, [r3, #1]
 8012f54:	3301      	addhi	r3, #1
 8012f56:	9326      	strhi	r3, [sp, #152]	; 0x98
 8012f58:	9b06      	ldr	r3, [sp, #24]
 8012f5a:	bf9a      	itte	ls
 8012f5c:	fa42 f208 	asrls.w	r2, r2, r8
 8012f60:	b2d2      	uxtbls	r2, r2
 8012f62:	2500      	movhi	r5, #0
 8012f64:	449c      	add	ip, r3
 8012f66:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012f6a:	e7dc      	b.n	8012f26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
 8012f6c:	441c      	add	r4, r3
 8012f6e:	b224      	sxth	r4, r4
 8012f70:	e71e      	b.n	8012db0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8012f72:	f1bb 0f01 	cmp.w	fp, #1
 8012f76:	f47f af59 	bne.w	8012e2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012f7a:	f1b9 0f01 	cmp.w	r9, #1
 8012f7e:	f47f af55 	bne.w	8012e2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012f82:	f8df 9134 	ldr.w	r9, [pc, #308]	; 80130b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8012f86:	f8d9 0000 	ldr.w	r0, [r9]
 8012f8a:	6803      	ldr	r3, [r0, #0]
 8012f8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012f8e:	4798      	blx	r3
 8012f90:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8012f94:	464a      	mov	r2, r9
 8012f96:	d006      	beq.n	8012fa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8012f98:	f1b8 0f04 	cmp.w	r8, #4
 8012f9c:	d13f      	bne.n	801301e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8012f9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012fa0:	3300      	adds	r3, #0
 8012fa2:	bf18      	it	ne
 8012fa4:	2301      	movne	r3, #1
 8012fa6:	05c0      	lsls	r0, r0, #23
 8012fa8:	f140 80a7 	bpl.w	80130fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8012fac:	f1b8 0f08 	cmp.w	r8, #8
 8012fb0:	f040 80a3 	bne.w	80130fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8012fb4:	2b00      	cmp	r3, #0
 8012fb6:	bf0c      	ite	eq
 8012fb8:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8012fbc:	2180      	movne	r1, #128	; 0x80
 8012fbe:	2e00      	cmp	r6, #0
 8012fc0:	f47f af34 	bne.w	8012e2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012fc4:	2d00      	cmp	r5, #0
 8012fc6:	f47f af31 	bne.w	8012e2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012fca:	9b08      	ldr	r3, [sp, #32]
 8012fcc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8012fce:	18e3      	adds	r3, r4, r3
 8012fd0:	4283      	cmp	r3, r0
 8012fd2:	f73f af2b 	bgt.w	8012e2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012fd6:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
 8012fda:	4403      	add	r3, r0
 8012fdc:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012fde:	4283      	cmp	r3, r0
 8012fe0:	f73f af24 	bgt.w	8012e2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012fe4:	6810      	ldr	r0, [r2, #0]
 8012fe6:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8012fea:	6804      	ldr	r4, [r0, #0]
 8012fec:	9105      	str	r1, [sp, #20]
 8012fee:	f1b8 0f08 	cmp.w	r8, #8
 8012ff2:	bf18      	it	ne
 8012ff4:	3701      	addne	r7, #1
 8012ff6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012ff8:	9104      	str	r1, [sp, #16]
 8012ffa:	bf18      	it	ne
 8012ffc:	f027 0701 	bicne.w	r7, r7, #1
 8013000:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013002:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8013006:	bf18      	it	ne
 8013008:	b2bf      	uxthne	r7, r7
 801300a:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801300e:	e9cd 7a00 	strd	r7, sl, [sp]
 8013012:	9926      	ldr	r1, [sp, #152]	; 0x98
 8013014:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8013016:	47a0      	blx	r4
 8013018:	b017      	add	sp, #92	; 0x5c
 801301a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801301e:	2300      	movs	r3, #0
 8013020:	e7c1      	b.n	8012fa6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8013022:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013024:	e70b      	b.n	8012e3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8013026:	f04f 09ff 	mov.w	r9, #255	; 0xff
 801302a:	e725      	b.n	8012e78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801302c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801302e:	f8bc 4000 	ldrh.w	r4, [ip]
 8013032:	fb11 f303 	smulbb	r3, r1, r3
 8013036:	b29b      	uxth	r3, r3
 8013038:	1c59      	adds	r1, r3, #1
 801303a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801303e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8013042:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013044:	b29f      	uxth	r7, r3
 8013046:	1220      	asrs	r0, r4, #8
 8013048:	43db      	mvns	r3, r3
 801304a:	b2db      	uxtb	r3, r3
 801304c:	fb11 f107 	smulbb	r1, r1, r7
 8013050:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013054:	fb00 1003 	mla	r0, r0, r3, r1
 8013058:	b281      	uxth	r1, r0
 801305a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801305c:	9108      	str	r1, [sp, #32]
 801305e:	fb17 fb00 	smulbb	fp, r7, r0
 8013062:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013064:	10e1      	asrs	r1, r4, #3
 8013066:	00e4      	lsls	r4, r4, #3
 8013068:	fb17 f700 	smulbb	r7, r7, r0
 801306c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013070:	b2e4      	uxtb	r4, r4
 8013072:	fb01 b103 	mla	r1, r1, r3, fp
 8013076:	fb04 7703 	mla	r7, r4, r3, r7
 801307a:	9b08      	ldr	r3, [sp, #32]
 801307c:	9808      	ldr	r0, [sp, #32]
 801307e:	b2bf      	uxth	r7, r7
 8013080:	3301      	adds	r3, #1
 8013082:	f107 0b01 	add.w	fp, r7, #1
 8013086:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801308a:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 801308e:	b289      	uxth	r1, r1
 8013090:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8013094:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013098:	ea40 000b 	orr.w	r0, r0, fp
 801309c:	f101 0b01 	add.w	fp, r1, #1
 80130a0:	eb0b 2b11 	add.w	fp, fp, r1, lsr #8
 80130a4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80130a8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80130ac:	ea40 000b 	orr.w	r0, r0, fp
 80130b0:	e748      	b.n	8012f44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 80130b2:	bf00      	nop
 80130b4:	200014b0 	.word	0x200014b0
 80130b8:	200014b8 	.word	0x200014b8
 80130bc:	200014b2 	.word	0x200014b2
 80130c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80130c2:	b153      	cbz	r3, 80130da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 80130c4:	441d      	add	r5, r3
 80130c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80130c8:	b2ad      	uxth	r5, r5
 80130ca:	eb03 03d5 	add.w	r3, r3, r5, lsr #3
 80130ce:	f005 0507 	and.w	r5, r5, #7
 80130d2:	781a      	ldrb	r2, [r3, #0]
 80130d4:	9326      	str	r3, [sp, #152]	; 0x98
 80130d6:	412a      	asrs	r2, r5
 80130d8:	b2d2      	uxtb	r2, r2
 80130da:	9b07      	ldr	r3, [sp, #28]
 80130dc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80130de:	440b      	add	r3, r1
 80130e0:	9307      	str	r3, [sp, #28]
 80130e2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80130e6:	e717      	b.n	8012f18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1dc>
 80130e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80130ea:	2b00      	cmp	r3, #0
 80130ec:	d194      	bne.n	8013018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80130ee:	4b0b      	ldr	r3, [pc, #44]	; (801311c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>)
 80130f0:	6818      	ldr	r0, [r3, #0]
 80130f2:	6803      	ldr	r3, [r0, #0]
 80130f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80130f6:	4798      	blx	r3
 80130f8:	e78e      	b.n	8013018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80130fa:	2b00      	cmp	r3, #0
 80130fc:	f43f ae96 	beq.w	8012e2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013100:	2180      	movs	r1, #128	; 0x80
 8013102:	e75c      	b.n	8012fbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x282>
 8013104:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013106:	b11b      	cbz	r3, 8013110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8013108:	07fb      	lsls	r3, r7, #31
 801310a:	d501      	bpl.n	8013110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 801310c:	3701      	adds	r7, #1
 801310e:	b2bf      	uxth	r7, r7
 8013110:	f04f 0911 	mov.w	r9, #17
 8013114:	e6b0      	b.n	8012e78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8013116:	f04f 0955 	mov.w	r9, #85	; 0x55
 801311a:	e6ad      	b.n	8012e78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801311c:	200014b8 	.word	0x200014b8

08013120 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8013120:	b538      	push	{r3, r4, r5, lr}
 8013122:	4c15      	ldr	r4, [pc, #84]	; (8013178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8013124:	7823      	ldrb	r3, [r4, #0]
 8013126:	f3bf 8f5b 	dmb	ish
 801312a:	07da      	lsls	r2, r3, #31
 801312c:	4605      	mov	r5, r0
 801312e:	d40b      	bmi.n	8013148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013130:	4620      	mov	r0, r4
 8013132:	f007 fbc6 	bl	801a8c2 <__cxa_guard_acquire>
 8013136:	b138      	cbz	r0, 8013148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013138:	4620      	mov	r0, r4
 801313a:	f007 fbce 	bl	801a8da <__cxa_guard_release>
 801313e:	4a0f      	ldr	r2, [pc, #60]	; (801317c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013140:	490f      	ldr	r1, [pc, #60]	; (8013180 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8013142:	4810      	ldr	r0, [pc, #64]	; (8013184 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8013144:	f007 fbb6 	bl	801a8b4 <__aeabi_atexit>
 8013148:	4c0f      	ldr	r4, [pc, #60]	; (8013188 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801314a:	7823      	ldrb	r3, [r4, #0]
 801314c:	f3bf 8f5b 	dmb	ish
 8013150:	07db      	lsls	r3, r3, #31
 8013152:	d40b      	bmi.n	801316c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013154:	4620      	mov	r0, r4
 8013156:	f007 fbb4 	bl	801a8c2 <__cxa_guard_acquire>
 801315a:	b138      	cbz	r0, 801316c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801315c:	4620      	mov	r0, r4
 801315e:	f007 fbbc 	bl	801a8da <__cxa_guard_release>
 8013162:	4a06      	ldr	r2, [pc, #24]	; (801317c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013164:	4909      	ldr	r1, [pc, #36]	; (801318c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8013166:	480a      	ldr	r0, [pc, #40]	; (8013190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013168:	f007 fba4 	bl	801a8b4 <__aeabi_atexit>
 801316c:	4b05      	ldr	r3, [pc, #20]	; (8013184 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801316e:	612b      	str	r3, [r5, #16]
 8013170:	4b07      	ldr	r3, [pc, #28]	; (8013190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013172:	616b      	str	r3, [r5, #20]
 8013174:	bd38      	pop	{r3, r4, r5, pc}
 8013176:	bf00      	nop
 8013178:	200015a4 	.word	0x200015a4
 801317c:	20000000 	.word	0x20000000
 8013180:	080117db 	.word	0x080117db
 8013184:	20000068 	.word	0x20000068
 8013188:	200015a8 	.word	0x200015a8
 801318c:	080117d9 	.word	0x080117d9
 8013190:	2000006c 	.word	0x2000006c

08013194 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013194:	b538      	push	{r3, r4, r5, lr}
 8013196:	4c15      	ldr	r4, [pc, #84]	; (80131ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013198:	7823      	ldrb	r3, [r4, #0]
 801319a:	f3bf 8f5b 	dmb	ish
 801319e:	07da      	lsls	r2, r3, #31
 80131a0:	4605      	mov	r5, r0
 80131a2:	d40b      	bmi.n	80131bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80131a4:	4620      	mov	r0, r4
 80131a6:	f007 fb8c 	bl	801a8c2 <__cxa_guard_acquire>
 80131aa:	b138      	cbz	r0, 80131bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80131ac:	4620      	mov	r0, r4
 80131ae:	f007 fb94 	bl	801a8da <__cxa_guard_release>
 80131b2:	4a0f      	ldr	r2, [pc, #60]	; (80131f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80131b4:	490f      	ldr	r1, [pc, #60]	; (80131f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80131b6:	4810      	ldr	r0, [pc, #64]	; (80131f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80131b8:	f007 fb7c 	bl	801a8b4 <__aeabi_atexit>
 80131bc:	4c0f      	ldr	r4, [pc, #60]	; (80131fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80131be:	7823      	ldrb	r3, [r4, #0]
 80131c0:	f3bf 8f5b 	dmb	ish
 80131c4:	07db      	lsls	r3, r3, #31
 80131c6:	d40b      	bmi.n	80131e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80131c8:	4620      	mov	r0, r4
 80131ca:	f007 fb7a 	bl	801a8c2 <__cxa_guard_acquire>
 80131ce:	b138      	cbz	r0, 80131e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80131d0:	4620      	mov	r0, r4
 80131d2:	f007 fb82 	bl	801a8da <__cxa_guard_release>
 80131d6:	4a06      	ldr	r2, [pc, #24]	; (80131f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80131d8:	4909      	ldr	r1, [pc, #36]	; (8013200 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80131da:	480a      	ldr	r0, [pc, #40]	; (8013204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80131dc:	f007 fb6a 	bl	801a8b4 <__aeabi_atexit>
 80131e0:	4b05      	ldr	r3, [pc, #20]	; (80131f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80131e2:	60ab      	str	r3, [r5, #8]
 80131e4:	4b07      	ldr	r3, [pc, #28]	; (8013204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80131e6:	60eb      	str	r3, [r5, #12]
 80131e8:	bd38      	pop	{r3, r4, r5, pc}
 80131ea:	bf00      	nop
 80131ec:	2000157c 	.word	0x2000157c
 80131f0:	20000000 	.word	0x20000000
 80131f4:	080117df 	.word	0x080117df
 80131f8:	20000040 	.word	0x20000040
 80131fc:	20001580 	.word	0x20001580
 8013200:	080117dd 	.word	0x080117dd
 8013204:	20000044 	.word	0x20000044

08013208 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013208:	b510      	push	{r4, lr}
 801320a:	4604      	mov	r4, r0
 801320c:	f7ff ff88 	bl	8013120 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8013210:	4620      	mov	r0, r4
 8013212:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013216:	f7ff bfbd 	b.w	8013194 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801321c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801321c:	b538      	push	{r3, r4, r5, lr}
 801321e:	4c15      	ldr	r4, [pc, #84]	; (8013274 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8013220:	7823      	ldrb	r3, [r4, #0]
 8013222:	f3bf 8f5b 	dmb	ish
 8013226:	07da      	lsls	r2, r3, #31
 8013228:	4605      	mov	r5, r0
 801322a:	d40b      	bmi.n	8013244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801322c:	4620      	mov	r0, r4
 801322e:	f007 fb48 	bl	801a8c2 <__cxa_guard_acquire>
 8013232:	b138      	cbz	r0, 8013244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013234:	4620      	mov	r0, r4
 8013236:	f007 fb50 	bl	801a8da <__cxa_guard_release>
 801323a:	4a0f      	ldr	r2, [pc, #60]	; (8013278 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801323c:	490f      	ldr	r1, [pc, #60]	; (801327c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801323e:	4810      	ldr	r0, [pc, #64]	; (8013280 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013240:	f007 fb38 	bl	801a8b4 <__aeabi_atexit>
 8013244:	4c0f      	ldr	r4, [pc, #60]	; (8013284 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8013246:	7823      	ldrb	r3, [r4, #0]
 8013248:	f3bf 8f5b 	dmb	ish
 801324c:	07db      	lsls	r3, r3, #31
 801324e:	d40b      	bmi.n	8013268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013250:	4620      	mov	r0, r4
 8013252:	f007 fb36 	bl	801a8c2 <__cxa_guard_acquire>
 8013256:	b138      	cbz	r0, 8013268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013258:	4620      	mov	r0, r4
 801325a:	f007 fb3e 	bl	801a8da <__cxa_guard_release>
 801325e:	4a06      	ldr	r2, [pc, #24]	; (8013278 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013260:	4909      	ldr	r1, [pc, #36]	; (8013288 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8013262:	480a      	ldr	r0, [pc, #40]	; (801328c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013264:	f007 fb26 	bl	801a8b4 <__aeabi_atexit>
 8013268:	4b05      	ldr	r3, [pc, #20]	; (8013280 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801326a:	622b      	str	r3, [r5, #32]
 801326c:	4b07      	ldr	r3, [pc, #28]	; (801328c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801326e:	626b      	str	r3, [r5, #36]	; 0x24
 8013270:	bd38      	pop	{r3, r4, r5, pc}
 8013272:	bf00      	nop
 8013274:	200015ac 	.word	0x200015ac
 8013278:	20000000 	.word	0x20000000
 801327c:	080117d3 	.word	0x080117d3
 8013280:	20000070 	.word	0x20000070
 8013284:	200015b0 	.word	0x200015b0
 8013288:	080117d1 	.word	0x080117d1
 801328c:	20000074 	.word	0x20000074

08013290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013290:	b538      	push	{r3, r4, r5, lr}
 8013292:	4c15      	ldr	r4, [pc, #84]	; (80132e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013294:	7823      	ldrb	r3, [r4, #0]
 8013296:	f3bf 8f5b 	dmb	ish
 801329a:	07da      	lsls	r2, r3, #31
 801329c:	4605      	mov	r5, r0
 801329e:	d40b      	bmi.n	80132b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80132a0:	4620      	mov	r0, r4
 80132a2:	f007 fb0e 	bl	801a8c2 <__cxa_guard_acquire>
 80132a6:	b138      	cbz	r0, 80132b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80132a8:	4620      	mov	r0, r4
 80132aa:	f007 fb16 	bl	801a8da <__cxa_guard_release>
 80132ae:	4a0f      	ldr	r2, [pc, #60]	; (80132ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80132b0:	490f      	ldr	r1, [pc, #60]	; (80132f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80132b2:	4810      	ldr	r0, [pc, #64]	; (80132f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80132b4:	f007 fafe 	bl	801a8b4 <__aeabi_atexit>
 80132b8:	4c0f      	ldr	r4, [pc, #60]	; (80132f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80132ba:	7823      	ldrb	r3, [r4, #0]
 80132bc:	f3bf 8f5b 	dmb	ish
 80132c0:	07db      	lsls	r3, r3, #31
 80132c2:	d40b      	bmi.n	80132dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80132c4:	4620      	mov	r0, r4
 80132c6:	f007 fafc 	bl	801a8c2 <__cxa_guard_acquire>
 80132ca:	b138      	cbz	r0, 80132dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80132cc:	4620      	mov	r0, r4
 80132ce:	f007 fb04 	bl	801a8da <__cxa_guard_release>
 80132d2:	4a06      	ldr	r2, [pc, #24]	; (80132ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80132d4:	4909      	ldr	r1, [pc, #36]	; (80132fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80132d6:	480a      	ldr	r0, [pc, #40]	; (8013300 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80132d8:	f007 faec 	bl	801a8b4 <__aeabi_atexit>
 80132dc:	4b05      	ldr	r3, [pc, #20]	; (80132f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80132de:	61ab      	str	r3, [r5, #24]
 80132e0:	4b07      	ldr	r3, [pc, #28]	; (8013300 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80132e2:	61eb      	str	r3, [r5, #28]
 80132e4:	bd38      	pop	{r3, r4, r5, pc}
 80132e6:	bf00      	nop
 80132e8:	20001584 	.word	0x20001584
 80132ec:	20000000 	.word	0x20000000
 80132f0:	080117d7 	.word	0x080117d7
 80132f4:	20000048 	.word	0x20000048
 80132f8:	20001588 	.word	0x20001588
 80132fc:	080117d5 	.word	0x080117d5
 8013300:	2000004c 	.word	0x2000004c

08013304 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8013304:	b510      	push	{r4, lr}
 8013306:	4604      	mov	r4, r0
 8013308:	f7ff ff88 	bl	801321c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801330c:	4620      	mov	r0, r4
 801330e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013312:	f7ff bfbd 	b.w	8013290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08013318 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8013318:	b538      	push	{r3, r4, r5, lr}
 801331a:	4c15      	ldr	r4, [pc, #84]	; (8013370 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801331c:	7823      	ldrb	r3, [r4, #0]
 801331e:	f3bf 8f5b 	dmb	ish
 8013322:	07da      	lsls	r2, r3, #31
 8013324:	4605      	mov	r5, r0
 8013326:	d40b      	bmi.n	8013340 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013328:	4620      	mov	r0, r4
 801332a:	f007 faca 	bl	801a8c2 <__cxa_guard_acquire>
 801332e:	b138      	cbz	r0, 8013340 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013330:	4620      	mov	r0, r4
 8013332:	f007 fad2 	bl	801a8da <__cxa_guard_release>
 8013336:	4a0f      	ldr	r2, [pc, #60]	; (8013374 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013338:	490f      	ldr	r1, [pc, #60]	; (8013378 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801333a:	4810      	ldr	r0, [pc, #64]	; (801337c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801333c:	f007 faba 	bl	801a8b4 <__aeabi_atexit>
 8013340:	4c0f      	ldr	r4, [pc, #60]	; (8013380 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8013342:	7823      	ldrb	r3, [r4, #0]
 8013344:	f3bf 8f5b 	dmb	ish
 8013348:	07db      	lsls	r3, r3, #31
 801334a:	d40b      	bmi.n	8013364 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801334c:	4620      	mov	r0, r4
 801334e:	f007 fab8 	bl	801a8c2 <__cxa_guard_acquire>
 8013352:	b138      	cbz	r0, 8013364 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013354:	4620      	mov	r0, r4
 8013356:	f007 fac0 	bl	801a8da <__cxa_guard_release>
 801335a:	4a06      	ldr	r2, [pc, #24]	; (8013374 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801335c:	4909      	ldr	r1, [pc, #36]	; (8013384 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801335e:	480a      	ldr	r0, [pc, #40]	; (8013388 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013360:	f007 faa8 	bl	801a8b4 <__aeabi_atexit>
 8013364:	4b05      	ldr	r3, [pc, #20]	; (801337c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013366:	632b      	str	r3, [r5, #48]	; 0x30
 8013368:	4b07      	ldr	r3, [pc, #28]	; (8013388 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801336a:	636b      	str	r3, [r5, #52]	; 0x34
 801336c:	bd38      	pop	{r3, r4, r5, pc}
 801336e:	bf00      	nop
 8013370:	200015bc 	.word	0x200015bc
 8013374:	20000000 	.word	0x20000000
 8013378:	080117cb 	.word	0x080117cb
 801337c:	20000080 	.word	0x20000080
 8013380:	200015c0 	.word	0x200015c0
 8013384:	080117c9 	.word	0x080117c9
 8013388:	20000084 	.word	0x20000084

0801338c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801338c:	b538      	push	{r3, r4, r5, lr}
 801338e:	4c15      	ldr	r4, [pc, #84]	; (80133e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013390:	7823      	ldrb	r3, [r4, #0]
 8013392:	f3bf 8f5b 	dmb	ish
 8013396:	07da      	lsls	r2, r3, #31
 8013398:	4605      	mov	r5, r0
 801339a:	d40b      	bmi.n	80133b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801339c:	4620      	mov	r0, r4
 801339e:	f007 fa90 	bl	801a8c2 <__cxa_guard_acquire>
 80133a2:	b138      	cbz	r0, 80133b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80133a4:	4620      	mov	r0, r4
 80133a6:	f007 fa98 	bl	801a8da <__cxa_guard_release>
 80133aa:	4a0f      	ldr	r2, [pc, #60]	; (80133e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80133ac:	490f      	ldr	r1, [pc, #60]	; (80133ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80133ae:	4810      	ldr	r0, [pc, #64]	; (80133f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80133b0:	f007 fa80 	bl	801a8b4 <__aeabi_atexit>
 80133b4:	4c0f      	ldr	r4, [pc, #60]	; (80133f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80133b6:	7823      	ldrb	r3, [r4, #0]
 80133b8:	f3bf 8f5b 	dmb	ish
 80133bc:	07db      	lsls	r3, r3, #31
 80133be:	d40b      	bmi.n	80133d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80133c0:	4620      	mov	r0, r4
 80133c2:	f007 fa7e 	bl	801a8c2 <__cxa_guard_acquire>
 80133c6:	b138      	cbz	r0, 80133d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80133c8:	4620      	mov	r0, r4
 80133ca:	f007 fa86 	bl	801a8da <__cxa_guard_release>
 80133ce:	4a06      	ldr	r2, [pc, #24]	; (80133e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80133d0:	4909      	ldr	r1, [pc, #36]	; (80133f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80133d2:	480a      	ldr	r0, [pc, #40]	; (80133fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80133d4:	f007 fa6e 	bl	801a8b4 <__aeabi_atexit>
 80133d8:	4b05      	ldr	r3, [pc, #20]	; (80133f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80133da:	62ab      	str	r3, [r5, #40]	; 0x28
 80133dc:	4b07      	ldr	r3, [pc, #28]	; (80133fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80133de:	62eb      	str	r3, [r5, #44]	; 0x2c
 80133e0:	bd38      	pop	{r3, r4, r5, pc}
 80133e2:	bf00      	nop
 80133e4:	2000158c 	.word	0x2000158c
 80133e8:	20000000 	.word	0x20000000
 80133ec:	080117cf 	.word	0x080117cf
 80133f0:	20000050 	.word	0x20000050
 80133f4:	20001590 	.word	0x20001590
 80133f8:	080117cd 	.word	0x080117cd
 80133fc:	20000054 	.word	0x20000054

08013400 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013400:	b510      	push	{r4, lr}
 8013402:	4604      	mov	r4, r0
 8013404:	f7ff ff88 	bl	8013318 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013408:	4620      	mov	r0, r4
 801340a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801340e:	f7ff bfbd 	b.w	801338c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08013414 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8013414:	b538      	push	{r3, r4, r5, lr}
 8013416:	4c15      	ldr	r4, [pc, #84]	; (801346c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8013418:	7823      	ldrb	r3, [r4, #0]
 801341a:	f3bf 8f5b 	dmb	ish
 801341e:	07da      	lsls	r2, r3, #31
 8013420:	4605      	mov	r5, r0
 8013422:	d40b      	bmi.n	801343c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013424:	4620      	mov	r0, r4
 8013426:	f007 fa4c 	bl	801a8c2 <__cxa_guard_acquire>
 801342a:	b138      	cbz	r0, 801343c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801342c:	4620      	mov	r0, r4
 801342e:	f007 fa54 	bl	801a8da <__cxa_guard_release>
 8013432:	4a0f      	ldr	r2, [pc, #60]	; (8013470 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013434:	490f      	ldr	r1, [pc, #60]	; (8013474 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8013436:	4810      	ldr	r0, [pc, #64]	; (8013478 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013438:	f007 fa3c 	bl	801a8b4 <__aeabi_atexit>
 801343c:	4c0f      	ldr	r4, [pc, #60]	; (801347c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801343e:	7823      	ldrb	r3, [r4, #0]
 8013440:	f3bf 8f5b 	dmb	ish
 8013444:	07db      	lsls	r3, r3, #31
 8013446:	d40b      	bmi.n	8013460 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013448:	4620      	mov	r0, r4
 801344a:	f007 fa3a 	bl	801a8c2 <__cxa_guard_acquire>
 801344e:	b138      	cbz	r0, 8013460 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013450:	4620      	mov	r0, r4
 8013452:	f007 fa42 	bl	801a8da <__cxa_guard_release>
 8013456:	4a06      	ldr	r2, [pc, #24]	; (8013470 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013458:	4909      	ldr	r1, [pc, #36]	; (8013480 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801345a:	480a      	ldr	r0, [pc, #40]	; (8013484 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801345c:	f007 fa2a 	bl	801a8b4 <__aeabi_atexit>
 8013460:	4b05      	ldr	r3, [pc, #20]	; (8013478 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013462:	652b      	str	r3, [r5, #80]	; 0x50
 8013464:	4b07      	ldr	r3, [pc, #28]	; (8013484 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013466:	656b      	str	r3, [r5, #84]	; 0x54
 8013468:	bd38      	pop	{r3, r4, r5, pc}
 801346a:	bf00      	nop
 801346c:	200015c4 	.word	0x200015c4
 8013470:	20000000 	.word	0x20000000
 8013474:	080117bb 	.word	0x080117bb
 8013478:	20000088 	.word	0x20000088
 801347c:	200015c8 	.word	0x200015c8
 8013480:	080117b9 	.word	0x080117b9
 8013484:	2000008c 	.word	0x2000008c

08013488 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013488:	b538      	push	{r3, r4, r5, lr}
 801348a:	4c15      	ldr	r4, [pc, #84]	; (80134e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801348c:	7823      	ldrb	r3, [r4, #0]
 801348e:	f3bf 8f5b 	dmb	ish
 8013492:	07da      	lsls	r2, r3, #31
 8013494:	4605      	mov	r5, r0
 8013496:	d40b      	bmi.n	80134b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013498:	4620      	mov	r0, r4
 801349a:	f007 fa12 	bl	801a8c2 <__cxa_guard_acquire>
 801349e:	b138      	cbz	r0, 80134b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80134a0:	4620      	mov	r0, r4
 80134a2:	f007 fa1a 	bl	801a8da <__cxa_guard_release>
 80134a6:	4a0f      	ldr	r2, [pc, #60]	; (80134e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80134a8:	490f      	ldr	r1, [pc, #60]	; (80134e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80134aa:	4810      	ldr	r0, [pc, #64]	; (80134ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80134ac:	f007 fa02 	bl	801a8b4 <__aeabi_atexit>
 80134b0:	4c0f      	ldr	r4, [pc, #60]	; (80134f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80134b2:	7823      	ldrb	r3, [r4, #0]
 80134b4:	f3bf 8f5b 	dmb	ish
 80134b8:	07db      	lsls	r3, r3, #31
 80134ba:	d40b      	bmi.n	80134d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80134bc:	4620      	mov	r0, r4
 80134be:	f007 fa00 	bl	801a8c2 <__cxa_guard_acquire>
 80134c2:	b138      	cbz	r0, 80134d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80134c4:	4620      	mov	r0, r4
 80134c6:	f007 fa08 	bl	801a8da <__cxa_guard_release>
 80134ca:	4a06      	ldr	r2, [pc, #24]	; (80134e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80134cc:	4909      	ldr	r1, [pc, #36]	; (80134f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80134ce:	480a      	ldr	r0, [pc, #40]	; (80134f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80134d0:	f007 f9f0 	bl	801a8b4 <__aeabi_atexit>
 80134d4:	4b05      	ldr	r3, [pc, #20]	; (80134ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80134d6:	64ab      	str	r3, [r5, #72]	; 0x48
 80134d8:	4b07      	ldr	r3, [pc, #28]	; (80134f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80134da:	64eb      	str	r3, [r5, #76]	; 0x4c
 80134dc:	bd38      	pop	{r3, r4, r5, pc}
 80134de:	bf00      	nop
 80134e0:	200015cc 	.word	0x200015cc
 80134e4:	20000000 	.word	0x20000000
 80134e8:	080117bf 	.word	0x080117bf
 80134ec:	20000090 	.word	0x20000090
 80134f0:	200015d0 	.word	0x200015d0
 80134f4:	080117bd 	.word	0x080117bd
 80134f8:	20000094 	.word	0x20000094

080134fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80134fc:	b538      	push	{r3, r4, r5, lr}
 80134fe:	4c15      	ldr	r4, [pc, #84]	; (8013554 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8013500:	7823      	ldrb	r3, [r4, #0]
 8013502:	f3bf 8f5b 	dmb	ish
 8013506:	07da      	lsls	r2, r3, #31
 8013508:	4605      	mov	r5, r0
 801350a:	d40b      	bmi.n	8013524 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801350c:	4620      	mov	r0, r4
 801350e:	f007 f9d8 	bl	801a8c2 <__cxa_guard_acquire>
 8013512:	b138      	cbz	r0, 8013524 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013514:	4620      	mov	r0, r4
 8013516:	f007 f9e0 	bl	801a8da <__cxa_guard_release>
 801351a:	4a0f      	ldr	r2, [pc, #60]	; (8013558 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801351c:	490f      	ldr	r1, [pc, #60]	; (801355c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801351e:	4810      	ldr	r0, [pc, #64]	; (8013560 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013520:	f007 f9c8 	bl	801a8b4 <__aeabi_atexit>
 8013524:	4c0f      	ldr	r4, [pc, #60]	; (8013564 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8013526:	7823      	ldrb	r3, [r4, #0]
 8013528:	f3bf 8f5b 	dmb	ish
 801352c:	07db      	lsls	r3, r3, #31
 801352e:	d40b      	bmi.n	8013548 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013530:	4620      	mov	r0, r4
 8013532:	f007 f9c6 	bl	801a8c2 <__cxa_guard_acquire>
 8013536:	b138      	cbz	r0, 8013548 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013538:	4620      	mov	r0, r4
 801353a:	f007 f9ce 	bl	801a8da <__cxa_guard_release>
 801353e:	4a06      	ldr	r2, [pc, #24]	; (8013558 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013540:	4909      	ldr	r1, [pc, #36]	; (8013568 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8013542:	480a      	ldr	r0, [pc, #40]	; (801356c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013544:	f007 f9b6 	bl	801a8b4 <__aeabi_atexit>
 8013548:	4b05      	ldr	r3, [pc, #20]	; (8013560 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801354a:	642b      	str	r3, [r5, #64]	; 0x40
 801354c:	4b07      	ldr	r3, [pc, #28]	; (801356c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801354e:	646b      	str	r3, [r5, #68]	; 0x44
 8013550:	bd38      	pop	{r3, r4, r5, pc}
 8013552:	bf00      	nop
 8013554:	20001594 	.word	0x20001594
 8013558:	20000000 	.word	0x20000000
 801355c:	080117c3 	.word	0x080117c3
 8013560:	20000058 	.word	0x20000058
 8013564:	20001598 	.word	0x20001598
 8013568:	080117c1 	.word	0x080117c1
 801356c:	2000005c 	.word	0x2000005c

08013570 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8013570:	b538      	push	{r3, r4, r5, lr}
 8013572:	4c15      	ldr	r4, [pc, #84]	; (80135c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8013574:	7823      	ldrb	r3, [r4, #0]
 8013576:	f3bf 8f5b 	dmb	ish
 801357a:	07da      	lsls	r2, r3, #31
 801357c:	4605      	mov	r5, r0
 801357e:	d40b      	bmi.n	8013598 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013580:	4620      	mov	r0, r4
 8013582:	f007 f99e 	bl	801a8c2 <__cxa_guard_acquire>
 8013586:	b138      	cbz	r0, 8013598 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013588:	4620      	mov	r0, r4
 801358a:	f007 f9a6 	bl	801a8da <__cxa_guard_release>
 801358e:	4a0f      	ldr	r2, [pc, #60]	; (80135cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013590:	490f      	ldr	r1, [pc, #60]	; (80135d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8013592:	4810      	ldr	r0, [pc, #64]	; (80135d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013594:	f007 f98e 	bl	801a8b4 <__aeabi_atexit>
 8013598:	4c0f      	ldr	r4, [pc, #60]	; (80135d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801359a:	7823      	ldrb	r3, [r4, #0]
 801359c:	f3bf 8f5b 	dmb	ish
 80135a0:	07db      	lsls	r3, r3, #31
 80135a2:	d40b      	bmi.n	80135bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80135a4:	4620      	mov	r0, r4
 80135a6:	f007 f98c 	bl	801a8c2 <__cxa_guard_acquire>
 80135aa:	b138      	cbz	r0, 80135bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80135ac:	4620      	mov	r0, r4
 80135ae:	f007 f994 	bl	801a8da <__cxa_guard_release>
 80135b2:	4a06      	ldr	r2, [pc, #24]	; (80135cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80135b4:	4909      	ldr	r1, [pc, #36]	; (80135dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80135b6:	480a      	ldr	r0, [pc, #40]	; (80135e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80135b8:	f007 f97c 	bl	801a8b4 <__aeabi_atexit>
 80135bc:	4b05      	ldr	r3, [pc, #20]	; (80135d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80135be:	63ab      	str	r3, [r5, #56]	; 0x38
 80135c0:	4b07      	ldr	r3, [pc, #28]	; (80135e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80135c2:	63eb      	str	r3, [r5, #60]	; 0x3c
 80135c4:	bd38      	pop	{r3, r4, r5, pc}
 80135c6:	bf00      	nop
 80135c8:	200015b4 	.word	0x200015b4
 80135cc:	20000000 	.word	0x20000000
 80135d0:	080117c7 	.word	0x080117c7
 80135d4:	20000078 	.word	0x20000078
 80135d8:	200015b8 	.word	0x200015b8
 80135dc:	080117c5 	.word	0x080117c5
 80135e0:	2000007c 	.word	0x2000007c

080135e4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80135e4:	b510      	push	{r4, lr}
 80135e6:	4604      	mov	r4, r0
 80135e8:	f7ff ff14 	bl	8013414 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80135ec:	4620      	mov	r0, r4
 80135ee:	f7ff ff85 	bl	80134fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80135f2:	4620      	mov	r0, r4
 80135f4:	f7ff ff48 	bl	8013488 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80135f8:	4620      	mov	r0, r4
 80135fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80135fe:	f7ff bfb7 	b.w	8013570 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08013604 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8013604:	b538      	push	{r3, r4, r5, lr}
 8013606:	4c15      	ldr	r4, [pc, #84]	; (801365c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8013608:	7823      	ldrb	r3, [r4, #0]
 801360a:	f3bf 8f5b 	dmb	ish
 801360e:	07da      	lsls	r2, r3, #31
 8013610:	4605      	mov	r5, r0
 8013612:	d40b      	bmi.n	801362c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013614:	4620      	mov	r0, r4
 8013616:	f007 f954 	bl	801a8c2 <__cxa_guard_acquire>
 801361a:	b138      	cbz	r0, 801362c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801361c:	4620      	mov	r0, r4
 801361e:	f007 f95c 	bl	801a8da <__cxa_guard_release>
 8013622:	4a0f      	ldr	r2, [pc, #60]	; (8013660 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013624:	490f      	ldr	r1, [pc, #60]	; (8013664 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8013626:	4810      	ldr	r0, [pc, #64]	; (8013668 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013628:	f007 f944 	bl	801a8b4 <__aeabi_atexit>
 801362c:	4c0f      	ldr	r4, [pc, #60]	; (801366c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801362e:	7823      	ldrb	r3, [r4, #0]
 8013630:	f3bf 8f5b 	dmb	ish
 8013634:	07db      	lsls	r3, r3, #31
 8013636:	d40b      	bmi.n	8013650 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013638:	4620      	mov	r0, r4
 801363a:	f007 f942 	bl	801a8c2 <__cxa_guard_acquire>
 801363e:	b138      	cbz	r0, 8013650 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013640:	4620      	mov	r0, r4
 8013642:	f007 f94a 	bl	801a8da <__cxa_guard_release>
 8013646:	4a06      	ldr	r2, [pc, #24]	; (8013660 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013648:	4909      	ldr	r1, [pc, #36]	; (8013670 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801364a:	480a      	ldr	r0, [pc, #40]	; (8013674 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801364c:	f007 f932 	bl	801a8b4 <__aeabi_atexit>
 8013650:	4b05      	ldr	r3, [pc, #20]	; (8013668 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013652:	662b      	str	r3, [r5, #96]	; 0x60
 8013654:	4b07      	ldr	r3, [pc, #28]	; (8013674 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013656:	666b      	str	r3, [r5, #100]	; 0x64
 8013658:	bd38      	pop	{r3, r4, r5, pc}
 801365a:	bf00      	nop
 801365c:	2000159c 	.word	0x2000159c
 8013660:	20000000 	.word	0x20000000
 8013664:	080117b3 	.word	0x080117b3
 8013668:	20000060 	.word	0x20000060
 801366c:	200015a0 	.word	0x200015a0
 8013670:	080117b1 	.word	0x080117b1
 8013674:	20000064 	.word	0x20000064

08013678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8013678:	b538      	push	{r3, r4, r5, lr}
 801367a:	4c15      	ldr	r4, [pc, #84]	; (80136d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801367c:	7823      	ldrb	r3, [r4, #0]
 801367e:	f3bf 8f5b 	dmb	ish
 8013682:	07da      	lsls	r2, r3, #31
 8013684:	4605      	mov	r5, r0
 8013686:	d40b      	bmi.n	80136a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013688:	4620      	mov	r0, r4
 801368a:	f007 f91a 	bl	801a8c2 <__cxa_guard_acquire>
 801368e:	b138      	cbz	r0, 80136a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013690:	4620      	mov	r0, r4
 8013692:	f007 f922 	bl	801a8da <__cxa_guard_release>
 8013696:	4a0f      	ldr	r2, [pc, #60]	; (80136d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013698:	490f      	ldr	r1, [pc, #60]	; (80136d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801369a:	4810      	ldr	r0, [pc, #64]	; (80136dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801369c:	f007 f90a 	bl	801a8b4 <__aeabi_atexit>
 80136a0:	4c0f      	ldr	r4, [pc, #60]	; (80136e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80136a2:	7823      	ldrb	r3, [r4, #0]
 80136a4:	f3bf 8f5b 	dmb	ish
 80136a8:	07db      	lsls	r3, r3, #31
 80136aa:	d40b      	bmi.n	80136c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80136ac:	4620      	mov	r0, r4
 80136ae:	f007 f908 	bl	801a8c2 <__cxa_guard_acquire>
 80136b2:	b138      	cbz	r0, 80136c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80136b4:	4620      	mov	r0, r4
 80136b6:	f007 f910 	bl	801a8da <__cxa_guard_release>
 80136ba:	4a06      	ldr	r2, [pc, #24]	; (80136d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80136bc:	4909      	ldr	r1, [pc, #36]	; (80136e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80136be:	480a      	ldr	r0, [pc, #40]	; (80136e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80136c0:	f007 f8f8 	bl	801a8b4 <__aeabi_atexit>
 80136c4:	4b05      	ldr	r3, [pc, #20]	; (80136dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80136c6:	65ab      	str	r3, [r5, #88]	; 0x58
 80136c8:	4b07      	ldr	r3, [pc, #28]	; (80136e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80136ca:	65eb      	str	r3, [r5, #92]	; 0x5c
 80136cc:	bd38      	pop	{r3, r4, r5, pc}
 80136ce:	bf00      	nop
 80136d0:	20001574 	.word	0x20001574
 80136d4:	20000000 	.word	0x20000000
 80136d8:	080117b7 	.word	0x080117b7
 80136dc:	20000038 	.word	0x20000038
 80136e0:	20001578 	.word	0x20001578
 80136e4:	080117b5 	.word	0x080117b5
 80136e8:	2000003c 	.word	0x2000003c

080136ec <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80136ec:	b510      	push	{r4, lr}
 80136ee:	4604      	mov	r4, r0
 80136f0:	f7ff ff88 	bl	8013604 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80136f4:	4620      	mov	r0, r4
 80136f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136fa:	f7ff bfbd 	b.w	8013678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08013700 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8013700:	b538      	push	{r3, r4, r5, lr}
 8013702:	4c15      	ldr	r4, [pc, #84]	; (8013758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8013704:	7823      	ldrb	r3, [r4, #0]
 8013706:	f3bf 8f5b 	dmb	ish
 801370a:	07da      	lsls	r2, r3, #31
 801370c:	4605      	mov	r5, r0
 801370e:	d40b      	bmi.n	8013728 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8013710:	4620      	mov	r0, r4
 8013712:	f007 f8d6 	bl	801a8c2 <__cxa_guard_acquire>
 8013716:	b138      	cbz	r0, 8013728 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8013718:	4620      	mov	r0, r4
 801371a:	f007 f8de 	bl	801a8da <__cxa_guard_release>
 801371e:	4a0f      	ldr	r2, [pc, #60]	; (801375c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8013720:	490f      	ldr	r1, [pc, #60]	; (8013760 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8013722:	4810      	ldr	r0, [pc, #64]	; (8013764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8013724:	f007 f8c6 	bl	801a8b4 <__aeabi_atexit>
 8013728:	4c0f      	ldr	r4, [pc, #60]	; (8013768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801372a:	7823      	ldrb	r3, [r4, #0]
 801372c:	f3bf 8f5b 	dmb	ish
 8013730:	07db      	lsls	r3, r3, #31
 8013732:	d40b      	bmi.n	801374c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8013734:	4620      	mov	r0, r4
 8013736:	f007 f8c4 	bl	801a8c2 <__cxa_guard_acquire>
 801373a:	b138      	cbz	r0, 801374c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801373c:	4620      	mov	r0, r4
 801373e:	f007 f8cc 	bl	801a8da <__cxa_guard_release>
 8013742:	4a06      	ldr	r2, [pc, #24]	; (801375c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8013744:	4909      	ldr	r1, [pc, #36]	; (801376c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8013746:	480a      	ldr	r0, [pc, #40]	; (8013770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8013748:	f007 f8b4 	bl	801a8b4 <__aeabi_atexit>
 801374c:	4b05      	ldr	r3, [pc, #20]	; (8013764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801374e:	672b      	str	r3, [r5, #112]	; 0x70
 8013750:	4b07      	ldr	r3, [pc, #28]	; (8013770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8013752:	676b      	str	r3, [r5, #116]	; 0x74
 8013754:	bd38      	pop	{r3, r4, r5, pc}
 8013756:	bf00      	nop
 8013758:	2000156c 	.word	0x2000156c
 801375c:	20000000 	.word	0x20000000
 8013760:	080117ab 	.word	0x080117ab
 8013764:	20000030 	.word	0x20000030
 8013768:	20001570 	.word	0x20001570
 801376c:	080117a9 	.word	0x080117a9
 8013770:	20000034 	.word	0x20000034

08013774 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8013774:	b538      	push	{r3, r4, r5, lr}
 8013776:	4c15      	ldr	r4, [pc, #84]	; (80137cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8013778:	7823      	ldrb	r3, [r4, #0]
 801377a:	f3bf 8f5b 	dmb	ish
 801377e:	07da      	lsls	r2, r3, #31
 8013780:	4605      	mov	r5, r0
 8013782:	d40b      	bmi.n	801379c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8013784:	4620      	mov	r0, r4
 8013786:	f007 f89c 	bl	801a8c2 <__cxa_guard_acquire>
 801378a:	b138      	cbz	r0, 801379c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801378c:	4620      	mov	r0, r4
 801378e:	f007 f8a4 	bl	801a8da <__cxa_guard_release>
 8013792:	4a0f      	ldr	r2, [pc, #60]	; (80137d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8013794:	490f      	ldr	r1, [pc, #60]	; (80137d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8013796:	4810      	ldr	r0, [pc, #64]	; (80137d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8013798:	f007 f88c 	bl	801a8b4 <__aeabi_atexit>
 801379c:	4c0f      	ldr	r4, [pc, #60]	; (80137dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801379e:	7823      	ldrb	r3, [r4, #0]
 80137a0:	f3bf 8f5b 	dmb	ish
 80137a4:	07db      	lsls	r3, r3, #31
 80137a6:	d40b      	bmi.n	80137c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80137a8:	4620      	mov	r0, r4
 80137aa:	f007 f88a 	bl	801a8c2 <__cxa_guard_acquire>
 80137ae:	b138      	cbz	r0, 80137c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80137b0:	4620      	mov	r0, r4
 80137b2:	f007 f892 	bl	801a8da <__cxa_guard_release>
 80137b6:	4a06      	ldr	r2, [pc, #24]	; (80137d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80137b8:	4909      	ldr	r1, [pc, #36]	; (80137e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80137ba:	480a      	ldr	r0, [pc, #40]	; (80137e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80137bc:	f007 f87a 	bl	801a8b4 <__aeabi_atexit>
 80137c0:	4b05      	ldr	r3, [pc, #20]	; (80137d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80137c2:	66ab      	str	r3, [r5, #104]	; 0x68
 80137c4:	4b07      	ldr	r3, [pc, #28]	; (80137e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80137c6:	66eb      	str	r3, [r5, #108]	; 0x6c
 80137c8:	bd38      	pop	{r3, r4, r5, pc}
 80137ca:	bf00      	nop
 80137cc:	20001564 	.word	0x20001564
 80137d0:	20000000 	.word	0x20000000
 80137d4:	080117af 	.word	0x080117af
 80137d8:	20000028 	.word	0x20000028
 80137dc:	20001568 	.word	0x20001568
 80137e0:	080117ad 	.word	0x080117ad
 80137e4:	2000002c 	.word	0x2000002c

080137e8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80137e8:	b510      	push	{r4, lr}
 80137ea:	4604      	mov	r4, r0
 80137ec:	f7ff ff88 	bl	8013700 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80137f0:	4620      	mov	r0, r4
 80137f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80137f6:	f7ff bfbd 	b.w	8013774 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080137fa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80137fa:	b510      	push	{r4, lr}
 80137fc:	4604      	mov	r4, r0
 80137fe:	f7ff fff3 	bl	80137e8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8013802:	4620      	mov	r0, r4
 8013804:	f7ff ff72 	bl	80136ec <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8013808:	4620      	mov	r0, r4
 801380a:	f7ff fdf9 	bl	8013400 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801380e:	4620      	mov	r0, r4
 8013810:	f7ff fcfa 	bl	8013208 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8013814:	4620      	mov	r0, r4
 8013816:	f7ff fd75 	bl	8013304 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801381a:	4620      	mov	r0, r4
 801381c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013820:	f7ff bee0 	b.w	80135e4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08013824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8013824:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013828:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801382c:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8013830:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8013834:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013838:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 801383c:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8013840:	8808      	ldrh	r0, [r1, #0]
 8013842:	fb0e 4708 	mla	r7, lr, r8, r4
 8013846:	f1be 0f00 	cmp.w	lr, #0
 801384a:	eb02 0a07 	add.w	sl, r2, r7
 801384e:	db37      	blt.n	80138c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8013850:	45f3      	cmp	fp, lr
 8013852:	dd35      	ble.n	80138c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8013854:	2c00      	cmp	r4, #0
 8013856:	db31      	blt.n	80138bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8013858:	45a0      	cmp	r8, r4
 801385a:	dd2f      	ble.n	80138bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801385c:	5dd2      	ldrb	r2, [r2, r7]
 801385e:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8013862:	1c62      	adds	r2, r4, #1
 8013864:	d42f      	bmi.n	80138c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013866:	4590      	cmp	r8, r2
 8013868:	dd2d      	ble.n	80138c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801386a:	b366      	cbz	r6, 80138c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801386c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8013870:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013874:	f11e 0e01 	adds.w	lr, lr, #1
 8013878:	d429      	bmi.n	80138ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801387a:	45f3      	cmp	fp, lr
 801387c:	dd27      	ble.n	80138ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801387e:	f1bc 0f00 	cmp.w	ip, #0
 8013882:	f000 80a0 	beq.w	80139c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 8013886:	2c00      	cmp	r4, #0
 8013888:	db1f      	blt.n	80138ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801388a:	45a0      	cmp	r8, r4
 801388c:	dd1d      	ble.n	80138ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801388e:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8013892:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8013896:	3401      	adds	r4, #1
 8013898:	d41c      	bmi.n	80138d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801389a:	45a0      	cmp	r8, r4
 801389c:	dd1a      	ble.n	80138d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801389e:	b1de      	cbz	r6, 80138d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80138a0:	44d0      	add	r8, sl
 80138a2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80138a6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80138aa:	2e0f      	cmp	r6, #15
 80138ac:	d915      	bls.n	80138da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80138ae:	4b49      	ldr	r3, [pc, #292]	; (80139d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80138b0:	4a49      	ldr	r2, [pc, #292]	; (80139d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80138b2:	484a      	ldr	r0, [pc, #296]	; (80139dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80138b4:	f240 3155 	movw	r1, #853	; 0x355
 80138b8:	f007 f830 	bl	801a91c <__assert_func>
 80138bc:	4681      	mov	r9, r0
 80138be:	e7d0      	b.n	8013862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80138c0:	4607      	mov	r7, r0
 80138c2:	4681      	mov	r9, r0
 80138c4:	e7d6      	b.n	8013874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80138c6:	4607      	mov	r7, r0
 80138c8:	e7d4      	b.n	8013874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80138ca:	4686      	mov	lr, r0
 80138cc:	e7e3      	b.n	8013896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80138ce:	4603      	mov	r3, r0
 80138d0:	4686      	mov	lr, r0
 80138d2:	e7ea      	b.n	80138aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80138d4:	4603      	mov	r3, r0
 80138d6:	e7e8      	b.n	80138aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80138d8:	4603      	mov	r3, r0
 80138da:	f1bc 0f0f 	cmp.w	ip, #15
 80138de:	d8e6      	bhi.n	80138ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80138e0:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80138e4:	fb16 f80c 	smulbb	r8, r6, ip
 80138e8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80138ec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80138f0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80138f4:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80138f8:	ea44 0909 	orr.w	r9, r4, r9
 80138fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8013900:	f1cc 0410 	rsb	r4, ip, #16
 8013904:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013908:	1ba4      	subs	r4, r4, r6
 801390a:	041a      	lsls	r2, r3, #16
 801390c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8013910:	ea4a 0707 	orr.w	r7, sl, r7
 8013914:	4377      	muls	r7, r6
 8013916:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801391a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801391e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013922:	fb04 7409 	mla	r4, r4, r9, r7
 8013926:	4313      	orrs	r3, r2
 8013928:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801392c:	fb08 4303 	mla	r3, r8, r3, r4
 8013930:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8013934:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8013938:	4322      	orrs	r2, r4
 801393a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801393e:	fb0c 3202 	mla	r2, ip, r2, r3
 8013942:	0d53      	lsrs	r3, r2, #21
 8013944:	0952      	lsrs	r2, r2, #5
 8013946:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801394a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801394e:	431a      	orrs	r2, r3
 8013950:	b293      	uxth	r3, r2
 8013952:	b2af      	uxth	r7, r5
 8013954:	1202      	asrs	r2, r0, #8
 8013956:	43ed      	mvns	r5, r5
 8013958:	b2ed      	uxtb	r5, r5
 801395a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801395e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8013962:	fb12 f205 	smulbb	r2, r2, r5
 8013966:	10c6      	asrs	r6, r0, #3
 8013968:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801396c:	fb0c 2c07 	mla	ip, ip, r7, r2
 8013970:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013974:	10da      	asrs	r2, r3, #3
 8013976:	fb16 f605 	smulbb	r6, r6, r5
 801397a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801397e:	fb02 6207 	mla	r2, r2, r7, r6
 8013982:	b296      	uxth	r6, r2
 8013984:	00c2      	lsls	r2, r0, #3
 8013986:	00dc      	lsls	r4, r3, #3
 8013988:	b2d2      	uxtb	r2, r2
 801398a:	b2e4      	uxtb	r4, r4
 801398c:	fb12 f205 	smulbb	r2, r2, r5
 8013990:	fb04 2207 	mla	r2, r4, r7, r2
 8013994:	fa1f fc8c 	uxth.w	ip, ip
 8013998:	b292      	uxth	r2, r2
 801399a:	f10c 0301 	add.w	r3, ip, #1
 801399e:	1c50      	adds	r0, r2, #1
 80139a0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80139a4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80139a8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80139ac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80139b0:	4313      	orrs	r3, r2
 80139b2:	1c72      	adds	r2, r6, #1
 80139b4:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80139b8:	0952      	lsrs	r2, r2, #5
 80139ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80139be:	4313      	orrs	r3, r2
 80139c0:	800b      	strh	r3, [r1, #0]
 80139c2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80139c6:	2e0f      	cmp	r6, #15
 80139c8:	f63f af71 	bhi.w	80138ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80139cc:	4603      	mov	r3, r0
 80139ce:	4686      	mov	lr, r0
 80139d0:	e786      	b.n	80138e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80139d2:	bf00      	nop
 80139d4:	0801e397 	.word	0x0801e397
 80139d8:	0801e99e 	.word	0x0801e99e
 80139dc:	0801e41f 	.word	0x0801e41f

080139e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80139e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139e4:	ed2d 8b08 	vpush	{d8-d11}
 80139e8:	b09b      	sub	sp, #108	; 0x6c
 80139ea:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 80139ee:	9309      	str	r3, [sp, #36]	; 0x24
 80139f0:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 80139f4:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 80139f6:	930a      	str	r3, [sp, #40]	; 0x28
 80139f8:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80139fc:	930e      	str	r3, [sp, #56]	; 0x38
 80139fe:	910d      	str	r1, [sp, #52]	; 0x34
 8013a00:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8013a04:	9018      	str	r0, [sp, #96]	; 0x60
 8013a06:	6870      	ldr	r0, [r6, #4]
 8013a08:	9217      	str	r2, [sp, #92]	; 0x5c
 8013a0a:	fb00 1303 	mla	r3, r0, r3, r1
 8013a0e:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8013a10:	6831      	ldr	r1, [r6, #0]
 8013a12:	6856      	ldr	r6, [r2, #4]
 8013a14:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8013a18:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8013a1c:	6813      	ldr	r3, [r2, #0]
 8013a1e:	930c      	str	r3, [sp, #48]	; 0x30
 8013a20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013a22:	43db      	mvns	r3, r3
 8013a24:	b2db      	uxtb	r3, r3
 8013a26:	eeb0 aa40 	vmov.f32	s20, s0
 8013a2a:	eef0 9a60 	vmov.f32	s19, s1
 8013a2e:	eeb0 9a41 	vmov.f32	s18, s2
 8013a32:	eeb0 8a62 	vmov.f32	s16, s5
 8013a36:	eef0 8a43 	vmov.f32	s17, s6
 8013a3a:	eef0 ba44 	vmov.f32	s23, s8
 8013a3e:	eeb0 ba64 	vmov.f32	s22, s9
 8013a42:	eef0 aa45 	vmov.f32	s21, s10
 8013a46:	3604      	adds	r6, #4
 8013a48:	930b      	str	r3, [sp, #44]	; 0x2c
 8013a4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013a4c:	2b00      	cmp	r3, #0
 8013a4e:	dc03      	bgt.n	8013a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013a50:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8013a52:	2b00      	cmp	r3, #0
 8013a54:	f340 8215 	ble.w	8013e82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8013a58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a5a:	2b00      	cmp	r3, #0
 8013a5c:	f340 8102 	ble.w	8013c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8013a60:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013a64:	ea4f 4328 	mov.w	r3, r8, asr #16
 8013a68:	d42c      	bmi.n	8013ac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8013a6a:	1c51      	adds	r1, r2, #1
 8013a6c:	428c      	cmp	r4, r1
 8013a6e:	dd2c      	ble.n	8013aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013a70:	2b00      	cmp	r3, #0
 8013a72:	db2a      	blt.n	8013aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013a74:	980a      	ldr	r0, [sp, #40]	; 0x28
 8013a76:	1c59      	adds	r1, r3, #1
 8013a78:	4288      	cmp	r0, r1
 8013a7a:	dd26      	ble.n	8013aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013a7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a7e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013a80:	3b01      	subs	r3, #1
 8013a82:	fb02 9203 	mla	r2, r2, r3, r9
 8013a86:	1412      	asrs	r2, r2, #16
 8013a88:	d429      	bmi.n	8013ade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013a8a:	3201      	adds	r2, #1
 8013a8c:	4294      	cmp	r4, r2
 8013a8e:	dd26      	ble.n	8013ade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013a90:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8013a92:	fb02 8303 	mla	r3, r2, r3, r8
 8013a96:	141b      	asrs	r3, r3, #16
 8013a98:	d421      	bmi.n	8013ade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013a9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013a9c:	3301      	adds	r3, #1
 8013a9e:	429a      	cmp	r2, r3
 8013aa0:	dd1d      	ble.n	8013ade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013aa2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013aa6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013aaa:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8013aae:	9312      	str	r3, [sp, #72]	; 0x48
 8013ab0:	f1be 0f00 	cmp.w	lr, #0
 8013ab4:	f300 8138 	bgt.w	8013d28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 8013ab8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013aba:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8013abe:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8013ac2:	e0d1      	b.n	8013c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8013ac4:	1c51      	adds	r1, r2, #1
 8013ac6:	f040 80c3 	bne.w	8013c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013aca:	42a2      	cmp	r2, r4
 8013acc:	f280 80c0 	bge.w	8013c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013ad0:	1c5f      	adds	r7, r3, #1
 8013ad2:	f2c0 80bd 	blt.w	8013c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013ad6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013ad8:	4293      	cmp	r3, r2
 8013ada:	f280 80b9 	bge.w	8013c50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013ade:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8013ae2:	4657      	mov	r7, sl
 8013ae4:	f1bb 0f00 	cmp.w	fp, #0
 8013ae8:	dde6      	ble.n	8013ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8013aea:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013aee:	ea4f 4328 	mov.w	r3, r8, asr #16
 8013af2:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8013af6:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8013afa:	f100 80fc 	bmi.w	8013cf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8013afe:	f102 0c01 	add.w	ip, r2, #1
 8013b02:	4564      	cmp	r4, ip
 8013b04:	f340 80f9 	ble.w	8013cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013b08:	2b00      	cmp	r3, #0
 8013b0a:	f2c0 80f6 	blt.w	8013cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013b0e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013b10:	f103 0c01 	add.w	ip, r3, #1
 8013b14:	4565      	cmp	r5, ip
 8013b16:	f340 80f0 	ble.w	8013cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013b1a:	fb03 2304 	mla	r3, r3, r4, r2
 8013b1e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8013b20:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013b22:	441a      	add	r2, r3
 8013b24:	5ceb      	ldrb	r3, [r5, r3]
 8013b26:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 8013b2a:	2800      	cmp	r0, #0
 8013b2c:	f000 80db 	beq.w	8013ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8013b30:	7853      	ldrb	r3, [r2, #1]
 8013b32:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013b36:	9313      	str	r3, [sp, #76]	; 0x4c
 8013b38:	b141      	cbz	r1, 8013b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013b3a:	1913      	adds	r3, r2, r4
 8013b3c:	5d12      	ldrb	r2, [r2, r4]
 8013b3e:	785b      	ldrb	r3, [r3, #1]
 8013b40:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013b44:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013b48:	9210      	str	r2, [sp, #64]	; 0x40
 8013b4a:	9314      	str	r3, [sp, #80]	; 0x50
 8013b4c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013b4e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013b50:	fb10 f201 	smulbb	r2, r0, r1
 8013b54:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013b58:	10d2      	asrs	r2, r2, #3
 8013b5a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013b5e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013b62:	ea4c 0c03 	orr.w	ip, ip, r3
 8013b66:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8013b6a:	930f      	str	r3, [sp, #60]	; 0x3c
 8013b6c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013b6e:	041b      	lsls	r3, r3, #16
 8013b70:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8013b74:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013b78:	432b      	orrs	r3, r5
 8013b7a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8013b7c:	4353      	muls	r3, r2
 8013b7e:	fb05 330c 	mla	r3, r5, ip, r3
 8013b82:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8013b86:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013b8a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8013b8e:	ea4c 0e0e 	orr.w	lr, ip, lr
 8013b92:	f1c1 0c10 	rsb	ip, r1, #16
 8013b96:	ebac 0c00 	sub.w	ip, ip, r0
 8013b9a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013b9e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8013ba2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013ba4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013ba6:	0418      	lsls	r0, r3, #16
 8013ba8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013bac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013bb0:	4318      	orrs	r0, r3
 8013bb2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8013bb6:	fb02 c200 	mla	r2, r2, r0, ip
 8013bba:	0d53      	lsrs	r3, r2, #21
 8013bbc:	0952      	lsrs	r2, r2, #5
 8013bbe:	f8b7 c000 	ldrh.w	ip, [r7]
 8013bc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013bc6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013bca:	431a      	orrs	r2, r3
 8013bcc:	b292      	uxth	r2, r2
 8013bce:	ea4f 212c 	mov.w	r1, ip, asr #8
 8013bd2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013bd6:	1210      	asrs	r0, r2, #8
 8013bd8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013bdc:	fb11 f105 	smulbb	r1, r1, r5
 8013be0:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8013be4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013be8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013bec:	fb00 1003 	mla	r0, r0, r3, r1
 8013bf0:	fa5f fc8c 	uxtb.w	ip, ip
 8013bf4:	10d1      	asrs	r1, r2, #3
 8013bf6:	00d2      	lsls	r2, r2, #3
 8013bf8:	fb1c fc05 	smulbb	ip, ip, r5
 8013bfc:	b2d2      	uxtb	r2, r2
 8013bfe:	fb02 c203 	mla	r2, r2, r3, ip
 8013c02:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013c06:	b280      	uxth	r0, r0
 8013c08:	b292      	uxth	r2, r2
 8013c0a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013c0e:	fb1e fe05 	smulbb	lr, lr, r5
 8013c12:	fb01 e103 	mla	r1, r1, r3, lr
 8013c16:	f102 0c01 	add.w	ip, r2, #1
 8013c1a:	1c43      	adds	r3, r0, #1
 8013c1c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8013c20:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8013c24:	b289      	uxth	r1, r1
 8013c26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013c2a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013c2e:	4313      	orrs	r3, r2
 8013c30:	1c4a      	adds	r2, r1, #1
 8013c32:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8013c36:	0949      	lsrs	r1, r1, #5
 8013c38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013c3c:	430b      	orrs	r3, r1
 8013c3e:	803b      	strh	r3, [r7, #0]
 8013c40:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013c42:	4499      	add	r9, r3
 8013c44:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013c46:	3702      	adds	r7, #2
 8013c48:	4498      	add	r8, r3
 8013c4a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013c4e:	e749      	b.n	8013ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8013c50:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013c52:	4499      	add	r9, r3
 8013c54:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013c56:	4498      	add	r8, r3
 8013c58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c5a:	3b01      	subs	r3, #1
 8013c5c:	9309      	str	r3, [sp, #36]	; 0x24
 8013c5e:	f10a 0a02 	add.w	sl, sl, #2
 8013c62:	e6f9      	b.n	8013a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013c64:	f47f af0a 	bne.w	8013a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8013c68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c6a:	2b00      	cmp	r3, #0
 8013c6c:	f340 8109 	ble.w	8013e82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8013c70:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013c74:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013c78:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013c7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013c7e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013c82:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013c86:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013c8a:	eef0 6a48 	vmov.f32	s13, s16
 8013c8e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013c92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013c96:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013c9a:	ee16 9a90 	vmov	r9, s13
 8013c9e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013ca2:	eef0 6a68 	vmov.f32	s13, s17
 8013ca6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013caa:	ee18 2a10 	vmov	r2, s16
 8013cae:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013cb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013cb6:	ee18 2a90 	vmov	r2, s17
 8013cba:	932f      	str	r3, [sp, #188]	; 0xbc
 8013cbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013cbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8013cc2:	9330      	str	r3, [sp, #192]	; 0xc0
 8013cc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013cc6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8013cc8:	3b01      	subs	r3, #1
 8013cca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013cce:	930d      	str	r3, [sp, #52]	; 0x34
 8013cd0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013cd2:	bf08      	it	eq
 8013cd4:	4613      	moveq	r3, r2
 8013cd6:	ee16 8a90 	vmov	r8, s13
 8013cda:	9309      	str	r3, [sp, #36]	; 0x24
 8013cdc:	eef0 8a67 	vmov.f32	s17, s15
 8013ce0:	eeb0 8a47 	vmov.f32	s16, s14
 8013ce4:	e6b1      	b.n	8013a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8013ce6:	2900      	cmp	r1, #0
 8013ce8:	f43f af30 	beq.w	8013b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013cec:	5d13      	ldrb	r3, [r2, r4]
 8013cee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013cf2:	9310      	str	r3, [sp, #64]	; 0x40
 8013cf4:	e72a      	b.n	8013b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013cf6:	1c55      	adds	r5, r2, #1
 8013cf8:	d1a2      	bne.n	8013c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013cfa:	4294      	cmp	r4, r2
 8013cfc:	dda0      	ble.n	8013c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013cfe:	1c5d      	adds	r5, r3, #1
 8013d00:	db9e      	blt.n	8013c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013d02:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013d04:	429d      	cmp	r5, r3
 8013d06:	dd9b      	ble.n	8013c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013d08:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8013d0c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013d0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013d10:	9202      	str	r2, [sp, #8]
 8013d12:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8013d16:	e9cd 4300 	strd	r4, r3, [sp]
 8013d1a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013d1c:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013d1e:	4633      	mov	r3, r6
 8013d20:	4639      	mov	r1, r7
 8013d22:	f7ff fd7f 	bl	8013824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8013d26:	e78b      	b.n	8013c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013d28:	ea4f 4329 	mov.w	r3, r9, asr #16
 8013d2c:	ea4f 4228 	mov.w	r2, r8, asr #16
 8013d30:	fb04 3202 	mla	r2, r4, r2, r3
 8013d34:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013d36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013d38:	4413      	add	r3, r2
 8013d3a:	5c8a      	ldrb	r2, [r1, r2]
 8013d3c:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8013d40:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8013d44:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 8013d48:	f1bc 0f00 	cmp.w	ip, #0
 8013d4c:	f000 8091 	beq.w	8013e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8013d50:	785a      	ldrb	r2, [r3, #1]
 8013d52:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013d56:	9215      	str	r2, [sp, #84]	; 0x54
 8013d58:	b140      	cbz	r0, 8013d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013d5a:	191a      	adds	r2, r3, r4
 8013d5c:	5d1b      	ldrb	r3, [r3, r4]
 8013d5e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013d62:	9311      	str	r3, [sp, #68]	; 0x44
 8013d64:	7853      	ldrb	r3, [r2, #1]
 8013d66:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013d6a:	9316      	str	r3, [sp, #88]	; 0x58
 8013d6c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013d6e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013d70:	fb1c f200 	smulbb	r2, ip, r0
 8013d74:	041f      	lsls	r7, r3, #16
 8013d76:	10d2      	asrs	r2, r2, #3
 8013d78:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013d7c:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8013d80:	431f      	orrs	r7, r3
 8013d82:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8013d86:	9319      	str	r3, [sp, #100]	; 0x64
 8013d88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013d8a:	041b      	lsls	r3, r3, #16
 8013d8c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8013d90:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013d94:	ea43 030b 	orr.w	r3, r3, fp
 8013d98:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8013d9a:	4353      	muls	r3, r2
 8013d9c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8013da0:	fb05 3707 	mla	r7, r5, r7, r3
 8013da4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013da8:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013dac:	ea43 0b01 	orr.w	fp, r3, r1
 8013db0:	f1c0 0110 	rsb	r1, r0, #16
 8013db4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013db6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013db8:	eba1 0c0c 	sub.w	ip, r1, ip
 8013dbc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013dc0:	fb0c 770b 	mla	r7, ip, fp, r7
 8013dc4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013dc8:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8013dcc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013dd0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8013dd4:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013dd8:	fb02 770c 	mla	r7, r2, ip, r7
 8013ddc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013dde:	0d79      	lsrs	r1, r7, #21
 8013de0:	8812      	ldrh	r2, [r2, #0]
 8013de2:	097f      	lsrs	r7, r7, #5
 8013de4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013de8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013dec:	430f      	orrs	r7, r1
 8013dee:	1211      	asrs	r1, r2, #8
 8013df0:	b2bb      	uxth	r3, r7
 8013df2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013df6:	fb11 f105 	smulbb	r1, r1, r5
 8013dfa:	1218      	asrs	r0, r3, #8
 8013dfc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013dfe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013e02:	fb00 1005 	mla	r0, r0, r5, r1
 8013e06:	10d7      	asrs	r7, r2, #3
 8013e08:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013e0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013e0e:	fb17 f705 	smulbb	r7, r7, r5
 8013e12:	10d9      	asrs	r1, r3, #3
 8013e14:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013e16:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013e1a:	fb01 7105 	mla	r1, r1, r5, r7
 8013e1e:	00d2      	lsls	r2, r2, #3
 8013e20:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013e22:	b2d2      	uxtb	r2, r2
 8013e24:	fb12 f205 	smulbb	r2, r2, r5
 8013e28:	00db      	lsls	r3, r3, #3
 8013e2a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013e2c:	b2db      	uxtb	r3, r3
 8013e2e:	b280      	uxth	r0, r0
 8013e30:	fb03 2305 	mla	r3, r3, r5, r2
 8013e34:	b29b      	uxth	r3, r3
 8013e36:	b289      	uxth	r1, r1
 8013e38:	1c42      	adds	r2, r0, #1
 8013e3a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8013e3e:	1c4f      	adds	r7, r1, #1
 8013e40:	1c5a      	adds	r2, r3, #1
 8013e42:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8013e46:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8013e4a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013e4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013e52:	0949      	lsrs	r1, r1, #5
 8013e54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013e56:	4310      	orrs	r0, r2
 8013e58:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013e5c:	4308      	orrs	r0, r1
 8013e5e:	f823 0b02 	strh.w	r0, [r3], #2
 8013e62:	930f      	str	r3, [sp, #60]	; 0x3c
 8013e64:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013e66:	4499      	add	r9, r3
 8013e68:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013e6a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013e6e:	4498      	add	r8, r3
 8013e70:	e61e      	b.n	8013ab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8013e72:	2800      	cmp	r0, #0
 8013e74:	f43f af7a 	beq.w	8013d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013e78:	5d1b      	ldrb	r3, [r3, r4]
 8013e7a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013e7e:	9311      	str	r3, [sp, #68]	; 0x44
 8013e80:	e774      	b.n	8013d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013e82:	b01b      	add	sp, #108	; 0x6c
 8013e84:	ecbd 8b08 	vpop	{d8-d11}
 8013e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8013e8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013e90:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8013e94:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8013e98:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8013e9c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8013ea0:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8013ea4:	8808      	ldrh	r0, [r1, #0]
 8013ea6:	fb06 570e 	mla	r7, r6, lr, r5
 8013eaa:	2e00      	cmp	r6, #0
 8013eac:	eb02 0807 	add.w	r8, r2, r7
 8013eb0:	db38      	blt.n	8013f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013eb2:	45b1      	cmp	r9, r6
 8013eb4:	dd36      	ble.n	8013f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013eb6:	2d00      	cmp	r5, #0
 8013eb8:	db32      	blt.n	8013f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8013eba:	45ae      	cmp	lr, r5
 8013ebc:	dd30      	ble.n	8013f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8013ebe:	5dd2      	ldrb	r2, [r2, r7]
 8013ec0:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013ec4:	1c6a      	adds	r2, r5, #1
 8013ec6:	d430      	bmi.n	8013f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013ec8:	4596      	cmp	lr, r2
 8013eca:	dd2e      	ble.n	8013f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013ecc:	b36c      	cbz	r4, 8013f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013ece:	f898 2001 	ldrb.w	r2, [r8, #1]
 8013ed2:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8013ed6:	3601      	adds	r6, #1
 8013ed8:	d42b      	bmi.n	8013f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8013eda:	45b1      	cmp	r9, r6
 8013edc:	dd29      	ble.n	8013f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8013ede:	f1bc 0f00 	cmp.w	ip, #0
 8013ee2:	d028      	beq.n	8013f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8013ee4:	2d00      	cmp	r5, #0
 8013ee6:	db22      	blt.n	8013f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013ee8:	45ae      	cmp	lr, r5
 8013eea:	dd20      	ble.n	8013f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013eec:	f818 600e 	ldrb.w	r6, [r8, lr]
 8013ef0:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8013ef4:	3501      	adds	r5, #1
 8013ef6:	d407      	bmi.n	8013f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013ef8:	45ae      	cmp	lr, r5
 8013efa:	dd05      	ble.n	8013f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013efc:	b134      	cbz	r4, 8013f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8013efe:	44c6      	add	lr, r8
 8013f00:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8013f04:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013f08:	2c0f      	cmp	r4, #15
 8013f0a:	d802      	bhi.n	8013f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8013f0c:	f1bc 0f0f 	cmp.w	ip, #15
 8013f10:	d914      	bls.n	8013f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8013f12:	4b26      	ldr	r3, [pc, #152]	; (8013fac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8013f14:	4a26      	ldr	r2, [pc, #152]	; (8013fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8013f16:	4827      	ldr	r0, [pc, #156]	; (8013fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8013f18:	f240 3155 	movw	r1, #853	; 0x355
 8013f1c:	f006 fcfe 	bl	801a91c <__assert_func>
 8013f20:	4607      	mov	r7, r0
 8013f22:	e7cf      	b.n	8013ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8013f24:	4602      	mov	r2, r0
 8013f26:	4607      	mov	r7, r0
 8013f28:	e7d5      	b.n	8013ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013f2a:	4602      	mov	r2, r0
 8013f2c:	e7d3      	b.n	8013ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013f2e:	4606      	mov	r6, r0
 8013f30:	e7e0      	b.n	8013ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8013f32:	4606      	mov	r6, r0
 8013f34:	e7e8      	b.n	8013f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013f36:	2c0f      	cmp	r4, #15
 8013f38:	d8eb      	bhi.n	8013f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8013f3a:	4606      	mov	r6, r0
 8013f3c:	043d      	lsls	r5, r7, #16
 8013f3e:	fb14 f30c 	smulbb	r3, r4, ip
 8013f42:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8013f46:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8013f4a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013f4e:	10db      	asrs	r3, r3, #3
 8013f50:	432f      	orrs	r7, r5
 8013f52:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8013f56:	f1cc 0510 	rsb	r5, ip, #16
 8013f5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013f5e:	1b2d      	subs	r5, r5, r4
 8013f60:	ea4e 0202 	orr.w	r2, lr, r2
 8013f64:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8013f68:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8013f6c:	4354      	muls	r4, r2
 8013f6e:	fb05 4507 	mla	r5, r5, r7, r4
 8013f72:	0404      	lsls	r4, r0, #16
 8013f74:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8013f78:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013f7c:	4320      	orrs	r0, r4
 8013f7e:	fb03 5400 	mla	r4, r3, r0, r5
 8013f82:	0430      	lsls	r0, r6, #16
 8013f84:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013f88:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8013f8c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8013f90:	4330      	orrs	r0, r6
 8013f92:	fb03 4000 	mla	r0, r3, r0, r4
 8013f96:	0d43      	lsrs	r3, r0, #21
 8013f98:	0940      	lsrs	r0, r0, #5
 8013f9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013f9e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013fa2:	4318      	orrs	r0, r3
 8013fa4:	8008      	strh	r0, [r1, #0]
 8013fa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013faa:	bf00      	nop
 8013fac:	0801e397 	.word	0x0801e397
 8013fb0:	0801e99e 	.word	0x0801e99e
 8013fb4:	0801e41f 	.word	0x0801e41f

08013fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fbc:	ed2d 8b0a 	vpush	{d8-d12}
 8013fc0:	b095      	sub	sp, #84	; 0x54
 8013fc2:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 8013fc6:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8013fc8:	9306      	str	r3, [sp, #24]
 8013fca:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8013fce:	9109      	str	r1, [sp, #36]	; 0x24
 8013fd0:	9307      	str	r3, [sp, #28]
 8013fd2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8013fd6:	9012      	str	r0, [sp, #72]	; 0x48
 8013fd8:	6878      	ldr	r0, [r7, #4]
 8013fda:	9211      	str	r2, [sp, #68]	; 0x44
 8013fdc:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013fde:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8013fe2:	fb00 1303 	mla	r3, r0, r3, r1
 8013fe6:	6839      	ldr	r1, [r7, #0]
 8013fe8:	6857      	ldr	r7, [r2, #4]
 8013fea:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8013fee:	6813      	ldr	r3, [r2, #0]
 8013ff0:	9308      	str	r3, [sp, #32]
 8013ff2:	eeb0 aa40 	vmov.f32	s20, s0
 8013ff6:	eef0 9a60 	vmov.f32	s19, s1
 8013ffa:	eeb0 9a41 	vmov.f32	s18, s2
 8013ffe:	eeb0 8a62 	vmov.f32	s16, s5
 8014002:	eef0 8a43 	vmov.f32	s17, s6
 8014006:	eeb0 ca44 	vmov.f32	s24, s8
 801400a:	eef0 ba64 	vmov.f32	s23, s9
 801400e:	eeb0 ba45 	vmov.f32	s22, s10
 8014012:	3704      	adds	r7, #4
 8014014:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014018:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801401a:	2b00      	cmp	r3, #0
 801401c:	dc03      	bgt.n	8014026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801401e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014020:	2b00      	cmp	r3, #0
 8014022:	f340 819a 	ble.w	801435a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8014026:	9b06      	ldr	r3, [sp, #24]
 8014028:	2b00      	cmp	r3, #0
 801402a:	f340 80c4 	ble.w	80141b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801402e:	ea5f 4229 	movs.w	r2, r9, asr #16
 8014032:	ea4f 4326 	mov.w	r3, r6, asr #16
 8014036:	d429      	bmi.n	801408c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8014038:	1c51      	adds	r1, r2, #1
 801403a:	428c      	cmp	r4, r1
 801403c:	dd29      	ble.n	8014092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 801403e:	2b00      	cmp	r3, #0
 8014040:	db27      	blt.n	8014092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8014042:	9807      	ldr	r0, [sp, #28]
 8014044:	1c59      	adds	r1, r3, #1
 8014046:	4288      	cmp	r0, r1
 8014048:	dd23      	ble.n	8014092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 801404a:	9b06      	ldr	r3, [sp, #24]
 801404c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801404e:	3b01      	subs	r3, #1
 8014050:	fb02 9203 	mla	r2, r2, r3, r9
 8014054:	1412      	asrs	r2, r2, #16
 8014056:	d425      	bmi.n	80140a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014058:	3201      	adds	r2, #1
 801405a:	4294      	cmp	r4, r2
 801405c:	dd22      	ble.n	80140a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 801405e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014060:	fb02 6303 	mla	r3, r2, r3, r6
 8014064:	141b      	asrs	r3, r3, #16
 8014066:	d41d      	bmi.n	80140a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014068:	9a07      	ldr	r2, [sp, #28]
 801406a:	3301      	adds	r3, #1
 801406c:	429a      	cmp	r2, r3
 801406e:	dd19      	ble.n	80140a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014070:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8014074:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8014078:	f1b8 0f00 	cmp.w	r8, #0
 801407c:	f300 80f8 	bgt.w	8014270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8014080:	9b06      	ldr	r3, [sp, #24]
 8014082:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014086:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801408a:	e096      	b.n	80141ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 801408c:	1c51      	adds	r1, r2, #1
 801408e:	f040 8088 	bne.w	80141a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8014092:	42a2      	cmp	r2, r4
 8014094:	f280 8085 	bge.w	80141a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8014098:	1c5a      	adds	r2, r3, #1
 801409a:	f2c0 8082 	blt.w	80141a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801409e:	9a07      	ldr	r2, [sp, #28]
 80140a0:	4293      	cmp	r3, r2
 80140a2:	da7e      	bge.n	80141a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80140a4:	f8dd b018 	ldr.w	fp, [sp, #24]
 80140a8:	46d0      	mov	r8, sl
 80140aa:	f1bb 0f00 	cmp.w	fp, #0
 80140ae:	dde7      	ble.n	8014080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80140b0:	ea5f 4229 	movs.w	r2, r9, asr #16
 80140b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80140b8:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80140bc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80140c0:	f100 80c0 	bmi.w	8014244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 80140c4:	f102 0c01 	add.w	ip, r2, #1
 80140c8:	4564      	cmp	r4, ip
 80140ca:	f340 80bd 	ble.w	8014248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80140ce:	2b00      	cmp	r3, #0
 80140d0:	f2c0 80ba 	blt.w	8014248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80140d4:	9d07      	ldr	r5, [sp, #28]
 80140d6:	f103 0c01 	add.w	ip, r3, #1
 80140da:	4565      	cmp	r5, ip
 80140dc:	f340 80b4 	ble.w	8014248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80140e0:	fb03 2304 	mla	r3, r3, r4, r2
 80140e4:	9d08      	ldr	r5, [sp, #32]
 80140e6:	9a08      	ldr	r2, [sp, #32]
 80140e8:	441a      	add	r2, r3
 80140ea:	5ceb      	ldrb	r3, [r5, r3]
 80140ec:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 80140f0:	2800      	cmp	r0, #0
 80140f2:	f000 809f 	beq.w	8014234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 80140f6:	7853      	ldrb	r3, [r2, #1]
 80140f8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80140fc:	930d      	str	r3, [sp, #52]	; 0x34
 80140fe:	b141      	cbz	r1, 8014112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014100:	1913      	adds	r3, r2, r4
 8014102:	5d12      	ldrb	r2, [r2, r4]
 8014104:	785b      	ldrb	r3, [r3, #1]
 8014106:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801410a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801410e:	920a      	str	r2, [sp, #40]	; 0x28
 8014110:	930e      	str	r3, [sp, #56]	; 0x38
 8014112:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014114:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014116:	fb10 f201 	smulbb	r2, r0, r1
 801411a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801411e:	10d2      	asrs	r2, r2, #3
 8014120:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014124:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014128:	ea4c 0c03 	orr.w	ip, ip, r3
 801412c:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8014130:	930c      	str	r3, [sp, #48]	; 0x30
 8014132:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014134:	041b      	lsls	r3, r3, #16
 8014136:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801413a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801413e:	432b      	orrs	r3, r5
 8014140:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014142:	4353      	muls	r3, r2
 8014144:	fb05 330c 	mla	r3, r5, ip, r3
 8014148:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801414c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014150:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014154:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014158:	f1c1 0c10 	rsb	ip, r1, #16
 801415c:	ebac 0c00 	sub.w	ip, ip, r0
 8014160:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014164:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014168:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801416a:	0418      	lsls	r0, r3, #16
 801416c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014170:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014174:	4318      	orrs	r0, r3
 8014176:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801417a:	fb02 c200 	mla	r2, r2, r0, ip
 801417e:	0d53      	lsrs	r3, r2, #21
 8014180:	0952      	lsrs	r2, r2, #5
 8014182:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014186:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801418a:	431a      	orrs	r2, r3
 801418c:	f8a8 2000 	strh.w	r2, [r8]
 8014190:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014192:	4499      	add	r9, r3
 8014194:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014196:	f108 0802 	add.w	r8, r8, #2
 801419a:	441e      	add	r6, r3
 801419c:	f10b 3bff 	add.w	fp, fp, #4294967295
 80141a0:	e783      	b.n	80140aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80141a2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80141a4:	4499      	add	r9, r3
 80141a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80141a8:	441e      	add	r6, r3
 80141aa:	9b06      	ldr	r3, [sp, #24]
 80141ac:	3b01      	subs	r3, #1
 80141ae:	9306      	str	r3, [sp, #24]
 80141b0:	f10a 0a02 	add.w	sl, sl, #2
 80141b4:	e737      	b.n	8014026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80141b6:	f47f af48 	bne.w	801404a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80141ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141bc:	2b00      	cmp	r3, #0
 80141be:	f340 80cc 	ble.w	801435a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 80141c2:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80141c6:	ee79 9aab 	vadd.f32	s19, s19, s23
 80141ca:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80141ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80141d0:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80141d4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80141d8:	eef0 6a48 	vmov.f32	s13, s16
 80141dc:	ee69 7a27 	vmul.f32	s15, s18, s15
 80141e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80141e4:	ee37 8a48 	vsub.f32	s16, s14, s16
 80141e8:	ee16 9a90 	vmov	r9, s13
 80141ec:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80141f0:	eef0 6a68 	vmov.f32	s13, s17
 80141f4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80141f8:	ee18 2a10 	vmov	r2, s16
 80141fc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014200:	fb92 f3f3 	sdiv	r3, r2, r3
 8014204:	ee18 2a90 	vmov	r2, s17
 8014208:	932b      	str	r3, [sp, #172]	; 0xac
 801420a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801420c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014210:	932c      	str	r3, [sp, #176]	; 0xb0
 8014212:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014214:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014216:	3b01      	subs	r3, #1
 8014218:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801421c:	9309      	str	r3, [sp, #36]	; 0x24
 801421e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014220:	bf08      	it	eq
 8014222:	4613      	moveq	r3, r2
 8014224:	ee16 6a90 	vmov	r6, s13
 8014228:	9306      	str	r3, [sp, #24]
 801422a:	eef0 8a67 	vmov.f32	s17, s15
 801422e:	eeb0 8a47 	vmov.f32	s16, s14
 8014232:	e6f1      	b.n	8014018 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8014234:	2900      	cmp	r1, #0
 8014236:	f43f af6c 	beq.w	8014112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801423a:	5d13      	ldrb	r3, [r2, r4]
 801423c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014240:	930a      	str	r3, [sp, #40]	; 0x28
 8014242:	e766      	b.n	8014112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014244:	1c55      	adds	r5, r2, #1
 8014246:	d1a3      	bne.n	8014190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014248:	4294      	cmp	r4, r2
 801424a:	dda1      	ble.n	8014190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 801424c:	1c5d      	adds	r5, r3, #1
 801424e:	db9f      	blt.n	8014190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014250:	9d07      	ldr	r5, [sp, #28]
 8014252:	429d      	cmp	r5, r3
 8014254:	dd9c      	ble.n	8014190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014256:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801425a:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801425e:	e9cd 4500 	strd	r4, r5, [sp]
 8014262:	463b      	mov	r3, r7
 8014264:	9a08      	ldr	r2, [sp, #32]
 8014266:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014268:	4641      	mov	r1, r8
 801426a:	f7ff fe0f 	bl	8013e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801426e:	e78f      	b.n	8014190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014270:	ea4f 4329 	mov.w	r3, r9, asr #16
 8014274:	1432      	asrs	r2, r6, #16
 8014276:	fb04 3202 	mla	r2, r4, r2, r3
 801427a:	9908      	ldr	r1, [sp, #32]
 801427c:	9b08      	ldr	r3, [sp, #32]
 801427e:	4413      	add	r3, r2
 8014280:	5c8a      	ldrb	r2, [r1, r2]
 8014282:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8014286:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801428a:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 801428e:	f1be 0f00 	cmp.w	lr, #0
 8014292:	d05b      	beq.n	801434c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8014294:	785a      	ldrb	r2, [r3, #1]
 8014296:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801429a:	920f      	str	r2, [sp, #60]	; 0x3c
 801429c:	b140      	cbz	r0, 80142b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 801429e:	191a      	adds	r2, r3, r4
 80142a0:	5d1b      	ldrb	r3, [r3, r4]
 80142a2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80142a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80142a8:	7853      	ldrb	r3, [r2, #1]
 80142aa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80142ae:	9310      	str	r3, [sp, #64]	; 0x40
 80142b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80142b2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80142b4:	fb1e f200 	smulbb	r2, lr, r0
 80142b8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80142bc:	10d2      	asrs	r2, r2, #3
 80142be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80142c2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80142c6:	ea4c 0c03 	orr.w	ip, ip, r3
 80142ca:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80142ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80142d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142d2:	041b      	lsls	r3, r3, #16
 80142d4:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80142d8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80142dc:	ea43 030b 	orr.w	r3, r3, fp
 80142e0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80142e2:	4353      	muls	r3, r2
 80142e4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80142e8:	fb05 3c0c 	mla	ip, r5, ip, r3
 80142ec:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80142f0:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80142f4:	ea43 0b01 	orr.w	fp, r3, r1
 80142f8:	f1c0 0110 	rsb	r1, r0, #16
 80142fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80142fe:	eba1 0e0e 	sub.w	lr, r1, lr
 8014302:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8014306:	fb0e cc0b 	mla	ip, lr, fp, ip
 801430a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801430e:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8014312:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014316:	ea4b 0e0e 	orr.w	lr, fp, lr
 801431a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801431e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014322:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8014326:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801432a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801432e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014332:	ea43 0c0c 	orr.w	ip, r3, ip
 8014336:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014338:	f823 cb02 	strh.w	ip, [r3], #2
 801433c:	930c      	str	r3, [sp, #48]	; 0x30
 801433e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014340:	4499      	add	r9, r3
 8014342:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014344:	f108 38ff 	add.w	r8, r8, #4294967295
 8014348:	441e      	add	r6, r3
 801434a:	e695      	b.n	8014078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 801434c:	2800      	cmp	r0, #0
 801434e:	d0af      	beq.n	80142b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014350:	5d1b      	ldrb	r3, [r3, r4]
 8014352:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014356:	930b      	str	r3, [sp, #44]	; 0x2c
 8014358:	e7aa      	b.n	80142b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 801435a:	b015      	add	sp, #84	; 0x54
 801435c:	ecbd 8b0a 	vpop	{d8-d12}
 8014360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014364 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8014364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014368:	468b      	mov	fp, r1
 801436a:	8809      	ldrh	r1, [r1, #0]
 801436c:	b089      	sub	sp, #36	; 0x24
 801436e:	10cd      	asrs	r5, r1, #3
 8014370:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8014374:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014378:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801437c:	00c9      	lsls	r1, r1, #3
 801437e:	9500      	str	r5, [sp, #0]
 8014380:	b2c9      	uxtb	r1, r1
 8014382:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8014386:	9101      	str	r1, [sp, #4]
 8014388:	9900      	ldr	r1, [sp, #0]
 801438a:	9202      	str	r2, [sp, #8]
 801438c:	fb04 650e 	mla	r5, r4, lr, r6
 8014390:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014394:	eb02 0805 	add.w	r8, r2, r5
 8014398:	0209      	lsls	r1, r1, #8
 801439a:	9a01      	ldr	r2, [sp, #4]
 801439c:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80143a0:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80143a4:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80143a8:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80143ac:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80143b0:	4311      	orrs	r1, r2
 80143b2:	2c00      	cmp	r4, #0
 80143b4:	9107      	str	r1, [sp, #28]
 80143b6:	db43      	blt.n	8014440 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80143b8:	45a2      	cmp	sl, r4
 80143ba:	dd41      	ble.n	8014440 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80143bc:	2e00      	cmp	r6, #0
 80143be:	db3d      	blt.n	801443c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80143c0:	45b6      	cmp	lr, r6
 80143c2:	dd3b      	ble.n	801443c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80143c4:	9a02      	ldr	r2, [sp, #8]
 80143c6:	5d55      	ldrb	r5, [r2, r5]
 80143c8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80143cc:	441d      	add	r5, r3
 80143ce:	1c72      	adds	r2, r6, #1
 80143d0:	d439      	bmi.n	8014446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80143d2:	4596      	cmp	lr, r2
 80143d4:	dd37      	ble.n	8014446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80143d6:	2f00      	cmp	r7, #0
 80143d8:	d035      	beq.n	8014446 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80143da:	f898 1001 	ldrb.w	r1, [r8, #1]
 80143de:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80143e2:	4419      	add	r1, r3
 80143e4:	3401      	adds	r4, #1
 80143e6:	d432      	bmi.n	801444e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80143e8:	45a2      	cmp	sl, r4
 80143ea:	dd30      	ble.n	801444e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80143ec:	b378      	cbz	r0, 801444e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80143ee:	2e00      	cmp	r6, #0
 80143f0:	db2b      	blt.n	801444a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80143f2:	45b6      	cmp	lr, r6
 80143f4:	dd29      	ble.n	801444a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80143f6:	f818 400e 	ldrb.w	r4, [r8, lr]
 80143fa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80143fe:	441c      	add	r4, r3
 8014400:	3601      	adds	r6, #1
 8014402:	d427      	bmi.n	8014454 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014404:	45b6      	cmp	lr, r6
 8014406:	dd25      	ble.n	8014454 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014408:	b327      	cbz	r7, 8014454 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801440a:	44c6      	add	lr, r8
 801440c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014410:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014414:	4413      	add	r3, r2
 8014416:	782a      	ldrb	r2, [r5, #0]
 8014418:	9202      	str	r2, [sp, #8]
 801441a:	780a      	ldrb	r2, [r1, #0]
 801441c:	9203      	str	r2, [sp, #12]
 801441e:	7822      	ldrb	r2, [r4, #0]
 8014420:	9204      	str	r2, [sp, #16]
 8014422:	2f0f      	cmp	r7, #15
 8014424:	781a      	ldrb	r2, [r3, #0]
 8014426:	9205      	str	r2, [sp, #20]
 8014428:	d801      	bhi.n	801442e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801442a:	280f      	cmp	r0, #15
 801442c:	d914      	bls.n	8014458 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801442e:	4b3f      	ldr	r3, [pc, #252]	; (801452c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8014430:	4a3f      	ldr	r2, [pc, #252]	; (8014530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8014432:	4840      	ldr	r0, [pc, #256]	; (8014534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8014434:	f240 3173 	movw	r1, #883	; 0x373
 8014438:	f006 fa70 	bl	801a91c <__assert_func>
 801443c:	ad07      	add	r5, sp, #28
 801443e:	e7c6      	b.n	80143ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014440:	a907      	add	r1, sp, #28
 8014442:	460d      	mov	r5, r1
 8014444:	e7ce      	b.n	80143e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014446:	a907      	add	r1, sp, #28
 8014448:	e7cc      	b.n	80143e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801444a:	ac07      	add	r4, sp, #28
 801444c:	e7d8      	b.n	8014400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801444e:	ab07      	add	r3, sp, #28
 8014450:	461c      	mov	r4, r3
 8014452:	e7e0      	b.n	8014416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014454:	ab07      	add	r3, sp, #28
 8014456:	e7de      	b.n	8014416 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014458:	b2ba      	uxth	r2, r7
 801445a:	b280      	uxth	r0, r0
 801445c:	fb02 fa00 	mul.w	sl, r2, r0
 8014460:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014464:	0112      	lsls	r2, r2, #4
 8014466:	b280      	uxth	r0, r0
 8014468:	f891 8002 	ldrb.w	r8, [r1, #2]
 801446c:	7849      	ldrb	r1, [r1, #1]
 801446e:	78ae      	ldrb	r6, [r5, #2]
 8014470:	786d      	ldrb	r5, [r5, #1]
 8014472:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8014476:	eba2 020a 	sub.w	r2, r2, sl
 801447a:	b292      	uxth	r2, r2
 801447c:	ebae 0e00 	sub.w	lr, lr, r0
 8014480:	fa1f fe8e 	uxth.w	lr, lr
 8014484:	4351      	muls	r1, r2
 8014486:	fb02 f808 	mul.w	r8, r2, r8
 801448a:	fb0e 8806 	mla	r8, lr, r6, r8
 801448e:	fb0e 1505 	mla	r5, lr, r5, r1
 8014492:	78a6      	ldrb	r6, [r4, #2]
 8014494:	7861      	ldrb	r1, [r4, #1]
 8014496:	fa1f f78c 	uxth.w	r7, ip
 801449a:	fb00 8806 	mla	r8, r0, r6, r8
 801449e:	fb00 5501 	mla	r5, r0, r1, r5
 80144a2:	789e      	ldrb	r6, [r3, #2]
 80144a4:	7859      	ldrb	r1, [r3, #1]
 80144a6:	9b00      	ldr	r3, [sp, #0]
 80144a8:	ea6f 0c0c 	mvn.w	ip, ip
 80144ac:	fa5f fc8c 	uxtb.w	ip, ip
 80144b0:	fb0a 5101 	mla	r1, sl, r1, r5
 80144b4:	fb13 f50c 	smulbb	r5, r3, ip
 80144b8:	9b03      	ldr	r3, [sp, #12]
 80144ba:	435a      	muls	r2, r3
 80144bc:	9b02      	ldr	r3, [sp, #8]
 80144be:	fb0e 2203 	mla	r2, lr, r3, r2
 80144c2:	9b04      	ldr	r3, [sp, #16]
 80144c4:	fb00 2003 	mla	r0, r0, r3, r2
 80144c8:	9b05      	ldr	r3, [sp, #20]
 80144ca:	fb0a 8606 	mla	r6, sl, r6, r8
 80144ce:	fb0a 0a03 	mla	sl, sl, r3, r0
 80144d2:	9b01      	ldr	r3, [sp, #4]
 80144d4:	fb19 f90c 	smulbb	r9, r9, ip
 80144d8:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80144dc:	fb13 fc0c 	smulbb	ip, r3, ip
 80144e0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80144e4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80144e8:	fb06 9607 	mla	r6, r6, r7, r9
 80144ec:	fb01 5107 	mla	r1, r1, r7, r5
 80144f0:	fb0a c707 	mla	r7, sl, r7, ip
 80144f4:	b2b6      	uxth	r6, r6
 80144f6:	b289      	uxth	r1, r1
 80144f8:	b2bf      	uxth	r7, r7
 80144fa:	f106 0901 	add.w	r9, r6, #1
 80144fe:	f107 0c01 	add.w	ip, r7, #1
 8014502:	1c4d      	adds	r5, r1, #1
 8014504:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8014508:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 801450c:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8014510:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014514:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8014518:	0949      	lsrs	r1, r1, #5
 801451a:	433e      	orrs	r6, r7
 801451c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014520:	430e      	orrs	r6, r1
 8014522:	f8ab 6000 	strh.w	r6, [fp]
 8014526:	b009      	add	sp, #36	; 0x24
 8014528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801452c:	0801e397 	.word	0x0801e397
 8014530:	0801e8f5 	.word	0x0801e8f5
 8014534:	0801e41f 	.word	0x0801e41f

08014538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801453c:	ed2d 8b08 	vpush	{d8-d11}
 8014540:	b097      	sub	sp, #92	; 0x5c
 8014542:	eeb0 aa40 	vmov.f32	s20, s0
 8014546:	9309      	str	r3, [sp, #36]	; 0x24
 8014548:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 801454c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801454e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014550:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014554:	9310      	str	r3, [sp, #64]	; 0x40
 8014556:	910f      	str	r1, [sp, #60]	; 0x3c
 8014558:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801455c:	9015      	str	r0, [sp, #84]	; 0x54
 801455e:	6860      	ldr	r0, [r4, #4]
 8014560:	9213      	str	r2, [sp, #76]	; 0x4c
 8014562:	fb00 1303 	mla	r3, r0, r3, r1
 8014566:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014568:	6821      	ldr	r1, [r4, #0]
 801456a:	6854      	ldr	r4, [r2, #4]
 801456c:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8014570:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014574:	930a      	str	r3, [sp, #40]	; 0x28
 8014576:	6813      	ldr	r3, [r2, #0]
 8014578:	930e      	str	r3, [sp, #56]	; 0x38
 801457a:	1d23      	adds	r3, r4, #4
 801457c:	9308      	str	r3, [sp, #32]
 801457e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014580:	43db      	mvns	r3, r3
 8014582:	b2db      	uxtb	r3, r3
 8014584:	eef0 9a60 	vmov.f32	s19, s1
 8014588:	eeb0 9a41 	vmov.f32	s18, s2
 801458c:	eeb0 8a62 	vmov.f32	s16, s5
 8014590:	eef0 8a43 	vmov.f32	s17, s6
 8014594:	eef0 ba44 	vmov.f32	s23, s8
 8014598:	eeb0 ba64 	vmov.f32	s22, s9
 801459c:	eef0 aa45 	vmov.f32	s21, s10
 80145a0:	930c      	str	r3, [sp, #48]	; 0x30
 80145a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80145a4:	2b00      	cmp	r3, #0
 80145a6:	dc03      	bgt.n	80145b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80145a8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80145aa:	2b00      	cmp	r3, #0
 80145ac:	f340 825c 	ble.w	8014a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 80145b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80145b2:	2b00      	cmp	r3, #0
 80145b4:	f340 8127 	ble.w	8014806 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 80145b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80145ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80145bc:	1412      	asrs	r2, r2, #16
 80145be:	ea4f 4323 	mov.w	r3, r3, asr #16
 80145c2:	d430      	bmi.n	8014626 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80145c4:	1c51      	adds	r1, r2, #1
 80145c6:	428d      	cmp	r5, r1
 80145c8:	dd30      	ble.n	801462c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80145ca:	2b00      	cmp	r3, #0
 80145cc:	db2e      	blt.n	801462c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80145ce:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80145d0:	1c59      	adds	r1, r3, #1
 80145d2:	4288      	cmp	r0, r1
 80145d4:	dd2a      	ble.n	801462c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80145d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80145d8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80145da:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80145dc:	3b01      	subs	r3, #1
 80145de:	fb02 1203 	mla	r2, r2, r3, r1
 80145e2:	1412      	asrs	r2, r2, #16
 80145e4:	d42c      	bmi.n	8014640 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80145e6:	3201      	adds	r2, #1
 80145e8:	4295      	cmp	r5, r2
 80145ea:	dd29      	ble.n	8014640 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80145ec:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80145ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80145f0:	fb02 1303 	mla	r3, r2, r3, r1
 80145f4:	141b      	asrs	r3, r3, #16
 80145f6:	d423      	bmi.n	8014640 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 80145f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80145fa:	3301      	adds	r3, #1
 80145fc:	429a      	cmp	r2, r3
 80145fe:	dd1f      	ble.n	8014640 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014600:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014602:	9311      	str	r3, [sp, #68]	; 0x44
 8014604:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014606:	930d      	str	r3, [sp, #52]	; 0x34
 8014608:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801460c:	9312      	str	r3, [sp, #72]	; 0x48
 801460e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014610:	2b00      	cmp	r3, #0
 8014612:	f300 8161 	bgt.w	80148d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 8014616:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014618:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801461a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801461e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014622:	930a      	str	r3, [sp, #40]	; 0x28
 8014624:	e0f1      	b.n	801480a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8014626:	1c51      	adds	r1, r2, #1
 8014628:	f040 80de 	bne.w	80147e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801462c:	42aa      	cmp	r2, r5
 801462e:	f280 80db 	bge.w	80147e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014632:	1c5f      	adds	r7, r3, #1
 8014634:	f2c0 80d8 	blt.w	80147e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014638:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801463a:	4293      	cmp	r3, r2
 801463c:	f280 80d4 	bge.w	80147e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014640:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014642:	9311      	str	r3, [sp, #68]	; 0x44
 8014644:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014646:	930d      	str	r3, [sp, #52]	; 0x34
 8014648:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801464a:	2b00      	cmp	r3, #0
 801464c:	dde3      	ble.n	8014616 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801464e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014650:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8014652:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014654:	141a      	asrs	r2, r3, #16
 8014656:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014658:	1400      	asrs	r0, r0, #16
 801465a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801465e:	f3c1 3103 	ubfx	r1, r1, #12, #4
 8014662:	f100 8120 	bmi.w	80148a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 8014666:	1c46      	adds	r6, r0, #1
 8014668:	42b5      	cmp	r5, r6
 801466a:	f340 811e 	ble.w	80148aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 801466e:	2a00      	cmp	r2, #0
 8014670:	f2c0 811b 	blt.w	80148aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014674:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014676:	1c56      	adds	r6, r2, #1
 8014678:	42b7      	cmp	r7, r6
 801467a:	f340 8116 	ble.w	80148aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 801467e:	fb02 0005 	mla	r0, r2, r5, r0
 8014682:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014684:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014686:	9c08      	ldr	r4, [sp, #32]
 8014688:	4402      	add	r2, r0
 801468a:	5c30      	ldrb	r0, [r6, r0]
 801468c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014690:	9014      	str	r0, [sp, #80]	; 0x50
 8014692:	1826      	adds	r6, r4, r0
 8014694:	2b00      	cmp	r3, #0
 8014696:	f000 80f7 	beq.w	8014888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 801469a:	f892 e001 	ldrb.w	lr, [r2, #1]
 801469e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80146a2:	44a6      	add	lr, r4
 80146a4:	2900      	cmp	r1, #0
 80146a6:	f000 80f8 	beq.w	801489a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 80146aa:	1950      	adds	r0, r2, r5
 80146ac:	5d52      	ldrb	r2, [r2, r5]
 80146ae:	7840      	ldrb	r0, [r0, #1]
 80146b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80146b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80146b8:	4422      	add	r2, r4
 80146ba:	4420      	add	r0, r4
 80146bc:	b29b      	uxth	r3, r3
 80146be:	b289      	uxth	r1, r1
 80146c0:	fb03 fa01 	mul.w	sl, r3, r1
 80146c4:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 80146c8:	011b      	lsls	r3, r3, #4
 80146ca:	b289      	uxth	r1, r1
 80146cc:	f89e c002 	ldrb.w	ip, [lr, #2]
 80146d0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80146d4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80146d6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80146d8:	f8b7 8000 	ldrh.w	r8, [r7]
 80146dc:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 80146e0:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 80146e4:	eba3 030a 	sub.w	r3, r3, sl
 80146e8:	b29b      	uxth	r3, r3
 80146ea:	eba9 0901 	sub.w	r9, r9, r1
 80146ee:	fa1f f989 	uxth.w	r9, r9
 80146f2:	fb03 fc0c 	mul.w	ip, r3, ip
 80146f6:	fb09 cc0b 	mla	ip, r9, fp, ip
 80146fa:	f892 b002 	ldrb.w	fp, [r2, #2]
 80146fe:	fb01 cc0b 	mla	ip, r1, fp, ip
 8014702:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014706:	fb0a cc0b 	mla	ip, sl, fp, ip
 801470a:	ea4f 2b28 	mov.w	fp, r8, asr #8
 801470e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8014712:	fb1b fb04 	smulbb	fp, fp, r4
 8014716:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801471a:	fb0c bc07 	mla	ip, ip, r7, fp
 801471e:	f896 b001 	ldrb.w	fp, [r6, #1]
 8014722:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014726:	f89e e000 	ldrb.w	lr, [lr]
 801472a:	435e      	muls	r6, r3
 801472c:	fb09 660b 	mla	r6, r9, fp, r6
 8014730:	f892 b001 	ldrb.w	fp, [r2, #1]
 8014734:	fb01 660b 	mla	r6, r1, fp, r6
 8014738:	f890 b001 	ldrb.w	fp, [r0, #1]
 801473c:	fb0a 660b 	mla	r6, sl, fp, r6
 8014740:	ea4f 0be8 	mov.w	fp, r8, asr #3
 8014744:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014748:	fb1b fb04 	smulbb	fp, fp, r4
 801474c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014750:	fb06 b607 	mla	r6, r6, r7, fp
 8014754:	b2b4      	uxth	r4, r6
 8014756:	9412      	str	r4, [sp, #72]	; 0x48
 8014758:	9e08      	ldr	r6, [sp, #32]
 801475a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801475c:	f816 b004 	ldrb.w	fp, [r6, r4]
 8014760:	fb03 f30e 	mul.w	r3, r3, lr
 8014764:	f892 e000 	ldrb.w	lr, [r2]
 8014768:	fb09 330b 	mla	r3, r9, fp, r3
 801476c:	fb01 330e 	mla	r3, r1, lr, r3
 8014770:	f890 e000 	ldrb.w	lr, [r0]
 8014774:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014778:	fb0a 3e0e 	mla	lr, sl, lr, r3
 801477c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801477e:	fa5f f888 	uxtb.w	r8, r8
 8014782:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8014786:	fb18 f803 	smulbb	r8, r8, r3
 801478a:	fb0e 8807 	mla	r8, lr, r7, r8
 801478e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014790:	fa1f fc8c 	uxth.w	ip, ip
 8014794:	fa1f f888 	uxth.w	r8, r8
 8014798:	f103 0b01 	add.w	fp, r3, #1
 801479c:	f10c 0201 	add.w	r2, ip, #1
 80147a0:	f108 0e01 	add.w	lr, r8, #1
 80147a4:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 80147a8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80147ac:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 80147b0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80147b4:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 80147b8:	0976      	lsrs	r6, r6, #5
 80147ba:	ea4c 0c08 	orr.w	ip, ip, r8
 80147be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80147c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80147c4:	ea4c 0606 	orr.w	r6, ip, r6
 80147c8:	801e      	strh	r6, [r3, #0]
 80147ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80147cc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80147ce:	3302      	adds	r3, #2
 80147d0:	930d      	str	r3, [sp, #52]	; 0x34
 80147d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80147d4:	4413      	add	r3, r2
 80147d6:	9329      	str	r3, [sp, #164]	; 0xa4
 80147d8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80147da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80147dc:	4413      	add	r3, r2
 80147de:	932a      	str	r3, [sp, #168]	; 0xa8
 80147e0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80147e2:	3b01      	subs	r3, #1
 80147e4:	9311      	str	r3, [sp, #68]	; 0x44
 80147e6:	e72f      	b.n	8014648 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80147e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80147ea:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80147ec:	4413      	add	r3, r2
 80147ee:	9329      	str	r3, [sp, #164]	; 0xa4
 80147f0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80147f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80147f4:	4413      	add	r3, r2
 80147f6:	932a      	str	r3, [sp, #168]	; 0xa8
 80147f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147fa:	3b01      	subs	r3, #1
 80147fc:	9309      	str	r3, [sp, #36]	; 0x24
 80147fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014800:	3302      	adds	r3, #2
 8014802:	930a      	str	r3, [sp, #40]	; 0x28
 8014804:	e6d4      	b.n	80145b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014806:	f47f aee6 	bne.w	80145d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801480a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801480c:	2b00      	cmp	r3, #0
 801480e:	f340 812b 	ble.w	8014a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8014812:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014816:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801481a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801481e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014820:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014824:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014828:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801482c:	eef0 6a48 	vmov.f32	s13, s16
 8014830:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014834:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014838:	ee37 8a48 	vsub.f32	s16, s14, s16
 801483c:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8014840:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014844:	eef0 6a68 	vmov.f32	s13, s17
 8014848:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801484c:	ee18 2a10 	vmov	r2, s16
 8014850:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014854:	fb92 f3f3 	sdiv	r3, r2, r3
 8014858:	ee18 2a90 	vmov	r2, s17
 801485c:	932b      	str	r3, [sp, #172]	; 0xac
 801485e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014860:	fb92 f3f3 	sdiv	r3, r2, r3
 8014864:	932c      	str	r3, [sp, #176]	; 0xb0
 8014866:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014868:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801486a:	3b01      	subs	r3, #1
 801486c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014870:	930f      	str	r3, [sp, #60]	; 0x3c
 8014872:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014874:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8014878:	bf08      	it	eq
 801487a:	4613      	moveq	r3, r2
 801487c:	9309      	str	r3, [sp, #36]	; 0x24
 801487e:	eef0 8a67 	vmov.f32	s17, s15
 8014882:	eeb0 8a47 	vmov.f32	s16, s14
 8014886:	e68c      	b.n	80145a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8014888:	b151      	cbz	r1, 80148a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801488a:	5d52      	ldrb	r2, [r2, r5]
 801488c:	9808      	ldr	r0, [sp, #32]
 801488e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014892:	4402      	add	r2, r0
 8014894:	4630      	mov	r0, r6
 8014896:	46b6      	mov	lr, r6
 8014898:	e710      	b.n	80146bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 801489a:	4630      	mov	r0, r6
 801489c:	4632      	mov	r2, r6
 801489e:	e70d      	b.n	80146bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80148a0:	4630      	mov	r0, r6
 80148a2:	4632      	mov	r2, r6
 80148a4:	e7f7      	b.n	8014896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 80148a6:	1c46      	adds	r6, r0, #1
 80148a8:	d18f      	bne.n	80147ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80148aa:	4285      	cmp	r5, r0
 80148ac:	dd8d      	ble.n	80147ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80148ae:	1c54      	adds	r4, r2, #1
 80148b0:	db8b      	blt.n	80147ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80148b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80148b4:	4294      	cmp	r4, r2
 80148b6:	dd88      	ble.n	80147ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80148b8:	e9cd 2303 	strd	r2, r3, [sp, #12]
 80148bc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80148be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80148c0:	9002      	str	r0, [sp, #8]
 80148c2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80148c6:	e9cd 5300 	strd	r5, r3, [sp]
 80148ca:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 80148ce:	9b08      	ldr	r3, [sp, #32]
 80148d0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80148d2:	f7ff fd47 	bl	8014364 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80148d6:	e778      	b.n	80147ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80148d8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80148da:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80148dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80148de:	1410      	asrs	r0, r2, #16
 80148e0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80148e4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80148e6:	1412      	asrs	r2, r2, #16
 80148e8:	fb05 2000 	mla	r0, r5, r0, r2
 80148ec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80148ee:	f814 a000 	ldrb.w	sl, [r4, r0]
 80148f2:	4402      	add	r2, r0
 80148f4:	9808      	ldr	r0, [sp, #32]
 80148f6:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80148fa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80148fe:	eb00 060a 	add.w	r6, r0, sl
 8014902:	2b00      	cmp	r3, #0
 8014904:	f000 80a1 	beq.w	8014a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8014908:	f892 c001 	ldrb.w	ip, [r2, #1]
 801490c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014910:	4484      	add	ip, r0
 8014912:	2900      	cmp	r1, #0
 8014914:	f000 80a2 	beq.w	8014a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8014918:	1950      	adds	r0, r2, r5
 801491a:	5d52      	ldrb	r2, [r2, r5]
 801491c:	7840      	ldrb	r0, [r0, #1]
 801491e:	9c08      	ldr	r4, [sp, #32]
 8014920:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014924:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014928:	4422      	add	r2, r4
 801492a:	4420      	add	r0, r4
 801492c:	b29b      	uxth	r3, r3
 801492e:	b289      	uxth	r1, r1
 8014930:	fb03 f901 	mul.w	r9, r3, r1
 8014934:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014938:	011b      	lsls	r3, r3, #4
 801493a:	b289      	uxth	r1, r1
 801493c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8014940:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014944:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014946:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801494a:	eba3 0309 	sub.w	r3, r3, r9
 801494e:	b29b      	uxth	r3, r3
 8014950:	eba8 0801 	sub.w	r8, r8, r1
 8014954:	fa1f f888 	uxth.w	r8, r8
 8014958:	435f      	muls	r7, r3
 801495a:	fb08 770b 	mla	r7, r8, fp, r7
 801495e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8014962:	f8b4 e000 	ldrh.w	lr, [r4]
 8014966:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014968:	fb01 770b 	mla	r7, r1, fp, r7
 801496c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014970:	fb09 770b 	mla	r7, r9, fp, r7
 8014974:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8014978:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801497c:	fb1b fb04 	smulbb	fp, fp, r4
 8014980:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014982:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8014986:	fb07 b704 	mla	r7, r7, r4, fp
 801498a:	f896 b001 	ldrb.w	fp, [r6, #1]
 801498e:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8014992:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014994:	f89c c000 	ldrb.w	ip, [ip]
 8014998:	435e      	muls	r6, r3
 801499a:	fb08 660b 	mla	r6, r8, fp, r6
 801499e:	f892 b001 	ldrb.w	fp, [r2, #1]
 80149a2:	fb01 660b 	mla	r6, r1, fp, r6
 80149a6:	f890 b001 	ldrb.w	fp, [r0, #1]
 80149aa:	fb09 660b 	mla	r6, r9, fp, r6
 80149ae:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80149b2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80149b6:	fb1b fb04 	smulbb	fp, fp, r4
 80149ba:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80149bc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80149c0:	fb06 b604 	mla	r6, r6, r4, fp
 80149c4:	9c08      	ldr	r4, [sp, #32]
 80149c6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80149ca:	fb03 f30c 	mul.w	r3, r3, ip
 80149ce:	f892 c000 	ldrb.w	ip, [r2]
 80149d2:	fb08 330a 	mla	r3, r8, sl, r3
 80149d6:	fb01 330c 	mla	r3, r1, ip, r3
 80149da:	f890 c000 	ldrb.w	ip, [r0]
 80149de:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80149e2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80149e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80149e8:	fa5f fe8e 	uxtb.w	lr, lr
 80149ec:	fb1e fe03 	smulbb	lr, lr, r3
 80149f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80149f2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80149f6:	fb0c ec03 	mla	ip, ip, r3, lr
 80149fa:	b2bf      	uxth	r7, r7
 80149fc:	b2b6      	uxth	r6, r6
 80149fe:	fa1f fc8c 	uxth.w	ip, ip
 8014a02:	1c7b      	adds	r3, r7, #1
 8014a04:	f10c 0201 	add.w	r2, ip, #1
 8014a08:	f106 0b01 	add.w	fp, r6, #1
 8014a0c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8014a10:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8014a14:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8014a18:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014a1c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014a20:	0976      	lsrs	r6, r6, #5
 8014a22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014a24:	4317      	orrs	r7, r2
 8014a26:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014a2a:	4337      	orrs	r7, r6
 8014a2c:	f823 7b02 	strh.w	r7, [r3], #2
 8014a30:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014a32:	930d      	str	r3, [sp, #52]	; 0x34
 8014a34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014a36:	4413      	add	r3, r2
 8014a38:	9329      	str	r3, [sp, #164]	; 0xa4
 8014a3a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014a3c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014a3e:	4413      	add	r3, r2
 8014a40:	932a      	str	r3, [sp, #168]	; 0xa8
 8014a42:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014a44:	3b01      	subs	r3, #1
 8014a46:	9311      	str	r3, [sp, #68]	; 0x44
 8014a48:	e5e1      	b.n	801460e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8014a4a:	b151      	cbz	r1, 8014a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8014a4c:	5d52      	ldrb	r2, [r2, r5]
 8014a4e:	9808      	ldr	r0, [sp, #32]
 8014a50:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014a54:	4402      	add	r2, r0
 8014a56:	4630      	mov	r0, r6
 8014a58:	46b4      	mov	ip, r6
 8014a5a:	e767      	b.n	801492c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8014a5c:	4630      	mov	r0, r6
 8014a5e:	4632      	mov	r2, r6
 8014a60:	e764      	b.n	801492c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8014a62:	4630      	mov	r0, r6
 8014a64:	4632      	mov	r2, r6
 8014a66:	e7f7      	b.n	8014a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 8014a68:	b017      	add	sp, #92	; 0x5c
 8014a6a:	ecbd 8b08 	vpop	{d8-d11}
 8014a6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8014a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a78:	880e      	ldrh	r6, [r1, #0]
 8014a7a:	b085      	sub	sp, #20
 8014a7c:	0230      	lsls	r0, r6, #8
 8014a7e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8014a82:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8014a86:	0170      	lsls	r0, r6, #5
 8014a88:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014a8c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8014a90:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8014a94:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8014a98:	00f6      	lsls	r6, r6, #3
 8014a9a:	ea4b 0000 	orr.w	r0, fp, r0
 8014a9e:	b2f6      	uxtb	r6, r6
 8014aa0:	4691      	mov	r9, r2
 8014aa2:	fb05 7a0c 	mla	sl, r5, ip, r7
 8014aa6:	4306      	orrs	r6, r0
 8014aa8:	2d00      	cmp	r5, #0
 8014aaa:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8014aae:	9603      	str	r6, [sp, #12]
 8014ab0:	eb09 0e0a 	add.w	lr, r9, sl
 8014ab4:	db42      	blt.n	8014b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8014ab6:	45a8      	cmp	r8, r5
 8014ab8:	dd40      	ble.n	8014b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8014aba:	2f00      	cmp	r7, #0
 8014abc:	db3c      	blt.n	8014b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8014abe:	45bc      	cmp	ip, r7
 8014ac0:	dd3a      	ble.n	8014b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8014ac2:	f819 600a 	ldrb.w	r6, [r9, sl]
 8014ac6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014aca:	441e      	add	r6, r3
 8014acc:	1c78      	adds	r0, r7, #1
 8014ace:	d438      	bmi.n	8014b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014ad0:	4584      	cmp	ip, r0
 8014ad2:	dd36      	ble.n	8014b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014ad4:	b3aa      	cbz	r2, 8014b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014ad6:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014ada:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014ade:	4418      	add	r0, r3
 8014ae0:	3501      	adds	r5, #1
 8014ae2:	d432      	bmi.n	8014b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014ae4:	45a8      	cmp	r8, r5
 8014ae6:	dd30      	ble.n	8014b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014ae8:	b37c      	cbz	r4, 8014b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014aea:	2f00      	cmp	r7, #0
 8014aec:	db2b      	blt.n	8014b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8014aee:	45bc      	cmp	ip, r7
 8014af0:	dd29      	ble.n	8014b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8014af2:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8014af6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014afa:	441d      	add	r5, r3
 8014afc:	3701      	adds	r7, #1
 8014afe:	d427      	bmi.n	8014b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014b00:	45bc      	cmp	ip, r7
 8014b02:	dd25      	ble.n	8014b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014b04:	b322      	cbz	r2, 8014b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014b06:	44f4      	add	ip, lr
 8014b08:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8014b0c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8014b10:	443b      	add	r3, r7
 8014b12:	781f      	ldrb	r7, [r3, #0]
 8014b14:	f896 a000 	ldrb.w	sl, [r6]
 8014b18:	f890 b000 	ldrb.w	fp, [r0]
 8014b1c:	f895 9000 	ldrb.w	r9, [r5]
 8014b20:	9700      	str	r7, [sp, #0]
 8014b22:	2a0f      	cmp	r2, #15
 8014b24:	d801      	bhi.n	8014b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8014b26:	2c0f      	cmp	r4, #15
 8014b28:	d914      	bls.n	8014b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8014b2a:	4b2c      	ldr	r3, [pc, #176]	; (8014bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8014b2c:	4a2c      	ldr	r2, [pc, #176]	; (8014be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8014b2e:	482d      	ldr	r0, [pc, #180]	; (8014be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8014b30:	f240 3173 	movw	r1, #883	; 0x373
 8014b34:	f005 fef2 	bl	801a91c <__assert_func>
 8014b38:	ae03      	add	r6, sp, #12
 8014b3a:	e7c7      	b.n	8014acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8014b3c:	a803      	add	r0, sp, #12
 8014b3e:	4606      	mov	r6, r0
 8014b40:	e7ce      	b.n	8014ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8014b42:	a803      	add	r0, sp, #12
 8014b44:	e7cc      	b.n	8014ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8014b46:	ad03      	add	r5, sp, #12
 8014b48:	e7d8      	b.n	8014afc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8014b4a:	ab03      	add	r3, sp, #12
 8014b4c:	461d      	mov	r5, r3
 8014b4e:	e7e0      	b.n	8014b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8014b50:	ab03      	add	r3, sp, #12
 8014b52:	e7de      	b.n	8014b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8014b54:	b292      	uxth	r2, r2
 8014b56:	b2a4      	uxth	r4, r4
 8014b58:	fb02 f804 	mul.w	r8, r2, r4
 8014b5c:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8014b60:	0112      	lsls	r2, r2, #4
 8014b62:	b2a4      	uxth	r4, r4
 8014b64:	f890 e002 	ldrb.w	lr, [r0, #2]
 8014b68:	78b7      	ldrb	r7, [r6, #2]
 8014b6a:	7840      	ldrb	r0, [r0, #1]
 8014b6c:	7876      	ldrb	r6, [r6, #1]
 8014b6e:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8014b72:	eba2 0208 	sub.w	r2, r2, r8
 8014b76:	b292      	uxth	r2, r2
 8014b78:	ebac 0c04 	sub.w	ip, ip, r4
 8014b7c:	fa1f fc8c 	uxth.w	ip, ip
 8014b80:	fb02 fe0e 	mul.w	lr, r2, lr
 8014b84:	fb0c ee07 	mla	lr, ip, r7, lr
 8014b88:	78af      	ldrb	r7, [r5, #2]
 8014b8a:	fb04 ee07 	mla	lr, r4, r7, lr
 8014b8e:	789f      	ldrb	r7, [r3, #2]
 8014b90:	785b      	ldrb	r3, [r3, #1]
 8014b92:	fb08 e707 	mla	r7, r8, r7, lr
 8014b96:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014b9a:	fb02 fe0b 	mul.w	lr, r2, fp
 8014b9e:	4342      	muls	r2, r0
 8014ba0:	7868      	ldrb	r0, [r5, #1]
 8014ba2:	9701      	str	r7, [sp, #4]
 8014ba4:	fb0c ee0a 	mla	lr, ip, sl, lr
 8014ba8:	9f00      	ldr	r7, [sp, #0]
 8014baa:	fb0c 2206 	mla	r2, ip, r6, r2
 8014bae:	fb04 ee09 	mla	lr, r4, r9, lr
 8014bb2:	fb04 2400 	mla	r4, r4, r0, r2
 8014bb6:	fb08 ee07 	mla	lr, r8, r7, lr
 8014bba:	9f01      	ldr	r7, [sp, #4]
 8014bbc:	fb08 4803 	mla	r8, r8, r3, r4
 8014bc0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014bc4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014bc8:	ea47 070e 	orr.w	r7, r7, lr
 8014bcc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014bd0:	ea47 0708 	orr.w	r7, r7, r8
 8014bd4:	800f      	strh	r7, [r1, #0]
 8014bd6:	b005      	add	sp, #20
 8014bd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bdc:	0801e397 	.word	0x0801e397
 8014be0:	0801e8f5 	.word	0x0801e8f5
 8014be4:	0801e41f 	.word	0x0801e41f

08014be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bec:	ed2d 8b0a 	vpush	{d8-d12}
 8014bf0:	b091      	sub	sp, #68	; 0x44
 8014bf2:	eeb0 aa40 	vmov.f32	s20, s0
 8014bf6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8014bf8:	9307      	str	r3, [sp, #28]
 8014bfa:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8014bfe:	910c      	str	r1, [sp, #48]	; 0x30
 8014c00:	9309      	str	r3, [sp, #36]	; 0x24
 8014c02:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8014c06:	900f      	str	r0, [sp, #60]	; 0x3c
 8014c08:	6860      	ldr	r0, [r4, #4]
 8014c0a:	920e      	str	r2, [sp, #56]	; 0x38
 8014c0c:	fb00 1303 	mla	r3, r0, r3, r1
 8014c10:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014c12:	6821      	ldr	r1, [r4, #0]
 8014c14:	6854      	ldr	r4, [r2, #4]
 8014c16:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 8014c1a:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8014c1e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014c22:	9308      	str	r3, [sp, #32]
 8014c24:	6813      	ldr	r3, [r2, #0]
 8014c26:	930a      	str	r3, [sp, #40]	; 0x28
 8014c28:	eef0 9a60 	vmov.f32	s19, s1
 8014c2c:	eeb0 9a41 	vmov.f32	s18, s2
 8014c30:	eeb0 8a62 	vmov.f32	s16, s5
 8014c34:	eef0 8a43 	vmov.f32	s17, s6
 8014c38:	eeb0 ca44 	vmov.f32	s24, s8
 8014c3c:	eef0 ba64 	vmov.f32	s23, s9
 8014c40:	eeb0 ba45 	vmov.f32	s22, s10
 8014c44:	3404      	adds	r4, #4
 8014c46:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014c4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c4c:	2b00      	cmp	r3, #0
 8014c4e:	dc03      	bgt.n	8014c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014c50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014c52:	2b00      	cmp	r3, #0
 8014c54:	f340 81cb 	ble.w	8014fee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8014c58:	9b07      	ldr	r3, [sp, #28]
 8014c5a:	2b00      	cmp	r3, #0
 8014c5c:	f340 80dd 	ble.w	8014e1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8014c60:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014c62:	1412      	asrs	r2, r2, #16
 8014c64:	ea4f 432b 	mov.w	r3, fp, asr #16
 8014c68:	d42c      	bmi.n	8014cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8014c6a:	1c51      	adds	r1, r2, #1
 8014c6c:	428d      	cmp	r5, r1
 8014c6e:	dd2c      	ble.n	8014cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014c70:	2b00      	cmp	r3, #0
 8014c72:	db2a      	blt.n	8014cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014c74:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014c76:	1c59      	adds	r1, r3, #1
 8014c78:	4288      	cmp	r0, r1
 8014c7a:	dd26      	ble.n	8014cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014c7c:	9b07      	ldr	r3, [sp, #28]
 8014c7e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014c80:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014c82:	3b01      	subs	r3, #1
 8014c84:	fb02 1203 	mla	r2, r2, r3, r1
 8014c88:	1412      	asrs	r2, r2, #16
 8014c8a:	d428      	bmi.n	8014cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014c8c:	3201      	adds	r2, #1
 8014c8e:	4295      	cmp	r5, r2
 8014c90:	dd25      	ble.n	8014cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014c92:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014c94:	fb02 b303 	mla	r3, r2, r3, fp
 8014c98:	141b      	asrs	r3, r3, #16
 8014c9a:	d420      	bmi.n	8014cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014c9c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014c9e:	3301      	adds	r3, #1
 8014ca0:	429a      	cmp	r2, r3
 8014ca2:	dd1c      	ble.n	8014cde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014ca4:	9b07      	ldr	r3, [sp, #28]
 8014ca6:	930b      	str	r3, [sp, #44]	; 0x2c
 8014ca8:	9b08      	ldr	r3, [sp, #32]
 8014caa:	930d      	str	r3, [sp, #52]	; 0x34
 8014cac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014cae:	2b00      	cmp	r3, #0
 8014cb0:	f300 8116 	bgt.w	8014ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014cb4:	9b07      	ldr	r3, [sp, #28]
 8014cb6:	9a08      	ldr	r2, [sp, #32]
 8014cb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014cbc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014cc0:	9308      	str	r3, [sp, #32]
 8014cc2:	e0ac      	b.n	8014e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8014cc4:	1c51      	adds	r1, r2, #1
 8014cc6:	f040 809b 	bne.w	8014e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014cca:	42aa      	cmp	r2, r5
 8014ccc:	f280 8098 	bge.w	8014e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014cd0:	1c5a      	adds	r2, r3, #1
 8014cd2:	f2c0 8095 	blt.w	8014e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014cd6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014cd8:	4293      	cmp	r3, r2
 8014cda:	f280 8091 	bge.w	8014e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014cde:	9b07      	ldr	r3, [sp, #28]
 8014ce0:	930d      	str	r3, [sp, #52]	; 0x34
 8014ce2:	9b08      	ldr	r3, [sp, #32]
 8014ce4:	930b      	str	r3, [sp, #44]	; 0x2c
 8014ce6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014ce8:	2b00      	cmp	r3, #0
 8014cea:	dde3      	ble.n	8014cb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8014cec:	9825      	ldr	r0, [sp, #148]	; 0x94
 8014cee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014cf0:	1400      	asrs	r0, r0, #16
 8014cf2:	ea4f 422b 	mov.w	r2, fp, asr #16
 8014cf6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014cfa:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8014cfe:	f100 80d9 	bmi.w	8014eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8014d02:	1c46      	adds	r6, r0, #1
 8014d04:	42b5      	cmp	r5, r6
 8014d06:	f340 80d7 	ble.w	8014eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014d0a:	2a00      	cmp	r2, #0
 8014d0c:	f2c0 80d4 	blt.w	8014eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014d10:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014d12:	1c56      	adds	r6, r2, #1
 8014d14:	42b7      	cmp	r7, r6
 8014d16:	f340 80cf 	ble.w	8014eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014d1a:	fb02 0005 	mla	r0, r2, r5, r0
 8014d1e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014d20:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014d22:	4402      	add	r2, r0
 8014d24:	5c30      	ldrb	r0, [r6, r0]
 8014d26:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8014d2a:	eb04 0c08 	add.w	ip, r4, r8
 8014d2e:	2b00      	cmp	r3, #0
 8014d30:	f000 80b2 	beq.w	8014e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014d34:	7856      	ldrb	r6, [r2, #1]
 8014d36:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014d3a:	4426      	add	r6, r4
 8014d3c:	2900      	cmp	r1, #0
 8014d3e:	f000 80b3 	beq.w	8014ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8014d42:	1950      	adds	r0, r2, r5
 8014d44:	5d52      	ldrb	r2, [r2, r5]
 8014d46:	7840      	ldrb	r0, [r0, #1]
 8014d48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014d4c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014d50:	4422      	add	r2, r4
 8014d52:	4420      	add	r0, r4
 8014d54:	b29b      	uxth	r3, r3
 8014d56:	b289      	uxth	r1, r1
 8014d58:	fb03 f901 	mul.w	r9, r3, r1
 8014d5c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014d60:	011b      	lsls	r3, r3, #4
 8014d62:	b289      	uxth	r1, r1
 8014d64:	78b7      	ldrb	r7, [r6, #2]
 8014d66:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014d6a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8014d6e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014d72:	eba3 0309 	sub.w	r3, r3, r9
 8014d76:	b29b      	uxth	r3, r3
 8014d78:	ebae 0e01 	sub.w	lr, lr, r1
 8014d7c:	fa1f fe8e 	uxth.w	lr, lr
 8014d80:	435f      	muls	r7, r3
 8014d82:	fb0e 770a 	mla	r7, lr, sl, r7
 8014d86:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014d8a:	fb01 770a 	mla	r7, r1, sl, r7
 8014d8e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014d92:	fb09 7a0a 	mla	sl, r9, sl, r7
 8014d96:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014d9a:	f896 8000 	ldrb.w	r8, [r6]
 8014d9e:	7876      	ldrb	r6, [r6, #1]
 8014da0:	fb03 f808 	mul.w	r8, r3, r8
 8014da4:	fb0e 8807 	mla	r8, lr, r7, r8
 8014da8:	7817      	ldrb	r7, [r2, #0]
 8014daa:	fb01 8807 	mla	r8, r1, r7, r8
 8014dae:	7807      	ldrb	r7, [r0, #0]
 8014db0:	fb09 8707 	mla	r7, r9, r7, r8
 8014db4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014db8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014dbc:	ea4a 0707 	orr.w	r7, sl, r7
 8014dc0:	4373      	muls	r3, r6
 8014dc2:	f892 a001 	ldrb.w	sl, [r2, #1]
 8014dc6:	fb0e 330c 	mla	r3, lr, ip, r3
 8014dca:	fb01 310a 	mla	r1, r1, sl, r3
 8014dce:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014dd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014dd4:	fb09 1a0a 	mla	sl, r9, sl, r1
 8014dd8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ddc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014de0:	ea47 070a 	orr.w	r7, r7, sl
 8014de4:	801f      	strh	r7, [r3, #0]
 8014de6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014de8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014dea:	3302      	adds	r3, #2
 8014dec:	930b      	str	r3, [sp, #44]	; 0x2c
 8014dee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014df0:	4413      	add	r3, r2
 8014df2:	9325      	str	r3, [sp, #148]	; 0x94
 8014df4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014df6:	449b      	add	fp, r3
 8014df8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014dfa:	3b01      	subs	r3, #1
 8014dfc:	930d      	str	r3, [sp, #52]	; 0x34
 8014dfe:	e772      	b.n	8014ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014e00:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014e02:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014e04:	4413      	add	r3, r2
 8014e06:	9325      	str	r3, [sp, #148]	; 0x94
 8014e08:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014e0a:	449b      	add	fp, r3
 8014e0c:	9b07      	ldr	r3, [sp, #28]
 8014e0e:	3b01      	subs	r3, #1
 8014e10:	9307      	str	r3, [sp, #28]
 8014e12:	9b08      	ldr	r3, [sp, #32]
 8014e14:	3302      	adds	r3, #2
 8014e16:	9308      	str	r3, [sp, #32]
 8014e18:	e71e      	b.n	8014c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014e1a:	f47f af2f 	bne.w	8014c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8014e1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e20:	2b00      	cmp	r3, #0
 8014e22:	f340 80e4 	ble.w	8014fee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8014e26:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014e2a:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014e2e:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014e32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014e34:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014e38:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014e3c:	eef0 6a48 	vmov.f32	s13, s16
 8014e40:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014e44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e48:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014e4c:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8014e50:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014e54:	eef0 6a68 	vmov.f32	s13, s17
 8014e58:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014e5c:	ee18 2a10 	vmov	r2, s16
 8014e60:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014e64:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e68:	ee18 2a90 	vmov	r2, s17
 8014e6c:	9327      	str	r3, [sp, #156]	; 0x9c
 8014e6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014e70:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e74:	9328      	str	r3, [sp, #160]	; 0xa0
 8014e76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e78:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014e7a:	3b01      	subs	r3, #1
 8014e7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014e80:	930c      	str	r3, [sp, #48]	; 0x30
 8014e82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014e84:	bf08      	it	eq
 8014e86:	4613      	moveq	r3, r2
 8014e88:	ee16 ba90 	vmov	fp, s13
 8014e8c:	9307      	str	r3, [sp, #28]
 8014e8e:	eef0 8a67 	vmov.f32	s17, s15
 8014e92:	eeb0 8a47 	vmov.f32	s16, s14
 8014e96:	e6d8      	b.n	8014c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8014e98:	b149      	cbz	r1, 8014eae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 8014e9a:	5d52      	ldrb	r2, [r2, r5]
 8014e9c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014ea0:	4422      	add	r2, r4
 8014ea2:	4660      	mov	r0, ip
 8014ea4:	4666      	mov	r6, ip
 8014ea6:	e755      	b.n	8014d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014ea8:	4660      	mov	r0, ip
 8014eaa:	4662      	mov	r2, ip
 8014eac:	e752      	b.n	8014d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014eae:	4660      	mov	r0, ip
 8014eb0:	4662      	mov	r2, ip
 8014eb2:	e7f7      	b.n	8014ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8014eb4:	1c47      	adds	r7, r0, #1
 8014eb6:	d196      	bne.n	8014de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014eb8:	4285      	cmp	r5, r0
 8014eba:	dd94      	ble.n	8014de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014ebc:	1c56      	adds	r6, r2, #1
 8014ebe:	db92      	blt.n	8014de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014ec0:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8014ec2:	4296      	cmp	r6, r2
 8014ec4:	dd8f      	ble.n	8014de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014ec6:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8014eca:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8014ece:	e9cd 5600 	strd	r5, r6, [sp]
 8014ed2:	4623      	mov	r3, r4
 8014ed4:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 8014ed8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014eda:	f7ff fdcb 	bl	8014a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8014ede:	e782      	b.n	8014de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014ee0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014ee2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014ee4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014ee6:	1412      	asrs	r2, r2, #16
 8014ee8:	ea4f 402b 	mov.w	r0, fp, asr #16
 8014eec:	fb05 2000 	mla	r0, r5, r0, r2
 8014ef0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014ef2:	f816 8000 	ldrb.w	r8, [r6, r0]
 8014ef6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014efa:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014efe:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8014f02:	4402      	add	r2, r0
 8014f04:	eb04 0c08 	add.w	ip, r4, r8
 8014f08:	2b00      	cmp	r3, #0
 8014f0a:	d062      	beq.n	8014fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8014f0c:	7856      	ldrb	r6, [r2, #1]
 8014f0e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014f12:	4426      	add	r6, r4
 8014f14:	2900      	cmp	r1, #0
 8014f16:	d064      	beq.n	8014fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 8014f18:	1950      	adds	r0, r2, r5
 8014f1a:	5d52      	ldrb	r2, [r2, r5]
 8014f1c:	7840      	ldrb	r0, [r0, #1]
 8014f1e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014f22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014f26:	4422      	add	r2, r4
 8014f28:	4420      	add	r0, r4
 8014f2a:	b29b      	uxth	r3, r3
 8014f2c:	b289      	uxth	r1, r1
 8014f2e:	fb03 f901 	mul.w	r9, r3, r1
 8014f32:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014f36:	011b      	lsls	r3, r3, #4
 8014f38:	b289      	uxth	r1, r1
 8014f3a:	78b7      	ldrb	r7, [r6, #2]
 8014f3c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014f40:	f89c c001 	ldrb.w	ip, [ip, #1]
 8014f44:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014f48:	eba3 0309 	sub.w	r3, r3, r9
 8014f4c:	b29b      	uxth	r3, r3
 8014f4e:	ebae 0e01 	sub.w	lr, lr, r1
 8014f52:	fa1f fe8e 	uxth.w	lr, lr
 8014f56:	435f      	muls	r7, r3
 8014f58:	fb0e 770a 	mla	r7, lr, sl, r7
 8014f5c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014f60:	fb01 770a 	mla	r7, r1, sl, r7
 8014f64:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014f68:	fb09 7a0a 	mla	sl, r9, sl, r7
 8014f6c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014f70:	f896 8000 	ldrb.w	r8, [r6]
 8014f74:	7876      	ldrb	r6, [r6, #1]
 8014f76:	fb03 f808 	mul.w	r8, r3, r8
 8014f7a:	fb0e 8807 	mla	r8, lr, r7, r8
 8014f7e:	7817      	ldrb	r7, [r2, #0]
 8014f80:	fb01 8807 	mla	r8, r1, r7, r8
 8014f84:	7807      	ldrb	r7, [r0, #0]
 8014f86:	fb09 8707 	mla	r7, r9, r7, r8
 8014f8a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014f8e:	4373      	muls	r3, r6
 8014f90:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014f94:	7856      	ldrb	r6, [r2, #1]
 8014f96:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014f98:	ea4a 0707 	orr.w	r7, sl, r7
 8014f9c:	fb0e 330c 	mla	r3, lr, ip, r3
 8014fa0:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014fa4:	fb01 3306 	mla	r3, r1, r6, r3
 8014fa8:	fb09 3a0a 	mla	sl, r9, sl, r3
 8014fac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014fb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014fb2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014fb6:	ea47 070a 	orr.w	r7, r7, sl
 8014fba:	f823 7b02 	strh.w	r7, [r3], #2
 8014fbe:	930d      	str	r3, [sp, #52]	; 0x34
 8014fc0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014fc2:	4413      	add	r3, r2
 8014fc4:	9325      	str	r3, [sp, #148]	; 0x94
 8014fc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014fc8:	449b      	add	fp, r3
 8014fca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014fcc:	3b01      	subs	r3, #1
 8014fce:	930b      	str	r3, [sp, #44]	; 0x2c
 8014fd0:	e66c      	b.n	8014cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8014fd2:	b149      	cbz	r1, 8014fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 8014fd4:	5d52      	ldrb	r2, [r2, r5]
 8014fd6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014fda:	4422      	add	r2, r4
 8014fdc:	4660      	mov	r0, ip
 8014fde:	4666      	mov	r6, ip
 8014fe0:	e7a3      	b.n	8014f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8014fe2:	4660      	mov	r0, ip
 8014fe4:	4662      	mov	r2, ip
 8014fe6:	e7a0      	b.n	8014f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8014fe8:	4660      	mov	r0, ip
 8014fea:	4662      	mov	r2, ip
 8014fec:	e7f7      	b.n	8014fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8014fee:	b011      	add	sp, #68	; 0x44
 8014ff0:	ecbd 8b0a 	vpop	{d8-d12}
 8014ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ff8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8014ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ffc:	8808      	ldrh	r0, [r1, #0]
 8014ffe:	b085      	sub	sp, #20
 8015000:	1206      	asrs	r6, r0, #8
 8015002:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8015006:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801500a:	9600      	str	r6, [sp, #0]
 801500c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015010:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8015014:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015018:	10c6      	asrs	r6, r0, #3
 801501a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801501e:	9601      	str	r6, [sp, #4]
 8015020:	00c0      	lsls	r0, r0, #3
 8015022:	fb04 560c 	mla	r6, r4, ip, r5
 8015026:	b2c0      	uxtb	r0, r0
 8015028:	4692      	mov	sl, r2
 801502a:	eb02 0e06 	add.w	lr, r2, r6
 801502e:	9a00      	ldr	r2, [sp, #0]
 8015030:	9002      	str	r0, [sp, #8]
 8015032:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8015036:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801503a:	9a01      	ldr	r2, [sp, #4]
 801503c:	2c00      	cmp	r4, #0
 801503e:	4698      	mov	r8, r3
 8015040:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8015044:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8015048:	db3e      	blt.n	80150c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 801504a:	45a1      	cmp	r9, r4
 801504c:	dd3c      	ble.n	80150c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 801504e:	2d00      	cmp	r5, #0
 8015050:	db38      	blt.n	80150c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8015052:	45ac      	cmp	ip, r5
 8015054:	dd36      	ble.n	80150c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8015056:	f81a 2006 	ldrb.w	r2, [sl, r6]
 801505a:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 801505e:	1c6e      	adds	r6, r5, #1
 8015060:	d435      	bmi.n	80150ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8015062:	45b4      	cmp	ip, r6
 8015064:	dd33      	ble.n	80150ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8015066:	b393      	cbz	r3, 80150ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8015068:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801506c:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8015070:	3401      	adds	r4, #1
 8015072:	d430      	bmi.n	80150d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8015074:	45a1      	cmp	r9, r4
 8015076:	dd2e      	ble.n	80150d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8015078:	b36f      	cbz	r7, 80150d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 801507a:	2d00      	cmp	r5, #0
 801507c:	db29      	blt.n	80150d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 801507e:	45ac      	cmp	ip, r5
 8015080:	dd27      	ble.n	80150d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8015082:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8015086:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 801508a:	3501      	adds	r5, #1
 801508c:	d407      	bmi.n	801509e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801508e:	45ac      	cmp	ip, r5
 8015090:	dd05      	ble.n	801509e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8015092:	b123      	cbz	r3, 801509e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8015094:	44f4      	add	ip, lr
 8015096:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801509a:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 801509e:	2b0f      	cmp	r3, #15
 80150a0:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80150a4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80150a8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80150ac:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80150b0:	d801      	bhi.n	80150b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80150b2:	2f0f      	cmp	r7, #15
 80150b4:	d911      	bls.n	80150da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 80150b6:	4b7f      	ldr	r3, [pc, #508]	; (80152b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 80150b8:	4a7f      	ldr	r2, [pc, #508]	; (80152b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 80150ba:	4880      	ldr	r0, [pc, #512]	; (80152bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 80150bc:	f240 3173 	movw	r1, #883	; 0x373
 80150c0:	f005 fc2c 	bl	801a91c <__assert_func>
 80150c4:	4602      	mov	r2, r0
 80150c6:	e7ca      	b.n	801505e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 80150c8:	4606      	mov	r6, r0
 80150ca:	4602      	mov	r2, r0
 80150cc:	e7d0      	b.n	8015070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 80150ce:	4606      	mov	r6, r0
 80150d0:	e7ce      	b.n	8015070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 80150d2:	4604      	mov	r4, r0
 80150d4:	e7d9      	b.n	801508a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 80150d6:	4604      	mov	r4, r0
 80150d8:	e7e1      	b.n	801509e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80150da:	b29b      	uxth	r3, r3
 80150dc:	b2bf      	uxth	r7, r7
 80150de:	fb03 fe07 	mul.w	lr, r3, r7
 80150e2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80150e6:	011b      	lsls	r3, r3, #4
 80150e8:	eba3 0c0e 	sub.w	ip, r3, lr
 80150ec:	b2bf      	uxth	r7, r7
 80150ee:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80150f2:	fa1f fc8c 	uxth.w	ip, ip
 80150f6:	1bed      	subs	r5, r5, r7
 80150f8:	b2ad      	uxth	r5, r5
 80150fa:	fb0c f30a 	mul.w	r3, ip, sl
 80150fe:	fb05 330b 	mla	r3, r5, fp, r3
 8015102:	fb07 3309 	mla	r3, r7, r9, r3
 8015106:	fb0e 3308 	mla	r3, lr, r8, r3
 801510a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801510e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015112:	9303      	str	r3, [sp, #12]
 8015114:	d018      	beq.n	8015148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 8015116:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801511a:	fb0b f303 	mul.w	r3, fp, r3
 801511e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015122:	fb0b fb02 	mul.w	fp, fp, r2
 8015126:	0a1a      	lsrs	r2, r3, #8
 8015128:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801512c:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8015130:	441a      	add	r2, r3
 8015132:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8015136:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801513a:	0a12      	lsrs	r2, r2, #8
 801513c:	0a1b      	lsrs	r3, r3, #8
 801513e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015142:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015146:	431a      	orrs	r2, r3
 8015148:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801514c:	d019      	beq.n	8015182 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 801514e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015152:	fb0a fb0b 	mul.w	fp, sl, fp
 8015156:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801515a:	fb0a fa06 	mul.w	sl, sl, r6
 801515e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015162:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015166:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801516a:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801516e:	445e      	add	r6, fp
 8015170:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015174:	0a36      	lsrs	r6, r6, #8
 8015176:	0a1b      	lsrs	r3, r3, #8
 8015178:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801517c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015180:	431e      	orrs	r6, r3
 8015182:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015186:	d019      	beq.n	80151bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 8015188:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801518c:	fb09 fa0a 	mul.w	sl, r9, sl
 8015190:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015194:	fb09 f904 	mul.w	r9, r9, r4
 8015198:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801519c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80151a0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80151a4:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80151a8:	4454      	add	r4, sl
 80151aa:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80151ae:	0a24      	lsrs	r4, r4, #8
 80151b0:	0a1b      	lsrs	r3, r3, #8
 80151b2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80151b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80151ba:	431c      	orrs	r4, r3
 80151bc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80151c0:	d019      	beq.n	80151f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 80151c2:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80151c6:	fb08 f909 	mul.w	r9, r8, r9
 80151ca:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80151ce:	fb08 f800 	mul.w	r8, r8, r0
 80151d2:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80151d6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80151da:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80151de:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80151e2:	4448      	add	r0, r9
 80151e4:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80151e8:	0a00      	lsrs	r0, r0, #8
 80151ea:	0a1b      	lsrs	r3, r3, #8
 80151ec:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80151f0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80151f4:	4318      	orrs	r0, r3
 80151f6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80151fa:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80151fe:	fb0c f808 	mul.w	r8, ip, r8
 8015202:	fb05 8803 	mla	r8, r5, r3, r8
 8015206:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801520a:	fb07 8803 	mla	r8, r7, r3, r8
 801520e:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8015212:	fb0e 8303 	mla	r3, lr, r3, r8
 8015216:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801521a:	fb0c f606 	mul.w	r6, ip, r6
 801521e:	0a1b      	lsrs	r3, r3, #8
 8015220:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015224:	fb05 6202 	mla	r2, r5, r2, r6
 8015228:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801522c:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8015230:	fb07 2703 	mla	r7, r7, r3, r2
 8015234:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8015238:	b295      	uxth	r5, r2
 801523a:	9a03      	ldr	r2, [sp, #12]
 801523c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015240:	436a      	muls	r2, r5
 8015242:	fb0e 7303 	mla	r3, lr, r3, r7
 8015246:	1c50      	adds	r0, r2, #1
 8015248:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801524c:	0a1b      	lsrs	r3, r3, #8
 801524e:	9a00      	ldr	r2, [sp, #0]
 8015250:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015254:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015258:	ea48 0303 	orr.w	r3, r8, r3
 801525c:	b2c0      	uxtb	r0, r0
 801525e:	fb12 f200 	smulbb	r2, r2, r0
 8015262:	0c1e      	lsrs	r6, r3, #16
 8015264:	fb06 2605 	mla	r6, r6, r5, r2
 8015268:	9a01      	ldr	r2, [sp, #4]
 801526a:	f3c3 2407 	ubfx	r4, r3, #8, #8
 801526e:	fb12 f200 	smulbb	r2, r2, r0
 8015272:	fb04 2205 	mla	r2, r4, r5, r2
 8015276:	b294      	uxth	r4, r2
 8015278:	9a02      	ldr	r2, [sp, #8]
 801527a:	b2db      	uxtb	r3, r3
 801527c:	fb12 f200 	smulbb	r2, r2, r0
 8015280:	fb03 2205 	mla	r2, r3, r5, r2
 8015284:	b2b6      	uxth	r6, r6
 8015286:	b292      	uxth	r2, r2
 8015288:	1c73      	adds	r3, r6, #1
 801528a:	1c50      	adds	r0, r2, #1
 801528c:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8015290:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8015294:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015298:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801529c:	4313      	orrs	r3, r2
 801529e:	1c62      	adds	r2, r4, #1
 80152a0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80152a4:	0952      	lsrs	r2, r2, #5
 80152a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80152aa:	4313      	orrs	r3, r2
 80152ac:	800b      	strh	r3, [r1, #0]
 80152ae:	b005      	add	sp, #20
 80152b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152b4:	0801e397 	.word	0x0801e397
 80152b8:	0801e8f5 	.word	0x0801e8f5
 80152bc:	0801e41f 	.word	0x0801e41f

080152c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80152c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152c4:	ed2d 8b08 	vpush	{d8-d11}
 80152c8:	b09b      	sub	sp, #108	; 0x6c
 80152ca:	eeb0 aa40 	vmov.f32	s20, s0
 80152ce:	9309      	str	r3, [sp, #36]	; 0x24
 80152d0:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 80152d4:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 80152d6:	9311      	str	r3, [sp, #68]	; 0x44
 80152d8:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80152dc:	9114      	str	r1, [sp, #80]	; 0x50
 80152de:	9317      	str	r3, [sp, #92]	; 0x5c
 80152e0:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80152e4:	9019      	str	r0, [sp, #100]	; 0x64
 80152e6:	6868      	ldr	r0, [r5, #4]
 80152e8:	9218      	str	r2, [sp, #96]	; 0x60
 80152ea:	fb00 1303 	mla	r3, r0, r3, r1
 80152ee:	6829      	ldr	r1, [r5, #0]
 80152f0:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80152f2:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 80152f6:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80152fa:	930c      	str	r3, [sp, #48]	; 0x30
 80152fc:	6813      	ldr	r3, [r2, #0]
 80152fe:	9313      	str	r3, [sp, #76]	; 0x4c
 8015300:	6853      	ldr	r3, [r2, #4]
 8015302:	3304      	adds	r3, #4
 8015304:	eef0 9a60 	vmov.f32	s19, s1
 8015308:	eeb0 9a41 	vmov.f32	s18, s2
 801530c:	eeb0 8a62 	vmov.f32	s16, s5
 8015310:	eef0 8a43 	vmov.f32	s17, s6
 8015314:	eef0 ba44 	vmov.f32	s23, s8
 8015318:	eeb0 ba64 	vmov.f32	s22, s9
 801531c:	eef0 aa45 	vmov.f32	s21, s10
 8015320:	9308      	str	r3, [sp, #32]
 8015322:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015324:	2b00      	cmp	r3, #0
 8015326:	dc03      	bgt.n	8015330 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015328:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801532a:	2b00      	cmp	r3, #0
 801532c:	f340 8363 	ble.w	80159f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8015330:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015332:	2b00      	cmp	r3, #0
 8015334:	f340 81ad 	ble.w	8015692 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8015338:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801533a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801533c:	1412      	asrs	r2, r2, #16
 801533e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015342:	d42f      	bmi.n	80153a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8015344:	1c51      	adds	r1, r2, #1
 8015346:	428c      	cmp	r4, r1
 8015348:	dd2f      	ble.n	80153aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801534a:	2b00      	cmp	r3, #0
 801534c:	db2d      	blt.n	80153aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801534e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015350:	1c59      	adds	r1, r3, #1
 8015352:	4288      	cmp	r0, r1
 8015354:	dd29      	ble.n	80153aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015356:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015358:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801535a:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801535c:	3b01      	subs	r3, #1
 801535e:	fb02 1203 	mla	r2, r2, r3, r1
 8015362:	1412      	asrs	r2, r2, #16
 8015364:	d42b      	bmi.n	80153be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015366:	3201      	adds	r2, #1
 8015368:	4294      	cmp	r4, r2
 801536a:	dd28      	ble.n	80153be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801536c:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801536e:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8015370:	fb02 1303 	mla	r3, r2, r3, r1
 8015374:	141b      	asrs	r3, r3, #16
 8015376:	d422      	bmi.n	80153be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015378:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801537a:	3301      	adds	r3, #1
 801537c:	429a      	cmp	r2, r3
 801537e:	dd1e      	ble.n	80153be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015380:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015382:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8015386:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 801538a:	9312      	str	r3, [sp, #72]	; 0x48
 801538c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801538e:	2b00      	cmp	r3, #0
 8015390:	f300 81ea 	bgt.w	8015768 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8015394:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015396:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015398:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801539c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80153a0:	930c      	str	r3, [sp, #48]	; 0x30
 80153a2:	e178      	b.n	8015696 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 80153a4:	1c51      	adds	r1, r2, #1
 80153a6:	f040 8165 	bne.w	8015674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80153aa:	42a2      	cmp	r2, r4
 80153ac:	f280 8162 	bge.w	8015674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80153b0:	1c5f      	adds	r7, r3, #1
 80153b2:	f2c0 815f 	blt.w	8015674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80153b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80153b8:	4293      	cmp	r3, r2
 80153ba:	f280 815b 	bge.w	8015674 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80153be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80153c0:	9316      	str	r3, [sp, #88]	; 0x58
 80153c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80153c4:	9312      	str	r3, [sp, #72]	; 0x48
 80153c6:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 80153ca:	9315      	str	r3, [sp, #84]	; 0x54
 80153cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80153ce:	2b00      	cmp	r3, #0
 80153d0:	dde0      	ble.n	8015394 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80153d2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80153d4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80153d6:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80153da:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80153dc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80153e0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80153e2:	1412      	asrs	r2, r2, #16
 80153e4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80153e8:	f100 81a5 	bmi.w	8015736 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 80153ec:	1c55      	adds	r5, r2, #1
 80153ee:	42ac      	cmp	r4, r5
 80153f0:	f340 81a3 	ble.w	801573a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 80153f4:	2b00      	cmp	r3, #0
 80153f6:	f2c0 81a0 	blt.w	801573a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 80153fa:	9f11      	ldr	r7, [sp, #68]	; 0x44
 80153fc:	1c5d      	adds	r5, r3, #1
 80153fe:	42af      	cmp	r7, r5
 8015400:	f340 819b 	ble.w	801573a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015404:	fb03 2304 	mla	r3, r3, r4, r2
 8015408:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801540a:	18d5      	adds	r5, r2, r3
 801540c:	5cd3      	ldrb	r3, [r2, r3]
 801540e:	9a08      	ldr	r2, [sp, #32]
 8015410:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8015414:	0e1f      	lsrs	r7, r3, #24
 8015416:	2800      	cmp	r0, #0
 8015418:	f000 817c 	beq.w	8015714 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 801541c:	786a      	ldrb	r2, [r5, #1]
 801541e:	9e08      	ldr	r6, [sp, #32]
 8015420:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8015424:	920d      	str	r2, [sp, #52]	; 0x34
 8015426:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801542a:	2900      	cmp	r1, #0
 801542c:	f000 817d 	beq.w	801572a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8015430:	192a      	adds	r2, r5, r4
 8015432:	5d2d      	ldrb	r5, [r5, r4]
 8015434:	7852      	ldrb	r2, [r2, #1]
 8015436:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 801543a:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 801543e:	950a      	str	r5, [sp, #40]	; 0x28
 8015440:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8015444:	920e      	str	r2, [sp, #56]	; 0x38
 8015446:	0e15      	lsrs	r5, r2, #24
 8015448:	b280      	uxth	r0, r0
 801544a:	b289      	uxth	r1, r1
 801544c:	fb00 fa01 	mul.w	sl, r0, r1
 8015450:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8015454:	0100      	lsls	r0, r0, #4
 8015456:	eba0 080a 	sub.w	r8, r0, sl
 801545a:	b289      	uxth	r1, r1
 801545c:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8015460:	fa1f f888 	uxth.w	r8, r8
 8015464:	1a52      	subs	r2, r2, r1
 8015466:	b292      	uxth	r2, r2
 8015468:	fb08 f00e 	mul.w	r0, r8, lr
 801546c:	fb02 0007 	mla	r0, r2, r7, r0
 8015470:	fb01 0009 	mla	r0, r1, r9, r0
 8015474:	fb0a 0005 	mla	r0, sl, r5, r0
 8015478:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801547c:	2800      	cmp	r0, #0
 801547e:	f000 80ea 	beq.w	8015656 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015482:	2fff      	cmp	r7, #255	; 0xff
 8015484:	d01a      	beq.n	80154bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 8015486:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801548a:	fb07 fc0c 	mul.w	ip, r7, ip
 801548e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015492:	435f      	muls	r7, r3
 8015494:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8015498:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801549c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80154a0:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 80154a4:	4463      	add	r3, ip
 80154a6:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 80154aa:	0a1b      	lsrs	r3, r3, #8
 80154ac:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80154b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80154b4:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80154b8:	ea43 030b 	orr.w	r3, r3, fp
 80154bc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80154c0:	d01e      	beq.n	8015500 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 80154c2:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80154c4:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80154c8:	fb0e fb0b 	mul.w	fp, lr, fp
 80154cc:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80154d0:	fb0e fe07 	mul.w	lr, lr, r7
 80154d4:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 80154d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80154dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80154e0:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 80154e4:	44dc      	add	ip, fp
 80154e6:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 80154ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80154ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80154f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80154f6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80154fa:	ea4c 060e 	orr.w	r6, ip, lr
 80154fe:	960d      	str	r6, [sp, #52]	; 0x34
 8015500:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015504:	d01e      	beq.n	8015544 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8015506:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015508:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 801550c:	fb09 fe0e 	mul.w	lr, r9, lr
 8015510:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015514:	fb09 f907 	mul.w	r9, r9, r7
 8015518:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801551c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015520:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015524:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8015528:	44f4      	add	ip, lr
 801552a:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801552e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015532:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015536:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801553a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801553e:	ea4c 0609 	orr.w	r6, ip, r9
 8015542:	960a      	str	r6, [sp, #40]	; 0x28
 8015544:	2dff      	cmp	r5, #255	; 0xff
 8015546:	d01c      	beq.n	8015582 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8015548:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801554a:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 801554e:	fb05 fe0e 	mul.w	lr, r5, lr
 8015552:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015556:	437d      	muls	r5, r7
 8015558:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801555c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015560:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015564:	f505 7780 	add.w	r7, r5, #256	; 0x100
 8015568:	44f4      	add	ip, lr
 801556a:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 801556e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015572:	0a2d      	lsrs	r5, r5, #8
 8015574:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015578:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801557c:	ea4c 0505 	orr.w	r5, ip, r5
 8015580:	950e      	str	r5, [sp, #56]	; 0x38
 8015582:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015584:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015586:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801558a:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801558e:	fb08 f505 	mul.w	r5, r8, r5
 8015592:	fb02 5507 	mla	r5, r2, r7, r5
 8015596:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 801559a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801559c:	fb01 5507 	mla	r5, r1, r7, r5
 80155a0:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 80155a4:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80155a6:	fb0a 5507 	mla	r5, sl, r7, r5
 80155aa:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80155ae:	fb08 f807 	mul.w	r8, r8, r7
 80155b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80155b6:	fb02 8303 	mla	r3, r2, r3, r8
 80155ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80155bc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80155be:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80155c2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80155c4:	fb01 330c 	mla	r3, r1, ip, r3
 80155c8:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80155cc:	fb0a 3a01 	mla	sl, sl, r1, r3
 80155d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80155d2:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80155d4:	881f      	ldrh	r7, [r3, #0]
 80155d6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80155d8:	0a2d      	lsrs	r5, r5, #8
 80155da:	4343      	muls	r3, r0
 80155dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80155e0:	1c58      	adds	r0, r3, #1
 80155e2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80155e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80155ea:	ea45 050a 	orr.w	r5, r5, sl
 80155ee:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80155f2:	0c29      	lsrs	r1, r5, #16
 80155f4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80155f8:	123b      	asrs	r3, r7, #8
 80155fa:	b2c0      	uxtb	r0, r0
 80155fc:	fb11 f102 	smulbb	r1, r1, r2
 8015600:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015604:	fb03 1300 	mla	r3, r3, r0, r1
 8015608:	b299      	uxth	r1, r3
 801560a:	10fa      	asrs	r2, r7, #3
 801560c:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8015610:	fb13 f306 	smulbb	r3, r3, r6
 8015614:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015618:	fb02 3200 	mla	r2, r2, r0, r3
 801561c:	b2ed      	uxtb	r5, r5
 801561e:	00fb      	lsls	r3, r7, #3
 8015620:	b2db      	uxtb	r3, r3
 8015622:	fb15 f506 	smulbb	r5, r5, r6
 8015626:	fb03 5500 	mla	r5, r3, r0, r5
 801562a:	b292      	uxth	r2, r2
 801562c:	b2ad      	uxth	r5, r5
 801562e:	1c4b      	adds	r3, r1, #1
 8015630:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8015634:	1c68      	adds	r0, r5, #1
 8015636:	1c51      	adds	r1, r2, #1
 8015638:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801563c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015640:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015644:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015648:	0952      	lsrs	r2, r2, #5
 801564a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801564e:	432b      	orrs	r3, r5
 8015650:	4313      	orrs	r3, r2
 8015652:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015654:	8013      	strh	r3, [r2, #0]
 8015656:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015658:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801565a:	3302      	adds	r3, #2
 801565c:	9312      	str	r3, [sp, #72]	; 0x48
 801565e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015660:	4413      	add	r3, r2
 8015662:	932d      	str	r3, [sp, #180]	; 0xb4
 8015664:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015666:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015668:	4413      	add	r3, r2
 801566a:	932e      	str	r3, [sp, #184]	; 0xb8
 801566c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801566e:	3b01      	subs	r3, #1
 8015670:	9316      	str	r3, [sp, #88]	; 0x58
 8015672:	e6ab      	b.n	80153cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8015674:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015676:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015678:	4413      	add	r3, r2
 801567a:	932d      	str	r3, [sp, #180]	; 0xb4
 801567c:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801567e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015680:	4413      	add	r3, r2
 8015682:	932e      	str	r3, [sp, #184]	; 0xb8
 8015684:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015686:	3b01      	subs	r3, #1
 8015688:	9309      	str	r3, [sp, #36]	; 0x24
 801568a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801568c:	3302      	adds	r3, #2
 801568e:	930c      	str	r3, [sp, #48]	; 0x30
 8015690:	e64e      	b.n	8015330 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015692:	f47f ae60 	bne.w	8015356 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8015696:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015698:	2b00      	cmp	r3, #0
 801569a:	f340 81ac 	ble.w	80159f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 801569e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80156a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80156a6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80156aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80156ac:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80156b0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80156b4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80156b8:	eef0 6a48 	vmov.f32	s13, s16
 80156bc:	ee69 7a27 	vmul.f32	s15, s18, s15
 80156c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80156c4:	ee37 8a48 	vsub.f32	s16, s14, s16
 80156c8:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80156cc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80156d0:	eef0 6a68 	vmov.f32	s13, s17
 80156d4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80156d8:	ee18 2a10 	vmov	r2, s16
 80156dc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80156e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80156e4:	ee18 2a90 	vmov	r2, s17
 80156e8:	932f      	str	r3, [sp, #188]	; 0xbc
 80156ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80156ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80156f0:	9330      	str	r3, [sp, #192]	; 0xc0
 80156f2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80156f4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80156f6:	3b01      	subs	r3, #1
 80156f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80156fc:	9314      	str	r3, [sp, #80]	; 0x50
 80156fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015700:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 8015704:	bf08      	it	eq
 8015706:	4613      	moveq	r3, r2
 8015708:	9309      	str	r3, [sp, #36]	; 0x24
 801570a:	eef0 8a67 	vmov.f32	s17, s15
 801570e:	eeb0 8a47 	vmov.f32	s16, s14
 8015712:	e606      	b.n	8015322 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8015714:	b161      	cbz	r1, 8015730 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8015716:	5d2a      	ldrb	r2, [r5, r4]
 8015718:	9d08      	ldr	r5, [sp, #32]
 801571a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801571e:	920a      	str	r2, [sp, #40]	; 0x28
 8015720:	ea4f 6912 	mov.w	r9, r2, lsr #24
 8015724:	25ff      	movs	r5, #255	; 0xff
 8015726:	46ae      	mov	lr, r5
 8015728:	e68e      	b.n	8015448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 801572a:	25ff      	movs	r5, #255	; 0xff
 801572c:	46a9      	mov	r9, r5
 801572e:	e68b      	b.n	8015448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8015730:	25ff      	movs	r5, #255	; 0xff
 8015732:	46a9      	mov	r9, r5
 8015734:	e7f7      	b.n	8015726 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8015736:	1c56      	adds	r6, r2, #1
 8015738:	d18d      	bne.n	8015656 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801573a:	4294      	cmp	r4, r2
 801573c:	dd8b      	ble.n	8015656 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801573e:	1c5d      	adds	r5, r3, #1
 8015740:	db89      	blt.n	8015656 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015742:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015744:	429d      	cmp	r5, r3
 8015746:	dd86      	ble.n	8015656 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015748:	e9cd 3003 	strd	r3, r0, [sp, #12]
 801574c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 801574e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015750:	9202      	str	r2, [sp, #8]
 8015752:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8015756:	e9cd 4300 	strd	r4, r3, [sp]
 801575a:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 801575e:	9b08      	ldr	r3, [sp, #32]
 8015760:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015762:	f7ff fc49 	bl	8014ff8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8015766:	e776      	b.n	8015656 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015768:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801576a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801576c:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8015770:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015772:	1412      	asrs	r2, r2, #16
 8015774:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8015778:	141b      	asrs	r3, r3, #16
 801577a:	fb04 2303 	mla	r3, r4, r3, r2
 801577e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015780:	18d5      	adds	r5, r2, r3
 8015782:	5cd3      	ldrb	r3, [r2, r3]
 8015784:	9a08      	ldr	r2, [sp, #32]
 8015786:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801578a:	0e1e      	lsrs	r6, r3, #24
 801578c:	2900      	cmp	r1, #0
 801578e:	f000 8121 	beq.w	80159d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8015792:	786a      	ldrb	r2, [r5, #1]
 8015794:	9f08      	ldr	r7, [sp, #32]
 8015796:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801579a:	920f      	str	r2, [sp, #60]	; 0x3c
 801579c:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 80157a0:	2800      	cmp	r0, #0
 80157a2:	f000 8122 	beq.w	80159ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 80157a6:	192a      	adds	r2, r5, r4
 80157a8:	5d2d      	ldrb	r5, [r5, r4]
 80157aa:	7852      	ldrb	r2, [r2, #1]
 80157ac:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 80157b0:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80157b4:	950b      	str	r5, [sp, #44]	; 0x2c
 80157b6:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80157ba:	9210      	str	r2, [sp, #64]	; 0x40
 80157bc:	0e15      	lsrs	r5, r2, #24
 80157be:	b289      	uxth	r1, r1
 80157c0:	b280      	uxth	r0, r0
 80157c2:	fb01 f900 	mul.w	r9, r1, r0
 80157c6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80157ca:	0109      	lsls	r1, r1, #4
 80157cc:	eba1 0e09 	sub.w	lr, r1, r9
 80157d0:	b280      	uxth	r0, r0
 80157d2:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80157d6:	fa1f fe8e 	uxth.w	lr, lr
 80157da:	1a12      	subs	r2, r2, r0
 80157dc:	b292      	uxth	r2, r2
 80157de:	fb0e f10c 	mul.w	r1, lr, ip
 80157e2:	fb02 1106 	mla	r1, r2, r6, r1
 80157e6:	fb00 1108 	mla	r1, r0, r8, r1
 80157ea:	fb09 1105 	mla	r1, r9, r5, r1
 80157ee:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80157f2:	2900      	cmp	r1, #0
 80157f4:	f000 80e0 	beq.w	80159b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 80157f8:	2eff      	cmp	r6, #255	; 0xff
 80157fa:	d016      	beq.n	801582a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 80157fc:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8015800:	4377      	muls	r7, r6
 8015802:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015806:	435e      	muls	r6, r3
 8015808:	0a3b      	lsrs	r3, r7, #8
 801580a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801580e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015812:	443b      	add	r3, r7
 8015814:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8015818:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801581c:	0a1b      	lsrs	r3, r3, #8
 801581e:	0a3f      	lsrs	r7, r7, #8
 8015820:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015824:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015828:	433b      	orrs	r3, r7
 801582a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801582e:	d01d      	beq.n	801586c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 8015830:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015832:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015834:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015838:	fb0c f606 	mul.w	r6, ip, r6
 801583c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015840:	fb0c fc07 	mul.w	ip, ip, r7
 8015844:	0a37      	lsrs	r7, r6, #8
 8015846:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801584a:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 801584e:	4437      	add	r7, r6
 8015850:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8015854:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8015858:	0a3f      	lsrs	r7, r7, #8
 801585a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801585e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015862:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015866:	ea47 060c 	orr.w	r6, r7, ip
 801586a:	960f      	str	r6, [sp, #60]	; 0x3c
 801586c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015870:	d01d      	beq.n	80158ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 8015872:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015874:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015878:	fb08 fc0c 	mul.w	ip, r8, ip
 801587c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015880:	fb08 f806 	mul.w	r8, r8, r6
 8015884:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8015888:	f508 7680 	add.w	r6, r8, #256	; 0x100
 801588c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015890:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015894:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8015898:	4467      	add	r7, ip
 801589a:	0a3f      	lsrs	r7, r7, #8
 801589c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80158a0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80158a4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80158a8:	ea47 0608 	orr.w	r6, r7, r8
 80158ac:	960b      	str	r6, [sp, #44]	; 0x2c
 80158ae:	2dff      	cmp	r5, #255	; 0xff
 80158b0:	d01a      	beq.n	80158e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 80158b2:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80158b4:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80158b8:	fb05 fc0c 	mul.w	ip, r5, ip
 80158bc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80158c0:	4375      	muls	r5, r6
 80158c2:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80158c6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80158ca:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80158ce:	f505 7680 	add.w	r6, r5, #256	; 0x100
 80158d2:	4467      	add	r7, ip
 80158d4:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80158d8:	0a3f      	lsrs	r7, r7, #8
 80158da:	0a2d      	lsrs	r5, r5, #8
 80158dc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80158e0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80158e4:	433d      	orrs	r5, r7
 80158e6:	9510      	str	r5, [sp, #64]	; 0x40
 80158e8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80158ea:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80158ee:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 80158f2:	fb0e f505 	mul.w	r5, lr, r5
 80158f6:	fb02 5506 	mla	r5, r2, r6, r5
 80158fa:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80158fc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015900:	fb00 5506 	mla	r5, r0, r6, r5
 8015904:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015906:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801590a:	fb09 5506 	mla	r5, r9, r6, r5
 801590e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015910:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015914:	fb0e fe06 	mul.w	lr, lr, r6
 8015918:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801591c:	fb02 e303 	mla	r3, r2, r3, lr
 8015920:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015922:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8015926:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015928:	fb00 3307 	mla	r3, r0, r7, r3
 801592c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8015930:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015934:	fb01 f10b 	mul.w	r1, r1, fp
 8015938:	0a2d      	lsrs	r5, r5, #8
 801593a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801593e:	f8ba 0000 	ldrh.w	r0, [sl]
 8015942:	1c4b      	adds	r3, r1, #1
 8015944:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015948:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801594c:	ea45 050c 	orr.w	r5, r5, ip
 8015950:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8015954:	1202      	asrs	r2, r0, #8
 8015956:	0c2b      	lsrs	r3, r5, #16
 8015958:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801595c:	b2c9      	uxtb	r1, r1
 801595e:	fb13 f30b 	smulbb	r3, r3, fp
 8015962:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015966:	fb02 3201 	mla	r2, r2, r1, r3
 801596a:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801596e:	10c3      	asrs	r3, r0, #3
 8015970:	b2ed      	uxtb	r5, r5
 8015972:	00c0      	lsls	r0, r0, #3
 8015974:	b2c0      	uxtb	r0, r0
 8015976:	fb15 f50b 	smulbb	r5, r5, fp
 801597a:	fb00 5001 	mla	r0, r0, r1, r5
 801597e:	b292      	uxth	r2, r2
 8015980:	fb16 f60b 	smulbb	r6, r6, fp
 8015984:	b280      	uxth	r0, r0
 8015986:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801598a:	fb03 6301 	mla	r3, r3, r1, r6
 801598e:	1c51      	adds	r1, r2, #1
 8015990:	1c46      	adds	r6, r0, #1
 8015992:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015996:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801599a:	b29b      	uxth	r3, r3
 801599c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80159a0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80159a4:	4332      	orrs	r2, r6
 80159a6:	1c5e      	adds	r6, r3, #1
 80159a8:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80159ac:	095b      	lsrs	r3, r3, #5
 80159ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80159b2:	431a      	orrs	r2, r3
 80159b4:	f8aa 2000 	strh.w	r2, [sl]
 80159b8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80159ba:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80159bc:	4413      	add	r3, r2
 80159be:	932d      	str	r3, [sp, #180]	; 0xb4
 80159c0:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80159c2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80159c4:	4413      	add	r3, r2
 80159c6:	932e      	str	r3, [sp, #184]	; 0xb8
 80159c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80159ca:	3b01      	subs	r3, #1
 80159cc:	f10a 0a02 	add.w	sl, sl, #2
 80159d0:	9312      	str	r3, [sp, #72]	; 0x48
 80159d2:	e4db      	b.n	801538c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80159d4:	b160      	cbz	r0, 80159f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80159d6:	5d2a      	ldrb	r2, [r5, r4]
 80159d8:	9d08      	ldr	r5, [sp, #32]
 80159da:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80159de:	920b      	str	r2, [sp, #44]	; 0x2c
 80159e0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80159e4:	25ff      	movs	r5, #255	; 0xff
 80159e6:	46ac      	mov	ip, r5
 80159e8:	e6e9      	b.n	80157be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 80159ea:	25ff      	movs	r5, #255	; 0xff
 80159ec:	46a8      	mov	r8, r5
 80159ee:	e6e6      	b.n	80157be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 80159f0:	25ff      	movs	r5, #255	; 0xff
 80159f2:	46a8      	mov	r8, r5
 80159f4:	e7f7      	b.n	80159e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 80159f6:	b01b      	add	sp, #108	; 0x6c
 80159f8:	ecbd 8b08 	vpop	{d8-d11}
 80159fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015a00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8015a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a04:	8808      	ldrh	r0, [r1, #0]
 8015a06:	b085      	sub	sp, #20
 8015a08:	1206      	asrs	r6, r0, #8
 8015a0a:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8015a0e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015a12:	9600      	str	r6, [sp, #0]
 8015a14:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015a18:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8015a1c:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015a20:	10c6      	asrs	r6, r0, #3
 8015a22:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015a26:	9601      	str	r6, [sp, #4]
 8015a28:	00c0      	lsls	r0, r0, #3
 8015a2a:	fb04 560c 	mla	r6, r4, ip, r5
 8015a2e:	b2c0      	uxtb	r0, r0
 8015a30:	4692      	mov	sl, r2
 8015a32:	eb02 0e06 	add.w	lr, r2, r6
 8015a36:	9a00      	ldr	r2, [sp, #0]
 8015a38:	9002      	str	r0, [sp, #8]
 8015a3a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8015a3e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8015a42:	9a01      	ldr	r2, [sp, #4]
 8015a44:	2c00      	cmp	r4, #0
 8015a46:	4698      	mov	r8, r3
 8015a48:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8015a4c:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8015a50:	db3e      	blt.n	8015ad0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8015a52:	45a1      	cmp	r9, r4
 8015a54:	dd3c      	ble.n	8015ad0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8015a56:	2d00      	cmp	r5, #0
 8015a58:	db38      	blt.n	8015acc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8015a5a:	45ac      	cmp	ip, r5
 8015a5c:	dd36      	ble.n	8015acc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8015a5e:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8015a62:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8015a66:	1c6e      	adds	r6, r5, #1
 8015a68:	d435      	bmi.n	8015ad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015a6a:	45b4      	cmp	ip, r6
 8015a6c:	dd33      	ble.n	8015ad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015a6e:	b393      	cbz	r3, 8015ad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015a70:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015a74:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8015a78:	3401      	adds	r4, #1
 8015a7a:	d430      	bmi.n	8015ade <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015a7c:	45a1      	cmp	r9, r4
 8015a7e:	dd2e      	ble.n	8015ade <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015a80:	b36f      	cbz	r7, 8015ade <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015a82:	2d00      	cmp	r5, #0
 8015a84:	db29      	blt.n	8015ada <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8015a86:	45ac      	cmp	ip, r5
 8015a88:	dd27      	ble.n	8015ada <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8015a8a:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8015a8e:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8015a92:	3501      	adds	r5, #1
 8015a94:	d407      	bmi.n	8015aa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015a96:	45ac      	cmp	ip, r5
 8015a98:	dd05      	ble.n	8015aa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015a9a:	b123      	cbz	r3, 8015aa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015a9c:	44f4      	add	ip, lr
 8015a9e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015aa2:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8015aa6:	2b0f      	cmp	r3, #15
 8015aa8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015aac:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015ab0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015ab4:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8015ab8:	d801      	bhi.n	8015abe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8015aba:	2f0f      	cmp	r7, #15
 8015abc:	d911      	bls.n	8015ae2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8015abe:	4b79      	ldr	r3, [pc, #484]	; (8015ca4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8015ac0:	4a79      	ldr	r2, [pc, #484]	; (8015ca8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8015ac2:	487a      	ldr	r0, [pc, #488]	; (8015cac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8015ac4:	f240 3173 	movw	r1, #883	; 0x373
 8015ac8:	f004 ff28 	bl	801a91c <__assert_func>
 8015acc:	4602      	mov	r2, r0
 8015ace:	e7ca      	b.n	8015a66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8015ad0:	4606      	mov	r6, r0
 8015ad2:	4602      	mov	r2, r0
 8015ad4:	e7d0      	b.n	8015a78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8015ad6:	4606      	mov	r6, r0
 8015ad8:	e7ce      	b.n	8015a78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8015ada:	4604      	mov	r4, r0
 8015adc:	e7d9      	b.n	8015a92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8015ade:	4604      	mov	r4, r0
 8015ae0:	e7e1      	b.n	8015aa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015ae2:	b29b      	uxth	r3, r3
 8015ae4:	b2bf      	uxth	r7, r7
 8015ae6:	fb03 fe07 	mul.w	lr, r3, r7
 8015aea:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015aee:	011b      	lsls	r3, r3, #4
 8015af0:	eba3 0c0e 	sub.w	ip, r3, lr
 8015af4:	b2bf      	uxth	r7, r7
 8015af6:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8015afa:	fa1f fc8c 	uxth.w	ip, ip
 8015afe:	1bed      	subs	r5, r5, r7
 8015b00:	b2ad      	uxth	r5, r5
 8015b02:	fb0c f30a 	mul.w	r3, ip, sl
 8015b06:	fb05 330b 	mla	r3, r5, fp, r3
 8015b0a:	fb07 3309 	mla	r3, r7, r9, r3
 8015b0e:	fb0e 3308 	mla	r3, lr, r8, r3
 8015b12:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015b16:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015b1a:	9303      	str	r3, [sp, #12]
 8015b1c:	d018      	beq.n	8015b50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8015b1e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015b22:	fb0b f303 	mul.w	r3, fp, r3
 8015b26:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015b2a:	fb0b fb02 	mul.w	fp, fp, r2
 8015b2e:	0a1a      	lsrs	r2, r3, #8
 8015b30:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015b34:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8015b38:	441a      	add	r2, r3
 8015b3a:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8015b3e:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8015b42:	0a12      	lsrs	r2, r2, #8
 8015b44:	0a1b      	lsrs	r3, r3, #8
 8015b46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015b4a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015b4e:	431a      	orrs	r2, r3
 8015b50:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015b54:	d019      	beq.n	8015b8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 8015b56:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015b5a:	fb0a fb0b 	mul.w	fp, sl, fp
 8015b5e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015b62:	fb0a fa06 	mul.w	sl, sl, r6
 8015b66:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015b6a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015b6e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015b72:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8015b76:	445e      	add	r6, fp
 8015b78:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015b7c:	0a36      	lsrs	r6, r6, #8
 8015b7e:	0a1b      	lsrs	r3, r3, #8
 8015b80:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015b84:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015b88:	431e      	orrs	r6, r3
 8015b8a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015b8e:	d019      	beq.n	8015bc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8015b90:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015b94:	fb09 fa0a 	mul.w	sl, r9, sl
 8015b98:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015b9c:	fb09 f904 	mul.w	r9, r9, r4
 8015ba0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015ba4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015ba8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015bac:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8015bb0:	4454      	add	r4, sl
 8015bb2:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8015bb6:	0a24      	lsrs	r4, r4, #8
 8015bb8:	0a1b      	lsrs	r3, r3, #8
 8015bba:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015bbe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015bc2:	431c      	orrs	r4, r3
 8015bc4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015bc8:	d019      	beq.n	8015bfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 8015bca:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8015bce:	fb08 f909 	mul.w	r9, r8, r9
 8015bd2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015bd6:	fb08 f800 	mul.w	r8, r8, r0
 8015bda:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8015bde:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015be2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015be6:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8015bea:	4448      	add	r0, r9
 8015bec:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015bf0:	0a00      	lsrs	r0, r0, #8
 8015bf2:	0a1b      	lsrs	r3, r3, #8
 8015bf4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015bf8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015bfc:	4318      	orrs	r0, r3
 8015bfe:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015c02:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015c06:	fb0c f808 	mul.w	r8, ip, r8
 8015c0a:	fb05 8803 	mla	r8, r5, r3, r8
 8015c0e:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8015c12:	fb07 8803 	mla	r8, r7, r3, r8
 8015c16:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8015c1a:	fb0e 8303 	mla	r3, lr, r3, r8
 8015c1e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015c22:	0a1b      	lsrs	r3, r3, #8
 8015c24:	fb0c f606 	mul.w	r6, ip, r6
 8015c28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015c2c:	fb05 6202 	mla	r2, r5, r2, r6
 8015c30:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8015c34:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8015c38:	fb07 2703 	mla	r7, r7, r3, r2
 8015c3c:	9a03      	ldr	r2, [sp, #12]
 8015c3e:	9c02      	ldr	r4, [sp, #8]
 8015c40:	9d01      	ldr	r5, [sp, #4]
 8015c42:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015c46:	fb0e 7303 	mla	r3, lr, r3, r7
 8015c4a:	43d0      	mvns	r0, r2
 8015c4c:	9a00      	ldr	r2, [sp, #0]
 8015c4e:	b2c0      	uxtb	r0, r0
 8015c50:	0a1b      	lsrs	r3, r3, #8
 8015c52:	4342      	muls	r2, r0
 8015c54:	4344      	muls	r4, r0
 8015c56:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015c5a:	ea48 0303 	orr.w	r3, r8, r3
 8015c5e:	4345      	muls	r5, r0
 8015c60:	4620      	mov	r0, r4
 8015c62:	1c54      	adds	r4, r2, #1
 8015c64:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8015c68:	0c1a      	lsrs	r2, r3, #16
 8015c6a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8015c6e:	4a10      	ldr	r2, [pc, #64]	; (8015cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8015c70:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8015c74:	1c44      	adds	r4, r0, #1
 8015c76:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8015c7a:	b2d8      	uxtb	r0, r3
 8015c7c:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8015c80:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8015c84:	1c68      	adds	r0, r5, #1
 8015c86:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 8015c8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015c8e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015c92:	00db      	lsls	r3, r3, #3
 8015c94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015c98:	4313      	orrs	r3, r2
 8015c9a:	800b      	strh	r3, [r1, #0]
 8015c9c:	b005      	add	sp, #20
 8015c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ca2:	bf00      	nop
 8015ca4:	0801e397 	.word	0x0801e397
 8015ca8:	0801e8f5 	.word	0x0801e8f5
 8015cac:	0801e41f 	.word	0x0801e41f
 8015cb0:	fffff800 	.word	0xfffff800

08015cb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015cb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cb8:	ed2d 8b08 	vpush	{d8-d11}
 8015cbc:	b097      	sub	sp, #92	; 0x5c
 8015cbe:	eeb0 aa40 	vmov.f32	s20, s0
 8015cc2:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8015cc4:	9307      	str	r3, [sp, #28]
 8015cc6:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8015cca:	9112      	str	r1, [sp, #72]	; 0x48
 8015ccc:	930f      	str	r3, [sp, #60]	; 0x3c
 8015cce:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8015cd2:	9015      	str	r0, [sp, #84]	; 0x54
 8015cd4:	6868      	ldr	r0, [r5, #4]
 8015cd6:	9214      	str	r2, [sp, #80]	; 0x50
 8015cd8:	fb00 1303 	mla	r3, r0, r3, r1
 8015cdc:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015cde:	6829      	ldr	r1, [r5, #0]
 8015ce0:	6855      	ldr	r5, [r2, #4]
 8015ce2:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8015ce6:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015cea:	930a      	str	r3, [sp, #40]	; 0x28
 8015cec:	6813      	ldr	r3, [r2, #0]
 8015cee:	9311      	str	r3, [sp, #68]	; 0x44
 8015cf0:	eef0 9a60 	vmov.f32	s19, s1
 8015cf4:	eeb0 9a41 	vmov.f32	s18, s2
 8015cf8:	eeb0 8a62 	vmov.f32	s16, s5
 8015cfc:	eef0 8a43 	vmov.f32	s17, s6
 8015d00:	eef0 ba44 	vmov.f32	s23, s8
 8015d04:	eeb0 ba64 	vmov.f32	s22, s9
 8015d08:	eef0 aa45 	vmov.f32	s21, s10
 8015d0c:	3504      	adds	r5, #4
 8015d0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015d10:	2b00      	cmp	r3, #0
 8015d12:	dc03      	bgt.n	8015d1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8015d14:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015d16:	2b00      	cmp	r3, #0
 8015d18:	f340 834d 	ble.w	80163b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8015d1c:	9b07      	ldr	r3, [sp, #28]
 8015d1e:	2b00      	cmp	r3, #0
 8015d20:	f340 819c 	ble.w	801605c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8015d24:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015d26:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015d28:	1412      	asrs	r2, r2, #16
 8015d2a:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015d2e:	d42d      	bmi.n	8015d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8015d30:	1c51      	adds	r1, r2, #1
 8015d32:	428c      	cmp	r4, r1
 8015d34:	dd2d      	ble.n	8015d92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015d36:	2b00      	cmp	r3, #0
 8015d38:	db2b      	blt.n	8015d92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015d3a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015d3c:	1c59      	adds	r1, r3, #1
 8015d3e:	4288      	cmp	r0, r1
 8015d40:	dd27      	ble.n	8015d92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015d42:	9b07      	ldr	r3, [sp, #28]
 8015d44:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015d46:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015d48:	3b01      	subs	r3, #1
 8015d4a:	fb02 1203 	mla	r2, r2, r3, r1
 8015d4e:	1412      	asrs	r2, r2, #16
 8015d50:	d429      	bmi.n	8015da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015d52:	3201      	adds	r2, #1
 8015d54:	4294      	cmp	r4, r2
 8015d56:	dd26      	ble.n	8015da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015d58:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015d5a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015d5c:	fb02 1303 	mla	r3, r2, r3, r1
 8015d60:	141b      	asrs	r3, r3, #16
 8015d62:	d420      	bmi.n	8015da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015d64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015d66:	3301      	adds	r3, #1
 8015d68:	429a      	cmp	r2, r3
 8015d6a:	dd1c      	ble.n	8015da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015d6c:	9b07      	ldr	r3, [sp, #28]
 8015d6e:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8015d72:	9310      	str	r3, [sp, #64]	; 0x40
 8015d74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d76:	2b00      	cmp	r3, #0
 8015d78:	f300 81da 	bgt.w	8016130 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8015d7c:	9b07      	ldr	r3, [sp, #28]
 8015d7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015d80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015d88:	930a      	str	r3, [sp, #40]	; 0x28
 8015d8a:	e169      	b.n	8016060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8015d8c:	1c51      	adds	r1, r2, #1
 8015d8e:	f040 8156 	bne.w	801603e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015d92:	42a2      	cmp	r2, r4
 8015d94:	f280 8153 	bge.w	801603e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015d98:	1c5a      	adds	r2, r3, #1
 8015d9a:	f2c0 8150 	blt.w	801603e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015d9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015da0:	4293      	cmp	r3, r2
 8015da2:	f280 814c 	bge.w	801603e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015da6:	9b07      	ldr	r3, [sp, #28]
 8015da8:	9313      	str	r3, [sp, #76]	; 0x4c
 8015daa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015dac:	9310      	str	r3, [sp, #64]	; 0x40
 8015dae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015db0:	2b00      	cmp	r3, #0
 8015db2:	dde3      	ble.n	8015d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8015db4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015db6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015db8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015dbc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015dbe:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8015dc2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015dc4:	1412      	asrs	r2, r2, #16
 8015dc6:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015dca:	f100 8198 	bmi.w	80160fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8015dce:	1c56      	adds	r6, r2, #1
 8015dd0:	42b4      	cmp	r4, r6
 8015dd2:	f340 8196 	ble.w	8016102 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015dd6:	2b00      	cmp	r3, #0
 8015dd8:	f2c0 8193 	blt.w	8016102 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015ddc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015dde:	1c5e      	adds	r6, r3, #1
 8015de0:	42b7      	cmp	r7, r6
 8015de2:	f340 818e 	ble.w	8016102 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8015de6:	fb03 2304 	mla	r3, r3, r4, r2
 8015dea:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015dec:	18d6      	adds	r6, r2, r3
 8015dee:	5cd3      	ldrb	r3, [r2, r3]
 8015df0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8015df4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8015df8:	2900      	cmp	r1, #0
 8015dfa:	f000 8170 	beq.w	80160de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8015dfe:	7872      	ldrb	r2, [r6, #1]
 8015e00:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015e04:	920b      	str	r2, [sp, #44]	; 0x2c
 8015e06:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015e0a:	2800      	cmp	r0, #0
 8015e0c:	f000 8171 	beq.w	80160f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8015e10:	1932      	adds	r2, r6, r4
 8015e12:	5d36      	ldrb	r6, [r6, r4]
 8015e14:	7852      	ldrb	r2, [r2, #1]
 8015e16:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8015e1a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015e1e:	9608      	str	r6, [sp, #32]
 8015e20:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015e24:	920c      	str	r2, [sp, #48]	; 0x30
 8015e26:	0e16      	lsrs	r6, r2, #24
 8015e28:	b289      	uxth	r1, r1
 8015e2a:	b280      	uxth	r0, r0
 8015e2c:	fb01 fb00 	mul.w	fp, r1, r0
 8015e30:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8015e34:	0109      	lsls	r1, r1, #4
 8015e36:	eba1 090b 	sub.w	r9, r1, fp
 8015e3a:	b280      	uxth	r0, r0
 8015e3c:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8015e40:	fa1f f989 	uxth.w	r9, r9
 8015e44:	1a12      	subs	r2, r2, r0
 8015e46:	b292      	uxth	r2, r2
 8015e48:	fb09 f108 	mul.w	r1, r9, r8
 8015e4c:	fb02 110c 	mla	r1, r2, ip, r1
 8015e50:	fb00 110a 	mla	r1, r0, sl, r1
 8015e54:	fb0b 1106 	mla	r1, fp, r6, r1
 8015e58:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015e5c:	2900      	cmp	r1, #0
 8015e5e:	f000 80df 	beq.w	8016020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015e62:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015e66:	d01b      	beq.n	8015ea0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 8015e68:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8015e6c:	fb0c fe0e 	mul.w	lr, ip, lr
 8015e70:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015e74:	fb0c fc03 	mul.w	ip, ip, r3
 8015e78:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8015e7c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015e80:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015e84:	4473      	add	r3, lr
 8015e86:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8015e8a:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8015e8e:	0a1b      	lsrs	r3, r3, #8
 8015e90:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015e94:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015e98:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015e9c:	ea43 030e 	orr.w	r3, r3, lr
 8015ea0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015ea4:	d01e      	beq.n	8015ee4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8015ea6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8015ea8:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8015eac:	fb08 fc0c 	mul.w	ip, r8, ip
 8015eb0:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8015eb4:	fb08 f80e 	mul.w	r8, r8, lr
 8015eb8:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8015ebc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015ec0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015ec4:	44e6      	add	lr, ip
 8015ec6:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8015eca:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8015ece:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015ed2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015ed6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015eda:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8015ede:	ea4e 0708 	orr.w	r7, lr, r8
 8015ee2:	970b      	str	r7, [sp, #44]	; 0x2c
 8015ee4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015ee8:	d01e      	beq.n	8015f28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8015eea:	9f08      	ldr	r7, [sp, #32]
 8015eec:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8015ef0:	fb0a f808 	mul.w	r8, sl, r8
 8015ef4:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015ef8:	fb0a fa0c 	mul.w	sl, sl, ip
 8015efc:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8015f00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015f04:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015f08:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015f0c:	44c6      	add	lr, r8
 8015f0e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015f12:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015f16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015f1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015f1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015f22:	ea4e 070a 	orr.w	r7, lr, sl
 8015f26:	9708      	str	r7, [sp, #32]
 8015f28:	2eff      	cmp	r6, #255	; 0xff
 8015f2a:	d01d      	beq.n	8015f68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8015f2c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015f2e:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8015f32:	fb06 f808 	mul.w	r8, r6, r8
 8015f36:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015f3a:	fb06 f60c 	mul.w	r6, r6, ip
 8015f3e:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8015f42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015f46:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015f4a:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8015f4e:	44c6      	add	lr, r8
 8015f50:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8015f54:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015f58:	0a36      	lsrs	r6, r6, #8
 8015f5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015f5e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015f62:	ea4e 0606 	orr.w	r6, lr, r6
 8015f66:	960c      	str	r6, [sp, #48]	; 0x30
 8015f68:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015f6a:	9f08      	ldr	r7, [sp, #32]
 8015f6c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015f70:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015f74:	fb09 f606 	mul.w	r6, r9, r6
 8015f78:	fb02 660c 	mla	r6, r2, ip, r6
 8015f7c:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8015f80:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015f82:	fb00 660c 	mla	r6, r0, ip, r6
 8015f86:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8015f8a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8015f8c:	fb0b 660c 	mla	r6, fp, ip, r6
 8015f90:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015f94:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015f98:	fb09 f90c 	mul.w	r9, r9, ip
 8015f9c:	fb02 9303 	mla	r3, r2, r3, r9
 8015fa0:	9a08      	ldr	r2, [sp, #32]
 8015fa2:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8015fa6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015fa8:	fb00 330e 	mla	r3, r0, lr, r3
 8015fac:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8015fb0:	fb0b 3b00 	mla	fp, fp, r0, r3
 8015fb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015fb6:	881b      	ldrh	r3, [r3, #0]
 8015fb8:	43c9      	mvns	r1, r1
 8015fba:	1218      	asrs	r0, r3, #8
 8015fbc:	b2c9      	uxtb	r1, r1
 8015fbe:	10da      	asrs	r2, r3, #3
 8015fc0:	0a36      	lsrs	r6, r6, #8
 8015fc2:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015fc6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015fca:	00db      	lsls	r3, r3, #3
 8015fcc:	4348      	muls	r0, r1
 8015fce:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015fd2:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8015fd6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015fda:	b2db      	uxtb	r3, r3
 8015fdc:	434b      	muls	r3, r1
 8015fde:	ea46 060b 	orr.w	r6, r6, fp
 8015fe2:	434a      	muls	r2, r1
 8015fe4:	1c41      	adds	r1, r0, #1
 8015fe6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8015fea:	0c30      	lsrs	r0, r6, #16
 8015fec:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8015ff0:	494e      	ldr	r1, [pc, #312]	; (801612c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 8015ff2:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8015ff6:	1c59      	adds	r1, r3, #1
 8015ff8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8015ffc:	b2f3      	uxtb	r3, r6
 8015ffe:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8016002:	1c51      	adds	r1, r2, #1
 8016004:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016008:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801600c:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8016010:	00f6      	lsls	r6, r6, #3
 8016012:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8016016:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801601a:	431e      	orrs	r6, r3
 801601c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801601e:	801e      	strh	r6, [r3, #0]
 8016020:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016022:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016024:	3302      	adds	r3, #2
 8016026:	9310      	str	r3, [sp, #64]	; 0x40
 8016028:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801602a:	4413      	add	r3, r2
 801602c:	9329      	str	r3, [sp, #164]	; 0xa4
 801602e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016030:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016032:	4413      	add	r3, r2
 8016034:	932a      	str	r3, [sp, #168]	; 0xa8
 8016036:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016038:	3b01      	subs	r3, #1
 801603a:	9313      	str	r3, [sp, #76]	; 0x4c
 801603c:	e6b7      	b.n	8015dae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801603e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016040:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016042:	4413      	add	r3, r2
 8016044:	9329      	str	r3, [sp, #164]	; 0xa4
 8016046:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016048:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801604a:	4413      	add	r3, r2
 801604c:	932a      	str	r3, [sp, #168]	; 0xa8
 801604e:	9b07      	ldr	r3, [sp, #28]
 8016050:	3b01      	subs	r3, #1
 8016052:	9307      	str	r3, [sp, #28]
 8016054:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016056:	3302      	adds	r3, #2
 8016058:	930a      	str	r3, [sp, #40]	; 0x28
 801605a:	e65f      	b.n	8015d1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801605c:	f47f ae71 	bne.w	8015d42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8016060:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016062:	2b00      	cmp	r3, #0
 8016064:	f340 81a7 	ble.w	80163b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8016068:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801606c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016070:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016074:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016076:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801607a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801607e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016082:	eef0 6a48 	vmov.f32	s13, s16
 8016086:	ee69 7a27 	vmul.f32	s15, s18, s15
 801608a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801608e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016092:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8016096:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801609a:	eef0 6a68 	vmov.f32	s13, s17
 801609e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80160a2:	ee18 2a10 	vmov	r2, s16
 80160a6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80160aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80160ae:	ee18 2a90 	vmov	r2, s17
 80160b2:	932b      	str	r3, [sp, #172]	; 0xac
 80160b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80160b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80160ba:	932c      	str	r3, [sp, #176]	; 0xb0
 80160bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80160be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80160c0:	3b01      	subs	r3, #1
 80160c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80160c6:	9312      	str	r3, [sp, #72]	; 0x48
 80160c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80160ca:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80160ce:	bf08      	it	eq
 80160d0:	4613      	moveq	r3, r2
 80160d2:	9307      	str	r3, [sp, #28]
 80160d4:	eef0 8a67 	vmov.f32	s17, s15
 80160d8:	eeb0 8a47 	vmov.f32	s16, s14
 80160dc:	e617      	b.n	8015d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 80160de:	b158      	cbz	r0, 80160f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 80160e0:	5d32      	ldrb	r2, [r6, r4]
 80160e2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80160e6:	9208      	str	r2, [sp, #32]
 80160e8:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 80160ec:	26ff      	movs	r6, #255	; 0xff
 80160ee:	46b0      	mov	r8, r6
 80160f0:	e69a      	b.n	8015e28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 80160f2:	26ff      	movs	r6, #255	; 0xff
 80160f4:	46b2      	mov	sl, r6
 80160f6:	e697      	b.n	8015e28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 80160f8:	26ff      	movs	r6, #255	; 0xff
 80160fa:	46b2      	mov	sl, r6
 80160fc:	e7f7      	b.n	80160ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 80160fe:	1c57      	adds	r7, r2, #1
 8016100:	d18e      	bne.n	8016020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016102:	4294      	cmp	r4, r2
 8016104:	dd8c      	ble.n	8016020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016106:	1c5e      	adds	r6, r3, #1
 8016108:	db8a      	blt.n	8016020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801610a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801610c:	429e      	cmp	r6, r3
 801610e:	dd87      	ble.n	8016020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016110:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8016114:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8016118:	e9cd 4600 	strd	r4, r6, [sp]
 801611c:	462b      	mov	r3, r5
 801611e:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 8016122:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016124:	f7ff fc6c 	bl	8015a00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8016128:	e77a      	b.n	8016020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801612a:	bf00      	nop
 801612c:	fffff800 	.word	0xfffff800
 8016130:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016132:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016134:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016138:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801613a:	1409      	asrs	r1, r1, #16
 801613c:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016140:	141b      	asrs	r3, r3, #16
 8016142:	fb04 1303 	mla	r3, r4, r3, r1
 8016146:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016148:	18ce      	adds	r6, r1, r3
 801614a:	5ccb      	ldrb	r3, [r1, r3]
 801614c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8016150:	0e1f      	lsrs	r7, r3, #24
 8016152:	2a00      	cmp	r2, #0
 8016154:	f000 811f 	beq.w	8016396 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8016158:	7871      	ldrb	r1, [r6, #1]
 801615a:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 801615e:	910d      	str	r1, [sp, #52]	; 0x34
 8016160:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8016164:	2800      	cmp	r0, #0
 8016166:	f000 8120 	beq.w	80163aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 801616a:	1931      	adds	r1, r6, r4
 801616c:	5d36      	ldrb	r6, [r6, r4]
 801616e:	7849      	ldrb	r1, [r1, #1]
 8016170:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8016174:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016178:	9609      	str	r6, [sp, #36]	; 0x24
 801617a:	ea4f 6916 	mov.w	r9, r6, lsr #24
 801617e:	910e      	str	r1, [sp, #56]	; 0x38
 8016180:	0e0e      	lsrs	r6, r1, #24
 8016182:	b292      	uxth	r2, r2
 8016184:	b280      	uxth	r0, r0
 8016186:	fb02 fa00 	mul.w	sl, r2, r0
 801618a:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801618e:	0112      	lsls	r2, r2, #4
 8016190:	eba2 080a 	sub.w	r8, r2, sl
 8016194:	b280      	uxth	r0, r0
 8016196:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801619a:	fa1f f888 	uxth.w	r8, r8
 801619e:	1a09      	subs	r1, r1, r0
 80161a0:	b289      	uxth	r1, r1
 80161a2:	fb08 f20e 	mul.w	r2, r8, lr
 80161a6:	fb01 2207 	mla	r2, r1, r7, r2
 80161aa:	fb00 2209 	mla	r2, r0, r9, r2
 80161ae:	fb0a 2206 	mla	r2, sl, r6, r2
 80161b2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80161b6:	9213      	str	r2, [sp, #76]	; 0x4c
 80161b8:	2a00      	cmp	r2, #0
 80161ba:	f000 80de 	beq.w	801637a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 80161be:	2fff      	cmp	r7, #255	; 0xff
 80161c0:	d01a      	beq.n	80161f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 80161c2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80161c6:	fb07 fc0c 	mul.w	ip, r7, ip
 80161ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161ce:	435f      	muls	r7, r3
 80161d0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80161d4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80161d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80161dc:	4463      	add	r3, ip
 80161de:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 80161e2:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 80161e6:	0a1b      	lsrs	r3, r3, #8
 80161e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80161ec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80161f0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80161f4:	ea43 030c 	orr.w	r3, r3, ip
 80161f8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80161fc:	d01f      	beq.n	801623e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 80161fe:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016200:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016202:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016206:	fb0e f707 	mul.w	r7, lr, r7
 801620a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801620e:	fb0e fe0c 	mul.w	lr, lr, ip
 8016212:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016216:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801621a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801621e:	44bc      	add	ip, r7
 8016220:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8016224:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8016228:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801622c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016230:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016234:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016238:	ea4c 020e 	orr.w	r2, ip, lr
 801623c:	920d      	str	r2, [sp, #52]	; 0x34
 801623e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016242:	d01e      	beq.n	8016282 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 8016244:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016246:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801624a:	fb09 fe0e 	mul.w	lr, r9, lr
 801624e:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016252:	fb09 f907 	mul.w	r9, r9, r7
 8016256:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801625a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801625e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016262:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8016266:	44f4      	add	ip, lr
 8016268:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801626c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016270:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016274:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016278:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801627c:	ea4c 0209 	orr.w	r2, ip, r9
 8016280:	9209      	str	r2, [sp, #36]	; 0x24
 8016282:	2eff      	cmp	r6, #255	; 0xff
 8016284:	d01c      	beq.n	80162c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 8016286:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016288:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801628c:	fb06 fe0e 	mul.w	lr, r6, lr
 8016290:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016294:	437e      	muls	r6, r7
 8016296:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801629a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801629e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80162a2:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80162a6:	44f4      	add	ip, lr
 80162a8:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80162ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80162b0:	0a36      	lsrs	r6, r6, #8
 80162b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80162b6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80162ba:	ea4c 0206 	orr.w	r2, ip, r6
 80162be:	920e      	str	r2, [sp, #56]	; 0x38
 80162c0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80162c2:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 80162c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80162c8:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80162cc:	fb08 f606 	mul.w	r6, r8, r6
 80162d0:	fb01 6607 	mla	r6, r1, r7, r6
 80162d4:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 80162d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80162da:	fb00 6607 	mla	r6, r0, r7, r6
 80162de:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 80162e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80162e4:	fb0a 6607 	mla	r6, sl, r7, r6
 80162e8:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80162ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80162ee:	fb08 f807 	mul.w	r8, r8, r7
 80162f2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80162f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80162fa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80162fc:	fb01 8303 	mla	r3, r1, r3, r8
 8016300:	fb00 330c 	mla	r3, r0, ip, r3
 8016304:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8016308:	fb0a 3e0e 	mla	lr, sl, lr, r3
 801630c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801630e:	f8bb 3000 	ldrh.w	r3, [fp]
 8016312:	43d2      	mvns	r2, r2
 8016314:	1218      	asrs	r0, r3, #8
 8016316:	b2d2      	uxtb	r2, r2
 8016318:	0a36      	lsrs	r6, r6, #8
 801631a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801631e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016322:	4350      	muls	r0, r2
 8016324:	10d9      	asrs	r1, r3, #3
 8016326:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801632a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801632e:	00db      	lsls	r3, r3, #3
 8016330:	ea46 060e 	orr.w	r6, r6, lr
 8016334:	1c47      	adds	r7, r0, #1
 8016336:	b2db      	uxtb	r3, r3
 8016338:	4353      	muls	r3, r2
 801633a:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 801633e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016342:	0c37      	lsrs	r7, r6, #16
 8016344:	4351      	muls	r1, r2
 8016346:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 801634a:	4a1d      	ldr	r2, [pc, #116]	; (80163c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 801634c:	1c5f      	adds	r7, r3, #1
 801634e:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8016352:	b2f7      	uxtb	r7, r6
 8016354:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8016358:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801635c:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016360:	1c4b      	adds	r3, r1, #1
 8016362:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8016366:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801636a:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 801636e:	00f6      	lsls	r6, r6, #3
 8016370:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016374:	4330      	orrs	r0, r6
 8016376:	f8ab 0000 	strh.w	r0, [fp]
 801637a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801637c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801637e:	4413      	add	r3, r2
 8016380:	9329      	str	r3, [sp, #164]	; 0xa4
 8016382:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016384:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016386:	4413      	add	r3, r2
 8016388:	932a      	str	r3, [sp, #168]	; 0xa8
 801638a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801638c:	3b01      	subs	r3, #1
 801638e:	f10b 0b02 	add.w	fp, fp, #2
 8016392:	9310      	str	r3, [sp, #64]	; 0x40
 8016394:	e4ee      	b.n	8015d74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8016396:	b158      	cbz	r0, 80163b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8016398:	5d31      	ldrb	r1, [r6, r4]
 801639a:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 801639e:	9109      	str	r1, [sp, #36]	; 0x24
 80163a0:	ea4f 6911 	mov.w	r9, r1, lsr #24
 80163a4:	26ff      	movs	r6, #255	; 0xff
 80163a6:	46b6      	mov	lr, r6
 80163a8:	e6eb      	b.n	8016182 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80163aa:	26ff      	movs	r6, #255	; 0xff
 80163ac:	46b1      	mov	r9, r6
 80163ae:	e6e8      	b.n	8016182 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80163b0:	26ff      	movs	r6, #255	; 0xff
 80163b2:	46b1      	mov	r9, r6
 80163b4:	e7f7      	b.n	80163a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 80163b6:	b017      	add	sp, #92	; 0x5c
 80163b8:	ecbd 8b08 	vpop	{d8-d11}
 80163bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163c0:	fffff800 	.word	0xfffff800

080163c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80163c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163c8:	b087      	sub	sp, #28
 80163ca:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 80163ce:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 80163d2:	9105      	str	r1, [sp, #20]
 80163d4:	fb00 e604 	mla	r6, r0, r4, lr
 80163d8:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 80163dc:	9102      	str	r1, [sp, #8]
 80163de:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 80163e2:	9103      	str	r1, [sp, #12]
 80163e4:	9905      	ldr	r1, [sp, #20]
 80163e6:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 80163ea:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80163ee:	8809      	ldrh	r1, [r1, #0]
 80163f0:	2800      	cmp	r0, #0
 80163f2:	eb03 0a06 	add.w	sl, r3, r6
 80163f6:	f2c0 80ca 	blt.w	801658e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 80163fa:	4287      	cmp	r7, r0
 80163fc:	f340 80c7 	ble.w	801658e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8016400:	f1be 0f00 	cmp.w	lr, #0
 8016404:	f2c0 80bf 	blt.w	8016586 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8016408:	4574      	cmp	r4, lr
 801640a:	f340 80bc 	ble.w	8016586 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 801640e:	f813 c006 	ldrb.w	ip, [r3, r6]
 8016412:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 8016416:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801641a:	d01c      	beq.n	8016456 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 801641c:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8016420:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8016424:	4372      	muls	r2, r6
 8016426:	f64f 081f 	movw	r8, #63519	; 0xf81f
 801642a:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 801642e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016432:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016436:	fb0c f609 	mul.w	r6, ip, r9
 801643a:	eb03 0902 	add.w	r9, r3, r2
 801643e:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8016442:	f106 0820 	add.w	r8, r6, #32
 8016446:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 801644a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801644e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016452:	ea49 0908 	orr.w	r9, r9, r8
 8016456:	fa1f f989 	uxth.w	r9, r9
 801645a:	f11e 0301 	adds.w	r3, lr, #1
 801645e:	f100 809b 	bmi.w	8016598 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016462:	429c      	cmp	r4, r3
 8016464:	f340 8098 	ble.w	8016598 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016468:	2d00      	cmp	r5, #0
 801646a:	f000 8095 	beq.w	8016598 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 801646e:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8016472:	9b03      	ldr	r3, [sp, #12]
 8016474:	2eff      	cmp	r6, #255	; 0xff
 8016476:	885b      	ldrh	r3, [r3, #2]
 8016478:	d01b      	beq.n	80164b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 801647a:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801647e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016482:	fb08 f202 	mul.w	r2, r8, r2
 8016486:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801648a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801648e:	fb06 f803 	mul.w	r8, r6, r3
 8016492:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016496:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801649a:	441a      	add	r2, r3
 801649c:	f108 0320 	add.w	r3, r8, #32
 80164a0:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80164a4:	0a1b      	lsrs	r3, r3, #8
 80164a6:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80164aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80164ae:	ea4b 0303 	orr.w	r3, fp, r3
 80164b2:	b29b      	uxth	r3, r3
 80164b4:	9301      	str	r3, [sp, #4]
 80164b6:	3001      	adds	r0, #1
 80164b8:	d474      	bmi.n	80165a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80164ba:	4287      	cmp	r7, r0
 80164bc:	dd72      	ble.n	80165a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80164be:	9a02      	ldr	r2, [sp, #8]
 80164c0:	2a00      	cmp	r2, #0
 80164c2:	f000 8121 	beq.w	8016708 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 80164c6:	f1be 0f00 	cmp.w	lr, #0
 80164ca:	db68      	blt.n	801659e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 80164cc:	4574      	cmp	r4, lr
 80164ce:	dd66      	ble.n	801659e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 80164d0:	f81a 7004 	ldrb.w	r7, [sl, r4]
 80164d4:	9a03      	ldr	r2, [sp, #12]
 80164d6:	2fff      	cmp	r7, #255	; 0xff
 80164d8:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 80164dc:	d01c      	beq.n	8016518 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 80164de:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 80164e2:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80164e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80164ea:	fb07 fb00 	mul.w	fp, r7, r0
 80164ee:	fb08 f802 	mul.w	r8, r8, r2
 80164f2:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80164f6:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 80164fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80164fe:	4490      	add	r8, r2
 8016500:	f10b 0220 	add.w	r2, fp, #32
 8016504:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8016508:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801650c:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8016510:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016514:	ea40 000b 	orr.w	r0, r0, fp
 8016518:	b280      	uxth	r0, r0
 801651a:	f11e 0e01 	adds.w	lr, lr, #1
 801651e:	d446      	bmi.n	80165ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8016520:	4574      	cmp	r4, lr
 8016522:	dd44      	ble.n	80165ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8016524:	2d00      	cmp	r5, #0
 8016526:	d045      	beq.n	80165b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8016528:	1c62      	adds	r2, r4, #1
 801652a:	9b03      	ldr	r3, [sp, #12]
 801652c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016530:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016534:	2cff      	cmp	r4, #255	; 0xff
 8016536:	d01c      	beq.n	8016572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8016538:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 801653c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016540:	fb08 fe0e 	mul.w	lr, r8, lr
 8016544:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8016548:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801654c:	fb04 f802 	mul.w	r8, r4, r2
 8016550:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8016554:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016558:	4472      	add	r2, lr
 801655a:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 801655e:	f108 0a20 	add.w	sl, r8, #32
 8016562:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8016566:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801656a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801656e:	ea42 020a 	orr.w	r2, r2, sl
 8016572:	b292      	uxth	r2, r2
 8016574:	2d0f      	cmp	r5, #15
 8016576:	d91f      	bls.n	80165b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 8016578:	4b67      	ldr	r3, [pc, #412]	; (8016718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 801657a:	4a68      	ldr	r2, [pc, #416]	; (801671c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 801657c:	4868      	ldr	r0, [pc, #416]	; (8016720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 801657e:	f240 3173 	movw	r1, #883	; 0x373
 8016582:	f004 f9cb 	bl	801a91c <__assert_func>
 8016586:	4689      	mov	r9, r1
 8016588:	f04f 0cff 	mov.w	ip, #255	; 0xff
 801658c:	e765      	b.n	801645a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 801658e:	26ff      	movs	r6, #255	; 0xff
 8016590:	9101      	str	r1, [sp, #4]
 8016592:	4689      	mov	r9, r1
 8016594:	46b4      	mov	ip, r6
 8016596:	e78e      	b.n	80164b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8016598:	9101      	str	r1, [sp, #4]
 801659a:	26ff      	movs	r6, #255	; 0xff
 801659c:	e78b      	b.n	80164b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 801659e:	4608      	mov	r0, r1
 80165a0:	27ff      	movs	r7, #255	; 0xff
 80165a2:	e7ba      	b.n	801651a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 80165a4:	24ff      	movs	r4, #255	; 0xff
 80165a6:	460a      	mov	r2, r1
 80165a8:	4608      	mov	r0, r1
 80165aa:	4627      	mov	r7, r4
 80165ac:	e7e2      	b.n	8016574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80165ae:	460a      	mov	r2, r1
 80165b0:	24ff      	movs	r4, #255	; 0xff
 80165b2:	e7df      	b.n	8016574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80165b4:	460a      	mov	r2, r1
 80165b6:	24ff      	movs	r4, #255	; 0xff
 80165b8:	9b02      	ldr	r3, [sp, #8]
 80165ba:	2b0f      	cmp	r3, #15
 80165bc:	d8dc      	bhi.n	8016578 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 80165be:	f8bd e008 	ldrh.w	lr, [sp, #8]
 80165c2:	fa1f f885 	uxth.w	r8, r5
 80165c6:	fb08 fa0e 	mul.w	sl, r8, lr
 80165ca:	ea4f 1308 	mov.w	r3, r8, lsl #4
 80165ce:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 80165d2:	9303      	str	r3, [sp, #12]
 80165d4:	fa1f f38e 	uxth.w	r3, lr
 80165d8:	9304      	str	r3, [sp, #16]
 80165da:	ea4f 4809 	mov.w	r8, r9, lsl #16
 80165de:	9b02      	ldr	r3, [sp, #8]
 80165e0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80165e4:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 80165e8:	fb15 fe03 	smulbb	lr, r5, r3
 80165ec:	ea48 0809 	orr.w	r8, r8, r9
 80165f0:	f1c3 0910 	rsb	r9, r3, #16
 80165f4:	9b01      	ldr	r3, [sp, #4]
 80165f6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80165fa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80165fe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016602:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016606:	eba9 0905 	sub.w	r9, r9, r5
 801660a:	ea4b 0303 	orr.w	r3, fp, r3
 801660e:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8016612:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8016616:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 801661a:	436b      	muls	r3, r5
 801661c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016620:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016624:	ea4b 0202 	orr.w	r2, fp, r2
 8016628:	fb09 3308 	mla	r3, r9, r8, r3
 801662c:	fb0e 3302 	mla	r3, lr, r2, r3
 8016630:	0402      	lsls	r2, r0, #16
 8016632:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016636:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801663a:	4310      	orrs	r0, r2
 801663c:	9a02      	ldr	r2, [sp, #8]
 801663e:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8016642:	fb0e 3e00 	mla	lr, lr, r0, r3
 8016646:	9803      	ldr	r0, [sp, #12]
 8016648:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 801664c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016650:	9804      	ldr	r0, [sp, #16]
 8016652:	1a2d      	subs	r5, r5, r0
 8016654:	9803      	ldr	r0, [sp, #12]
 8016656:	eba0 000a 	sub.w	r0, r0, sl
 801665a:	b280      	uxth	r0, r0
 801665c:	b2ad      	uxth	r5, r5
 801665e:	4346      	muls	r6, r0
 8016660:	9804      	ldr	r0, [sp, #16]
 8016662:	fb0c 6605 	mla	r6, ip, r5, r6
 8016666:	fb00 6707 	mla	r7, r0, r7, r6
 801666a:	fb0a 7404 	mla	r4, sl, r4, r7
 801666e:	b292      	uxth	r2, r2
 8016670:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8016674:	4354      	muls	r4, r2
 8016676:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801667a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801667e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016682:	f104 0a01 	add.w	sl, r4, #1
 8016686:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801668a:	ea43 0e0e 	orr.w	lr, r3, lr
 801668e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016692:	fa1f f38e 	uxth.w	r3, lr
 8016696:	1208      	asrs	r0, r1, #8
 8016698:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 801669c:	b2e4      	uxtb	r4, r4
 801669e:	121d      	asrs	r5, r3, #8
 80166a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80166a4:	fb10 f004 	smulbb	r0, r0, r4
 80166a8:	10ce      	asrs	r6, r1, #3
 80166aa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80166ae:	00c9      	lsls	r1, r1, #3
 80166b0:	fb05 0502 	mla	r5, r5, r2, r0
 80166b4:	b2c9      	uxtb	r1, r1
 80166b6:	10d8      	asrs	r0, r3, #3
 80166b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80166bc:	00db      	lsls	r3, r3, #3
 80166be:	fb16 f604 	smulbb	r6, r6, r4
 80166c2:	b2db      	uxtb	r3, r3
 80166c4:	fb11 f404 	smulbb	r4, r1, r4
 80166c8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80166cc:	fb00 6002 	mla	r0, r0, r2, r6
 80166d0:	fb03 4202 	mla	r2, r3, r2, r4
 80166d4:	b2ad      	uxth	r5, r5
 80166d6:	b292      	uxth	r2, r2
 80166d8:	1c6b      	adds	r3, r5, #1
 80166da:	1c51      	adds	r1, r2, #1
 80166dc:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80166e0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80166e4:	b280      	uxth	r0, r0
 80166e6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80166ea:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80166ee:	4313      	orrs	r3, r2
 80166f0:	1c42      	adds	r2, r0, #1
 80166f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80166f6:	0940      	lsrs	r0, r0, #5
 80166f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80166fc:	9a05      	ldr	r2, [sp, #20]
 80166fe:	4303      	orrs	r3, r0
 8016700:	8013      	strh	r3, [r2, #0]
 8016702:	b007      	add	sp, #28
 8016704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016708:	2d0f      	cmp	r5, #15
 801670a:	f63f af35 	bhi.w	8016578 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 801670e:	24ff      	movs	r4, #255	; 0xff
 8016710:	460a      	mov	r2, r1
 8016712:	4608      	mov	r0, r1
 8016714:	4627      	mov	r7, r4
 8016716:	e752      	b.n	80165be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 8016718:	0801e397 	.word	0x0801e397
 801671c:	0801e8f5 	.word	0x0801e8f5
 8016720:	0801e41f 	.word	0x0801e41f

08016724 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016728:	ed2d 8b08 	vpush	{d8-d11}
 801672c:	b099      	sub	sp, #100	; 0x64
 801672e:	eeb0 aa40 	vmov.f32	s20, s0
 8016732:	9308      	str	r3, [sp, #32]
 8016734:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8016738:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 801673a:	930b      	str	r3, [sp, #44]	; 0x2c
 801673c:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8016740:	9314      	str	r3, [sp, #80]	; 0x50
 8016742:	9113      	str	r1, [sp, #76]	; 0x4c
 8016744:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8016748:	9017      	str	r0, [sp, #92]	; 0x5c
 801674a:	6870      	ldr	r0, [r6, #4]
 801674c:	9216      	str	r2, [sp, #88]	; 0x58
 801674e:	fb00 1303 	mla	r3, r0, r3, r1
 8016752:	6831      	ldr	r1, [r6, #0]
 8016754:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8016756:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 801675a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801675e:	9309      	str	r3, [sp, #36]	; 0x24
 8016760:	6813      	ldr	r3, [r2, #0]
 8016762:	930c      	str	r3, [sp, #48]	; 0x30
 8016764:	6853      	ldr	r3, [r2, #4]
 8016766:	930d      	str	r3, [sp, #52]	; 0x34
 8016768:	006b      	lsls	r3, r5, #1
 801676a:	9312      	str	r3, [sp, #72]	; 0x48
 801676c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8016770:	930a      	str	r3, [sp, #40]	; 0x28
 8016772:	eef0 9a60 	vmov.f32	s19, s1
 8016776:	eeb0 9a41 	vmov.f32	s18, s2
 801677a:	eeb0 8a62 	vmov.f32	s16, s5
 801677e:	eef0 8a43 	vmov.f32	s17, s6
 8016782:	eef0 ba44 	vmov.f32	s23, s8
 8016786:	eeb0 ba64 	vmov.f32	s22, s9
 801678a:	eef0 aa45 	vmov.f32	s21, s10
 801678e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016790:	2b00      	cmp	r3, #0
 8016792:	dc03      	bgt.n	801679c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016794:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016796:	2b00      	cmp	r3, #0
 8016798:	f340 83bf 	ble.w	8016f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 801679c:	9b08      	ldr	r3, [sp, #32]
 801679e:	2b00      	cmp	r3, #0
 80167a0:	f340 81cb 	ble.w	8016b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 80167a4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80167a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80167a8:	1412      	asrs	r2, r2, #16
 80167aa:	ea4f 4323 	mov.w	r3, r3, asr #16
 80167ae:	d42f      	bmi.n	8016810 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80167b0:	1c51      	adds	r1, r2, #1
 80167b2:	428d      	cmp	r5, r1
 80167b4:	dd2f      	ble.n	8016816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80167b6:	2b00      	cmp	r3, #0
 80167b8:	db2d      	blt.n	8016816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80167ba:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80167bc:	1c59      	adds	r1, r3, #1
 80167be:	4288      	cmp	r0, r1
 80167c0:	dd29      	ble.n	8016816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80167c2:	9b08      	ldr	r3, [sp, #32]
 80167c4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80167c6:	992b      	ldr	r1, [sp, #172]	; 0xac
 80167c8:	3b01      	subs	r3, #1
 80167ca:	fb02 1203 	mla	r2, r2, r3, r1
 80167ce:	1412      	asrs	r2, r2, #16
 80167d0:	d42b      	bmi.n	801682a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80167d2:	3201      	adds	r2, #1
 80167d4:	4295      	cmp	r5, r2
 80167d6:	dd28      	ble.n	801682a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80167d8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80167da:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80167dc:	fb02 1303 	mla	r3, r2, r3, r1
 80167e0:	141b      	asrs	r3, r3, #16
 80167e2:	d422      	bmi.n	801682a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80167e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80167e6:	3301      	adds	r3, #1
 80167e8:	429a      	cmp	r2, r3
 80167ea:	dd1e      	ble.n	801682a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80167ec:	9b08      	ldr	r3, [sp, #32]
 80167ee:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80167f2:	9315      	str	r3, [sp, #84]	; 0x54
 80167f4:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80167f8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80167fa:	2b00      	cmp	r3, #0
 80167fc:	f300 8217 	bgt.w	8016c2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8016800:	9b08      	ldr	r3, [sp, #32]
 8016802:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016806:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016808:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801680c:	9309      	str	r3, [sp, #36]	; 0x24
 801680e:	e196      	b.n	8016b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8016810:	1c57      	adds	r7, r2, #1
 8016812:	f040 8183 	bne.w	8016b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8016816:	42aa      	cmp	r2, r5
 8016818:	f280 8180 	bge.w	8016b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801681c:	1c5e      	adds	r6, r3, #1
 801681e:	f2c0 817d 	blt.w	8016b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8016822:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016824:	4293      	cmp	r3, r2
 8016826:	f280 8179 	bge.w	8016b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801682a:	9b08      	ldr	r3, [sp, #32]
 801682c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801682e:	9315      	str	r3, [sp, #84]	; 0x54
 8016830:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016834:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016836:	2b00      	cmp	r3, #0
 8016838:	dde2      	ble.n	8016800 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801683a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801683c:	1419      	asrs	r1, r3, #16
 801683e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016840:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016844:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016846:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801684a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801684c:	141b      	asrs	r3, r3, #16
 801684e:	f100 81d3 	bmi.w	8016bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 8016852:	1c58      	adds	r0, r3, #1
 8016854:	4285      	cmp	r5, r0
 8016856:	f340 81d1 	ble.w	8016bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 801685a:	2900      	cmp	r1, #0
 801685c:	f2c0 81ce 	blt.w	8016bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8016860:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016862:	1c48      	adds	r0, r1, #1
 8016864:	4284      	cmp	r4, r0
 8016866:	f340 81c9 	ble.w	8016bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 801686a:	fb01 3105 	mla	r1, r1, r5, r3
 801686e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016870:	fa1f fe82 	uxth.w	lr, r2
 8016874:	eb03 0a01 	add.w	sl, r3, r1
 8016878:	ea4f 100e 	mov.w	r0, lr, lsl #4
 801687c:	f813 9001 	ldrb.w	r9, [r3, r1]
 8016880:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016884:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016888:	b29b      	uxth	r3, r3
 801688a:	f1bc 0f00 	cmp.w	ip, #0
 801688e:	f000 8195 	beq.w	8016bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 8016892:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016896:	940e      	str	r4, [sp, #56]	; 0x38
 8016898:	eb0a 0b05 	add.w	fp, sl, r5
 801689c:	fa1f fa8c 	uxth.w	sl, ip
 80168a0:	fb0a fe0e 	mul.w	lr, sl, lr
 80168a4:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80168a8:	fa1f fa8a 	uxth.w	sl, sl
 80168ac:	eba0 000e 	sub.w	r0, r0, lr
 80168b0:	eba3 030a 	sub.w	r3, r3, sl
 80168b4:	b280      	uxth	r0, r0
 80168b6:	fb08 f000 	mul.w	r0, r8, r0
 80168ba:	b29b      	uxth	r3, r3
 80168bc:	fb09 0303 	mla	r3, r9, r3, r0
 80168c0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80168c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80168c6:	940f      	str	r4, [sp, #60]	; 0x3c
 80168c8:	fb0a 3300 	mla	r3, sl, r0, r3
 80168cc:	fb0e 3304 	mla	r3, lr, r4, r3
 80168d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80168d4:	2b00      	cmp	r3, #0
 80168d6:	f000 8114 	beq.w	8016b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80168da:	980c      	ldr	r0, [sp, #48]	; 0x30
 80168dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80168de:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80168e2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80168e6:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 80168ea:	f000 816c 	beq.w	8016bc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 80168ee:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80168f2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80168f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80168fa:	fb09 f101 	mul.w	r1, r9, r1
 80168fe:	fb0a fe0e 	mul.w	lr, sl, lr
 8016902:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016906:	f101 0b20 	add.w	fp, r1, #32
 801690a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801690e:	44ce      	add	lr, r9
 8016910:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8016914:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016918:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801691c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016920:	ea4e 0909 	orr.w	r9, lr, r9
 8016924:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016928:	8841      	ldrh	r1, [r0, #2]
 801692a:	d019      	beq.n	8016960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 801692c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016930:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016934:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016938:	fb0a fe0e 	mul.w	lr, sl, lr
 801693c:	fb08 f801 	mul.w	r8, r8, r1
 8016940:	f108 0b20 	add.w	fp, r8, #32
 8016944:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8016948:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801694c:	448e      	add	lr, r1
 801694e:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8016952:	0a09      	lsrs	r1, r1, #8
 8016954:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8016958:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801695c:	ea4a 0101 	orr.w	r1, sl, r1
 8016960:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8016964:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016968:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801696c:	ea4e 0909 	orr.w	r9, lr, r9
 8016970:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8016974:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016978:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801697c:	ea4e 0e01 	orr.w	lr, lr, r1
 8016980:	f1bc 0f00 	cmp.w	ip, #0
 8016984:	f000 8121 	beq.w	8016bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8016988:	9912      	ldr	r1, [sp, #72]	; 0x48
 801698a:	eb00 0801 	add.w	r8, r0, r1
 801698e:	5a41      	ldrh	r1, [r0, r1]
 8016990:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016992:	28ff      	cmp	r0, #255	; 0xff
 8016994:	d019      	beq.n	80169ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8016996:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016998:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801699c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80169a0:	fb04 fb01 	mul.w	fp, r4, r1
 80169a4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80169a8:	fb0a fa00 	mul.w	sl, sl, r0
 80169ac:	f10b 0020 	add.w	r0, fp, #32
 80169b0:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80169b4:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80169b8:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80169bc:	4451      	add	r1, sl
 80169be:	0a00      	lsrs	r0, r0, #8
 80169c0:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80169c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80169c8:	4301      	orrs	r1, r0
 80169ca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80169cc:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 80169d0:	2cff      	cmp	r4, #255	; 0xff
 80169d2:	d01a      	beq.n	8016a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 80169d4:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 80169d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80169dc:	fb04 fb00 	mul.w	fp, r4, r0
 80169e0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80169e4:	fb0a fa08 	mul.w	sl, sl, r8
 80169e8:	f10b 0820 	add.w	r8, fp, #32
 80169ec:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 80169f0:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 80169f4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80169f8:	4450      	add	r0, sl
 80169fa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80169fe:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016a02:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016a06:	ea40 0008 	orr.w	r0, r0, r8
 8016a0a:	fb1c f802 	smulbb	r8, ip, r2
 8016a0e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016a12:	f1cc 0a10 	rsb	sl, ip, #16
 8016a16:	ebaa 0a02 	sub.w	sl, sl, r2
 8016a1a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016a1e:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8016a22:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8016a26:	fb0e f202 	mul.w	r2, lr, r2
 8016a2a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016a2e:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8016a32:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016a36:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8016a3a:	fb09 220a 	mla	r2, r9, sl, r2
 8016a3e:	ea4b 0101 	orr.w	r1, fp, r1
 8016a42:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016a46:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016a4a:	fb0c 2201 	mla	r2, ip, r1, r2
 8016a4e:	ea4e 0000 	orr.w	r0, lr, r0
 8016a52:	fb08 2800 	mla	r8, r8, r0, r2
 8016a56:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8016a5a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016a5e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016a62:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016a66:	ea42 0808 	orr.w	r8, r2, r8
 8016a6a:	fa1f f288 	uxth.w	r2, r8
 8016a6e:	2bff      	cmp	r3, #255	; 0xff
 8016a70:	d103      	bne.n	8016a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8016a72:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016a74:	29ff      	cmp	r1, #255	; 0xff
 8016a76:	f000 80bd 	beq.w	8016bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 8016a7a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016a7c:	f8b7 c000 	ldrh.w	ip, [r7]
 8016a80:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016a82:	434b      	muls	r3, r1
 8016a84:	f103 0e01 	add.w	lr, r3, #1
 8016a88:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8016a8c:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8016a90:	ea4f 202c 	mov.w	r0, ip, asr #8
 8016a94:	fa5f fe8e 	uxtb.w	lr, lr
 8016a98:	1213      	asrs	r3, r2, #8
 8016a9a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016a9e:	fb10 f00e 	smulbb	r0, r0, lr
 8016aa2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8016aa6:	fb03 0301 	mla	r3, r3, r1, r0
 8016aaa:	b298      	uxth	r0, r3
 8016aac:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8016ab0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016ab4:	10d1      	asrs	r1, r2, #3
 8016ab6:	fa5f fc8c 	uxtb.w	ip, ip
 8016aba:	00d2      	lsls	r2, r2, #3
 8016abc:	fb1c fc0e 	smulbb	ip, ip, lr
 8016ac0:	b2d2      	uxtb	r2, r2
 8016ac2:	fb02 c204 	mla	r2, r2, r4, ip
 8016ac6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016aca:	fb13 f30e 	smulbb	r3, r3, lr
 8016ace:	b292      	uxth	r2, r2
 8016ad0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016ad4:	fb01 3104 	mla	r1, r1, r4, r3
 8016ad8:	f102 0c01 	add.w	ip, r2, #1
 8016adc:	1c43      	adds	r3, r0, #1
 8016ade:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016ae2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016ae6:	b289      	uxth	r1, r1
 8016ae8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016aec:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016af0:	4313      	orrs	r3, r2
 8016af2:	1c4a      	adds	r2, r1, #1
 8016af4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016af8:	0949      	lsrs	r1, r1, #5
 8016afa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016afe:	430b      	orrs	r3, r1
 8016b00:	803b      	strh	r3, [r7, #0]
 8016b02:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016b04:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016b06:	4413      	add	r3, r2
 8016b08:	932b      	str	r3, [sp, #172]	; 0xac
 8016b0a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016b0c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016b0e:	441a      	add	r2, r3
 8016b10:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016b12:	922c      	str	r2, [sp, #176]	; 0xb0
 8016b14:	3b01      	subs	r3, #1
 8016b16:	3702      	adds	r7, #2
 8016b18:	9315      	str	r3, [sp, #84]	; 0x54
 8016b1a:	e68b      	b.n	8016834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8016b1c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016b1e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016b20:	4413      	add	r3, r2
 8016b22:	932b      	str	r3, [sp, #172]	; 0xac
 8016b24:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016b26:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016b28:	441a      	add	r2, r3
 8016b2a:	9b08      	ldr	r3, [sp, #32]
 8016b2c:	922c      	str	r2, [sp, #176]	; 0xb0
 8016b2e:	3b01      	subs	r3, #1
 8016b30:	9308      	str	r3, [sp, #32]
 8016b32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b34:	3302      	adds	r3, #2
 8016b36:	9309      	str	r3, [sp, #36]	; 0x24
 8016b38:	e630      	b.n	801679c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016b3a:	f47f ae42 	bne.w	80167c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8016b3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016b40:	2b00      	cmp	r3, #0
 8016b42:	f340 81ea 	ble.w	8016f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8016b46:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016b4a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016b4e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016b52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016b54:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016b58:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016b5c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016b60:	eef0 6a48 	vmov.f32	s13, s16
 8016b64:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016b68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016b6c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016b70:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8016b74:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016b78:	eef0 6a68 	vmov.f32	s13, s17
 8016b7c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016b80:	ee18 2a10 	vmov	r2, s16
 8016b84:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016b88:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b8c:	ee18 2a90 	vmov	r2, s17
 8016b90:	932d      	str	r3, [sp, #180]	; 0xb4
 8016b92:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016b94:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b98:	932e      	str	r3, [sp, #184]	; 0xb8
 8016b9a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016b9c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016b9e:	3b01      	subs	r3, #1
 8016ba0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016ba4:	9313      	str	r3, [sp, #76]	; 0x4c
 8016ba6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016ba8:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8016bac:	bf08      	it	eq
 8016bae:	4613      	moveq	r3, r2
 8016bb0:	9308      	str	r3, [sp, #32]
 8016bb2:	eef0 8a67 	vmov.f32	s17, s15
 8016bb6:	eeb0 8a47 	vmov.f32	s16, s14
 8016bba:	e5e8      	b.n	801678e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8016bbc:	fb08 f000 	mul.w	r0, r8, r0
 8016bc0:	fb09 0303 	mla	r3, r9, r3, r0
 8016bc4:	e684      	b.n	80168d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 8016bc6:	4689      	mov	r9, r1
 8016bc8:	e6ac      	b.n	8016924 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 8016bca:	f1c2 0010 	rsb	r0, r2, #16
 8016bce:	fb0e f202 	mul.w	r2, lr, r2
 8016bd2:	fb09 2900 	mla	r9, r9, r0, r2
 8016bd6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016bda:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016bde:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016be2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016be6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016bea:	ea42 0909 	orr.w	r9, r2, r9
 8016bee:	fa1f f289 	uxth.w	r2, r9
 8016bf2:	e73c      	b.n	8016a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016bf4:	803a      	strh	r2, [r7, #0]
 8016bf6:	e784      	b.n	8016b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016bf8:	1c5c      	adds	r4, r3, #1
 8016bfa:	d182      	bne.n	8016b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016bfc:	429d      	cmp	r5, r3
 8016bfe:	dd80      	ble.n	8016b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016c00:	1c48      	adds	r0, r1, #1
 8016c02:	f6ff af7e 	blt.w	8016b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016c06:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016c08:	4288      	cmp	r0, r1
 8016c0a:	f77f af7a 	ble.w	8016b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016c0e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016c10:	9302      	str	r3, [sp, #8]
 8016c12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016c14:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8016c18:	e9cd c005 	strd	ip, r0, [sp, #20]
 8016c1c:	e9cd 5300 	strd	r5, r3, [sp]
 8016c20:	4639      	mov	r1, r7
 8016c22:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8016c26:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8016c28:	f7ff fbcc 	bl	80163c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8016c2c:	e769      	b.n	8016b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016c2e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016c30:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016c34:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016c36:	141f      	asrs	r7, r3, #16
 8016c38:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016c3c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016c3e:	141b      	asrs	r3, r3, #16
 8016c40:	fb05 3707 	mla	r7, r5, r7, r3
 8016c44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016c46:	fa1f fc82 	uxth.w	ip, r2
 8016c4a:	eb03 0a07 	add.w	sl, r3, r7
 8016c4e:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8016c52:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016c56:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016c5a:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8016c5e:	b29b      	uxth	r3, r3
 8016c60:	2800      	cmp	r0, #0
 8016c62:	f000 813f 	beq.w	8016ee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 8016c66:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016c6a:	9410      	str	r4, [sp, #64]	; 0x40
 8016c6c:	eb0a 0b05 	add.w	fp, sl, r5
 8016c70:	fa1f fa80 	uxth.w	sl, r0
 8016c74:	fb0a fc0c 	mul.w	ip, sl, ip
 8016c78:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016c7c:	fa1f fa8a 	uxth.w	sl, sl
 8016c80:	eba1 010c 	sub.w	r1, r1, ip
 8016c84:	eba3 030a 	sub.w	r3, r3, sl
 8016c88:	b289      	uxth	r1, r1
 8016c8a:	fb08 f101 	mul.w	r1, r8, r1
 8016c8e:	b29b      	uxth	r3, r3
 8016c90:	fb09 1303 	mla	r3, r9, r3, r1
 8016c94:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016c96:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016c9a:	9411      	str	r4, [sp, #68]	; 0x44
 8016c9c:	fb0a 3301 	mla	r3, sl, r1, r3
 8016ca0:	fb0c 3304 	mla	r3, ip, r4, r3
 8016ca4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016ca8:	2b00      	cmp	r3, #0
 8016caa:	f000 810d 	beq.w	8016ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8016cae:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016cb0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016cb2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016cb6:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8016cba:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016cbe:	f000 8116 	beq.w	8016eee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8016cc2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016cc6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016cca:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016cce:	fb09 f707 	mul.w	r7, r9, r7
 8016cd2:	fb0a fc0c 	mul.w	ip, sl, ip
 8016cd6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8016cda:	f107 0b20 	add.w	fp, r7, #32
 8016cde:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016ce2:	44cc      	add	ip, r9
 8016ce4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8016ce8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016cec:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016cf0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016cf4:	ea4c 0909 	orr.w	r9, ip, r9
 8016cf8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016cfc:	884f      	ldrh	r7, [r1, #2]
 8016cfe:	d019      	beq.n	8016d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8016d00:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016d04:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016d08:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016d0c:	fb08 f807 	mul.w	r8, r8, r7
 8016d10:	fb0a fc0c 	mul.w	ip, sl, ip
 8016d14:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8016d18:	f108 0b20 	add.w	fp, r8, #32
 8016d1c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016d20:	44bc      	add	ip, r7
 8016d22:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016d26:	0a3f      	lsrs	r7, r7, #8
 8016d28:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016d2c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016d30:	ea4c 0707 	orr.w	r7, ip, r7
 8016d34:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016d38:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016d3c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016d40:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016d44:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016d48:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016d4c:	ea4c 0909 	orr.w	r9, ip, r9
 8016d50:	ea4a 0707 	orr.w	r7, sl, r7
 8016d54:	2800      	cmp	r0, #0
 8016d56:	f000 80cc 	beq.w	8016ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 8016d5a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016d5c:	eb01 0c04 	add.w	ip, r1, r4
 8016d60:	f831 8004 	ldrh.w	r8, [r1, r4]
 8016d64:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016d66:	29ff      	cmp	r1, #255	; 0xff
 8016d68:	d01a      	beq.n	8016da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 8016d6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016d6c:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8016d70:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016d74:	fb04 fb08 	mul.w	fp, r4, r8
 8016d78:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016d7c:	fb0a fa01 	mul.w	sl, sl, r1
 8016d80:	f10b 0120 	add.w	r1, fp, #32
 8016d84:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8016d88:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8016d8c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016d90:	44d0      	add	r8, sl
 8016d92:	0a09      	lsrs	r1, r1, #8
 8016d94:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8016d98:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016d9c:	ea48 0801 	orr.w	r8, r8, r1
 8016da0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016da2:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8016da6:	2cff      	cmp	r4, #255	; 0xff
 8016da8:	d01a      	beq.n	8016de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 8016daa:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8016dae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016db2:	fb04 fb01 	mul.w	fp, r4, r1
 8016db6:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016dba:	fb0a fa0c 	mul.w	sl, sl, ip
 8016dbe:	f10b 0c20 	add.w	ip, fp, #32
 8016dc2:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016dc6:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8016dca:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016dce:	4451      	add	r1, sl
 8016dd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016dd4:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016dd8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016ddc:	ea41 010c 	orr.w	r1, r1, ip
 8016de0:	fb10 fc02 	smulbb	ip, r0, r2
 8016de4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016de8:	f1c0 0a10 	rsb	sl, r0, #16
 8016dec:	ebaa 0a02 	sub.w	sl, sl, r2
 8016df0:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8016df4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016df8:	437a      	muls	r2, r7
 8016dfa:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8016dfe:	040f      	lsls	r7, r1, #16
 8016e00:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016e04:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016e08:	fb09 220a 	mla	r2, r9, sl, r2
 8016e0c:	ea4b 0808 	orr.w	r8, fp, r8
 8016e10:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8016e14:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8016e18:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016e1c:	fb00 2208 	mla	r2, r0, r8, r2
 8016e20:	4339      	orrs	r1, r7
 8016e22:	fb0c 2201 	mla	r2, ip, r1, r2
 8016e26:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8016e2a:	0952      	lsrs	r2, r2, #5
 8016e2c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016e30:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016e34:	ea49 0202 	orr.w	r2, r9, r2
 8016e38:	2bff      	cmp	r3, #255	; 0xff
 8016e3a:	b292      	uxth	r2, r2
 8016e3c:	d102      	bne.n	8016e44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8016e3e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016e40:	29ff      	cmp	r1, #255	; 0xff
 8016e42:	d067      	beq.n	8016f14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8016e44:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016e46:	f8be 0000 	ldrh.w	r0, [lr]
 8016e4a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016e4c:	434b      	muls	r3, r1
 8016e4e:	1c59      	adds	r1, r3, #1
 8016e50:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8016e54:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8016e58:	1201      	asrs	r1, r0, #8
 8016e5a:	b2db      	uxtb	r3, r3
 8016e5c:	1217      	asrs	r7, r2, #8
 8016e5e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016e62:	fb11 f103 	smulbb	r1, r1, r3
 8016e66:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 8016e6a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016e6e:	00c0      	lsls	r0, r0, #3
 8016e70:	fb07 1704 	mla	r7, r7, r4, r1
 8016e74:	b2c0      	uxtb	r0, r0
 8016e76:	10d1      	asrs	r1, r2, #3
 8016e78:	00d2      	lsls	r2, r2, #3
 8016e7a:	fb10 f003 	smulbb	r0, r0, r3
 8016e7e:	b2d2      	uxtb	r2, r2
 8016e80:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016e84:	fb02 0204 	mla	r2, r2, r4, r0
 8016e88:	fb1c fc03 	smulbb	ip, ip, r3
 8016e8c:	b2bf      	uxth	r7, r7
 8016e8e:	b292      	uxth	r2, r2
 8016e90:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016e94:	fb01 c104 	mla	r1, r1, r4, ip
 8016e98:	1c7b      	adds	r3, r7, #1
 8016e9a:	f102 0c01 	add.w	ip, r2, #1
 8016e9e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016ea2:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8016ea6:	b289      	uxth	r1, r1
 8016ea8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016eac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016eb0:	ea47 070c 	orr.w	r7, r7, ip
 8016eb4:	f101 0c01 	add.w	ip, r1, #1
 8016eb8:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8016ebc:	0949      	lsrs	r1, r1, #5
 8016ebe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016ec2:	430f      	orrs	r7, r1
 8016ec4:	f8ae 7000 	strh.w	r7, [lr]
 8016ec8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016eca:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016ecc:	4413      	add	r3, r2
 8016ece:	932b      	str	r3, [sp, #172]	; 0xac
 8016ed0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016ed2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016ed4:	441a      	add	r2, r3
 8016ed6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016ed8:	922c      	str	r2, [sp, #176]	; 0xb0
 8016eda:	3b01      	subs	r3, #1
 8016edc:	f10e 0e02 	add.w	lr, lr, #2
 8016ee0:	9315      	str	r3, [sp, #84]	; 0x54
 8016ee2:	e489      	b.n	80167f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8016ee4:	fb08 f101 	mul.w	r1, r8, r1
 8016ee8:	fb09 1303 	mla	r3, r9, r3, r1
 8016eec:	e6da      	b.n	8016ca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8016eee:	46b9      	mov	r9, r7
 8016ef0:	e702      	b.n	8016cf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 8016ef2:	f1c2 0110 	rsb	r1, r2, #16
 8016ef6:	437a      	muls	r2, r7
 8016ef8:	fb09 2901 	mla	r9, r9, r1, r2
 8016efc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016f00:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016f04:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016f08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016f0c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016f10:	4302      	orrs	r2, r0
 8016f12:	e791      	b.n	8016e38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8016f14:	f8ae 2000 	strh.w	r2, [lr]
 8016f18:	e7d6      	b.n	8016ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8016f1a:	b019      	add	sp, #100	; 0x64
 8016f1c:	ecbd 8b08 	vpop	{d8-d11}
 8016f20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f28:	b087      	sub	sp, #28
 8016f2a:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8016f2e:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8016f32:	9105      	str	r1, [sp, #20]
 8016f34:	fb00 e604 	mla	r6, r0, r4, lr
 8016f38:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8016f3c:	9102      	str	r1, [sp, #8]
 8016f3e:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8016f42:	9103      	str	r1, [sp, #12]
 8016f44:	9905      	ldr	r1, [sp, #20]
 8016f46:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8016f4a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8016f4e:	8809      	ldrh	r1, [r1, #0]
 8016f50:	2800      	cmp	r0, #0
 8016f52:	eb02 0a06 	add.w	sl, r2, r6
 8016f56:	f2c0 80ca 	blt.w	80170ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8016f5a:	4287      	cmp	r7, r0
 8016f5c:	f340 80c7 	ble.w	80170ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8016f60:	f1be 0f00 	cmp.w	lr, #0
 8016f64:	f2c0 80bf 	blt.w	80170e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8016f68:	4574      	cmp	r4, lr
 8016f6a:	f340 80bc 	ble.w	80170e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8016f6e:	f812 c006 	ldrb.w	ip, [r2, r6]
 8016f72:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 8016f76:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016f7a:	d01c      	beq.n	8016fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8016f7c:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8016f80:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8016f84:	4372      	muls	r2, r6
 8016f86:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8016f8a:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8016f8e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016f92:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016f96:	fb0c f609 	mul.w	r6, ip, r9
 8016f9a:	eb03 0902 	add.w	r9, r3, r2
 8016f9e:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8016fa2:	f106 0820 	add.w	r8, r6, #32
 8016fa6:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8016faa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016fae:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016fb2:	ea49 0908 	orr.w	r9, r9, r8
 8016fb6:	fa1f f989 	uxth.w	r9, r9
 8016fba:	f11e 0301 	adds.w	r3, lr, #1
 8016fbe:	f100 809b 	bmi.w	80170f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8016fc2:	429c      	cmp	r4, r3
 8016fc4:	f340 8098 	ble.w	80170f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8016fc8:	2d00      	cmp	r5, #0
 8016fca:	f000 8095 	beq.w	80170f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8016fce:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8016fd2:	9b03      	ldr	r3, [sp, #12]
 8016fd4:	2eff      	cmp	r6, #255	; 0xff
 8016fd6:	885b      	ldrh	r3, [r3, #2]
 8016fd8:	d01b      	beq.n	8017012 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 8016fda:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8016fde:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016fe2:	fb08 f202 	mul.w	r2, r8, r2
 8016fe6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016fea:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016fee:	fb06 f803 	mul.w	r8, r6, r3
 8016ff2:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016ff6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016ffa:	441a      	add	r2, r3
 8016ffc:	f108 0320 	add.w	r3, r8, #32
 8017000:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8017004:	0a1b      	lsrs	r3, r3, #8
 8017006:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801700a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801700e:	ea4b 0303 	orr.w	r3, fp, r3
 8017012:	b29b      	uxth	r3, r3
 8017014:	9301      	str	r3, [sp, #4]
 8017016:	3001      	adds	r0, #1
 8017018:	d474      	bmi.n	8017104 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801701a:	4287      	cmp	r7, r0
 801701c:	dd72      	ble.n	8017104 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801701e:	9a02      	ldr	r2, [sp, #8]
 8017020:	2a00      	cmp	r2, #0
 8017022:	f000 8111 	beq.w	8017248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 8017026:	f1be 0f00 	cmp.w	lr, #0
 801702a:	db68      	blt.n	80170fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 801702c:	4574      	cmp	r4, lr
 801702e:	dd66      	ble.n	80170fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8017030:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8017034:	9a03      	ldr	r2, [sp, #12]
 8017036:	2fff      	cmp	r7, #255	; 0xff
 8017038:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 801703c:	d01c      	beq.n	8017078 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 801703e:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8017042:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017046:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801704a:	fb07 fb00 	mul.w	fp, r7, r0
 801704e:	fb08 f802 	mul.w	r8, r8, r2
 8017052:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8017056:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 801705a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801705e:	4490      	add	r8, r2
 8017060:	f10b 0220 	add.w	r2, fp, #32
 8017064:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8017068:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801706c:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8017070:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017074:	ea40 000b 	orr.w	r0, r0, fp
 8017078:	b280      	uxth	r0, r0
 801707a:	f11e 0e01 	adds.w	lr, lr, #1
 801707e:	d446      	bmi.n	801710e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8017080:	4574      	cmp	r4, lr
 8017082:	dd44      	ble.n	801710e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8017084:	2d00      	cmp	r5, #0
 8017086:	d045      	beq.n	8017114 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 8017088:	1c62      	adds	r2, r4, #1
 801708a:	9b03      	ldr	r3, [sp, #12]
 801708c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017090:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8017094:	2cff      	cmp	r4, #255	; 0xff
 8017096:	d01c      	beq.n	80170d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 8017098:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 801709c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80170a0:	fb08 fe0e 	mul.w	lr, r8, lr
 80170a4:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 80170a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80170ac:	fb04 f802 	mul.w	r8, r4, r2
 80170b0:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 80170b4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80170b8:	4472      	add	r2, lr
 80170ba:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 80170be:	f108 0a20 	add.w	sl, r8, #32
 80170c2:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 80170c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80170ca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80170ce:	ea42 020a 	orr.w	r2, r2, sl
 80170d2:	b292      	uxth	r2, r2
 80170d4:	2d0f      	cmp	r5, #15
 80170d6:	d91f      	bls.n	8017118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 80170d8:	4b5f      	ldr	r3, [pc, #380]	; (8017258 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 80170da:	4a60      	ldr	r2, [pc, #384]	; (801725c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 80170dc:	4860      	ldr	r0, [pc, #384]	; (8017260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 80170de:	f240 3173 	movw	r1, #883	; 0x373
 80170e2:	f003 fc1b 	bl	801a91c <__assert_func>
 80170e6:	4689      	mov	r9, r1
 80170e8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80170ec:	e765      	b.n	8016fba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 80170ee:	26ff      	movs	r6, #255	; 0xff
 80170f0:	9101      	str	r1, [sp, #4]
 80170f2:	4689      	mov	r9, r1
 80170f4:	46b4      	mov	ip, r6
 80170f6:	e78e      	b.n	8017016 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 80170f8:	9101      	str	r1, [sp, #4]
 80170fa:	26ff      	movs	r6, #255	; 0xff
 80170fc:	e78b      	b.n	8017016 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 80170fe:	4608      	mov	r0, r1
 8017100:	27ff      	movs	r7, #255	; 0xff
 8017102:	e7ba      	b.n	801707a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8017104:	24ff      	movs	r4, #255	; 0xff
 8017106:	460a      	mov	r2, r1
 8017108:	4608      	mov	r0, r1
 801710a:	4627      	mov	r7, r4
 801710c:	e7e2      	b.n	80170d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801710e:	460a      	mov	r2, r1
 8017110:	24ff      	movs	r4, #255	; 0xff
 8017112:	e7df      	b.n	80170d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017114:	460a      	mov	r2, r1
 8017116:	24ff      	movs	r4, #255	; 0xff
 8017118:	9b02      	ldr	r3, [sp, #8]
 801711a:	2b0f      	cmp	r3, #15
 801711c:	d8dc      	bhi.n	80170d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 801711e:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8017122:	fa1f f885 	uxth.w	r8, r5
 8017126:	fb08 fa0e 	mul.w	sl, r8, lr
 801712a:	ea4f 1308 	mov.w	r3, r8, lsl #4
 801712e:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8017132:	9303      	str	r3, [sp, #12]
 8017134:	fa1f f38e 	uxth.w	r3, lr
 8017138:	9304      	str	r3, [sp, #16]
 801713a:	ea4f 4809 	mov.w	r8, r9, lsl #16
 801713e:	9b02      	ldr	r3, [sp, #8]
 8017140:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017144:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8017148:	fb15 fe03 	smulbb	lr, r5, r3
 801714c:	ea48 0809 	orr.w	r8, r8, r9
 8017150:	f1c3 0910 	rsb	r9, r3, #16
 8017154:	9b01      	ldr	r3, [sp, #4]
 8017156:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801715a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801715e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017162:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017166:	eba9 0905 	sub.w	r9, r9, r5
 801716a:	ea4b 0303 	orr.w	r3, fp, r3
 801716e:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8017172:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8017176:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 801717a:	436b      	muls	r3, r5
 801717c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017180:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017184:	ea4b 0202 	orr.w	r2, fp, r2
 8017188:	fb09 3308 	mla	r3, r9, r8, r3
 801718c:	fb0e 3302 	mla	r3, lr, r2, r3
 8017190:	0402      	lsls	r2, r0, #16
 8017192:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017196:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801719a:	4310      	orrs	r0, r2
 801719c:	9a02      	ldr	r2, [sp, #8]
 801719e:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 80171a2:	9a03      	ldr	r2, [sp, #12]
 80171a4:	fb0e 3e00 	mla	lr, lr, r0, r3
 80171a8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80171ac:	9a04      	ldr	r2, [sp, #16]
 80171ae:	1a80      	subs	r0, r0, r2
 80171b0:	9a03      	ldr	r2, [sp, #12]
 80171b2:	eba2 020a 	sub.w	r2, r2, sl
 80171b6:	b292      	uxth	r2, r2
 80171b8:	b280      	uxth	r0, r0
 80171ba:	4356      	muls	r6, r2
 80171bc:	9a04      	ldr	r2, [sp, #16]
 80171be:	fb0c 6600 	mla	r6, ip, r0, r6
 80171c2:	fb02 6707 	mla	r7, r2, r7, r6
 80171c6:	fb0a 7404 	mla	r4, sl, r4, r7
 80171ca:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80171ce:	1208      	asrs	r0, r1, #8
 80171d0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80171d4:	ea6f 2424 	mvn.w	r4, r4, asr #8
 80171d8:	b2e4      	uxtb	r4, r4
 80171da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80171de:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80171e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80171e6:	4360      	muls	r0, r4
 80171e8:	ea43 0e0e 	orr.w	lr, r3, lr
 80171ec:	fa1f f38e 	uxth.w	r3, lr
 80171f0:	1c42      	adds	r2, r0, #1
 80171f2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80171f6:	1218      	asrs	r0, r3, #8
 80171f8:	10cd      	asrs	r5, r1, #3
 80171fa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80171fe:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017202:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017206:	4a17      	ldr	r2, [pc, #92]	; (8017264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8017208:	4365      	muls	r5, r4
 801720a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801720e:	1c6a      	adds	r2, r5, #1
 8017210:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017214:	00c9      	lsls	r1, r1, #3
 8017216:	10da      	asrs	r2, r3, #3
 8017218:	b2c9      	uxtb	r1, r1
 801721a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801721e:	434c      	muls	r4, r1
 8017220:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8017224:	1c61      	adds	r1, r4, #1
 8017226:	00d2      	lsls	r2, r2, #3
 8017228:	00db      	lsls	r3, r3, #3
 801722a:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 801722e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017232:	b2db      	uxtb	r3, r3
 8017234:	4302      	orrs	r2, r0
 8017236:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801723a:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 801723e:	9a05      	ldr	r2, [sp, #20]
 8017240:	8013      	strh	r3, [r2, #0]
 8017242:	b007      	add	sp, #28
 8017244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017248:	2d0f      	cmp	r5, #15
 801724a:	f63f af45 	bhi.w	80170d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 801724e:	24ff      	movs	r4, #255	; 0xff
 8017250:	460a      	mov	r2, r1
 8017252:	4608      	mov	r0, r1
 8017254:	4627      	mov	r7, r4
 8017256:	e762      	b.n	801711e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8017258:	0801e397 	.word	0x0801e397
 801725c:	0801e8f5 	.word	0x0801e8f5
 8017260:	0801e41f 	.word	0x0801e41f
 8017264:	fffff800 	.word	0xfffff800

08017268 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801726c:	ed2d 8b08 	vpush	{d8-d11}
 8017270:	b095      	sub	sp, #84	; 0x54
 8017272:	eeb0 aa40 	vmov.f32	s20, s0
 8017276:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017278:	9306      	str	r3, [sp, #24]
 801727a:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801727e:	9110      	str	r1, [sp, #64]	; 0x40
 8017280:	9308      	str	r3, [sp, #32]
 8017282:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017286:	9013      	str	r0, [sp, #76]	; 0x4c
 8017288:	6870      	ldr	r0, [r6, #4]
 801728a:	9212      	str	r2, [sp, #72]	; 0x48
 801728c:	fb00 1303 	mla	r3, r0, r3, r1
 8017290:	6831      	ldr	r1, [r6, #0]
 8017292:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8017294:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8017298:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801729c:	9307      	str	r3, [sp, #28]
 801729e:	6813      	ldr	r3, [r2, #0]
 80172a0:	9309      	str	r3, [sp, #36]	; 0x24
 80172a2:	6853      	ldr	r3, [r2, #4]
 80172a4:	930a      	str	r3, [sp, #40]	; 0x28
 80172a6:	006b      	lsls	r3, r5, #1
 80172a8:	eef0 9a60 	vmov.f32	s19, s1
 80172ac:	eeb0 9a41 	vmov.f32	s18, s2
 80172b0:	eeb0 8a62 	vmov.f32	s16, s5
 80172b4:	eef0 8a43 	vmov.f32	s17, s6
 80172b8:	eef0 ba44 	vmov.f32	s23, s8
 80172bc:	eeb0 ba64 	vmov.f32	s22, s9
 80172c0:	eef0 aa45 	vmov.f32	s21, s10
 80172c4:	930f      	str	r3, [sp, #60]	; 0x3c
 80172c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80172c8:	2b00      	cmp	r3, #0
 80172ca:	dc03      	bgt.n	80172d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 80172cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80172ce:	2b00      	cmp	r3, #0
 80172d0:	f340 83a3 	ble.w	8017a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 80172d4:	9b06      	ldr	r3, [sp, #24]
 80172d6:	2b00      	cmp	r3, #0
 80172d8:	f340 81bc 	ble.w	8017654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 80172dc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80172de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80172e0:	1412      	asrs	r2, r2, #16
 80172e2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80172e6:	d42f      	bmi.n	8017348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 80172e8:	1c51      	adds	r1, r2, #1
 80172ea:	428d      	cmp	r5, r1
 80172ec:	dd2f      	ble.n	801734e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80172ee:	2b00      	cmp	r3, #0
 80172f0:	db2d      	blt.n	801734e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80172f2:	9808      	ldr	r0, [sp, #32]
 80172f4:	1c59      	adds	r1, r3, #1
 80172f6:	4288      	cmp	r0, r1
 80172f8:	dd29      	ble.n	801734e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80172fa:	9b06      	ldr	r3, [sp, #24]
 80172fc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80172fe:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8017300:	3b01      	subs	r3, #1
 8017302:	fb02 1203 	mla	r2, r2, r3, r1
 8017306:	1412      	asrs	r2, r2, #16
 8017308:	d42b      	bmi.n	8017362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801730a:	3201      	adds	r2, #1
 801730c:	4295      	cmp	r5, r2
 801730e:	dd28      	ble.n	8017362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017310:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017312:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017314:	fb02 1303 	mla	r3, r2, r3, r1
 8017318:	141b      	asrs	r3, r3, #16
 801731a:	d422      	bmi.n	8017362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801731c:	9a08      	ldr	r2, [sp, #32]
 801731e:	3301      	adds	r3, #1
 8017320:	429a      	cmp	r2, r3
 8017322:	dd1e      	ble.n	8017362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017324:	9b06      	ldr	r3, [sp, #24]
 8017326:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801732a:	9311      	str	r3, [sp, #68]	; 0x44
 801732c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017330:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017332:	2b00      	cmp	r3, #0
 8017334:	f300 8208 	bgt.w	8017748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8017338:	9b06      	ldr	r3, [sp, #24]
 801733a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801733e:	9b07      	ldr	r3, [sp, #28]
 8017340:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017344:	9307      	str	r3, [sp, #28]
 8017346:	e187      	b.n	8017658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8017348:	1c57      	adds	r7, r2, #1
 801734a:	f040 8174 	bne.w	8017636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801734e:	42aa      	cmp	r2, r5
 8017350:	f280 8171 	bge.w	8017636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017354:	1c5e      	adds	r6, r3, #1
 8017356:	f2c0 816e 	blt.w	8017636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801735a:	9a08      	ldr	r2, [sp, #32]
 801735c:	4293      	cmp	r3, r2
 801735e:	f280 816a 	bge.w	8017636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017362:	9b06      	ldr	r3, [sp, #24]
 8017364:	9f07      	ldr	r7, [sp, #28]
 8017366:	9311      	str	r3, [sp, #68]	; 0x44
 8017368:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801736c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801736e:	2b00      	cmp	r3, #0
 8017370:	dde2      	ble.n	8017338 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8017372:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017374:	1419      	asrs	r1, r3, #16
 8017376:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017378:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801737c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801737e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017382:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017384:	141b      	asrs	r3, r3, #16
 8017386:	f100 81c4 	bmi.w	8017712 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 801738a:	1c58      	adds	r0, r3, #1
 801738c:	4285      	cmp	r5, r0
 801738e:	f340 81c2 	ble.w	8017716 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017392:	2900      	cmp	r1, #0
 8017394:	f2c0 81bf 	blt.w	8017716 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017398:	9c08      	ldr	r4, [sp, #32]
 801739a:	1c48      	adds	r0, r1, #1
 801739c:	4284      	cmp	r4, r0
 801739e:	f340 81ba 	ble.w	8017716 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80173a2:	fb01 3105 	mla	r1, r1, r5, r3
 80173a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80173a8:	fa1f fe82 	uxth.w	lr, r2
 80173ac:	eb03 0a01 	add.w	sl, r3, r1
 80173b0:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80173b4:	f813 9001 	ldrb.w	r9, [r3, r1]
 80173b8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80173bc:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80173c0:	b29b      	uxth	r3, r3
 80173c2:	f1bc 0f00 	cmp.w	ip, #0
 80173c6:	f000 8186 	beq.w	80176d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 80173ca:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80173ce:	940b      	str	r4, [sp, #44]	; 0x2c
 80173d0:	eb0a 0b05 	add.w	fp, sl, r5
 80173d4:	fa1f fa8c 	uxth.w	sl, ip
 80173d8:	fb0a fe0e 	mul.w	lr, sl, lr
 80173dc:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80173e0:	fa1f fa8a 	uxth.w	sl, sl
 80173e4:	eba0 000e 	sub.w	r0, r0, lr
 80173e8:	eba3 030a 	sub.w	r3, r3, sl
 80173ec:	b280      	uxth	r0, r0
 80173ee:	fb08 f000 	mul.w	r0, r8, r0
 80173f2:	b29b      	uxth	r3, r3
 80173f4:	fb09 0303 	mla	r3, r9, r3, r0
 80173f8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80173fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80173fe:	940c      	str	r4, [sp, #48]	; 0x30
 8017400:	fb0a 3300 	mla	r3, sl, r0, r3
 8017404:	fb0e 3304 	mla	r3, lr, r4, r3
 8017408:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801740c:	2b00      	cmp	r3, #0
 801740e:	f000 8105 	beq.w	801761c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017412:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017414:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017416:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801741a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801741e:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8017422:	f000 815d 	beq.w	80176e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 8017426:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801742a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801742e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017432:	fb09 f101 	mul.w	r1, r9, r1
 8017436:	fb0a fe0e 	mul.w	lr, sl, lr
 801743a:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801743e:	f101 0b20 	add.w	fp, r1, #32
 8017442:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017446:	44ce      	add	lr, r9
 8017448:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 801744c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017450:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017454:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017458:	ea4e 0909 	orr.w	r9, lr, r9
 801745c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017460:	8841      	ldrh	r1, [r0, #2]
 8017462:	d019      	beq.n	8017498 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8017464:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017468:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801746c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017470:	fb0a fe0e 	mul.w	lr, sl, lr
 8017474:	fb08 f801 	mul.w	r8, r8, r1
 8017478:	f108 0b20 	add.w	fp, r8, #32
 801747c:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8017480:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017484:	448e      	add	lr, r1
 8017486:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 801748a:	0a09      	lsrs	r1, r1, #8
 801748c:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8017490:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017494:	ea4a 0101 	orr.w	r1, sl, r1
 8017498:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801749c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80174a0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80174a4:	ea4e 0909 	orr.w	r9, lr, r9
 80174a8:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 80174ac:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80174b0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80174b4:	ea4e 0e01 	orr.w	lr, lr, r1
 80174b8:	f1bc 0f00 	cmp.w	ip, #0
 80174bc:	f000 8112 	beq.w	80176e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 80174c0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80174c2:	eb00 0801 	add.w	r8, r0, r1
 80174c6:	5a41      	ldrh	r1, [r0, r1]
 80174c8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80174ca:	28ff      	cmp	r0, #255	; 0xff
 80174cc:	d019      	beq.n	8017502 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 80174ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80174d0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80174d4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80174d8:	fb04 fb01 	mul.w	fp, r4, r1
 80174dc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80174e0:	fb0a fa00 	mul.w	sl, sl, r0
 80174e4:	f10b 0020 	add.w	r0, fp, #32
 80174e8:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80174ec:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80174f0:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80174f4:	4451      	add	r1, sl
 80174f6:	0a00      	lsrs	r0, r0, #8
 80174f8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80174fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017500:	4301      	orrs	r1, r0
 8017502:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017504:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8017508:	2cff      	cmp	r4, #255	; 0xff
 801750a:	d01a      	beq.n	8017542 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 801750c:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8017510:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017514:	fb04 fb00 	mul.w	fp, r4, r0
 8017518:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801751c:	fb0a fa08 	mul.w	sl, sl, r8
 8017520:	f10b 0820 	add.w	r8, fp, #32
 8017524:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8017528:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 801752c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017530:	4450      	add	r0, sl
 8017532:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017536:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801753a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801753e:	ea40 0008 	orr.w	r0, r0, r8
 8017542:	fb1c f802 	smulbb	r8, ip, r2
 8017546:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801754a:	f1cc 0a10 	rsb	sl, ip, #16
 801754e:	ebaa 0a02 	sub.w	sl, sl, r2
 8017552:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017556:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 801755a:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 801755e:	fb0e f202 	mul.w	r2, lr, r2
 8017562:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017566:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 801756a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801756e:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8017572:	fb09 220a 	mla	r2, r9, sl, r2
 8017576:	ea4b 0101 	orr.w	r1, fp, r1
 801757a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801757e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017582:	fb0c 2201 	mla	r2, ip, r1, r2
 8017586:	ea4e 0000 	orr.w	r0, lr, r0
 801758a:	fb08 2800 	mla	r8, r8, r0, r2
 801758e:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8017592:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017596:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801759a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801759e:	ea42 0808 	orr.w	r8, r2, r8
 80175a2:	fa1f f288 	uxth.w	r2, r8
 80175a6:	2bff      	cmp	r3, #255	; 0xff
 80175a8:	f000 80b1 	beq.w	801770e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80175ac:	f8b7 8000 	ldrh.w	r8, [r7]
 80175b0:	43db      	mvns	r3, r3
 80175b2:	ea4f 2028 	mov.w	r0, r8, asr #8
 80175b6:	fa5f fe83 	uxtb.w	lr, r3
 80175ba:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80175be:	fb00 f00e 	mul.w	r0, r0, lr
 80175c2:	1c41      	adds	r1, r0, #1
 80175c4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80175c8:	1210      	asrs	r0, r2, #8
 80175ca:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80175ce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80175d2:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 80175d6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80175da:	495a      	ldr	r1, [pc, #360]	; (8017744 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 80175dc:	fb0c fc0e 	mul.w	ip, ip, lr
 80175e0:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 80175e4:	f10c 0101 	add.w	r1, ip, #1
 80175e8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80175ec:	10d1      	asrs	r1, r2, #3
 80175ee:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80175f2:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 80175f6:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 80175fa:	b2db      	uxtb	r3, r3
 80175fc:	00c9      	lsls	r1, r1, #3
 80175fe:	fb03 f30e 	mul.w	r3, r3, lr
 8017602:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017606:	4301      	orrs	r1, r0
 8017608:	1c58      	adds	r0, r3, #1
 801760a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801760e:	00d3      	lsls	r3, r2, #3
 8017610:	b2db      	uxtb	r3, r3
 8017612:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017616:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 801761a:	803b      	strh	r3, [r7, #0]
 801761c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801761e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017620:	4413      	add	r3, r2
 8017622:	9327      	str	r3, [sp, #156]	; 0x9c
 8017624:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017626:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017628:	441a      	add	r2, r3
 801762a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801762c:	9228      	str	r2, [sp, #160]	; 0xa0
 801762e:	3b01      	subs	r3, #1
 8017630:	3702      	adds	r7, #2
 8017632:	9311      	str	r3, [sp, #68]	; 0x44
 8017634:	e69a      	b.n	801736c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8017636:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017638:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801763a:	4413      	add	r3, r2
 801763c:	9327      	str	r3, [sp, #156]	; 0x9c
 801763e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017640:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017642:	441a      	add	r2, r3
 8017644:	9b06      	ldr	r3, [sp, #24]
 8017646:	9228      	str	r2, [sp, #160]	; 0xa0
 8017648:	3b01      	subs	r3, #1
 801764a:	9306      	str	r3, [sp, #24]
 801764c:	9b07      	ldr	r3, [sp, #28]
 801764e:	3302      	adds	r3, #2
 8017650:	9307      	str	r3, [sp, #28]
 8017652:	e63f      	b.n	80172d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8017654:	f47f ae51 	bne.w	80172fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8017658:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801765a:	2b00      	cmp	r3, #0
 801765c:	f340 81dd 	ble.w	8017a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8017660:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017664:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017668:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801766c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801766e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017672:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017676:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801767a:	eef0 6a48 	vmov.f32	s13, s16
 801767e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017682:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017686:	ee37 8a48 	vsub.f32	s16, s14, s16
 801768a:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 801768e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017692:	eef0 6a68 	vmov.f32	s13, s17
 8017696:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801769a:	ee18 2a10 	vmov	r2, s16
 801769e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80176a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80176a6:	ee18 2a90 	vmov	r2, s17
 80176aa:	9329      	str	r3, [sp, #164]	; 0xa4
 80176ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80176ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80176b2:	932a      	str	r3, [sp, #168]	; 0xa8
 80176b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80176b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80176b8:	3b01      	subs	r3, #1
 80176ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80176be:	9310      	str	r3, [sp, #64]	; 0x40
 80176c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80176c2:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80176c6:	bf08      	it	eq
 80176c8:	4613      	moveq	r3, r2
 80176ca:	9306      	str	r3, [sp, #24]
 80176cc:	eef0 8a67 	vmov.f32	s17, s15
 80176d0:	eeb0 8a47 	vmov.f32	s16, s14
 80176d4:	e5f7      	b.n	80172c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 80176d6:	fb08 f000 	mul.w	r0, r8, r0
 80176da:	fb09 0303 	mla	r3, r9, r3, r0
 80176de:	e693      	b.n	8017408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 80176e0:	4689      	mov	r9, r1
 80176e2:	e6bb      	b.n	801745c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 80176e4:	f1c2 0010 	rsb	r0, r2, #16
 80176e8:	fb0e f202 	mul.w	r2, lr, r2
 80176ec:	fb09 2900 	mla	r9, r9, r0, r2
 80176f0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80176f4:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80176f8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80176fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017700:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017704:	ea42 0909 	orr.w	r9, r2, r9
 8017708:	fa1f f289 	uxth.w	r2, r9
 801770c:	e74b      	b.n	80175a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 801770e:	803a      	strh	r2, [r7, #0]
 8017710:	e784      	b.n	801761c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017712:	1c5c      	adds	r4, r3, #1
 8017714:	d182      	bne.n	801761c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017716:	429d      	cmp	r5, r3
 8017718:	dd80      	ble.n	801761c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801771a:	1c48      	adds	r0, r1, #1
 801771c:	f6ff af7e 	blt.w	801761c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017720:	9808      	ldr	r0, [sp, #32]
 8017722:	4288      	cmp	r0, r1
 8017724:	f77f af7a 	ble.w	801761c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017728:	e9cd 3102 	strd	r3, r1, [sp, #8]
 801772c:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 8017730:	e9cd 5000 	strd	r5, r0, [sp]
 8017734:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8017738:	4639      	mov	r1, r7
 801773a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801773c:	f7ff fbf2 	bl	8016f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8017740:	e76c      	b.n	801761c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017742:	bf00      	nop
 8017744:	fffff800 	.word	0xfffff800
 8017748:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801774a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801774e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017750:	141f      	asrs	r7, r3, #16
 8017752:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8017756:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017758:	141b      	asrs	r3, r3, #16
 801775a:	fb05 3707 	mla	r7, r5, r7, r3
 801775e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017760:	fa1f fc82 	uxth.w	ip, r2
 8017764:	eb03 0a07 	add.w	sl, r3, r7
 8017768:	ea4f 110c 	mov.w	r1, ip, lsl #4
 801776c:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017770:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017774:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8017778:	b29b      	uxth	r3, r3
 801777a:	2800      	cmp	r0, #0
 801777c:	f000 8132 	beq.w	80179e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 8017780:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8017784:	940d      	str	r4, [sp, #52]	; 0x34
 8017786:	eb0a 0b05 	add.w	fp, sl, r5
 801778a:	fa1f fa80 	uxth.w	sl, r0
 801778e:	fb0a fc0c 	mul.w	ip, sl, ip
 8017792:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017796:	fa1f fa8a 	uxth.w	sl, sl
 801779a:	eba1 010c 	sub.w	r1, r1, ip
 801779e:	eba3 030a 	sub.w	r3, r3, sl
 80177a2:	b289      	uxth	r1, r1
 80177a4:	fb08 f101 	mul.w	r1, r8, r1
 80177a8:	b29b      	uxth	r3, r3
 80177aa:	fb09 1303 	mla	r3, r9, r3, r1
 80177ae:	990d      	ldr	r1, [sp, #52]	; 0x34
 80177b0:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80177b4:	940e      	str	r4, [sp, #56]	; 0x38
 80177b6:	fb0a 3301 	mla	r3, sl, r1, r3
 80177ba:	fb0c 3304 	mla	r3, ip, r4, r3
 80177be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80177c2:	2b00      	cmp	r3, #0
 80177c4:	f000 8100 	beq.w	80179c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 80177c8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80177ca:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80177cc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80177d0:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80177d4:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80177d8:	f000 8109 	beq.w	80179ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 80177dc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80177e0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80177e4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80177e8:	fb09 f707 	mul.w	r7, r9, r7
 80177ec:	fb0a fc0c 	mul.w	ip, sl, ip
 80177f0:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80177f4:	f107 0b20 	add.w	fp, r7, #32
 80177f8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80177fc:	44cc      	add	ip, r9
 80177fe:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017802:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017806:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801780a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801780e:	ea4c 0909 	orr.w	r9, ip, r9
 8017812:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017816:	884f      	ldrh	r7, [r1, #2]
 8017818:	d019      	beq.n	801784e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 801781a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801781e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017822:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017826:	fb08 f807 	mul.w	r8, r8, r7
 801782a:	fb0a fc0c 	mul.w	ip, sl, ip
 801782e:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017832:	f108 0b20 	add.w	fp, r8, #32
 8017836:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801783a:	44bc      	add	ip, r7
 801783c:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017840:	0a3f      	lsrs	r7, r7, #8
 8017842:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017846:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801784a:	ea4c 0707 	orr.w	r7, ip, r7
 801784e:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017852:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017856:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801785a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801785e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017862:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017866:	ea4c 0909 	orr.w	r9, ip, r9
 801786a:	ea4a 0707 	orr.w	r7, sl, r7
 801786e:	2800      	cmp	r0, #0
 8017870:	f000 80bf 	beq.w	80179f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 8017874:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017876:	eb01 0c04 	add.w	ip, r1, r4
 801787a:	f831 8004 	ldrh.w	r8, [r1, r4]
 801787e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017880:	29ff      	cmp	r1, #255	; 0xff
 8017882:	d01a      	beq.n	80178ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 8017884:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017886:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 801788a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801788e:	fb04 fb08 	mul.w	fp, r4, r8
 8017892:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017896:	fb0a fa01 	mul.w	sl, sl, r1
 801789a:	f10b 0120 	add.w	r1, fp, #32
 801789e:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 80178a2:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 80178a6:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80178aa:	44d0      	add	r8, sl
 80178ac:	0a09      	lsrs	r1, r1, #8
 80178ae:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 80178b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80178b6:	ea48 0801 	orr.w	r8, r8, r1
 80178ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80178bc:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 80178c0:	2cff      	cmp	r4, #255	; 0xff
 80178c2:	d01a      	beq.n	80178fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 80178c4:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 80178c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80178cc:	fb04 fb01 	mul.w	fp, r4, r1
 80178d0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80178d4:	fb0a fa0c 	mul.w	sl, sl, ip
 80178d8:	f10b 0c20 	add.w	ip, fp, #32
 80178dc:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80178e0:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 80178e4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80178e8:	4451      	add	r1, sl
 80178ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80178ee:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80178f2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80178f6:	ea41 010c 	orr.w	r1, r1, ip
 80178fa:	fb10 fc02 	smulbb	ip, r0, r2
 80178fe:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017902:	f1c0 0a10 	rsb	sl, r0, #16
 8017906:	ebaa 0a02 	sub.w	sl, sl, r2
 801790a:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 801790e:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017912:	437a      	muls	r2, r7
 8017914:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8017918:	040f      	lsls	r7, r1, #16
 801791a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801791e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017922:	fb09 220a 	mla	r2, r9, sl, r2
 8017926:	ea4b 0808 	orr.w	r8, fp, r8
 801792a:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 801792e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8017932:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017936:	fb00 2208 	mla	r2, r0, r8, r2
 801793a:	4339      	orrs	r1, r7
 801793c:	fb0c 2201 	mla	r2, ip, r1, r2
 8017940:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8017944:	0952      	lsrs	r2, r2, #5
 8017946:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801794a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801794e:	ea49 0202 	orr.w	r2, r9, r2
 8017952:	2bff      	cmp	r3, #255	; 0xff
 8017954:	b292      	uxth	r2, r2
 8017956:	d05d      	beq.n	8017a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 8017958:	f8be 8000 	ldrh.w	r8, [lr]
 801795c:	4c31      	ldr	r4, [pc, #196]	; (8017a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 801795e:	43db      	mvns	r3, r3
 8017960:	ea4f 2028 	mov.w	r0, r8, asr #8
 8017964:	fa5f fc83 	uxtb.w	ip, r3
 8017968:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801796c:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8017970:	fb00 f00c 	mul.w	r0, r0, ip
 8017974:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017978:	fb07 f10c 	mul.w	r1, r7, ip
 801797c:	1c47      	adds	r7, r0, #1
 801797e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017982:	1217      	asrs	r7, r2, #8
 8017984:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017988:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 801798c:	1c4f      	adds	r7, r1, #1
 801798e:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8017992:	10d1      	asrs	r1, r2, #3
 8017994:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017998:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 801799c:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 80179a0:	b2db      	uxtb	r3, r3
 80179a2:	00c9      	lsls	r1, r1, #3
 80179a4:	fb03 f30c 	mul.w	r3, r3, ip
 80179a8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80179ac:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80179b0:	4308      	orrs	r0, r1
 80179b2:	00d2      	lsls	r2, r2, #3
 80179b4:	1c59      	adds	r1, r3, #1
 80179b6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80179ba:	b2d2      	uxtb	r2, r2
 80179bc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80179c0:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80179c4:	f8ae 0000 	strh.w	r0, [lr]
 80179c8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80179ca:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80179cc:	4413      	add	r3, r2
 80179ce:	9327      	str	r3, [sp, #156]	; 0x9c
 80179d0:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80179d2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80179d4:	441a      	add	r2, r3
 80179d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80179d8:	9228      	str	r2, [sp, #160]	; 0xa0
 80179da:	3b01      	subs	r3, #1
 80179dc:	f10e 0e02 	add.w	lr, lr, #2
 80179e0:	9311      	str	r3, [sp, #68]	; 0x44
 80179e2:	e4a5      	b.n	8017330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80179e4:	fb08 f101 	mul.w	r1, r8, r1
 80179e8:	fb09 1303 	mla	r3, r9, r3, r1
 80179ec:	e6e7      	b.n	80177be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 80179ee:	46b9      	mov	r9, r7
 80179f0:	e70f      	b.n	8017812 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 80179f2:	f1c2 0110 	rsb	r1, r2, #16
 80179f6:	437a      	muls	r2, r7
 80179f8:	fb09 2901 	mla	r9, r9, r1, r2
 80179fc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017a00:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017a04:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017a08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017a0c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017a10:	4302      	orrs	r2, r0
 8017a12:	e79e      	b.n	8017952 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8017a14:	f8ae 2000 	strh.w	r2, [lr]
 8017a18:	e7d6      	b.n	80179c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8017a1a:	b015      	add	sp, #84	; 0x54
 8017a1c:	ecbd 8b08 	vpop	{d8-d11}
 8017a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a24:	fffff800 	.word	0xfffff800

08017a28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8017a28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017a2c:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8017a30:	fb0c 4e03 	mla	lr, ip, r3, r4
 8017a34:	f1bc 0f00 	cmp.w	ip, #0
 8017a38:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8017a3c:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8017a40:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8017a44:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8017a48:	8808      	ldrh	r0, [r1, #0]
 8017a4a:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8017a4e:	db2f      	blt.n	8017ab0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017a50:	45e2      	cmp	sl, ip
 8017a52:	dd2d      	ble.n	8017ab0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017a54:	2c00      	cmp	r4, #0
 8017a56:	db29      	blt.n	8017aac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017a58:	42a3      	cmp	r3, r4
 8017a5a:	dd27      	ble.n	8017aac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017a5c:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8017a60:	1c62      	adds	r2, r4, #1
 8017a62:	d428      	bmi.n	8017ab6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017a64:	4293      	cmp	r3, r2
 8017a66:	dd26      	ble.n	8017ab6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017a68:	b32f      	cbz	r7, 8017ab6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017a6a:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8017a6e:	f11c 0c01 	adds.w	ip, ip, #1
 8017a72:	d424      	bmi.n	8017abe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017a74:	45e2      	cmp	sl, ip
 8017a76:	dd22      	ble.n	8017abe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017a78:	2e00      	cmp	r6, #0
 8017a7a:	f000 809c 	beq.w	8017bb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8017a7e:	2c00      	cmp	r4, #0
 8017a80:	db1b      	blt.n	8017aba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017a82:	42a3      	cmp	r3, r4
 8017a84:	dd19      	ble.n	8017aba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017a86:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8017a8a:	3401      	adds	r4, #1
 8017a8c:	d41a      	bmi.n	8017ac4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8017a8e:	42a3      	cmp	r3, r4
 8017a90:	dd18      	ble.n	8017ac4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8017a92:	b1cf      	cbz	r7, 8017ac8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8017a94:	3301      	adds	r3, #1
 8017a96:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8017a9a:	2f0f      	cmp	r7, #15
 8017a9c:	d915      	bls.n	8017aca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8017a9e:	4b49      	ldr	r3, [pc, #292]	; (8017bc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8017aa0:	4a49      	ldr	r2, [pc, #292]	; (8017bc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8017aa2:	484a      	ldr	r0, [pc, #296]	; (8017bcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8017aa4:	f240 3155 	movw	r1, #853	; 0x355
 8017aa8:	f002 ff38 	bl	801a91c <__assert_func>
 8017aac:	4681      	mov	r9, r0
 8017aae:	e7d7      	b.n	8017a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8017ab0:	4686      	mov	lr, r0
 8017ab2:	4681      	mov	r9, r0
 8017ab4:	e7db      	b.n	8017a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8017ab6:	4686      	mov	lr, r0
 8017ab8:	e7d9      	b.n	8017a6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8017aba:	4684      	mov	ip, r0
 8017abc:	e7e5      	b.n	8017a8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8017abe:	4603      	mov	r3, r0
 8017ac0:	4684      	mov	ip, r0
 8017ac2:	e7ea      	b.n	8017a9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017ac4:	4603      	mov	r3, r0
 8017ac6:	e7e8      	b.n	8017a9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017ac8:	4603      	mov	r3, r0
 8017aca:	2e0f      	cmp	r6, #15
 8017acc:	d8e7      	bhi.n	8017a9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017ace:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8017ad2:	fb17 f806 	smulbb	r8, r7, r6
 8017ad6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017ada:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8017ade:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017ae2:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017ae6:	ea44 0909 	orr.w	r9, r4, r9
 8017aea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017aee:	f1c6 0410 	rsb	r4, r6, #16
 8017af2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017af6:	1be4      	subs	r4, r4, r7
 8017af8:	041a      	lsls	r2, r3, #16
 8017afa:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8017afe:	ea4a 0e0e 	orr.w	lr, sl, lr
 8017b02:	fb07 fe0e 	mul.w	lr, r7, lr
 8017b06:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017b0a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8017b0e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017b12:	fb04 e409 	mla	r4, r4, r9, lr
 8017b16:	4313      	orrs	r3, r2
 8017b18:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8017b1c:	fb08 4303 	mla	r3, r8, r3, r4
 8017b20:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017b24:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8017b28:	4322      	orrs	r2, r4
 8017b2a:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8017b2e:	fb06 3202 	mla	r2, r6, r2, r3
 8017b32:	0d53      	lsrs	r3, r2, #21
 8017b34:	0952      	lsrs	r2, r2, #5
 8017b36:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017b3e:	431a      	orrs	r2, r3
 8017b40:	b293      	uxth	r3, r2
 8017b42:	b2af      	uxth	r7, r5
 8017b44:	1202      	asrs	r2, r0, #8
 8017b46:	43ed      	mvns	r5, r5
 8017b48:	b2ed      	uxtb	r5, r5
 8017b4a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017b4e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017b52:	fb12 f205 	smulbb	r2, r2, r5
 8017b56:	10c6      	asrs	r6, r0, #3
 8017b58:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017b5c:	fb0c 2c07 	mla	ip, ip, r7, r2
 8017b60:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017b64:	10da      	asrs	r2, r3, #3
 8017b66:	fb16 f605 	smulbb	r6, r6, r5
 8017b6a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017b6e:	fb02 6207 	mla	r2, r2, r7, r6
 8017b72:	b296      	uxth	r6, r2
 8017b74:	00c2      	lsls	r2, r0, #3
 8017b76:	00dc      	lsls	r4, r3, #3
 8017b78:	b2d2      	uxtb	r2, r2
 8017b7a:	b2e4      	uxtb	r4, r4
 8017b7c:	fb12 f205 	smulbb	r2, r2, r5
 8017b80:	fb04 2207 	mla	r2, r4, r7, r2
 8017b84:	fa1f fc8c 	uxth.w	ip, ip
 8017b88:	b292      	uxth	r2, r2
 8017b8a:	f10c 0301 	add.w	r3, ip, #1
 8017b8e:	1c50      	adds	r0, r2, #1
 8017b90:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017b94:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017b98:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b9c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017ba0:	4313      	orrs	r3, r2
 8017ba2:	1c72      	adds	r2, r6, #1
 8017ba4:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8017ba8:	0952      	lsrs	r2, r2, #5
 8017baa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017bae:	4313      	orrs	r3, r2
 8017bb0:	800b      	strh	r3, [r1, #0]
 8017bb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017bb6:	2f0f      	cmp	r7, #15
 8017bb8:	f63f af71 	bhi.w	8017a9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017bbc:	4603      	mov	r3, r0
 8017bbe:	4684      	mov	ip, r0
 8017bc0:	e785      	b.n	8017ace <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8017bc2:	bf00      	nop
 8017bc4:	0801e397 	.word	0x0801e397
 8017bc8:	0801e99e 	.word	0x0801e99e
 8017bcc:	0801e41f 	.word	0x0801e41f

08017bd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bd4:	ed2d 8b08 	vpush	{d8-d11}
 8017bd8:	b095      	sub	sp, #84	; 0x54
 8017bda:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8017bde:	9306      	str	r3, [sp, #24]
 8017be0:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8017be4:	9212      	str	r2, [sp, #72]	; 0x48
 8017be6:	9307      	str	r3, [sp, #28]
 8017be8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017bea:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017bee:	930c      	str	r3, [sp, #48]	; 0x30
 8017bf0:	910b      	str	r1, [sp, #44]	; 0x2c
 8017bf2:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017bf6:	9013      	str	r0, [sp, #76]	; 0x4c
 8017bf8:	6850      	ldr	r0, [r2, #4]
 8017bfa:	6812      	ldr	r2, [r2, #0]
 8017bfc:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8017c00:	fb00 1303 	mla	r3, r0, r3, r1
 8017c04:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8017c08:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017c0a:	681b      	ldr	r3, [r3, #0]
 8017c0c:	9309      	str	r3, [sp, #36]	; 0x24
 8017c0e:	007b      	lsls	r3, r7, #1
 8017c10:	930a      	str	r3, [sp, #40]	; 0x28
 8017c12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017c14:	43db      	mvns	r3, r3
 8017c16:	b2db      	uxtb	r3, r3
 8017c18:	eeb0 aa40 	vmov.f32	s20, s0
 8017c1c:	eef0 9a60 	vmov.f32	s19, s1
 8017c20:	eeb0 9a41 	vmov.f32	s18, s2
 8017c24:	eeb0 8a62 	vmov.f32	s16, s5
 8017c28:	eef0 8a43 	vmov.f32	s17, s6
 8017c2c:	eef0 ba44 	vmov.f32	s23, s8
 8017c30:	eeb0 ba64 	vmov.f32	s22, s9
 8017c34:	eef0 aa45 	vmov.f32	s21, s10
 8017c38:	9308      	str	r3, [sp, #32]
 8017c3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017c3c:	2b00      	cmp	r3, #0
 8017c3e:	dc03      	bgt.n	8017c48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017c40:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017c42:	2b00      	cmp	r3, #0
 8017c44:	f340 81f3 	ble.w	801802e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8017c48:	9b06      	ldr	r3, [sp, #24]
 8017c4a:	2b00      	cmp	r3, #0
 8017c4c:	f340 80fa 	ble.w	8017e44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8017c50:	1422      	asrs	r2, r4, #16
 8017c52:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017c56:	d42b      	bmi.n	8017cb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8017c58:	1c51      	adds	r1, r2, #1
 8017c5a:	428f      	cmp	r7, r1
 8017c5c:	dd2b      	ble.n	8017cb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017c5e:	2b00      	cmp	r3, #0
 8017c60:	db29      	blt.n	8017cb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017c62:	9807      	ldr	r0, [sp, #28]
 8017c64:	1c59      	adds	r1, r3, #1
 8017c66:	4288      	cmp	r0, r1
 8017c68:	dd25      	ble.n	8017cb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017c6a:	9b06      	ldr	r3, [sp, #24]
 8017c6c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c6e:	3b01      	subs	r3, #1
 8017c70:	fb02 4203 	mla	r2, r2, r3, r4
 8017c74:	1412      	asrs	r2, r2, #16
 8017c76:	d428      	bmi.n	8017cca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017c78:	3201      	adds	r2, #1
 8017c7a:	4297      	cmp	r7, r2
 8017c7c:	dd25      	ble.n	8017cca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017c7e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017c80:	fb02 6303 	mla	r3, r2, r3, r6
 8017c84:	141b      	asrs	r3, r3, #16
 8017c86:	d420      	bmi.n	8017cca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017c88:	9a07      	ldr	r2, [sp, #28]
 8017c8a:	3301      	adds	r3, #1
 8017c8c:	429a      	cmp	r2, r3
 8017c8e:	dd1c      	ble.n	8017cca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017c90:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8017c94:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 8017c98:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017c9c:	f1b8 0f00 	cmp.w	r8, #0
 8017ca0:	f300 8129 	bgt.w	8017ef6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8017ca4:	9b06      	ldr	r3, [sp, #24]
 8017ca6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017caa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8017cae:	e0cb      	b.n	8017e48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8017cb0:	1c51      	adds	r1, r2, #1
 8017cb2:	f040 80bd 	bne.w	8017e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017cb6:	42ba      	cmp	r2, r7
 8017cb8:	f280 80ba 	bge.w	8017e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017cbc:	1c5a      	adds	r2, r3, #1
 8017cbe:	f2c0 80b7 	blt.w	8017e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017cc2:	9a07      	ldr	r2, [sp, #28]
 8017cc4:	4293      	cmp	r3, r2
 8017cc6:	f280 80b3 	bge.w	8017e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017cca:	f8dd b018 	ldr.w	fp, [sp, #24]
 8017cce:	46c8      	mov	r8, r9
 8017cd0:	f1bb 0f00 	cmp.w	fp, #0
 8017cd4:	dde6      	ble.n	8017ca4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8017cd6:	1421      	asrs	r1, r4, #16
 8017cd8:	ea4f 4226 	mov.w	r2, r6, asr #16
 8017cdc:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017ce0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017ce4:	f100 80ef 	bmi.w	8017ec6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8017ce8:	f101 0c01 	add.w	ip, r1, #1
 8017cec:	4567      	cmp	r7, ip
 8017cee:	f340 80ec 	ble.w	8017eca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017cf2:	2a00      	cmp	r2, #0
 8017cf4:	f2c0 80e9 	blt.w	8017eca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017cf8:	9d07      	ldr	r5, [sp, #28]
 8017cfa:	f102 0c01 	add.w	ip, r2, #1
 8017cfe:	4565      	cmp	r5, ip
 8017d00:	f340 80e3 	ble.w	8017eca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017d04:	fb02 1207 	mla	r2, r2, r7, r1
 8017d08:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017d0a:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8017d0e:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8017d12:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8017d16:	b138      	cbz	r0, 8017d28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 8017d18:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017d1a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017d1c:	4472      	add	r2, lr
 8017d1e:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8017d22:	8852      	ldrh	r2, [r2, #2]
 8017d24:	950e      	str	r5, [sp, #56]	; 0x38
 8017d26:	920f      	str	r2, [sp, #60]	; 0x3c
 8017d28:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8017d2c:	fb13 f200 	smulbb	r2, r3, r0
 8017d30:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017d34:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017d38:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017d3c:	10d2      	asrs	r2, r2, #3
 8017d3e:	ea4e 0c0c 	orr.w	ip, lr, ip
 8017d42:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d46:	f1c0 0e10 	rsb	lr, r0, #16
 8017d4a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017d4e:	ebae 0e03 	sub.w	lr, lr, r3
 8017d52:	ea4a 0101 	orr.w	r1, sl, r1
 8017d56:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017d5a:	4359      	muls	r1, r3
 8017d5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017d5e:	9d08      	ldr	r5, [sp, #32]
 8017d60:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017d64:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8017d68:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017d6c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017d70:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017d74:	ea4c 0c03 	orr.w	ip, ip, r3
 8017d78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017d7a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017d7c:	041b      	lsls	r3, r3, #16
 8017d7e:	fb02 ec0c 	mla	ip, r2, ip, lr
 8017d82:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017d86:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017d8a:	ea43 030e 	orr.w	r3, r3, lr
 8017d8e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017d92:	fb02 c203 	mla	r2, r2, r3, ip
 8017d96:	0d53      	lsrs	r3, r2, #21
 8017d98:	0952      	lsrs	r2, r2, #5
 8017d9a:	f8b8 c000 	ldrh.w	ip, [r8]
 8017d9e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017da2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017da6:	431a      	orrs	r2, r3
 8017da8:	b292      	uxth	r2, r2
 8017daa:	ea4f 212c 	mov.w	r1, ip, asr #8
 8017dae:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8017db2:	1210      	asrs	r0, r2, #8
 8017db4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017db8:	fb11 f105 	smulbb	r1, r1, r5
 8017dbc:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8017dc0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017dc4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017dc8:	fb00 1003 	mla	r0, r0, r3, r1
 8017dcc:	fa5f fc8c 	uxtb.w	ip, ip
 8017dd0:	10d1      	asrs	r1, r2, #3
 8017dd2:	00d2      	lsls	r2, r2, #3
 8017dd4:	fb1c fc05 	smulbb	ip, ip, r5
 8017dd8:	b2d2      	uxtb	r2, r2
 8017dda:	fb02 c203 	mla	r2, r2, r3, ip
 8017dde:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8017de2:	b280      	uxth	r0, r0
 8017de4:	b292      	uxth	r2, r2
 8017de6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017dea:	fb1e fe05 	smulbb	lr, lr, r5
 8017dee:	fb01 e103 	mla	r1, r1, r3, lr
 8017df2:	f102 0c01 	add.w	ip, r2, #1
 8017df6:	1c43      	adds	r3, r0, #1
 8017df8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017dfc:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8017e00:	b289      	uxth	r1, r1
 8017e02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017e06:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017e0a:	4313      	orrs	r3, r2
 8017e0c:	1c4a      	adds	r2, r1, #1
 8017e0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017e12:	0949      	lsrs	r1, r1, #5
 8017e14:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e18:	430b      	orrs	r3, r1
 8017e1a:	f8a8 3000 	strh.w	r3, [r8]
 8017e1e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017e20:	441c      	add	r4, r3
 8017e22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017e24:	f108 0802 	add.w	r8, r8, #2
 8017e28:	441e      	add	r6, r3
 8017e2a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017e2e:	e74f      	b.n	8017cd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8017e30:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017e32:	441c      	add	r4, r3
 8017e34:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017e36:	441e      	add	r6, r3
 8017e38:	9b06      	ldr	r3, [sp, #24]
 8017e3a:	3b01      	subs	r3, #1
 8017e3c:	9306      	str	r3, [sp, #24]
 8017e3e:	f109 0902 	add.w	r9, r9, #2
 8017e42:	e701      	b.n	8017c48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017e44:	f47f af11 	bne.w	8017c6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8017e48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017e4a:	2b00      	cmp	r3, #0
 8017e4c:	f340 80ef 	ble.w	801802e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8017e50:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017e54:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017e58:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017e5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017e5e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017e62:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017e66:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017e6a:	eef0 6a48 	vmov.f32	s13, s16
 8017e6e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017e72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e76:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017e7a:	ee16 4a90 	vmov	r4, s13
 8017e7e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017e82:	eef0 6a68 	vmov.f32	s13, s17
 8017e86:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017e8a:	ee18 2a10 	vmov	r2, s16
 8017e8e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017e92:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e96:	ee18 2a90 	vmov	r2, s17
 8017e9a:	9329      	str	r3, [sp, #164]	; 0xa4
 8017e9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017e9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ea2:	932a      	str	r3, [sp, #168]	; 0xa8
 8017ea4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017ea6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017ea8:	3b01      	subs	r3, #1
 8017eaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017eae:	930b      	str	r3, [sp, #44]	; 0x2c
 8017eb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017eb2:	bf08      	it	eq
 8017eb4:	4613      	moveq	r3, r2
 8017eb6:	ee16 6a90 	vmov	r6, s13
 8017eba:	9306      	str	r3, [sp, #24]
 8017ebc:	eef0 8a67 	vmov.f32	s17, s15
 8017ec0:	eeb0 8a47 	vmov.f32	s16, s14
 8017ec4:	e6b9      	b.n	8017c3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8017ec6:	1c4d      	adds	r5, r1, #1
 8017ec8:	d1a9      	bne.n	8017e1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017eca:	428f      	cmp	r7, r1
 8017ecc:	dda7      	ble.n	8017e1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017ece:	1c55      	adds	r5, r2, #1
 8017ed0:	dba5      	blt.n	8017e1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017ed2:	9d07      	ldr	r5, [sp, #28]
 8017ed4:	4295      	cmp	r5, r2
 8017ed6:	dda2      	ble.n	8017e1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017ed8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017eda:	9101      	str	r1, [sp, #4]
 8017edc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8017ee0:	9b07      	ldr	r3, [sp, #28]
 8017ee2:	9300      	str	r3, [sp, #0]
 8017ee4:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8017ee8:	463b      	mov	r3, r7
 8017eea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017eec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017eee:	4641      	mov	r1, r8
 8017ef0:	f7ff fd9a 	bl	8017a28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8017ef4:	e793      	b.n	8017e1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017ef6:	1422      	asrs	r2, r4, #16
 8017ef8:	1431      	asrs	r1, r6, #16
 8017efa:	fb07 2101 	mla	r1, r7, r1, r2
 8017efe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017f00:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017f02:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8017f06:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017f0a:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8017f0e:	8851      	ldrh	r1, [r2, #2]
 8017f10:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017f14:	f1be 0f00 	cmp.w	lr, #0
 8017f18:	d006      	beq.n	8017f28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 8017f1a:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017f1c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017f1e:	1810      	adds	r0, r2, r0
 8017f20:	5b52      	ldrh	r2, [r2, r5]
 8017f22:	9210      	str	r2, [sp, #64]	; 0x40
 8017f24:	8842      	ldrh	r2, [r0, #2]
 8017f26:	9211      	str	r2, [sp, #68]	; 0x44
 8017f28:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8017f2c:	fb13 f20e 	smulbb	r2, r3, lr
 8017f30:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017f34:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017f38:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017f3c:	10d2      	asrs	r2, r2, #3
 8017f3e:	ea40 000c 	orr.w	r0, r0, ip
 8017f42:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017f46:	f1ce 0c10 	rsb	ip, lr, #16
 8017f4a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017f4e:	ebac 0c03 	sub.w	ip, ip, r3
 8017f52:	ea4b 0101 	orr.w	r1, fp, r1
 8017f56:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017f5a:	4359      	muls	r1, r3
 8017f5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017f5e:	9d08      	ldr	r5, [sp, #32]
 8017f60:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017f64:	fb0c 1c00 	mla	ip, ip, r0, r1
 8017f68:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017f6c:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8017f70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017f72:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017f76:	ea4b 0000 	orr.w	r0, fp, r0
 8017f7a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017f7e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017f82:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017f86:	fb02 c000 	mla	r0, r2, r0, ip
 8017f8a:	ea4b 0b03 	orr.w	fp, fp, r3
 8017f8e:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8017f92:	fb02 0b0b 	mla	fp, r2, fp, r0
 8017f96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017f98:	ea4f 515b 	mov.w	r1, fp, lsr #21
 8017f9c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017fa0:	8812      	ldrh	r2, [r2, #0]
 8017fa2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017fa6:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017faa:	ea41 0b0b 	orr.w	fp, r1, fp
 8017fae:	fa1f f38b 	uxth.w	r3, fp
 8017fb2:	1211      	asrs	r1, r2, #8
 8017fb4:	1218      	asrs	r0, r3, #8
 8017fb6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017fba:	fb11 f105 	smulbb	r1, r1, r5
 8017fbe:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8017fc2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017fc6:	00d2      	lsls	r2, r2, #3
 8017fc8:	fb00 100a 	mla	r0, r0, sl, r1
 8017fcc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017fd0:	10d9      	asrs	r1, r3, #3
 8017fd2:	b2d2      	uxtb	r2, r2
 8017fd4:	00db      	lsls	r3, r3, #3
 8017fd6:	fb1c fc05 	smulbb	ip, ip, r5
 8017fda:	fb12 f205 	smulbb	r2, r2, r5
 8017fde:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017fe2:	b2db      	uxtb	r3, r3
 8017fe4:	b280      	uxth	r0, r0
 8017fe6:	fb01 c10a 	mla	r1, r1, sl, ip
 8017fea:	fb03 230a 	mla	r3, r3, sl, r2
 8017fee:	b29b      	uxth	r3, r3
 8017ff0:	b289      	uxth	r1, r1
 8017ff2:	1c42      	adds	r2, r0, #1
 8017ff4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017ff8:	f101 0c01 	add.w	ip, r1, #1
 8017ffc:	1c5a      	adds	r2, r3, #1
 8017ffe:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018002:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8018006:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801800a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801800e:	0949      	lsrs	r1, r1, #5
 8018010:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018012:	4310      	orrs	r0, r2
 8018014:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018018:	4308      	orrs	r0, r1
 801801a:	f823 0b02 	strh.w	r0, [r3], #2
 801801e:	930d      	str	r3, [sp, #52]	; 0x34
 8018020:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018022:	441c      	add	r4, r3
 8018024:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018026:	f108 38ff 	add.w	r8, r8, #4294967295
 801802a:	441e      	add	r6, r3
 801802c:	e636      	b.n	8017c9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 801802e:	b015      	add	sp, #84	; 0x54
 8018030:	ecbd 8b08 	vpop	{d8-d11}
 8018034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018038 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8018038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801803c:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8018040:	fb06 5c03 	mla	ip, r6, r3, r5
 8018044:	2e00      	cmp	r6, #0
 8018046:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801804a:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801804e:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8018052:	8808      	ldrh	r0, [r1, #0]
 8018054:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018058:	db2e      	blt.n	80180b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801805a:	45b0      	cmp	r8, r6
 801805c:	dd2c      	ble.n	80180b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801805e:	2d00      	cmp	r5, #0
 8018060:	db28      	blt.n	80180b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018062:	42ab      	cmp	r3, r5
 8018064:	dd26      	ble.n	80180b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8018066:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801806a:	1c6a      	adds	r2, r5, #1
 801806c:	d427      	bmi.n	80180be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801806e:	4293      	cmp	r3, r2
 8018070:	dd25      	ble.n	80180be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018072:	b324      	cbz	r4, 80180be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8018074:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8018078:	3601      	adds	r6, #1
 801807a:	d424      	bmi.n	80180c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801807c:	45b0      	cmp	r8, r6
 801807e:	dd22      	ble.n	80180c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018080:	b31f      	cbz	r7, 80180ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8018082:	2d00      	cmp	r5, #0
 8018084:	db1d      	blt.n	80180c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018086:	42ab      	cmp	r3, r5
 8018088:	dd1b      	ble.n	80180c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801808a:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801808e:	3501      	adds	r5, #1
 8018090:	d405      	bmi.n	801809e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018092:	42ab      	cmp	r3, r5
 8018094:	dd03      	ble.n	801809e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018096:	b124      	cbz	r4, 80180a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8018098:	3301      	adds	r3, #1
 801809a:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801809e:	2c0f      	cmp	r4, #15
 80180a0:	d801      	bhi.n	80180a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80180a2:	2f0f      	cmp	r7, #15
 80180a4:	d914      	bls.n	80180d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80180a6:	4b27      	ldr	r3, [pc, #156]	; (8018144 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80180a8:	4a27      	ldr	r2, [pc, #156]	; (8018148 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80180aa:	4828      	ldr	r0, [pc, #160]	; (801814c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 80180ac:	f240 3155 	movw	r1, #853	; 0x355
 80180b0:	f002 fc34 	bl	801a91c <__assert_func>
 80180b4:	4684      	mov	ip, r0
 80180b6:	e7d8      	b.n	801806a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 80180b8:	4602      	mov	r2, r0
 80180ba:	4684      	mov	ip, r0
 80180bc:	e7dc      	b.n	8018078 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80180be:	4602      	mov	r2, r0
 80180c0:	e7da      	b.n	8018078 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80180c2:	4606      	mov	r6, r0
 80180c4:	e7e3      	b.n	801808e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 80180c6:	4606      	mov	r6, r0
 80180c8:	e7e9      	b.n	801809e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80180ca:	2c0f      	cmp	r4, #15
 80180cc:	d8eb      	bhi.n	80180a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80180ce:	4606      	mov	r6, r0
 80180d0:	ea4f 450c 	mov.w	r5, ip, lsl #16
 80180d4:	fb14 f307 	smulbb	r3, r4, r7
 80180d8:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80180dc:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80180e0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80180e4:	10db      	asrs	r3, r3, #3
 80180e6:	ea45 0c0c 	orr.w	ip, r5, ip
 80180ea:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80180ee:	f1c7 0510 	rsb	r5, r7, #16
 80180f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80180f6:	1b2d      	subs	r5, r5, r4
 80180f8:	ea4e 0202 	orr.w	r2, lr, r2
 80180fc:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8018100:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018104:	4354      	muls	r4, r2
 8018106:	fb05 450c 	mla	r5, r5, ip, r4
 801810a:	0404      	lsls	r4, r0, #16
 801810c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018110:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018114:	4320      	orrs	r0, r4
 8018116:	fb03 5400 	mla	r4, r3, r0, r5
 801811a:	0430      	lsls	r0, r6, #16
 801811c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018120:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8018124:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8018128:	4330      	orrs	r0, r6
 801812a:	fb07 4000 	mla	r0, r7, r0, r4
 801812e:	0d43      	lsrs	r3, r0, #21
 8018130:	0940      	lsrs	r0, r0, #5
 8018132:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018136:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801813a:	4318      	orrs	r0, r3
 801813c:	8008      	strh	r0, [r1, #0]
 801813e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018142:	bf00      	nop
 8018144:	0801e397 	.word	0x0801e397
 8018148:	0801e99e 	.word	0x0801e99e
 801814c:	0801e41f 	.word	0x0801e41f

08018150 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018154:	ed2d 8b0a 	vpush	{d8-d12}
 8018158:	b093      	sub	sp, #76	; 0x4c
 801815a:	461d      	mov	r5, r3
 801815c:	9210      	str	r2, [sp, #64]	; 0x40
 801815e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018160:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 8018164:	9208      	str	r2, [sp, #32]
 8018166:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 801816a:	910b      	str	r1, [sp, #44]	; 0x2c
 801816c:	6859      	ldr	r1, [r3, #4]
 801816e:	681b      	ldr	r3, [r3, #0]
 8018170:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 8018174:	9011      	str	r0, [sp, #68]	; 0x44
 8018176:	fb01 2707 	mla	r7, r1, r7, r2
 801817a:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801817e:	9307      	str	r3, [sp, #28]
 8018180:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018182:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018186:	681b      	ldr	r3, [r3, #0]
 8018188:	9309      	str	r3, [sp, #36]	; 0x24
 801818a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801818e:	eeb0 aa40 	vmov.f32	s20, s0
 8018192:	eef0 9a60 	vmov.f32	s19, s1
 8018196:	eeb0 9a41 	vmov.f32	s18, s2
 801819a:	eeb0 8a62 	vmov.f32	s16, s5
 801819e:	eef0 8a43 	vmov.f32	s17, s6
 80181a2:	eeb0 ca44 	vmov.f32	s24, s8
 80181a6:	eef0 ba64 	vmov.f32	s23, s9
 80181aa:	eeb0 ba45 	vmov.f32	s22, s10
 80181ae:	930a      	str	r3, [sp, #40]	; 0x28
 80181b0:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80181b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80181b6:	2b00      	cmp	r3, #0
 80181b8:	dc03      	bgt.n	80181c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80181ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80181bc:	2b00      	cmp	r3, #0
 80181be:	f340 816c 	ble.w	801849a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80181c2:	2d00      	cmp	r5, #0
 80181c4:	f340 80b6 	ble.w	8018334 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 80181c8:	1422      	asrs	r2, r4, #16
 80181ca:	ea4f 4326 	mov.w	r3, r6, asr #16
 80181ce:	d428      	bmi.n	8018222 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 80181d0:	1c51      	adds	r1, r2, #1
 80181d2:	4588      	cmp	r8, r1
 80181d4:	dd27      	ble.n	8018226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80181d6:	2b00      	cmp	r3, #0
 80181d8:	db25      	blt.n	8018226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80181da:	9808      	ldr	r0, [sp, #32]
 80181dc:	1c59      	adds	r1, r3, #1
 80181de:	4288      	cmp	r0, r1
 80181e0:	dd21      	ble.n	8018226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80181e2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80181e4:	1e6b      	subs	r3, r5, #1
 80181e6:	fb02 4203 	mla	r2, r2, r3, r4
 80181ea:	1412      	asrs	r2, r2, #16
 80181ec:	d422      	bmi.n	8018234 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80181ee:	3201      	adds	r2, #1
 80181f0:	4590      	cmp	r8, r2
 80181f2:	dd1f      	ble.n	8018234 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80181f4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80181f6:	fb02 6303 	mla	r3, r2, r3, r6
 80181fa:	141b      	asrs	r3, r3, #16
 80181fc:	d41a      	bmi.n	8018234 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80181fe:	9a08      	ldr	r2, [sp, #32]
 8018200:	3301      	adds	r3, #1
 8018202:	429a      	cmp	r2, r3
 8018204:	dd16      	ble.n	8018234 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018206:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801820a:	46a9      	mov	r9, r5
 801820c:	f1b9 0f00 	cmp.w	r9, #0
 8018210:	f300 80e4 	bgt.w	80183dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8018214:	9b07      	ldr	r3, [sp, #28]
 8018216:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801821a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801821e:	9307      	str	r3, [sp, #28]
 8018220:	e08a      	b.n	8018338 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8018222:	1c51      	adds	r1, r2, #1
 8018224:	d17d      	bne.n	8018322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018226:	4542      	cmp	r2, r8
 8018228:	da7b      	bge.n	8018322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801822a:	1c5a      	adds	r2, r3, #1
 801822c:	db79      	blt.n	8018322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801822e:	9a08      	ldr	r2, [sp, #32]
 8018230:	4293      	cmp	r3, r2
 8018232:	da76      	bge.n	8018322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018234:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018238:	46aa      	mov	sl, r5
 801823a:	f1ba 0f00 	cmp.w	sl, #0
 801823e:	dde9      	ble.n	8018214 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8018240:	1421      	asrs	r1, r4, #16
 8018242:	ea4f 4226 	mov.w	r2, r6, asr #16
 8018246:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801824a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801824e:	f100 80b0 	bmi.w	80183b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 8018252:	f101 0c01 	add.w	ip, r1, #1
 8018256:	45e0      	cmp	r8, ip
 8018258:	f340 80ad 	ble.w	80183b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801825c:	2a00      	cmp	r2, #0
 801825e:	f2c0 80aa 	blt.w	80183b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018262:	9f08      	ldr	r7, [sp, #32]
 8018264:	f102 0c01 	add.w	ip, r2, #1
 8018268:	4567      	cmp	r7, ip
 801826a:	f340 80a4 	ble.w	80183b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801826e:	fb02 1208 	mla	r2, r2, r8, r1
 8018272:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018274:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8018278:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 801827c:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8018280:	b138      	cbz	r0, 8018292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8018282:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018284:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018286:	4472      	add	r2, lr
 8018288:	f83e 7007 	ldrh.w	r7, [lr, r7]
 801828c:	8852      	ldrh	r2, [r2, #2]
 801828e:	970c      	str	r7, [sp, #48]	; 0x30
 8018290:	920d      	str	r2, [sp, #52]	; 0x34
 8018292:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8018296:	fb13 f200 	smulbb	r2, r3, r0
 801829a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801829e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80182a2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80182a6:	10d2      	asrs	r2, r2, #3
 80182a8:	ea4e 0c0c 	orr.w	ip, lr, ip
 80182ac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80182b0:	f1c0 0e10 	rsb	lr, r0, #16
 80182b4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80182b8:	ebae 0e03 	sub.w	lr, lr, r3
 80182bc:	ea4b 0101 	orr.w	r1, fp, r1
 80182c0:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80182c4:	4359      	muls	r1, r3
 80182c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80182c8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80182cc:	fb0e 1e0c 	mla	lr, lr, ip, r1
 80182d0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80182d4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80182d8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80182dc:	ea4c 0c03 	orr.w	ip, ip, r3
 80182e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80182e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80182e4:	041b      	lsls	r3, r3, #16
 80182e6:	fb02 ec0c 	mla	ip, r2, ip, lr
 80182ea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80182ee:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80182f2:	ea43 030e 	orr.w	r3, r3, lr
 80182f6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80182fa:	fb02 c203 	mla	r2, r2, r3, ip
 80182fe:	0d53      	lsrs	r3, r2, #21
 8018300:	0952      	lsrs	r2, r2, #5
 8018302:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018306:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801830a:	431a      	orrs	r2, r3
 801830c:	f8a9 2000 	strh.w	r2, [r9]
 8018310:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018312:	441c      	add	r4, r3
 8018314:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018316:	f109 0902 	add.w	r9, r9, #2
 801831a:	441e      	add	r6, r3
 801831c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018320:	e78b      	b.n	801823a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8018322:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018324:	441c      	add	r4, r3
 8018326:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018328:	441e      	add	r6, r3
 801832a:	9b07      	ldr	r3, [sp, #28]
 801832c:	3302      	adds	r3, #2
 801832e:	3d01      	subs	r5, #1
 8018330:	9307      	str	r3, [sp, #28]
 8018332:	e746      	b.n	80181c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8018334:	f47f af55 	bne.w	80181e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8018338:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801833a:	2b00      	cmp	r3, #0
 801833c:	f340 80ad 	ble.w	801849a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8018340:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8018344:	ee79 9aab 	vadd.f32	s19, s19, s23
 8018348:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801834c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801834e:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8018352:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018356:	eef0 6a48 	vmov.f32	s13, s16
 801835a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801835e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018362:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018366:	ee16 4a90 	vmov	r4, s13
 801836a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801836e:	eef0 6a68 	vmov.f32	s13, s17
 8018372:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018376:	ee18 2a10 	vmov	r2, s16
 801837a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801837e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018382:	ee18 2a90 	vmov	r2, s17
 8018386:	9329      	str	r3, [sp, #164]	; 0xa4
 8018388:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801838a:	fb92 f3f3 	sdiv	r3, r2, r3
 801838e:	932a      	str	r3, [sp, #168]	; 0xa8
 8018390:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018392:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018394:	3b01      	subs	r3, #1
 8018396:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801839a:	930b      	str	r3, [sp, #44]	; 0x2c
 801839c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801839e:	ee16 6a90 	vmov	r6, s13
 80183a2:	bf14      	ite	ne
 80183a4:	461d      	movne	r5, r3
 80183a6:	4615      	moveq	r5, r2
 80183a8:	eef0 8a67 	vmov.f32	s17, s15
 80183ac:	eeb0 8a47 	vmov.f32	s16, s14
 80183b0:	e700      	b.n	80181b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80183b2:	1c4f      	adds	r7, r1, #1
 80183b4:	d1ac      	bne.n	8018310 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80183b6:	4588      	cmp	r8, r1
 80183b8:	ddaa      	ble.n	8018310 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80183ba:	1c57      	adds	r7, r2, #1
 80183bc:	dba8      	blt.n	8018310 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80183be:	9f08      	ldr	r7, [sp, #32]
 80183c0:	4297      	cmp	r7, r2
 80183c2:	dda5      	ble.n	8018310 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80183c4:	e9cd 3003 	strd	r3, r0, [sp, #12]
 80183c8:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80183cc:	9700      	str	r7, [sp, #0]
 80183ce:	4643      	mov	r3, r8
 80183d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80183d2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80183d4:	4649      	mov	r1, r9
 80183d6:	f7ff fe2f 	bl	8018038 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80183da:	e799      	b.n	8018310 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80183dc:	1422      	asrs	r2, r4, #16
 80183de:	1431      	asrs	r1, r6, #16
 80183e0:	fb08 2101 	mla	r1, r8, r1, r2
 80183e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80183e6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80183e8:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80183ec:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80183f0:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 80183f4:	8851      	ldrh	r1, [r2, #2]
 80183f6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80183fa:	f1be 0f00 	cmp.w	lr, #0
 80183fe:	d006      	beq.n	801840e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8018400:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018402:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018404:	1810      	adds	r0, r2, r0
 8018406:	5bd2      	ldrh	r2, [r2, r7]
 8018408:	920e      	str	r2, [sp, #56]	; 0x38
 801840a:	8842      	ldrh	r2, [r0, #2]
 801840c:	920f      	str	r2, [sp, #60]	; 0x3c
 801840e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018412:	fb13 f20e 	smulbb	r2, r3, lr
 8018416:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801841a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801841e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018422:	10d2      	asrs	r2, r2, #3
 8018424:	ea40 000c 	orr.w	r0, r0, ip
 8018428:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801842c:	f1ce 0c10 	rsb	ip, lr, #16
 8018430:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018434:	ebac 0c03 	sub.w	ip, ip, r3
 8018438:	ea4a 0101 	orr.w	r1, sl, r1
 801843c:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018440:	4359      	muls	r1, r3
 8018442:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018444:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018448:	fb0c 1c00 	mla	ip, ip, r0, r1
 801844c:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018450:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8018454:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018456:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018458:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801845c:	041b      	lsls	r3, r3, #16
 801845e:	ea4a 0000 	orr.w	r0, sl, r0
 8018462:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018466:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 801846a:	fb02 c000 	mla	r0, r2, r0, ip
 801846e:	ea43 0a0a 	orr.w	sl, r3, sl
 8018472:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8018476:	fb02 000a 	mla	r0, r2, sl, r0
 801847a:	0d43      	lsrs	r3, r0, #21
 801847c:	0940      	lsrs	r0, r0, #5
 801847e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018482:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018486:	4318      	orrs	r0, r3
 8018488:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801848a:	f82b 0b02 	strh.w	r0, [fp], #2
 801848e:	441c      	add	r4, r3
 8018490:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018492:	f109 39ff 	add.w	r9, r9, #4294967295
 8018496:	441e      	add	r6, r3
 8018498:	e6b8      	b.n	801820c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 801849a:	b013      	add	sp, #76	; 0x4c
 801849c:	ecbd 8b0a 	vpop	{d8-d12}
 80184a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080184a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80184a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184a8:	8808      	ldrh	r0, [r1, #0]
 80184aa:	b085      	sub	sp, #20
 80184ac:	1206      	asrs	r6, r0, #8
 80184ae:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 80184b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80184b6:	9600      	str	r6, [sp, #0]
 80184b8:	10c6      	asrs	r6, r0, #3
 80184ba:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80184be:	9601      	str	r6, [sp, #4]
 80184c0:	00c0      	lsls	r0, r0, #3
 80184c2:	fb04 c603 	mla	r6, r4, r3, ip
 80184c6:	b2c0      	uxtb	r0, r0
 80184c8:	4691      	mov	r9, r2
 80184ca:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 80184ce:	9a00      	ldr	r2, [sp, #0]
 80184d0:	9002      	str	r0, [sp, #8]
 80184d2:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80184d6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80184da:	9a01      	ldr	r2, [sp, #4]
 80184dc:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 80184e0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80184e4:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 80184e8:	2c00      	cmp	r4, #0
 80184ea:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80184ee:	db3a      	blt.n	8018566 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 80184f0:	45a0      	cmp	r8, r4
 80184f2:	dd38      	ble.n	8018566 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 80184f4:	f1bc 0f00 	cmp.w	ip, #0
 80184f8:	db33      	blt.n	8018562 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 80184fa:	4563      	cmp	r3, ip
 80184fc:	dd31      	ble.n	8018562 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 80184fe:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8018502:	f11c 0601 	adds.w	r6, ip, #1
 8018506:	d431      	bmi.n	801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018508:	42b3      	cmp	r3, r6
 801850a:	dd2f      	ble.n	801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 801850c:	b375      	cbz	r5, 801856c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 801850e:	f8de 6004 	ldr.w	r6, [lr, #4]
 8018512:	3401      	adds	r4, #1
 8018514:	d42e      	bmi.n	8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018516:	45a0      	cmp	r8, r4
 8018518:	dd2c      	ble.n	8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801851a:	b35f      	cbz	r7, 8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801851c:	f1bc 0f00 	cmp.w	ip, #0
 8018520:	db26      	blt.n	8018570 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8018522:	4563      	cmp	r3, ip
 8018524:	dd24      	ble.n	8018570 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8018526:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801852a:	f11c 0c01 	adds.w	ip, ip, #1
 801852e:	d405      	bmi.n	801853c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018530:	4563      	cmp	r3, ip
 8018532:	dd03      	ble.n	801853c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018534:	b115      	cbz	r5, 801853c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018536:	3301      	adds	r3, #1
 8018538:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 801853c:	2d0f      	cmp	r5, #15
 801853e:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018542:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018546:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801854a:	ea4f 6810 	mov.w	r8, r0, lsr #24
 801854e:	d801      	bhi.n	8018554 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8018550:	2f0f      	cmp	r7, #15
 8018552:	d911      	bls.n	8018578 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8018554:	4b82      	ldr	r3, [pc, #520]	; (8018760 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8018556:	4a83      	ldr	r2, [pc, #524]	; (8018764 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 8018558:	4883      	ldr	r0, [pc, #524]	; (8018768 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 801855a:	f240 3173 	movw	r1, #883	; 0x373
 801855e:	f002 f9dd 	bl	801a91c <__assert_func>
 8018562:	4602      	mov	r2, r0
 8018564:	e7cd      	b.n	8018502 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8018566:	4606      	mov	r6, r0
 8018568:	4602      	mov	r2, r0
 801856a:	e7d2      	b.n	8018512 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 801856c:	4606      	mov	r6, r0
 801856e:	e7d0      	b.n	8018512 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8018570:	4604      	mov	r4, r0
 8018572:	e7da      	b.n	801852a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8018574:	4604      	mov	r4, r0
 8018576:	e7e1      	b.n	801853c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018578:	b2ab      	uxth	r3, r5
 801857a:	b2bf      	uxth	r7, r7
 801857c:	fb03 fe07 	mul.w	lr, r3, r7
 8018580:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018584:	011b      	lsls	r3, r3, #4
 8018586:	eba3 0c0e 	sub.w	ip, r3, lr
 801858a:	b2bf      	uxth	r7, r7
 801858c:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8018590:	fa1f fc8c 	uxth.w	ip, ip
 8018594:	1bed      	subs	r5, r5, r7
 8018596:	b2ad      	uxth	r5, r5
 8018598:	fb0c f30a 	mul.w	r3, ip, sl
 801859c:	fb05 330b 	mla	r3, r5, fp, r3
 80185a0:	fb07 3309 	mla	r3, r7, r9, r3
 80185a4:	fb0e 3308 	mla	r3, lr, r8, r3
 80185a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80185ac:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80185b0:	9303      	str	r3, [sp, #12]
 80185b2:	d018      	beq.n	80185e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 80185b4:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80185b8:	fb0b f303 	mul.w	r3, fp, r3
 80185bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80185c0:	fb0b fb02 	mul.w	fp, fp, r2
 80185c4:	0a1a      	lsrs	r2, r3, #8
 80185c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80185ca:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80185ce:	441a      	add	r2, r3
 80185d0:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80185d4:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80185d8:	0a12      	lsrs	r2, r2, #8
 80185da:	0a1b      	lsrs	r3, r3, #8
 80185dc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80185e0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80185e4:	431a      	orrs	r2, r3
 80185e6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80185ea:	d019      	beq.n	8018620 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 80185ec:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80185f0:	fb0a fb0b 	mul.w	fp, sl, fp
 80185f4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80185f8:	fb0a fa06 	mul.w	sl, sl, r6
 80185fc:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018600:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018604:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018608:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801860c:	445e      	add	r6, fp
 801860e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018612:	0a36      	lsrs	r6, r6, #8
 8018614:	0a1b      	lsrs	r3, r3, #8
 8018616:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801861a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801861e:	431e      	orrs	r6, r3
 8018620:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018624:	d019      	beq.n	801865a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8018626:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801862a:	fb09 fa0a 	mul.w	sl, r9, sl
 801862e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018632:	fb09 f904 	mul.w	r9, r9, r4
 8018636:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801863a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801863e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018642:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8018646:	4454      	add	r4, sl
 8018648:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801864c:	0a24      	lsrs	r4, r4, #8
 801864e:	0a1b      	lsrs	r3, r3, #8
 8018650:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018654:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018658:	431c      	orrs	r4, r3
 801865a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801865e:	d019      	beq.n	8018694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8018660:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8018664:	fb08 f909 	mul.w	r9, r8, r9
 8018668:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801866c:	fb08 f800 	mul.w	r8, r8, r0
 8018670:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8018674:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018678:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801867c:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8018680:	4448      	add	r0, r9
 8018682:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8018686:	0a00      	lsrs	r0, r0, #8
 8018688:	0a1b      	lsrs	r3, r3, #8
 801868a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801868e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018692:	4318      	orrs	r0, r3
 8018694:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018698:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801869c:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80186a0:	fb0c f808 	mul.w	r8, ip, r8
 80186a4:	fb0c f606 	mul.w	r6, ip, r6
 80186a8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80186ac:	fb05 6202 	mla	r2, r5, r2, r6
 80186b0:	fb05 8803 	mla	r8, r5, r3, r8
 80186b4:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80186b8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80186bc:	fb07 8803 	mla	r8, r7, r3, r8
 80186c0:	fb07 2704 	mla	r7, r7, r4, r2
 80186c4:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80186c8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80186cc:	fb0e 8303 	mla	r3, lr, r3, r8
 80186d0:	fb0e 7e00 	mla	lr, lr, r0, r7
 80186d4:	0a1b      	lsrs	r3, r3, #8
 80186d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80186da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80186de:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80186e2:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80186e6:	ea43 0e0e 	orr.w	lr, r3, lr
 80186ea:	9b03      	ldr	r3, [sp, #12]
 80186ec:	b2a4      	uxth	r4, r4
 80186ee:	4363      	muls	r3, r4
 80186f0:	1c5a      	adds	r2, r3, #1
 80186f2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80186f6:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 80186fa:	9b00      	ldr	r3, [sp, #0]
 80186fc:	b2d2      	uxtb	r2, r2
 80186fe:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8018702:	fb13 f302 	smulbb	r3, r3, r2
 8018706:	fb05 3304 	mla	r3, r5, r4, r3
 801870a:	b29d      	uxth	r5, r3
 801870c:	9b01      	ldr	r3, [sp, #4]
 801870e:	f3ce 2007 	ubfx	r0, lr, #8, #8
 8018712:	fb13 f302 	smulbb	r3, r3, r2
 8018716:	fb00 3004 	mla	r0, r0, r4, r3
 801871a:	9b02      	ldr	r3, [sp, #8]
 801871c:	fa5f fe8e 	uxtb.w	lr, lr
 8018720:	fb13 f202 	smulbb	r2, r3, r2
 8018724:	fb0e 2e04 	mla	lr, lr, r4, r2
 8018728:	fa1f fe8e 	uxth.w	lr, lr
 801872c:	b280      	uxth	r0, r0
 801872e:	f10e 0201 	add.w	r2, lr, #1
 8018732:	1c6b      	adds	r3, r5, #1
 8018734:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018738:	1c42      	adds	r2, r0, #1
 801873a:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801873e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018742:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018746:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801874a:	0952      	lsrs	r2, r2, #5
 801874c:	ea43 030e 	orr.w	r3, r3, lr
 8018750:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018754:	4313      	orrs	r3, r2
 8018756:	800b      	strh	r3, [r1, #0]
 8018758:	b005      	add	sp, #20
 801875a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801875e:	bf00      	nop
 8018760:	0801e397 	.word	0x0801e397
 8018764:	0801e8f5 	.word	0x0801e8f5
 8018768:	0801e41f 	.word	0x0801e41f

0801876c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801876c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018770:	ed2d 8b08 	vpush	{d8-d11}
 8018774:	b099      	sub	sp, #100	; 0x64
 8018776:	eeb0 aa40 	vmov.f32	s20, s0
 801877a:	9306      	str	r3, [sp, #24]
 801877c:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8018780:	9307      	str	r3, [sp, #28]
 8018782:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8018786:	9216      	str	r2, [sp, #88]	; 0x58
 8018788:	9310      	str	r3, [sp, #64]	; 0x40
 801878a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801878c:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8018790:	9113      	str	r1, [sp, #76]	; 0x4c
 8018792:	9315      	str	r3, [sp, #84]	; 0x54
 8018794:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8018798:	9017      	str	r0, [sp, #92]	; 0x5c
 801879a:	6850      	ldr	r0, [r2, #4]
 801879c:	6812      	ldr	r2, [r2, #0]
 801879e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80187a0:	fb00 1303 	mla	r3, r0, r3, r1
 80187a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80187a8:	930a      	str	r3, [sp, #40]	; 0x28
 80187aa:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80187ac:	681b      	ldr	r3, [r3, #0]
 80187ae:	9312      	str	r3, [sp, #72]	; 0x48
 80187b0:	9b07      	ldr	r3, [sp, #28]
 80187b2:	009b      	lsls	r3, r3, #2
 80187b4:	eef0 9a60 	vmov.f32	s19, s1
 80187b8:	eeb0 9a41 	vmov.f32	s18, s2
 80187bc:	eeb0 8a62 	vmov.f32	s16, s5
 80187c0:	eef0 8a43 	vmov.f32	s17, s6
 80187c4:	eef0 ba44 	vmov.f32	s23, s8
 80187c8:	eeb0 ba64 	vmov.f32	s22, s9
 80187cc:	eef0 aa45 	vmov.f32	s21, s10
 80187d0:	930e      	str	r3, [sp, #56]	; 0x38
 80187d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80187d4:	2b00      	cmp	r3, #0
 80187d6:	dc03      	bgt.n	80187e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80187d8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80187da:	2b00      	cmp	r3, #0
 80187dc:	f340 8352 	ble.w	8018e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 80187e0:	9b06      	ldr	r3, [sp, #24]
 80187e2:	2b00      	cmp	r3, #0
 80187e4:	f340 81a8 	ble.w	8018b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 80187e8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80187ea:	1412      	asrs	r2, r2, #16
 80187ec:	ea4f 4324 	mov.w	r3, r4, asr #16
 80187f0:	d430      	bmi.n	8018854 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 80187f2:	9807      	ldr	r0, [sp, #28]
 80187f4:	1c51      	adds	r1, r2, #1
 80187f6:	4288      	cmp	r0, r1
 80187f8:	dd2f      	ble.n	801885a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80187fa:	2b00      	cmp	r3, #0
 80187fc:	db2d      	blt.n	801885a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80187fe:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018800:	1c59      	adds	r1, r3, #1
 8018802:	4288      	cmp	r0, r1
 8018804:	dd29      	ble.n	801885a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8018806:	9b06      	ldr	r3, [sp, #24]
 8018808:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801880a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801880c:	3b01      	subs	r3, #1
 801880e:	fb02 1203 	mla	r2, r2, r3, r1
 8018812:	1412      	asrs	r2, r2, #16
 8018814:	d42c      	bmi.n	8018870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8018816:	9907      	ldr	r1, [sp, #28]
 8018818:	3201      	adds	r2, #1
 801881a:	4291      	cmp	r1, r2
 801881c:	dd28      	ble.n	8018870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801881e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8018820:	fb02 4303 	mla	r3, r2, r3, r4
 8018824:	141b      	asrs	r3, r3, #16
 8018826:	d423      	bmi.n	8018870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8018828:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801882a:	3301      	adds	r3, #1
 801882c:	429a      	cmp	r2, r3
 801882e:	dd1f      	ble.n	8018870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8018830:	9b06      	ldr	r3, [sp, #24]
 8018832:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8018836:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 801883a:	9311      	str	r3, [sp, #68]	; 0x44
 801883c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801883e:	2b00      	cmp	r3, #0
 8018840:	f300 81e3 	bgt.w	8018c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 8018844:	9b06      	ldr	r3, [sp, #24]
 8018846:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801884a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801884c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018850:	930a      	str	r3, [sp, #40]	; 0x28
 8018852:	e173      	b.n	8018b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 8018854:	1c51      	adds	r1, r2, #1
 8018856:	f040 8162 	bne.w	8018b1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801885a:	9907      	ldr	r1, [sp, #28]
 801885c:	428a      	cmp	r2, r1
 801885e:	f280 815e 	bge.w	8018b1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018862:	1c5f      	adds	r7, r3, #1
 8018864:	f2c0 815b 	blt.w	8018b1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018868:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801886a:	4293      	cmp	r3, r2
 801886c:	f280 8157 	bge.w	8018b1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018870:	9b06      	ldr	r3, [sp, #24]
 8018872:	9314      	str	r3, [sp, #80]	; 0x50
 8018874:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8018878:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801887a:	9311      	str	r3, [sp, #68]	; 0x44
 801887c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801887e:	2b00      	cmp	r3, #0
 8018880:	dde0      	ble.n	8018844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8018882:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018884:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8018888:	1412      	asrs	r2, r2, #16
 801888a:	ea4f 4324 	mov.w	r3, r4, asr #16
 801888e:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8018892:	f100 81a1 	bmi.w	8018bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 8018896:	9e07      	ldr	r6, [sp, #28]
 8018898:	1c55      	adds	r5, r2, #1
 801889a:	42ae      	cmp	r6, r5
 801889c:	f340 819e 	ble.w	8018bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80188a0:	2b00      	cmp	r3, #0
 80188a2:	f2c0 819b 	blt.w	8018bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80188a6:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80188a8:	1c5d      	adds	r5, r3, #1
 80188aa:	42ae      	cmp	r6, r5
 80188ac:	f340 8196 	ble.w	8018bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80188b0:	9d07      	ldr	r5, [sp, #28]
 80188b2:	fb03 2305 	mla	r3, r3, r5, r2
 80188b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80188b8:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80188bc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80188c0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80188c4:	2800      	cmp	r0, #0
 80188c6:	f000 8178 	beq.w	8018bba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80188ca:	686a      	ldr	r2, [r5, #4]
 80188cc:	920b      	str	r2, [sp, #44]	; 0x2c
 80188ce:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80188d2:	2900      	cmp	r1, #0
 80188d4:	f000 817a 	beq.w	8018bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 80188d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80188da:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80188dc:	18aa      	adds	r2, r5, r2
 80188de:	59ad      	ldr	r5, [r5, r6]
 80188e0:	6852      	ldr	r2, [r2, #4]
 80188e2:	9508      	str	r5, [sp, #32]
 80188e4:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 80188e8:	920c      	str	r2, [sp, #48]	; 0x30
 80188ea:	0e15      	lsrs	r5, r2, #24
 80188ec:	b280      	uxth	r0, r0
 80188ee:	b289      	uxth	r1, r1
 80188f0:	fb00 fb01 	mul.w	fp, r0, r1
 80188f4:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 80188f8:	0100      	lsls	r0, r0, #4
 80188fa:	eba0 090b 	sub.w	r9, r0, fp
 80188fe:	b289      	uxth	r1, r1
 8018900:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8018904:	fa1f f989 	uxth.w	r9, r9
 8018908:	1a52      	subs	r2, r2, r1
 801890a:	b292      	uxth	r2, r2
 801890c:	fb09 f008 	mul.w	r0, r9, r8
 8018910:	fb02 000c 	mla	r0, r2, ip, r0
 8018914:	fb01 000a 	mla	r0, r1, sl, r0
 8018918:	fb0b 0005 	mla	r0, fp, r5, r0
 801891c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018920:	2800      	cmp	r0, #0
 8018922:	f000 80ef 	beq.w	8018b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018926:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801892a:	d01b      	beq.n	8018964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 801892c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8018930:	fb0c fe0e 	mul.w	lr, ip, lr
 8018934:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018938:	fb0c fc03 	mul.w	ip, ip, r3
 801893c:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8018940:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018944:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018948:	4473      	add	r3, lr
 801894a:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801894e:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8018952:	0a1b      	lsrs	r3, r3, #8
 8018954:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018958:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801895c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018960:	ea43 030e 	orr.w	r3, r3, lr
 8018964:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018968:	d01e      	beq.n	80189a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 801896a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801896c:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018970:	fb08 fc0c 	mul.w	ip, r8, ip
 8018974:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 8018978:	fb08 f80e 	mul.w	r8, r8, lr
 801897c:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018980:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018984:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018988:	44e6      	add	lr, ip
 801898a:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801898e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8018992:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018996:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801899a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801899e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80189a2:	ea4e 0608 	orr.w	r6, lr, r8
 80189a6:	960b      	str	r6, [sp, #44]	; 0x2c
 80189a8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80189ac:	d01e      	beq.n	80189ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 80189ae:	9e08      	ldr	r6, [sp, #32]
 80189b0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80189b4:	fb0a f808 	mul.w	r8, sl, r8
 80189b8:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 80189bc:	fb0a fa0c 	mul.w	sl, sl, ip
 80189c0:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80189c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80189c8:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80189cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80189d0:	44c6      	add	lr, r8
 80189d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80189d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80189da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80189de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80189e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80189e6:	ea4e 060a 	orr.w	r6, lr, sl
 80189ea:	9608      	str	r6, [sp, #32]
 80189ec:	2dff      	cmp	r5, #255	; 0xff
 80189ee:	d01d      	beq.n	8018a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 80189f0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80189f2:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80189f6:	fb05 f808 	mul.w	r8, r5, r8
 80189fa:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 80189fe:	fb05 f50c 	mul.w	r5, r5, ip
 8018a02:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018a06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018a0a:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8018a0e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8018a12:	44c6      	add	lr, r8
 8018a14:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018a18:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018a1c:	0a2d      	lsrs	r5, r5, #8
 8018a1e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018a22:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018a26:	ea4e 0505 	orr.w	r5, lr, r5
 8018a2a:	950c      	str	r5, [sp, #48]	; 0x30
 8018a2c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018a2e:	9e08      	ldr	r6, [sp, #32]
 8018a30:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018a34:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018a38:	fb09 f505 	mul.w	r5, r9, r5
 8018a3c:	fb02 550c 	mla	r5, r2, ip, r5
 8018a40:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018a44:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018a46:	fb01 550c 	mla	r5, r1, ip, r5
 8018a4a:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018a4e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8018a50:	fb0b 550c 	mla	r5, fp, ip, r5
 8018a54:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8018a58:	fb09 f90c 	mul.w	r9, r9, ip
 8018a5c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018a60:	fb02 9303 	mla	r3, r2, r3, r9
 8018a64:	9a08      	ldr	r2, [sp, #32]
 8018a66:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8018a6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018a6c:	fb01 330e 	mla	r3, r1, lr, r3
 8018a70:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8018a74:	fb0b 3b01 	mla	fp, fp, r1, r3
 8018a78:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018a7a:	0a2d      	lsrs	r5, r5, #8
 8018a7c:	f8b3 c000 	ldrh.w	ip, [r3]
 8018a80:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018a84:	fb00 f307 	mul.w	r3, r0, r7
 8018a88:	1c58      	adds	r0, r3, #1
 8018a8a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018a8e:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018a92:	ea45 050b 	orr.w	r5, r5, fp
 8018a96:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018a9a:	0c29      	lsrs	r1, r5, #16
 8018a9c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8018aa0:	ea4f 232c 	mov.w	r3, ip, asr #8
 8018aa4:	b2c0      	uxtb	r0, r0
 8018aa6:	fb11 f107 	smulbb	r1, r1, r7
 8018aaa:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018aae:	fb03 1300 	mla	r3, r3, r0, r1
 8018ab2:	b299      	uxth	r1, r3
 8018ab4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018ab8:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8018abc:	fb13 f307 	smulbb	r3, r3, r7
 8018ac0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018ac4:	fb02 3200 	mla	r2, r2, r0, r3
 8018ac8:	b2ed      	uxtb	r5, r5
 8018aca:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8018ace:	b2db      	uxtb	r3, r3
 8018ad0:	fb15 f507 	smulbb	r5, r5, r7
 8018ad4:	fb03 5500 	mla	r5, r3, r0, r5
 8018ad8:	b292      	uxth	r2, r2
 8018ada:	b2ad      	uxth	r5, r5
 8018adc:	1c4b      	adds	r3, r1, #1
 8018ade:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018ae2:	1c68      	adds	r0, r5, #1
 8018ae4:	1c51      	adds	r1, r2, #1
 8018ae6:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8018aea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018aee:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018af2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018af6:	0952      	lsrs	r2, r2, #5
 8018af8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018afc:	432b      	orrs	r3, r5
 8018afe:	4313      	orrs	r3, r2
 8018b00:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018b02:	8013      	strh	r3, [r2, #0]
 8018b04:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018b06:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018b08:	3302      	adds	r3, #2
 8018b0a:	9311      	str	r3, [sp, #68]	; 0x44
 8018b0c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018b0e:	4413      	add	r3, r2
 8018b10:	932b      	str	r3, [sp, #172]	; 0xac
 8018b12:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018b14:	441c      	add	r4, r3
 8018b16:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018b18:	3b01      	subs	r3, #1
 8018b1a:	9314      	str	r3, [sp, #80]	; 0x50
 8018b1c:	e6ae      	b.n	801887c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8018b1e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018b20:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018b22:	4413      	add	r3, r2
 8018b24:	932b      	str	r3, [sp, #172]	; 0xac
 8018b26:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018b28:	441c      	add	r4, r3
 8018b2a:	9b06      	ldr	r3, [sp, #24]
 8018b2c:	3b01      	subs	r3, #1
 8018b2e:	9306      	str	r3, [sp, #24]
 8018b30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018b32:	3302      	adds	r3, #2
 8018b34:	930a      	str	r3, [sp, #40]	; 0x28
 8018b36:	e653      	b.n	80187e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8018b38:	f47f ae65 	bne.w	8018806 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8018b3c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018b3e:	2b00      	cmp	r3, #0
 8018b40:	f340 81a0 	ble.w	8018e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8018b44:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018b48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018b4c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018b50:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018b52:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018b56:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018b5a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018b5e:	eef0 6a48 	vmov.f32	s13, s16
 8018b62:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018b66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018b6a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018b6e:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8018b72:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018b76:	eef0 6a68 	vmov.f32	s13, s17
 8018b7a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018b7e:	ee18 2a10 	vmov	r2, s16
 8018b82:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018b86:	fb92 f3f3 	sdiv	r3, r2, r3
 8018b8a:	ee18 2a90 	vmov	r2, s17
 8018b8e:	932d      	str	r3, [sp, #180]	; 0xb4
 8018b90:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018b92:	fb92 f3f3 	sdiv	r3, r2, r3
 8018b96:	932e      	str	r3, [sp, #184]	; 0xb8
 8018b98:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018b9a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018b9c:	3b01      	subs	r3, #1
 8018b9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ba2:	9313      	str	r3, [sp, #76]	; 0x4c
 8018ba4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018ba6:	bf08      	it	eq
 8018ba8:	4613      	moveq	r3, r2
 8018baa:	ee16 4a90 	vmov	r4, s13
 8018bae:	9306      	str	r3, [sp, #24]
 8018bb0:	eef0 8a67 	vmov.f32	s17, s15
 8018bb4:	eeb0 8a47 	vmov.f32	s16, s14
 8018bb8:	e60b      	b.n	80187d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8018bba:	b151      	cbz	r1, 8018bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8018bbc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018bbe:	58aa      	ldr	r2, [r5, r2]
 8018bc0:	9208      	str	r2, [sp, #32]
 8018bc2:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8018bc6:	25ff      	movs	r5, #255	; 0xff
 8018bc8:	46a8      	mov	r8, r5
 8018bca:	e68f      	b.n	80188ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8018bcc:	25ff      	movs	r5, #255	; 0xff
 8018bce:	46aa      	mov	sl, r5
 8018bd0:	e68c      	b.n	80188ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8018bd2:	25ff      	movs	r5, #255	; 0xff
 8018bd4:	46aa      	mov	sl, r5
 8018bd6:	e7f7      	b.n	8018bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 8018bd8:	1c56      	adds	r6, r2, #1
 8018bda:	d193      	bne.n	8018b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018bdc:	9d07      	ldr	r5, [sp, #28]
 8018bde:	4295      	cmp	r5, r2
 8018be0:	dd90      	ble.n	8018b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018be2:	1c5d      	adds	r5, r3, #1
 8018be4:	db8e      	blt.n	8018b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018be6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018be8:	429d      	cmp	r5, r3
 8018bea:	dd8b      	ble.n	8018b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018bec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018bee:	9201      	str	r2, [sp, #4]
 8018bf0:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8018bf4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018bf6:	9300      	str	r3, [sp, #0]
 8018bf8:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8018bfc:	9b07      	ldr	r3, [sp, #28]
 8018bfe:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8018c00:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8018c04:	f7ff fc4e 	bl	80184a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8018c08:	e77c      	b.n	8018b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018c0a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018c0c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018c0e:	9d07      	ldr	r5, [sp, #28]
 8018c10:	1412      	asrs	r2, r2, #16
 8018c12:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018c16:	1423      	asrs	r3, r4, #16
 8018c18:	fb05 2303 	mla	r3, r5, r3, r2
 8018c1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018c1e:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8018c22:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8018c26:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018c2a:	0e1e      	lsrs	r6, r3, #24
 8018c2c:	2900      	cmp	r1, #0
 8018c2e:	f000 811a 	beq.w	8018e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8018c32:	686a      	ldr	r2, [r5, #4]
 8018c34:	920d      	str	r2, [sp, #52]	; 0x34
 8018c36:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8018c3a:	2800      	cmp	r0, #0
 8018c3c:	f000 811c 	beq.w	8018e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8018c40:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018c42:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8018c44:	18aa      	adds	r2, r5, r2
 8018c46:	59ed      	ldr	r5, [r5, r7]
 8018c48:	6852      	ldr	r2, [r2, #4]
 8018c4a:	9509      	str	r5, [sp, #36]	; 0x24
 8018c4c:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8018c50:	920f      	str	r2, [sp, #60]	; 0x3c
 8018c52:	0e15      	lsrs	r5, r2, #24
 8018c54:	b289      	uxth	r1, r1
 8018c56:	b280      	uxth	r0, r0
 8018c58:	fb01 f900 	mul.w	r9, r1, r0
 8018c5c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018c60:	0109      	lsls	r1, r1, #4
 8018c62:	eba1 0e09 	sub.w	lr, r1, r9
 8018c66:	b280      	uxth	r0, r0
 8018c68:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8018c6c:	fa1f fe8e 	uxth.w	lr, lr
 8018c70:	1a12      	subs	r2, r2, r0
 8018c72:	b292      	uxth	r2, r2
 8018c74:	fb0e f10c 	mul.w	r1, lr, ip
 8018c78:	fb02 1106 	mla	r1, r2, r6, r1
 8018c7c:	fb00 1108 	mla	r1, r0, r8, r1
 8018c80:	fb09 1105 	mla	r1, r9, r5, r1
 8018c84:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018c88:	2900      	cmp	r1, #0
 8018c8a:	f000 80e0 	beq.w	8018e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8018c8e:	2eff      	cmp	r6, #255	; 0xff
 8018c90:	d016      	beq.n	8018cc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8018c92:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8018c96:	4377      	muls	r7, r6
 8018c98:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018c9c:	435e      	muls	r6, r3
 8018c9e:	0a3b      	lsrs	r3, r7, #8
 8018ca0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018ca4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018ca8:	443b      	add	r3, r7
 8018caa:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8018cae:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8018cb2:	0a1b      	lsrs	r3, r3, #8
 8018cb4:	0a3f      	lsrs	r7, r7, #8
 8018cb6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018cba:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018cbe:	433b      	orrs	r3, r7
 8018cc0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018cc4:	d01d      	beq.n	8018d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8018cc6:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8018cc8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8018cca:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018cce:	fb0c f606 	mul.w	r6, ip, r6
 8018cd2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018cd6:	fb0c fc07 	mul.w	ip, ip, r7
 8018cda:	0a37      	lsrs	r7, r6, #8
 8018cdc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018ce0:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8018ce4:	4437      	add	r7, r6
 8018ce6:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8018cea:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8018cee:	0a3f      	lsrs	r7, r7, #8
 8018cf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018cf4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018cf8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018cfc:	ea47 060c 	orr.w	r6, r7, ip
 8018d00:	960d      	str	r6, [sp, #52]	; 0x34
 8018d02:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018d06:	d01d      	beq.n	8018d44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8018d08:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8018d0a:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018d0e:	fb08 fc0c 	mul.w	ip, r8, ip
 8018d12:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018d16:	fb08 f806 	mul.w	r8, r8, r6
 8018d1a:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8018d1e:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8018d22:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018d26:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018d2a:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8018d2e:	4467      	add	r7, ip
 8018d30:	0a3f      	lsrs	r7, r7, #8
 8018d32:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018d36:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018d3a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8018d3e:	ea47 0608 	orr.w	r6, r7, r8
 8018d42:	9609      	str	r6, [sp, #36]	; 0x24
 8018d44:	2dff      	cmp	r5, #255	; 0xff
 8018d46:	d01a      	beq.n	8018d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 8018d48:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018d4a:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018d4e:	fb05 fc0c 	mul.w	ip, r5, ip
 8018d52:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018d56:	4375      	muls	r5, r6
 8018d58:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8018d5c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018d60:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018d64:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8018d68:	4467      	add	r7, ip
 8018d6a:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8018d6e:	0a3f      	lsrs	r7, r7, #8
 8018d70:	0a2d      	lsrs	r5, r5, #8
 8018d72:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018d76:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018d7a:	433d      	orrs	r5, r7
 8018d7c:	950f      	str	r5, [sp, #60]	; 0x3c
 8018d7e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018d80:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018d84:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8018d88:	fb0e f505 	mul.w	r5, lr, r5
 8018d8c:	fb02 5506 	mla	r5, r2, r6, r5
 8018d90:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8018d92:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018d96:	fb00 5506 	mla	r5, r0, r6, r5
 8018d9a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018d9c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018da0:	fb09 5506 	mla	r5, r9, r6, r5
 8018da4:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8018da6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018daa:	fb0e fe06 	mul.w	lr, lr, r6
 8018dae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018db2:	fb02 e303 	mla	r3, r2, r3, lr
 8018db6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018db8:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8018dbc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018dbe:	fb00 3307 	mla	r3, r0, r7, r3
 8018dc2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8018dc6:	fb09 3c0c 	mla	ip, r9, ip, r3
 8018dca:	fb01 f10b 	mul.w	r1, r1, fp
 8018dce:	0a2d      	lsrs	r5, r5, #8
 8018dd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018dd4:	f8ba 0000 	ldrh.w	r0, [sl]
 8018dd8:	1c4b      	adds	r3, r1, #1
 8018dda:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018dde:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018de2:	ea45 050c 	orr.w	r5, r5, ip
 8018de6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018dea:	1202      	asrs	r2, r0, #8
 8018dec:	0c2b      	lsrs	r3, r5, #16
 8018dee:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8018df2:	b2c9      	uxtb	r1, r1
 8018df4:	fb13 f30b 	smulbb	r3, r3, fp
 8018df8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018dfc:	fb02 3201 	mla	r2, r2, r1, r3
 8018e00:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8018e04:	10c3      	asrs	r3, r0, #3
 8018e06:	b2ed      	uxtb	r5, r5
 8018e08:	00c0      	lsls	r0, r0, #3
 8018e0a:	b2c0      	uxtb	r0, r0
 8018e0c:	fb15 f50b 	smulbb	r5, r5, fp
 8018e10:	fb00 5001 	mla	r0, r0, r1, r5
 8018e14:	b292      	uxth	r2, r2
 8018e16:	fb16 f60b 	smulbb	r6, r6, fp
 8018e1a:	b280      	uxth	r0, r0
 8018e1c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018e20:	fb03 6301 	mla	r3, r3, r1, r6
 8018e24:	1c51      	adds	r1, r2, #1
 8018e26:	1c46      	adds	r6, r0, #1
 8018e28:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018e2c:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8018e30:	b29b      	uxth	r3, r3
 8018e32:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018e36:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018e3a:	4332      	orrs	r2, r6
 8018e3c:	1c5e      	adds	r6, r3, #1
 8018e3e:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8018e42:	095b      	lsrs	r3, r3, #5
 8018e44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018e48:	431a      	orrs	r2, r3
 8018e4a:	f8aa 2000 	strh.w	r2, [sl]
 8018e4e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018e50:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018e52:	4413      	add	r3, r2
 8018e54:	932b      	str	r3, [sp, #172]	; 0xac
 8018e56:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018e58:	441c      	add	r4, r3
 8018e5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018e5c:	3b01      	subs	r3, #1
 8018e5e:	f10a 0a02 	add.w	sl, sl, #2
 8018e62:	9311      	str	r3, [sp, #68]	; 0x44
 8018e64:	e4ea      	b.n	801883c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8018e66:	b150      	cbz	r0, 8018e7e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 8018e68:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018e6a:	58aa      	ldr	r2, [r5, r2]
 8018e6c:	9209      	str	r2, [sp, #36]	; 0x24
 8018e6e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8018e72:	25ff      	movs	r5, #255	; 0xff
 8018e74:	46ac      	mov	ip, r5
 8018e76:	e6ed      	b.n	8018c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8018e78:	25ff      	movs	r5, #255	; 0xff
 8018e7a:	46a8      	mov	r8, r5
 8018e7c:	e6ea      	b.n	8018c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8018e7e:	25ff      	movs	r5, #255	; 0xff
 8018e80:	46a8      	mov	r8, r5
 8018e82:	e7f7      	b.n	8018e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8018e84:	b019      	add	sp, #100	; 0x64
 8018e86:	ecbd 8b08 	vpop	{d8-d11}
 8018e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018e90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8018e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e94:	8808      	ldrh	r0, [r1, #0]
 8018e96:	b085      	sub	sp, #20
 8018e98:	1206      	asrs	r6, r0, #8
 8018e9a:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8018e9e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018ea2:	9600      	str	r6, [sp, #0]
 8018ea4:	10c6      	asrs	r6, r0, #3
 8018ea6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018eaa:	9601      	str	r6, [sp, #4]
 8018eac:	00c0      	lsls	r0, r0, #3
 8018eae:	fb04 c603 	mla	r6, r4, r3, ip
 8018eb2:	b2c0      	uxtb	r0, r0
 8018eb4:	4691      	mov	r9, r2
 8018eb6:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8018eba:	9a00      	ldr	r2, [sp, #0]
 8018ebc:	9002      	str	r0, [sp, #8]
 8018ebe:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8018ec2:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8018ec6:	9a01      	ldr	r2, [sp, #4]
 8018ec8:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8018ecc:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8018ed0:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8018ed4:	2c00      	cmp	r4, #0
 8018ed6:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8018eda:	db3a      	blt.n	8018f52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8018edc:	45a0      	cmp	r8, r4
 8018ede:	dd38      	ble.n	8018f52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8018ee0:	f1bc 0f00 	cmp.w	ip, #0
 8018ee4:	db33      	blt.n	8018f4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018ee6:	4563      	cmp	r3, ip
 8018ee8:	dd31      	ble.n	8018f4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018eea:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8018eee:	f11c 0601 	adds.w	r6, ip, #1
 8018ef2:	d431      	bmi.n	8018f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018ef4:	42b3      	cmp	r3, r6
 8018ef6:	dd2f      	ble.n	8018f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018ef8:	b375      	cbz	r5, 8018f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018efa:	f8de 6004 	ldr.w	r6, [lr, #4]
 8018efe:	3401      	adds	r4, #1
 8018f00:	d42e      	bmi.n	8018f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018f02:	45a0      	cmp	r8, r4
 8018f04:	dd2c      	ble.n	8018f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018f06:	b35f      	cbz	r7, 8018f60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018f08:	f1bc 0f00 	cmp.w	ip, #0
 8018f0c:	db26      	blt.n	8018f5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8018f0e:	4563      	cmp	r3, ip
 8018f10:	dd24      	ble.n	8018f5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8018f12:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8018f16:	f11c 0c01 	adds.w	ip, ip, #1
 8018f1a:	d405      	bmi.n	8018f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018f1c:	4563      	cmp	r3, ip
 8018f1e:	dd03      	ble.n	8018f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018f20:	b115      	cbz	r5, 8018f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018f22:	3301      	adds	r3, #1
 8018f24:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8018f28:	2d0f      	cmp	r5, #15
 8018f2a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018f2e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018f32:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018f36:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8018f3a:	d801      	bhi.n	8018f40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8018f3c:	2f0f      	cmp	r7, #15
 8018f3e:	d911      	bls.n	8018f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8018f40:	4b7b      	ldr	r3, [pc, #492]	; (8019130 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8018f42:	4a7c      	ldr	r2, [pc, #496]	; (8019134 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8018f44:	487c      	ldr	r0, [pc, #496]	; (8019138 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 8018f46:	f240 3173 	movw	r1, #883	; 0x373
 8018f4a:	f001 fce7 	bl	801a91c <__assert_func>
 8018f4e:	4602      	mov	r2, r0
 8018f50:	e7cd      	b.n	8018eee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8018f52:	4606      	mov	r6, r0
 8018f54:	4602      	mov	r2, r0
 8018f56:	e7d2      	b.n	8018efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8018f58:	4606      	mov	r6, r0
 8018f5a:	e7d0      	b.n	8018efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8018f5c:	4604      	mov	r4, r0
 8018f5e:	e7da      	b.n	8018f16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8018f60:	4604      	mov	r4, r0
 8018f62:	e7e1      	b.n	8018f28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018f64:	b2ab      	uxth	r3, r5
 8018f66:	b2bf      	uxth	r7, r7
 8018f68:	fb03 fe07 	mul.w	lr, r3, r7
 8018f6c:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018f70:	011b      	lsls	r3, r3, #4
 8018f72:	eba3 0c0e 	sub.w	ip, r3, lr
 8018f76:	b2bf      	uxth	r7, r7
 8018f78:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8018f7c:	fa1f fc8c 	uxth.w	ip, ip
 8018f80:	1bed      	subs	r5, r5, r7
 8018f82:	b2ad      	uxth	r5, r5
 8018f84:	fb0c f30a 	mul.w	r3, ip, sl
 8018f88:	fb05 330b 	mla	r3, r5, fp, r3
 8018f8c:	fb07 3309 	mla	r3, r7, r9, r3
 8018f90:	fb0e 3308 	mla	r3, lr, r8, r3
 8018f94:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018f98:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018f9c:	9303      	str	r3, [sp, #12]
 8018f9e:	d018      	beq.n	8018fd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8018fa0:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018fa4:	fb0b f303 	mul.w	r3, fp, r3
 8018fa8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018fac:	fb0b fb02 	mul.w	fp, fp, r2
 8018fb0:	0a1a      	lsrs	r2, r3, #8
 8018fb2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018fb6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8018fba:	441a      	add	r2, r3
 8018fbc:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8018fc0:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8018fc4:	0a12      	lsrs	r2, r2, #8
 8018fc6:	0a1b      	lsrs	r3, r3, #8
 8018fc8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018fcc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018fd0:	431a      	orrs	r2, r3
 8018fd2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018fd6:	d019      	beq.n	801900c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 8018fd8:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018fdc:	fb0a fb0b 	mul.w	fp, sl, fp
 8018fe0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018fe4:	fb0a fa06 	mul.w	sl, sl, r6
 8018fe8:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018fec:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018ff0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018ff4:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8018ff8:	445e      	add	r6, fp
 8018ffa:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018ffe:	0a36      	lsrs	r6, r6, #8
 8019000:	0a1b      	lsrs	r3, r3, #8
 8019002:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019006:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801900a:	431e      	orrs	r6, r3
 801900c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019010:	d019      	beq.n	8019046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 8019012:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019016:	fb09 fa0a 	mul.w	sl, r9, sl
 801901a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801901e:	fb09 f904 	mul.w	r9, r9, r4
 8019022:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019026:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801902a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801902e:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8019032:	4454      	add	r4, sl
 8019034:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8019038:	0a24      	lsrs	r4, r4, #8
 801903a:	0a1b      	lsrs	r3, r3, #8
 801903c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019040:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019044:	431c      	orrs	r4, r3
 8019046:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801904a:	d019      	beq.n	8019080 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 801904c:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8019050:	fb08 f909 	mul.w	r9, r8, r9
 8019054:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019058:	fb08 f800 	mul.w	r8, r8, r0
 801905c:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8019060:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8019064:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019068:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801906c:	4448      	add	r0, r9
 801906e:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8019072:	0a00      	lsrs	r0, r0, #8
 8019074:	0a1b      	lsrs	r3, r3, #8
 8019076:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801907a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801907e:	4318      	orrs	r0, r3
 8019080:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019084:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019088:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801908c:	fb0c f808 	mul.w	r8, ip, r8
 8019090:	fb0c f606 	mul.w	r6, ip, r6
 8019094:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019098:	fb05 8803 	mla	r8, r5, r3, r8
 801909c:	fb05 6202 	mla	r2, r5, r2, r6
 80190a0:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80190a4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80190a8:	fb07 8803 	mla	r8, r7, r3, r8
 80190ac:	fb07 2704 	mla	r7, r7, r4, r2
 80190b0:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80190b4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80190b8:	fb0e 8303 	mla	r3, lr, r3, r8
 80190bc:	fb0e 7e00 	mla	lr, lr, r0, r7
 80190c0:	0a1b      	lsrs	r3, r3, #8
 80190c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80190c6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80190ca:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80190ce:	ea43 0e0e 	orr.w	lr, r3, lr
 80190d2:	9b03      	ldr	r3, [sp, #12]
 80190d4:	9800      	ldr	r0, [sp, #0]
 80190d6:	9c01      	ldr	r4, [sp, #4]
 80190d8:	9a02      	ldr	r2, [sp, #8]
 80190da:	43db      	mvns	r3, r3
 80190dc:	b2db      	uxtb	r3, r3
 80190de:	4358      	muls	r0, r3
 80190e0:	435c      	muls	r4, r3
 80190e2:	435a      	muls	r2, r3
 80190e4:	1c43      	adds	r3, r0, #1
 80190e6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80190ea:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80190ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80190f2:	4b12      	ldr	r3, [pc, #72]	; (801913c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 80190f4:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 80190f8:	1c50      	adds	r0, r2, #1
 80190fa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80190fe:	fa5f f28e 	uxtb.w	r2, lr
 8019102:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019106:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801910a:	1c62      	adds	r2, r4, #1
 801910c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019110:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 8019114:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8019118:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801911c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8019120:	ea43 0e0e 	orr.w	lr, r3, lr
 8019124:	f8a1 e000 	strh.w	lr, [r1]
 8019128:	b005      	add	sp, #20
 801912a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801912e:	bf00      	nop
 8019130:	0801e397 	.word	0x0801e397
 8019134:	0801e8f5 	.word	0x0801e8f5
 8019138:	0801e41f 	.word	0x0801e41f
 801913c:	fffff800 	.word	0xfffff800

08019140 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019144:	ed2d 8b08 	vpush	{d8-d11}
 8019148:	b097      	sub	sp, #92	; 0x5c
 801914a:	eeb0 aa40 	vmov.f32	s20, s0
 801914e:	9306      	str	r3, [sp, #24]
 8019150:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 8019154:	9307      	str	r3, [sp, #28]
 8019156:	9214      	str	r2, [sp, #80]	; 0x50
 8019158:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 801915c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801915e:	9112      	str	r1, [sp, #72]	; 0x48
 8019160:	9310      	str	r3, [sp, #64]	; 0x40
 8019162:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8019166:	9015      	str	r0, [sp, #84]	; 0x54
 8019168:	6850      	ldr	r0, [r2, #4]
 801916a:	6812      	ldr	r2, [r2, #0]
 801916c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801916e:	fb00 1303 	mla	r3, r0, r3, r1
 8019172:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019176:	930a      	str	r3, [sp, #40]	; 0x28
 8019178:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801917a:	681b      	ldr	r3, [r3, #0]
 801917c:	9311      	str	r3, [sp, #68]	; 0x44
 801917e:	9b07      	ldr	r3, [sp, #28]
 8019180:	009b      	lsls	r3, r3, #2
 8019182:	eef0 9a60 	vmov.f32	s19, s1
 8019186:	eeb0 9a41 	vmov.f32	s18, s2
 801918a:	eeb0 8a62 	vmov.f32	s16, s5
 801918e:	eef0 8a43 	vmov.f32	s17, s6
 8019192:	eef0 ba44 	vmov.f32	s23, s8
 8019196:	eeb0 ba64 	vmov.f32	s22, s9
 801919a:	eef0 aa45 	vmov.f32	s21, s10
 801919e:	930e      	str	r3, [sp, #56]	; 0x38
 80191a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80191a2:	2b00      	cmp	r3, #0
 80191a4:	dc03      	bgt.n	80191ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80191a6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80191a8:	2b00      	cmp	r3, #0
 80191aa:	f340 8361 	ble.w	8019870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80191ae:	9b06      	ldr	r3, [sp, #24]
 80191b0:	2b00      	cmp	r3, #0
 80191b2:	f340 819b 	ble.w	80194ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 80191b6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80191b8:	1412      	asrs	r2, r2, #16
 80191ba:	ea4f 4325 	mov.w	r3, r5, asr #16
 80191be:	d42e      	bmi.n	801921e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80191c0:	9807      	ldr	r0, [sp, #28]
 80191c2:	1c51      	adds	r1, r2, #1
 80191c4:	4288      	cmp	r0, r1
 80191c6:	dd2d      	ble.n	8019224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80191c8:	2b00      	cmp	r3, #0
 80191ca:	db2b      	blt.n	8019224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80191cc:	9810      	ldr	r0, [sp, #64]	; 0x40
 80191ce:	1c59      	adds	r1, r3, #1
 80191d0:	4288      	cmp	r0, r1
 80191d2:	dd27      	ble.n	8019224 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80191d4:	9b06      	ldr	r3, [sp, #24]
 80191d6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80191d8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80191da:	3b01      	subs	r3, #1
 80191dc:	fb02 1203 	mla	r2, r2, r3, r1
 80191e0:	1412      	asrs	r2, r2, #16
 80191e2:	d42a      	bmi.n	801923a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80191e4:	9907      	ldr	r1, [sp, #28]
 80191e6:	3201      	adds	r2, #1
 80191e8:	4291      	cmp	r1, r2
 80191ea:	dd26      	ble.n	801923a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80191ec:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80191ee:	fb02 5303 	mla	r3, r2, r3, r5
 80191f2:	141b      	asrs	r3, r3, #16
 80191f4:	d421      	bmi.n	801923a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80191f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80191f8:	3301      	adds	r3, #1
 80191fa:	429a      	cmp	r2, r3
 80191fc:	dd1d      	ble.n	801923a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80191fe:	9b06      	ldr	r3, [sp, #24]
 8019200:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8019204:	9313      	str	r3, [sp, #76]	; 0x4c
 8019206:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019208:	2b00      	cmp	r3, #0
 801920a:	f300 81e3 	bgt.w	80195d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 801920e:	9b06      	ldr	r3, [sp, #24]
 8019210:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019214:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019216:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801921a:	930a      	str	r3, [sp, #40]	; 0x28
 801921c:	e168      	b.n	80194f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 801921e:	1c51      	adds	r1, r2, #1
 8019220:	f040 8157 	bne.w	80194d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019224:	9907      	ldr	r1, [sp, #28]
 8019226:	428a      	cmp	r2, r1
 8019228:	f280 8153 	bge.w	80194d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801922c:	1c5f      	adds	r7, r3, #1
 801922e:	f2c0 8150 	blt.w	80194d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019232:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019234:	4293      	cmp	r3, r2
 8019236:	f280 814c 	bge.w	80194d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801923a:	9b06      	ldr	r3, [sp, #24]
 801923c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801923e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019240:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019242:	2b00      	cmp	r3, #0
 8019244:	dde3      	ble.n	801920e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8019246:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019248:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801924a:	1409      	asrs	r1, r1, #16
 801924c:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019250:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8019254:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019258:	f100 81a3 	bmi.w	80195a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 801925c:	9c07      	ldr	r4, [sp, #28]
 801925e:	1c4e      	adds	r6, r1, #1
 8019260:	42b4      	cmp	r4, r6
 8019262:	f340 81a0 	ble.w	80195a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019266:	2b00      	cmp	r3, #0
 8019268:	f2c0 819d 	blt.w	80195a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801926c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801926e:	1c5e      	adds	r6, r3, #1
 8019270:	42b4      	cmp	r4, r6
 8019272:	f340 8198 	ble.w	80195a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019276:	9c07      	ldr	r4, [sp, #28]
 8019278:	fb03 1304 	mla	r3, r3, r4, r1
 801927c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801927e:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8019282:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8019286:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801928a:	2a00      	cmp	r2, #0
 801928c:	f000 816f 	beq.w	801956e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8019290:	6871      	ldr	r1, [r6, #4]
 8019292:	910b      	str	r1, [sp, #44]	; 0x2c
 8019294:	ea4f 6811 	mov.w	r8, r1, lsr #24
 8019298:	2800      	cmp	r0, #0
 801929a:	f000 8171 	beq.w	8019580 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 801929e:	990e      	ldr	r1, [sp, #56]	; 0x38
 80192a0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80192a2:	1871      	adds	r1, r6, r1
 80192a4:	5934      	ldr	r4, [r6, r4]
 80192a6:	6849      	ldr	r1, [r1, #4]
 80192a8:	9408      	str	r4, [sp, #32]
 80192aa:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 80192ae:	910c      	str	r1, [sp, #48]	; 0x30
 80192b0:	0e0e      	lsrs	r6, r1, #24
 80192b2:	b292      	uxth	r2, r2
 80192b4:	b280      	uxth	r0, r0
 80192b6:	fb02 fb00 	mul.w	fp, r2, r0
 80192ba:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80192be:	0112      	lsls	r2, r2, #4
 80192c0:	eba2 090b 	sub.w	r9, r2, fp
 80192c4:	b280      	uxth	r0, r0
 80192c6:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80192ca:	fa1f f989 	uxth.w	r9, r9
 80192ce:	1a09      	subs	r1, r1, r0
 80192d0:	b289      	uxth	r1, r1
 80192d2:	fb09 f208 	mul.w	r2, r9, r8
 80192d6:	fb01 220c 	mla	r2, r1, ip, r2
 80192da:	fb00 220a 	mla	r2, r0, sl, r2
 80192de:	fb0b 2206 	mla	r2, fp, r6, r2
 80192e2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80192e6:	2a00      	cmp	r2, #0
 80192e8:	f000 80e8 	beq.w	80194bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80192ec:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80192f0:	d01b      	beq.n	801932a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80192f2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80192f6:	fb0c fe0e 	mul.w	lr, ip, lr
 80192fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80192fe:	fb0c fc03 	mul.w	ip, ip, r3
 8019302:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8019306:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801930a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801930e:	4473      	add	r3, lr
 8019310:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8019314:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8019318:	0a1b      	lsrs	r3, r3, #8
 801931a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801931e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019322:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019326:	ea43 030e 	orr.w	r3, r3, lr
 801932a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801932e:	d01e      	beq.n	801936e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 8019330:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019332:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019336:	fb08 fc0c 	mul.w	ip, r8, ip
 801933a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801933e:	fb08 f80e 	mul.w	r8, r8, lr
 8019342:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019346:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801934a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801934e:	44e6      	add	lr, ip
 8019350:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8019354:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8019358:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801935c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019360:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019364:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019368:	ea4e 0408 	orr.w	r4, lr, r8
 801936c:	940b      	str	r4, [sp, #44]	; 0x2c
 801936e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019372:	d01e      	beq.n	80193b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 8019374:	9c08      	ldr	r4, [sp, #32]
 8019376:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801937a:	fb0a f808 	mul.w	r8, sl, r8
 801937e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019382:	fb0a fa0c 	mul.w	sl, sl, ip
 8019386:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801938a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801938e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019392:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019396:	44c6      	add	lr, r8
 8019398:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801939c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80193a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80193a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80193a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80193ac:	ea4e 040a 	orr.w	r4, lr, sl
 80193b0:	9408      	str	r4, [sp, #32]
 80193b2:	2eff      	cmp	r6, #255	; 0xff
 80193b4:	d01d      	beq.n	80193f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 80193b6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80193b8:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80193bc:	fb06 f808 	mul.w	r8, r6, r8
 80193c0:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80193c4:	fb06 f60c 	mul.w	r6, r6, ip
 80193c8:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80193cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80193d0:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80193d4:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 80193d8:	44c6      	add	lr, r8
 80193da:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80193de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80193e2:	0a36      	lsrs	r6, r6, #8
 80193e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80193e8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80193ec:	ea4e 0406 	orr.w	r4, lr, r6
 80193f0:	940c      	str	r4, [sp, #48]	; 0x30
 80193f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80193f4:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 80193f8:	9c08      	ldr	r4, [sp, #32]
 80193fa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80193fe:	fb09 f606 	mul.w	r6, r9, r6
 8019402:	fb01 660c 	mla	r6, r1, ip, r6
 8019406:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801940a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801940c:	fb00 660c 	mla	r6, r0, ip, r6
 8019410:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019414:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019416:	fb0b 660c 	mla	r6, fp, ip, r6
 801941a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801941e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019422:	fb09 f90c 	mul.w	r9, r9, ip
 8019426:	fb01 9303 	mla	r3, r1, r3, r9
 801942a:	9908      	ldr	r1, [sp, #32]
 801942c:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8019430:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019432:	fb00 330e 	mla	r3, r0, lr, r3
 8019436:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801943a:	fb0b 3b00 	mla	fp, fp, r0, r3
 801943e:	0a36      	lsrs	r6, r6, #8
 8019440:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8019444:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019448:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801944c:	ea46 060b 	orr.w	r6, r6, fp
 8019450:	2aff      	cmp	r2, #255	; 0xff
 8019452:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8019456:	f000 8099 	beq.w	801958c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 801945a:	8839      	ldrh	r1, [r7, #0]
 801945c:	43d2      	mvns	r2, r2
 801945e:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8019462:	fa5f fe82 	uxtb.w	lr, r2
 8019466:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801946a:	fb0c fc0e 	mul.w	ip, ip, lr
 801946e:	10c8      	asrs	r0, r1, #3
 8019470:	00ca      	lsls	r2, r1, #3
 8019472:	f10c 0101 	add.w	r1, ip, #1
 8019476:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801947a:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 801947e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019482:	b2d2      	uxtb	r2, r2
 8019484:	4952      	ldr	r1, [pc, #328]	; (80195d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 8019486:	fb02 f20e 	mul.w	r2, r2, lr
 801948a:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801948e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019492:	1c51      	adds	r1, r2, #1
 8019494:	fb00 f00e 	mul.w	r0, r0, lr
 8019498:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801949c:	b2f6      	uxtb	r6, r6
 801949e:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 80194a2:	1c42      	adds	r2, r0, #1
 80194a4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80194a8:	b2db      	uxtb	r3, r3
 80194aa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80194ae:	00db      	lsls	r3, r3, #3
 80194b0:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 80194b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194b8:	431e      	orrs	r6, r3
 80194ba:	803e      	strh	r6, [r7, #0]
 80194bc:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80194be:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80194c0:	441a      	add	r2, r3
 80194c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80194c4:	9229      	str	r2, [sp, #164]	; 0xa4
 80194c6:	441d      	add	r5, r3
 80194c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80194ca:	3b01      	subs	r3, #1
 80194cc:	3702      	adds	r7, #2
 80194ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80194d0:	e6b6      	b.n	8019240 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 80194d2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80194d4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80194d6:	441a      	add	r2, r3
 80194d8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80194da:	9229      	str	r2, [sp, #164]	; 0xa4
 80194dc:	441d      	add	r5, r3
 80194de:	9b06      	ldr	r3, [sp, #24]
 80194e0:	3b01      	subs	r3, #1
 80194e2:	9306      	str	r3, [sp, #24]
 80194e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80194e6:	3302      	adds	r3, #2
 80194e8:	930a      	str	r3, [sp, #40]	; 0x28
 80194ea:	e660      	b.n	80191ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80194ec:	f47f ae72 	bne.w	80191d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80194f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80194f2:	2b00      	cmp	r3, #0
 80194f4:	f340 81bc 	ble.w	8019870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80194f8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80194fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019500:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019504:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019506:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801950a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801950e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019512:	eef0 6a48 	vmov.f32	s13, s16
 8019516:	ee69 7a27 	vmul.f32	s15, s18, s15
 801951a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801951e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019522:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8019526:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801952a:	eef0 6a68 	vmov.f32	s13, s17
 801952e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019532:	ee18 2a10 	vmov	r2, s16
 8019536:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801953a:	fb92 f3f3 	sdiv	r3, r2, r3
 801953e:	ee18 2a90 	vmov	r2, s17
 8019542:	932b      	str	r3, [sp, #172]	; 0xac
 8019544:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019546:	fb92 f3f3 	sdiv	r3, r2, r3
 801954a:	932c      	str	r3, [sp, #176]	; 0xb0
 801954c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801954e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019550:	3b01      	subs	r3, #1
 8019552:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019556:	9312      	str	r3, [sp, #72]	; 0x48
 8019558:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801955a:	bf08      	it	eq
 801955c:	4613      	moveq	r3, r2
 801955e:	ee16 5a90 	vmov	r5, s13
 8019562:	9306      	str	r3, [sp, #24]
 8019564:	eef0 8a67 	vmov.f32	s17, s15
 8019568:	eeb0 8a47 	vmov.f32	s16, s14
 801956c:	e618      	b.n	80191a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801956e:	b150      	cbz	r0, 8019586 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8019570:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019572:	5871      	ldr	r1, [r6, r1]
 8019574:	9108      	str	r1, [sp, #32]
 8019576:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801957a:	26ff      	movs	r6, #255	; 0xff
 801957c:	46b0      	mov	r8, r6
 801957e:	e698      	b.n	80192b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8019580:	26ff      	movs	r6, #255	; 0xff
 8019582:	46b2      	mov	sl, r6
 8019584:	e695      	b.n	80192b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8019586:	26ff      	movs	r6, #255	; 0xff
 8019588:	46b2      	mov	sl, r6
 801958a:	e7f7      	b.n	801957c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 801958c:	0972      	lsrs	r2, r6, #5
 801958e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019592:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019596:	f023 0307 	bic.w	r3, r3, #7
 801959a:	4313      	orrs	r3, r2
 801959c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80195a0:	e78a      	b.n	80194b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 80195a2:	1c4e      	adds	r6, r1, #1
 80195a4:	d18a      	bne.n	80194bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80195a6:	9c07      	ldr	r4, [sp, #28]
 80195a8:	428c      	cmp	r4, r1
 80195aa:	dd87      	ble.n	80194bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80195ac:	1c5c      	adds	r4, r3, #1
 80195ae:	db85      	blt.n	80194bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80195b0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80195b2:	429c      	cmp	r4, r3
 80195b4:	dd82      	ble.n	80194bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80195b6:	e9cd 2003 	strd	r2, r0, [sp, #12]
 80195ba:	e9cd 1301 	strd	r1, r3, [sp, #4]
 80195be:	9400      	str	r4, [sp, #0]
 80195c0:	9b07      	ldr	r3, [sp, #28]
 80195c2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80195c4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80195c6:	4639      	mov	r1, r7
 80195c8:	f7ff fc62 	bl	8018e90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80195cc:	e776      	b.n	80194bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80195ce:	bf00      	nop
 80195d0:	fffff800 	.word	0xfffff800
 80195d4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80195d6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80195d8:	9c07      	ldr	r4, [sp, #28]
 80195da:	1409      	asrs	r1, r1, #16
 80195dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80195e0:	142b      	asrs	r3, r5, #16
 80195e2:	fb04 1303 	mla	r3, r4, r3, r1
 80195e6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80195e8:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 80195ec:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80195f0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80195f4:	0e1f      	lsrs	r7, r3, #24
 80195f6:	2a00      	cmp	r2, #0
 80195f8:	f000 811d 	beq.w	8019836 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 80195fc:	6871      	ldr	r1, [r6, #4]
 80195fe:	910d      	str	r1, [sp, #52]	; 0x34
 8019600:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8019604:	2800      	cmp	r0, #0
 8019606:	f000 811f 	beq.w	8019848 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 801960a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801960c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801960e:	1871      	adds	r1, r6, r1
 8019610:	5934      	ldr	r4, [r6, r4]
 8019612:	6849      	ldr	r1, [r1, #4]
 8019614:	9409      	str	r4, [sp, #36]	; 0x24
 8019616:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801961a:	910f      	str	r1, [sp, #60]	; 0x3c
 801961c:	0e0e      	lsrs	r6, r1, #24
 801961e:	b292      	uxth	r2, r2
 8019620:	b280      	uxth	r0, r0
 8019622:	fb02 fb00 	mul.w	fp, r2, r0
 8019626:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801962a:	0112      	lsls	r2, r2, #4
 801962c:	eba2 080b 	sub.w	r8, r2, fp
 8019630:	b280      	uxth	r0, r0
 8019632:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019636:	fa1f f888 	uxth.w	r8, r8
 801963a:	1a09      	subs	r1, r1, r0
 801963c:	b289      	uxth	r1, r1
 801963e:	fb08 f20e 	mul.w	r2, r8, lr
 8019642:	fb01 2207 	mla	r2, r1, r7, r2
 8019646:	fb00 2209 	mla	r2, r0, r9, r2
 801964a:	fb0b 2206 	mla	r2, fp, r6, r2
 801964e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019652:	2a00      	cmp	r2, #0
 8019654:	f000 80e3 	beq.w	801981e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019658:	2fff      	cmp	r7, #255	; 0xff
 801965a:	d01a      	beq.n	8019692 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 801965c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019660:	fb07 fc0c 	mul.w	ip, r7, ip
 8019664:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019668:	435f      	muls	r7, r3
 801966a:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801966e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019672:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019676:	4463      	add	r3, ip
 8019678:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 801967c:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8019680:	0a1b      	lsrs	r3, r3, #8
 8019682:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019686:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801968a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801968e:	ea43 030c 	orr.w	r3, r3, ip
 8019692:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019696:	d01e      	beq.n	80196d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8019698:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801969a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801969e:	fb0e f707 	mul.w	r7, lr, r7
 80196a2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80196a6:	fb0e fe0c 	mul.w	lr, lr, ip
 80196aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80196ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80196b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80196b6:	44bc      	add	ip, r7
 80196b8:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 80196bc:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 80196c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80196c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80196c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80196cc:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80196d0:	ea4c 040e 	orr.w	r4, ip, lr
 80196d4:	940d      	str	r4, [sp, #52]	; 0x34
 80196d6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80196da:	d01e      	beq.n	801971a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 80196dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80196de:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80196e2:	fb09 fe0e 	mul.w	lr, r9, lr
 80196e6:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80196ea:	fb09 f907 	mul.w	r9, r9, r7
 80196ee:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80196f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80196f6:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80196fa:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80196fe:	44f4      	add	ip, lr
 8019700:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8019704:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019708:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801970c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019710:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019714:	ea4c 0409 	orr.w	r4, ip, r9
 8019718:	9409      	str	r4, [sp, #36]	; 0x24
 801971a:	2eff      	cmp	r6, #255	; 0xff
 801971c:	d01c      	beq.n	8019758 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 801971e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019720:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019724:	fb06 fe0e 	mul.w	lr, r6, lr
 8019728:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801972c:	437e      	muls	r6, r7
 801972e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8019732:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019736:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801973a:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801973e:	44f4      	add	ip, lr
 8019740:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8019744:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019748:	0a36      	lsrs	r6, r6, #8
 801974a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801974e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019752:	ea4c 0406 	orr.w	r4, ip, r6
 8019756:	940f      	str	r4, [sp, #60]	; 0x3c
 8019758:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801975a:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801975e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8019760:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8019764:	fb08 f606 	mul.w	r6, r8, r6
 8019768:	fb01 6607 	mla	r6, r1, r7, r6
 801976c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019770:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019772:	fb00 6607 	mla	r6, r0, r7, r6
 8019776:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801977a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801977c:	fb0b 6607 	mla	r6, fp, r7, r6
 8019780:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8019784:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019788:	fb08 f807 	mul.w	r8, r8, r7
 801978c:	fb01 8303 	mla	r3, r1, r3, r8
 8019790:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019792:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8019796:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8019798:	fb00 330c 	mla	r3, r0, ip, r3
 801979c:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 80197a0:	fb0b 3e0e 	mla	lr, fp, lr, r3
 80197a4:	0a36      	lsrs	r6, r6, #8
 80197a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80197aa:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80197ae:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80197b2:	ea46 060e 	orr.w	r6, r6, lr
 80197b6:	2aff      	cmp	r2, #255	; 0xff
 80197b8:	ea4f 2316 	mov.w	r3, r6, lsr #8
 80197bc:	d04a      	beq.n	8019854 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80197be:	f8ba 1000 	ldrh.w	r1, [sl]
 80197c2:	43d2      	mvns	r2, r2
 80197c4:	120f      	asrs	r7, r1, #8
 80197c6:	fa5f fc82 	uxtb.w	ip, r2
 80197ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80197ce:	fb07 f70c 	mul.w	r7, r7, ip
 80197d2:	10c8      	asrs	r0, r1, #3
 80197d4:	00ca      	lsls	r2, r1, #3
 80197d6:	1c79      	adds	r1, r7, #1
 80197d8:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 80197dc:	0c37      	lsrs	r7, r6, #16
 80197de:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 80197e2:	b2d2      	uxtb	r2, r2
 80197e4:	4925      	ldr	r1, [pc, #148]	; (801987c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 80197e6:	fb02 f20c 	mul.w	r2, r2, ip
 80197ea:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 80197ee:	1c51      	adds	r1, r2, #1
 80197f0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80197f4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80197f8:	b2f6      	uxtb	r6, r6
 80197fa:	fb00 f00c 	mul.w	r0, r0, ip
 80197fe:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8019802:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 8019806:	1c46      	adds	r6, r0, #1
 8019808:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 801980c:	b2de      	uxtb	r6, r3
 801980e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8019812:	00f6      	lsls	r6, r6, #3
 8019814:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019818:	4337      	orrs	r7, r6
 801981a:	f8aa 7000 	strh.w	r7, [sl]
 801981e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019820:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019822:	441a      	add	r2, r3
 8019824:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019826:	9229      	str	r2, [sp, #164]	; 0xa4
 8019828:	441d      	add	r5, r3
 801982a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801982c:	3b01      	subs	r3, #1
 801982e:	f10a 0a02 	add.w	sl, sl, #2
 8019832:	9313      	str	r3, [sp, #76]	; 0x4c
 8019834:	e4e7      	b.n	8019206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 8019836:	b150      	cbz	r0, 801984e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 8019838:	990e      	ldr	r1, [sp, #56]	; 0x38
 801983a:	5871      	ldr	r1, [r6, r1]
 801983c:	9109      	str	r1, [sp, #36]	; 0x24
 801983e:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8019842:	26ff      	movs	r6, #255	; 0xff
 8019844:	46b6      	mov	lr, r6
 8019846:	e6ea      	b.n	801961e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019848:	26ff      	movs	r6, #255	; 0xff
 801984a:	46b1      	mov	r9, r6
 801984c:	e6e7      	b.n	801961e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801984e:	26ff      	movs	r6, #255	; 0xff
 8019850:	46b1      	mov	r9, r6
 8019852:	e7f7      	b.n	8019844 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 8019854:	0972      	lsrs	r2, r6, #5
 8019856:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801985a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801985e:	f023 0307 	bic.w	r3, r3, #7
 8019862:	4313      	orrs	r3, r2
 8019864:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019868:	431e      	orrs	r6, r3
 801986a:	f8aa 6000 	strh.w	r6, [sl]
 801986e:	e7d6      	b.n	801981e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019870:	b017      	add	sp, #92	; 0x5c
 8019872:	ecbd 8b08 	vpop	{d8-d11}
 8019876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801987a:	bf00      	nop
 801987c:	fffff800 	.word	0xfffff800

08019880 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8019880:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019884:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8019888:	2c00      	cmp	r4, #0
 801988a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801988e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8019892:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019896:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801989a:	fb04 ce03 	mla	lr, r4, r3, ip
 801989e:	db60      	blt.n	8019962 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80198a0:	45a1      	cmp	r9, r4
 80198a2:	dd5e      	ble.n	8019962 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80198a4:	f1bc 0f00 	cmp.w	ip, #0
 80198a8:	db59      	blt.n	801995e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80198aa:	45e0      	cmp	r8, ip
 80198ac:	dd57      	ble.n	801995e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80198ae:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80198b2:	f01e 0f01 	tst.w	lr, #1
 80198b6:	5c16      	ldrb	r6, [r2, r0]
 80198b8:	bf0c      	ite	eq
 80198ba:	f006 060f 	andeq.w	r6, r6, #15
 80198be:	1136      	asrne	r6, r6, #4
 80198c0:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80198c4:	b2f6      	uxtb	r6, r6
 80198c6:	f11c 0001 	adds.w	r0, ip, #1
 80198ca:	d44d      	bmi.n	8019968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80198cc:	4580      	cmp	r8, r0
 80198ce:	dd4b      	ble.n	8019968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80198d0:	2d00      	cmp	r5, #0
 80198d2:	d04b      	beq.n	801996c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 80198d4:	f10e 0a01 	add.w	sl, lr, #1
 80198d8:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80198dc:	f01a 0f01 	tst.w	sl, #1
 80198e0:	5c10      	ldrb	r0, [r2, r0]
 80198e2:	bf0c      	ite	eq
 80198e4:	f000 000f 	andeq.w	r0, r0, #15
 80198e8:	1100      	asrne	r0, r0, #4
 80198ea:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80198ee:	b2c0      	uxtb	r0, r0
 80198f0:	3401      	adds	r4, #1
 80198f2:	d43f      	bmi.n	8019974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80198f4:	45a1      	cmp	r9, r4
 80198f6:	dd3d      	ble.n	8019974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80198f8:	2f00      	cmp	r7, #0
 80198fa:	f000 80a0 	beq.w	8019a3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1be>
 80198fe:	f1bc 0f00 	cmp.w	ip, #0
 8019902:	db35      	blt.n	8019970 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019904:	45e0      	cmp	r8, ip
 8019906:	dd33      	ble.n	8019970 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019908:	eb03 090e 	add.w	r9, r3, lr
 801990c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8019910:	f019 0f01 	tst.w	r9, #1
 8019914:	5d14      	ldrb	r4, [r2, r4]
 8019916:	bf0c      	ite	eq
 8019918:	f004 040f 	andeq.w	r4, r4, #15
 801991c:	1124      	asrne	r4, r4, #4
 801991e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8019922:	b2e4      	uxtb	r4, r4
 8019924:	f11c 0c01 	adds.w	ip, ip, #1
 8019928:	d427      	bmi.n	801997a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801992a:	45e0      	cmp	r8, ip
 801992c:	dd25      	ble.n	801997a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801992e:	b335      	cbz	r5, 801997e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8019930:	3301      	adds	r3, #1
 8019932:	449e      	add	lr, r3
 8019934:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8019938:	f01e 0f01 	tst.w	lr, #1
 801993c:	5cd2      	ldrb	r2, [r2, r3]
 801993e:	bf0c      	ite	eq
 8019940:	f002 020f 	andeq.w	r2, r2, #15
 8019944:	1112      	asrne	r2, r2, #4
 8019946:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801994a:	b2d3      	uxtb	r3, r2
 801994c:	2d0f      	cmp	r5, #15
 801994e:	d917      	bls.n	8019980 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8019950:	4b3d      	ldr	r3, [pc, #244]	; (8019a48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8019952:	4a3e      	ldr	r2, [pc, #248]	; (8019a4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8019954:	483e      	ldr	r0, [pc, #248]	; (8019a50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 8019956:	f240 3173 	movw	r1, #883	; 0x373
 801995a:	f000 ffdf 	bl	801a91c <__assert_func>
 801995e:	2600      	movs	r6, #0
 8019960:	e7b1      	b.n	80198c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8019962:	2000      	movs	r0, #0
 8019964:	4606      	mov	r6, r0
 8019966:	e7c3      	b.n	80198f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019968:	2000      	movs	r0, #0
 801996a:	e7c1      	b.n	80198f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801996c:	4628      	mov	r0, r5
 801996e:	e7bf      	b.n	80198f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019970:	2400      	movs	r4, #0
 8019972:	e7d7      	b.n	8019924 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8019974:	2300      	movs	r3, #0
 8019976:	461c      	mov	r4, r3
 8019978:	e7e8      	b.n	801994c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801997a:	2300      	movs	r3, #0
 801997c:	e7e6      	b.n	801994c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801997e:	462b      	mov	r3, r5
 8019980:	2f0f      	cmp	r7, #15
 8019982:	d8e5      	bhi.n	8019950 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019984:	b2ad      	uxth	r5, r5
 8019986:	b2bf      	uxth	r7, r7
 8019988:	fb05 fc07 	mul.w	ip, r5, r7
 801998c:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8019990:	012d      	lsls	r5, r5, #4
 8019992:	b2bf      	uxth	r7, r7
 8019994:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019998:	eba5 050c 	sub.w	r5, r5, ip
 801999c:	1bd2      	subs	r2, r2, r7
 801999e:	b2ad      	uxth	r5, r5
 80199a0:	b292      	uxth	r2, r2
 80199a2:	4368      	muls	r0, r5
 80199a4:	fb06 0002 	mla	r0, r6, r2, r0
 80199a8:	fb07 0404 	mla	r4, r7, r4, r0
 80199ac:	fb0c 4303 	mla	r3, ip, r3, r4
 80199b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80199b4:	2b00      	cmp	r3, #0
 80199b6:	d040      	beq.n	8019a3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 80199b8:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 80199bc:	4a25      	ldr	r2, [pc, #148]	; (8019a54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d4>)
 80199be:	4343      	muls	r3, r0
 80199c0:	1c58      	adds	r0, r3, #1
 80199c2:	6816      	ldr	r6, [r2, #0]
 80199c4:	880a      	ldrh	r2, [r1, #0]
 80199c6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80199ca:	1200      	asrs	r0, r0, #8
 80199cc:	b284      	uxth	r4, r0
 80199ce:	1215      	asrs	r5, r2, #8
 80199d0:	43c0      	mvns	r0, r0
 80199d2:	b2c3      	uxtb	r3, r0
 80199d4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80199d8:	1230      	asrs	r0, r6, #8
 80199da:	fb15 f503 	smulbb	r5, r5, r3
 80199de:	10d7      	asrs	r7, r2, #3
 80199e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80199e4:	fb00 5004 	mla	r0, r0, r4, r5
 80199e8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80199ec:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 80199f0:	00d2      	lsls	r2, r2, #3
 80199f2:	fb17 f703 	smulbb	r7, r7, r3
 80199f6:	b2d2      	uxtb	r2, r2
 80199f8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80199fc:	00f6      	lsls	r6, r6, #3
 80199fe:	fb05 7504 	mla	r5, r5, r4, r7
 8019a02:	fb12 f303 	smulbb	r3, r2, r3
 8019a06:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019a0a:	fb06 3304 	mla	r3, r6, r4, r3
 8019a0e:	b2ad      	uxth	r5, r5
 8019a10:	b29a      	uxth	r2, r3
 8019a12:	b280      	uxth	r0, r0
 8019a14:	1c6b      	adds	r3, r5, #1
 8019a16:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019a1a:	1c44      	adds	r4, r0, #1
 8019a1c:	095b      	lsrs	r3, r3, #5
 8019a1e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8019a22:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019a26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019a2a:	4303      	orrs	r3, r0
 8019a2c:	1c50      	adds	r0, r2, #1
 8019a2e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019a32:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019a36:	4313      	orrs	r3, r2
 8019a38:	800b      	strh	r3, [r1, #0]
 8019a3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019a3e:	2d0f      	cmp	r5, #15
 8019a40:	d886      	bhi.n	8019950 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019a42:	463b      	mov	r3, r7
 8019a44:	463c      	mov	r4, r7
 8019a46:	e79d      	b.n	8019984 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8019a48:	0801e397 	.word	0x0801e397
 8019a4c:	0801e8f5 	.word	0x0801e8f5
 8019a50:	0801e41f 	.word	0x0801e41f
 8019a54:	200014c0 	.word	0x200014c0

08019a58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019a58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a5c:	ed2d 8b08 	vpush	{d8-d11}
 8019a60:	b099      	sub	sp, #100	; 0x64
 8019a62:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 8019a66:	9309      	str	r3, [sp, #36]	; 0x24
 8019a68:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8019a6c:	930a      	str	r3, [sp, #40]	; 0x28
 8019a6e:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8019a72:	9216      	str	r2, [sp, #88]	; 0x58
 8019a74:	930b      	str	r3, [sp, #44]	; 0x2c
 8019a76:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8019a78:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8019a7c:	910f      	str	r1, [sp, #60]	; 0x3c
 8019a7e:	9310      	str	r3, [sp, #64]	; 0x40
 8019a80:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8019a84:	9017      	str	r0, [sp, #92]	; 0x5c
 8019a86:	6850      	ldr	r0, [r2, #4]
 8019a88:	6812      	ldr	r2, [r2, #0]
 8019a8a:	fb00 1303 	mla	r3, r0, r3, r1
 8019a8e:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 8019a92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019a94:	3301      	adds	r3, #1
 8019a96:	f023 0301 	bic.w	r3, r3, #1
 8019a9a:	930c      	str	r3, [sp, #48]	; 0x30
 8019a9c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019a9e:	681f      	ldr	r7, [r3, #0]
 8019aa0:	eeb0 aa40 	vmov.f32	s20, s0
 8019aa4:	eef0 9a60 	vmov.f32	s19, s1
 8019aa8:	eeb0 9a41 	vmov.f32	s18, s2
 8019aac:	eeb0 8a62 	vmov.f32	s16, s5
 8019ab0:	eef0 8a43 	vmov.f32	s17, s6
 8019ab4:	eef0 ba44 	vmov.f32	s23, s8
 8019ab8:	eeb0 ba64 	vmov.f32	s22, s9
 8019abc:	eef0 aa45 	vmov.f32	s21, s10
 8019ac0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019ac2:	2b00      	cmp	r3, #0
 8019ac4:	dc03      	bgt.n	8019ace <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8019ac6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019ac8:	2b00      	cmp	r3, #0
 8019aca:	f340 826b 	ble.w	8019fa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 8019ace:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ad0:	2b00      	cmp	r3, #0
 8019ad2:	f340 811f 	ble.w	8019d14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8019ad6:	1422      	asrs	r2, r4, #16
 8019ad8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019adc:	d42d      	bmi.n	8019b3a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8019ade:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019ae0:	1c51      	adds	r1, r2, #1
 8019ae2:	4288      	cmp	r0, r1
 8019ae4:	dd2c      	ble.n	8019b40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019ae6:	2b00      	cmp	r3, #0
 8019ae8:	db2a      	blt.n	8019b40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019aea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019aec:	1c59      	adds	r1, r3, #1
 8019aee:	4288      	cmp	r0, r1
 8019af0:	dd26      	ble.n	8019b40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019af2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019af4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019af6:	3b01      	subs	r3, #1
 8019af8:	fb02 4203 	mla	r2, r2, r3, r4
 8019afc:	1412      	asrs	r2, r2, #16
 8019afe:	d42a      	bmi.n	8019b56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019b00:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019b02:	3201      	adds	r2, #1
 8019b04:	4291      	cmp	r1, r2
 8019b06:	dd26      	ble.n	8019b56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019b08:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8019b0a:	fb02 6303 	mla	r3, r2, r3, r6
 8019b0e:	141b      	asrs	r3, r3, #16
 8019b10:	d421      	bmi.n	8019b56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019b12:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019b14:	3301      	adds	r3, #1
 8019b16:	429a      	cmp	r2, r3
 8019b18:	dd1d      	ble.n	8019b56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019b1a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019b1e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019b22:	9311      	str	r3, [sp, #68]	; 0x44
 8019b24:	46d1      	mov	r9, sl
 8019b26:	f1bb 0f00 	cmp.w	fp, #0
 8019b2a:	f300 8163 	bgt.w	8019df4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39c>
 8019b2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b30:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019b34:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8019b38:	e0ee      	b.n	8019d18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8019b3a:	1c51      	adds	r1, r2, #1
 8019b3c:	f040 80e0 	bne.w	8019d00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019b40:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019b42:	4291      	cmp	r1, r2
 8019b44:	f340 80dc 	ble.w	8019d00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019b48:	1c5a      	adds	r2, r3, #1
 8019b4a:	f2c0 80d9 	blt.w	8019d00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019b4e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019b50:	4293      	cmp	r3, r2
 8019b52:	f280 80d5 	bge.w	8019d00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019b56:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019b5a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8019b5e:	9311      	str	r3, [sp, #68]	; 0x44
 8019b60:	46d0      	mov	r8, sl
 8019b62:	f1b9 0f00 	cmp.w	r9, #0
 8019b66:	dde2      	ble.n	8019b2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019b68:	1420      	asrs	r0, r4, #16
 8019b6a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019b6e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019b72:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019b76:	f100 8122 	bmi.w	8019dbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8019b7a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019b7c:	f100 0c01 	add.w	ip, r0, #1
 8019b80:	4565      	cmp	r5, ip
 8019b82:	f340 811e 	ble.w	8019dc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 8019b86:	2b00      	cmp	r3, #0
 8019b88:	f2c0 811b 	blt.w	8019dc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 8019b8c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019b8e:	f103 0c01 	add.w	ip, r3, #1
 8019b92:	4565      	cmp	r5, ip
 8019b94:	f340 8115 	ble.w	8019dc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 8019b98:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019b9a:	fb03 0305 	mla	r3, r3, r5, r0
 8019b9e:	0858      	lsrs	r0, r3, #1
 8019ba0:	07dd      	lsls	r5, r3, #31
 8019ba2:	5c38      	ldrb	r0, [r7, r0]
 8019ba4:	bf54      	ite	pl
 8019ba6:	f000 000f 	andpl.w	r0, r0, #15
 8019baa:	1100      	asrmi	r0, r0, #4
 8019bac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019bb0:	b2c0      	uxtb	r0, r0
 8019bb2:	2a00      	cmp	r2, #0
 8019bb4:	f000 80ef 	beq.w	8019d96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8019bb8:	f103 0e01 	add.w	lr, r3, #1
 8019bbc:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019bc0:	f01e 0f01 	tst.w	lr, #1
 8019bc4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019bc8:	bf0c      	ite	eq
 8019bca:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019bce:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019bd2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019bd6:	fa5f f58c 	uxtb.w	r5, ip
 8019bda:	9512      	str	r5, [sp, #72]	; 0x48
 8019bdc:	b1f9      	cbz	r1, 8019c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019bde:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019be0:	442b      	add	r3, r5
 8019be2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019be6:	07dd      	lsls	r5, r3, #31
 8019be8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019bec:	bf54      	ite	pl
 8019bee:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019bf2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019bf6:	3301      	adds	r3, #1
 8019bf8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019bfc:	fa5f f58c 	uxtb.w	r5, ip
 8019c00:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019c04:	950d      	str	r5, [sp, #52]	; 0x34
 8019c06:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019c0a:	07dd      	lsls	r5, r3, #31
 8019c0c:	bf54      	ite	pl
 8019c0e:	f00c 030f 	andpl.w	r3, ip, #15
 8019c12:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019c16:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019c1a:	b2db      	uxtb	r3, r3
 8019c1c:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c1e:	b292      	uxth	r2, r2
 8019c20:	b289      	uxth	r1, r1
 8019c22:	fb02 f301 	mul.w	r3, r2, r1
 8019c26:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019c2a:	0112      	lsls	r2, r2, #4
 8019c2c:	b289      	uxth	r1, r1
 8019c2e:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8019c32:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019c34:	1ad2      	subs	r2, r2, r3
 8019c36:	ebac 0c01 	sub.w	ip, ip, r1
 8019c3a:	b292      	uxth	r2, r2
 8019c3c:	436a      	muls	r2, r5
 8019c3e:	fa1f fc8c 	uxth.w	ip, ip
 8019c42:	fb00 200c 	mla	r0, r0, ip, r2
 8019c46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019c48:	fb01 0102 	mla	r1, r1, r2, r0
 8019c4c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019c4e:	fb03 1302 	mla	r3, r3, r2, r1
 8019c52:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019c56:	2b00      	cmp	r3, #0
 8019c58:	d049      	beq.n	8019cee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019c5a:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019c5c:	4ac5      	ldr	r2, [pc, #788]	; (8019f74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 8019c5e:	4dc6      	ldr	r5, [pc, #792]	; (8019f78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 8019c60:	f8d2 e000 	ldr.w	lr, [r2]
 8019c64:	f8b8 2000 	ldrh.w	r2, [r8]
 8019c68:	434b      	muls	r3, r1
 8019c6a:	1c59      	adds	r1, r3, #1
 8019c6c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019c70:	121b      	asrs	r3, r3, #8
 8019c72:	b299      	uxth	r1, r3
 8019c74:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019c78:	43db      	mvns	r3, r3
 8019c7a:	b2db      	uxtb	r3, r3
 8019c7c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8019c80:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c84:	fb1c fc03 	smulbb	ip, ip, r3
 8019c88:	ea4f 0be2 	mov.w	fp, r2, asr #3
 8019c8c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019c90:	fb00 c001 	mla	r0, r0, r1, ip
 8019c94:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019c98:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 8019c9c:	fb1b fb03 	smulbb	fp, fp, r3
 8019ca0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019ca4:	00d2      	lsls	r2, r2, #3
 8019ca6:	fb0c bc01 	mla	ip, ip, r1, fp
 8019caa:	b2d2      	uxtb	r2, r2
 8019cac:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 8019cb0:	fb12 f303 	smulbb	r3, r2, r3
 8019cb4:	fa1f fc8c 	uxth.w	ip, ip
 8019cb8:	fa5f fe8e 	uxtb.w	lr, lr
 8019cbc:	b280      	uxth	r0, r0
 8019cbe:	fb0e 3101 	mla	r1, lr, r1, r3
 8019cc2:	f10c 0201 	add.w	r2, ip, #1
 8019cc6:	b289      	uxth	r1, r1
 8019cc8:	1c43      	adds	r3, r0, #1
 8019cca:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8019cce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019cd2:	0952      	lsrs	r2, r2, #5
 8019cd4:	1c4b      	adds	r3, r1, #1
 8019cd6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019cda:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019cde:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019ce2:	4310      	orrs	r0, r2
 8019ce4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8019ce8:	4308      	orrs	r0, r1
 8019cea:	f8a8 0000 	strh.w	r0, [r8]
 8019cee:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019cf0:	441c      	add	r4, r3
 8019cf2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019cf4:	f108 0802 	add.w	r8, r8, #2
 8019cf8:	441e      	add	r6, r3
 8019cfa:	f109 39ff 	add.w	r9, r9, #4294967295
 8019cfe:	e730      	b.n	8019b62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8019d00:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019d02:	441c      	add	r4, r3
 8019d04:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019d06:	441e      	add	r6, r3
 8019d08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d0a:	3b01      	subs	r3, #1
 8019d0c:	9309      	str	r3, [sp, #36]	; 0x24
 8019d0e:	f10a 0a02 	add.w	sl, sl, #2
 8019d12:	e6dc      	b.n	8019ace <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8019d14:	f47f aeed 	bne.w	8019af2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8019d18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019d1a:	2b00      	cmp	r3, #0
 8019d1c:	f340 8142 	ble.w	8019fa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 8019d20:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019d24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019d28:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019d2c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019d2e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019d32:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019d36:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019d3a:	eef0 6a48 	vmov.f32	s13, s16
 8019d3e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019d42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d46:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019d4a:	ee16 4a90 	vmov	r4, s13
 8019d4e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019d52:	eef0 6a68 	vmov.f32	s13, s17
 8019d56:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019d5a:	ee18 2a10 	vmov	r2, s16
 8019d5e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019d62:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d66:	ee18 2a90 	vmov	r2, s17
 8019d6a:	932d      	str	r3, [sp, #180]	; 0xb4
 8019d6c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019d6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d72:	932e      	str	r3, [sp, #184]	; 0xb8
 8019d74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019d76:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019d78:	3b01      	subs	r3, #1
 8019d7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d7e:	930f      	str	r3, [sp, #60]	; 0x3c
 8019d80:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019d82:	bf08      	it	eq
 8019d84:	4613      	moveq	r3, r2
 8019d86:	ee16 6a90 	vmov	r6, s13
 8019d8a:	9309      	str	r3, [sp, #36]	; 0x24
 8019d8c:	eef0 8a67 	vmov.f32	s17, s15
 8019d90:	eeb0 8a47 	vmov.f32	s16, s14
 8019d94:	e694      	b.n	8019ac0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8019d96:	2900      	cmp	r1, #0
 8019d98:	f43f af41 	beq.w	8019c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019d9c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d9e:	442b      	add	r3, r5
 8019da0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019da4:	07db      	lsls	r3, r3, #31
 8019da6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019daa:	bf54      	ite	pl
 8019dac:	f00c 030f 	andpl.w	r3, ip, #15
 8019db0:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019db4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019db8:	b2db      	uxtb	r3, r3
 8019dba:	930d      	str	r3, [sp, #52]	; 0x34
 8019dbc:	e72f      	b.n	8019c1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019dbe:	1c45      	adds	r5, r0, #1
 8019dc0:	d195      	bne.n	8019cee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019dc2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019dc4:	4285      	cmp	r5, r0
 8019dc6:	dd92      	ble.n	8019cee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019dc8:	1c5d      	adds	r5, r3, #1
 8019dca:	db90      	blt.n	8019cee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019dcc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019dce:	429d      	cmp	r5, r3
 8019dd0:	dd8d      	ble.n	8019cee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019dd2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8019dd6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019dd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019dda:	9301      	str	r3, [sp, #4]
 8019ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019dde:	9002      	str	r0, [sp, #8]
 8019de0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8019de4:	9300      	str	r3, [sp, #0]
 8019de6:	463a      	mov	r2, r7
 8019de8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019dea:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019dec:	4641      	mov	r1, r8
 8019dee:	f7ff fd47 	bl	8019880 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8019df2:	e77c      	b.n	8019cee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019df4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019df6:	1422      	asrs	r2, r4, #16
 8019df8:	1433      	asrs	r3, r6, #16
 8019dfa:	fb05 2303 	mla	r3, r5, r3, r2
 8019dfe:	085a      	lsrs	r2, r3, #1
 8019e00:	07dd      	lsls	r5, r3, #31
 8019e02:	5cba      	ldrb	r2, [r7, r2]
 8019e04:	bf54      	ite	pl
 8019e06:	f002 020f 	andpl.w	r2, r2, #15
 8019e0a:	1112      	asrmi	r2, r2, #4
 8019e0c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019e10:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019e14:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019e18:	b2d2      	uxtb	r2, r2
 8019e1a:	2900      	cmp	r1, #0
 8019e1c:	f000 80ae 	beq.w	8019f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8019e20:	f103 0e01 	add.w	lr, r3, #1
 8019e24:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019e28:	f01e 0f01 	tst.w	lr, #1
 8019e2c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019e30:	bf0c      	ite	eq
 8019e32:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019e36:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019e3a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019e3e:	fa5f f58c 	uxtb.w	r5, ip
 8019e42:	9514      	str	r5, [sp, #80]	; 0x50
 8019e44:	b300      	cbz	r0, 8019e88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 8019e46:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019e48:	442b      	add	r3, r5
 8019e4a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019e4e:	07dd      	lsls	r5, r3, #31
 8019e50:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019e54:	bf54      	ite	pl
 8019e56:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019e5a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019e5e:	3301      	adds	r3, #1
 8019e60:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019e64:	fa5f f58c 	uxtb.w	r5, ip
 8019e68:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019e6c:	950e      	str	r5, [sp, #56]	; 0x38
 8019e6e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019e72:	07dd      	lsls	r5, r3, #31
 8019e74:	bf54      	ite	pl
 8019e76:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019e7a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019e7e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019e82:	fa5f f38c 	uxtb.w	r3, ip
 8019e86:	9315      	str	r3, [sp, #84]	; 0x54
 8019e88:	b289      	uxth	r1, r1
 8019e8a:	b280      	uxth	r0, r0
 8019e8c:	fb01 f300 	mul.w	r3, r1, r0
 8019e90:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8019e94:	0109      	lsls	r1, r1, #4
 8019e96:	b280      	uxth	r0, r0
 8019e98:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8019e9c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019e9e:	1ac9      	subs	r1, r1, r3
 8019ea0:	ebac 0c00 	sub.w	ip, ip, r0
 8019ea4:	b289      	uxth	r1, r1
 8019ea6:	4369      	muls	r1, r5
 8019ea8:	fa1f fc8c 	uxth.w	ip, ip
 8019eac:	fb02 120c 	mla	r2, r2, ip, r1
 8019eb0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019eb2:	fb00 2001 	mla	r0, r0, r1, r2
 8019eb6:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8019eb8:	fb03 0302 	mla	r3, r3, r2, r0
 8019ebc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019ec0:	2b00      	cmp	r3, #0
 8019ec2:	d04d      	beq.n	8019f60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x508>
 8019ec4:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019ec6:	4a2b      	ldr	r2, [pc, #172]	; (8019f74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 8019ec8:	4d2b      	ldr	r5, [pc, #172]	; (8019f78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 8019eca:	f8d2 e000 	ldr.w	lr, [r2]
 8019ece:	f8b9 2000 	ldrh.w	r2, [r9]
 8019ed2:	434b      	muls	r3, r1
 8019ed4:	1c59      	adds	r1, r3, #1
 8019ed6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019eda:	121b      	asrs	r3, r3, #8
 8019edc:	b299      	uxth	r1, r3
 8019ede:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019ee2:	43db      	mvns	r3, r3
 8019ee4:	b2db      	uxtb	r3, r3
 8019ee6:	ea4f 202e 	mov.w	r0, lr, asr #8
 8019eea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019eee:	fb1c fc03 	smulbb	ip, ip, r3
 8019ef2:	ea4f 08e2 	mov.w	r8, r2, asr #3
 8019ef6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019efa:	fb00 c001 	mla	r0, r0, r1, ip
 8019efe:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019f02:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 8019f06:	fb18 f803 	smulbb	r8, r8, r3
 8019f0a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019f0e:	00d2      	lsls	r2, r2, #3
 8019f10:	fb0c 8c01 	mla	ip, ip, r1, r8
 8019f14:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 8019f18:	b2d2      	uxtb	r2, r2
 8019f1a:	fa1f fc8c 	uxth.w	ip, ip
 8019f1e:	fa5f fe8e 	uxtb.w	lr, lr
 8019f22:	fb12 f203 	smulbb	r2, r2, r3
 8019f26:	b280      	uxth	r0, r0
 8019f28:	fb0e 2201 	mla	r2, lr, r1, r2
 8019f2c:	f10c 0801 	add.w	r8, ip, #1
 8019f30:	b292      	uxth	r2, r2
 8019f32:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8019f36:	f100 0801 	add.w	r8, r0, #1
 8019f3a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019f3e:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 8019f42:	1c51      	adds	r1, r2, #1
 8019f44:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019f48:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019f4c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019f50:	ea4c 0c00 	orr.w	ip, ip, r0
 8019f54:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019f58:	ea4c 0c02 	orr.w	ip, ip, r2
 8019f5c:	f8a9 c000 	strh.w	ip, [r9]
 8019f60:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019f62:	441c      	add	r4, r3
 8019f64:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019f66:	f109 0902 	add.w	r9, r9, #2
 8019f6a:	441e      	add	r6, r3
 8019f6c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019f70:	e5d9      	b.n	8019b26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8019f72:	bf00      	nop
 8019f74:	200014c0 	.word	0x200014c0
 8019f78:	0007fff8 	.word	0x0007fff8
 8019f7c:	2800      	cmp	r0, #0
 8019f7e:	d083      	beq.n	8019e88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 8019f80:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019f82:	442b      	add	r3, r5
 8019f84:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019f88:	07db      	lsls	r3, r3, #31
 8019f8a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019f8e:	bf54      	ite	pl
 8019f90:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019f94:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019f98:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019f9c:	fa5f f38c 	uxtb.w	r3, ip
 8019fa0:	930e      	str	r3, [sp, #56]	; 0x38
 8019fa2:	e771      	b.n	8019e88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 8019fa4:	b019      	add	sp, #100	; 0x64
 8019fa6:	ecbd 8b08 	vpop	{d8-d11}
 8019faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019fae:	bf00      	nop

08019fb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8019fb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019fb4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8019fb8:	2c00      	cmp	r4, #0
 8019fba:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8019fbe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8019fc2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019fc6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8019fca:	fb04 ce03 	mla	lr, r4, r3, ip
 8019fce:	db60      	blt.n	801a092 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8019fd0:	45a1      	cmp	r9, r4
 8019fd2:	dd5e      	ble.n	801a092 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8019fd4:	f1bc 0f00 	cmp.w	ip, #0
 8019fd8:	db59      	blt.n	801a08e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8019fda:	45e0      	cmp	r8, ip
 8019fdc:	dd57      	ble.n	801a08e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8019fde:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8019fe2:	f01e 0f01 	tst.w	lr, #1
 8019fe6:	5c16      	ldrb	r6, [r2, r0]
 8019fe8:	bf0c      	ite	eq
 8019fea:	f006 060f 	andeq.w	r6, r6, #15
 8019fee:	1136      	asrne	r6, r6, #4
 8019ff0:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019ff4:	b2f6      	uxtb	r6, r6
 8019ff6:	f11c 0001 	adds.w	r0, ip, #1
 8019ffa:	d44d      	bmi.n	801a098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019ffc:	4580      	cmp	r8, r0
 8019ffe:	dd4b      	ble.n	801a098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a000:	2d00      	cmp	r5, #0
 801a002:	d04b      	beq.n	801a09c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801a004:	f10e 0a01 	add.w	sl, lr, #1
 801a008:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a00c:	f01a 0f01 	tst.w	sl, #1
 801a010:	5c10      	ldrb	r0, [r2, r0]
 801a012:	bf0c      	ite	eq
 801a014:	f000 000f 	andeq.w	r0, r0, #15
 801a018:	1100      	asrne	r0, r0, #4
 801a01a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a01e:	b2c0      	uxtb	r0, r0
 801a020:	3401      	adds	r4, #1
 801a022:	d43f      	bmi.n	801a0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a024:	45a1      	cmp	r9, r4
 801a026:	dd3d      	ble.n	801a0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a028:	2f00      	cmp	r7, #0
 801a02a:	f000 8099 	beq.w	801a160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>
 801a02e:	f1bc 0f00 	cmp.w	ip, #0
 801a032:	db35      	blt.n	801a0a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a034:	45e0      	cmp	r8, ip
 801a036:	dd33      	ble.n	801a0a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a038:	eb03 090e 	add.w	r9, r3, lr
 801a03c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a040:	f019 0f01 	tst.w	r9, #1
 801a044:	5d14      	ldrb	r4, [r2, r4]
 801a046:	bf0c      	ite	eq
 801a048:	f004 040f 	andeq.w	r4, r4, #15
 801a04c:	1124      	asrne	r4, r4, #4
 801a04e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a052:	b2e4      	uxtb	r4, r4
 801a054:	f11c 0c01 	adds.w	ip, ip, #1
 801a058:	d427      	bmi.n	801a0aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a05a:	45e0      	cmp	r8, ip
 801a05c:	dd25      	ble.n	801a0aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a05e:	b335      	cbz	r5, 801a0ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801a060:	3301      	adds	r3, #1
 801a062:	449e      	add	lr, r3
 801a064:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a068:	f01e 0f01 	tst.w	lr, #1
 801a06c:	5cd2      	ldrb	r2, [r2, r3]
 801a06e:	bf0c      	ite	eq
 801a070:	f002 020f 	andeq.w	r2, r2, #15
 801a074:	1112      	asrne	r2, r2, #4
 801a076:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a07a:	b2d3      	uxtb	r3, r2
 801a07c:	2d0f      	cmp	r5, #15
 801a07e:	d917      	bls.n	801a0b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801a080:	4b3a      	ldr	r3, [pc, #232]	; (801a16c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801a082:	4a3b      	ldr	r2, [pc, #236]	; (801a170 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801a084:	483b      	ldr	r0, [pc, #236]	; (801a174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801a086:	f240 3173 	movw	r1, #883	; 0x373
 801a08a:	f000 fc47 	bl	801a91c <__assert_func>
 801a08e:	2600      	movs	r6, #0
 801a090:	e7b1      	b.n	8019ff6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801a092:	2000      	movs	r0, #0
 801a094:	4606      	mov	r6, r0
 801a096:	e7c3      	b.n	801a020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a098:	2000      	movs	r0, #0
 801a09a:	e7c1      	b.n	801a020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a09c:	4628      	mov	r0, r5
 801a09e:	e7bf      	b.n	801a020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a0a0:	2400      	movs	r4, #0
 801a0a2:	e7d7      	b.n	801a054 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801a0a4:	2300      	movs	r3, #0
 801a0a6:	461c      	mov	r4, r3
 801a0a8:	e7e8      	b.n	801a07c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a0aa:	2300      	movs	r3, #0
 801a0ac:	e7e6      	b.n	801a07c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a0ae:	462b      	mov	r3, r5
 801a0b0:	2f0f      	cmp	r7, #15
 801a0b2:	d8e5      	bhi.n	801a080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a0b4:	b2ad      	uxth	r5, r5
 801a0b6:	b2bf      	uxth	r7, r7
 801a0b8:	fb05 fc07 	mul.w	ip, r5, r7
 801a0bc:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a0c0:	012d      	lsls	r5, r5, #4
 801a0c2:	b2bf      	uxth	r7, r7
 801a0c4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a0c8:	eba5 050c 	sub.w	r5, r5, ip
 801a0cc:	1bd2      	subs	r2, r2, r7
 801a0ce:	b2ad      	uxth	r5, r5
 801a0d0:	b292      	uxth	r2, r2
 801a0d2:	4368      	muls	r0, r5
 801a0d4:	fb06 0002 	mla	r0, r6, r2, r0
 801a0d8:	fb07 0404 	mla	r4, r7, r4, r0
 801a0dc:	fb0c 4303 	mla	r3, ip, r3, r4
 801a0e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a0e4:	2b00      	cmp	r3, #0
 801a0e6:	d039      	beq.n	801a15c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801a0e8:	4a23      	ldr	r2, [pc, #140]	; (801a178 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c8>)
 801a0ea:	6816      	ldr	r6, [r2, #0]
 801a0ec:	880a      	ldrh	r2, [r1, #0]
 801a0ee:	b298      	uxth	r0, r3
 801a0f0:	1215      	asrs	r5, r2, #8
 801a0f2:	43db      	mvns	r3, r3
 801a0f4:	b2db      	uxtb	r3, r3
 801a0f6:	1234      	asrs	r4, r6, #8
 801a0f8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a0fc:	fb15 f503 	smulbb	r5, r5, r3
 801a100:	10d7      	asrs	r7, r2, #3
 801a102:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801a106:	fb04 5400 	mla	r4, r4, r0, r5
 801a10a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a10e:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801a112:	fb17 f703 	smulbb	r7, r7, r3
 801a116:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a11a:	00d2      	lsls	r2, r2, #3
 801a11c:	fb05 7500 	mla	r5, r5, r0, r7
 801a120:	b2d2      	uxtb	r2, r2
 801a122:	00f6      	lsls	r6, r6, #3
 801a124:	fb12 f303 	smulbb	r3, r2, r3
 801a128:	b2ad      	uxth	r5, r5
 801a12a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a12e:	b2a4      	uxth	r4, r4
 801a130:	fb06 3000 	mla	r0, r6, r0, r3
 801a134:	1c6b      	adds	r3, r5, #1
 801a136:	b280      	uxth	r0, r0
 801a138:	1c62      	adds	r2, r4, #1
 801a13a:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801a13e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a142:	095b      	lsrs	r3, r3, #5
 801a144:	1c42      	adds	r2, r0, #1
 801a146:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a14a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a14e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a152:	4323      	orrs	r3, r4
 801a154:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a158:	4303      	orrs	r3, r0
 801a15a:	800b      	strh	r3, [r1, #0]
 801a15c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a160:	2d0f      	cmp	r5, #15
 801a162:	d88d      	bhi.n	801a080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a164:	463b      	mov	r3, r7
 801a166:	463c      	mov	r4, r7
 801a168:	e7a4      	b.n	801a0b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801a16a:	bf00      	nop
 801a16c:	0801e397 	.word	0x0801e397
 801a170:	0801e8f5 	.word	0x0801e8f5
 801a174:	0801e41f 	.word	0x0801e41f
 801a178:	200014c0 	.word	0x200014c0

0801a17c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801a17c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a180:	ed2d 8b08 	vpush	{d8-d11}
 801a184:	b095      	sub	sp, #84	; 0x54
 801a186:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801a18a:	9306      	str	r3, [sp, #24]
 801a18c:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 801a190:	9307      	str	r3, [sp, #28]
 801a192:	920d      	str	r2, [sp, #52]	; 0x34
 801a194:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801a198:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a19a:	910a      	str	r1, [sp, #40]	; 0x28
 801a19c:	9308      	str	r3, [sp, #32]
 801a19e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801a1a2:	9013      	str	r0, [sp, #76]	; 0x4c
 801a1a4:	6850      	ldr	r0, [r2, #4]
 801a1a6:	6812      	ldr	r2, [r2, #0]
 801a1a8:	fb00 1303 	mla	r3, r0, r3, r1
 801a1ac:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 801a1b0:	9b07      	ldr	r3, [sp, #28]
 801a1b2:	3301      	adds	r3, #1
 801a1b4:	f023 0301 	bic.w	r3, r3, #1
 801a1b8:	9309      	str	r3, [sp, #36]	; 0x24
 801a1ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a1bc:	681f      	ldr	r7, [r3, #0]
 801a1be:	eeb0 aa40 	vmov.f32	s20, s0
 801a1c2:	eef0 9a60 	vmov.f32	s19, s1
 801a1c6:	eeb0 9a41 	vmov.f32	s18, s2
 801a1ca:	eeb0 8a62 	vmov.f32	s16, s5
 801a1ce:	eef0 8a43 	vmov.f32	s17, s6
 801a1d2:	eef0 ba44 	vmov.f32	s23, s8
 801a1d6:	eeb0 ba64 	vmov.f32	s22, s9
 801a1da:	eef0 aa45 	vmov.f32	s21, s10
 801a1de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a1e0:	2b00      	cmp	r3, #0
 801a1e2:	dc03      	bgt.n	801a1ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801a1e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a1e6:	2b00      	cmp	r3, #0
 801a1e8:	f340 8260 	ble.w	801a6ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801a1ec:	9b06      	ldr	r3, [sp, #24]
 801a1ee:	2b00      	cmp	r3, #0
 801a1f0:	f340 811c 	ble.w	801a42c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801a1f4:	1422      	asrs	r2, r4, #16
 801a1f6:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a1fa:	d42d      	bmi.n	801a258 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801a1fc:	9807      	ldr	r0, [sp, #28]
 801a1fe:	1c51      	adds	r1, r2, #1
 801a200:	4288      	cmp	r0, r1
 801a202:	dd2c      	ble.n	801a25e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a204:	2b00      	cmp	r3, #0
 801a206:	db2a      	blt.n	801a25e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a208:	9808      	ldr	r0, [sp, #32]
 801a20a:	1c59      	adds	r1, r3, #1
 801a20c:	4288      	cmp	r0, r1
 801a20e:	dd26      	ble.n	801a25e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a210:	9b06      	ldr	r3, [sp, #24]
 801a212:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a214:	3b01      	subs	r3, #1
 801a216:	fb02 4203 	mla	r2, r2, r3, r4
 801a21a:	1412      	asrs	r2, r2, #16
 801a21c:	d42a      	bmi.n	801a274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a21e:	9907      	ldr	r1, [sp, #28]
 801a220:	3201      	adds	r2, #1
 801a222:	4291      	cmp	r1, r2
 801a224:	dd26      	ble.n	801a274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a226:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801a228:	fb02 6303 	mla	r3, r2, r3, r6
 801a22c:	141b      	asrs	r3, r3, #16
 801a22e:	d421      	bmi.n	801a274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a230:	9a08      	ldr	r2, [sp, #32]
 801a232:	3301      	adds	r3, #1
 801a234:	429a      	cmp	r2, r3
 801a236:	dd1d      	ble.n	801a274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a238:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801a23c:	f8dd a018 	ldr.w	sl, [sp, #24]
 801a240:	930e      	str	r3, [sp, #56]	; 0x38
 801a242:	46d8      	mov	r8, fp
 801a244:	f1ba 0f00 	cmp.w	sl, #0
 801a248:	f300 8164 	bgt.w	801a514 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801a24c:	9b06      	ldr	r3, [sp, #24]
 801a24e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a252:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801a256:	e0eb      	b.n	801a430 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801a258:	1c51      	adds	r1, r2, #1
 801a25a:	f040 80dd 	bne.w	801a418 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a25e:	9907      	ldr	r1, [sp, #28]
 801a260:	4291      	cmp	r1, r2
 801a262:	f340 80d9 	ble.w	801a418 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a266:	1c5a      	adds	r2, r3, #1
 801a268:	f2c0 80d6 	blt.w	801a418 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a26c:	9a08      	ldr	r2, [sp, #32]
 801a26e:	4293      	cmp	r3, r2
 801a270:	f280 80d2 	bge.w	801a418 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a274:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801a278:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801a27c:	46d8      	mov	r8, fp
 801a27e:	f1b9 0f00 	cmp.w	r9, #0
 801a282:	dde3      	ble.n	801a24c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801a284:	1420      	asrs	r0, r4, #16
 801a286:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a28a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a28e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a292:	f100 8127 	bmi.w	801a4e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801a296:	9d07      	ldr	r5, [sp, #28]
 801a298:	f100 0c01 	add.w	ip, r0, #1
 801a29c:	4565      	cmp	r5, ip
 801a29e:	f340 8123 	ble.w	801a4e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801a2a2:	2b00      	cmp	r3, #0
 801a2a4:	f2c0 8120 	blt.w	801a4e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801a2a8:	9d08      	ldr	r5, [sp, #32]
 801a2aa:	f103 0c01 	add.w	ip, r3, #1
 801a2ae:	4565      	cmp	r5, ip
 801a2b0:	f340 811a 	ble.w	801a4e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801a2b4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a2b6:	fb03 0305 	mla	r3, r3, r5, r0
 801a2ba:	0858      	lsrs	r0, r3, #1
 801a2bc:	07dd      	lsls	r5, r3, #31
 801a2be:	5c38      	ldrb	r0, [r7, r0]
 801a2c0:	bf54      	ite	pl
 801a2c2:	f000 000f 	andpl.w	r0, r0, #15
 801a2c6:	1100      	asrmi	r0, r0, #4
 801a2c8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a2cc:	b2c0      	uxtb	r0, r0
 801a2ce:	2a00      	cmp	r2, #0
 801a2d0:	f000 80ed 	beq.w	801a4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x332>
 801a2d4:	f103 0e01 	add.w	lr, r3, #1
 801a2d8:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a2dc:	f01e 0f01 	tst.w	lr, #1
 801a2e0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a2e4:	bf0c      	ite	eq
 801a2e6:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a2ea:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a2ee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a2f2:	fa5f fc8c 	uxtb.w	ip, ip
 801a2f6:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801a2fa:	b1f9      	cbz	r1, 801a33c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a2fc:	4453      	add	r3, sl
 801a2fe:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a302:	07dd      	lsls	r5, r3, #31
 801a304:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a308:	bf54      	ite	pl
 801a30a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a30e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a312:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a316:	3301      	adds	r3, #1
 801a318:	fa5f fc8c 	uxtb.w	ip, ip
 801a31c:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801a320:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a324:	07dd      	lsls	r5, r3, #31
 801a326:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a32a:	bf54      	ite	pl
 801a32c:	f00c 030f 	andpl.w	r3, ip, #15
 801a330:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a334:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a338:	b2db      	uxtb	r3, r3
 801a33a:	9310      	str	r3, [sp, #64]	; 0x40
 801a33c:	b292      	uxth	r2, r2
 801a33e:	b289      	uxth	r1, r1
 801a340:	fb02 f301 	mul.w	r3, r2, r1
 801a344:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a348:	0112      	lsls	r2, r2, #4
 801a34a:	b289      	uxth	r1, r1
 801a34c:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801a350:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a352:	1ad2      	subs	r2, r2, r3
 801a354:	ebac 0c01 	sub.w	ip, ip, r1
 801a358:	b292      	uxth	r2, r2
 801a35a:	436a      	muls	r2, r5
 801a35c:	fa1f fc8c 	uxth.w	ip, ip
 801a360:	fb00 200c 	mla	r0, r0, ip, r2
 801a364:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a366:	fb01 0102 	mla	r1, r1, r2, r0
 801a36a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a36c:	fb03 1302 	mla	r3, r3, r2, r1
 801a370:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a374:	2b00      	cmp	r3, #0
 801a376:	d046      	beq.n	801a406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a378:	4ac7      	ldr	r2, [pc, #796]	; (801a698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a37a:	49c8      	ldr	r1, [pc, #800]	; (801a69c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a37c:	6812      	ldr	r2, [r2, #0]
 801a37e:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801a382:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801a386:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801a38a:	b2d2      	uxtb	r2, r2
 801a38c:	2bff      	cmp	r3, #255	; 0xff
 801a38e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a392:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a396:	4615      	mov	r5, r2
 801a398:	f000 809c 	beq.w	801a4d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801a39c:	f8b8 0000 	ldrh.w	r0, [r8]
 801a3a0:	b29a      	uxth	r2, r3
 801a3a2:	1201      	asrs	r1, r0, #8
 801a3a4:	43db      	mvns	r3, r3
 801a3a6:	b2db      	uxtb	r3, r3
 801a3a8:	fb1e fe02 	smulbb	lr, lr, r2
 801a3ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a3b0:	fb01 e103 	mla	r1, r1, r3, lr
 801a3b4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a3b8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a3bc:	fb1c fc02 	smulbb	ip, ip, r2
 801a3c0:	fb0e cc03 	mla	ip, lr, r3, ip
 801a3c4:	00c0      	lsls	r0, r0, #3
 801a3c6:	fa1f fc8c 	uxth.w	ip, ip
 801a3ca:	fb15 f202 	smulbb	r2, r5, r2
 801a3ce:	b2c0      	uxtb	r0, r0
 801a3d0:	b289      	uxth	r1, r1
 801a3d2:	fb00 2303 	mla	r3, r0, r3, r2
 801a3d6:	f10c 0e01 	add.w	lr, ip, #1
 801a3da:	b29b      	uxth	r3, r3
 801a3dc:	1c4a      	adds	r2, r1, #1
 801a3de:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801a3e2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a3e6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a3ea:	1c5a      	adds	r2, r3, #1
 801a3ec:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a3f0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a3f4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a3f8:	ea4c 0101 	orr.w	r1, ip, r1
 801a3fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a400:	4319      	orrs	r1, r3
 801a402:	f8a8 1000 	strh.w	r1, [r8]
 801a406:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a408:	441c      	add	r4, r3
 801a40a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a40c:	f108 0802 	add.w	r8, r8, #2
 801a410:	441e      	add	r6, r3
 801a412:	f109 39ff 	add.w	r9, r9, #4294967295
 801a416:	e732      	b.n	801a27e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801a418:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a41a:	441c      	add	r4, r3
 801a41c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a41e:	441e      	add	r6, r3
 801a420:	9b06      	ldr	r3, [sp, #24]
 801a422:	3b01      	subs	r3, #1
 801a424:	9306      	str	r3, [sp, #24]
 801a426:	f10b 0b02 	add.w	fp, fp, #2
 801a42a:	e6df      	b.n	801a1ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801a42c:	f47f aef0 	bne.w	801a210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801a430:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a432:	2b00      	cmp	r3, #0
 801a434:	f340 813a 	ble.w	801a6ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801a438:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a43c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a440:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a444:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a446:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a44a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a44e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a452:	eef0 6a48 	vmov.f32	s13, s16
 801a456:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a45a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a45e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a462:	ee16 4a90 	vmov	r4, s13
 801a466:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a46a:	eef0 6a68 	vmov.f32	s13, s17
 801a46e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a472:	ee18 2a10 	vmov	r2, s16
 801a476:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a47a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a47e:	ee18 2a90 	vmov	r2, s17
 801a482:	9329      	str	r3, [sp, #164]	; 0xa4
 801a484:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a486:	fb92 f3f3 	sdiv	r3, r2, r3
 801a48a:	932a      	str	r3, [sp, #168]	; 0xa8
 801a48c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a48e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a490:	3b01      	subs	r3, #1
 801a492:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a496:	930a      	str	r3, [sp, #40]	; 0x28
 801a498:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a49a:	bf08      	it	eq
 801a49c:	4613      	moveq	r3, r2
 801a49e:	ee16 6a90 	vmov	r6, s13
 801a4a2:	9306      	str	r3, [sp, #24]
 801a4a4:	eef0 8a67 	vmov.f32	s17, s15
 801a4a8:	eeb0 8a47 	vmov.f32	s16, s14
 801a4ac:	e697      	b.n	801a1de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801a4ae:	2900      	cmp	r1, #0
 801a4b0:	f43f af44 	beq.w	801a33c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a4b4:	4453      	add	r3, sl
 801a4b6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a4ba:	07db      	lsls	r3, r3, #31
 801a4bc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a4c0:	bf54      	ite	pl
 801a4c2:	f00c 030f 	andpl.w	r3, ip, #15
 801a4c6:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a4ca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a4ce:	b2db      	uxtb	r3, r3
 801a4d0:	930b      	str	r3, [sp, #44]	; 0x2c
 801a4d2:	e733      	b.n	801a33c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a4d4:	08d2      	lsrs	r2, r2, #3
 801a4d6:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801a4da:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801a4de:	f8a8 c000 	strh.w	ip, [r8]
 801a4e2:	e790      	b.n	801a406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a4e4:	1c45      	adds	r5, r0, #1
 801a4e6:	d18e      	bne.n	801a406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a4e8:	9d07      	ldr	r5, [sp, #28]
 801a4ea:	4285      	cmp	r5, r0
 801a4ec:	dd8b      	ble.n	801a406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a4ee:	1c5d      	adds	r5, r3, #1
 801a4f0:	db89      	blt.n	801a406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a4f2:	9d08      	ldr	r5, [sp, #32]
 801a4f4:	429d      	cmp	r5, r3
 801a4f6:	dd86      	ble.n	801a406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a4f8:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801a4fc:	9b07      	ldr	r3, [sp, #28]
 801a4fe:	9300      	str	r3, [sp, #0]
 801a500:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801a504:	9501      	str	r5, [sp, #4]
 801a506:	4653      	mov	r3, sl
 801a508:	463a      	mov	r2, r7
 801a50a:	4641      	mov	r1, r8
 801a50c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a50e:	f7ff fd4f 	bl	8019fb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801a512:	e778      	b.n	801a406 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a514:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a516:	1422      	asrs	r2, r4, #16
 801a518:	1433      	asrs	r3, r6, #16
 801a51a:	fb01 2303 	mla	r3, r1, r3, r2
 801a51e:	085a      	lsrs	r2, r3, #1
 801a520:	07d9      	lsls	r1, r3, #31
 801a522:	5cba      	ldrb	r2, [r7, r2]
 801a524:	bf54      	ite	pl
 801a526:	f002 020f 	andpl.w	r2, r2, #15
 801a52a:	1112      	asrmi	r2, r2, #4
 801a52c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a530:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a534:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a538:	b2d2      	uxtb	r2, r2
 801a53a:	2800      	cmp	r0, #0
 801a53c:	f000 809b 	beq.w	801a676 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fa>
 801a540:	f103 0e01 	add.w	lr, r3, #1
 801a544:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801a548:	f01e 0f01 	tst.w	lr, #1
 801a54c:	5c79      	ldrb	r1, [r7, r1]
 801a54e:	bf0c      	ite	eq
 801a550:	f001 010f 	andeq.w	r1, r1, #15
 801a554:	1109      	asrne	r1, r1, #4
 801a556:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a55a:	b2c9      	uxtb	r1, r1
 801a55c:	9111      	str	r1, [sp, #68]	; 0x44
 801a55e:	f1bc 0f00 	cmp.w	ip, #0
 801a562:	d018      	beq.n	801a596 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801a564:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a566:	440b      	add	r3, r1
 801a568:	0859      	lsrs	r1, r3, #1
 801a56a:	07dd      	lsls	r5, r3, #31
 801a56c:	5c79      	ldrb	r1, [r7, r1]
 801a56e:	bf54      	ite	pl
 801a570:	f001 010f 	andpl.w	r1, r1, #15
 801a574:	1109      	asrmi	r1, r1, #4
 801a576:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a57a:	b2c9      	uxtb	r1, r1
 801a57c:	3301      	adds	r3, #1
 801a57e:	910c      	str	r1, [sp, #48]	; 0x30
 801a580:	0859      	lsrs	r1, r3, #1
 801a582:	07dd      	lsls	r5, r3, #31
 801a584:	5c79      	ldrb	r1, [r7, r1]
 801a586:	bf54      	ite	pl
 801a588:	f001 010f 	andpl.w	r1, r1, #15
 801a58c:	1109      	asrmi	r1, r1, #4
 801a58e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a592:	b2c9      	uxtb	r1, r1
 801a594:	9112      	str	r1, [sp, #72]	; 0x48
 801a596:	b280      	uxth	r0, r0
 801a598:	fa1f fc8c 	uxth.w	ip, ip
 801a59c:	fb00 f30c 	mul.w	r3, r0, ip
 801a5a0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801a5a4:	0100      	lsls	r0, r0, #4
 801a5a6:	fa1f fc8c 	uxth.w	ip, ip
 801a5aa:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801a5ae:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a5b0:	1ac0      	subs	r0, r0, r3
 801a5b2:	eba1 010c 	sub.w	r1, r1, ip
 801a5b6:	b280      	uxth	r0, r0
 801a5b8:	b289      	uxth	r1, r1
 801a5ba:	4368      	muls	r0, r5
 801a5bc:	fb02 0201 	mla	r2, r2, r1, r0
 801a5c0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a5c2:	fb0c 2c01 	mla	ip, ip, r1, r2
 801a5c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a5c8:	fb03 c302 	mla	r3, r3, r2, ip
 801a5cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a5d0:	2b00      	cmp	r3, #0
 801a5d2:	d047      	beq.n	801a664 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801a5d4:	4a30      	ldr	r2, [pc, #192]	; (801a698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a5d6:	4931      	ldr	r1, [pc, #196]	; (801a69c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a5d8:	6812      	ldr	r2, [r2, #0]
 801a5da:	2bff      	cmp	r3, #255	; 0xff
 801a5dc:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801a5e0:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801a5e4:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801a5e8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a5ec:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a5f0:	b2d2      	uxtb	r2, r2
 801a5f2:	d055      	beq.n	801a6a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801a5f4:	f8b8 0000 	ldrh.w	r0, [r8]
 801a5f8:	fa1f f983 	uxth.w	r9, r3
 801a5fc:	1201      	asrs	r1, r0, #8
 801a5fe:	43db      	mvns	r3, r3
 801a600:	b2db      	uxtb	r3, r3
 801a602:	fb1e fe09 	smulbb	lr, lr, r9
 801a606:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a60a:	fb01 e103 	mla	r1, r1, r3, lr
 801a60e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a612:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a616:	fb1c fc09 	smulbb	ip, ip, r9
 801a61a:	fb0e cc03 	mla	ip, lr, r3, ip
 801a61e:	00c0      	lsls	r0, r0, #3
 801a620:	fa1f fc8c 	uxth.w	ip, ip
 801a624:	b2c0      	uxtb	r0, r0
 801a626:	fb12 f209 	smulbb	r2, r2, r9
 801a62a:	b289      	uxth	r1, r1
 801a62c:	fb00 2203 	mla	r2, r0, r3, r2
 801a630:	f10c 0e01 	add.w	lr, ip, #1
 801a634:	b292      	uxth	r2, r2
 801a636:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801a63a:	f101 0e01 	add.w	lr, r1, #1
 801a63e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a642:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 801a646:	1c53      	adds	r3, r2, #1
 801a648:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a64c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a650:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a654:	ea4c 0c01 	orr.w	ip, ip, r1
 801a658:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a65c:	ea4c 0c02 	orr.w	ip, ip, r2
 801a660:	f8a8 c000 	strh.w	ip, [r8]
 801a664:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a666:	441c      	add	r4, r3
 801a668:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a66a:	f108 0802 	add.w	r8, r8, #2
 801a66e:	441e      	add	r6, r3
 801a670:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a674:	e5e6      	b.n	801a244 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801a676:	f1bc 0f00 	cmp.w	ip, #0
 801a67a:	d08c      	beq.n	801a596 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801a67c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a67e:	440b      	add	r3, r1
 801a680:	0859      	lsrs	r1, r3, #1
 801a682:	07db      	lsls	r3, r3, #31
 801a684:	5c79      	ldrb	r1, [r7, r1]
 801a686:	bf54      	ite	pl
 801a688:	f001 010f 	andpl.w	r1, r1, #15
 801a68c:	1109      	asrmi	r1, r1, #4
 801a68e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a692:	b2c9      	uxtb	r1, r1
 801a694:	910c      	str	r1, [sp, #48]	; 0x30
 801a696:	e77e      	b.n	801a596 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801a698:	200014c0 	.word	0x200014c0
 801a69c:	0007fff8 	.word	0x0007fff8
 801a6a0:	08d2      	lsrs	r2, r2, #3
 801a6a2:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801a6a6:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801a6aa:	e7d9      	b.n	801a660 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e4>
 801a6ac:	b015      	add	sp, #84	; 0x54
 801a6ae:	ecbd 8b08 	vpop	{d8-d11}
 801a6b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6b6:	bf00      	nop

0801a6b8 <CRC_Lock>:
 801a6b8:	b530      	push	{r4, r5, lr}
 801a6ba:	4a1d      	ldr	r2, [pc, #116]	; (801a730 <CRC_Lock+0x78>)
 801a6bc:	6813      	ldr	r3, [r2, #0]
 801a6be:	f023 0301 	bic.w	r3, r3, #1
 801a6c2:	6013      	str	r3, [r2, #0]
 801a6c4:	4b1b      	ldr	r3, [pc, #108]	; (801a734 <CRC_Lock+0x7c>)
 801a6c6:	681a      	ldr	r2, [r3, #0]
 801a6c8:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801a6cc:	4022      	ands	r2, r4
 801a6ce:	f24c 2540 	movw	r5, #49728	; 0xc240
 801a6d2:	42aa      	cmp	r2, r5
 801a6d4:	d005      	beq.n	801a6e2 <CRC_Lock+0x2a>
 801a6d6:	681b      	ldr	r3, [r3, #0]
 801a6d8:	f24c 2270 	movw	r2, #49776	; 0xc270
 801a6dc:	4023      	ands	r3, r4
 801a6de:	4293      	cmp	r3, r2
 801a6e0:	d11d      	bne.n	801a71e <CRC_Lock+0x66>
 801a6e2:	4b15      	ldr	r3, [pc, #84]	; (801a738 <CRC_Lock+0x80>)
 801a6e4:	681b      	ldr	r3, [r3, #0]
 801a6e6:	b9d3      	cbnz	r3, 801a71e <CRC_Lock+0x66>
 801a6e8:	4a14      	ldr	r2, [pc, #80]	; (801a73c <CRC_Lock+0x84>)
 801a6ea:	6813      	ldr	r3, [r2, #0]
 801a6ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a6f0:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801a6f4:	d006      	beq.n	801a704 <CRC_Lock+0x4c>
 801a6f6:	6813      	ldr	r3, [r2, #0]
 801a6f8:	f240 4283 	movw	r2, #1155	; 0x483
 801a6fc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a700:	4293      	cmp	r3, r2
 801a702:	d10c      	bne.n	801a71e <CRC_Lock+0x66>
 801a704:	4b0e      	ldr	r3, [pc, #56]	; (801a740 <CRC_Lock+0x88>)
 801a706:	2201      	movs	r2, #1
 801a708:	601a      	str	r2, [r3, #0]
 801a70a:	681a      	ldr	r2, [r3, #0]
 801a70c:	2a00      	cmp	r2, #0
 801a70e:	d1fc      	bne.n	801a70a <CRC_Lock+0x52>
 801a710:	4b0c      	ldr	r3, [pc, #48]	; (801a744 <CRC_Lock+0x8c>)
 801a712:	6018      	str	r0, [r3, #0]
 801a714:	6818      	ldr	r0, [r3, #0]
 801a716:	1a43      	subs	r3, r0, r1
 801a718:	4258      	negs	r0, r3
 801a71a:	4158      	adcs	r0, r3
 801a71c:	bd30      	pop	{r4, r5, pc}
 801a71e:	4b0a      	ldr	r3, [pc, #40]	; (801a748 <CRC_Lock+0x90>)
 801a720:	2201      	movs	r2, #1
 801a722:	601a      	str	r2, [r3, #0]
 801a724:	681a      	ldr	r2, [r3, #0]
 801a726:	2a00      	cmp	r2, #0
 801a728:	d1fc      	bne.n	801a724 <CRC_Lock+0x6c>
 801a72a:	4b08      	ldr	r3, [pc, #32]	; (801a74c <CRC_Lock+0x94>)
 801a72c:	e7f1      	b.n	801a712 <CRC_Lock+0x5a>
 801a72e:	bf00      	nop
 801a730:	e0002000 	.word	0xe0002000
 801a734:	e000ed00 	.word	0xe000ed00
 801a738:	e0042000 	.word	0xe0042000
 801a73c:	5c001000 	.word	0x5c001000
 801a740:	58024c08 	.word	0x58024c08
 801a744:	58024c00 	.word	0x58024c00
 801a748:	40023008 	.word	0x40023008
 801a74c:	40023000 	.word	0x40023000

0801a750 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801a750:	6101      	str	r1, [r0, #16]
 801a752:	4770      	bx	lr

0801a754 <_ZN8touchgfx8Gestures4tickEv>:
 801a754:	7b83      	ldrb	r3, [r0, #14]
 801a756:	b14b      	cbz	r3, 801a76c <_ZN8touchgfx8Gestures4tickEv+0x18>
 801a758:	8903      	ldrh	r3, [r0, #8]
 801a75a:	3301      	adds	r3, #1
 801a75c:	b29b      	uxth	r3, r3
 801a75e:	2b07      	cmp	r3, #7
 801a760:	8103      	strh	r3, [r0, #8]
 801a762:	bf81      	itttt	hi
 801a764:	2300      	movhi	r3, #0
 801a766:	8143      	strhhi	r3, [r0, #10]
 801a768:	8183      	strhhi	r3, [r0, #12]
 801a76a:	7383      	strbhi	r3, [r0, #14]
 801a76c:	4770      	bx	lr
	...

0801a770 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801a770:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801a774:	4604      	mov	r4, r0
 801a776:	8880      	ldrh	r0, [r0, #4]
 801a778:	f8ad 0006 	strh.w	r0, [sp, #6]
 801a77c:	4698      	mov	r8, r3
 801a77e:	eba8 0000 	sub.w	r0, r8, r0
 801a782:	4b1c      	ldr	r3, [pc, #112]	; (801a7f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801a784:	9300      	str	r3, [sp, #0]
 801a786:	b280      	uxth	r0, r0
 801a788:	2300      	movs	r3, #0
 801a78a:	f88d 3004 	strb.w	r3, [sp, #4]
 801a78e:	b203      	sxth	r3, r0
 801a790:	2b00      	cmp	r3, #0
 801a792:	bfb8      	it	lt
 801a794:	4240      	neglt	r0, r0
 801a796:	4617      	mov	r7, r2
 801a798:	8aa2      	ldrh	r2, [r4, #20]
 801a79a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801a79e:	f8ad 800a 	strh.w	r8, [sp, #10]
 801a7a2:	bfb8      	it	lt
 801a7a4:	b203      	sxthlt	r3, r0
 801a7a6:	460e      	mov	r6, r1
 801a7a8:	4293      	cmp	r3, r2
 801a7aa:	88e1      	ldrh	r1, [r4, #6]
 801a7ac:	f8ad 1008 	strh.w	r1, [sp, #8]
 801a7b0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a7b4:	dc08      	bgt.n	801a7c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801a7b6:	1a69      	subs	r1, r5, r1
 801a7b8:	b289      	uxth	r1, r1
 801a7ba:	b20b      	sxth	r3, r1
 801a7bc:	2b00      	cmp	r3, #0
 801a7be:	bfbc      	itt	lt
 801a7c0:	4249      	neglt	r1, r1
 801a7c2:	b20b      	sxthlt	r3, r1
 801a7c4:	429a      	cmp	r2, r3
 801a7c6:	da13      	bge.n	801a7f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801a7c8:	6920      	ldr	r0, [r4, #16]
 801a7ca:	6803      	ldr	r3, [r0, #0]
 801a7cc:	4669      	mov	r1, sp
 801a7ce:	685b      	ldr	r3, [r3, #4]
 801a7d0:	4798      	blx	r3
 801a7d2:	eba8 0606 	sub.w	r6, r8, r6
 801a7d6:	2300      	movs	r3, #0
 801a7d8:	1bef      	subs	r7, r5, r7
 801a7da:	2001      	movs	r0, #1
 801a7dc:	8123      	strh	r3, [r4, #8]
 801a7de:	8166      	strh	r6, [r4, #10]
 801a7e0:	81a7      	strh	r7, [r4, #12]
 801a7e2:	f8a4 8004 	strh.w	r8, [r4, #4]
 801a7e6:	80e5      	strh	r5, [r4, #6]
 801a7e8:	73a0      	strb	r0, [r4, #14]
 801a7ea:	b004      	add	sp, #16
 801a7ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a7f0:	2000      	movs	r0, #0
 801a7f2:	e7fa      	b.n	801a7ea <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801a7f4:	0801d698 	.word	0x0801d698

0801a7f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801a7f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a7fa:	461e      	mov	r6, r3
 801a7fc:	1e4b      	subs	r3, r1, #1
 801a7fe:	2b01      	cmp	r3, #1
 801a800:	b085      	sub	sp, #20
 801a802:	4604      	mov	r4, r0
 801a804:	460d      	mov	r5, r1
 801a806:	4617      	mov	r7, r2
 801a808:	d84b      	bhi.n	801a8a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801a80a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a80e:	1cd3      	adds	r3, r2, #3
 801a810:	b29b      	uxth	r3, r3
 801a812:	2b06      	cmp	r3, #6
 801a814:	d916      	bls.n	801a844 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801a816:	f8df c098 	ldr.w	ip, [pc, #152]	; 801a8b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801a81a:	f8cd c004 	str.w	ip, [sp, #4]
 801a81e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a822:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a826:	6900      	ldr	r0, [r0, #16]
 801a828:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a82c:	f04f 0c00 	mov.w	ip, #0
 801a830:	f88d c008 	strb.w	ip, [sp, #8]
 801a834:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a838:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a83c:	6803      	ldr	r3, [r0, #0]
 801a83e:	a901      	add	r1, sp, #4
 801a840:	689b      	ldr	r3, [r3, #8]
 801a842:	4798      	blx	r3
 801a844:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a848:	1cd3      	adds	r3, r2, #3
 801a84a:	b29b      	uxth	r3, r3
 801a84c:	2b06      	cmp	r3, #6
 801a84e:	d916      	bls.n	801a87e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a850:	f8df c05c 	ldr.w	ip, [pc, #92]	; 801a8b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801a854:	f8cd c004 	str.w	ip, [sp, #4]
 801a858:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a85c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801a860:	6920      	ldr	r0, [r4, #16]
 801a862:	f8ad 100c 	strh.w	r1, [sp, #12]
 801a866:	f04f 0c01 	mov.w	ip, #1
 801a86a:	f88d c008 	strb.w	ip, [sp, #8]
 801a86e:	f8ad 200a 	strh.w	r2, [sp, #10]
 801a872:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a876:	6803      	ldr	r3, [r0, #0]
 801a878:	a901      	add	r1, sp, #4
 801a87a:	689b      	ldr	r3, [r3, #8]
 801a87c:	4798      	blx	r3
 801a87e:	4b0b      	ldr	r3, [pc, #44]	; (801a8ac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb4>)
 801a880:	9301      	str	r3, [sp, #4]
 801a882:	6920      	ldr	r0, [r4, #16]
 801a884:	f88d 5008 	strb.w	r5, [sp, #8]
 801a888:	2300      	movs	r3, #0
 801a88a:	f8ad 700a 	strh.w	r7, [sp, #10]
 801a88e:	f8ad 600c 	strh.w	r6, [sp, #12]
 801a892:	f8ad 300e 	strh.w	r3, [sp, #14]
 801a896:	6803      	ldr	r3, [r0, #0]
 801a898:	a901      	add	r1, sp, #4
 801a89a:	681b      	ldr	r3, [r3, #0]
 801a89c:	4798      	blx	r3
 801a89e:	b005      	add	sp, #20
 801a8a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a8a2:	2900      	cmp	r1, #0
 801a8a4:	d1eb      	bne.n	801a87e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a8a6:	80a2      	strh	r2, [r4, #4]
 801a8a8:	80c6      	strh	r6, [r0, #6]
 801a8aa:	e7e8      	b.n	801a87e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801a8ac:	0801d684 	.word	0x0801d684
 801a8b0:	0801d6ac 	.word	0x0801d6ac

0801a8b4 <__aeabi_atexit>:
 801a8b4:	460b      	mov	r3, r1
 801a8b6:	4601      	mov	r1, r0
 801a8b8:	4618      	mov	r0, r3
 801a8ba:	f000 b853 	b.w	801a964 <__cxa_atexit>

0801a8be <_ZdlPvj>:
 801a8be:	f000 b812 	b.w	801a8e6 <_ZdlPv>

0801a8c2 <__cxa_guard_acquire>:
 801a8c2:	6803      	ldr	r3, [r0, #0]
 801a8c4:	07db      	lsls	r3, r3, #31
 801a8c6:	d406      	bmi.n	801a8d6 <__cxa_guard_acquire+0x14>
 801a8c8:	7843      	ldrb	r3, [r0, #1]
 801a8ca:	b103      	cbz	r3, 801a8ce <__cxa_guard_acquire+0xc>
 801a8cc:	deff      	udf	#255	; 0xff
 801a8ce:	2301      	movs	r3, #1
 801a8d0:	7043      	strb	r3, [r0, #1]
 801a8d2:	4618      	mov	r0, r3
 801a8d4:	4770      	bx	lr
 801a8d6:	2000      	movs	r0, #0
 801a8d8:	4770      	bx	lr

0801a8da <__cxa_guard_release>:
 801a8da:	2301      	movs	r3, #1
 801a8dc:	6003      	str	r3, [r0, #0]
 801a8de:	4770      	bx	lr

0801a8e0 <__cxa_pure_virtual>:
 801a8e0:	b508      	push	{r3, lr}
 801a8e2:	f000 f80f 	bl	801a904 <_ZSt9terminatev>

0801a8e6 <_ZdlPv>:
 801a8e6:	f000 b88f 	b.w	801aa08 <free>

0801a8ea <_ZN10__cxxabiv111__terminateEPFvvE>:
 801a8ea:	b508      	push	{r3, lr}
 801a8ec:	4780      	blx	r0
 801a8ee:	f000 f80e 	bl	801a90e <abort>
	...

0801a8f4 <_ZSt13get_terminatev>:
 801a8f4:	4b02      	ldr	r3, [pc, #8]	; (801a900 <_ZSt13get_terminatev+0xc>)
 801a8f6:	6818      	ldr	r0, [r3, #0]
 801a8f8:	f3bf 8f5b 	dmb	ish
 801a8fc:	4770      	bx	lr
 801a8fe:	bf00      	nop
 801a900:	20000098 	.word	0x20000098

0801a904 <_ZSt9terminatev>:
 801a904:	b508      	push	{r3, lr}
 801a906:	f7ff fff5 	bl	801a8f4 <_ZSt13get_terminatev>
 801a90a:	f7ff ffee 	bl	801a8ea <_ZN10__cxxabiv111__terminateEPFvvE>

0801a90e <abort>:
 801a90e:	b508      	push	{r3, lr}
 801a910:	2006      	movs	r0, #6
 801a912:	f000 fcb5 	bl	801b280 <raise>
 801a916:	2001      	movs	r0, #1
 801a918:	f7e7 fae4 	bl	8001ee4 <_exit>

0801a91c <__assert_func>:
 801a91c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801a91e:	4614      	mov	r4, r2
 801a920:	461a      	mov	r2, r3
 801a922:	4b09      	ldr	r3, [pc, #36]	; (801a948 <__assert_func+0x2c>)
 801a924:	681b      	ldr	r3, [r3, #0]
 801a926:	4605      	mov	r5, r0
 801a928:	68d8      	ldr	r0, [r3, #12]
 801a92a:	b14c      	cbz	r4, 801a940 <__assert_func+0x24>
 801a92c:	4b07      	ldr	r3, [pc, #28]	; (801a94c <__assert_func+0x30>)
 801a92e:	9100      	str	r1, [sp, #0]
 801a930:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801a934:	4906      	ldr	r1, [pc, #24]	; (801a950 <__assert_func+0x34>)
 801a936:	462b      	mov	r3, r5
 801a938:	f000 f828 	bl	801a98c <fiprintf>
 801a93c:	f7ff ffe7 	bl	801a90e <abort>
 801a940:	4b04      	ldr	r3, [pc, #16]	; (801a954 <__assert_func+0x38>)
 801a942:	461c      	mov	r4, r3
 801a944:	e7f3      	b.n	801a92e <__assert_func+0x12>
 801a946:	bf00      	nop
 801a948:	2000009c 	.word	0x2000009c
 801a94c:	0801eb30 	.word	0x0801eb30
 801a950:	0801eb3d 	.word	0x0801eb3d
 801a954:	0801eb6b 	.word	0x0801eb6b

0801a958 <atexit>:
 801a958:	2300      	movs	r3, #0
 801a95a:	4601      	mov	r1, r0
 801a95c:	461a      	mov	r2, r3
 801a95e:	4618      	mov	r0, r3
 801a960:	f000 bd6a 	b.w	801b438 <__register_exitproc>

0801a964 <__cxa_atexit>:
 801a964:	b510      	push	{r4, lr}
 801a966:	4c05      	ldr	r4, [pc, #20]	; (801a97c <__cxa_atexit+0x18>)
 801a968:	4613      	mov	r3, r2
 801a96a:	b12c      	cbz	r4, 801a978 <__cxa_atexit+0x14>
 801a96c:	460a      	mov	r2, r1
 801a96e:	4601      	mov	r1, r0
 801a970:	2002      	movs	r0, #2
 801a972:	f000 fd61 	bl	801b438 <__register_exitproc>
 801a976:	bd10      	pop	{r4, pc}
 801a978:	4620      	mov	r0, r4
 801a97a:	e7fc      	b.n	801a976 <__cxa_atexit+0x12>
 801a97c:	0801b439 	.word	0x0801b439

0801a980 <__errno>:
 801a980:	4b01      	ldr	r3, [pc, #4]	; (801a988 <__errno+0x8>)
 801a982:	6818      	ldr	r0, [r3, #0]
 801a984:	4770      	bx	lr
 801a986:	bf00      	nop
 801a988:	2000009c 	.word	0x2000009c

0801a98c <fiprintf>:
 801a98c:	b40e      	push	{r1, r2, r3}
 801a98e:	b503      	push	{r0, r1, lr}
 801a990:	4601      	mov	r1, r0
 801a992:	ab03      	add	r3, sp, #12
 801a994:	4805      	ldr	r0, [pc, #20]	; (801a9ac <fiprintf+0x20>)
 801a996:	f853 2b04 	ldr.w	r2, [r3], #4
 801a99a:	6800      	ldr	r0, [r0, #0]
 801a99c:	9301      	str	r3, [sp, #4]
 801a99e:	f000 f95b 	bl	801ac58 <_vfiprintf_r>
 801a9a2:	b002      	add	sp, #8
 801a9a4:	f85d eb04 	ldr.w	lr, [sp], #4
 801a9a8:	b003      	add	sp, #12
 801a9aa:	4770      	bx	lr
 801a9ac:	2000009c 	.word	0x2000009c

0801a9b0 <__libc_init_array>:
 801a9b0:	b570      	push	{r4, r5, r6, lr}
 801a9b2:	4d0d      	ldr	r5, [pc, #52]	; (801a9e8 <__libc_init_array+0x38>)
 801a9b4:	4c0d      	ldr	r4, [pc, #52]	; (801a9ec <__libc_init_array+0x3c>)
 801a9b6:	1b64      	subs	r4, r4, r5
 801a9b8:	10a4      	asrs	r4, r4, #2
 801a9ba:	2600      	movs	r6, #0
 801a9bc:	42a6      	cmp	r6, r4
 801a9be:	d109      	bne.n	801a9d4 <__libc_init_array+0x24>
 801a9c0:	4d0b      	ldr	r5, [pc, #44]	; (801a9f0 <__libc_init_array+0x40>)
 801a9c2:	4c0c      	ldr	r4, [pc, #48]	; (801a9f4 <__libc_init_array+0x44>)
 801a9c4:	f001 f872 	bl	801baac <_init>
 801a9c8:	1b64      	subs	r4, r4, r5
 801a9ca:	10a4      	asrs	r4, r4, #2
 801a9cc:	2600      	movs	r6, #0
 801a9ce:	42a6      	cmp	r6, r4
 801a9d0:	d105      	bne.n	801a9de <__libc_init_array+0x2e>
 801a9d2:	bd70      	pop	{r4, r5, r6, pc}
 801a9d4:	f855 3b04 	ldr.w	r3, [r5], #4
 801a9d8:	4798      	blx	r3
 801a9da:	3601      	adds	r6, #1
 801a9dc:	e7ee      	b.n	801a9bc <__libc_init_array+0xc>
 801a9de:	f855 3b04 	ldr.w	r3, [r5], #4
 801a9e2:	4798      	blx	r3
 801a9e4:	3601      	adds	r6, #1
 801a9e6:	e7f2      	b.n	801a9ce <__libc_init_array+0x1e>
 801a9e8:	0801ef80 	.word	0x0801ef80
 801a9ec:	0801ef80 	.word	0x0801ef80
 801a9f0:	0801ef80 	.word	0x0801ef80
 801a9f4:	0801ef94 	.word	0x0801ef94

0801a9f8 <malloc>:
 801a9f8:	4b02      	ldr	r3, [pc, #8]	; (801aa04 <malloc+0xc>)
 801a9fa:	4601      	mov	r1, r0
 801a9fc:	6818      	ldr	r0, [r3, #0]
 801a9fe:	f000 b88d 	b.w	801ab1c <_malloc_r>
 801aa02:	bf00      	nop
 801aa04:	2000009c 	.word	0x2000009c

0801aa08 <free>:
 801aa08:	4b02      	ldr	r3, [pc, #8]	; (801aa14 <free+0xc>)
 801aa0a:	4601      	mov	r1, r0
 801aa0c:	6818      	ldr	r0, [r3, #0]
 801aa0e:	f000 b819 	b.w	801aa44 <_free_r>
 801aa12:	bf00      	nop
 801aa14:	2000009c 	.word	0x2000009c

0801aa18 <memcpy>:
 801aa18:	440a      	add	r2, r1
 801aa1a:	4291      	cmp	r1, r2
 801aa1c:	f100 33ff 	add.w	r3, r0, #4294967295
 801aa20:	d100      	bne.n	801aa24 <memcpy+0xc>
 801aa22:	4770      	bx	lr
 801aa24:	b510      	push	{r4, lr}
 801aa26:	f811 4b01 	ldrb.w	r4, [r1], #1
 801aa2a:	f803 4f01 	strb.w	r4, [r3, #1]!
 801aa2e:	4291      	cmp	r1, r2
 801aa30:	d1f9      	bne.n	801aa26 <memcpy+0xe>
 801aa32:	bd10      	pop	{r4, pc}

0801aa34 <memset>:
 801aa34:	4402      	add	r2, r0
 801aa36:	4603      	mov	r3, r0
 801aa38:	4293      	cmp	r3, r2
 801aa3a:	d100      	bne.n	801aa3e <memset+0xa>
 801aa3c:	4770      	bx	lr
 801aa3e:	f803 1b01 	strb.w	r1, [r3], #1
 801aa42:	e7f9      	b.n	801aa38 <memset+0x4>

0801aa44 <_free_r>:
 801aa44:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801aa46:	2900      	cmp	r1, #0
 801aa48:	d044      	beq.n	801aad4 <_free_r+0x90>
 801aa4a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801aa4e:	9001      	str	r0, [sp, #4]
 801aa50:	2b00      	cmp	r3, #0
 801aa52:	f1a1 0404 	sub.w	r4, r1, #4
 801aa56:	bfb8      	it	lt
 801aa58:	18e4      	addlt	r4, r4, r3
 801aa5a:	f000 ff6f 	bl	801b93c <__malloc_lock>
 801aa5e:	4a1e      	ldr	r2, [pc, #120]	; (801aad8 <_free_r+0x94>)
 801aa60:	9801      	ldr	r0, [sp, #4]
 801aa62:	6813      	ldr	r3, [r2, #0]
 801aa64:	b933      	cbnz	r3, 801aa74 <_free_r+0x30>
 801aa66:	6063      	str	r3, [r4, #4]
 801aa68:	6014      	str	r4, [r2, #0]
 801aa6a:	b003      	add	sp, #12
 801aa6c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801aa70:	f000 bf6a 	b.w	801b948 <__malloc_unlock>
 801aa74:	42a3      	cmp	r3, r4
 801aa76:	d908      	bls.n	801aa8a <_free_r+0x46>
 801aa78:	6825      	ldr	r5, [r4, #0]
 801aa7a:	1961      	adds	r1, r4, r5
 801aa7c:	428b      	cmp	r3, r1
 801aa7e:	bf01      	itttt	eq
 801aa80:	6819      	ldreq	r1, [r3, #0]
 801aa82:	685b      	ldreq	r3, [r3, #4]
 801aa84:	1949      	addeq	r1, r1, r5
 801aa86:	6021      	streq	r1, [r4, #0]
 801aa88:	e7ed      	b.n	801aa66 <_free_r+0x22>
 801aa8a:	461a      	mov	r2, r3
 801aa8c:	685b      	ldr	r3, [r3, #4]
 801aa8e:	b10b      	cbz	r3, 801aa94 <_free_r+0x50>
 801aa90:	42a3      	cmp	r3, r4
 801aa92:	d9fa      	bls.n	801aa8a <_free_r+0x46>
 801aa94:	6811      	ldr	r1, [r2, #0]
 801aa96:	1855      	adds	r5, r2, r1
 801aa98:	42a5      	cmp	r5, r4
 801aa9a:	d10b      	bne.n	801aab4 <_free_r+0x70>
 801aa9c:	6824      	ldr	r4, [r4, #0]
 801aa9e:	4421      	add	r1, r4
 801aaa0:	1854      	adds	r4, r2, r1
 801aaa2:	42a3      	cmp	r3, r4
 801aaa4:	6011      	str	r1, [r2, #0]
 801aaa6:	d1e0      	bne.n	801aa6a <_free_r+0x26>
 801aaa8:	681c      	ldr	r4, [r3, #0]
 801aaaa:	685b      	ldr	r3, [r3, #4]
 801aaac:	6053      	str	r3, [r2, #4]
 801aaae:	4421      	add	r1, r4
 801aab0:	6011      	str	r1, [r2, #0]
 801aab2:	e7da      	b.n	801aa6a <_free_r+0x26>
 801aab4:	d902      	bls.n	801aabc <_free_r+0x78>
 801aab6:	230c      	movs	r3, #12
 801aab8:	6003      	str	r3, [r0, #0]
 801aaba:	e7d6      	b.n	801aa6a <_free_r+0x26>
 801aabc:	6825      	ldr	r5, [r4, #0]
 801aabe:	1961      	adds	r1, r4, r5
 801aac0:	428b      	cmp	r3, r1
 801aac2:	bf04      	itt	eq
 801aac4:	6819      	ldreq	r1, [r3, #0]
 801aac6:	685b      	ldreq	r3, [r3, #4]
 801aac8:	6063      	str	r3, [r4, #4]
 801aaca:	bf04      	itt	eq
 801aacc:	1949      	addeq	r1, r1, r5
 801aace:	6021      	streq	r1, [r4, #0]
 801aad0:	6054      	str	r4, [r2, #4]
 801aad2:	e7ca      	b.n	801aa6a <_free_r+0x26>
 801aad4:	b003      	add	sp, #12
 801aad6:	bd30      	pop	{r4, r5, pc}
 801aad8:	200015d4 	.word	0x200015d4

0801aadc <sbrk_aligned>:
 801aadc:	b570      	push	{r4, r5, r6, lr}
 801aade:	4e0e      	ldr	r6, [pc, #56]	; (801ab18 <sbrk_aligned+0x3c>)
 801aae0:	460c      	mov	r4, r1
 801aae2:	6831      	ldr	r1, [r6, #0]
 801aae4:	4605      	mov	r5, r0
 801aae6:	b911      	cbnz	r1, 801aaee <sbrk_aligned+0x12>
 801aae8:	f000 fb92 	bl	801b210 <_sbrk_r>
 801aaec:	6030      	str	r0, [r6, #0]
 801aaee:	4621      	mov	r1, r4
 801aaf0:	4628      	mov	r0, r5
 801aaf2:	f000 fb8d 	bl	801b210 <_sbrk_r>
 801aaf6:	1c43      	adds	r3, r0, #1
 801aaf8:	d00a      	beq.n	801ab10 <sbrk_aligned+0x34>
 801aafa:	1cc4      	adds	r4, r0, #3
 801aafc:	f024 0403 	bic.w	r4, r4, #3
 801ab00:	42a0      	cmp	r0, r4
 801ab02:	d007      	beq.n	801ab14 <sbrk_aligned+0x38>
 801ab04:	1a21      	subs	r1, r4, r0
 801ab06:	4628      	mov	r0, r5
 801ab08:	f000 fb82 	bl	801b210 <_sbrk_r>
 801ab0c:	3001      	adds	r0, #1
 801ab0e:	d101      	bne.n	801ab14 <sbrk_aligned+0x38>
 801ab10:	f04f 34ff 	mov.w	r4, #4294967295
 801ab14:	4620      	mov	r0, r4
 801ab16:	bd70      	pop	{r4, r5, r6, pc}
 801ab18:	200015d8 	.word	0x200015d8

0801ab1c <_malloc_r>:
 801ab1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ab20:	1ccd      	adds	r5, r1, #3
 801ab22:	f025 0503 	bic.w	r5, r5, #3
 801ab26:	3508      	adds	r5, #8
 801ab28:	2d0c      	cmp	r5, #12
 801ab2a:	bf38      	it	cc
 801ab2c:	250c      	movcc	r5, #12
 801ab2e:	2d00      	cmp	r5, #0
 801ab30:	4607      	mov	r7, r0
 801ab32:	db01      	blt.n	801ab38 <_malloc_r+0x1c>
 801ab34:	42a9      	cmp	r1, r5
 801ab36:	d905      	bls.n	801ab44 <_malloc_r+0x28>
 801ab38:	230c      	movs	r3, #12
 801ab3a:	603b      	str	r3, [r7, #0]
 801ab3c:	2600      	movs	r6, #0
 801ab3e:	4630      	mov	r0, r6
 801ab40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ab44:	4e2e      	ldr	r6, [pc, #184]	; (801ac00 <_malloc_r+0xe4>)
 801ab46:	f000 fef9 	bl	801b93c <__malloc_lock>
 801ab4a:	6833      	ldr	r3, [r6, #0]
 801ab4c:	461c      	mov	r4, r3
 801ab4e:	bb34      	cbnz	r4, 801ab9e <_malloc_r+0x82>
 801ab50:	4629      	mov	r1, r5
 801ab52:	4638      	mov	r0, r7
 801ab54:	f7ff ffc2 	bl	801aadc <sbrk_aligned>
 801ab58:	1c43      	adds	r3, r0, #1
 801ab5a:	4604      	mov	r4, r0
 801ab5c:	d14d      	bne.n	801abfa <_malloc_r+0xde>
 801ab5e:	6834      	ldr	r4, [r6, #0]
 801ab60:	4626      	mov	r6, r4
 801ab62:	2e00      	cmp	r6, #0
 801ab64:	d140      	bne.n	801abe8 <_malloc_r+0xcc>
 801ab66:	6823      	ldr	r3, [r4, #0]
 801ab68:	4631      	mov	r1, r6
 801ab6a:	4638      	mov	r0, r7
 801ab6c:	eb04 0803 	add.w	r8, r4, r3
 801ab70:	f000 fb4e 	bl	801b210 <_sbrk_r>
 801ab74:	4580      	cmp	r8, r0
 801ab76:	d13a      	bne.n	801abee <_malloc_r+0xd2>
 801ab78:	6821      	ldr	r1, [r4, #0]
 801ab7a:	3503      	adds	r5, #3
 801ab7c:	1a6d      	subs	r5, r5, r1
 801ab7e:	f025 0503 	bic.w	r5, r5, #3
 801ab82:	3508      	adds	r5, #8
 801ab84:	2d0c      	cmp	r5, #12
 801ab86:	bf38      	it	cc
 801ab88:	250c      	movcc	r5, #12
 801ab8a:	4629      	mov	r1, r5
 801ab8c:	4638      	mov	r0, r7
 801ab8e:	f7ff ffa5 	bl	801aadc <sbrk_aligned>
 801ab92:	3001      	adds	r0, #1
 801ab94:	d02b      	beq.n	801abee <_malloc_r+0xd2>
 801ab96:	6823      	ldr	r3, [r4, #0]
 801ab98:	442b      	add	r3, r5
 801ab9a:	6023      	str	r3, [r4, #0]
 801ab9c:	e00e      	b.n	801abbc <_malloc_r+0xa0>
 801ab9e:	6822      	ldr	r2, [r4, #0]
 801aba0:	1b52      	subs	r2, r2, r5
 801aba2:	d41e      	bmi.n	801abe2 <_malloc_r+0xc6>
 801aba4:	2a0b      	cmp	r2, #11
 801aba6:	d916      	bls.n	801abd6 <_malloc_r+0xba>
 801aba8:	1961      	adds	r1, r4, r5
 801abaa:	42a3      	cmp	r3, r4
 801abac:	6025      	str	r5, [r4, #0]
 801abae:	bf18      	it	ne
 801abb0:	6059      	strne	r1, [r3, #4]
 801abb2:	6863      	ldr	r3, [r4, #4]
 801abb4:	bf08      	it	eq
 801abb6:	6031      	streq	r1, [r6, #0]
 801abb8:	5162      	str	r2, [r4, r5]
 801abba:	604b      	str	r3, [r1, #4]
 801abbc:	4638      	mov	r0, r7
 801abbe:	f104 060b 	add.w	r6, r4, #11
 801abc2:	f000 fec1 	bl	801b948 <__malloc_unlock>
 801abc6:	f026 0607 	bic.w	r6, r6, #7
 801abca:	1d23      	adds	r3, r4, #4
 801abcc:	1af2      	subs	r2, r6, r3
 801abce:	d0b6      	beq.n	801ab3e <_malloc_r+0x22>
 801abd0:	1b9b      	subs	r3, r3, r6
 801abd2:	50a3      	str	r3, [r4, r2]
 801abd4:	e7b3      	b.n	801ab3e <_malloc_r+0x22>
 801abd6:	6862      	ldr	r2, [r4, #4]
 801abd8:	42a3      	cmp	r3, r4
 801abda:	bf0c      	ite	eq
 801abdc:	6032      	streq	r2, [r6, #0]
 801abde:	605a      	strne	r2, [r3, #4]
 801abe0:	e7ec      	b.n	801abbc <_malloc_r+0xa0>
 801abe2:	4623      	mov	r3, r4
 801abe4:	6864      	ldr	r4, [r4, #4]
 801abe6:	e7b2      	b.n	801ab4e <_malloc_r+0x32>
 801abe8:	4634      	mov	r4, r6
 801abea:	6876      	ldr	r6, [r6, #4]
 801abec:	e7b9      	b.n	801ab62 <_malloc_r+0x46>
 801abee:	230c      	movs	r3, #12
 801abf0:	603b      	str	r3, [r7, #0]
 801abf2:	4638      	mov	r0, r7
 801abf4:	f000 fea8 	bl	801b948 <__malloc_unlock>
 801abf8:	e7a1      	b.n	801ab3e <_malloc_r+0x22>
 801abfa:	6025      	str	r5, [r4, #0]
 801abfc:	e7de      	b.n	801abbc <_malloc_r+0xa0>
 801abfe:	bf00      	nop
 801ac00:	200015d4 	.word	0x200015d4

0801ac04 <__sfputc_r>:
 801ac04:	6893      	ldr	r3, [r2, #8]
 801ac06:	3b01      	subs	r3, #1
 801ac08:	2b00      	cmp	r3, #0
 801ac0a:	b410      	push	{r4}
 801ac0c:	6093      	str	r3, [r2, #8]
 801ac0e:	da08      	bge.n	801ac22 <__sfputc_r+0x1e>
 801ac10:	6994      	ldr	r4, [r2, #24]
 801ac12:	42a3      	cmp	r3, r4
 801ac14:	db01      	blt.n	801ac1a <__sfputc_r+0x16>
 801ac16:	290a      	cmp	r1, #10
 801ac18:	d103      	bne.n	801ac22 <__sfputc_r+0x1e>
 801ac1a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ac1e:	f000 bb4b 	b.w	801b2b8 <__swbuf_r>
 801ac22:	6813      	ldr	r3, [r2, #0]
 801ac24:	1c58      	adds	r0, r3, #1
 801ac26:	6010      	str	r0, [r2, #0]
 801ac28:	7019      	strb	r1, [r3, #0]
 801ac2a:	4608      	mov	r0, r1
 801ac2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ac30:	4770      	bx	lr

0801ac32 <__sfputs_r>:
 801ac32:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ac34:	4606      	mov	r6, r0
 801ac36:	460f      	mov	r7, r1
 801ac38:	4614      	mov	r4, r2
 801ac3a:	18d5      	adds	r5, r2, r3
 801ac3c:	42ac      	cmp	r4, r5
 801ac3e:	d101      	bne.n	801ac44 <__sfputs_r+0x12>
 801ac40:	2000      	movs	r0, #0
 801ac42:	e007      	b.n	801ac54 <__sfputs_r+0x22>
 801ac44:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ac48:	463a      	mov	r2, r7
 801ac4a:	4630      	mov	r0, r6
 801ac4c:	f7ff ffda 	bl	801ac04 <__sfputc_r>
 801ac50:	1c43      	adds	r3, r0, #1
 801ac52:	d1f3      	bne.n	801ac3c <__sfputs_r+0xa>
 801ac54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801ac58 <_vfiprintf_r>:
 801ac58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac5c:	460d      	mov	r5, r1
 801ac5e:	b09d      	sub	sp, #116	; 0x74
 801ac60:	4614      	mov	r4, r2
 801ac62:	4698      	mov	r8, r3
 801ac64:	4606      	mov	r6, r0
 801ac66:	b118      	cbz	r0, 801ac70 <_vfiprintf_r+0x18>
 801ac68:	6983      	ldr	r3, [r0, #24]
 801ac6a:	b90b      	cbnz	r3, 801ac70 <_vfiprintf_r+0x18>
 801ac6c:	f000 fd60 	bl	801b730 <__sinit>
 801ac70:	4b89      	ldr	r3, [pc, #548]	; (801ae98 <_vfiprintf_r+0x240>)
 801ac72:	429d      	cmp	r5, r3
 801ac74:	d11b      	bne.n	801acae <_vfiprintf_r+0x56>
 801ac76:	6875      	ldr	r5, [r6, #4]
 801ac78:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ac7a:	07d9      	lsls	r1, r3, #31
 801ac7c:	d405      	bmi.n	801ac8a <_vfiprintf_r+0x32>
 801ac7e:	89ab      	ldrh	r3, [r5, #12]
 801ac80:	059a      	lsls	r2, r3, #22
 801ac82:	d402      	bmi.n	801ac8a <_vfiprintf_r+0x32>
 801ac84:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ac86:	f000 fdf1 	bl	801b86c <__retarget_lock_acquire_recursive>
 801ac8a:	89ab      	ldrh	r3, [r5, #12]
 801ac8c:	071b      	lsls	r3, r3, #28
 801ac8e:	d501      	bpl.n	801ac94 <_vfiprintf_r+0x3c>
 801ac90:	692b      	ldr	r3, [r5, #16]
 801ac92:	b9eb      	cbnz	r3, 801acd0 <_vfiprintf_r+0x78>
 801ac94:	4629      	mov	r1, r5
 801ac96:	4630      	mov	r0, r6
 801ac98:	f000 fb60 	bl	801b35c <__swsetup_r>
 801ac9c:	b1c0      	cbz	r0, 801acd0 <_vfiprintf_r+0x78>
 801ac9e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801aca0:	07dc      	lsls	r4, r3, #31
 801aca2:	d50e      	bpl.n	801acc2 <_vfiprintf_r+0x6a>
 801aca4:	f04f 30ff 	mov.w	r0, #4294967295
 801aca8:	b01d      	add	sp, #116	; 0x74
 801acaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801acae:	4b7b      	ldr	r3, [pc, #492]	; (801ae9c <_vfiprintf_r+0x244>)
 801acb0:	429d      	cmp	r5, r3
 801acb2:	d101      	bne.n	801acb8 <_vfiprintf_r+0x60>
 801acb4:	68b5      	ldr	r5, [r6, #8]
 801acb6:	e7df      	b.n	801ac78 <_vfiprintf_r+0x20>
 801acb8:	4b79      	ldr	r3, [pc, #484]	; (801aea0 <_vfiprintf_r+0x248>)
 801acba:	429d      	cmp	r5, r3
 801acbc:	bf08      	it	eq
 801acbe:	68f5      	ldreq	r5, [r6, #12]
 801acc0:	e7da      	b.n	801ac78 <_vfiprintf_r+0x20>
 801acc2:	89ab      	ldrh	r3, [r5, #12]
 801acc4:	0598      	lsls	r0, r3, #22
 801acc6:	d4ed      	bmi.n	801aca4 <_vfiprintf_r+0x4c>
 801acc8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801acca:	f000 fdd1 	bl	801b870 <__retarget_lock_release_recursive>
 801acce:	e7e9      	b.n	801aca4 <_vfiprintf_r+0x4c>
 801acd0:	2300      	movs	r3, #0
 801acd2:	9309      	str	r3, [sp, #36]	; 0x24
 801acd4:	2320      	movs	r3, #32
 801acd6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801acda:	f8cd 800c 	str.w	r8, [sp, #12]
 801acde:	2330      	movs	r3, #48	; 0x30
 801ace0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801aea4 <_vfiprintf_r+0x24c>
 801ace4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801ace8:	f04f 0901 	mov.w	r9, #1
 801acec:	4623      	mov	r3, r4
 801acee:	469a      	mov	sl, r3
 801acf0:	f813 2b01 	ldrb.w	r2, [r3], #1
 801acf4:	b10a      	cbz	r2, 801acfa <_vfiprintf_r+0xa2>
 801acf6:	2a25      	cmp	r2, #37	; 0x25
 801acf8:	d1f9      	bne.n	801acee <_vfiprintf_r+0x96>
 801acfa:	ebba 0b04 	subs.w	fp, sl, r4
 801acfe:	d00b      	beq.n	801ad18 <_vfiprintf_r+0xc0>
 801ad00:	465b      	mov	r3, fp
 801ad02:	4622      	mov	r2, r4
 801ad04:	4629      	mov	r1, r5
 801ad06:	4630      	mov	r0, r6
 801ad08:	f7ff ff93 	bl	801ac32 <__sfputs_r>
 801ad0c:	3001      	adds	r0, #1
 801ad0e:	f000 80aa 	beq.w	801ae66 <_vfiprintf_r+0x20e>
 801ad12:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ad14:	445a      	add	r2, fp
 801ad16:	9209      	str	r2, [sp, #36]	; 0x24
 801ad18:	f89a 3000 	ldrb.w	r3, [sl]
 801ad1c:	2b00      	cmp	r3, #0
 801ad1e:	f000 80a2 	beq.w	801ae66 <_vfiprintf_r+0x20e>
 801ad22:	2300      	movs	r3, #0
 801ad24:	f04f 32ff 	mov.w	r2, #4294967295
 801ad28:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801ad2c:	f10a 0a01 	add.w	sl, sl, #1
 801ad30:	9304      	str	r3, [sp, #16]
 801ad32:	9307      	str	r3, [sp, #28]
 801ad34:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801ad38:	931a      	str	r3, [sp, #104]	; 0x68
 801ad3a:	4654      	mov	r4, sl
 801ad3c:	2205      	movs	r2, #5
 801ad3e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ad42:	4858      	ldr	r0, [pc, #352]	; (801aea4 <_vfiprintf_r+0x24c>)
 801ad44:	f7e5 fa54 	bl	80001f0 <memchr>
 801ad48:	9a04      	ldr	r2, [sp, #16]
 801ad4a:	b9d8      	cbnz	r0, 801ad84 <_vfiprintf_r+0x12c>
 801ad4c:	06d1      	lsls	r1, r2, #27
 801ad4e:	bf44      	itt	mi
 801ad50:	2320      	movmi	r3, #32
 801ad52:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801ad56:	0713      	lsls	r3, r2, #28
 801ad58:	bf44      	itt	mi
 801ad5a:	232b      	movmi	r3, #43	; 0x2b
 801ad5c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801ad60:	f89a 3000 	ldrb.w	r3, [sl]
 801ad64:	2b2a      	cmp	r3, #42	; 0x2a
 801ad66:	d015      	beq.n	801ad94 <_vfiprintf_r+0x13c>
 801ad68:	9a07      	ldr	r2, [sp, #28]
 801ad6a:	4654      	mov	r4, sl
 801ad6c:	2000      	movs	r0, #0
 801ad6e:	f04f 0c0a 	mov.w	ip, #10
 801ad72:	4621      	mov	r1, r4
 801ad74:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ad78:	3b30      	subs	r3, #48	; 0x30
 801ad7a:	2b09      	cmp	r3, #9
 801ad7c:	d94e      	bls.n	801ae1c <_vfiprintf_r+0x1c4>
 801ad7e:	b1b0      	cbz	r0, 801adae <_vfiprintf_r+0x156>
 801ad80:	9207      	str	r2, [sp, #28]
 801ad82:	e014      	b.n	801adae <_vfiprintf_r+0x156>
 801ad84:	eba0 0308 	sub.w	r3, r0, r8
 801ad88:	fa09 f303 	lsl.w	r3, r9, r3
 801ad8c:	4313      	orrs	r3, r2
 801ad8e:	9304      	str	r3, [sp, #16]
 801ad90:	46a2      	mov	sl, r4
 801ad92:	e7d2      	b.n	801ad3a <_vfiprintf_r+0xe2>
 801ad94:	9b03      	ldr	r3, [sp, #12]
 801ad96:	1d19      	adds	r1, r3, #4
 801ad98:	681b      	ldr	r3, [r3, #0]
 801ad9a:	9103      	str	r1, [sp, #12]
 801ad9c:	2b00      	cmp	r3, #0
 801ad9e:	bfbb      	ittet	lt
 801ada0:	425b      	neglt	r3, r3
 801ada2:	f042 0202 	orrlt.w	r2, r2, #2
 801ada6:	9307      	strge	r3, [sp, #28]
 801ada8:	9307      	strlt	r3, [sp, #28]
 801adaa:	bfb8      	it	lt
 801adac:	9204      	strlt	r2, [sp, #16]
 801adae:	7823      	ldrb	r3, [r4, #0]
 801adb0:	2b2e      	cmp	r3, #46	; 0x2e
 801adb2:	d10c      	bne.n	801adce <_vfiprintf_r+0x176>
 801adb4:	7863      	ldrb	r3, [r4, #1]
 801adb6:	2b2a      	cmp	r3, #42	; 0x2a
 801adb8:	d135      	bne.n	801ae26 <_vfiprintf_r+0x1ce>
 801adba:	9b03      	ldr	r3, [sp, #12]
 801adbc:	1d1a      	adds	r2, r3, #4
 801adbe:	681b      	ldr	r3, [r3, #0]
 801adc0:	9203      	str	r2, [sp, #12]
 801adc2:	2b00      	cmp	r3, #0
 801adc4:	bfb8      	it	lt
 801adc6:	f04f 33ff 	movlt.w	r3, #4294967295
 801adca:	3402      	adds	r4, #2
 801adcc:	9305      	str	r3, [sp, #20]
 801adce:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801aeb4 <_vfiprintf_r+0x25c>
 801add2:	7821      	ldrb	r1, [r4, #0]
 801add4:	2203      	movs	r2, #3
 801add6:	4650      	mov	r0, sl
 801add8:	f7e5 fa0a 	bl	80001f0 <memchr>
 801addc:	b140      	cbz	r0, 801adf0 <_vfiprintf_r+0x198>
 801adde:	2340      	movs	r3, #64	; 0x40
 801ade0:	eba0 000a 	sub.w	r0, r0, sl
 801ade4:	fa03 f000 	lsl.w	r0, r3, r0
 801ade8:	9b04      	ldr	r3, [sp, #16]
 801adea:	4303      	orrs	r3, r0
 801adec:	3401      	adds	r4, #1
 801adee:	9304      	str	r3, [sp, #16]
 801adf0:	f814 1b01 	ldrb.w	r1, [r4], #1
 801adf4:	482c      	ldr	r0, [pc, #176]	; (801aea8 <_vfiprintf_r+0x250>)
 801adf6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801adfa:	2206      	movs	r2, #6
 801adfc:	f7e5 f9f8 	bl	80001f0 <memchr>
 801ae00:	2800      	cmp	r0, #0
 801ae02:	d03f      	beq.n	801ae84 <_vfiprintf_r+0x22c>
 801ae04:	4b29      	ldr	r3, [pc, #164]	; (801aeac <_vfiprintf_r+0x254>)
 801ae06:	bb1b      	cbnz	r3, 801ae50 <_vfiprintf_r+0x1f8>
 801ae08:	9b03      	ldr	r3, [sp, #12]
 801ae0a:	3307      	adds	r3, #7
 801ae0c:	f023 0307 	bic.w	r3, r3, #7
 801ae10:	3308      	adds	r3, #8
 801ae12:	9303      	str	r3, [sp, #12]
 801ae14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae16:	443b      	add	r3, r7
 801ae18:	9309      	str	r3, [sp, #36]	; 0x24
 801ae1a:	e767      	b.n	801acec <_vfiprintf_r+0x94>
 801ae1c:	fb0c 3202 	mla	r2, ip, r2, r3
 801ae20:	460c      	mov	r4, r1
 801ae22:	2001      	movs	r0, #1
 801ae24:	e7a5      	b.n	801ad72 <_vfiprintf_r+0x11a>
 801ae26:	2300      	movs	r3, #0
 801ae28:	3401      	adds	r4, #1
 801ae2a:	9305      	str	r3, [sp, #20]
 801ae2c:	4619      	mov	r1, r3
 801ae2e:	f04f 0c0a 	mov.w	ip, #10
 801ae32:	4620      	mov	r0, r4
 801ae34:	f810 2b01 	ldrb.w	r2, [r0], #1
 801ae38:	3a30      	subs	r2, #48	; 0x30
 801ae3a:	2a09      	cmp	r2, #9
 801ae3c:	d903      	bls.n	801ae46 <_vfiprintf_r+0x1ee>
 801ae3e:	2b00      	cmp	r3, #0
 801ae40:	d0c5      	beq.n	801adce <_vfiprintf_r+0x176>
 801ae42:	9105      	str	r1, [sp, #20]
 801ae44:	e7c3      	b.n	801adce <_vfiprintf_r+0x176>
 801ae46:	fb0c 2101 	mla	r1, ip, r1, r2
 801ae4a:	4604      	mov	r4, r0
 801ae4c:	2301      	movs	r3, #1
 801ae4e:	e7f0      	b.n	801ae32 <_vfiprintf_r+0x1da>
 801ae50:	ab03      	add	r3, sp, #12
 801ae52:	9300      	str	r3, [sp, #0]
 801ae54:	462a      	mov	r2, r5
 801ae56:	4b16      	ldr	r3, [pc, #88]	; (801aeb0 <_vfiprintf_r+0x258>)
 801ae58:	a904      	add	r1, sp, #16
 801ae5a:	4630      	mov	r0, r6
 801ae5c:	f3af 8000 	nop.w
 801ae60:	4607      	mov	r7, r0
 801ae62:	1c78      	adds	r0, r7, #1
 801ae64:	d1d6      	bne.n	801ae14 <_vfiprintf_r+0x1bc>
 801ae66:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ae68:	07d9      	lsls	r1, r3, #31
 801ae6a:	d405      	bmi.n	801ae78 <_vfiprintf_r+0x220>
 801ae6c:	89ab      	ldrh	r3, [r5, #12]
 801ae6e:	059a      	lsls	r2, r3, #22
 801ae70:	d402      	bmi.n	801ae78 <_vfiprintf_r+0x220>
 801ae72:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ae74:	f000 fcfc 	bl	801b870 <__retarget_lock_release_recursive>
 801ae78:	89ab      	ldrh	r3, [r5, #12]
 801ae7a:	065b      	lsls	r3, r3, #25
 801ae7c:	f53f af12 	bmi.w	801aca4 <_vfiprintf_r+0x4c>
 801ae80:	9809      	ldr	r0, [sp, #36]	; 0x24
 801ae82:	e711      	b.n	801aca8 <_vfiprintf_r+0x50>
 801ae84:	ab03      	add	r3, sp, #12
 801ae86:	9300      	str	r3, [sp, #0]
 801ae88:	462a      	mov	r2, r5
 801ae8a:	4b09      	ldr	r3, [pc, #36]	; (801aeb0 <_vfiprintf_r+0x258>)
 801ae8c:	a904      	add	r1, sp, #16
 801ae8e:	4630      	mov	r0, r6
 801ae90:	f000 f880 	bl	801af94 <_printf_i>
 801ae94:	e7e4      	b.n	801ae60 <_vfiprintf_r+0x208>
 801ae96:	bf00      	nop
 801ae98:	0801ebc8 	.word	0x0801ebc8
 801ae9c:	0801ebe8 	.word	0x0801ebe8
 801aea0:	0801eba8 	.word	0x0801eba8
 801aea4:	0801eb70 	.word	0x0801eb70
 801aea8:	0801eb7a 	.word	0x0801eb7a
 801aeac:	00000000 	.word	0x00000000
 801aeb0:	0801ac33 	.word	0x0801ac33
 801aeb4:	0801eb76 	.word	0x0801eb76

0801aeb8 <_printf_common>:
 801aeb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aebc:	4616      	mov	r6, r2
 801aebe:	4699      	mov	r9, r3
 801aec0:	688a      	ldr	r2, [r1, #8]
 801aec2:	690b      	ldr	r3, [r1, #16]
 801aec4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801aec8:	4293      	cmp	r3, r2
 801aeca:	bfb8      	it	lt
 801aecc:	4613      	movlt	r3, r2
 801aece:	6033      	str	r3, [r6, #0]
 801aed0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801aed4:	4607      	mov	r7, r0
 801aed6:	460c      	mov	r4, r1
 801aed8:	b10a      	cbz	r2, 801aede <_printf_common+0x26>
 801aeda:	3301      	adds	r3, #1
 801aedc:	6033      	str	r3, [r6, #0]
 801aede:	6823      	ldr	r3, [r4, #0]
 801aee0:	0699      	lsls	r1, r3, #26
 801aee2:	bf42      	ittt	mi
 801aee4:	6833      	ldrmi	r3, [r6, #0]
 801aee6:	3302      	addmi	r3, #2
 801aee8:	6033      	strmi	r3, [r6, #0]
 801aeea:	6825      	ldr	r5, [r4, #0]
 801aeec:	f015 0506 	ands.w	r5, r5, #6
 801aef0:	d106      	bne.n	801af00 <_printf_common+0x48>
 801aef2:	f104 0a19 	add.w	sl, r4, #25
 801aef6:	68e3      	ldr	r3, [r4, #12]
 801aef8:	6832      	ldr	r2, [r6, #0]
 801aefa:	1a9b      	subs	r3, r3, r2
 801aefc:	42ab      	cmp	r3, r5
 801aefe:	dc26      	bgt.n	801af4e <_printf_common+0x96>
 801af00:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801af04:	1e13      	subs	r3, r2, #0
 801af06:	6822      	ldr	r2, [r4, #0]
 801af08:	bf18      	it	ne
 801af0a:	2301      	movne	r3, #1
 801af0c:	0692      	lsls	r2, r2, #26
 801af0e:	d42b      	bmi.n	801af68 <_printf_common+0xb0>
 801af10:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801af14:	4649      	mov	r1, r9
 801af16:	4638      	mov	r0, r7
 801af18:	47c0      	blx	r8
 801af1a:	3001      	adds	r0, #1
 801af1c:	d01e      	beq.n	801af5c <_printf_common+0xa4>
 801af1e:	6823      	ldr	r3, [r4, #0]
 801af20:	68e5      	ldr	r5, [r4, #12]
 801af22:	6832      	ldr	r2, [r6, #0]
 801af24:	f003 0306 	and.w	r3, r3, #6
 801af28:	2b04      	cmp	r3, #4
 801af2a:	bf08      	it	eq
 801af2c:	1aad      	subeq	r5, r5, r2
 801af2e:	68a3      	ldr	r3, [r4, #8]
 801af30:	6922      	ldr	r2, [r4, #16]
 801af32:	bf0c      	ite	eq
 801af34:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801af38:	2500      	movne	r5, #0
 801af3a:	4293      	cmp	r3, r2
 801af3c:	bfc4      	itt	gt
 801af3e:	1a9b      	subgt	r3, r3, r2
 801af40:	18ed      	addgt	r5, r5, r3
 801af42:	2600      	movs	r6, #0
 801af44:	341a      	adds	r4, #26
 801af46:	42b5      	cmp	r5, r6
 801af48:	d11a      	bne.n	801af80 <_printf_common+0xc8>
 801af4a:	2000      	movs	r0, #0
 801af4c:	e008      	b.n	801af60 <_printf_common+0xa8>
 801af4e:	2301      	movs	r3, #1
 801af50:	4652      	mov	r2, sl
 801af52:	4649      	mov	r1, r9
 801af54:	4638      	mov	r0, r7
 801af56:	47c0      	blx	r8
 801af58:	3001      	adds	r0, #1
 801af5a:	d103      	bne.n	801af64 <_printf_common+0xac>
 801af5c:	f04f 30ff 	mov.w	r0, #4294967295
 801af60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801af64:	3501      	adds	r5, #1
 801af66:	e7c6      	b.n	801aef6 <_printf_common+0x3e>
 801af68:	18e1      	adds	r1, r4, r3
 801af6a:	1c5a      	adds	r2, r3, #1
 801af6c:	2030      	movs	r0, #48	; 0x30
 801af6e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801af72:	4422      	add	r2, r4
 801af74:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801af78:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801af7c:	3302      	adds	r3, #2
 801af7e:	e7c7      	b.n	801af10 <_printf_common+0x58>
 801af80:	2301      	movs	r3, #1
 801af82:	4622      	mov	r2, r4
 801af84:	4649      	mov	r1, r9
 801af86:	4638      	mov	r0, r7
 801af88:	47c0      	blx	r8
 801af8a:	3001      	adds	r0, #1
 801af8c:	d0e6      	beq.n	801af5c <_printf_common+0xa4>
 801af8e:	3601      	adds	r6, #1
 801af90:	e7d9      	b.n	801af46 <_printf_common+0x8e>
	...

0801af94 <_printf_i>:
 801af94:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801af98:	7e0f      	ldrb	r7, [r1, #24]
 801af9a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801af9c:	2f78      	cmp	r7, #120	; 0x78
 801af9e:	4691      	mov	r9, r2
 801afa0:	4680      	mov	r8, r0
 801afa2:	460c      	mov	r4, r1
 801afa4:	469a      	mov	sl, r3
 801afa6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801afaa:	d807      	bhi.n	801afbc <_printf_i+0x28>
 801afac:	2f62      	cmp	r7, #98	; 0x62
 801afae:	d80a      	bhi.n	801afc6 <_printf_i+0x32>
 801afb0:	2f00      	cmp	r7, #0
 801afb2:	f000 80d8 	beq.w	801b166 <_printf_i+0x1d2>
 801afb6:	2f58      	cmp	r7, #88	; 0x58
 801afb8:	f000 80a3 	beq.w	801b102 <_printf_i+0x16e>
 801afbc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801afc0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801afc4:	e03a      	b.n	801b03c <_printf_i+0xa8>
 801afc6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801afca:	2b15      	cmp	r3, #21
 801afcc:	d8f6      	bhi.n	801afbc <_printf_i+0x28>
 801afce:	a101      	add	r1, pc, #4	; (adr r1, 801afd4 <_printf_i+0x40>)
 801afd0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801afd4:	0801b02d 	.word	0x0801b02d
 801afd8:	0801b041 	.word	0x0801b041
 801afdc:	0801afbd 	.word	0x0801afbd
 801afe0:	0801afbd 	.word	0x0801afbd
 801afe4:	0801afbd 	.word	0x0801afbd
 801afe8:	0801afbd 	.word	0x0801afbd
 801afec:	0801b041 	.word	0x0801b041
 801aff0:	0801afbd 	.word	0x0801afbd
 801aff4:	0801afbd 	.word	0x0801afbd
 801aff8:	0801afbd 	.word	0x0801afbd
 801affc:	0801afbd 	.word	0x0801afbd
 801b000:	0801b14d 	.word	0x0801b14d
 801b004:	0801b071 	.word	0x0801b071
 801b008:	0801b12f 	.word	0x0801b12f
 801b00c:	0801afbd 	.word	0x0801afbd
 801b010:	0801afbd 	.word	0x0801afbd
 801b014:	0801b16f 	.word	0x0801b16f
 801b018:	0801afbd 	.word	0x0801afbd
 801b01c:	0801b071 	.word	0x0801b071
 801b020:	0801afbd 	.word	0x0801afbd
 801b024:	0801afbd 	.word	0x0801afbd
 801b028:	0801b137 	.word	0x0801b137
 801b02c:	682b      	ldr	r3, [r5, #0]
 801b02e:	1d1a      	adds	r2, r3, #4
 801b030:	681b      	ldr	r3, [r3, #0]
 801b032:	602a      	str	r2, [r5, #0]
 801b034:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b038:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801b03c:	2301      	movs	r3, #1
 801b03e:	e0a3      	b.n	801b188 <_printf_i+0x1f4>
 801b040:	6820      	ldr	r0, [r4, #0]
 801b042:	6829      	ldr	r1, [r5, #0]
 801b044:	0606      	lsls	r6, r0, #24
 801b046:	f101 0304 	add.w	r3, r1, #4
 801b04a:	d50a      	bpl.n	801b062 <_printf_i+0xce>
 801b04c:	680e      	ldr	r6, [r1, #0]
 801b04e:	602b      	str	r3, [r5, #0]
 801b050:	2e00      	cmp	r6, #0
 801b052:	da03      	bge.n	801b05c <_printf_i+0xc8>
 801b054:	232d      	movs	r3, #45	; 0x2d
 801b056:	4276      	negs	r6, r6
 801b058:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801b05c:	485e      	ldr	r0, [pc, #376]	; (801b1d8 <_printf_i+0x244>)
 801b05e:	230a      	movs	r3, #10
 801b060:	e019      	b.n	801b096 <_printf_i+0x102>
 801b062:	680e      	ldr	r6, [r1, #0]
 801b064:	602b      	str	r3, [r5, #0]
 801b066:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b06a:	bf18      	it	ne
 801b06c:	b236      	sxthne	r6, r6
 801b06e:	e7ef      	b.n	801b050 <_printf_i+0xbc>
 801b070:	682b      	ldr	r3, [r5, #0]
 801b072:	6820      	ldr	r0, [r4, #0]
 801b074:	1d19      	adds	r1, r3, #4
 801b076:	6029      	str	r1, [r5, #0]
 801b078:	0601      	lsls	r1, r0, #24
 801b07a:	d501      	bpl.n	801b080 <_printf_i+0xec>
 801b07c:	681e      	ldr	r6, [r3, #0]
 801b07e:	e002      	b.n	801b086 <_printf_i+0xf2>
 801b080:	0646      	lsls	r6, r0, #25
 801b082:	d5fb      	bpl.n	801b07c <_printf_i+0xe8>
 801b084:	881e      	ldrh	r6, [r3, #0]
 801b086:	4854      	ldr	r0, [pc, #336]	; (801b1d8 <_printf_i+0x244>)
 801b088:	2f6f      	cmp	r7, #111	; 0x6f
 801b08a:	bf0c      	ite	eq
 801b08c:	2308      	moveq	r3, #8
 801b08e:	230a      	movne	r3, #10
 801b090:	2100      	movs	r1, #0
 801b092:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801b096:	6865      	ldr	r5, [r4, #4]
 801b098:	60a5      	str	r5, [r4, #8]
 801b09a:	2d00      	cmp	r5, #0
 801b09c:	bfa2      	ittt	ge
 801b09e:	6821      	ldrge	r1, [r4, #0]
 801b0a0:	f021 0104 	bicge.w	r1, r1, #4
 801b0a4:	6021      	strge	r1, [r4, #0]
 801b0a6:	b90e      	cbnz	r6, 801b0ac <_printf_i+0x118>
 801b0a8:	2d00      	cmp	r5, #0
 801b0aa:	d04d      	beq.n	801b148 <_printf_i+0x1b4>
 801b0ac:	4615      	mov	r5, r2
 801b0ae:	fbb6 f1f3 	udiv	r1, r6, r3
 801b0b2:	fb03 6711 	mls	r7, r3, r1, r6
 801b0b6:	5dc7      	ldrb	r7, [r0, r7]
 801b0b8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801b0bc:	4637      	mov	r7, r6
 801b0be:	42bb      	cmp	r3, r7
 801b0c0:	460e      	mov	r6, r1
 801b0c2:	d9f4      	bls.n	801b0ae <_printf_i+0x11a>
 801b0c4:	2b08      	cmp	r3, #8
 801b0c6:	d10b      	bne.n	801b0e0 <_printf_i+0x14c>
 801b0c8:	6823      	ldr	r3, [r4, #0]
 801b0ca:	07de      	lsls	r6, r3, #31
 801b0cc:	d508      	bpl.n	801b0e0 <_printf_i+0x14c>
 801b0ce:	6923      	ldr	r3, [r4, #16]
 801b0d0:	6861      	ldr	r1, [r4, #4]
 801b0d2:	4299      	cmp	r1, r3
 801b0d4:	bfde      	ittt	le
 801b0d6:	2330      	movle	r3, #48	; 0x30
 801b0d8:	f805 3c01 	strble.w	r3, [r5, #-1]
 801b0dc:	f105 35ff 	addle.w	r5, r5, #4294967295
 801b0e0:	1b52      	subs	r2, r2, r5
 801b0e2:	6122      	str	r2, [r4, #16]
 801b0e4:	f8cd a000 	str.w	sl, [sp]
 801b0e8:	464b      	mov	r3, r9
 801b0ea:	aa03      	add	r2, sp, #12
 801b0ec:	4621      	mov	r1, r4
 801b0ee:	4640      	mov	r0, r8
 801b0f0:	f7ff fee2 	bl	801aeb8 <_printf_common>
 801b0f4:	3001      	adds	r0, #1
 801b0f6:	d14c      	bne.n	801b192 <_printf_i+0x1fe>
 801b0f8:	f04f 30ff 	mov.w	r0, #4294967295
 801b0fc:	b004      	add	sp, #16
 801b0fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b102:	4835      	ldr	r0, [pc, #212]	; (801b1d8 <_printf_i+0x244>)
 801b104:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801b108:	6829      	ldr	r1, [r5, #0]
 801b10a:	6823      	ldr	r3, [r4, #0]
 801b10c:	f851 6b04 	ldr.w	r6, [r1], #4
 801b110:	6029      	str	r1, [r5, #0]
 801b112:	061d      	lsls	r5, r3, #24
 801b114:	d514      	bpl.n	801b140 <_printf_i+0x1ac>
 801b116:	07df      	lsls	r7, r3, #31
 801b118:	bf44      	itt	mi
 801b11a:	f043 0320 	orrmi.w	r3, r3, #32
 801b11e:	6023      	strmi	r3, [r4, #0]
 801b120:	b91e      	cbnz	r6, 801b12a <_printf_i+0x196>
 801b122:	6823      	ldr	r3, [r4, #0]
 801b124:	f023 0320 	bic.w	r3, r3, #32
 801b128:	6023      	str	r3, [r4, #0]
 801b12a:	2310      	movs	r3, #16
 801b12c:	e7b0      	b.n	801b090 <_printf_i+0xfc>
 801b12e:	6823      	ldr	r3, [r4, #0]
 801b130:	f043 0320 	orr.w	r3, r3, #32
 801b134:	6023      	str	r3, [r4, #0]
 801b136:	2378      	movs	r3, #120	; 0x78
 801b138:	4828      	ldr	r0, [pc, #160]	; (801b1dc <_printf_i+0x248>)
 801b13a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801b13e:	e7e3      	b.n	801b108 <_printf_i+0x174>
 801b140:	0659      	lsls	r1, r3, #25
 801b142:	bf48      	it	mi
 801b144:	b2b6      	uxthmi	r6, r6
 801b146:	e7e6      	b.n	801b116 <_printf_i+0x182>
 801b148:	4615      	mov	r5, r2
 801b14a:	e7bb      	b.n	801b0c4 <_printf_i+0x130>
 801b14c:	682b      	ldr	r3, [r5, #0]
 801b14e:	6826      	ldr	r6, [r4, #0]
 801b150:	6961      	ldr	r1, [r4, #20]
 801b152:	1d18      	adds	r0, r3, #4
 801b154:	6028      	str	r0, [r5, #0]
 801b156:	0635      	lsls	r5, r6, #24
 801b158:	681b      	ldr	r3, [r3, #0]
 801b15a:	d501      	bpl.n	801b160 <_printf_i+0x1cc>
 801b15c:	6019      	str	r1, [r3, #0]
 801b15e:	e002      	b.n	801b166 <_printf_i+0x1d2>
 801b160:	0670      	lsls	r0, r6, #25
 801b162:	d5fb      	bpl.n	801b15c <_printf_i+0x1c8>
 801b164:	8019      	strh	r1, [r3, #0]
 801b166:	2300      	movs	r3, #0
 801b168:	6123      	str	r3, [r4, #16]
 801b16a:	4615      	mov	r5, r2
 801b16c:	e7ba      	b.n	801b0e4 <_printf_i+0x150>
 801b16e:	682b      	ldr	r3, [r5, #0]
 801b170:	1d1a      	adds	r2, r3, #4
 801b172:	602a      	str	r2, [r5, #0]
 801b174:	681d      	ldr	r5, [r3, #0]
 801b176:	6862      	ldr	r2, [r4, #4]
 801b178:	2100      	movs	r1, #0
 801b17a:	4628      	mov	r0, r5
 801b17c:	f7e5 f838 	bl	80001f0 <memchr>
 801b180:	b108      	cbz	r0, 801b186 <_printf_i+0x1f2>
 801b182:	1b40      	subs	r0, r0, r5
 801b184:	6060      	str	r0, [r4, #4]
 801b186:	6863      	ldr	r3, [r4, #4]
 801b188:	6123      	str	r3, [r4, #16]
 801b18a:	2300      	movs	r3, #0
 801b18c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801b190:	e7a8      	b.n	801b0e4 <_printf_i+0x150>
 801b192:	6923      	ldr	r3, [r4, #16]
 801b194:	462a      	mov	r2, r5
 801b196:	4649      	mov	r1, r9
 801b198:	4640      	mov	r0, r8
 801b19a:	47d0      	blx	sl
 801b19c:	3001      	adds	r0, #1
 801b19e:	d0ab      	beq.n	801b0f8 <_printf_i+0x164>
 801b1a0:	6823      	ldr	r3, [r4, #0]
 801b1a2:	079b      	lsls	r3, r3, #30
 801b1a4:	d413      	bmi.n	801b1ce <_printf_i+0x23a>
 801b1a6:	68e0      	ldr	r0, [r4, #12]
 801b1a8:	9b03      	ldr	r3, [sp, #12]
 801b1aa:	4298      	cmp	r0, r3
 801b1ac:	bfb8      	it	lt
 801b1ae:	4618      	movlt	r0, r3
 801b1b0:	e7a4      	b.n	801b0fc <_printf_i+0x168>
 801b1b2:	2301      	movs	r3, #1
 801b1b4:	4632      	mov	r2, r6
 801b1b6:	4649      	mov	r1, r9
 801b1b8:	4640      	mov	r0, r8
 801b1ba:	47d0      	blx	sl
 801b1bc:	3001      	adds	r0, #1
 801b1be:	d09b      	beq.n	801b0f8 <_printf_i+0x164>
 801b1c0:	3501      	adds	r5, #1
 801b1c2:	68e3      	ldr	r3, [r4, #12]
 801b1c4:	9903      	ldr	r1, [sp, #12]
 801b1c6:	1a5b      	subs	r3, r3, r1
 801b1c8:	42ab      	cmp	r3, r5
 801b1ca:	dcf2      	bgt.n	801b1b2 <_printf_i+0x21e>
 801b1cc:	e7eb      	b.n	801b1a6 <_printf_i+0x212>
 801b1ce:	2500      	movs	r5, #0
 801b1d0:	f104 0619 	add.w	r6, r4, #25
 801b1d4:	e7f5      	b.n	801b1c2 <_printf_i+0x22e>
 801b1d6:	bf00      	nop
 801b1d8:	0801eb81 	.word	0x0801eb81
 801b1dc:	0801eb92 	.word	0x0801eb92

0801b1e0 <iprintf>:
 801b1e0:	b40f      	push	{r0, r1, r2, r3}
 801b1e2:	4b0a      	ldr	r3, [pc, #40]	; (801b20c <iprintf+0x2c>)
 801b1e4:	b513      	push	{r0, r1, r4, lr}
 801b1e6:	681c      	ldr	r4, [r3, #0]
 801b1e8:	b124      	cbz	r4, 801b1f4 <iprintf+0x14>
 801b1ea:	69a3      	ldr	r3, [r4, #24]
 801b1ec:	b913      	cbnz	r3, 801b1f4 <iprintf+0x14>
 801b1ee:	4620      	mov	r0, r4
 801b1f0:	f000 fa9e 	bl	801b730 <__sinit>
 801b1f4:	ab05      	add	r3, sp, #20
 801b1f6:	9a04      	ldr	r2, [sp, #16]
 801b1f8:	68a1      	ldr	r1, [r4, #8]
 801b1fa:	9301      	str	r3, [sp, #4]
 801b1fc:	4620      	mov	r0, r4
 801b1fe:	f7ff fd2b 	bl	801ac58 <_vfiprintf_r>
 801b202:	b002      	add	sp, #8
 801b204:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b208:	b004      	add	sp, #16
 801b20a:	4770      	bx	lr
 801b20c:	2000009c 	.word	0x2000009c

0801b210 <_sbrk_r>:
 801b210:	b538      	push	{r3, r4, r5, lr}
 801b212:	4d06      	ldr	r5, [pc, #24]	; (801b22c <_sbrk_r+0x1c>)
 801b214:	2300      	movs	r3, #0
 801b216:	4604      	mov	r4, r0
 801b218:	4608      	mov	r0, r1
 801b21a:	602b      	str	r3, [r5, #0]
 801b21c:	f7e6 feda 	bl	8001fd4 <_sbrk>
 801b220:	1c43      	adds	r3, r0, #1
 801b222:	d102      	bne.n	801b22a <_sbrk_r+0x1a>
 801b224:	682b      	ldr	r3, [r5, #0]
 801b226:	b103      	cbz	r3, 801b22a <_sbrk_r+0x1a>
 801b228:	6023      	str	r3, [r4, #0]
 801b22a:	bd38      	pop	{r3, r4, r5, pc}
 801b22c:	20001778 	.word	0x20001778

0801b230 <_raise_r>:
 801b230:	291f      	cmp	r1, #31
 801b232:	b538      	push	{r3, r4, r5, lr}
 801b234:	4604      	mov	r4, r0
 801b236:	460d      	mov	r5, r1
 801b238:	d904      	bls.n	801b244 <_raise_r+0x14>
 801b23a:	2316      	movs	r3, #22
 801b23c:	6003      	str	r3, [r0, #0]
 801b23e:	f04f 30ff 	mov.w	r0, #4294967295
 801b242:	bd38      	pop	{r3, r4, r5, pc}
 801b244:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801b246:	b112      	cbz	r2, 801b24e <_raise_r+0x1e>
 801b248:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801b24c:	b94b      	cbnz	r3, 801b262 <_raise_r+0x32>
 801b24e:	4620      	mov	r0, r4
 801b250:	f000 f830 	bl	801b2b4 <_getpid_r>
 801b254:	462a      	mov	r2, r5
 801b256:	4601      	mov	r1, r0
 801b258:	4620      	mov	r0, r4
 801b25a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b25e:	f000 b817 	b.w	801b290 <_kill_r>
 801b262:	2b01      	cmp	r3, #1
 801b264:	d00a      	beq.n	801b27c <_raise_r+0x4c>
 801b266:	1c59      	adds	r1, r3, #1
 801b268:	d103      	bne.n	801b272 <_raise_r+0x42>
 801b26a:	2316      	movs	r3, #22
 801b26c:	6003      	str	r3, [r0, #0]
 801b26e:	2001      	movs	r0, #1
 801b270:	e7e7      	b.n	801b242 <_raise_r+0x12>
 801b272:	2400      	movs	r4, #0
 801b274:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801b278:	4628      	mov	r0, r5
 801b27a:	4798      	blx	r3
 801b27c:	2000      	movs	r0, #0
 801b27e:	e7e0      	b.n	801b242 <_raise_r+0x12>

0801b280 <raise>:
 801b280:	4b02      	ldr	r3, [pc, #8]	; (801b28c <raise+0xc>)
 801b282:	4601      	mov	r1, r0
 801b284:	6818      	ldr	r0, [r3, #0]
 801b286:	f7ff bfd3 	b.w	801b230 <_raise_r>
 801b28a:	bf00      	nop
 801b28c:	2000009c 	.word	0x2000009c

0801b290 <_kill_r>:
 801b290:	b538      	push	{r3, r4, r5, lr}
 801b292:	4d07      	ldr	r5, [pc, #28]	; (801b2b0 <_kill_r+0x20>)
 801b294:	2300      	movs	r3, #0
 801b296:	4604      	mov	r4, r0
 801b298:	4608      	mov	r0, r1
 801b29a:	4611      	mov	r1, r2
 801b29c:	602b      	str	r3, [r5, #0]
 801b29e:	f7e6 fe11 	bl	8001ec4 <_kill>
 801b2a2:	1c43      	adds	r3, r0, #1
 801b2a4:	d102      	bne.n	801b2ac <_kill_r+0x1c>
 801b2a6:	682b      	ldr	r3, [r5, #0]
 801b2a8:	b103      	cbz	r3, 801b2ac <_kill_r+0x1c>
 801b2aa:	6023      	str	r3, [r4, #0]
 801b2ac:	bd38      	pop	{r3, r4, r5, pc}
 801b2ae:	bf00      	nop
 801b2b0:	20001778 	.word	0x20001778

0801b2b4 <_getpid_r>:
 801b2b4:	f7e6 bdfe 	b.w	8001eb4 <_getpid>

0801b2b8 <__swbuf_r>:
 801b2b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b2ba:	460e      	mov	r6, r1
 801b2bc:	4614      	mov	r4, r2
 801b2be:	4605      	mov	r5, r0
 801b2c0:	b118      	cbz	r0, 801b2ca <__swbuf_r+0x12>
 801b2c2:	6983      	ldr	r3, [r0, #24]
 801b2c4:	b90b      	cbnz	r3, 801b2ca <__swbuf_r+0x12>
 801b2c6:	f000 fa33 	bl	801b730 <__sinit>
 801b2ca:	4b21      	ldr	r3, [pc, #132]	; (801b350 <__swbuf_r+0x98>)
 801b2cc:	429c      	cmp	r4, r3
 801b2ce:	d12b      	bne.n	801b328 <__swbuf_r+0x70>
 801b2d0:	686c      	ldr	r4, [r5, #4]
 801b2d2:	69a3      	ldr	r3, [r4, #24]
 801b2d4:	60a3      	str	r3, [r4, #8]
 801b2d6:	89a3      	ldrh	r3, [r4, #12]
 801b2d8:	071a      	lsls	r2, r3, #28
 801b2da:	d52f      	bpl.n	801b33c <__swbuf_r+0x84>
 801b2dc:	6923      	ldr	r3, [r4, #16]
 801b2de:	b36b      	cbz	r3, 801b33c <__swbuf_r+0x84>
 801b2e0:	6923      	ldr	r3, [r4, #16]
 801b2e2:	6820      	ldr	r0, [r4, #0]
 801b2e4:	1ac0      	subs	r0, r0, r3
 801b2e6:	6963      	ldr	r3, [r4, #20]
 801b2e8:	b2f6      	uxtb	r6, r6
 801b2ea:	4283      	cmp	r3, r0
 801b2ec:	4637      	mov	r7, r6
 801b2ee:	dc04      	bgt.n	801b2fa <__swbuf_r+0x42>
 801b2f0:	4621      	mov	r1, r4
 801b2f2:	4628      	mov	r0, r5
 801b2f4:	f000 f988 	bl	801b608 <_fflush_r>
 801b2f8:	bb30      	cbnz	r0, 801b348 <__swbuf_r+0x90>
 801b2fa:	68a3      	ldr	r3, [r4, #8]
 801b2fc:	3b01      	subs	r3, #1
 801b2fe:	60a3      	str	r3, [r4, #8]
 801b300:	6823      	ldr	r3, [r4, #0]
 801b302:	1c5a      	adds	r2, r3, #1
 801b304:	6022      	str	r2, [r4, #0]
 801b306:	701e      	strb	r6, [r3, #0]
 801b308:	6963      	ldr	r3, [r4, #20]
 801b30a:	3001      	adds	r0, #1
 801b30c:	4283      	cmp	r3, r0
 801b30e:	d004      	beq.n	801b31a <__swbuf_r+0x62>
 801b310:	89a3      	ldrh	r3, [r4, #12]
 801b312:	07db      	lsls	r3, r3, #31
 801b314:	d506      	bpl.n	801b324 <__swbuf_r+0x6c>
 801b316:	2e0a      	cmp	r6, #10
 801b318:	d104      	bne.n	801b324 <__swbuf_r+0x6c>
 801b31a:	4621      	mov	r1, r4
 801b31c:	4628      	mov	r0, r5
 801b31e:	f000 f973 	bl	801b608 <_fflush_r>
 801b322:	b988      	cbnz	r0, 801b348 <__swbuf_r+0x90>
 801b324:	4638      	mov	r0, r7
 801b326:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b328:	4b0a      	ldr	r3, [pc, #40]	; (801b354 <__swbuf_r+0x9c>)
 801b32a:	429c      	cmp	r4, r3
 801b32c:	d101      	bne.n	801b332 <__swbuf_r+0x7a>
 801b32e:	68ac      	ldr	r4, [r5, #8]
 801b330:	e7cf      	b.n	801b2d2 <__swbuf_r+0x1a>
 801b332:	4b09      	ldr	r3, [pc, #36]	; (801b358 <__swbuf_r+0xa0>)
 801b334:	429c      	cmp	r4, r3
 801b336:	bf08      	it	eq
 801b338:	68ec      	ldreq	r4, [r5, #12]
 801b33a:	e7ca      	b.n	801b2d2 <__swbuf_r+0x1a>
 801b33c:	4621      	mov	r1, r4
 801b33e:	4628      	mov	r0, r5
 801b340:	f000 f80c 	bl	801b35c <__swsetup_r>
 801b344:	2800      	cmp	r0, #0
 801b346:	d0cb      	beq.n	801b2e0 <__swbuf_r+0x28>
 801b348:	f04f 37ff 	mov.w	r7, #4294967295
 801b34c:	e7ea      	b.n	801b324 <__swbuf_r+0x6c>
 801b34e:	bf00      	nop
 801b350:	0801ebc8 	.word	0x0801ebc8
 801b354:	0801ebe8 	.word	0x0801ebe8
 801b358:	0801eba8 	.word	0x0801eba8

0801b35c <__swsetup_r>:
 801b35c:	4b32      	ldr	r3, [pc, #200]	; (801b428 <__swsetup_r+0xcc>)
 801b35e:	b570      	push	{r4, r5, r6, lr}
 801b360:	681d      	ldr	r5, [r3, #0]
 801b362:	4606      	mov	r6, r0
 801b364:	460c      	mov	r4, r1
 801b366:	b125      	cbz	r5, 801b372 <__swsetup_r+0x16>
 801b368:	69ab      	ldr	r3, [r5, #24]
 801b36a:	b913      	cbnz	r3, 801b372 <__swsetup_r+0x16>
 801b36c:	4628      	mov	r0, r5
 801b36e:	f000 f9df 	bl	801b730 <__sinit>
 801b372:	4b2e      	ldr	r3, [pc, #184]	; (801b42c <__swsetup_r+0xd0>)
 801b374:	429c      	cmp	r4, r3
 801b376:	d10f      	bne.n	801b398 <__swsetup_r+0x3c>
 801b378:	686c      	ldr	r4, [r5, #4]
 801b37a:	89a3      	ldrh	r3, [r4, #12]
 801b37c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b380:	0719      	lsls	r1, r3, #28
 801b382:	d42c      	bmi.n	801b3de <__swsetup_r+0x82>
 801b384:	06dd      	lsls	r5, r3, #27
 801b386:	d411      	bmi.n	801b3ac <__swsetup_r+0x50>
 801b388:	2309      	movs	r3, #9
 801b38a:	6033      	str	r3, [r6, #0]
 801b38c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801b390:	81a3      	strh	r3, [r4, #12]
 801b392:	f04f 30ff 	mov.w	r0, #4294967295
 801b396:	e03e      	b.n	801b416 <__swsetup_r+0xba>
 801b398:	4b25      	ldr	r3, [pc, #148]	; (801b430 <__swsetup_r+0xd4>)
 801b39a:	429c      	cmp	r4, r3
 801b39c:	d101      	bne.n	801b3a2 <__swsetup_r+0x46>
 801b39e:	68ac      	ldr	r4, [r5, #8]
 801b3a0:	e7eb      	b.n	801b37a <__swsetup_r+0x1e>
 801b3a2:	4b24      	ldr	r3, [pc, #144]	; (801b434 <__swsetup_r+0xd8>)
 801b3a4:	429c      	cmp	r4, r3
 801b3a6:	bf08      	it	eq
 801b3a8:	68ec      	ldreq	r4, [r5, #12]
 801b3aa:	e7e6      	b.n	801b37a <__swsetup_r+0x1e>
 801b3ac:	0758      	lsls	r0, r3, #29
 801b3ae:	d512      	bpl.n	801b3d6 <__swsetup_r+0x7a>
 801b3b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b3b2:	b141      	cbz	r1, 801b3c6 <__swsetup_r+0x6a>
 801b3b4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b3b8:	4299      	cmp	r1, r3
 801b3ba:	d002      	beq.n	801b3c2 <__swsetup_r+0x66>
 801b3bc:	4630      	mov	r0, r6
 801b3be:	f7ff fb41 	bl	801aa44 <_free_r>
 801b3c2:	2300      	movs	r3, #0
 801b3c4:	6363      	str	r3, [r4, #52]	; 0x34
 801b3c6:	89a3      	ldrh	r3, [r4, #12]
 801b3c8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801b3cc:	81a3      	strh	r3, [r4, #12]
 801b3ce:	2300      	movs	r3, #0
 801b3d0:	6063      	str	r3, [r4, #4]
 801b3d2:	6923      	ldr	r3, [r4, #16]
 801b3d4:	6023      	str	r3, [r4, #0]
 801b3d6:	89a3      	ldrh	r3, [r4, #12]
 801b3d8:	f043 0308 	orr.w	r3, r3, #8
 801b3dc:	81a3      	strh	r3, [r4, #12]
 801b3de:	6923      	ldr	r3, [r4, #16]
 801b3e0:	b94b      	cbnz	r3, 801b3f6 <__swsetup_r+0x9a>
 801b3e2:	89a3      	ldrh	r3, [r4, #12]
 801b3e4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801b3e8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801b3ec:	d003      	beq.n	801b3f6 <__swsetup_r+0x9a>
 801b3ee:	4621      	mov	r1, r4
 801b3f0:	4630      	mov	r0, r6
 801b3f2:	f000 fa63 	bl	801b8bc <__smakebuf_r>
 801b3f6:	89a0      	ldrh	r0, [r4, #12]
 801b3f8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b3fc:	f010 0301 	ands.w	r3, r0, #1
 801b400:	d00a      	beq.n	801b418 <__swsetup_r+0xbc>
 801b402:	2300      	movs	r3, #0
 801b404:	60a3      	str	r3, [r4, #8]
 801b406:	6963      	ldr	r3, [r4, #20]
 801b408:	425b      	negs	r3, r3
 801b40a:	61a3      	str	r3, [r4, #24]
 801b40c:	6923      	ldr	r3, [r4, #16]
 801b40e:	b943      	cbnz	r3, 801b422 <__swsetup_r+0xc6>
 801b410:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801b414:	d1ba      	bne.n	801b38c <__swsetup_r+0x30>
 801b416:	bd70      	pop	{r4, r5, r6, pc}
 801b418:	0781      	lsls	r1, r0, #30
 801b41a:	bf58      	it	pl
 801b41c:	6963      	ldrpl	r3, [r4, #20]
 801b41e:	60a3      	str	r3, [r4, #8]
 801b420:	e7f4      	b.n	801b40c <__swsetup_r+0xb0>
 801b422:	2000      	movs	r0, #0
 801b424:	e7f7      	b.n	801b416 <__swsetup_r+0xba>
 801b426:	bf00      	nop
 801b428:	2000009c 	.word	0x2000009c
 801b42c:	0801ebc8 	.word	0x0801ebc8
 801b430:	0801ebe8 	.word	0x0801ebe8
 801b434:	0801eba8 	.word	0x0801eba8

0801b438 <__register_exitproc>:
 801b438:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b43c:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801b4f8 <__register_exitproc+0xc0>
 801b440:	4606      	mov	r6, r0
 801b442:	f8d8 0000 	ldr.w	r0, [r8]
 801b446:	461f      	mov	r7, r3
 801b448:	460d      	mov	r5, r1
 801b44a:	4691      	mov	r9, r2
 801b44c:	f000 fa0e 	bl	801b86c <__retarget_lock_acquire_recursive>
 801b450:	4b25      	ldr	r3, [pc, #148]	; (801b4e8 <__register_exitproc+0xb0>)
 801b452:	681c      	ldr	r4, [r3, #0]
 801b454:	b934      	cbnz	r4, 801b464 <__register_exitproc+0x2c>
 801b456:	4c25      	ldr	r4, [pc, #148]	; (801b4ec <__register_exitproc+0xb4>)
 801b458:	601c      	str	r4, [r3, #0]
 801b45a:	4b25      	ldr	r3, [pc, #148]	; (801b4f0 <__register_exitproc+0xb8>)
 801b45c:	b113      	cbz	r3, 801b464 <__register_exitproc+0x2c>
 801b45e:	681b      	ldr	r3, [r3, #0]
 801b460:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801b464:	6863      	ldr	r3, [r4, #4]
 801b466:	2b1f      	cmp	r3, #31
 801b468:	dd07      	ble.n	801b47a <__register_exitproc+0x42>
 801b46a:	f8d8 0000 	ldr.w	r0, [r8]
 801b46e:	f000 f9ff 	bl	801b870 <__retarget_lock_release_recursive>
 801b472:	f04f 30ff 	mov.w	r0, #4294967295
 801b476:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b47a:	b34e      	cbz	r6, 801b4d0 <__register_exitproc+0x98>
 801b47c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801b480:	b988      	cbnz	r0, 801b4a6 <__register_exitproc+0x6e>
 801b482:	4b1c      	ldr	r3, [pc, #112]	; (801b4f4 <__register_exitproc+0xbc>)
 801b484:	b923      	cbnz	r3, 801b490 <__register_exitproc+0x58>
 801b486:	f8d8 0000 	ldr.w	r0, [r8]
 801b48a:	f000 f9f0 	bl	801b86e <__retarget_lock_release>
 801b48e:	e7f0      	b.n	801b472 <__register_exitproc+0x3a>
 801b490:	f44f 7084 	mov.w	r0, #264	; 0x108
 801b494:	f7ff fab0 	bl	801a9f8 <malloc>
 801b498:	2800      	cmp	r0, #0
 801b49a:	d0f4      	beq.n	801b486 <__register_exitproc+0x4e>
 801b49c:	2300      	movs	r3, #0
 801b49e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801b4a2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801b4a6:	6863      	ldr	r3, [r4, #4]
 801b4a8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801b4ac:	2201      	movs	r2, #1
 801b4ae:	409a      	lsls	r2, r3
 801b4b0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801b4b4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801b4b8:	4313      	orrs	r3, r2
 801b4ba:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801b4be:	2e02      	cmp	r6, #2
 801b4c0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801b4c4:	bf02      	ittt	eq
 801b4c6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801b4ca:	4313      	orreq	r3, r2
 801b4cc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801b4d0:	6863      	ldr	r3, [r4, #4]
 801b4d2:	f8d8 0000 	ldr.w	r0, [r8]
 801b4d6:	1c5a      	adds	r2, r3, #1
 801b4d8:	3302      	adds	r3, #2
 801b4da:	6062      	str	r2, [r4, #4]
 801b4dc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801b4e0:	f000 f9c6 	bl	801b870 <__retarget_lock_release_recursive>
 801b4e4:	2000      	movs	r0, #0
 801b4e6:	e7c6      	b.n	801b476 <__register_exitproc+0x3e>
 801b4e8:	20001770 	.word	0x20001770
 801b4ec:	200016e4 	.word	0x200016e4
 801b4f0:	0801eba4 	.word	0x0801eba4
 801b4f4:	0801a9f9 	.word	0x0801a9f9
 801b4f8:	20000100 	.word	0x20000100

0801b4fc <__sflush_r>:
 801b4fc:	898a      	ldrh	r2, [r1, #12]
 801b4fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b502:	4605      	mov	r5, r0
 801b504:	0710      	lsls	r0, r2, #28
 801b506:	460c      	mov	r4, r1
 801b508:	d458      	bmi.n	801b5bc <__sflush_r+0xc0>
 801b50a:	684b      	ldr	r3, [r1, #4]
 801b50c:	2b00      	cmp	r3, #0
 801b50e:	dc05      	bgt.n	801b51c <__sflush_r+0x20>
 801b510:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801b512:	2b00      	cmp	r3, #0
 801b514:	dc02      	bgt.n	801b51c <__sflush_r+0x20>
 801b516:	2000      	movs	r0, #0
 801b518:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b51c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b51e:	2e00      	cmp	r6, #0
 801b520:	d0f9      	beq.n	801b516 <__sflush_r+0x1a>
 801b522:	2300      	movs	r3, #0
 801b524:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801b528:	682f      	ldr	r7, [r5, #0]
 801b52a:	602b      	str	r3, [r5, #0]
 801b52c:	d032      	beq.n	801b594 <__sflush_r+0x98>
 801b52e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801b530:	89a3      	ldrh	r3, [r4, #12]
 801b532:	075a      	lsls	r2, r3, #29
 801b534:	d505      	bpl.n	801b542 <__sflush_r+0x46>
 801b536:	6863      	ldr	r3, [r4, #4]
 801b538:	1ac0      	subs	r0, r0, r3
 801b53a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801b53c:	b10b      	cbz	r3, 801b542 <__sflush_r+0x46>
 801b53e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801b540:	1ac0      	subs	r0, r0, r3
 801b542:	2300      	movs	r3, #0
 801b544:	4602      	mov	r2, r0
 801b546:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b548:	6a21      	ldr	r1, [r4, #32]
 801b54a:	4628      	mov	r0, r5
 801b54c:	47b0      	blx	r6
 801b54e:	1c43      	adds	r3, r0, #1
 801b550:	89a3      	ldrh	r3, [r4, #12]
 801b552:	d106      	bne.n	801b562 <__sflush_r+0x66>
 801b554:	6829      	ldr	r1, [r5, #0]
 801b556:	291d      	cmp	r1, #29
 801b558:	d82c      	bhi.n	801b5b4 <__sflush_r+0xb8>
 801b55a:	4a2a      	ldr	r2, [pc, #168]	; (801b604 <__sflush_r+0x108>)
 801b55c:	40ca      	lsrs	r2, r1
 801b55e:	07d6      	lsls	r6, r2, #31
 801b560:	d528      	bpl.n	801b5b4 <__sflush_r+0xb8>
 801b562:	2200      	movs	r2, #0
 801b564:	6062      	str	r2, [r4, #4]
 801b566:	04d9      	lsls	r1, r3, #19
 801b568:	6922      	ldr	r2, [r4, #16]
 801b56a:	6022      	str	r2, [r4, #0]
 801b56c:	d504      	bpl.n	801b578 <__sflush_r+0x7c>
 801b56e:	1c42      	adds	r2, r0, #1
 801b570:	d101      	bne.n	801b576 <__sflush_r+0x7a>
 801b572:	682b      	ldr	r3, [r5, #0]
 801b574:	b903      	cbnz	r3, 801b578 <__sflush_r+0x7c>
 801b576:	6560      	str	r0, [r4, #84]	; 0x54
 801b578:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b57a:	602f      	str	r7, [r5, #0]
 801b57c:	2900      	cmp	r1, #0
 801b57e:	d0ca      	beq.n	801b516 <__sflush_r+0x1a>
 801b580:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b584:	4299      	cmp	r1, r3
 801b586:	d002      	beq.n	801b58e <__sflush_r+0x92>
 801b588:	4628      	mov	r0, r5
 801b58a:	f7ff fa5b 	bl	801aa44 <_free_r>
 801b58e:	2000      	movs	r0, #0
 801b590:	6360      	str	r0, [r4, #52]	; 0x34
 801b592:	e7c1      	b.n	801b518 <__sflush_r+0x1c>
 801b594:	6a21      	ldr	r1, [r4, #32]
 801b596:	2301      	movs	r3, #1
 801b598:	4628      	mov	r0, r5
 801b59a:	47b0      	blx	r6
 801b59c:	1c41      	adds	r1, r0, #1
 801b59e:	d1c7      	bne.n	801b530 <__sflush_r+0x34>
 801b5a0:	682b      	ldr	r3, [r5, #0]
 801b5a2:	2b00      	cmp	r3, #0
 801b5a4:	d0c4      	beq.n	801b530 <__sflush_r+0x34>
 801b5a6:	2b1d      	cmp	r3, #29
 801b5a8:	d001      	beq.n	801b5ae <__sflush_r+0xb2>
 801b5aa:	2b16      	cmp	r3, #22
 801b5ac:	d101      	bne.n	801b5b2 <__sflush_r+0xb6>
 801b5ae:	602f      	str	r7, [r5, #0]
 801b5b0:	e7b1      	b.n	801b516 <__sflush_r+0x1a>
 801b5b2:	89a3      	ldrh	r3, [r4, #12]
 801b5b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b5b8:	81a3      	strh	r3, [r4, #12]
 801b5ba:	e7ad      	b.n	801b518 <__sflush_r+0x1c>
 801b5bc:	690f      	ldr	r7, [r1, #16]
 801b5be:	2f00      	cmp	r7, #0
 801b5c0:	d0a9      	beq.n	801b516 <__sflush_r+0x1a>
 801b5c2:	0793      	lsls	r3, r2, #30
 801b5c4:	680e      	ldr	r6, [r1, #0]
 801b5c6:	bf08      	it	eq
 801b5c8:	694b      	ldreq	r3, [r1, #20]
 801b5ca:	600f      	str	r7, [r1, #0]
 801b5cc:	bf18      	it	ne
 801b5ce:	2300      	movne	r3, #0
 801b5d0:	eba6 0807 	sub.w	r8, r6, r7
 801b5d4:	608b      	str	r3, [r1, #8]
 801b5d6:	f1b8 0f00 	cmp.w	r8, #0
 801b5da:	dd9c      	ble.n	801b516 <__sflush_r+0x1a>
 801b5dc:	6a21      	ldr	r1, [r4, #32]
 801b5de:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801b5e0:	4643      	mov	r3, r8
 801b5e2:	463a      	mov	r2, r7
 801b5e4:	4628      	mov	r0, r5
 801b5e6:	47b0      	blx	r6
 801b5e8:	2800      	cmp	r0, #0
 801b5ea:	dc06      	bgt.n	801b5fa <__sflush_r+0xfe>
 801b5ec:	89a3      	ldrh	r3, [r4, #12]
 801b5ee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b5f2:	81a3      	strh	r3, [r4, #12]
 801b5f4:	f04f 30ff 	mov.w	r0, #4294967295
 801b5f8:	e78e      	b.n	801b518 <__sflush_r+0x1c>
 801b5fa:	4407      	add	r7, r0
 801b5fc:	eba8 0800 	sub.w	r8, r8, r0
 801b600:	e7e9      	b.n	801b5d6 <__sflush_r+0xda>
 801b602:	bf00      	nop
 801b604:	20400001 	.word	0x20400001

0801b608 <_fflush_r>:
 801b608:	b538      	push	{r3, r4, r5, lr}
 801b60a:	690b      	ldr	r3, [r1, #16]
 801b60c:	4605      	mov	r5, r0
 801b60e:	460c      	mov	r4, r1
 801b610:	b913      	cbnz	r3, 801b618 <_fflush_r+0x10>
 801b612:	2500      	movs	r5, #0
 801b614:	4628      	mov	r0, r5
 801b616:	bd38      	pop	{r3, r4, r5, pc}
 801b618:	b118      	cbz	r0, 801b622 <_fflush_r+0x1a>
 801b61a:	6983      	ldr	r3, [r0, #24]
 801b61c:	b90b      	cbnz	r3, 801b622 <_fflush_r+0x1a>
 801b61e:	f000 f887 	bl	801b730 <__sinit>
 801b622:	4b14      	ldr	r3, [pc, #80]	; (801b674 <_fflush_r+0x6c>)
 801b624:	429c      	cmp	r4, r3
 801b626:	d11b      	bne.n	801b660 <_fflush_r+0x58>
 801b628:	686c      	ldr	r4, [r5, #4]
 801b62a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b62e:	2b00      	cmp	r3, #0
 801b630:	d0ef      	beq.n	801b612 <_fflush_r+0xa>
 801b632:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801b634:	07d0      	lsls	r0, r2, #31
 801b636:	d404      	bmi.n	801b642 <_fflush_r+0x3a>
 801b638:	0599      	lsls	r1, r3, #22
 801b63a:	d402      	bmi.n	801b642 <_fflush_r+0x3a>
 801b63c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b63e:	f000 f915 	bl	801b86c <__retarget_lock_acquire_recursive>
 801b642:	4628      	mov	r0, r5
 801b644:	4621      	mov	r1, r4
 801b646:	f7ff ff59 	bl	801b4fc <__sflush_r>
 801b64a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801b64c:	07da      	lsls	r2, r3, #31
 801b64e:	4605      	mov	r5, r0
 801b650:	d4e0      	bmi.n	801b614 <_fflush_r+0xc>
 801b652:	89a3      	ldrh	r3, [r4, #12]
 801b654:	059b      	lsls	r3, r3, #22
 801b656:	d4dd      	bmi.n	801b614 <_fflush_r+0xc>
 801b658:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b65a:	f000 f909 	bl	801b870 <__retarget_lock_release_recursive>
 801b65e:	e7d9      	b.n	801b614 <_fflush_r+0xc>
 801b660:	4b05      	ldr	r3, [pc, #20]	; (801b678 <_fflush_r+0x70>)
 801b662:	429c      	cmp	r4, r3
 801b664:	d101      	bne.n	801b66a <_fflush_r+0x62>
 801b666:	68ac      	ldr	r4, [r5, #8]
 801b668:	e7df      	b.n	801b62a <_fflush_r+0x22>
 801b66a:	4b04      	ldr	r3, [pc, #16]	; (801b67c <_fflush_r+0x74>)
 801b66c:	429c      	cmp	r4, r3
 801b66e:	bf08      	it	eq
 801b670:	68ec      	ldreq	r4, [r5, #12]
 801b672:	e7da      	b.n	801b62a <_fflush_r+0x22>
 801b674:	0801ebc8 	.word	0x0801ebc8
 801b678:	0801ebe8 	.word	0x0801ebe8
 801b67c:	0801eba8 	.word	0x0801eba8

0801b680 <std>:
 801b680:	2300      	movs	r3, #0
 801b682:	b510      	push	{r4, lr}
 801b684:	4604      	mov	r4, r0
 801b686:	e9c0 3300 	strd	r3, r3, [r0]
 801b68a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801b68e:	6083      	str	r3, [r0, #8]
 801b690:	8181      	strh	r1, [r0, #12]
 801b692:	6643      	str	r3, [r0, #100]	; 0x64
 801b694:	81c2      	strh	r2, [r0, #14]
 801b696:	6183      	str	r3, [r0, #24]
 801b698:	4619      	mov	r1, r3
 801b69a:	2208      	movs	r2, #8
 801b69c:	305c      	adds	r0, #92	; 0x5c
 801b69e:	f7ff f9c9 	bl	801aa34 <memset>
 801b6a2:	4b05      	ldr	r3, [pc, #20]	; (801b6b8 <std+0x38>)
 801b6a4:	6263      	str	r3, [r4, #36]	; 0x24
 801b6a6:	4b05      	ldr	r3, [pc, #20]	; (801b6bc <std+0x3c>)
 801b6a8:	62a3      	str	r3, [r4, #40]	; 0x28
 801b6aa:	4b05      	ldr	r3, [pc, #20]	; (801b6c0 <std+0x40>)
 801b6ac:	62e3      	str	r3, [r4, #44]	; 0x2c
 801b6ae:	4b05      	ldr	r3, [pc, #20]	; (801b6c4 <std+0x44>)
 801b6b0:	6224      	str	r4, [r4, #32]
 801b6b2:	6323      	str	r3, [r4, #48]	; 0x30
 801b6b4:	bd10      	pop	{r4, pc}
 801b6b6:	bf00      	nop
 801b6b8:	0801b955 	.word	0x0801b955
 801b6bc:	0801b977 	.word	0x0801b977
 801b6c0:	0801b9af 	.word	0x0801b9af
 801b6c4:	0801b9d3 	.word	0x0801b9d3

0801b6c8 <_cleanup_r>:
 801b6c8:	4901      	ldr	r1, [pc, #4]	; (801b6d0 <_cleanup_r+0x8>)
 801b6ca:	f000 b8af 	b.w	801b82c <_fwalk_reent>
 801b6ce:	bf00      	nop
 801b6d0:	0801b609 	.word	0x0801b609

0801b6d4 <__sfmoreglue>:
 801b6d4:	b570      	push	{r4, r5, r6, lr}
 801b6d6:	2268      	movs	r2, #104	; 0x68
 801b6d8:	1e4d      	subs	r5, r1, #1
 801b6da:	4355      	muls	r5, r2
 801b6dc:	460e      	mov	r6, r1
 801b6de:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801b6e2:	f7ff fa1b 	bl	801ab1c <_malloc_r>
 801b6e6:	4604      	mov	r4, r0
 801b6e8:	b140      	cbz	r0, 801b6fc <__sfmoreglue+0x28>
 801b6ea:	2100      	movs	r1, #0
 801b6ec:	e9c0 1600 	strd	r1, r6, [r0]
 801b6f0:	300c      	adds	r0, #12
 801b6f2:	60a0      	str	r0, [r4, #8]
 801b6f4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801b6f8:	f7ff f99c 	bl	801aa34 <memset>
 801b6fc:	4620      	mov	r0, r4
 801b6fe:	bd70      	pop	{r4, r5, r6, pc}

0801b700 <__sfp_lock_acquire>:
 801b700:	4801      	ldr	r0, [pc, #4]	; (801b708 <__sfp_lock_acquire+0x8>)
 801b702:	f000 b8b3 	b.w	801b86c <__retarget_lock_acquire_recursive>
 801b706:	bf00      	nop
 801b708:	20001776 	.word	0x20001776

0801b70c <__sfp_lock_release>:
 801b70c:	4801      	ldr	r0, [pc, #4]	; (801b714 <__sfp_lock_release+0x8>)
 801b70e:	f000 b8af 	b.w	801b870 <__retarget_lock_release_recursive>
 801b712:	bf00      	nop
 801b714:	20001776 	.word	0x20001776

0801b718 <__sinit_lock_acquire>:
 801b718:	4801      	ldr	r0, [pc, #4]	; (801b720 <__sinit_lock_acquire+0x8>)
 801b71a:	f000 b8a7 	b.w	801b86c <__retarget_lock_acquire_recursive>
 801b71e:	bf00      	nop
 801b720:	20001777 	.word	0x20001777

0801b724 <__sinit_lock_release>:
 801b724:	4801      	ldr	r0, [pc, #4]	; (801b72c <__sinit_lock_release+0x8>)
 801b726:	f000 b8a3 	b.w	801b870 <__retarget_lock_release_recursive>
 801b72a:	bf00      	nop
 801b72c:	20001777 	.word	0x20001777

0801b730 <__sinit>:
 801b730:	b510      	push	{r4, lr}
 801b732:	4604      	mov	r4, r0
 801b734:	f7ff fff0 	bl	801b718 <__sinit_lock_acquire>
 801b738:	69a3      	ldr	r3, [r4, #24]
 801b73a:	b11b      	cbz	r3, 801b744 <__sinit+0x14>
 801b73c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b740:	f7ff bff0 	b.w	801b724 <__sinit_lock_release>
 801b744:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801b748:	6523      	str	r3, [r4, #80]	; 0x50
 801b74a:	4b13      	ldr	r3, [pc, #76]	; (801b798 <__sinit+0x68>)
 801b74c:	4a13      	ldr	r2, [pc, #76]	; (801b79c <__sinit+0x6c>)
 801b74e:	681b      	ldr	r3, [r3, #0]
 801b750:	62a2      	str	r2, [r4, #40]	; 0x28
 801b752:	42a3      	cmp	r3, r4
 801b754:	bf04      	itt	eq
 801b756:	2301      	moveq	r3, #1
 801b758:	61a3      	streq	r3, [r4, #24]
 801b75a:	4620      	mov	r0, r4
 801b75c:	f000 f820 	bl	801b7a0 <__sfp>
 801b760:	6060      	str	r0, [r4, #4]
 801b762:	4620      	mov	r0, r4
 801b764:	f000 f81c 	bl	801b7a0 <__sfp>
 801b768:	60a0      	str	r0, [r4, #8]
 801b76a:	4620      	mov	r0, r4
 801b76c:	f000 f818 	bl	801b7a0 <__sfp>
 801b770:	2200      	movs	r2, #0
 801b772:	60e0      	str	r0, [r4, #12]
 801b774:	2104      	movs	r1, #4
 801b776:	6860      	ldr	r0, [r4, #4]
 801b778:	f7ff ff82 	bl	801b680 <std>
 801b77c:	68a0      	ldr	r0, [r4, #8]
 801b77e:	2201      	movs	r2, #1
 801b780:	2109      	movs	r1, #9
 801b782:	f7ff ff7d 	bl	801b680 <std>
 801b786:	68e0      	ldr	r0, [r4, #12]
 801b788:	2202      	movs	r2, #2
 801b78a:	2112      	movs	r1, #18
 801b78c:	f7ff ff78 	bl	801b680 <std>
 801b790:	2301      	movs	r3, #1
 801b792:	61a3      	str	r3, [r4, #24]
 801b794:	e7d2      	b.n	801b73c <__sinit+0xc>
 801b796:	bf00      	nop
 801b798:	0801eb6c 	.word	0x0801eb6c
 801b79c:	0801b6c9 	.word	0x0801b6c9

0801b7a0 <__sfp>:
 801b7a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b7a2:	4607      	mov	r7, r0
 801b7a4:	f7ff ffac 	bl	801b700 <__sfp_lock_acquire>
 801b7a8:	4b1e      	ldr	r3, [pc, #120]	; (801b824 <__sfp+0x84>)
 801b7aa:	681e      	ldr	r6, [r3, #0]
 801b7ac:	69b3      	ldr	r3, [r6, #24]
 801b7ae:	b913      	cbnz	r3, 801b7b6 <__sfp+0x16>
 801b7b0:	4630      	mov	r0, r6
 801b7b2:	f7ff ffbd 	bl	801b730 <__sinit>
 801b7b6:	3648      	adds	r6, #72	; 0x48
 801b7b8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801b7bc:	3b01      	subs	r3, #1
 801b7be:	d503      	bpl.n	801b7c8 <__sfp+0x28>
 801b7c0:	6833      	ldr	r3, [r6, #0]
 801b7c2:	b30b      	cbz	r3, 801b808 <__sfp+0x68>
 801b7c4:	6836      	ldr	r6, [r6, #0]
 801b7c6:	e7f7      	b.n	801b7b8 <__sfp+0x18>
 801b7c8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801b7cc:	b9d5      	cbnz	r5, 801b804 <__sfp+0x64>
 801b7ce:	4b16      	ldr	r3, [pc, #88]	; (801b828 <__sfp+0x88>)
 801b7d0:	60e3      	str	r3, [r4, #12]
 801b7d2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801b7d6:	6665      	str	r5, [r4, #100]	; 0x64
 801b7d8:	f000 f847 	bl	801b86a <__retarget_lock_init_recursive>
 801b7dc:	f7ff ff96 	bl	801b70c <__sfp_lock_release>
 801b7e0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801b7e4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801b7e8:	6025      	str	r5, [r4, #0]
 801b7ea:	61a5      	str	r5, [r4, #24]
 801b7ec:	2208      	movs	r2, #8
 801b7ee:	4629      	mov	r1, r5
 801b7f0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801b7f4:	f7ff f91e 	bl	801aa34 <memset>
 801b7f8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801b7fc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801b800:	4620      	mov	r0, r4
 801b802:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b804:	3468      	adds	r4, #104	; 0x68
 801b806:	e7d9      	b.n	801b7bc <__sfp+0x1c>
 801b808:	2104      	movs	r1, #4
 801b80a:	4638      	mov	r0, r7
 801b80c:	f7ff ff62 	bl	801b6d4 <__sfmoreglue>
 801b810:	4604      	mov	r4, r0
 801b812:	6030      	str	r0, [r6, #0]
 801b814:	2800      	cmp	r0, #0
 801b816:	d1d5      	bne.n	801b7c4 <__sfp+0x24>
 801b818:	f7ff ff78 	bl	801b70c <__sfp_lock_release>
 801b81c:	230c      	movs	r3, #12
 801b81e:	603b      	str	r3, [r7, #0]
 801b820:	e7ee      	b.n	801b800 <__sfp+0x60>
 801b822:	bf00      	nop
 801b824:	0801eb6c 	.word	0x0801eb6c
 801b828:	ffff0001 	.word	0xffff0001

0801b82c <_fwalk_reent>:
 801b82c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b830:	4606      	mov	r6, r0
 801b832:	4688      	mov	r8, r1
 801b834:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801b838:	2700      	movs	r7, #0
 801b83a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801b83e:	f1b9 0901 	subs.w	r9, r9, #1
 801b842:	d505      	bpl.n	801b850 <_fwalk_reent+0x24>
 801b844:	6824      	ldr	r4, [r4, #0]
 801b846:	2c00      	cmp	r4, #0
 801b848:	d1f7      	bne.n	801b83a <_fwalk_reent+0xe>
 801b84a:	4638      	mov	r0, r7
 801b84c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b850:	89ab      	ldrh	r3, [r5, #12]
 801b852:	2b01      	cmp	r3, #1
 801b854:	d907      	bls.n	801b866 <_fwalk_reent+0x3a>
 801b856:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801b85a:	3301      	adds	r3, #1
 801b85c:	d003      	beq.n	801b866 <_fwalk_reent+0x3a>
 801b85e:	4629      	mov	r1, r5
 801b860:	4630      	mov	r0, r6
 801b862:	47c0      	blx	r8
 801b864:	4307      	orrs	r7, r0
 801b866:	3568      	adds	r5, #104	; 0x68
 801b868:	e7e9      	b.n	801b83e <_fwalk_reent+0x12>

0801b86a <__retarget_lock_init_recursive>:
 801b86a:	4770      	bx	lr

0801b86c <__retarget_lock_acquire_recursive>:
 801b86c:	4770      	bx	lr

0801b86e <__retarget_lock_release>:
 801b86e:	4770      	bx	lr

0801b870 <__retarget_lock_release_recursive>:
 801b870:	4770      	bx	lr

0801b872 <__swhatbuf_r>:
 801b872:	b570      	push	{r4, r5, r6, lr}
 801b874:	460e      	mov	r6, r1
 801b876:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b87a:	2900      	cmp	r1, #0
 801b87c:	b096      	sub	sp, #88	; 0x58
 801b87e:	4614      	mov	r4, r2
 801b880:	461d      	mov	r5, r3
 801b882:	da08      	bge.n	801b896 <__swhatbuf_r+0x24>
 801b884:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801b888:	2200      	movs	r2, #0
 801b88a:	602a      	str	r2, [r5, #0]
 801b88c:	061a      	lsls	r2, r3, #24
 801b88e:	d410      	bmi.n	801b8b2 <__swhatbuf_r+0x40>
 801b890:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801b894:	e00e      	b.n	801b8b4 <__swhatbuf_r+0x42>
 801b896:	466a      	mov	r2, sp
 801b898:	f000 f8c2 	bl	801ba20 <_fstat_r>
 801b89c:	2800      	cmp	r0, #0
 801b89e:	dbf1      	blt.n	801b884 <__swhatbuf_r+0x12>
 801b8a0:	9a01      	ldr	r2, [sp, #4]
 801b8a2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801b8a6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801b8aa:	425a      	negs	r2, r3
 801b8ac:	415a      	adcs	r2, r3
 801b8ae:	602a      	str	r2, [r5, #0]
 801b8b0:	e7ee      	b.n	801b890 <__swhatbuf_r+0x1e>
 801b8b2:	2340      	movs	r3, #64	; 0x40
 801b8b4:	2000      	movs	r0, #0
 801b8b6:	6023      	str	r3, [r4, #0]
 801b8b8:	b016      	add	sp, #88	; 0x58
 801b8ba:	bd70      	pop	{r4, r5, r6, pc}

0801b8bc <__smakebuf_r>:
 801b8bc:	898b      	ldrh	r3, [r1, #12]
 801b8be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801b8c0:	079d      	lsls	r5, r3, #30
 801b8c2:	4606      	mov	r6, r0
 801b8c4:	460c      	mov	r4, r1
 801b8c6:	d507      	bpl.n	801b8d8 <__smakebuf_r+0x1c>
 801b8c8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801b8cc:	6023      	str	r3, [r4, #0]
 801b8ce:	6123      	str	r3, [r4, #16]
 801b8d0:	2301      	movs	r3, #1
 801b8d2:	6163      	str	r3, [r4, #20]
 801b8d4:	b002      	add	sp, #8
 801b8d6:	bd70      	pop	{r4, r5, r6, pc}
 801b8d8:	ab01      	add	r3, sp, #4
 801b8da:	466a      	mov	r2, sp
 801b8dc:	f7ff ffc9 	bl	801b872 <__swhatbuf_r>
 801b8e0:	9900      	ldr	r1, [sp, #0]
 801b8e2:	4605      	mov	r5, r0
 801b8e4:	4630      	mov	r0, r6
 801b8e6:	f7ff f919 	bl	801ab1c <_malloc_r>
 801b8ea:	b948      	cbnz	r0, 801b900 <__smakebuf_r+0x44>
 801b8ec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b8f0:	059a      	lsls	r2, r3, #22
 801b8f2:	d4ef      	bmi.n	801b8d4 <__smakebuf_r+0x18>
 801b8f4:	f023 0303 	bic.w	r3, r3, #3
 801b8f8:	f043 0302 	orr.w	r3, r3, #2
 801b8fc:	81a3      	strh	r3, [r4, #12]
 801b8fe:	e7e3      	b.n	801b8c8 <__smakebuf_r+0xc>
 801b900:	4b0d      	ldr	r3, [pc, #52]	; (801b938 <__smakebuf_r+0x7c>)
 801b902:	62b3      	str	r3, [r6, #40]	; 0x28
 801b904:	89a3      	ldrh	r3, [r4, #12]
 801b906:	6020      	str	r0, [r4, #0]
 801b908:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801b90c:	81a3      	strh	r3, [r4, #12]
 801b90e:	9b00      	ldr	r3, [sp, #0]
 801b910:	6163      	str	r3, [r4, #20]
 801b912:	9b01      	ldr	r3, [sp, #4]
 801b914:	6120      	str	r0, [r4, #16]
 801b916:	b15b      	cbz	r3, 801b930 <__smakebuf_r+0x74>
 801b918:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b91c:	4630      	mov	r0, r6
 801b91e:	f000 f891 	bl	801ba44 <_isatty_r>
 801b922:	b128      	cbz	r0, 801b930 <__smakebuf_r+0x74>
 801b924:	89a3      	ldrh	r3, [r4, #12]
 801b926:	f023 0303 	bic.w	r3, r3, #3
 801b92a:	f043 0301 	orr.w	r3, r3, #1
 801b92e:	81a3      	strh	r3, [r4, #12]
 801b930:	89a0      	ldrh	r0, [r4, #12]
 801b932:	4305      	orrs	r5, r0
 801b934:	81a5      	strh	r5, [r4, #12]
 801b936:	e7cd      	b.n	801b8d4 <__smakebuf_r+0x18>
 801b938:	0801b6c9 	.word	0x0801b6c9

0801b93c <__malloc_lock>:
 801b93c:	4801      	ldr	r0, [pc, #4]	; (801b944 <__malloc_lock+0x8>)
 801b93e:	f7ff bf95 	b.w	801b86c <__retarget_lock_acquire_recursive>
 801b942:	bf00      	nop
 801b944:	20001775 	.word	0x20001775

0801b948 <__malloc_unlock>:
 801b948:	4801      	ldr	r0, [pc, #4]	; (801b950 <__malloc_unlock+0x8>)
 801b94a:	f7ff bf91 	b.w	801b870 <__retarget_lock_release_recursive>
 801b94e:	bf00      	nop
 801b950:	20001775 	.word	0x20001775

0801b954 <__sread>:
 801b954:	b510      	push	{r4, lr}
 801b956:	460c      	mov	r4, r1
 801b958:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b95c:	f000 f894 	bl	801ba88 <_read_r>
 801b960:	2800      	cmp	r0, #0
 801b962:	bfab      	itete	ge
 801b964:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801b966:	89a3      	ldrhlt	r3, [r4, #12]
 801b968:	181b      	addge	r3, r3, r0
 801b96a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801b96e:	bfac      	ite	ge
 801b970:	6563      	strge	r3, [r4, #84]	; 0x54
 801b972:	81a3      	strhlt	r3, [r4, #12]
 801b974:	bd10      	pop	{r4, pc}

0801b976 <__swrite>:
 801b976:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b97a:	461f      	mov	r7, r3
 801b97c:	898b      	ldrh	r3, [r1, #12]
 801b97e:	05db      	lsls	r3, r3, #23
 801b980:	4605      	mov	r5, r0
 801b982:	460c      	mov	r4, r1
 801b984:	4616      	mov	r6, r2
 801b986:	d505      	bpl.n	801b994 <__swrite+0x1e>
 801b988:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b98c:	2302      	movs	r3, #2
 801b98e:	2200      	movs	r2, #0
 801b990:	f000 f868 	bl	801ba64 <_lseek_r>
 801b994:	89a3      	ldrh	r3, [r4, #12]
 801b996:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801b99a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801b99e:	81a3      	strh	r3, [r4, #12]
 801b9a0:	4632      	mov	r2, r6
 801b9a2:	463b      	mov	r3, r7
 801b9a4:	4628      	mov	r0, r5
 801b9a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801b9aa:	f000 b817 	b.w	801b9dc <_write_r>

0801b9ae <__sseek>:
 801b9ae:	b510      	push	{r4, lr}
 801b9b0:	460c      	mov	r4, r1
 801b9b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b9b6:	f000 f855 	bl	801ba64 <_lseek_r>
 801b9ba:	1c43      	adds	r3, r0, #1
 801b9bc:	89a3      	ldrh	r3, [r4, #12]
 801b9be:	bf15      	itete	ne
 801b9c0:	6560      	strne	r0, [r4, #84]	; 0x54
 801b9c2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801b9c6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801b9ca:	81a3      	strheq	r3, [r4, #12]
 801b9cc:	bf18      	it	ne
 801b9ce:	81a3      	strhne	r3, [r4, #12]
 801b9d0:	bd10      	pop	{r4, pc}

0801b9d2 <__sclose>:
 801b9d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801b9d6:	f000 b813 	b.w	801ba00 <_close_r>
	...

0801b9dc <_write_r>:
 801b9dc:	b538      	push	{r3, r4, r5, lr}
 801b9de:	4d07      	ldr	r5, [pc, #28]	; (801b9fc <_write_r+0x20>)
 801b9e0:	4604      	mov	r4, r0
 801b9e2:	4608      	mov	r0, r1
 801b9e4:	4611      	mov	r1, r2
 801b9e6:	2200      	movs	r2, #0
 801b9e8:	602a      	str	r2, [r5, #0]
 801b9ea:	461a      	mov	r2, r3
 801b9ec:	f7e6 faa1 	bl	8001f32 <_write>
 801b9f0:	1c43      	adds	r3, r0, #1
 801b9f2:	d102      	bne.n	801b9fa <_write_r+0x1e>
 801b9f4:	682b      	ldr	r3, [r5, #0]
 801b9f6:	b103      	cbz	r3, 801b9fa <_write_r+0x1e>
 801b9f8:	6023      	str	r3, [r4, #0]
 801b9fa:	bd38      	pop	{r3, r4, r5, pc}
 801b9fc:	20001778 	.word	0x20001778

0801ba00 <_close_r>:
 801ba00:	b538      	push	{r3, r4, r5, lr}
 801ba02:	4d06      	ldr	r5, [pc, #24]	; (801ba1c <_close_r+0x1c>)
 801ba04:	2300      	movs	r3, #0
 801ba06:	4604      	mov	r4, r0
 801ba08:	4608      	mov	r0, r1
 801ba0a:	602b      	str	r3, [r5, #0]
 801ba0c:	f7e6 faad 	bl	8001f6a <_close>
 801ba10:	1c43      	adds	r3, r0, #1
 801ba12:	d102      	bne.n	801ba1a <_close_r+0x1a>
 801ba14:	682b      	ldr	r3, [r5, #0]
 801ba16:	b103      	cbz	r3, 801ba1a <_close_r+0x1a>
 801ba18:	6023      	str	r3, [r4, #0]
 801ba1a:	bd38      	pop	{r3, r4, r5, pc}
 801ba1c:	20001778 	.word	0x20001778

0801ba20 <_fstat_r>:
 801ba20:	b538      	push	{r3, r4, r5, lr}
 801ba22:	4d07      	ldr	r5, [pc, #28]	; (801ba40 <_fstat_r+0x20>)
 801ba24:	2300      	movs	r3, #0
 801ba26:	4604      	mov	r4, r0
 801ba28:	4608      	mov	r0, r1
 801ba2a:	4611      	mov	r1, r2
 801ba2c:	602b      	str	r3, [r5, #0]
 801ba2e:	f7e6 faa8 	bl	8001f82 <_fstat>
 801ba32:	1c43      	adds	r3, r0, #1
 801ba34:	d102      	bne.n	801ba3c <_fstat_r+0x1c>
 801ba36:	682b      	ldr	r3, [r5, #0]
 801ba38:	b103      	cbz	r3, 801ba3c <_fstat_r+0x1c>
 801ba3a:	6023      	str	r3, [r4, #0]
 801ba3c:	bd38      	pop	{r3, r4, r5, pc}
 801ba3e:	bf00      	nop
 801ba40:	20001778 	.word	0x20001778

0801ba44 <_isatty_r>:
 801ba44:	b538      	push	{r3, r4, r5, lr}
 801ba46:	4d06      	ldr	r5, [pc, #24]	; (801ba60 <_isatty_r+0x1c>)
 801ba48:	2300      	movs	r3, #0
 801ba4a:	4604      	mov	r4, r0
 801ba4c:	4608      	mov	r0, r1
 801ba4e:	602b      	str	r3, [r5, #0]
 801ba50:	f7e6 faa7 	bl	8001fa2 <_isatty>
 801ba54:	1c43      	adds	r3, r0, #1
 801ba56:	d102      	bne.n	801ba5e <_isatty_r+0x1a>
 801ba58:	682b      	ldr	r3, [r5, #0]
 801ba5a:	b103      	cbz	r3, 801ba5e <_isatty_r+0x1a>
 801ba5c:	6023      	str	r3, [r4, #0]
 801ba5e:	bd38      	pop	{r3, r4, r5, pc}
 801ba60:	20001778 	.word	0x20001778

0801ba64 <_lseek_r>:
 801ba64:	b538      	push	{r3, r4, r5, lr}
 801ba66:	4d07      	ldr	r5, [pc, #28]	; (801ba84 <_lseek_r+0x20>)
 801ba68:	4604      	mov	r4, r0
 801ba6a:	4608      	mov	r0, r1
 801ba6c:	4611      	mov	r1, r2
 801ba6e:	2200      	movs	r2, #0
 801ba70:	602a      	str	r2, [r5, #0]
 801ba72:	461a      	mov	r2, r3
 801ba74:	f7e6 faa0 	bl	8001fb8 <_lseek>
 801ba78:	1c43      	adds	r3, r0, #1
 801ba7a:	d102      	bne.n	801ba82 <_lseek_r+0x1e>
 801ba7c:	682b      	ldr	r3, [r5, #0]
 801ba7e:	b103      	cbz	r3, 801ba82 <_lseek_r+0x1e>
 801ba80:	6023      	str	r3, [r4, #0]
 801ba82:	bd38      	pop	{r3, r4, r5, pc}
 801ba84:	20001778 	.word	0x20001778

0801ba88 <_read_r>:
 801ba88:	b538      	push	{r3, r4, r5, lr}
 801ba8a:	4d07      	ldr	r5, [pc, #28]	; (801baa8 <_read_r+0x20>)
 801ba8c:	4604      	mov	r4, r0
 801ba8e:	4608      	mov	r0, r1
 801ba90:	4611      	mov	r1, r2
 801ba92:	2200      	movs	r2, #0
 801ba94:	602a      	str	r2, [r5, #0]
 801ba96:	461a      	mov	r2, r3
 801ba98:	f7e6 fa2e 	bl	8001ef8 <_read>
 801ba9c:	1c43      	adds	r3, r0, #1
 801ba9e:	d102      	bne.n	801baa6 <_read_r+0x1e>
 801baa0:	682b      	ldr	r3, [r5, #0]
 801baa2:	b103      	cbz	r3, 801baa6 <_read_r+0x1e>
 801baa4:	6023      	str	r3, [r4, #0]
 801baa6:	bd38      	pop	{r3, r4, r5, pc}
 801baa8:	20001778 	.word	0x20001778

0801baac <_init>:
 801baac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801baae:	bf00      	nop
 801bab0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801bab2:	bc08      	pop	{r3}
 801bab4:	469e      	mov	lr, r3
 801bab6:	4770      	bx	lr

0801bab8 <_fini>:
 801bab8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801baba:	bf00      	nop
 801babc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801babe:	bc08      	pop	{r3}
 801bac0:	469e      	mov	lr, r3
 801bac2:	4770      	bx	lr
