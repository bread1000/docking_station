
F429_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001e47c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003608  0801e630  0801e630  0002e630  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000e92  08021c38  08021c38  00031c38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 ExtFlashSection 00009800  08022acc  08022acc  00032acc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000000f4  0802c2cc  0802c2cc  0003c2cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  0802c3c0  0802c3c0  00040270  2**0
                  CONTENTS
  7 .ARM          00000008  0802c3c0  0802c3c0  0003c3c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  0802c3c8  0802c3c8  00040270  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  0802c3c8  0802c3c8  0003c3c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  0802c3dc  0802c3dc  0003c3dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000270  20000000  0802c3e4  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          000017f8  20000270  0802c654  00040270  2**2
                  ALLOC
 13 ._user_heap_stack 00000600  20001a68  0802c654  00041a68  2**0
                  ALLOC
 14 .ARM.attributes 00000030  00000000  00000000  00040270  2**0
                  CONTENTS, READONLY
 15 .debug_info   0003d9fe  00000000  00000000  000402a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 0000b35f  00000000  00000000  0007dc9e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 000028c0  00000000  00000000  00089000  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_ranges 00002520  00000000  00000000  0008b8c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  0002e1a8  00000000  00000000  0008dde0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line   0002c48b  00000000  00000000  000bbf88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    000f5e11  00000000  00000000  000e8413  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .comment      000000cf  00000000  00000000  001de224  2**0
                  CONTENTS, READONLY
 23 .debug_frame  0000bba8  00000000  00000000  001de2f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000270 	.word	0x20000270
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801e614 	.word	0x0801e614

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000274 	.word	0x20000274
 80001ec:	0801e614 	.word	0x0801e614

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_uldivmod>:
 8000bc8:	b953      	cbnz	r3, 8000be0 <__aeabi_uldivmod+0x18>
 8000bca:	b94a      	cbnz	r2, 8000be0 <__aeabi_uldivmod+0x18>
 8000bcc:	2900      	cmp	r1, #0
 8000bce:	bf08      	it	eq
 8000bd0:	2800      	cmpeq	r0, #0
 8000bd2:	bf1c      	itt	ne
 8000bd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bdc:	f000 b974 	b.w	8000ec8 <__aeabi_idiv0>
 8000be0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000be4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be8:	f000 f806 	bl	8000bf8 <__udivmoddi4>
 8000bec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bf4:	b004      	add	sp, #16
 8000bf6:	4770      	bx	lr

08000bf8 <__udivmoddi4>:
 8000bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bfc:	9d08      	ldr	r5, [sp, #32]
 8000bfe:	4604      	mov	r4, r0
 8000c00:	468e      	mov	lr, r1
 8000c02:	2b00      	cmp	r3, #0
 8000c04:	d14d      	bne.n	8000ca2 <__udivmoddi4+0xaa>
 8000c06:	428a      	cmp	r2, r1
 8000c08:	4694      	mov	ip, r2
 8000c0a:	d969      	bls.n	8000ce0 <__udivmoddi4+0xe8>
 8000c0c:	fab2 f282 	clz	r2, r2
 8000c10:	b152      	cbz	r2, 8000c28 <__udivmoddi4+0x30>
 8000c12:	fa01 f302 	lsl.w	r3, r1, r2
 8000c16:	f1c2 0120 	rsb	r1, r2, #32
 8000c1a:	fa20 f101 	lsr.w	r1, r0, r1
 8000c1e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c22:	ea41 0e03 	orr.w	lr, r1, r3
 8000c26:	4094      	lsls	r4, r2
 8000c28:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000c2c:	0c21      	lsrs	r1, r4, #16
 8000c2e:	fbbe f6f8 	udiv	r6, lr, r8
 8000c32:	fa1f f78c 	uxth.w	r7, ip
 8000c36:	fb08 e316 	mls	r3, r8, r6, lr
 8000c3a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c3e:	fb06 f107 	mul.w	r1, r6, r7
 8000c42:	4299      	cmp	r1, r3
 8000c44:	d90a      	bls.n	8000c5c <__udivmoddi4+0x64>
 8000c46:	eb1c 0303 	adds.w	r3, ip, r3
 8000c4a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c4e:	f080 811f 	bcs.w	8000e90 <__udivmoddi4+0x298>
 8000c52:	4299      	cmp	r1, r3
 8000c54:	f240 811c 	bls.w	8000e90 <__udivmoddi4+0x298>
 8000c58:	3e02      	subs	r6, #2
 8000c5a:	4463      	add	r3, ip
 8000c5c:	1a5b      	subs	r3, r3, r1
 8000c5e:	b2a4      	uxth	r4, r4
 8000c60:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c64:	fb08 3310 	mls	r3, r8, r0, r3
 8000c68:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c6c:	fb00 f707 	mul.w	r7, r0, r7
 8000c70:	42a7      	cmp	r7, r4
 8000c72:	d90a      	bls.n	8000c8a <__udivmoddi4+0x92>
 8000c74:	eb1c 0404 	adds.w	r4, ip, r4
 8000c78:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c7c:	f080 810a 	bcs.w	8000e94 <__udivmoddi4+0x29c>
 8000c80:	42a7      	cmp	r7, r4
 8000c82:	f240 8107 	bls.w	8000e94 <__udivmoddi4+0x29c>
 8000c86:	4464      	add	r4, ip
 8000c88:	3802      	subs	r0, #2
 8000c8a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c8e:	1be4      	subs	r4, r4, r7
 8000c90:	2600      	movs	r6, #0
 8000c92:	b11d      	cbz	r5, 8000c9c <__udivmoddi4+0xa4>
 8000c94:	40d4      	lsrs	r4, r2
 8000c96:	2300      	movs	r3, #0
 8000c98:	e9c5 4300 	strd	r4, r3, [r5]
 8000c9c:	4631      	mov	r1, r6
 8000c9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca2:	428b      	cmp	r3, r1
 8000ca4:	d909      	bls.n	8000cba <__udivmoddi4+0xc2>
 8000ca6:	2d00      	cmp	r5, #0
 8000ca8:	f000 80ef 	beq.w	8000e8a <__udivmoddi4+0x292>
 8000cac:	2600      	movs	r6, #0
 8000cae:	e9c5 0100 	strd	r0, r1, [r5]
 8000cb2:	4630      	mov	r0, r6
 8000cb4:	4631      	mov	r1, r6
 8000cb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cba:	fab3 f683 	clz	r6, r3
 8000cbe:	2e00      	cmp	r6, #0
 8000cc0:	d14a      	bne.n	8000d58 <__udivmoddi4+0x160>
 8000cc2:	428b      	cmp	r3, r1
 8000cc4:	d302      	bcc.n	8000ccc <__udivmoddi4+0xd4>
 8000cc6:	4282      	cmp	r2, r0
 8000cc8:	f200 80f9 	bhi.w	8000ebe <__udivmoddi4+0x2c6>
 8000ccc:	1a84      	subs	r4, r0, r2
 8000cce:	eb61 0303 	sbc.w	r3, r1, r3
 8000cd2:	2001      	movs	r0, #1
 8000cd4:	469e      	mov	lr, r3
 8000cd6:	2d00      	cmp	r5, #0
 8000cd8:	d0e0      	beq.n	8000c9c <__udivmoddi4+0xa4>
 8000cda:	e9c5 4e00 	strd	r4, lr, [r5]
 8000cde:	e7dd      	b.n	8000c9c <__udivmoddi4+0xa4>
 8000ce0:	b902      	cbnz	r2, 8000ce4 <__udivmoddi4+0xec>
 8000ce2:	deff      	udf	#255	; 0xff
 8000ce4:	fab2 f282 	clz	r2, r2
 8000ce8:	2a00      	cmp	r2, #0
 8000cea:	f040 8092 	bne.w	8000e12 <__udivmoddi4+0x21a>
 8000cee:	eba1 010c 	sub.w	r1, r1, ip
 8000cf2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cf6:	fa1f fe8c 	uxth.w	lr, ip
 8000cfa:	2601      	movs	r6, #1
 8000cfc:	0c20      	lsrs	r0, r4, #16
 8000cfe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000d02:	fb07 1113 	mls	r1, r7, r3, r1
 8000d06:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d0a:	fb0e f003 	mul.w	r0, lr, r3
 8000d0e:	4288      	cmp	r0, r1
 8000d10:	d908      	bls.n	8000d24 <__udivmoddi4+0x12c>
 8000d12:	eb1c 0101 	adds.w	r1, ip, r1
 8000d16:	f103 38ff 	add.w	r8, r3, #4294967295
 8000d1a:	d202      	bcs.n	8000d22 <__udivmoddi4+0x12a>
 8000d1c:	4288      	cmp	r0, r1
 8000d1e:	f200 80cb 	bhi.w	8000eb8 <__udivmoddi4+0x2c0>
 8000d22:	4643      	mov	r3, r8
 8000d24:	1a09      	subs	r1, r1, r0
 8000d26:	b2a4      	uxth	r4, r4
 8000d28:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d2c:	fb07 1110 	mls	r1, r7, r0, r1
 8000d30:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000d34:	fb0e fe00 	mul.w	lr, lr, r0
 8000d38:	45a6      	cmp	lr, r4
 8000d3a:	d908      	bls.n	8000d4e <__udivmoddi4+0x156>
 8000d3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000d40:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d44:	d202      	bcs.n	8000d4c <__udivmoddi4+0x154>
 8000d46:	45a6      	cmp	lr, r4
 8000d48:	f200 80bb 	bhi.w	8000ec2 <__udivmoddi4+0x2ca>
 8000d4c:	4608      	mov	r0, r1
 8000d4e:	eba4 040e 	sub.w	r4, r4, lr
 8000d52:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d56:	e79c      	b.n	8000c92 <__udivmoddi4+0x9a>
 8000d58:	f1c6 0720 	rsb	r7, r6, #32
 8000d5c:	40b3      	lsls	r3, r6
 8000d5e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d62:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d66:	fa20 f407 	lsr.w	r4, r0, r7
 8000d6a:	fa01 f306 	lsl.w	r3, r1, r6
 8000d6e:	431c      	orrs	r4, r3
 8000d70:	40f9      	lsrs	r1, r7
 8000d72:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d76:	fa00 f306 	lsl.w	r3, r0, r6
 8000d7a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000d7e:	0c20      	lsrs	r0, r4, #16
 8000d80:	fa1f fe8c 	uxth.w	lr, ip
 8000d84:	fb09 1118 	mls	r1, r9, r8, r1
 8000d88:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d8c:	fb08 f00e 	mul.w	r0, r8, lr
 8000d90:	4288      	cmp	r0, r1
 8000d92:	fa02 f206 	lsl.w	r2, r2, r6
 8000d96:	d90b      	bls.n	8000db0 <__udivmoddi4+0x1b8>
 8000d98:	eb1c 0101 	adds.w	r1, ip, r1
 8000d9c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000da0:	f080 8088 	bcs.w	8000eb4 <__udivmoddi4+0x2bc>
 8000da4:	4288      	cmp	r0, r1
 8000da6:	f240 8085 	bls.w	8000eb4 <__udivmoddi4+0x2bc>
 8000daa:	f1a8 0802 	sub.w	r8, r8, #2
 8000dae:	4461      	add	r1, ip
 8000db0:	1a09      	subs	r1, r1, r0
 8000db2:	b2a4      	uxth	r4, r4
 8000db4:	fbb1 f0f9 	udiv	r0, r1, r9
 8000db8:	fb09 1110 	mls	r1, r9, r0, r1
 8000dbc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000dc0:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dc4:	458e      	cmp	lr, r1
 8000dc6:	d908      	bls.n	8000dda <__udivmoddi4+0x1e2>
 8000dc8:	eb1c 0101 	adds.w	r1, ip, r1
 8000dcc:	f100 34ff 	add.w	r4, r0, #4294967295
 8000dd0:	d26c      	bcs.n	8000eac <__udivmoddi4+0x2b4>
 8000dd2:	458e      	cmp	lr, r1
 8000dd4:	d96a      	bls.n	8000eac <__udivmoddi4+0x2b4>
 8000dd6:	3802      	subs	r0, #2
 8000dd8:	4461      	add	r1, ip
 8000dda:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000dde:	fba0 9402 	umull	r9, r4, r0, r2
 8000de2:	eba1 010e 	sub.w	r1, r1, lr
 8000de6:	42a1      	cmp	r1, r4
 8000de8:	46c8      	mov	r8, r9
 8000dea:	46a6      	mov	lr, r4
 8000dec:	d356      	bcc.n	8000e9c <__udivmoddi4+0x2a4>
 8000dee:	d053      	beq.n	8000e98 <__udivmoddi4+0x2a0>
 8000df0:	b15d      	cbz	r5, 8000e0a <__udivmoddi4+0x212>
 8000df2:	ebb3 0208 	subs.w	r2, r3, r8
 8000df6:	eb61 010e 	sbc.w	r1, r1, lr
 8000dfa:	fa01 f707 	lsl.w	r7, r1, r7
 8000dfe:	fa22 f306 	lsr.w	r3, r2, r6
 8000e02:	40f1      	lsrs	r1, r6
 8000e04:	431f      	orrs	r7, r3
 8000e06:	e9c5 7100 	strd	r7, r1, [r5]
 8000e0a:	2600      	movs	r6, #0
 8000e0c:	4631      	mov	r1, r6
 8000e0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e12:	f1c2 0320 	rsb	r3, r2, #32
 8000e16:	40d8      	lsrs	r0, r3
 8000e18:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e1c:	fa21 f303 	lsr.w	r3, r1, r3
 8000e20:	4091      	lsls	r1, r2
 8000e22:	4301      	orrs	r1, r0
 8000e24:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e28:	fa1f fe8c 	uxth.w	lr, ip
 8000e2c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000e30:	fb07 3610 	mls	r6, r7, r0, r3
 8000e34:	0c0b      	lsrs	r3, r1, #16
 8000e36:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000e3a:	fb00 f60e 	mul.w	r6, r0, lr
 8000e3e:	429e      	cmp	r6, r3
 8000e40:	fa04 f402 	lsl.w	r4, r4, r2
 8000e44:	d908      	bls.n	8000e58 <__udivmoddi4+0x260>
 8000e46:	eb1c 0303 	adds.w	r3, ip, r3
 8000e4a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e4e:	d22f      	bcs.n	8000eb0 <__udivmoddi4+0x2b8>
 8000e50:	429e      	cmp	r6, r3
 8000e52:	d92d      	bls.n	8000eb0 <__udivmoddi4+0x2b8>
 8000e54:	3802      	subs	r0, #2
 8000e56:	4463      	add	r3, ip
 8000e58:	1b9b      	subs	r3, r3, r6
 8000e5a:	b289      	uxth	r1, r1
 8000e5c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e60:	fb07 3316 	mls	r3, r7, r6, r3
 8000e64:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e68:	fb06 f30e 	mul.w	r3, r6, lr
 8000e6c:	428b      	cmp	r3, r1
 8000e6e:	d908      	bls.n	8000e82 <__udivmoddi4+0x28a>
 8000e70:	eb1c 0101 	adds.w	r1, ip, r1
 8000e74:	f106 38ff 	add.w	r8, r6, #4294967295
 8000e78:	d216      	bcs.n	8000ea8 <__udivmoddi4+0x2b0>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d914      	bls.n	8000ea8 <__udivmoddi4+0x2b0>
 8000e7e:	3e02      	subs	r6, #2
 8000e80:	4461      	add	r1, ip
 8000e82:	1ac9      	subs	r1, r1, r3
 8000e84:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000e88:	e738      	b.n	8000cfc <__udivmoddi4+0x104>
 8000e8a:	462e      	mov	r6, r5
 8000e8c:	4628      	mov	r0, r5
 8000e8e:	e705      	b.n	8000c9c <__udivmoddi4+0xa4>
 8000e90:	4606      	mov	r6, r0
 8000e92:	e6e3      	b.n	8000c5c <__udivmoddi4+0x64>
 8000e94:	4618      	mov	r0, r3
 8000e96:	e6f8      	b.n	8000c8a <__udivmoddi4+0x92>
 8000e98:	454b      	cmp	r3, r9
 8000e9a:	d2a9      	bcs.n	8000df0 <__udivmoddi4+0x1f8>
 8000e9c:	ebb9 0802 	subs.w	r8, r9, r2
 8000ea0:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000ea4:	3801      	subs	r0, #1
 8000ea6:	e7a3      	b.n	8000df0 <__udivmoddi4+0x1f8>
 8000ea8:	4646      	mov	r6, r8
 8000eaa:	e7ea      	b.n	8000e82 <__udivmoddi4+0x28a>
 8000eac:	4620      	mov	r0, r4
 8000eae:	e794      	b.n	8000dda <__udivmoddi4+0x1e2>
 8000eb0:	4640      	mov	r0, r8
 8000eb2:	e7d1      	b.n	8000e58 <__udivmoddi4+0x260>
 8000eb4:	46d0      	mov	r8, sl
 8000eb6:	e77b      	b.n	8000db0 <__udivmoddi4+0x1b8>
 8000eb8:	3b02      	subs	r3, #2
 8000eba:	4461      	add	r1, ip
 8000ebc:	e732      	b.n	8000d24 <__udivmoddi4+0x12c>
 8000ebe:	4630      	mov	r0, r6
 8000ec0:	e709      	b.n	8000cd6 <__udivmoddi4+0xde>
 8000ec2:	4464      	add	r4, ip
 8000ec4:	3802      	subs	r0, #2
 8000ec6:	e742      	b.n	8000d4e <__udivmoddi4+0x156>

08000ec8 <__aeabi_idiv0>:
 8000ec8:	4770      	bx	lr
 8000eca:	bf00      	nop

08000ecc <line_append>:
static float battery_voltage = 0;
static uint8_t battery_percentage = 0;

//Funkcja dodająca kolejne przychodzące znaki jednej linii do bufora
void line_append(uint8_t value)
{
 8000ecc:	b580      	push	{r7, lr}
 8000ece:	b084      	sub	sp, #16
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	4603      	mov	r3, r0
 8000ed4:	71fb      	strb	r3, [r7, #7]
	//odebrano znak końca linii
	if (value == '\r' || value == '\n')
 8000ed6:	79fb      	ldrb	r3, [r7, #7]
 8000ed8:	2b0d      	cmp	r3, #13
 8000eda:	d002      	beq.n	8000ee2 <line_append+0x16>
 8000edc:	79fb      	ldrb	r3, [r7, #7]
 8000ede:	2b0a      	cmp	r3, #10
 8000ee0:	d13b      	bne.n	8000f5a <line_append+0x8e>
	{
		int a = 0;
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	60fb      	str	r3, [r7, #12]
		if (line_length > 0)
 8000ee6:	4b27      	ldr	r3, [pc, #156]	; (8000f84 <line_append+0xb8>)
 8000ee8:	681b      	ldr	r3, [r3, #0]
 8000eea:	2b00      	cmp	r3, #0
 8000eec:	d045      	beq.n	8000f7a <line_append+0xae>
		{
			line_buffer[line_length] = '\0';		//jeśli bufor nie jest pusty - dodaj 0 na końcu linii
 8000eee:	4b25      	ldr	r3, [pc, #148]	; (8000f84 <line_append+0xb8>)
 8000ef0:	681b      	ldr	r3, [r3, #0]
 8000ef2:	4a25      	ldr	r2, [pc, #148]	; (8000f88 <line_append+0xbc>)
 8000ef4:	2100      	movs	r1, #0
 8000ef6:	54d1      	strb	r1, [r2, r3]
			//printf("Otrzymano: %s\n", line_buffer);

			battery_adc = atoi((char*)&line_buffer[0]);
 8000ef8:	4823      	ldr	r0, [pc, #140]	; (8000f88 <line_append+0xbc>)
 8000efa:	f01a fd47 	bl	801b98c <atoi>
 8000efe:	4603      	mov	r3, r0
 8000f00:	461a      	mov	r2, r3
 8000f02:	4b22      	ldr	r3, [pc, #136]	; (8000f8c <line_append+0xc0>)
 8000f04:	601a      	str	r2, [r3, #0]
			printf("%lu\n", battery_adc);
 8000f06:	4b21      	ldr	r3, [pc, #132]	; (8000f8c <line_append+0xc0>)
 8000f08:	681b      	ldr	r3, [r3, #0]
 8000f0a:	4619      	mov	r1, r3
 8000f0c:	4820      	ldr	r0, [pc, #128]	; (8000f90 <line_append+0xc4>)
 8000f0e:	f01b fc55 	bl	801c7bc <iprintf>
			battery_voltage = 3.3f * battery_adc / (4096.0f-1);
 8000f12:	4b1e      	ldr	r3, [pc, #120]	; (8000f8c <line_append+0xc0>)
 8000f14:	681b      	ldr	r3, [r3, #0]
 8000f16:	ee07 3a90 	vmov	s15, r3
 8000f1a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000f1e:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8000f94 <line_append+0xc8>
 8000f22:	ee27 7a87 	vmul.f32	s14, s15, s14
 8000f26:	eddf 6a1c 	vldr	s13, [pc, #112]	; 8000f98 <line_append+0xcc>
 8000f2a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000f2e:	4b1b      	ldr	r3, [pc, #108]	; (8000f9c <line_append+0xd0>)
 8000f30:	edc3 7a00 	vstr	s15, [r3]
			battery_percentage = 100*battery_adc/4096;
 8000f34:	4b15      	ldr	r3, [pc, #84]	; (8000f8c <line_append+0xc0>)
 8000f36:	681b      	ldr	r3, [r3, #0]
 8000f38:	2264      	movs	r2, #100	; 0x64
 8000f3a:	fb02 f303 	mul.w	r3, r2, r3
 8000f3e:	0b1b      	lsrs	r3, r3, #12
 8000f40:	b2da      	uxtb	r2, r3
 8000f42:	4b17      	ldr	r3, [pc, #92]	; (8000fa0 <line_append+0xd4>)
 8000f44:	701a      	strb	r2, [r3, #0]
			printf("%d\n", battery_percentage);
 8000f46:	4b16      	ldr	r3, [pc, #88]	; (8000fa0 <line_append+0xd4>)
 8000f48:	781b      	ldrb	r3, [r3, #0]
 8000f4a:	4619      	mov	r1, r3
 8000f4c:	4815      	ldr	r0, [pc, #84]	; (8000fa4 <line_append+0xd8>)
 8000f4e:	f01b fc35 	bl	801c7bc <iprintf>
			//printf("ADC = %lu (%.2f V)\n", battery_adc, battery_voltage);

			line_length = 0;						//zbieranie danych od nowa
 8000f52:	4b0c      	ldr	r3, [pc, #48]	; (8000f84 <line_append+0xb8>)
 8000f54:	2200      	movs	r2, #0
 8000f56:	601a      	str	r2, [r3, #0]
	{
 8000f58:	e00f      	b.n	8000f7a <line_append+0xae>
		}
	//odebrano znak inny niż końca linii
	}else{
		//jeśli odebrano za dużo danych
		if (line_length >= LINE_MAX_LENGTH)
 8000f5a:	4b0a      	ldr	r3, [pc, #40]	; (8000f84 <line_append+0xb8>)
 8000f5c:	681b      	ldr	r3, [r3, #0]
 8000f5e:	2b13      	cmp	r3, #19
 8000f60:	d902      	bls.n	8000f68 <line_append+0x9c>
			line_length = 0;				//usunięcie danych odebranych dotychczas
 8000f62:	4b08      	ldr	r3, [pc, #32]	; (8000f84 <line_append+0xb8>)
 8000f64:	2200      	movs	r2, #0
 8000f66:	601a      	str	r2, [r3, #0]

		line_buffer[line_length++] = value;	//dopisanie odebranej wartości do bufora
 8000f68:	4b06      	ldr	r3, [pc, #24]	; (8000f84 <line_append+0xb8>)
 8000f6a:	681b      	ldr	r3, [r3, #0]
 8000f6c:	1c5a      	adds	r2, r3, #1
 8000f6e:	4905      	ldr	r1, [pc, #20]	; (8000f84 <line_append+0xb8>)
 8000f70:	600a      	str	r2, [r1, #0]
 8000f72:	4905      	ldr	r1, [pc, #20]	; (8000f88 <line_append+0xbc>)
 8000f74:	79fa      	ldrb	r2, [r7, #7]
 8000f76:	54ca      	strb	r2, [r1, r3]
	}
}
 8000f78:	e000      	b.n	8000f7c <line_append+0xb0>
	{
 8000f7a:	bf00      	nop
}
 8000f7c:	bf00      	nop
 8000f7e:	3710      	adds	r7, #16
 8000f80:	46bd      	mov	sp, r7
 8000f82:	bd80      	pop	{r7, pc}
 8000f84:	200005b8 	.word	0x200005b8
 8000f88:	200005a0 	.word	0x200005a0
 8000f8c:	200005c4 	.word	0x200005c4
 8000f90:	0801e630 	.word	0x0801e630
 8000f94:	40533333 	.word	0x40533333
 8000f98:	457ff000 	.word	0x457ff000
 8000f9c:	200005c8 	.word	0x200005c8
 8000fa0:	200005cc 	.word	0x200005cc
 8000fa4:	0801e638 	.word	0x0801e638

08000fa8 <__io_putchar>:

//Funkcja umożliwiająca wysyłanie znaków przez uart za pomocą funkcji 'printf()'
int __io_putchar(int ch)
{
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	b084      	sub	sp, #16
 8000fac:	af00      	add	r7, sp, #0
 8000fae:	6078      	str	r0, [r7, #4]
	//znak końca linii
    if (ch == '\n')
 8000fb0:	687b      	ldr	r3, [r7, #4]
 8000fb2:	2b0a      	cmp	r3, #10
 8000fb4:	d109      	bne.n	8000fca <__io_putchar+0x22>
    {
        uint8_t ch2 = '\r';									//dodanie znaku powrotu karetki
 8000fb6:	230d      	movs	r3, #13
 8000fb8:	73fb      	strb	r3, [r7, #15]
        HAL_UART_Transmit(&huart1, &ch2, 1, HAL_MAX_DELAY);	//wysłanie dodanego znaku przez uart
 8000fba:	f107 010f 	add.w	r1, r7, #15
 8000fbe:	f04f 33ff 	mov.w	r3, #4294967295
 8000fc2:	2201      	movs	r2, #1
 8000fc4:	4807      	ldr	r0, [pc, #28]	; (8000fe4 <__io_putchar+0x3c>)
 8000fc6:	f005 ff5c 	bl	8006e82 <HAL_UART_Transmit>
    }

    HAL_UART_Transmit(&huart1, (uint8_t*)&ch, 1, HAL_MAX_DELAY); //wyslanie danej przez uart
 8000fca:	1d39      	adds	r1, r7, #4
 8000fcc:	f04f 33ff 	mov.w	r3, #4294967295
 8000fd0:	2201      	movs	r2, #1
 8000fd2:	4804      	ldr	r0, [pc, #16]	; (8000fe4 <__io_putchar+0x3c>)
 8000fd4:	f005 ff55 	bl	8006e82 <HAL_UART_Transmit>
    return 1;
 8000fd8:	2301      	movs	r3, #1
}
 8000fda:	4618      	mov	r0, r3
 8000fdc:	3710      	adds	r7, #16
 8000fde:	46bd      	mov	sp, r7
 8000fe0:	bd80      	pop	{r7, pc}
 8000fe2:	bf00      	nop
 8000fe4:	200004dc 	.word	0x200004dc

08000fe8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000fe8:	b580      	push	{r7, lr}
 8000fea:	b084      	sub	sp, #16
 8000fec:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000fee:	f001 fd35 	bl	8002a5c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ff2:	f000 f8d7 	bl	80011a4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ff6:	f000 fe5f 	bl	8001cb8 <MX_GPIO_Init>
  MX_CRC_Init();
 8000ffa:	f000 f9af 	bl	800135c <MX_CRC_Init>
  MX_DMA2D_Init();
 8000ffe:	f000 f9c1 	bl	8001384 <MX_DMA2D_Init>
  MX_FMC_Init();
 8001002:	f000 fdb1 	bl	8001b68 <MX_FMC_Init>
  MX_LTDC_Init();
 8001006:	f000 f9ef 	bl	80013e8 <MX_LTDC_Init>
  MX_SPI5_Init();
 800100a:	f000 fa6d 	bl	80014e8 <MX_SPI5_Init>
  MX_TIM1_Init();
 800100e:	f000 fbe7 	bl	80017e0 <MX_TIM1_Init>
  MX_ADC1_Init();
 8001012:	f000 f951 	bl	80012b8 <MX_ADC1_Init>
  MX_TIM3_Init();
 8001016:	f000 fca9 	bl	800196c <MX_TIM3_Init>
  MX_TIM2_Init();
 800101a:	f000 fc31 	bl	8001880 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 800101e:	f000 fd4f 	bl	8001ac0 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 8001022:	f000 fd77 	bl	8001b14 <MX_USART2_UART_Init>
  MX_TouchGFX_Init();
 8001026:	f006 fec4 	bl	8007db2 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  //Zegar obsługujący czujnik odległości HC-SR04
  HAL_TIM_IC_Start(&htim3, TIM_CHANNEL_1);
 800102a:	2100      	movs	r1, #0
 800102c:	4853      	ldr	r0, [pc, #332]	; (800117c <main+0x194>)
 800102e:	f004 fe54 	bl	8005cda <HAL_TIM_IC_Start>
  HAL_TIM_IC_Start(&htim3, TIM_CHANNEL_2);
 8001032:	2104      	movs	r1, #4
 8001034:	4851      	ldr	r0, [pc, #324]	; (800117c <main+0x194>)
 8001036:	f004 fe50 	bl	8005cda <HAL_TIM_IC_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 800103a:	2108      	movs	r1, #8
 800103c:	484f      	ldr	r0, [pc, #316]	; (800117c <main+0x194>)
 800103e:	f004 fdd9 	bl	8005bf4 <HAL_TIM_PWM_Start>

  //Zegar generujący sygnał 36kHz dla diód IR
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001042:	2100      	movs	r1, #0
 8001044:	484e      	ldr	r0, [pc, #312]	; (8001180 <main+0x198>)
 8001046:	f004 fdd5 	bl	8005bf4 <HAL_TIM_PWM_Start>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  uint8_t distance = 0;
 800104a:	2300      	movs	r3, #0
 800104c:	737b      	strb	r3, [r7, #13]
  uint8_t prev_distance = 0;
 800104e:	2300      	movs	r3, #0
 8001050:	73fb      	strb	r3, [r7, #15]
  bool ROBOT = false;
 8001052:	2300      	movs	r3, #0
 8001054:	73bb      	strb	r3, [r7, #14]
  uint8_t value = 0;
 8001056:	2300      	movs	r3, #0
 8001058:	733b      	strb	r3, [r7, #12]
  float voltage = 0;
 800105a:	f04f 0300 	mov.w	r3, #0
 800105e:	60bb      	str	r3, [r7, #8]
  uint8_t start = 0;
 8001060:	2300      	movs	r3, #0
 8001062:	71fb      	strb	r3, [r7, #7]
  uint8_t stop = 0;
 8001064:	2300      	movs	r3, #0
 8001066:	71bb      	strb	r3, [r7, #6]
  uint8_t uart1;

  while (1)
  {
	  /*----Czytanie danych odebranych przez UART-moduł bluetooth---*/
	  if (HAL_UART_Receive(&huart2, &read, 1, 0) == HAL_OK)
 8001068:	2300      	movs	r3, #0
 800106a:	2201      	movs	r2, #1
 800106c:	4945      	ldr	r1, [pc, #276]	; (8001184 <main+0x19c>)
 800106e:	4846      	ldr	r0, [pc, #280]	; (8001188 <main+0x1a0>)
 8001070:	f005 ffa0 	bl	8006fb4 <HAL_UART_Receive>
 8001074:	4603      	mov	r3, r0
 8001076:	2b00      	cmp	r3, #0
 8001078:	d105      	bne.n	8001086 <main+0x9e>
		  line_append(read);
 800107a:	4b42      	ldr	r3, [pc, #264]	; (8001184 <main+0x19c>)
 800107c:	681b      	ldr	r3, [r3, #0]
 800107e:	b2db      	uxtb	r3, r3
 8001080:	4618      	mov	r0, r3
 8001082:	f7ff ff23 	bl	8000ecc <line_append>

	  /*---------------Pomiar napięcia na stykach-ADC------------PA2*/
	  HAL_ADC_Start(&hadc1);
 8001086:	4841      	ldr	r0, [pc, #260]	; (800118c <main+0x1a4>)
 8001088:	f001 fd92 	bl	8002bb0 <HAL_ADC_Start>
	  HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 800108c:	f04f 31ff 	mov.w	r1, #4294967295
 8001090:	483e      	ldr	r0, [pc, #248]	; (800118c <main+0x1a4>)
 8001092:	f001 fe53 	bl	8002d3c <HAL_ADC_PollForConversion>

	  value = HAL_ADC_GetValue(&hadc1);
 8001096:	483d      	ldr	r0, [pc, #244]	; (800118c <main+0x1a4>)
 8001098:	f001 fed4 	bl	8002e44 <HAL_ADC_GetValue>
 800109c:	4603      	mov	r3, r0
 800109e:	733b      	strb	r3, [r7, #12]
	  voltage = 3.3f * value / 4096.0f;
 80010a0:	7b3b      	ldrb	r3, [r7, #12]
 80010a2:	ee07 3a90 	vmov	s15, r3
 80010a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80010aa:	ed9f 7a39 	vldr	s14, [pc, #228]	; 8001190 <main+0x1a8>
 80010ae:	ee27 7a87 	vmul.f32	s14, s15, s14
 80010b2:	eddf 6a38 	vldr	s13, [pc, #224]	; 8001194 <main+0x1ac>
 80010b6:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80010ba:	edc7 7a02 	vstr	s15, [r7, #8]

	  //printf("ADC = %lu (%.3f V)\n", value, voltage);
	  //HAL_Delay(250);

	  /*----------------Czujnik odległości-HC-SR04------------------*/
	  start = HAL_TIM_ReadCapturedValue(&htim3, TIM_CHANNEL_1);
 80010be:	2100      	movs	r1, #0
 80010c0:	482e      	ldr	r0, [pc, #184]	; (800117c <main+0x194>)
 80010c2:	f005 f95b 	bl	800637c <HAL_TIM_ReadCapturedValue>
 80010c6:	4603      	mov	r3, r0
 80010c8:	71fb      	strb	r3, [r7, #7]
	  stop = HAL_TIM_ReadCapturedValue(&htim3, TIM_CHANNEL_2);
 80010ca:	2104      	movs	r1, #4
 80010cc:	482b      	ldr	r0, [pc, #172]	; (800117c <main+0x194>)
 80010ce:	f005 f955 	bl	800637c <HAL_TIM_ReadCapturedValue>
 80010d2:	4603      	mov	r3, r0
 80010d4:	71bb      	strb	r3, [r7, #6]
	  distance = (stop - start) / 58;
 80010d6:	79ba      	ldrb	r2, [r7, #6]
 80010d8:	79fb      	ldrb	r3, [r7, #7]
 80010da:	1ad3      	subs	r3, r2, r3
 80010dc:	4a2e      	ldr	r2, [pc, #184]	; (8001198 <main+0x1b0>)
 80010de:	fb82 1203 	smull	r1, r2, r2, r3
 80010e2:	441a      	add	r2, r3
 80010e4:	1152      	asrs	r2, r2, #5
 80010e6:	17db      	asrs	r3, r3, #31
 80010e8:	1ad3      	subs	r3, r2, r3
 80010ea:	737b      	strb	r3, [r7, #13]
	  //printf("STACJA: %u\n", distance);

	  if (prev_distance != distance)
 80010ec:	7bfa      	ldrb	r2, [r7, #15]
 80010ee:	7b7b      	ldrb	r3, [r7, #13]
 80010f0:	429a      	cmp	r2, r3
 80010f2:	d001      	beq.n	80010f8 <main+0x110>
	  	  	  prev_distance = distance;
 80010f4:	7b7b      	ldrb	r3, [r7, #13]
 80010f6:	73fb      	strb	r3, [r7, #15]

	  if (ROBOT == false && prev_distance < 5)
 80010f8:	7bbb      	ldrb	r3, [r7, #14]
 80010fa:	f083 0301 	eor.w	r3, r3, #1
 80010fe:	b2db      	uxtb	r3, r3
 8001100:	2b00      	cmp	r3, #0
 8001102:	d00f      	beq.n	8001124 <main+0x13c>
 8001104:	7bfb      	ldrb	r3, [r7, #15]
 8001106:	2b04      	cmp	r3, #4
 8001108:	d80c      	bhi.n	8001124 <main+0x13c>
	  {
		  ROBOT = true;
 800110a:	2301      	movs	r3, #1
 800110c:	73bb      	strb	r3, [r7, #14]

		  //wysłanie informacji do robota, że czujnik wykrył go przed stykami
		  TX_BUFFER[0] = '1';
 800110e:	4b23      	ldr	r3, [pc, #140]	; (800119c <main+0x1b4>)
 8001110:	2231      	movs	r2, #49	; 0x31
 8001112:	701a      	strb	r2, [r3, #0]
		  HAL_UART_Transmit(&huart2, TX_BUFFER, sizeof(TX_BUFFER), HAL_MAX_DELAY);
 8001114:	f04f 33ff 	mov.w	r3, #4294967295
 8001118:	2201      	movs	r2, #1
 800111a:	4920      	ldr	r1, [pc, #128]	; (800119c <main+0x1b4>)
 800111c:	481a      	ldr	r0, [pc, #104]	; (8001188 <main+0x1a0>)
 800111e:	f005 feb0 	bl	8006e82 <HAL_UART_Transmit>
 8001122:	e011      	b.n	8001148 <main+0x160>
	  }
	  else if (ROBOT == true && prev_distance > 4)
 8001124:	7bbb      	ldrb	r3, [r7, #14]
 8001126:	2b00      	cmp	r3, #0
 8001128:	d00e      	beq.n	8001148 <main+0x160>
 800112a:	7bfb      	ldrb	r3, [r7, #15]
 800112c:	2b04      	cmp	r3, #4
 800112e:	d90b      	bls.n	8001148 <main+0x160>
	  {
		  ROBOT = false;
 8001130:	2300      	movs	r3, #0
 8001132:	73bb      	strb	r3, [r7, #14]

		  //wysłanie informacji do robota, że czujnik przestał wykrywać go przed stykami
		  TX_BUFFER[0] = '2';
 8001134:	4b19      	ldr	r3, [pc, #100]	; (800119c <main+0x1b4>)
 8001136:	2232      	movs	r2, #50	; 0x32
 8001138:	701a      	strb	r2, [r3, #0]
		  HAL_UART_Transmit(&huart2, TX_BUFFER, sizeof(TX_BUFFER), HAL_MAX_DELAY);
 800113a:	f04f 33ff 	mov.w	r3, #4294967295
 800113e:	2201      	movs	r2, #1
 8001140:	4916      	ldr	r1, [pc, #88]	; (800119c <main+0x1b4>)
 8001142:	4811      	ldr	r0, [pc, #68]	; (8001188 <main+0x1a0>)
 8001144:	f005 fe9d 	bl	8006e82 <HAL_UART_Transmit>
	  }

	  /*-------Sterowanie robota z poziomu komputera-USB-UART-------*/
	  if (HAL_UART_Receive(&huart1, &uart1, 1, 0) == HAL_OK)
 8001148:	1d79      	adds	r1, r7, #5
 800114a:	2300      	movs	r3, #0
 800114c:	2201      	movs	r2, #1
 800114e:	4814      	ldr	r0, [pc, #80]	; (80011a0 <main+0x1b8>)
 8001150:	f005 ff30 	bl	8006fb4 <HAL_UART_Receive>
 8001154:	4603      	mov	r3, r0
 8001156:	2b00      	cmp	r3, #0
 8001158:	d10d      	bne.n	8001176 <main+0x18e>
	  {
		  line_append(uart1);
 800115a:	797b      	ldrb	r3, [r7, #5]
 800115c:	4618      	mov	r0, r3
 800115e:	f7ff feb5 	bl	8000ecc <line_append>

		  TX_BUFFER[0] = uart1;
 8001162:	797a      	ldrb	r2, [r7, #5]
 8001164:	4b0d      	ldr	r3, [pc, #52]	; (800119c <main+0x1b4>)
 8001166:	701a      	strb	r2, [r3, #0]
		  HAL_UART_Transmit(&huart2, TX_BUFFER, 1, HAL_MAX_DELAY);
 8001168:	f04f 33ff 	mov.w	r3, #4294967295
 800116c:	2201      	movs	r2, #1
 800116e:	490b      	ldr	r1, [pc, #44]	; (800119c <main+0x1b4>)
 8001170:	4805      	ldr	r0, [pc, #20]	; (8001188 <main+0x1a0>)
 8001172:	f005 fe86 	bl	8006e82 <HAL_UART_Transmit>
	  }
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8001176:	f006 fe22 	bl	8007dbe <MX_TouchGFX_Process>
	  if (HAL_UART_Receive(&huart2, &read, 1, 0) == HAL_OK)
 800117a:	e775      	b.n	8001068 <main+0x80>
 800117c:	2000049c 	.word	0x2000049c
 8001180:	2000045c 	.word	0x2000045c
 8001184:	200005c0 	.word	0x200005c0
 8001188:	2000051c 	.word	0x2000051c
 800118c:	2000028c 	.word	0x2000028c
 8001190:	40533333 	.word	0x40533333
 8001194:	45800000 	.word	0x45800000
 8001198:	8d3dcb09 	.word	0x8d3dcb09
 800119c:	200005bc 	.word	0x200005bc
 80011a0:	200004dc 	.word	0x200004dc

080011a4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80011a4:	b580      	push	{r7, lr}
 80011a6:	b0a0      	sub	sp, #128	; 0x80
 80011a8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011aa:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80011ae:	2230      	movs	r2, #48	; 0x30
 80011b0:	2100      	movs	r1, #0
 80011b2:	4618      	mov	r0, r3
 80011b4:	f01a fc56 	bl	801ba64 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011b8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80011bc:	2200      	movs	r2, #0
 80011be:	601a      	str	r2, [r3, #0]
 80011c0:	605a      	str	r2, [r3, #4]
 80011c2:	609a      	str	r2, [r3, #8]
 80011c4:	60da      	str	r2, [r3, #12]
 80011c6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80011c8:	f107 030c 	add.w	r3, r7, #12
 80011cc:	2230      	movs	r2, #48	; 0x30
 80011ce:	2100      	movs	r1, #0
 80011d0:	4618      	mov	r0, r3
 80011d2:	f01a fc47 	bl	801ba64 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80011d6:	2300      	movs	r3, #0
 80011d8:	60bb      	str	r3, [r7, #8]
 80011da:	4b35      	ldr	r3, [pc, #212]	; (80012b0 <SystemClock_Config+0x10c>)
 80011dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011de:	4a34      	ldr	r2, [pc, #208]	; (80012b0 <SystemClock_Config+0x10c>)
 80011e0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80011e4:	6413      	str	r3, [r2, #64]	; 0x40
 80011e6:	4b32      	ldr	r3, [pc, #200]	; (80012b0 <SystemClock_Config+0x10c>)
 80011e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80011ee:	60bb      	str	r3, [r7, #8]
 80011f0:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80011f2:	2300      	movs	r3, #0
 80011f4:	607b      	str	r3, [r7, #4]
 80011f6:	4b2f      	ldr	r3, [pc, #188]	; (80012b4 <SystemClock_Config+0x110>)
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	4a2e      	ldr	r2, [pc, #184]	; (80012b4 <SystemClock_Config+0x110>)
 80011fc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001200:	6013      	str	r3, [r2, #0]
 8001202:	4b2c      	ldr	r3, [pc, #176]	; (80012b4 <SystemClock_Config+0x110>)
 8001204:	681b      	ldr	r3, [r3, #0]
 8001206:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800120a:	607b      	str	r3, [r7, #4]
 800120c:	687b      	ldr	r3, [r7, #4]
  /** Initializes the CPU, AHB and APB busses clocks
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800120e:	2301      	movs	r3, #1
 8001210:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001212:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001216:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001218:	2302      	movs	r3, #2
 800121a:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800121c:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001220:	66fb      	str	r3, [r7, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8001222:	2304      	movs	r3, #4
 8001224:	673b      	str	r3, [r7, #112]	; 0x70
  RCC_OscInitStruct.PLL.PLLN = 180;
 8001226:	23b4      	movs	r3, #180	; 0xb4
 8001228:	677b      	str	r3, [r7, #116]	; 0x74
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800122a:	2302      	movs	r3, #2
 800122c:	67bb      	str	r3, [r7, #120]	; 0x78
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800122e:	2304      	movs	r3, #4
 8001230:	67fb      	str	r3, [r7, #124]	; 0x7c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001232:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8001236:	4618      	mov	r0, r3
 8001238:	f003 fb14 	bl	8004864 <HAL_RCC_OscConfig>
 800123c:	4603      	mov	r3, r0
 800123e:	2b00      	cmp	r3, #0
 8001240:	d001      	beq.n	8001246 <SystemClock_Config+0xa2>
  {
    Error_Handler();
 8001242:	f000 fe45 	bl	8001ed0 <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001246:	f003 fabd 	bl	80047c4 <HAL_PWREx_EnableOverDrive>
 800124a:	4603      	mov	r3, r0
 800124c:	2b00      	cmp	r3, #0
 800124e:	d001      	beq.n	8001254 <SystemClock_Config+0xb0>
  {
    Error_Handler();
 8001250:	f000 fe3e 	bl	8001ed0 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001254:	230f      	movs	r3, #15
 8001256:	63fb      	str	r3, [r7, #60]	; 0x3c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001258:	2302      	movs	r3, #2
 800125a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800125c:	2300      	movs	r3, #0
 800125e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001260:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001264:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001266:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800126a:	64fb      	str	r3, [r7, #76]	; 0x4c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800126c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001270:	2105      	movs	r1, #5
 8001272:	4618      	mov	r0, r3
 8001274:	f003 fd64 	bl	8004d40 <HAL_RCC_ClockConfig>
 8001278:	4603      	mov	r3, r0
 800127a:	2b00      	cmp	r3, #0
 800127c:	d001      	beq.n	8001282 <SystemClock_Config+0xde>
  {
    Error_Handler();
 800127e:	f000 fe27 	bl	8001ed0 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001282:	2308      	movs	r3, #8
 8001284:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 54;
 8001286:	2336      	movs	r3, #54	; 0x36
 8001288:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 3;
 800128a:	2303      	movs	r3, #3
 800128c:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 800128e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001292:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001294:	f107 030c 	add.w	r3, r7, #12
 8001298:	4618      	mov	r0, r3
 800129a:	f003 ffa3 	bl	80051e4 <HAL_RCCEx_PeriphCLKConfig>
 800129e:	4603      	mov	r3, r0
 80012a0:	2b00      	cmp	r3, #0
 80012a2:	d001      	beq.n	80012a8 <SystemClock_Config+0x104>
  {
    Error_Handler();
 80012a4:	f000 fe14 	bl	8001ed0 <Error_Handler>
  }
}
 80012a8:	bf00      	nop
 80012aa:	3780      	adds	r7, #128	; 0x80
 80012ac:	46bd      	mov	sp, r7
 80012ae:	bd80      	pop	{r7, pc}
 80012b0:	40023800 	.word	0x40023800
 80012b4:	40007000 	.word	0x40007000

080012b8 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80012b8:	b580      	push	{r7, lr}
 80012ba:	b084      	sub	sp, #16
 80012bc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80012be:	463b      	mov	r3, r7
 80012c0:	2200      	movs	r2, #0
 80012c2:	601a      	str	r2, [r3, #0]
 80012c4:	605a      	str	r2, [r3, #4]
 80012c6:	609a      	str	r2, [r3, #8]
 80012c8:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC1_Init 1 */

  /* USER CODE END ADC1_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80012ca:	4b21      	ldr	r3, [pc, #132]	; (8001350 <MX_ADC1_Init+0x98>)
 80012cc:	4a21      	ldr	r2, [pc, #132]	; (8001354 <MX_ADC1_Init+0x9c>)
 80012ce:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80012d0:	4b1f      	ldr	r3, [pc, #124]	; (8001350 <MX_ADC1_Init+0x98>)
 80012d2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80012d6:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80012d8:	4b1d      	ldr	r3, [pc, #116]	; (8001350 <MX_ADC1_Init+0x98>)
 80012da:	2200      	movs	r2, #0
 80012dc:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80012de:	4b1c      	ldr	r3, [pc, #112]	; (8001350 <MX_ADC1_Init+0x98>)
 80012e0:	2200      	movs	r2, #0
 80012e2:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80012e4:	4b1a      	ldr	r3, [pc, #104]	; (8001350 <MX_ADC1_Init+0x98>)
 80012e6:	2200      	movs	r2, #0
 80012e8:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80012ea:	4b19      	ldr	r3, [pc, #100]	; (8001350 <MX_ADC1_Init+0x98>)
 80012ec:	2200      	movs	r2, #0
 80012ee:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80012f2:	4b17      	ldr	r3, [pc, #92]	; (8001350 <MX_ADC1_Init+0x98>)
 80012f4:	2200      	movs	r2, #0
 80012f6:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80012f8:	4b15      	ldr	r3, [pc, #84]	; (8001350 <MX_ADC1_Init+0x98>)
 80012fa:	4a17      	ldr	r2, [pc, #92]	; (8001358 <MX_ADC1_Init+0xa0>)
 80012fc:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80012fe:	4b14      	ldr	r3, [pc, #80]	; (8001350 <MX_ADC1_Init+0x98>)
 8001300:	2200      	movs	r2, #0
 8001302:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001304:	4b12      	ldr	r3, [pc, #72]	; (8001350 <MX_ADC1_Init+0x98>)
 8001306:	2201      	movs	r2, #1
 8001308:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800130a:	4b11      	ldr	r3, [pc, #68]	; (8001350 <MX_ADC1_Init+0x98>)
 800130c:	2200      	movs	r2, #0
 800130e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001312:	4b0f      	ldr	r3, [pc, #60]	; (8001350 <MX_ADC1_Init+0x98>)
 8001314:	2201      	movs	r2, #1
 8001316:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001318:	480d      	ldr	r0, [pc, #52]	; (8001350 <MX_ADC1_Init+0x98>)
 800131a:	f001 fc05 	bl	8002b28 <HAL_ADC_Init>
 800131e:	4603      	mov	r3, r0
 8001320:	2b00      	cmp	r3, #0
 8001322:	d001      	beq.n	8001328 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8001324:	f000 fdd4 	bl	8001ed0 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_2;
 8001328:	2302      	movs	r3, #2
 800132a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 800132c:	2301      	movs	r3, #1
 800132e:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES;
 8001330:	2302      	movs	r3, #2
 8001332:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001334:	463b      	mov	r3, r7
 8001336:	4619      	mov	r1, r3
 8001338:	4805      	ldr	r0, [pc, #20]	; (8001350 <MX_ADC1_Init+0x98>)
 800133a:	f001 fd91 	bl	8002e60 <HAL_ADC_ConfigChannel>
 800133e:	4603      	mov	r3, r0
 8001340:	2b00      	cmp	r3, #0
 8001342:	d001      	beq.n	8001348 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8001344:	f000 fdc4 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001348:	bf00      	nop
 800134a:	3710      	adds	r7, #16
 800134c:	46bd      	mov	sp, r7
 800134e:	bd80      	pop	{r7, pc}
 8001350:	2000028c 	.word	0x2000028c
 8001354:	40012000 	.word	0x40012000
 8001358:	0f000001 	.word	0x0f000001

0800135c <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 800135c:	b580      	push	{r7, lr}
 800135e:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001360:	4b06      	ldr	r3, [pc, #24]	; (800137c <MX_CRC_Init+0x20>)
 8001362:	4a07      	ldr	r2, [pc, #28]	; (8001380 <MX_CRC_Init+0x24>)
 8001364:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001366:	4805      	ldr	r0, [pc, #20]	; (800137c <MX_CRC_Init+0x20>)
 8001368:	f002 f8bc 	bl	80034e4 <HAL_CRC_Init>
 800136c:	4603      	mov	r3, r0
 800136e:	2b00      	cmp	r3, #0
 8001370:	d001      	beq.n	8001376 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 8001372:	f000 fdad 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8001376:	bf00      	nop
 8001378:	bd80      	pop	{r7, pc}
 800137a:	bf00      	nop
 800137c:	200002d4 	.word	0x200002d4
 8001380:	40023000 	.word	0x40023000

08001384 <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 8001384:	b580      	push	{r7, lr}
 8001386:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 8001388:	4b15      	ldr	r3, [pc, #84]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 800138a:	4a16      	ldr	r2, [pc, #88]	; (80013e4 <MX_DMA2D_Init+0x60>)
 800138c:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 800138e:	4b14      	ldr	r3, [pc, #80]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 8001390:	2200      	movs	r2, #0
 8001392:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 8001394:	4b12      	ldr	r3, [pc, #72]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 8001396:	2202      	movs	r2, #2
 8001398:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 800139a:	4b11      	ldr	r3, [pc, #68]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 800139c:	2200      	movs	r2, #0
 800139e:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 80013a0:	4b0f      	ldr	r3, [pc, #60]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 80013a2:	2200      	movs	r2, #0
 80013a4:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80013a6:	4b0e      	ldr	r3, [pc, #56]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 80013a8:	2202      	movs	r2, #2
 80013aa:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013ac:	4b0c      	ldr	r3, [pc, #48]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 80013ae:	2200      	movs	r2, #0
 80013b0:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80013b2:	4b0b      	ldr	r3, [pc, #44]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 80013b4:	2200      	movs	r2, #0
 80013b6:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80013b8:	4809      	ldr	r0, [pc, #36]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 80013ba:	f002 f8af 	bl	800351c <HAL_DMA2D_Init>
 80013be:	4603      	mov	r3, r0
 80013c0:	2b00      	cmp	r3, #0
 80013c2:	d001      	beq.n	80013c8 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 80013c4:	f000 fd84 	bl	8001ed0 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80013c8:	2101      	movs	r1, #1
 80013ca:	4805      	ldr	r0, [pc, #20]	; (80013e0 <MX_DMA2D_Init+0x5c>)
 80013cc:	f002 fb70 	bl	8003ab0 <HAL_DMA2D_ConfigLayer>
 80013d0:	4603      	mov	r3, r0
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d001      	beq.n	80013da <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 80013d6:	f000 fd7b 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 80013da:	bf00      	nop
 80013dc:	bd80      	pop	{r7, pc}
 80013de:	bf00      	nop
 80013e0:	200002dc 	.word	0x200002dc
 80013e4:	4002b000 	.word	0x4002b000

080013e8 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 80013e8:	b580      	push	{r7, lr}
 80013ea:	b08e      	sub	sp, #56	; 0x38
 80013ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80013ee:	1d3b      	adds	r3, r7, #4
 80013f0:	2234      	movs	r2, #52	; 0x34
 80013f2:	2100      	movs	r1, #0
 80013f4:	4618      	mov	r0, r3
 80013f6:	f01a fb35 	bl	801ba64 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 80013fa:	4b39      	ldr	r3, [pc, #228]	; (80014e0 <MX_LTDC_Init+0xf8>)
 80013fc:	4a39      	ldr	r2, [pc, #228]	; (80014e4 <MX_LTDC_Init+0xfc>)
 80013fe:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001400:	4b37      	ldr	r3, [pc, #220]	; (80014e0 <MX_LTDC_Init+0xf8>)
 8001402:	2200      	movs	r2, #0
 8001404:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001406:	4b36      	ldr	r3, [pc, #216]	; (80014e0 <MX_LTDC_Init+0xf8>)
 8001408:	2200      	movs	r2, #0
 800140a:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800140c:	4b34      	ldr	r3, [pc, #208]	; (80014e0 <MX_LTDC_Init+0xf8>)
 800140e:	2200      	movs	r2, #0
 8001410:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001412:	4b33      	ldr	r3, [pc, #204]	; (80014e0 <MX_LTDC_Init+0xf8>)
 8001414:	2200      	movs	r2, #0
 8001416:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 9;
 8001418:	4b31      	ldr	r3, [pc, #196]	; (80014e0 <MX_LTDC_Init+0xf8>)
 800141a:	2209      	movs	r2, #9
 800141c:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 1;
 800141e:	4b30      	ldr	r3, [pc, #192]	; (80014e0 <MX_LTDC_Init+0xf8>)
 8001420:	2201      	movs	r2, #1
 8001422:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 29;
 8001424:	4b2e      	ldr	r3, [pc, #184]	; (80014e0 <MX_LTDC_Init+0xf8>)
 8001426:	221d      	movs	r2, #29
 8001428:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 3;
 800142a:	4b2d      	ldr	r3, [pc, #180]	; (80014e0 <MX_LTDC_Init+0xf8>)
 800142c:	2203      	movs	r2, #3
 800142e:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 269;
 8001430:	4b2b      	ldr	r3, [pc, #172]	; (80014e0 <MX_LTDC_Init+0xf8>)
 8001432:	f240 120d 	movw	r2, #269	; 0x10d
 8001436:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 8001438:	4b29      	ldr	r3, [pc, #164]	; (80014e0 <MX_LTDC_Init+0xf8>)
 800143a:	f240 1243 	movw	r2, #323	; 0x143
 800143e:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 279;
 8001440:	4b27      	ldr	r3, [pc, #156]	; (80014e0 <MX_LTDC_Init+0xf8>)
 8001442:	f240 1217 	movw	r2, #279	; 0x117
 8001446:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 327;
 8001448:	4b25      	ldr	r3, [pc, #148]	; (80014e0 <MX_LTDC_Init+0xf8>)
 800144a:	f240 1247 	movw	r2, #327	; 0x147
 800144e:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 8001450:	4b23      	ldr	r3, [pc, #140]	; (80014e0 <MX_LTDC_Init+0xf8>)
 8001452:	2200      	movs	r2, #0
 8001454:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001458:	4b21      	ldr	r3, [pc, #132]	; (80014e0 <MX_LTDC_Init+0xf8>)
 800145a:	2200      	movs	r2, #0
 800145c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 8001460:	4b1f      	ldr	r3, [pc, #124]	; (80014e0 <MX_LTDC_Init+0xf8>)
 8001462:	2200      	movs	r2, #0
 8001464:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001468:	481d      	ldr	r0, [pc, #116]	; (80014e0 <MX_LTDC_Init+0xf8>)
 800146a:	f002 fe15 	bl	8004098 <HAL_LTDC_Init>
 800146e:	4603      	mov	r3, r0
 8001470:	2b00      	cmp	r3, #0
 8001472:	d001      	beq.n	8001478 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 8001474:	f000 fd2c 	bl	8001ed0 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8001478:	2300      	movs	r3, #0
 800147a:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 240;
 800147c:	23f0      	movs	r3, #240	; 0xf0
 800147e:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 8001480:	2300      	movs	r3, #0
 8001482:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 320;
 8001484:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001488:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800148a:	2302      	movs	r3, #2
 800148c:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 800148e:	23ff      	movs	r3, #255	; 0xff
 8001490:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8001492:	2300      	movs	r3, #0
 8001494:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001496:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800149a:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800149c:	2305      	movs	r3, #5
 800149e:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xd0000000;
 80014a0:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
 80014a4:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 240;
 80014a6:	23f0      	movs	r3, #240	; 0xf0
 80014a8:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 320;
 80014aa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80014ae:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 80014b0:	2300      	movs	r3, #0
 80014b2:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 80014b6:	2300      	movs	r3, #0
 80014b8:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 80014bc:	2300      	movs	r3, #0
 80014be:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80014c2:	1d3b      	adds	r3, r7, #4
 80014c4:	2200      	movs	r2, #0
 80014c6:	4619      	mov	r1, r3
 80014c8:	4805      	ldr	r0, [pc, #20]	; (80014e0 <MX_LTDC_Init+0xf8>)
 80014ca:	f002 ff6d 	bl	80043a8 <HAL_LTDC_ConfigLayer>
 80014ce:	4603      	mov	r3, r0
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	d001      	beq.n	80014d8 <MX_LTDC_Init+0xf0>
  {
    Error_Handler();
 80014d4:	f000 fcfc 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 80014d8:	bf00      	nop
 80014da:	3738      	adds	r7, #56	; 0x38
 80014dc:	46bd      	mov	sp, r7
 80014de:	bd80      	pop	{r7, pc}
 80014e0:	2000031c 	.word	0x2000031c
 80014e4:	40016800 	.word	0x40016800

080014e8 <MX_SPI5_Init>:
  * @brief SPI5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI5_Init(void)
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  /* SPI5 parameter configuration*/
  hspi5.Instance = SPI5;
 80014ec:	4bba      	ldr	r3, [pc, #744]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 80014ee:	4abb      	ldr	r2, [pc, #748]	; (80017dc <MX_SPI5_Init+0x2f4>)
 80014f0:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80014f2:	4bb9      	ldr	r3, [pc, #740]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 80014f4:	f44f 7282 	mov.w	r2, #260	; 0x104
 80014f8:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_1LINE;
 80014fa:	4bb7      	ldr	r3, [pc, #732]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 80014fc:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8001500:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001502:	4bb5      	ldr	r3, [pc, #724]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 8001504:	2200      	movs	r2, #0
 8001506:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001508:	4bb3      	ldr	r3, [pc, #716]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 800150a:	2200      	movs	r2, #0
 800150c:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800150e:	4bb2      	ldr	r3, [pc, #712]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 8001510:	2200      	movs	r2, #0
 8001512:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_SOFT;
 8001514:	4bb0      	ldr	r3, [pc, #704]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 8001516:	f44f 7200 	mov.w	r2, #512	; 0x200
 800151a:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800151c:	4bae      	ldr	r3, [pc, #696]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 800151e:	2200      	movs	r2, #0
 8001520:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001522:	4bad      	ldr	r3, [pc, #692]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 8001524:	2200      	movs	r2, #0
 8001526:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001528:	4bab      	ldr	r3, [pc, #684]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 800152a:	2200      	movs	r2, #0
 800152c:	625a      	str	r2, [r3, #36]	; 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800152e:	4baa      	ldr	r3, [pc, #680]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 8001530:	2200      	movs	r2, #0
 8001532:	629a      	str	r2, [r3, #40]	; 0x28
  hspi5.Init.CRCPolynomial = 10;
 8001534:	4ba8      	ldr	r3, [pc, #672]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 8001536:	220a      	movs	r2, #10
 8001538:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800153a:	48a7      	ldr	r0, [pc, #668]	; (80017d8 <MX_SPI5_Init+0x2f0>)
 800153c:	f004 f891 	bl	8005662 <HAL_SPI_Init>
 8001540:	4603      	mov	r3, r0
 8001542:	2b00      	cmp	r3, #0
 8001544:	d001      	beq.n	800154a <MX_SPI5_Init+0x62>
  {
    Error_Handler();
 8001546:	f000 fcc3 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */
  writeReg(0xCA);
 800154a:	20ca      	movs	r0, #202	; 0xca
 800154c:	f000 fc62 	bl	8001e14 <writeReg>
  writeData(0xC3);
 8001550:	20c3      	movs	r0, #195	; 0xc3
 8001552:	f000 fc85 	bl	8001e60 <writeData>
  writeData(0x08);
 8001556:	2008      	movs	r0, #8
 8001558:	f000 fc82 	bl	8001e60 <writeData>
  writeData(0x50);
 800155c:	2050      	movs	r0, #80	; 0x50
 800155e:	f000 fc7f 	bl	8001e60 <writeData>
  writeReg(0xCF);
 8001562:	20cf      	movs	r0, #207	; 0xcf
 8001564:	f000 fc56 	bl	8001e14 <writeReg>
  writeData(0x00);
 8001568:	2000      	movs	r0, #0
 800156a:	f000 fc79 	bl	8001e60 <writeData>
  writeData(0xC1);
 800156e:	20c1      	movs	r0, #193	; 0xc1
 8001570:	f000 fc76 	bl	8001e60 <writeData>
  writeData(0x30);
 8001574:	2030      	movs	r0, #48	; 0x30
 8001576:	f000 fc73 	bl	8001e60 <writeData>
  writeReg(0xED);
 800157a:	20ed      	movs	r0, #237	; 0xed
 800157c:	f000 fc4a 	bl	8001e14 <writeReg>
  writeData(0x64);
 8001580:	2064      	movs	r0, #100	; 0x64
 8001582:	f000 fc6d 	bl	8001e60 <writeData>
  writeData(0x03);
 8001586:	2003      	movs	r0, #3
 8001588:	f000 fc6a 	bl	8001e60 <writeData>
  writeData(0x12);
 800158c:	2012      	movs	r0, #18
 800158e:	f000 fc67 	bl	8001e60 <writeData>
  writeData(0x81);
 8001592:	2081      	movs	r0, #129	; 0x81
 8001594:	f000 fc64 	bl	8001e60 <writeData>
  writeReg(0xE8);
 8001598:	20e8      	movs	r0, #232	; 0xe8
 800159a:	f000 fc3b 	bl	8001e14 <writeReg>
  writeData(0x85);
 800159e:	2085      	movs	r0, #133	; 0x85
 80015a0:	f000 fc5e 	bl	8001e60 <writeData>
  writeData(0x00);
 80015a4:	2000      	movs	r0, #0
 80015a6:	f000 fc5b 	bl	8001e60 <writeData>
  writeData(0x78);
 80015aa:	2078      	movs	r0, #120	; 0x78
 80015ac:	f000 fc58 	bl	8001e60 <writeData>
  writeReg(0xCB);
 80015b0:	20cb      	movs	r0, #203	; 0xcb
 80015b2:	f000 fc2f 	bl	8001e14 <writeReg>
  writeData(0x39);
 80015b6:	2039      	movs	r0, #57	; 0x39
 80015b8:	f000 fc52 	bl	8001e60 <writeData>
  writeData(0x2C);
 80015bc:	202c      	movs	r0, #44	; 0x2c
 80015be:	f000 fc4f 	bl	8001e60 <writeData>
  writeData(0x00);
 80015c2:	2000      	movs	r0, #0
 80015c4:	f000 fc4c 	bl	8001e60 <writeData>
  writeData(0x34);
 80015c8:	2034      	movs	r0, #52	; 0x34
 80015ca:	f000 fc49 	bl	8001e60 <writeData>
  writeData(0x02);
 80015ce:	2002      	movs	r0, #2
 80015d0:	f000 fc46 	bl	8001e60 <writeData>
  writeReg(0xF7);
 80015d4:	20f7      	movs	r0, #247	; 0xf7
 80015d6:	f000 fc1d 	bl	8001e14 <writeReg>
  writeData(0x20);
 80015da:	2020      	movs	r0, #32
 80015dc:	f000 fc40 	bl	8001e60 <writeData>
  writeReg(0xEA);
 80015e0:	20ea      	movs	r0, #234	; 0xea
 80015e2:	f000 fc17 	bl	8001e14 <writeReg>
  writeData(0x00);
 80015e6:	2000      	movs	r0, #0
 80015e8:	f000 fc3a 	bl	8001e60 <writeData>
  writeData(0x00);
 80015ec:	2000      	movs	r0, #0
 80015ee:	f000 fc37 	bl	8001e60 <writeData>
  writeReg(0xB1);
 80015f2:	20b1      	movs	r0, #177	; 0xb1
 80015f4:	f000 fc0e 	bl	8001e14 <writeReg>
  writeData(0x00);
 80015f8:	2000      	movs	r0, #0
 80015fa:	f000 fc31 	bl	8001e60 <writeData>
  writeData(0x1B);
 80015fe:	201b      	movs	r0, #27
 8001600:	f000 fc2e 	bl	8001e60 <writeData>
  writeReg(0xB6);
 8001604:	20b6      	movs	r0, #182	; 0xb6
 8001606:	f000 fc05 	bl	8001e14 <writeReg>
  writeData(0x0A);
 800160a:	200a      	movs	r0, #10
 800160c:	f000 fc28 	bl	8001e60 <writeData>
  writeData(0xA2);
 8001610:	20a2      	movs	r0, #162	; 0xa2
 8001612:	f000 fc25 	bl	8001e60 <writeData>
  writeReg(0xC0);
 8001616:	20c0      	movs	r0, #192	; 0xc0
 8001618:	f000 fbfc 	bl	8001e14 <writeReg>
  writeData(0x10);
 800161c:	2010      	movs	r0, #16
 800161e:	f000 fc1f 	bl	8001e60 <writeData>
  writeReg(0xC1);
 8001622:	20c1      	movs	r0, #193	; 0xc1
 8001624:	f000 fbf6 	bl	8001e14 <writeReg>
  writeData(0x10);
 8001628:	2010      	movs	r0, #16
 800162a:	f000 fc19 	bl	8001e60 <writeData>
  writeReg(0xC5);
 800162e:	20c5      	movs	r0, #197	; 0xc5
 8001630:	f000 fbf0 	bl	8001e14 <writeReg>
  writeData(0x45);
 8001634:	2045      	movs	r0, #69	; 0x45
 8001636:	f000 fc13 	bl	8001e60 <writeData>
  writeData(0x15);
 800163a:	2015      	movs	r0, #21
 800163c:	f000 fc10 	bl	8001e60 <writeData>
  writeReg(0xC7);
 8001640:	20c7      	movs	r0, #199	; 0xc7
 8001642:	f000 fbe7 	bl	8001e14 <writeReg>
  writeData(0x90);
 8001646:	2090      	movs	r0, #144	; 0x90
 8001648:	f000 fc0a 	bl	8001e60 <writeData>
  writeReg(0x36);
 800164c:	2036      	movs	r0, #54	; 0x36
 800164e:	f000 fbe1 	bl	8001e14 <writeReg>
  writeData(0xC8);
 8001652:	20c8      	movs	r0, #200	; 0xc8
 8001654:	f000 fc04 	bl	8001e60 <writeData>
  writeReg(0xF2);
 8001658:	20f2      	movs	r0, #242	; 0xf2
 800165a:	f000 fbdb 	bl	8001e14 <writeReg>
  writeData(0x00);
 800165e:	2000      	movs	r0, #0
 8001660:	f000 fbfe 	bl	8001e60 <writeData>
  writeReg(0xB0);
 8001664:	20b0      	movs	r0, #176	; 0xb0
 8001666:	f000 fbd5 	bl	8001e14 <writeReg>
  writeData(0xC2);
 800166a:	20c2      	movs	r0, #194	; 0xc2
 800166c:	f000 fbf8 	bl	8001e60 <writeData>
  writeReg(0xB6);
 8001670:	20b6      	movs	r0, #182	; 0xb6
 8001672:	f000 fbcf 	bl	8001e14 <writeReg>
  writeData(0x0A);
 8001676:	200a      	movs	r0, #10
 8001678:	f000 fbf2 	bl	8001e60 <writeData>
  writeData(0xA7);
 800167c:	20a7      	movs	r0, #167	; 0xa7
 800167e:	f000 fbef 	bl	8001e60 <writeData>
  writeData(0x27);
 8001682:	2027      	movs	r0, #39	; 0x27
 8001684:	f000 fbec 	bl	8001e60 <writeData>
  writeData(0x04);
 8001688:	2004      	movs	r0, #4
 800168a:	f000 fbe9 	bl	8001e60 <writeData>

  /* Colomn address set */
  writeReg(0x2A);
 800168e:	202a      	movs	r0, #42	; 0x2a
 8001690:	f000 fbc0 	bl	8001e14 <writeReg>
  writeData(0x00);
 8001694:	2000      	movs	r0, #0
 8001696:	f000 fbe3 	bl	8001e60 <writeData>
  writeData(0x00);
 800169a:	2000      	movs	r0, #0
 800169c:	f000 fbe0 	bl	8001e60 <writeData>
  writeData(0x00);
 80016a0:	2000      	movs	r0, #0
 80016a2:	f000 fbdd 	bl	8001e60 <writeData>
  writeData(0xEF);
 80016a6:	20ef      	movs	r0, #239	; 0xef
 80016a8:	f000 fbda 	bl	8001e60 <writeData>
  /* Page address set */
  writeReg(0x2B);
 80016ac:	202b      	movs	r0, #43	; 0x2b
 80016ae:	f000 fbb1 	bl	8001e14 <writeReg>
  writeData(0x00);
 80016b2:	2000      	movs	r0, #0
 80016b4:	f000 fbd4 	bl	8001e60 <writeData>
  writeData(0x00);
 80016b8:	2000      	movs	r0, #0
 80016ba:	f000 fbd1 	bl	8001e60 <writeData>
  writeData(0x01);
 80016be:	2001      	movs	r0, #1
 80016c0:	f000 fbce 	bl	8001e60 <writeData>
  writeData(0x3F);
 80016c4:	203f      	movs	r0, #63	; 0x3f
 80016c6:	f000 fbcb 	bl	8001e60 <writeData>
  writeReg(0xF6);
 80016ca:	20f6      	movs	r0, #246	; 0xf6
 80016cc:	f000 fba2 	bl	8001e14 <writeReg>
  writeData(0x01);
 80016d0:	2001      	movs	r0, #1
 80016d2:	f000 fbc5 	bl	8001e60 <writeData>
  writeData(0x00);
 80016d6:	2000      	movs	r0, #0
 80016d8:	f000 fbc2 	bl	8001e60 <writeData>
  writeData(0x06);
 80016dc:	2006      	movs	r0, #6
 80016de:	f000 fbbf 	bl	8001e60 <writeData>

  writeReg(0x2C);
 80016e2:	202c      	movs	r0, #44	; 0x2c
 80016e4:	f000 fb96 	bl	8001e14 <writeReg>
  HAL_Delay(200);
 80016e8:	20c8      	movs	r0, #200	; 0xc8
 80016ea:	f001 f9f9 	bl	8002ae0 <HAL_Delay>

  writeReg(0x26);
 80016ee:	2026      	movs	r0, #38	; 0x26
 80016f0:	f000 fb90 	bl	8001e14 <writeReg>
  writeData(0x01);
 80016f4:	2001      	movs	r0, #1
 80016f6:	f000 fbb3 	bl	8001e60 <writeData>

  writeReg(0xE0);
 80016fa:	20e0      	movs	r0, #224	; 0xe0
 80016fc:	f000 fb8a 	bl	8001e14 <writeReg>
  writeData(0x0F);
 8001700:	200f      	movs	r0, #15
 8001702:	f000 fbad 	bl	8001e60 <writeData>
  writeData(0x29);
 8001706:	2029      	movs	r0, #41	; 0x29
 8001708:	f000 fbaa 	bl	8001e60 <writeData>
  writeData(0x24);
 800170c:	2024      	movs	r0, #36	; 0x24
 800170e:	f000 fba7 	bl	8001e60 <writeData>
  writeData(0x0C);
 8001712:	200c      	movs	r0, #12
 8001714:	f000 fba4 	bl	8001e60 <writeData>
  writeData(0x0E);
 8001718:	200e      	movs	r0, #14
 800171a:	f000 fba1 	bl	8001e60 <writeData>
  writeData(0x09);
 800171e:	2009      	movs	r0, #9
 8001720:	f000 fb9e 	bl	8001e60 <writeData>
  writeData(0x4E);
 8001724:	204e      	movs	r0, #78	; 0x4e
 8001726:	f000 fb9b 	bl	8001e60 <writeData>
  writeData(0x78);
 800172a:	2078      	movs	r0, #120	; 0x78
 800172c:	f000 fb98 	bl	8001e60 <writeData>
  writeData(0x3C);
 8001730:	203c      	movs	r0, #60	; 0x3c
 8001732:	f000 fb95 	bl	8001e60 <writeData>
  writeData(0x09);
 8001736:	2009      	movs	r0, #9
 8001738:	f000 fb92 	bl	8001e60 <writeData>
  writeData(0x13);
 800173c:	2013      	movs	r0, #19
 800173e:	f000 fb8f 	bl	8001e60 <writeData>
  writeData(0x05);
 8001742:	2005      	movs	r0, #5
 8001744:	f000 fb8c 	bl	8001e60 <writeData>
  writeData(0x17);
 8001748:	2017      	movs	r0, #23
 800174a:	f000 fb89 	bl	8001e60 <writeData>
  writeData(0x11);
 800174e:	2011      	movs	r0, #17
 8001750:	f000 fb86 	bl	8001e60 <writeData>
  writeData(0x00);
 8001754:	2000      	movs	r0, #0
 8001756:	f000 fb83 	bl	8001e60 <writeData>
  writeReg(0xE1);
 800175a:	20e1      	movs	r0, #225	; 0xe1
 800175c:	f000 fb5a 	bl	8001e14 <writeReg>
  writeData(0x00);
 8001760:	2000      	movs	r0, #0
 8001762:	f000 fb7d 	bl	8001e60 <writeData>
  writeData(0x16);
 8001766:	2016      	movs	r0, #22
 8001768:	f000 fb7a 	bl	8001e60 <writeData>
  writeData(0x1B);
 800176c:	201b      	movs	r0, #27
 800176e:	f000 fb77 	bl	8001e60 <writeData>
  writeData(0x04);
 8001772:	2004      	movs	r0, #4
 8001774:	f000 fb74 	bl	8001e60 <writeData>
  writeData(0x11);
 8001778:	2011      	movs	r0, #17
 800177a:	f000 fb71 	bl	8001e60 <writeData>
  writeData(0x07);
 800177e:	2007      	movs	r0, #7
 8001780:	f000 fb6e 	bl	8001e60 <writeData>
  writeData(0x31);
 8001784:	2031      	movs	r0, #49	; 0x31
 8001786:	f000 fb6b 	bl	8001e60 <writeData>
  writeData(0x33);
 800178a:	2033      	movs	r0, #51	; 0x33
 800178c:	f000 fb68 	bl	8001e60 <writeData>
  writeData(0x42);
 8001790:	2042      	movs	r0, #66	; 0x42
 8001792:	f000 fb65 	bl	8001e60 <writeData>
  writeData(0x05);
 8001796:	2005      	movs	r0, #5
 8001798:	f000 fb62 	bl	8001e60 <writeData>
  writeData(0x0C);
 800179c:	200c      	movs	r0, #12
 800179e:	f000 fb5f 	bl	8001e60 <writeData>
  writeData(0x0A);
 80017a2:	200a      	movs	r0, #10
 80017a4:	f000 fb5c 	bl	8001e60 <writeData>
  writeData(0x28);
 80017a8:	2028      	movs	r0, #40	; 0x28
 80017aa:	f000 fb59 	bl	8001e60 <writeData>
  writeData(0x2F);
 80017ae:	202f      	movs	r0, #47	; 0x2f
 80017b0:	f000 fb56 	bl	8001e60 <writeData>
  writeData(0x0F);
 80017b4:	200f      	movs	r0, #15
 80017b6:	f000 fb53 	bl	8001e60 <writeData>

  writeReg(0x11);
 80017ba:	2011      	movs	r0, #17
 80017bc:	f000 fb2a 	bl	8001e14 <writeReg>
  HAL_Delay(200);
 80017c0:	20c8      	movs	r0, #200	; 0xc8
 80017c2:	f001 f98d 	bl	8002ae0 <HAL_Delay>
  writeReg(0x29);
 80017c6:	2029      	movs	r0, #41	; 0x29
 80017c8:	f000 fb24 	bl	8001e14 <writeReg>
  /* GRAM start writing */
  writeReg(0x2C);
 80017cc:	202c      	movs	r0, #44	; 0x2c
 80017ce:	f000 fb21 	bl	8001e14 <writeReg>
  /* USER CODE END SPI5_Init 2 */

}
 80017d2:	bf00      	nop
 80017d4:	bd80      	pop	{r7, pc}
 80017d6:	bf00      	nop
 80017d8:	200003c4 	.word	0x200003c4
 80017dc:	40015000 	.word	0x40015000

080017e0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80017e0:	b580      	push	{r7, lr}
 80017e2:	b086      	sub	sp, #24
 80017e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80017e6:	f107 0308 	add.w	r3, r7, #8
 80017ea:	2200      	movs	r2, #0
 80017ec:	601a      	str	r2, [r3, #0]
 80017ee:	605a      	str	r2, [r3, #4]
 80017f0:	609a      	str	r2, [r3, #8]
 80017f2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017f4:	463b      	mov	r3, r7
 80017f6:	2200      	movs	r2, #0
 80017f8:	601a      	str	r2, [r3, #0]
 80017fa:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80017fc:	4b1e      	ldr	r3, [pc, #120]	; (8001878 <MX_TIM1_Init+0x98>)
 80017fe:	4a1f      	ldr	r2, [pc, #124]	; (800187c <MX_TIM1_Init+0x9c>)
 8001800:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8001802:	4b1d      	ldr	r3, [pc, #116]	; (8001878 <MX_TIM1_Init+0x98>)
 8001804:	2200      	movs	r2, #0
 8001806:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001808:	4b1b      	ldr	r3, [pc, #108]	; (8001878 <MX_TIM1_Init+0x98>)
 800180a:	2200      	movs	r2, #0
 800180c:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 0;
 800180e:	4b1a      	ldr	r3, [pc, #104]	; (8001878 <MX_TIM1_Init+0x98>)
 8001810:	2200      	movs	r2, #0
 8001812:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001814:	4b18      	ldr	r3, [pc, #96]	; (8001878 <MX_TIM1_Init+0x98>)
 8001816:	2200      	movs	r2, #0
 8001818:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800181a:	4b17      	ldr	r3, [pc, #92]	; (8001878 <MX_TIM1_Init+0x98>)
 800181c:	2200      	movs	r2, #0
 800181e:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001820:	4b15      	ldr	r3, [pc, #84]	; (8001878 <MX_TIM1_Init+0x98>)
 8001822:	2200      	movs	r2, #0
 8001824:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001826:	4814      	ldr	r0, [pc, #80]	; (8001878 <MX_TIM1_Init+0x98>)
 8001828:	f004 f960 	bl	8005aec <HAL_TIM_Base_Init>
 800182c:	4603      	mov	r3, r0
 800182e:	2b00      	cmp	r3, #0
 8001830:	d001      	beq.n	8001836 <MX_TIM1_Init+0x56>
  {
    Error_Handler();
 8001832:	f000 fb4d 	bl	8001ed0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001836:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800183a:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 800183c:	f107 0308 	add.w	r3, r7, #8
 8001840:	4619      	mov	r1, r3
 8001842:	480d      	ldr	r0, [pc, #52]	; (8001878 <MX_TIM1_Init+0x98>)
 8001844:	f004 fcd6 	bl	80061f4 <HAL_TIM_ConfigClockSource>
 8001848:	4603      	mov	r3, r0
 800184a:	2b00      	cmp	r3, #0
 800184c:	d001      	beq.n	8001852 <MX_TIM1_Init+0x72>
  {
    Error_Handler();
 800184e:	f000 fb3f 	bl	8001ed0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001852:	2300      	movs	r3, #0
 8001854:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001856:	2300      	movs	r3, #0
 8001858:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800185a:	463b      	mov	r3, r7
 800185c:	4619      	mov	r1, r3
 800185e:	4806      	ldr	r0, [pc, #24]	; (8001878 <MX_TIM1_Init+0x98>)
 8001860:	f005 fa32 	bl	8006cc8 <HAL_TIMEx_MasterConfigSynchronization>
 8001864:	4603      	mov	r3, r0
 8001866:	2b00      	cmp	r3, #0
 8001868:	d001      	beq.n	800186e <MX_TIM1_Init+0x8e>
  {
    Error_Handler();
 800186a:	f000 fb31 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 800186e:	bf00      	nop
 8001870:	3718      	adds	r7, #24
 8001872:	46bd      	mov	sp, r7
 8001874:	bd80      	pop	{r7, pc}
 8001876:	bf00      	nop
 8001878:	2000041c 	.word	0x2000041c
 800187c:	40010000 	.word	0x40010000

08001880 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001880:	b580      	push	{r7, lr}
 8001882:	b08e      	sub	sp, #56	; 0x38
 8001884:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001886:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800188a:	2200      	movs	r2, #0
 800188c:	601a      	str	r2, [r3, #0]
 800188e:	605a      	str	r2, [r3, #4]
 8001890:	609a      	str	r2, [r3, #8]
 8001892:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001894:	f107 0320 	add.w	r3, r7, #32
 8001898:	2200      	movs	r2, #0
 800189a:	601a      	str	r2, [r3, #0]
 800189c:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800189e:	1d3b      	adds	r3, r7, #4
 80018a0:	2200      	movs	r2, #0
 80018a2:	601a      	str	r2, [r3, #0]
 80018a4:	605a      	str	r2, [r3, #4]
 80018a6:	609a      	str	r2, [r3, #8]
 80018a8:	60da      	str	r2, [r3, #12]
 80018aa:	611a      	str	r2, [r3, #16]
 80018ac:	615a      	str	r2, [r3, #20]
 80018ae:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80018b0:	4b2d      	ldr	r3, [pc, #180]	; (8001968 <MX_TIM2_Init+0xe8>)
 80018b2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80018b6:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1;
 80018b8:	4b2b      	ldr	r3, [pc, #172]	; (8001968 <MX_TIM2_Init+0xe8>)
 80018ba:	2201      	movs	r2, #1
 80018bc:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018be:	4b2a      	ldr	r3, [pc, #168]	; (8001968 <MX_TIM2_Init+0xe8>)
 80018c0:	2200      	movs	r2, #0
 80018c2:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1249;
 80018c4:	4b28      	ldr	r3, [pc, #160]	; (8001968 <MX_TIM2_Init+0xe8>)
 80018c6:	f240 42e1 	movw	r2, #1249	; 0x4e1
 80018ca:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80018cc:	4b26      	ldr	r3, [pc, #152]	; (8001968 <MX_TIM2_Init+0xe8>)
 80018ce:	2200      	movs	r2, #0
 80018d0:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018d2:	4b25      	ldr	r3, [pc, #148]	; (8001968 <MX_TIM2_Init+0xe8>)
 80018d4:	2200      	movs	r2, #0
 80018d6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80018d8:	4823      	ldr	r0, [pc, #140]	; (8001968 <MX_TIM2_Init+0xe8>)
 80018da:	f004 f907 	bl	8005aec <HAL_TIM_Base_Init>
 80018de:	4603      	mov	r3, r0
 80018e0:	2b00      	cmp	r3, #0
 80018e2:	d001      	beq.n	80018e8 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80018e4:	f000 faf4 	bl	8001ed0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80018ec:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80018ee:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80018f2:	4619      	mov	r1, r3
 80018f4:	481c      	ldr	r0, [pc, #112]	; (8001968 <MX_TIM2_Init+0xe8>)
 80018f6:	f004 fc7d 	bl	80061f4 <HAL_TIM_ConfigClockSource>
 80018fa:	4603      	mov	r3, r0
 80018fc:	2b00      	cmp	r3, #0
 80018fe:	d001      	beq.n	8001904 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8001900:	f000 fae6 	bl	8001ed0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001904:	4818      	ldr	r0, [pc, #96]	; (8001968 <MX_TIM2_Init+0xe8>)
 8001906:	f004 f940 	bl	8005b8a <HAL_TIM_PWM_Init>
 800190a:	4603      	mov	r3, r0
 800190c:	2b00      	cmp	r3, #0
 800190e:	d001      	beq.n	8001914 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8001910:	f000 fade 	bl	8001ed0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001914:	2300      	movs	r3, #0
 8001916:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001918:	2300      	movs	r3, #0
 800191a:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800191c:	f107 0320 	add.w	r3, r7, #32
 8001920:	4619      	mov	r1, r3
 8001922:	4811      	ldr	r0, [pc, #68]	; (8001968 <MX_TIM2_Init+0xe8>)
 8001924:	f005 f9d0 	bl	8006cc8 <HAL_TIMEx_MasterConfigSynchronization>
 8001928:	4603      	mov	r3, r0
 800192a:	2b00      	cmp	r3, #0
 800192c:	d001      	beq.n	8001932 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 800192e:	f000 facf 	bl	8001ed0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001932:	2360      	movs	r3, #96	; 0x60
 8001934:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 312;
 8001936:	f44f 739c 	mov.w	r3, #312	; 0x138
 800193a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800193c:	2300      	movs	r3, #0
 800193e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001940:	2300      	movs	r3, #0
 8001942:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001944:	1d3b      	adds	r3, r7, #4
 8001946:	2200      	movs	r2, #0
 8001948:	4619      	mov	r1, r3
 800194a:	4807      	ldr	r0, [pc, #28]	; (8001968 <MX_TIM2_Init+0xe8>)
 800194c:	f004 fb8c 	bl	8006068 <HAL_TIM_PWM_ConfigChannel>
 8001950:	4603      	mov	r3, r0
 8001952:	2b00      	cmp	r3, #0
 8001954:	d001      	beq.n	800195a <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8001956:	f000 fabb 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800195a:	4803      	ldr	r0, [pc, #12]	; (8001968 <MX_TIM2_Init+0xe8>)
 800195c:	f000 fd60 	bl	8002420 <HAL_TIM_MspPostInit>

}
 8001960:	bf00      	nop
 8001962:	3738      	adds	r7, #56	; 0x38
 8001964:	46bd      	mov	sp, r7
 8001966:	bd80      	pop	{r7, pc}
 8001968:	2000045c 	.word	0x2000045c

0800196c <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 800196c:	b580      	push	{r7, lr}
 800196e:	b092      	sub	sp, #72	; 0x48
 8001970:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001972:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8001976:	2200      	movs	r2, #0
 8001978:	601a      	str	r2, [r3, #0]
 800197a:	605a      	str	r2, [r3, #4]
 800197c:	609a      	str	r2, [r3, #8]
 800197e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001980:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001984:	2200      	movs	r2, #0
 8001986:	601a      	str	r2, [r3, #0]
 8001988:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 800198a:	f107 0320 	add.w	r3, r7, #32
 800198e:	2200      	movs	r2, #0
 8001990:	601a      	str	r2, [r3, #0]
 8001992:	605a      	str	r2, [r3, #4]
 8001994:	609a      	str	r2, [r3, #8]
 8001996:	60da      	str	r2, [r3, #12]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001998:	1d3b      	adds	r3, r7, #4
 800199a:	2200      	movs	r2, #0
 800199c:	601a      	str	r2, [r3, #0]
 800199e:	605a      	str	r2, [r3, #4]
 80019a0:	609a      	str	r2, [r3, #8]
 80019a2:	60da      	str	r2, [r3, #12]
 80019a4:	611a      	str	r2, [r3, #16]
 80019a6:	615a      	str	r2, [r3, #20]
 80019a8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80019aa:	4b43      	ldr	r3, [pc, #268]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 80019ac:	4a43      	ldr	r2, [pc, #268]	; (8001abc <MX_TIM3_Init+0x150>)
 80019ae:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 179;
 80019b0:	4b41      	ldr	r3, [pc, #260]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 80019b2:	22b3      	movs	r2, #179	; 0xb3
 80019b4:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80019b6:	4b40      	ldr	r3, [pc, #256]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 80019b8:	2200      	movs	r2, #0
 80019ba:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 30000;
 80019bc:	4b3e      	ldr	r3, [pc, #248]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 80019be:	f247 5230 	movw	r2, #30000	; 0x7530
 80019c2:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80019c4:	4b3c      	ldr	r3, [pc, #240]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 80019c6:	2200      	movs	r2, #0
 80019c8:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80019ca:	4b3b      	ldr	r3, [pc, #236]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 80019cc:	2200      	movs	r2, #0
 80019ce:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80019d0:	4839      	ldr	r0, [pc, #228]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 80019d2:	f004 f88b 	bl	8005aec <HAL_TIM_Base_Init>
 80019d6:	4603      	mov	r3, r0
 80019d8:	2b00      	cmp	r3, #0
 80019da:	d001      	beq.n	80019e0 <MX_TIM3_Init+0x74>
  {
    Error_Handler();
 80019dc:	f000 fa78 	bl	8001ed0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80019e0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80019e4:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80019e6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80019ea:	4619      	mov	r1, r3
 80019ec:	4832      	ldr	r0, [pc, #200]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 80019ee:	f004 fc01 	bl	80061f4 <HAL_TIM_ConfigClockSource>
 80019f2:	4603      	mov	r3, r0
 80019f4:	2b00      	cmp	r3, #0
 80019f6:	d001      	beq.n	80019fc <MX_TIM3_Init+0x90>
  {
    Error_Handler();
 80019f8:	f000 fa6a 	bl	8001ed0 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 80019fc:	482e      	ldr	r0, [pc, #184]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 80019fe:	f004 f937 	bl	8005c70 <HAL_TIM_IC_Init>
 8001a02:	4603      	mov	r3, r0
 8001a04:	2b00      	cmp	r3, #0
 8001a06:	d001      	beq.n	8001a0c <MX_TIM3_Init+0xa0>
  {
    Error_Handler();
 8001a08:	f000 fa62 	bl	8001ed0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001a0c:	482a      	ldr	r0, [pc, #168]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 8001a0e:	f004 f8bc 	bl	8005b8a <HAL_TIM_PWM_Init>
 8001a12:	4603      	mov	r3, r0
 8001a14:	2b00      	cmp	r3, #0
 8001a16:	d001      	beq.n	8001a1c <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8001a18:	f000 fa5a 	bl	8001ed0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001a1c:	2300      	movs	r3, #0
 8001a1e:	633b      	str	r3, [r7, #48]	; 0x30
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001a20:	2300      	movs	r3, #0
 8001a22:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001a24:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001a28:	4619      	mov	r1, r3
 8001a2a:	4823      	ldr	r0, [pc, #140]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 8001a2c:	f005 f94c 	bl	8006cc8 <HAL_TIMEx_MasterConfigSynchronization>
 8001a30:	4603      	mov	r3, r0
 8001a32:	2b00      	cmp	r3, #0
 8001a34:	d001      	beq.n	8001a3a <MX_TIM3_Init+0xce>
  {
    Error_Handler();
 8001a36:	f000 fa4b 	bl	8001ed0 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8001a3a:	2300      	movs	r3, #0
 8001a3c:	623b      	str	r3, [r7, #32]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8001a3e:	2301      	movs	r3, #1
 8001a40:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8001a42:	2300      	movs	r3, #0
 8001a44:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigIC.ICFilter = 0;
 8001a46:	2300      	movs	r3, #0
 8001a48:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 8001a4a:	f107 0320 	add.w	r3, r7, #32
 8001a4e:	2200      	movs	r2, #0
 8001a50:	4619      	mov	r1, r3
 8001a52:	4819      	ldr	r0, [pc, #100]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 8001a54:	f004 fa6b 	bl	8005f2e <HAL_TIM_IC_ConfigChannel>
 8001a58:	4603      	mov	r3, r0
 8001a5a:	2b00      	cmp	r3, #0
 8001a5c:	d001      	beq.n	8001a62 <MX_TIM3_Init+0xf6>
  {
    Error_Handler();
 8001a5e:	f000 fa37 	bl	8001ed0 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_FALLING;
 8001a62:	2302      	movs	r3, #2
 8001a64:	623b      	str	r3, [r7, #32]
  sConfigIC.ICSelection = TIM_ICSELECTION_INDIRECTTI;
 8001a66:	2302      	movs	r3, #2
 8001a68:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 8001a6a:	f107 0320 	add.w	r3, r7, #32
 8001a6e:	2204      	movs	r2, #4
 8001a70:	4619      	mov	r1, r3
 8001a72:	4811      	ldr	r0, [pc, #68]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 8001a74:	f004 fa5b 	bl	8005f2e <HAL_TIM_IC_ConfigChannel>
 8001a78:	4603      	mov	r3, r0
 8001a7a:	2b00      	cmp	r3, #0
 8001a7c:	d001      	beq.n	8001a82 <MX_TIM3_Init+0x116>
  {
    Error_Handler();
 8001a7e:	f000 fa27 	bl	8001ed0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001a82:	2360      	movs	r3, #96	; 0x60
 8001a84:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 10;
 8001a86:	230a      	movs	r3, #10
 8001a88:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001a8e:	2300      	movs	r3, #0
 8001a90:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8001a92:	1d3b      	adds	r3, r7, #4
 8001a94:	2208      	movs	r2, #8
 8001a96:	4619      	mov	r1, r3
 8001a98:	4807      	ldr	r0, [pc, #28]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 8001a9a:	f004 fae5 	bl	8006068 <HAL_TIM_PWM_ConfigChannel>
 8001a9e:	4603      	mov	r3, r0
 8001aa0:	2b00      	cmp	r3, #0
 8001aa2:	d001      	beq.n	8001aa8 <MX_TIM3_Init+0x13c>
  {
    Error_Handler();
 8001aa4:	f000 fa14 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8001aa8:	4803      	ldr	r0, [pc, #12]	; (8001ab8 <MX_TIM3_Init+0x14c>)
 8001aaa:	f000 fcb9 	bl	8002420 <HAL_TIM_MspPostInit>

}
 8001aae:	bf00      	nop
 8001ab0:	3748      	adds	r7, #72	; 0x48
 8001ab2:	46bd      	mov	sp, r7
 8001ab4:	bd80      	pop	{r7, pc}
 8001ab6:	bf00      	nop
 8001ab8:	2000049c 	.word	0x2000049c
 8001abc:	40000400 	.word	0x40000400

08001ac0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001ac0:	b580      	push	{r7, lr}
 8001ac2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001ac4:	4b11      	ldr	r3, [pc, #68]	; (8001b0c <MX_USART1_UART_Init+0x4c>)
 8001ac6:	4a12      	ldr	r2, [pc, #72]	; (8001b10 <MX_USART1_UART_Init+0x50>)
 8001ac8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8001aca:	4b10      	ldr	r3, [pc, #64]	; (8001b0c <MX_USART1_UART_Init+0x4c>)
 8001acc:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001ad0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001ad2:	4b0e      	ldr	r3, [pc, #56]	; (8001b0c <MX_USART1_UART_Init+0x4c>)
 8001ad4:	2200      	movs	r2, #0
 8001ad6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001ad8:	4b0c      	ldr	r3, [pc, #48]	; (8001b0c <MX_USART1_UART_Init+0x4c>)
 8001ada:	2200      	movs	r2, #0
 8001adc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001ade:	4b0b      	ldr	r3, [pc, #44]	; (8001b0c <MX_USART1_UART_Init+0x4c>)
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001ae4:	4b09      	ldr	r3, [pc, #36]	; (8001b0c <MX_USART1_UART_Init+0x4c>)
 8001ae6:	220c      	movs	r2, #12
 8001ae8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001aea:	4b08      	ldr	r3, [pc, #32]	; (8001b0c <MX_USART1_UART_Init+0x4c>)
 8001aec:	2200      	movs	r2, #0
 8001aee:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001af0:	4b06      	ldr	r3, [pc, #24]	; (8001b0c <MX_USART1_UART_Init+0x4c>)
 8001af2:	2200      	movs	r2, #0
 8001af4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001af6:	4805      	ldr	r0, [pc, #20]	; (8001b0c <MX_USART1_UART_Init+0x4c>)
 8001af8:	f005 f976 	bl	8006de8 <HAL_UART_Init>
 8001afc:	4603      	mov	r3, r0
 8001afe:	2b00      	cmp	r3, #0
 8001b00:	d001      	beq.n	8001b06 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001b02:	f000 f9e5 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001b06:	bf00      	nop
 8001b08:	bd80      	pop	{r7, pc}
 8001b0a:	bf00      	nop
 8001b0c:	200004dc 	.word	0x200004dc
 8001b10:	40011000 	.word	0x40011000

08001b14 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001b14:	b580      	push	{r7, lr}
 8001b16:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001b18:	4b11      	ldr	r3, [pc, #68]	; (8001b60 <MX_USART2_UART_Init+0x4c>)
 8001b1a:	4a12      	ldr	r2, [pc, #72]	; (8001b64 <MX_USART2_UART_Init+0x50>)
 8001b1c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8001b1e:	4b10      	ldr	r3, [pc, #64]	; (8001b60 <MX_USART2_UART_Init+0x4c>)
 8001b20:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8001b24:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001b26:	4b0e      	ldr	r3, [pc, #56]	; (8001b60 <MX_USART2_UART_Init+0x4c>)
 8001b28:	2200      	movs	r2, #0
 8001b2a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001b2c:	4b0c      	ldr	r3, [pc, #48]	; (8001b60 <MX_USART2_UART_Init+0x4c>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001b32:	4b0b      	ldr	r3, [pc, #44]	; (8001b60 <MX_USART2_UART_Init+0x4c>)
 8001b34:	2200      	movs	r2, #0
 8001b36:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001b38:	4b09      	ldr	r3, [pc, #36]	; (8001b60 <MX_USART2_UART_Init+0x4c>)
 8001b3a:	220c      	movs	r2, #12
 8001b3c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001b3e:	4b08      	ldr	r3, [pc, #32]	; (8001b60 <MX_USART2_UART_Init+0x4c>)
 8001b40:	2200      	movs	r2, #0
 8001b42:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001b44:	4b06      	ldr	r3, [pc, #24]	; (8001b60 <MX_USART2_UART_Init+0x4c>)
 8001b46:	2200      	movs	r2, #0
 8001b48:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001b4a:	4805      	ldr	r0, [pc, #20]	; (8001b60 <MX_USART2_UART_Init+0x4c>)
 8001b4c:	f005 f94c 	bl	8006de8 <HAL_UART_Init>
 8001b50:	4603      	mov	r3, r0
 8001b52:	2b00      	cmp	r3, #0
 8001b54:	d001      	beq.n	8001b5a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8001b56:	f000 f9bb 	bl	8001ed0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001b5a:	bf00      	nop
 8001b5c:	bd80      	pop	{r7, pc}
 8001b5e:	bf00      	nop
 8001b60:	2000051c 	.word	0x2000051c
 8001b64:	40004400 	.word	0x40004400

08001b68 <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 8001b68:	b580      	push	{r7, lr}
 8001b6a:	b088      	sub	sp, #32
 8001b6c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 8001b6e:	1d3b      	adds	r3, r7, #4
 8001b70:	2200      	movs	r2, #0
 8001b72:	601a      	str	r2, [r3, #0]
 8001b74:	605a      	str	r2, [r3, #4]
 8001b76:	609a      	str	r2, [r3, #8]
 8001b78:	60da      	str	r2, [r3, #12]
 8001b7a:	611a      	str	r2, [r3, #16]
 8001b7c:	615a      	str	r2, [r3, #20]
 8001b7e:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001b80:	4b4a      	ldr	r3, [pc, #296]	; (8001cac <MX_FMC_Init+0x144>)
 8001b82:	4a4b      	ldr	r2, [pc, #300]	; (8001cb0 <MX_FMC_Init+0x148>)
 8001b84:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001b86:	4b49      	ldr	r3, [pc, #292]	; (8001cac <MX_FMC_Init+0x144>)
 8001b88:	2201      	movs	r2, #1
 8001b8a:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001b8c:	4b47      	ldr	r3, [pc, #284]	; (8001cac <MX_FMC_Init+0x144>)
 8001b8e:	2200      	movs	r2, #0
 8001b90:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001b92:	4b46      	ldr	r3, [pc, #280]	; (8001cac <MX_FMC_Init+0x144>)
 8001b94:	2204      	movs	r2, #4
 8001b96:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001b98:	4b44      	ldr	r3, [pc, #272]	; (8001cac <MX_FMC_Init+0x144>)
 8001b9a:	2210      	movs	r2, #16
 8001b9c:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001b9e:	4b43      	ldr	r3, [pc, #268]	; (8001cac <MX_FMC_Init+0x144>)
 8001ba0:	2240      	movs	r2, #64	; 0x40
 8001ba2:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001ba4:	4b41      	ldr	r3, [pc, #260]	; (8001cac <MX_FMC_Init+0x144>)
 8001ba6:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001baa:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001bac:	4b3f      	ldr	r3, [pc, #252]	; (8001cac <MX_FMC_Init+0x144>)
 8001bae:	2200      	movs	r2, #0
 8001bb0:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001bb2:	4b3e      	ldr	r3, [pc, #248]	; (8001cac <MX_FMC_Init+0x144>)
 8001bb4:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001bb8:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001bba:	4b3c      	ldr	r3, [pc, #240]	; (8001cac <MX_FMC_Init+0x144>)
 8001bbc:	2200      	movs	r2, #0
 8001bbe:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001bc0:	4b3a      	ldr	r3, [pc, #232]	; (8001cac <MX_FMC_Init+0x144>)
 8001bc2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001bc6:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8001bc8:	2302      	movs	r3, #2
 8001bca:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001bcc:	2307      	movs	r3, #7
 8001bce:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001bd0:	2304      	movs	r3, #4
 8001bd2:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 7;
 8001bd4:	2307      	movs	r3, #7
 8001bd6:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 3;
 8001bd8:	2303      	movs	r3, #3
 8001bda:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8001bdc:	2302      	movs	r3, #2
 8001bde:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 8001be0:	2302      	movs	r3, #2
 8001be2:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001be4:	1d3b      	adds	r3, r7, #4
 8001be6:	4619      	mov	r1, r3
 8001be8:	4830      	ldr	r0, [pc, #192]	; (8001cac <MX_FMC_Init+0x144>)
 8001bea:	f003 fcbb 	bl	8005564 <HAL_SDRAM_Init>
 8001bee:	4603      	mov	r3, r0
 8001bf0:	2b00      	cmp	r3, #0
 8001bf2:	d001      	beq.n	8001bf8 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 8001bf4:	f000 f96c 	bl	8001ed0 <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */
  __IO uint32_t tmpmrd = 0;
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	603b      	str	r3, [r7, #0]

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8001bfc:	4b2d      	ldr	r3, [pc, #180]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001bfe:	2201      	movs	r2, #1
 8001c00:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK2;
 8001c02:	4b2c      	ldr	r3, [pc, #176]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c04:	2208      	movs	r2, #8
 8001c06:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 1;
 8001c08:	4b2a      	ldr	r3, [pc, #168]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c0a:	2201      	movs	r2, #1
 8001c0c:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8001c0e:	4b29      	ldr	r3, [pc, #164]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c10:	2200      	movs	r2, #0
 8001c12:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8001c14:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c18:	4926      	ldr	r1, [pc, #152]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c1a:	4824      	ldr	r0, [pc, #144]	; (8001cac <MX_FMC_Init+0x144>)
 8001c1c:	f003 fcd6 	bl	80055cc <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(100);
 8001c20:	2064      	movs	r0, #100	; 0x64
 8001c22:	f000 ff5d 	bl	8002ae0 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8001c26:	4b23      	ldr	r3, [pc, #140]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c28:	2202      	movs	r2, #2
 8001c2a:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 8001c2c:	4b21      	ldr	r3, [pc, #132]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c2e:	2208      	movs	r2, #8
 8001c30:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 1;
 8001c32:	4b20      	ldr	r3, [pc, #128]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c34:	2201      	movs	r2, #1
 8001c36:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8001c38:	4b1e      	ldr	r3, [pc, #120]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c3a:	2200      	movs	r2, #0
 8001c3c:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8001c3e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c42:	491c      	ldr	r1, [pc, #112]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c44:	4819      	ldr	r0, [pc, #100]	; (8001cac <MX_FMC_Init+0x144>)
 8001c46:	f003 fcc1 	bl	80055cc <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001c4a:	4b1a      	ldr	r3, [pc, #104]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c4c:	2203      	movs	r2, #3
 8001c4e:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 8001c50:	4b18      	ldr	r3, [pc, #96]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c52:	2208      	movs	r2, #8
 8001c54:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 4;
 8001c56:	4b17      	ldr	r3, [pc, #92]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c58:	2204      	movs	r2, #4
 8001c5a:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8001c5c:	4b15      	ldr	r3, [pc, #84]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c5e:	2200      	movs	r2, #0
 8001c60:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8001c62:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c66:	4913      	ldr	r1, [pc, #76]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c68:	4810      	ldr	r0, [pc, #64]	; (8001cac <MX_FMC_Init+0x144>)
 8001c6a:	f003 fcaf 	bl	80055cc <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8001c6e:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001c72:	603b      	str	r3, [r7, #0]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8001c74:	4b0f      	ldr	r3, [pc, #60]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c76:	2204      	movs	r2, #4
 8001c78:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 8001c7a:	4b0e      	ldr	r3, [pc, #56]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c7c:	2208      	movs	r2, #8
 8001c7e:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 1;
 8001c80:	4b0c      	ldr	r3, [pc, #48]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c82:	2201      	movs	r2, #1
 8001c84:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = tmpmrd;
 8001c86:	683b      	ldr	r3, [r7, #0]
 8001c88:	4a0a      	ldr	r2, [pc, #40]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c8a:	60d3      	str	r3, [r2, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8001c8c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c90:	4908      	ldr	r1, [pc, #32]	; (8001cb4 <MX_FMC_Init+0x14c>)
 8001c92:	4806      	ldr	r0, [pc, #24]	; (8001cac <MX_FMC_Init+0x144>)
 8001c94:	f003 fc9a 	bl	80055cc <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 8001c98:	f240 516a 	movw	r1, #1386	; 0x56a
 8001c9c:	4803      	ldr	r0, [pc, #12]	; (8001cac <MX_FMC_Init+0x144>)
 8001c9e:	f003 fcc0 	bl	8005622 <HAL_SDRAM_ProgramRefreshRate>
  /* USER CODE END FMC_Init 2 */
}
 8001ca2:	bf00      	nop
 8001ca4:	3720      	adds	r7, #32
 8001ca6:	46bd      	mov	sp, r7
 8001ca8:	bd80      	pop	{r7, pc}
 8001caa:	bf00      	nop
 8001cac:	2000055c 	.word	0x2000055c
 8001cb0:	a0000140 	.word	0xa0000140
 8001cb4:	20000590 	.word	0x20000590

08001cb8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001cb8:	b580      	push	{r7, lr}
 8001cba:	b08e      	sub	sp, #56	; 0x38
 8001cbc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cbe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	601a      	str	r2, [r3, #0]
 8001cc6:	605a      	str	r2, [r3, #4]
 8001cc8:	609a      	str	r2, [r3, #8]
 8001cca:	60da      	str	r2, [r3, #12]
 8001ccc:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cce:	2300      	movs	r3, #0
 8001cd0:	623b      	str	r3, [r7, #32]
 8001cd2:	4b4d      	ldr	r3, [pc, #308]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001cd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cd6:	4a4c      	ldr	r2, [pc, #304]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001cd8:	f043 0320 	orr.w	r3, r3, #32
 8001cdc:	6313      	str	r3, [r2, #48]	; 0x30
 8001cde:	4b4a      	ldr	r3, [pc, #296]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001ce0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ce2:	f003 0320 	and.w	r3, r3, #32
 8001ce6:	623b      	str	r3, [r7, #32]
 8001ce8:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001cea:	2300      	movs	r3, #0
 8001cec:	61fb      	str	r3, [r7, #28]
 8001cee:	4b46      	ldr	r3, [pc, #280]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001cf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cf2:	4a45      	ldr	r2, [pc, #276]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001cf4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001cf8:	6313      	str	r3, [r2, #48]	; 0x30
 8001cfa:	4b43      	ldr	r3, [pc, #268]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001cfc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cfe:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001d02:	61fb      	str	r3, [r7, #28]
 8001d04:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d06:	2300      	movs	r3, #0
 8001d08:	61bb      	str	r3, [r7, #24]
 8001d0a:	4b3f      	ldr	r3, [pc, #252]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d0e:	4a3e      	ldr	r2, [pc, #248]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d10:	f043 0304 	orr.w	r3, r3, #4
 8001d14:	6313      	str	r3, [r2, #48]	; 0x30
 8001d16:	4b3c      	ldr	r3, [pc, #240]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d1a:	f003 0304 	and.w	r3, r3, #4
 8001d1e:	61bb      	str	r3, [r7, #24]
 8001d20:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d22:	2300      	movs	r3, #0
 8001d24:	617b      	str	r3, [r7, #20]
 8001d26:	4b38      	ldr	r3, [pc, #224]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d2a:	4a37      	ldr	r2, [pc, #220]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d2c:	f043 0301 	orr.w	r3, r3, #1
 8001d30:	6313      	str	r3, [r2, #48]	; 0x30
 8001d32:	4b35      	ldr	r3, [pc, #212]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d36:	f003 0301 	and.w	r3, r3, #1
 8001d3a:	617b      	str	r3, [r7, #20]
 8001d3c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d3e:	2300      	movs	r3, #0
 8001d40:	613b      	str	r3, [r7, #16]
 8001d42:	4b31      	ldr	r3, [pc, #196]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d46:	4a30      	ldr	r2, [pc, #192]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d48:	f043 0302 	orr.w	r3, r3, #2
 8001d4c:	6313      	str	r3, [r2, #48]	; 0x30
 8001d4e:	4b2e      	ldr	r3, [pc, #184]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d52:	f003 0302 	and.w	r3, r3, #2
 8001d56:	613b      	str	r3, [r7, #16]
 8001d58:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d5a:	2300      	movs	r3, #0
 8001d5c:	60fb      	str	r3, [r7, #12]
 8001d5e:	4b2a      	ldr	r3, [pc, #168]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d62:	4a29      	ldr	r2, [pc, #164]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d64:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001d68:	6313      	str	r3, [r2, #48]	; 0x30
 8001d6a:	4b27      	ldr	r3, [pc, #156]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d6e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001d72:	60fb      	str	r3, [r7, #12]
 8001d74:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001d76:	2300      	movs	r3, #0
 8001d78:	60bb      	str	r3, [r7, #8]
 8001d7a:	4b23      	ldr	r3, [pc, #140]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d7e:	4a22      	ldr	r2, [pc, #136]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d80:	f043 0310 	orr.w	r3, r3, #16
 8001d84:	6313      	str	r3, [r2, #48]	; 0x30
 8001d86:	4b20      	ldr	r3, [pc, #128]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d8a:	f003 0310 	and.w	r3, r3, #16
 8001d8e:	60bb      	str	r3, [r7, #8]
 8001d90:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d92:	2300      	movs	r3, #0
 8001d94:	607b      	str	r3, [r7, #4]
 8001d96:	4b1c      	ldr	r3, [pc, #112]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d9a:	4a1b      	ldr	r2, [pc, #108]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001d9c:	f043 0308 	orr.w	r3, r3, #8
 8001da0:	6313      	str	r3, [r2, #48]	; 0x30
 8001da2:	4b19      	ldr	r3, [pc, #100]	; (8001e08 <MX_GPIO_Init+0x150>)
 8001da4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001da6:	f003 0308 	and.w	r3, r3, #8
 8001daa:	607b      	str	r3, [r7, #4]
 8001dac:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 8001dae:	2200      	movs	r2, #0
 8001db0:	2104      	movs	r1, #4
 8001db2:	4816      	ldr	r0, [pc, #88]	; (8001e0c <MX_GPIO_Init+0x154>)
 8001db4:	f002 f956 	bl	8004064 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DCX_GPIO_Port, DCX_Pin, GPIO_PIN_RESET);
 8001db8:	2200      	movs	r2, #0
 8001dba:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001dbe:	4814      	ldr	r0, [pc, #80]	; (8001e10 <MX_GPIO_Init+0x158>)
 8001dc0:	f002 f950 	bl	8004064 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : CSX_Pin */
  GPIO_InitStruct.Pin = CSX_Pin;
 8001dc4:	2304      	movs	r3, #4
 8001dc6:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001dc8:	2301      	movs	r3, #1
 8001dca:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dcc:	2300      	movs	r3, #0
 8001dce:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001dd0:	2300      	movs	r3, #0
 8001dd2:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(CSX_GPIO_Port, &GPIO_InitStruct);
 8001dd4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001dd8:	4619      	mov	r1, r3
 8001dda:	480c      	ldr	r0, [pc, #48]	; (8001e0c <MX_GPIO_Init+0x154>)
 8001ddc:	f001 ff96 	bl	8003d0c <HAL_GPIO_Init>

  /*Configure GPIO pin : DCX_Pin */
  GPIO_InitStruct.Pin = DCX_Pin;
 8001de0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001de4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001de6:	2301      	movs	r3, #1
 8001de8:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dea:	2300      	movs	r3, #0
 8001dec:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001dee:	2300      	movs	r3, #0
 8001df0:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(DCX_GPIO_Port, &GPIO_InitStruct);
 8001df2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001df6:	4619      	mov	r1, r3
 8001df8:	4805      	ldr	r0, [pc, #20]	; (8001e10 <MX_GPIO_Init+0x158>)
 8001dfa:	f001 ff87 	bl	8003d0c <HAL_GPIO_Init>

}
 8001dfe:	bf00      	nop
 8001e00:	3738      	adds	r7, #56	; 0x38
 8001e02:	46bd      	mov	sp, r7
 8001e04:	bd80      	pop	{r7, pc}
 8001e06:	bf00      	nop
 8001e08:	40023800 	.word	0x40023800
 8001e0c:	40020800 	.word	0x40020800
 8001e10:	40020c00 	.word	0x40020c00

08001e14 <writeReg>:

/* USER CODE BEGIN 4 */
void writeReg(uint8_t reg)
{
 8001e14:	b580      	push	{r7, lr}
 8001e16:	b082      	sub	sp, #8
 8001e18:	af00      	add	r7, sp, #0
 8001e1a:	4603      	mov	r3, r0
 8001e1c:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(DCX_GPIO_Port, DCX_Pin, GPIO_PIN_RESET);
 8001e1e:	2200      	movs	r2, #0
 8001e20:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e24:	480b      	ldr	r0, [pc, #44]	; (8001e54 <writeReg+0x40>)
 8001e26:	f002 f91d 	bl	8004064 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 8001e2a:	2200      	movs	r2, #0
 8001e2c:	2104      	movs	r1, #4
 8001e2e:	480a      	ldr	r0, [pc, #40]	; (8001e58 <writeReg+0x44>)
 8001e30:	f002 f918 	bl	8004064 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &reg, 1, 10);
 8001e34:	1df9      	adds	r1, r7, #7
 8001e36:	230a      	movs	r3, #10
 8001e38:	2201      	movs	r2, #1
 8001e3a:	4808      	ldr	r0, [pc, #32]	; (8001e5c <writeReg+0x48>)
 8001e3c:	f003 fc75 	bl	800572a <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_SET);
 8001e40:	2201      	movs	r2, #1
 8001e42:	2104      	movs	r1, #4
 8001e44:	4804      	ldr	r0, [pc, #16]	; (8001e58 <writeReg+0x44>)
 8001e46:	f002 f90d 	bl	8004064 <HAL_GPIO_WritePin>
}
 8001e4a:	bf00      	nop
 8001e4c:	3708      	adds	r7, #8
 8001e4e:	46bd      	mov	sp, r7
 8001e50:	bd80      	pop	{r7, pc}
 8001e52:	bf00      	nop
 8001e54:	40020c00 	.word	0x40020c00
 8001e58:	40020800 	.word	0x40020800
 8001e5c:	200003c4 	.word	0x200003c4

08001e60 <writeData>:

void writeData(uint8_t data)
{
 8001e60:	b580      	push	{r7, lr}
 8001e62:	b082      	sub	sp, #8
 8001e64:	af00      	add	r7, sp, #0
 8001e66:	4603      	mov	r3, r0
 8001e68:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(DCX_GPIO_Port, DCX_Pin, GPIO_PIN_SET);
 8001e6a:	2201      	movs	r2, #1
 8001e6c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e70:	480b      	ldr	r0, [pc, #44]	; (8001ea0 <writeData+0x40>)
 8001e72:	f002 f8f7 	bl	8004064 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 8001e76:	2200      	movs	r2, #0
 8001e78:	2104      	movs	r1, #4
 8001e7a:	480a      	ldr	r0, [pc, #40]	; (8001ea4 <writeData+0x44>)
 8001e7c:	f002 f8f2 	bl	8004064 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &data, 1, 10);
 8001e80:	1df9      	adds	r1, r7, #7
 8001e82:	230a      	movs	r3, #10
 8001e84:	2201      	movs	r2, #1
 8001e86:	4808      	ldr	r0, [pc, #32]	; (8001ea8 <writeData+0x48>)
 8001e88:	f003 fc4f 	bl	800572a <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_SET);
 8001e8c:	2201      	movs	r2, #1
 8001e8e:	2104      	movs	r1, #4
 8001e90:	4804      	ldr	r0, [pc, #16]	; (8001ea4 <writeData+0x44>)
 8001e92:	f002 f8e7 	bl	8004064 <HAL_GPIO_WritePin>
}
 8001e96:	bf00      	nop
 8001e98:	3708      	adds	r7, #8
 8001e9a:	46bd      	mov	sp, r7
 8001e9c:	bd80      	pop	{r7, pc}
 8001e9e:	bf00      	nop
 8001ea0:	40020c00 	.word	0x40020c00
 8001ea4:	40020800 	.word	0x40020800
 8001ea8:	200003c4 	.word	0x200003c4

08001eac <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001eac:	b580      	push	{r7, lr}
 8001eae:	b082      	sub	sp, #8
 8001eb0:	af00      	add	r7, sp, #0
 8001eb2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	4a04      	ldr	r2, [pc, #16]	; (8001ecc <HAL_TIM_PeriodElapsedCallback+0x20>)
 8001eba:	4293      	cmp	r3, r2
 8001ebc:	d101      	bne.n	8001ec2 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8001ebe:	f000 fdef 	bl	8002aa0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001ec2:	bf00      	nop
 8001ec4:	3708      	adds	r7, #8
 8001ec6:	46bd      	mov	sp, r7
 8001ec8:	bd80      	pop	{r7, pc}
 8001eca:	bf00      	nop
 8001ecc:	40001000 	.word	0x40001000

08001ed0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001ed0:	b480      	push	{r7}
 8001ed2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001ed4:	bf00      	nop
 8001ed6:	46bd      	mov	sp, r7
 8001ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001edc:	4770      	bx	lr
	...

08001ee0 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001ee0:	b480      	push	{r7}
 8001ee2:	b083      	sub	sp, #12
 8001ee4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ee6:	2300      	movs	r3, #0
 8001ee8:	607b      	str	r3, [r7, #4]
 8001eea:	4b10      	ldr	r3, [pc, #64]	; (8001f2c <HAL_MspInit+0x4c>)
 8001eec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001eee:	4a0f      	ldr	r2, [pc, #60]	; (8001f2c <HAL_MspInit+0x4c>)
 8001ef0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001ef4:	6453      	str	r3, [r2, #68]	; 0x44
 8001ef6:	4b0d      	ldr	r3, [pc, #52]	; (8001f2c <HAL_MspInit+0x4c>)
 8001ef8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001efa:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001efe:	607b      	str	r3, [r7, #4]
 8001f00:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001f02:	2300      	movs	r3, #0
 8001f04:	603b      	str	r3, [r7, #0]
 8001f06:	4b09      	ldr	r3, [pc, #36]	; (8001f2c <HAL_MspInit+0x4c>)
 8001f08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f0a:	4a08      	ldr	r2, [pc, #32]	; (8001f2c <HAL_MspInit+0x4c>)
 8001f0c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001f10:	6413      	str	r3, [r2, #64]	; 0x40
 8001f12:	4b06      	ldr	r3, [pc, #24]	; (8001f2c <HAL_MspInit+0x4c>)
 8001f14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f16:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001f1a:	603b      	str	r3, [r7, #0]
 8001f1c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001f1e:	bf00      	nop
 8001f20:	370c      	adds	r7, #12
 8001f22:	46bd      	mov	sp, r7
 8001f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f28:	4770      	bx	lr
 8001f2a:	bf00      	nop
 8001f2c:	40023800 	.word	0x40023800

08001f30 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001f30:	b580      	push	{r7, lr}
 8001f32:	b08a      	sub	sp, #40	; 0x28
 8001f34:	af00      	add	r7, sp, #0
 8001f36:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f38:	f107 0314 	add.w	r3, r7, #20
 8001f3c:	2200      	movs	r2, #0
 8001f3e:	601a      	str	r2, [r3, #0]
 8001f40:	605a      	str	r2, [r3, #4]
 8001f42:	609a      	str	r2, [r3, #8]
 8001f44:	60da      	str	r2, [r3, #12]
 8001f46:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	4a17      	ldr	r2, [pc, #92]	; (8001fac <HAL_ADC_MspInit+0x7c>)
 8001f4e:	4293      	cmp	r3, r2
 8001f50:	d127      	bne.n	8001fa2 <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001f52:	2300      	movs	r3, #0
 8001f54:	613b      	str	r3, [r7, #16]
 8001f56:	4b16      	ldr	r3, [pc, #88]	; (8001fb0 <HAL_ADC_MspInit+0x80>)
 8001f58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f5a:	4a15      	ldr	r2, [pc, #84]	; (8001fb0 <HAL_ADC_MspInit+0x80>)
 8001f5c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001f60:	6453      	str	r3, [r2, #68]	; 0x44
 8001f62:	4b13      	ldr	r3, [pc, #76]	; (8001fb0 <HAL_ADC_MspInit+0x80>)
 8001f64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f66:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001f6a:	613b      	str	r3, [r7, #16]
 8001f6c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f6e:	2300      	movs	r3, #0
 8001f70:	60fb      	str	r3, [r7, #12]
 8001f72:	4b0f      	ldr	r3, [pc, #60]	; (8001fb0 <HAL_ADC_MspInit+0x80>)
 8001f74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f76:	4a0e      	ldr	r2, [pc, #56]	; (8001fb0 <HAL_ADC_MspInit+0x80>)
 8001f78:	f043 0301 	orr.w	r3, r3, #1
 8001f7c:	6313      	str	r3, [r2, #48]	; 0x30
 8001f7e:	4b0c      	ldr	r3, [pc, #48]	; (8001fb0 <HAL_ADC_MspInit+0x80>)
 8001f80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f82:	f003 0301 	and.w	r3, r3, #1
 8001f86:	60fb      	str	r3, [r7, #12]
 8001f88:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA2     ------> ADC1_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001f8a:	2304      	movs	r3, #4
 8001f8c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001f8e:	2303      	movs	r3, #3
 8001f90:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f92:	2300      	movs	r3, #0
 8001f94:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f96:	f107 0314 	add.w	r3, r7, #20
 8001f9a:	4619      	mov	r1, r3
 8001f9c:	4805      	ldr	r0, [pc, #20]	; (8001fb4 <HAL_ADC_MspInit+0x84>)
 8001f9e:	f001 feb5 	bl	8003d0c <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001fa2:	bf00      	nop
 8001fa4:	3728      	adds	r7, #40	; 0x28
 8001fa6:	46bd      	mov	sp, r7
 8001fa8:	bd80      	pop	{r7, pc}
 8001faa:	bf00      	nop
 8001fac:	40012000 	.word	0x40012000
 8001fb0:	40023800 	.word	0x40023800
 8001fb4:	40020000 	.word	0x40020000

08001fb8 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001fb8:	b480      	push	{r7}
 8001fba:	b085      	sub	sp, #20
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	4a0b      	ldr	r2, [pc, #44]	; (8001ff4 <HAL_CRC_MspInit+0x3c>)
 8001fc6:	4293      	cmp	r3, r2
 8001fc8:	d10d      	bne.n	8001fe6 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001fca:	2300      	movs	r3, #0
 8001fcc:	60fb      	str	r3, [r7, #12]
 8001fce:	4b0a      	ldr	r3, [pc, #40]	; (8001ff8 <HAL_CRC_MspInit+0x40>)
 8001fd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fd2:	4a09      	ldr	r2, [pc, #36]	; (8001ff8 <HAL_CRC_MspInit+0x40>)
 8001fd4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001fd8:	6313      	str	r3, [r2, #48]	; 0x30
 8001fda:	4b07      	ldr	r3, [pc, #28]	; (8001ff8 <HAL_CRC_MspInit+0x40>)
 8001fdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fde:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001fe2:	60fb      	str	r3, [r7, #12]
 8001fe4:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001fe6:	bf00      	nop
 8001fe8:	3714      	adds	r7, #20
 8001fea:	46bd      	mov	sp, r7
 8001fec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ff0:	4770      	bx	lr
 8001ff2:	bf00      	nop
 8001ff4:	40023000 	.word	0x40023000
 8001ff8:	40023800 	.word	0x40023800

08001ffc <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001ffc:	b580      	push	{r7, lr}
 8001ffe:	b084      	sub	sp, #16
 8002000:	af00      	add	r7, sp, #0
 8002002:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	4a0e      	ldr	r2, [pc, #56]	; (8002044 <HAL_DMA2D_MspInit+0x48>)
 800200a:	4293      	cmp	r3, r2
 800200c:	d115      	bne.n	800203a <HAL_DMA2D_MspInit+0x3e>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800200e:	2300      	movs	r3, #0
 8002010:	60fb      	str	r3, [r7, #12]
 8002012:	4b0d      	ldr	r3, [pc, #52]	; (8002048 <HAL_DMA2D_MspInit+0x4c>)
 8002014:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002016:	4a0c      	ldr	r2, [pc, #48]	; (8002048 <HAL_DMA2D_MspInit+0x4c>)
 8002018:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800201c:	6313      	str	r3, [r2, #48]	; 0x30
 800201e:	4b0a      	ldr	r3, [pc, #40]	; (8002048 <HAL_DMA2D_MspInit+0x4c>)
 8002020:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002022:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002026:	60fb      	str	r3, [r7, #12]
 8002028:	68fb      	ldr	r3, [r7, #12]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800202a:	2200      	movs	r2, #0
 800202c:	2105      	movs	r1, #5
 800202e:	205a      	movs	r0, #90	; 0x5a
 8002030:	f001 fa20 	bl	8003474 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002034:	205a      	movs	r0, #90	; 0x5a
 8002036:	f001 fa39 	bl	80034ac <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 800203a:	bf00      	nop
 800203c:	3710      	adds	r7, #16
 800203e:	46bd      	mov	sp, r7
 8002040:	bd80      	pop	{r7, pc}
 8002042:	bf00      	nop
 8002044:	4002b000 	.word	0x4002b000
 8002048:	40023800 	.word	0x40023800

0800204c <HAL_DMA2D_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
 800204c:	b580      	push	{r7, lr}
 800204e:	b082      	sub	sp, #8
 8002050:	af00      	add	r7, sp, #0
 8002052:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8002054:	687b      	ldr	r3, [r7, #4]
 8002056:	681b      	ldr	r3, [r3, #0]
 8002058:	4a07      	ldr	r2, [pc, #28]	; (8002078 <HAL_DMA2D_MspDeInit+0x2c>)
 800205a:	4293      	cmp	r3, r2
 800205c:	d108      	bne.n	8002070 <HAL_DMA2D_MspDeInit+0x24>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 800205e:	4b07      	ldr	r3, [pc, #28]	; (800207c <HAL_DMA2D_MspDeInit+0x30>)
 8002060:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002062:	4a06      	ldr	r2, [pc, #24]	; (800207c <HAL_DMA2D_MspDeInit+0x30>)
 8002064:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002068:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 800206a:	205a      	movs	r0, #90	; 0x5a
 800206c:	f001 fa2c 	bl	80034c8 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8002070:	bf00      	nop
 8002072:	3708      	adds	r7, #8
 8002074:	46bd      	mov	sp, r7
 8002076:	bd80      	pop	{r7, pc}
 8002078:	4002b000 	.word	0x4002b000
 800207c:	40023800 	.word	0x40023800

08002080 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002080:	b580      	push	{r7, lr}
 8002082:	b08e      	sub	sp, #56	; 0x38
 8002084:	af00      	add	r7, sp, #0
 8002086:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002088:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800208c:	2200      	movs	r2, #0
 800208e:	601a      	str	r2, [r3, #0]
 8002090:	605a      	str	r2, [r3, #4]
 8002092:	609a      	str	r2, [r3, #8]
 8002094:	60da      	str	r2, [r3, #12]
 8002096:	611a      	str	r2, [r3, #16]
  if(hltdc->Instance==LTDC)
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	4a7b      	ldr	r2, [pc, #492]	; (800228c <HAL_LTDC_MspInit+0x20c>)
 800209e:	4293      	cmp	r3, r2
 80020a0:	f040 80ef 	bne.w	8002282 <HAL_LTDC_MspInit+0x202>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80020a4:	2300      	movs	r3, #0
 80020a6:	623b      	str	r3, [r7, #32]
 80020a8:	4b79      	ldr	r3, [pc, #484]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020ac:	4a78      	ldr	r2, [pc, #480]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020ae:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80020b2:	6453      	str	r3, [r2, #68]	; 0x44
 80020b4:	4b76      	ldr	r3, [pc, #472]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020b8:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80020bc:	623b      	str	r3, [r7, #32]
 80020be:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 80020c0:	2300      	movs	r3, #0
 80020c2:	61fb      	str	r3, [r7, #28]
 80020c4:	4b72      	ldr	r3, [pc, #456]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020c8:	4a71      	ldr	r2, [pc, #452]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020ca:	f043 0320 	orr.w	r3, r3, #32
 80020ce:	6313      	str	r3, [r2, #48]	; 0x30
 80020d0:	4b6f      	ldr	r3, [pc, #444]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020d4:	f003 0320 	and.w	r3, r3, #32
 80020d8:	61fb      	str	r3, [r7, #28]
 80020da:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80020dc:	2300      	movs	r3, #0
 80020de:	61bb      	str	r3, [r7, #24]
 80020e0:	4b6b      	ldr	r3, [pc, #428]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020e4:	4a6a      	ldr	r2, [pc, #424]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020e6:	f043 0301 	orr.w	r3, r3, #1
 80020ea:	6313      	str	r3, [r2, #48]	; 0x30
 80020ec:	4b68      	ldr	r3, [pc, #416]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020f0:	f003 0301 	and.w	r3, r3, #1
 80020f4:	61bb      	str	r3, [r7, #24]
 80020f6:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80020f8:	2300      	movs	r3, #0
 80020fa:	617b      	str	r3, [r7, #20]
 80020fc:	4b64      	ldr	r3, [pc, #400]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 80020fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002100:	4a63      	ldr	r2, [pc, #396]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 8002102:	f043 0302 	orr.w	r3, r3, #2
 8002106:	6313      	str	r3, [r2, #48]	; 0x30
 8002108:	4b61      	ldr	r3, [pc, #388]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 800210a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800210c:	f003 0302 	and.w	r3, r3, #2
 8002110:	617b      	str	r3, [r7, #20]
 8002112:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002114:	2300      	movs	r3, #0
 8002116:	613b      	str	r3, [r7, #16]
 8002118:	4b5d      	ldr	r3, [pc, #372]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 800211a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800211c:	4a5c      	ldr	r2, [pc, #368]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 800211e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002122:	6313      	str	r3, [r2, #48]	; 0x30
 8002124:	4b5a      	ldr	r3, [pc, #360]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 8002126:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002128:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800212c:	613b      	str	r3, [r7, #16]
 800212e:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002130:	2300      	movs	r3, #0
 8002132:	60fb      	str	r3, [r7, #12]
 8002134:	4b56      	ldr	r3, [pc, #344]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 8002136:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002138:	4a55      	ldr	r2, [pc, #340]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 800213a:	f043 0304 	orr.w	r3, r3, #4
 800213e:	6313      	str	r3, [r2, #48]	; 0x30
 8002140:	4b53      	ldr	r3, [pc, #332]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 8002142:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002144:	f003 0304 	and.w	r3, r3, #4
 8002148:	60fb      	str	r3, [r7, #12]
 800214a:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800214c:	2300      	movs	r3, #0
 800214e:	60bb      	str	r3, [r7, #8]
 8002150:	4b4f      	ldr	r3, [pc, #316]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 8002152:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002154:	4a4e      	ldr	r2, [pc, #312]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 8002156:	f043 0308 	orr.w	r3, r3, #8
 800215a:	6313      	str	r3, [r2, #48]	; 0x30
 800215c:	4b4c      	ldr	r3, [pc, #304]	; (8002290 <HAL_LTDC_MspInit+0x210>)
 800215e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002160:	f003 0308 	and.w	r3, r3, #8
 8002164:	60bb      	str	r3, [r7, #8]
 8002166:	68bb      	ldr	r3, [r7, #8]
    PG11     ------> LTDC_B3
    PG12     ------> LTDC_B4
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002168:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800216c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800216e:	2302      	movs	r3, #2
 8002170:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002172:	2300      	movs	r3, #0
 8002174:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002176:	2300      	movs	r3, #0
 8002178:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800217a:	230e      	movs	r3, #14
 800217c:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800217e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002182:	4619      	mov	r1, r3
 8002184:	4843      	ldr	r0, [pc, #268]	; (8002294 <HAL_LTDC_MspInit+0x214>)
 8002186:	f001 fdc1 	bl	8003d0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800218a:	f641 0358 	movw	r3, #6232	; 0x1858
 800218e:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002190:	2302      	movs	r3, #2
 8002192:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002194:	2300      	movs	r3, #0
 8002196:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002198:	2300      	movs	r3, #0
 800219a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800219c:	230e      	movs	r3, #14
 800219e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021a0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021a4:	4619      	mov	r1, r3
 80021a6:	483c      	ldr	r0, [pc, #240]	; (8002298 <HAL_LTDC_MspInit+0x218>)
 80021a8:	f001 fdb0 	bl	8003d0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80021ac:	2303      	movs	r3, #3
 80021ae:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021b0:	2302      	movs	r3, #2
 80021b2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021b4:	2300      	movs	r3, #0
 80021b6:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021b8:	2300      	movs	r3, #0
 80021ba:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80021bc:	2309      	movs	r3, #9
 80021be:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80021c0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021c4:	4619      	mov	r1, r3
 80021c6:	4835      	ldr	r0, [pc, #212]	; (800229c <HAL_LTDC_MspInit+0x21c>)
 80021c8:	f001 fda0 	bl	8003d0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80021cc:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 80021d0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021d2:	2302      	movs	r3, #2
 80021d4:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021d6:	2300      	movs	r3, #0
 80021d8:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021da:	2300      	movs	r3, #0
 80021dc:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80021de:	230e      	movs	r3, #14
 80021e0:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80021e2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021e6:	4619      	mov	r1, r3
 80021e8:	482c      	ldr	r0, [pc, #176]	; (800229c <HAL_LTDC_MspInit+0x21c>)
 80021ea:	f001 fd8f 	bl	8003d0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80021ee:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
 80021f2:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021f4:	2302      	movs	r3, #2
 80021f6:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021f8:	2300      	movs	r3, #0
 80021fa:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021fc:	2300      	movs	r3, #0
 80021fe:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002200:	230e      	movs	r3, #14
 8002202:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002204:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002208:	4619      	mov	r1, r3
 800220a:	4825      	ldr	r0, [pc, #148]	; (80022a0 <HAL_LTDC_MspInit+0x220>)
 800220c:	f001 fd7e 	bl	8003d0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002210:	23c0      	movs	r3, #192	; 0xc0
 8002212:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002214:	2302      	movs	r3, #2
 8002216:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002218:	2300      	movs	r3, #0
 800221a:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800221c:	2300      	movs	r3, #0
 800221e:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002220:	230e      	movs	r3, #14
 8002222:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002224:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002228:	4619      	mov	r1, r3
 800222a:	481e      	ldr	r0, [pc, #120]	; (80022a4 <HAL_LTDC_MspInit+0x224>)
 800222c:	f001 fd6e 	bl	8003d0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002230:	2308      	movs	r3, #8
 8002232:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002234:	2302      	movs	r3, #2
 8002236:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002238:	2300      	movs	r3, #0
 800223a:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800223c:	2300      	movs	r3, #0
 800223e:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002240:	230e      	movs	r3, #14
 8002242:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002244:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002248:	4619      	mov	r1, r3
 800224a:	4817      	ldr	r0, [pc, #92]	; (80022a8 <HAL_LTDC_MspInit+0x228>)
 800224c:	f001 fd5e 	bl	8003d0c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002250:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002254:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002256:	2302      	movs	r3, #2
 8002258:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800225a:	2300      	movs	r3, #0
 800225c:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800225e:	2300      	movs	r3, #0
 8002260:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002262:	2309      	movs	r3, #9
 8002264:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002266:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800226a:	4619      	mov	r1, r3
 800226c:	480c      	ldr	r0, [pc, #48]	; (80022a0 <HAL_LTDC_MspInit+0x220>)
 800226e:	f001 fd4d 	bl	8003d0c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002272:	2200      	movs	r2, #0
 8002274:	2105      	movs	r1, #5
 8002276:	2058      	movs	r0, #88	; 0x58
 8002278:	f001 f8fc 	bl	8003474 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800227c:	2058      	movs	r0, #88	; 0x58
 800227e:	f001 f915 	bl	80034ac <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002282:	bf00      	nop
 8002284:	3738      	adds	r7, #56	; 0x38
 8002286:	46bd      	mov	sp, r7
 8002288:	bd80      	pop	{r7, pc}
 800228a:	bf00      	nop
 800228c:	40016800 	.word	0x40016800
 8002290:	40023800 	.word	0x40023800
 8002294:	40021400 	.word	0x40021400
 8002298:	40020000 	.word	0x40020000
 800229c:	40020400 	.word	0x40020400
 80022a0:	40021800 	.word	0x40021800
 80022a4:	40020800 	.word	0x40020800
 80022a8:	40020c00 	.word	0x40020c00

080022ac <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80022ac:	b580      	push	{r7, lr}
 80022ae:	b08a      	sub	sp, #40	; 0x28
 80022b0:	af00      	add	r7, sp, #0
 80022b2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80022b4:	f107 0314 	add.w	r3, r7, #20
 80022b8:	2200      	movs	r2, #0
 80022ba:	601a      	str	r2, [r3, #0]
 80022bc:	605a      	str	r2, [r3, #4]
 80022be:	609a      	str	r2, [r3, #8]
 80022c0:	60da      	str	r2, [r3, #12]
 80022c2:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI5)
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	681b      	ldr	r3, [r3, #0]
 80022c8:	4a19      	ldr	r2, [pc, #100]	; (8002330 <HAL_SPI_MspInit+0x84>)
 80022ca:	4293      	cmp	r3, r2
 80022cc:	d12c      	bne.n	8002328 <HAL_SPI_MspInit+0x7c>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80022ce:	2300      	movs	r3, #0
 80022d0:	613b      	str	r3, [r7, #16]
 80022d2:	4b18      	ldr	r3, [pc, #96]	; (8002334 <HAL_SPI_MspInit+0x88>)
 80022d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80022d6:	4a17      	ldr	r2, [pc, #92]	; (8002334 <HAL_SPI_MspInit+0x88>)
 80022d8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80022dc:	6453      	str	r3, [r2, #68]	; 0x44
 80022de:	4b15      	ldr	r3, [pc, #84]	; (8002334 <HAL_SPI_MspInit+0x88>)
 80022e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80022e2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80022e6:	613b      	str	r3, [r7, #16]
 80022e8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 80022ea:	2300      	movs	r3, #0
 80022ec:	60fb      	str	r3, [r7, #12]
 80022ee:	4b11      	ldr	r3, [pc, #68]	; (8002334 <HAL_SPI_MspInit+0x88>)
 80022f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022f2:	4a10      	ldr	r2, [pc, #64]	; (8002334 <HAL_SPI_MspInit+0x88>)
 80022f4:	f043 0320 	orr.w	r3, r3, #32
 80022f8:	6313      	str	r3, [r2, #48]	; 0x30
 80022fa:	4b0e      	ldr	r3, [pc, #56]	; (8002334 <HAL_SPI_MspInit+0x88>)
 80022fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022fe:	f003 0320 	and.w	r3, r3, #32
 8002302:	60fb      	str	r3, [r7, #12]
 8002304:	68fb      	ldr	r3, [r7, #12]
    /**SPI5 GPIO Configuration
    PF7     ------> SPI5_SCK
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_9;
 8002306:	f44f 7320 	mov.w	r3, #640	; 0x280
 800230a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800230c:	2302      	movs	r3, #2
 800230e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002310:	2300      	movs	r3, #0
 8002312:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002314:	2303      	movs	r3, #3
 8002316:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002318:	2305      	movs	r3, #5
 800231a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800231c:	f107 0314 	add.w	r3, r7, #20
 8002320:	4619      	mov	r1, r3
 8002322:	4805      	ldr	r0, [pc, #20]	; (8002338 <HAL_SPI_MspInit+0x8c>)
 8002324:	f001 fcf2 	bl	8003d0c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002328:	bf00      	nop
 800232a:	3728      	adds	r7, #40	; 0x28
 800232c:	46bd      	mov	sp, r7
 800232e:	bd80      	pop	{r7, pc}
 8002330:	40015000 	.word	0x40015000
 8002334:	40023800 	.word	0x40023800
 8002338:	40021400 	.word	0x40021400

0800233c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 800233c:	b580      	push	{r7, lr}
 800233e:	b08c      	sub	sp, #48	; 0x30
 8002340:	af00      	add	r7, sp, #0
 8002342:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002344:	f107 031c 	add.w	r3, r7, #28
 8002348:	2200      	movs	r2, #0
 800234a:	601a      	str	r2, [r3, #0]
 800234c:	605a      	str	r2, [r3, #4]
 800234e:	609a      	str	r2, [r3, #8]
 8002350:	60da      	str	r2, [r3, #12]
 8002352:	611a      	str	r2, [r3, #16]
  if(htim_base->Instance==TIM1)
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	681b      	ldr	r3, [r3, #0]
 8002358:	4a2d      	ldr	r2, [pc, #180]	; (8002410 <HAL_TIM_Base_MspInit+0xd4>)
 800235a:	4293      	cmp	r3, r2
 800235c:	d10e      	bne.n	800237c <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800235e:	2300      	movs	r3, #0
 8002360:	61bb      	str	r3, [r7, #24]
 8002362:	4b2c      	ldr	r3, [pc, #176]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 8002364:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002366:	4a2b      	ldr	r2, [pc, #172]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 8002368:	f043 0301 	orr.w	r3, r3, #1
 800236c:	6453      	str	r3, [r2, #68]	; 0x44
 800236e:	4b29      	ldr	r3, [pc, #164]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 8002370:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002372:	f003 0301 	and.w	r3, r3, #1
 8002376:	61bb      	str	r3, [r7, #24]
 8002378:	69bb      	ldr	r3, [r7, #24]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 800237a:	e044      	b.n	8002406 <HAL_TIM_Base_MspInit+0xca>
  else if(htim_base->Instance==TIM2)
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002384:	d10e      	bne.n	80023a4 <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002386:	2300      	movs	r3, #0
 8002388:	617b      	str	r3, [r7, #20]
 800238a:	4b22      	ldr	r3, [pc, #136]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 800238c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800238e:	4a21      	ldr	r2, [pc, #132]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 8002390:	f043 0301 	orr.w	r3, r3, #1
 8002394:	6413      	str	r3, [r2, #64]	; 0x40
 8002396:	4b1f      	ldr	r3, [pc, #124]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 8002398:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800239a:	f003 0301 	and.w	r3, r3, #1
 800239e:	617b      	str	r3, [r7, #20]
 80023a0:	697b      	ldr	r3, [r7, #20]
}
 80023a2:	e030      	b.n	8002406 <HAL_TIM_Base_MspInit+0xca>
  else if(htim_base->Instance==TIM3)
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	4a1b      	ldr	r2, [pc, #108]	; (8002418 <HAL_TIM_Base_MspInit+0xdc>)
 80023aa:	4293      	cmp	r3, r2
 80023ac:	d12b      	bne.n	8002406 <HAL_TIM_Base_MspInit+0xca>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80023ae:	2300      	movs	r3, #0
 80023b0:	613b      	str	r3, [r7, #16]
 80023b2:	4b18      	ldr	r3, [pc, #96]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 80023b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023b6:	4a17      	ldr	r2, [pc, #92]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 80023b8:	f043 0302 	orr.w	r3, r3, #2
 80023bc:	6413      	str	r3, [r2, #64]	; 0x40
 80023be:	4b15      	ldr	r3, [pc, #84]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 80023c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023c2:	f003 0302 	and.w	r3, r3, #2
 80023c6:	613b      	str	r3, [r7, #16]
 80023c8:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80023ca:	2300      	movs	r3, #0
 80023cc:	60fb      	str	r3, [r7, #12]
 80023ce:	4b11      	ldr	r3, [pc, #68]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 80023d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023d2:	4a10      	ldr	r2, [pc, #64]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 80023d4:	f043 0302 	orr.w	r3, r3, #2
 80023d8:	6313      	str	r3, [r2, #48]	; 0x30
 80023da:	4b0e      	ldr	r3, [pc, #56]	; (8002414 <HAL_TIM_Base_MspInit+0xd8>)
 80023dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023de:	f003 0302 	and.w	r3, r3, #2
 80023e2:	60fb      	str	r3, [r7, #12]
 80023e4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 80023e6:	2310      	movs	r3, #16
 80023e8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023ea:	2302      	movs	r3, #2
 80023ec:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023ee:	2300      	movs	r3, #0
 80023f0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80023f2:	2300      	movs	r3, #0
 80023f4:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80023f6:	2302      	movs	r3, #2
 80023f8:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023fa:	f107 031c 	add.w	r3, r7, #28
 80023fe:	4619      	mov	r1, r3
 8002400:	4806      	ldr	r0, [pc, #24]	; (800241c <HAL_TIM_Base_MspInit+0xe0>)
 8002402:	f001 fc83 	bl	8003d0c <HAL_GPIO_Init>
}
 8002406:	bf00      	nop
 8002408:	3730      	adds	r7, #48	; 0x30
 800240a:	46bd      	mov	sp, r7
 800240c:	bd80      	pop	{r7, pc}
 800240e:	bf00      	nop
 8002410:	40010000 	.word	0x40010000
 8002414:	40023800 	.word	0x40023800
 8002418:	40000400 	.word	0x40000400
 800241c:	40020400 	.word	0x40020400

08002420 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002420:	b580      	push	{r7, lr}
 8002422:	b08a      	sub	sp, #40	; 0x28
 8002424:	af00      	add	r7, sp, #0
 8002426:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002428:	f107 0314 	add.w	r3, r7, #20
 800242c:	2200      	movs	r2, #0
 800242e:	601a      	str	r2, [r3, #0]
 8002430:	605a      	str	r2, [r3, #4]
 8002432:	609a      	str	r2, [r3, #8]
 8002434:	60da      	str	r2, [r3, #12]
 8002436:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002440:	d11e      	bne.n	8002480 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002442:	2300      	movs	r3, #0
 8002444:	613b      	str	r3, [r7, #16]
 8002446:	4b22      	ldr	r3, [pc, #136]	; (80024d0 <HAL_TIM_MspPostInit+0xb0>)
 8002448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800244a:	4a21      	ldr	r2, [pc, #132]	; (80024d0 <HAL_TIM_MspPostInit+0xb0>)
 800244c:	f043 0301 	orr.w	r3, r3, #1
 8002450:	6313      	str	r3, [r2, #48]	; 0x30
 8002452:	4b1f      	ldr	r3, [pc, #124]	; (80024d0 <HAL_TIM_MspPostInit+0xb0>)
 8002454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002456:	f003 0301 	and.w	r3, r3, #1
 800245a:	613b      	str	r3, [r7, #16]
 800245c:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA5     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 800245e:	2320      	movs	r3, #32
 8002460:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002462:	2302      	movs	r3, #2
 8002464:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002466:	2300      	movs	r3, #0
 8002468:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800246a:	2300      	movs	r3, #0
 800246c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 800246e:	2301      	movs	r3, #1
 8002470:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002472:	f107 0314 	add.w	r3, r7, #20
 8002476:	4619      	mov	r1, r3
 8002478:	4816      	ldr	r0, [pc, #88]	; (80024d4 <HAL_TIM_MspPostInit+0xb4>)
 800247a:	f001 fc47 	bl	8003d0c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 800247e:	e023      	b.n	80024c8 <HAL_TIM_MspPostInit+0xa8>
  else if(htim->Instance==TIM3)
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	681b      	ldr	r3, [r3, #0]
 8002484:	4a14      	ldr	r2, [pc, #80]	; (80024d8 <HAL_TIM_MspPostInit+0xb8>)
 8002486:	4293      	cmp	r3, r2
 8002488:	d11e      	bne.n	80024c8 <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800248a:	2300      	movs	r3, #0
 800248c:	60fb      	str	r3, [r7, #12]
 800248e:	4b10      	ldr	r3, [pc, #64]	; (80024d0 <HAL_TIM_MspPostInit+0xb0>)
 8002490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002492:	4a0f      	ldr	r2, [pc, #60]	; (80024d0 <HAL_TIM_MspPostInit+0xb0>)
 8002494:	f043 0304 	orr.w	r3, r3, #4
 8002498:	6313      	str	r3, [r2, #48]	; 0x30
 800249a:	4b0d      	ldr	r3, [pc, #52]	; (80024d0 <HAL_TIM_MspPostInit+0xb0>)
 800249c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800249e:	f003 0304 	and.w	r3, r3, #4
 80024a2:	60fb      	str	r3, [r7, #12]
 80024a4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80024a6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80024aa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024ac:	2302      	movs	r3, #2
 80024ae:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024b0:	2300      	movs	r3, #0
 80024b2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80024b4:	2300      	movs	r3, #0
 80024b6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80024b8:	2302      	movs	r3, #2
 80024ba:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80024bc:	f107 0314 	add.w	r3, r7, #20
 80024c0:	4619      	mov	r1, r3
 80024c2:	4806      	ldr	r0, [pc, #24]	; (80024dc <HAL_TIM_MspPostInit+0xbc>)
 80024c4:	f001 fc22 	bl	8003d0c <HAL_GPIO_Init>
}
 80024c8:	bf00      	nop
 80024ca:	3728      	adds	r7, #40	; 0x28
 80024cc:	46bd      	mov	sp, r7
 80024ce:	bd80      	pop	{r7, pc}
 80024d0:	40023800 	.word	0x40023800
 80024d4:	40020000 	.word	0x40020000
 80024d8:	40000400 	.word	0x40000400
 80024dc:	40020800 	.word	0x40020800

080024e0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80024e0:	b580      	push	{r7, lr}
 80024e2:	b08c      	sub	sp, #48	; 0x30
 80024e4:	af00      	add	r7, sp, #0
 80024e6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024e8:	f107 031c 	add.w	r3, r7, #28
 80024ec:	2200      	movs	r2, #0
 80024ee:	601a      	str	r2, [r3, #0]
 80024f0:	605a      	str	r2, [r3, #4]
 80024f2:	609a      	str	r2, [r3, #8]
 80024f4:	60da      	str	r2, [r3, #12]
 80024f6:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	681b      	ldr	r3, [r3, #0]
 80024fc:	4a32      	ldr	r2, [pc, #200]	; (80025c8 <HAL_UART_MspInit+0xe8>)
 80024fe:	4293      	cmp	r3, r2
 8002500:	d12d      	bne.n	800255e <HAL_UART_MspInit+0x7e>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002502:	2300      	movs	r3, #0
 8002504:	61bb      	str	r3, [r7, #24]
 8002506:	4b31      	ldr	r3, [pc, #196]	; (80025cc <HAL_UART_MspInit+0xec>)
 8002508:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800250a:	4a30      	ldr	r2, [pc, #192]	; (80025cc <HAL_UART_MspInit+0xec>)
 800250c:	f043 0310 	orr.w	r3, r3, #16
 8002510:	6453      	str	r3, [r2, #68]	; 0x44
 8002512:	4b2e      	ldr	r3, [pc, #184]	; (80025cc <HAL_UART_MspInit+0xec>)
 8002514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002516:	f003 0310 	and.w	r3, r3, #16
 800251a:	61bb      	str	r3, [r7, #24]
 800251c:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800251e:	2300      	movs	r3, #0
 8002520:	617b      	str	r3, [r7, #20]
 8002522:	4b2a      	ldr	r3, [pc, #168]	; (80025cc <HAL_UART_MspInit+0xec>)
 8002524:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002526:	4a29      	ldr	r2, [pc, #164]	; (80025cc <HAL_UART_MspInit+0xec>)
 8002528:	f043 0301 	orr.w	r3, r3, #1
 800252c:	6313      	str	r3, [r2, #48]	; 0x30
 800252e:	4b27      	ldr	r3, [pc, #156]	; (80025cc <HAL_UART_MspInit+0xec>)
 8002530:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002532:	f003 0301 	and.w	r3, r3, #1
 8002536:	617b      	str	r3, [r7, #20]
 8002538:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800253a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800253e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002540:	2302      	movs	r3, #2
 8002542:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002544:	2300      	movs	r3, #0
 8002546:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002548:	2303      	movs	r3, #3
 800254a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 800254c:	2307      	movs	r3, #7
 800254e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002550:	f107 031c 	add.w	r3, r7, #28
 8002554:	4619      	mov	r1, r3
 8002556:	481e      	ldr	r0, [pc, #120]	; (80025d0 <HAL_UART_MspInit+0xf0>)
 8002558:	f001 fbd8 	bl	8003d0c <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800255c:	e030      	b.n	80025c0 <HAL_UART_MspInit+0xe0>
  else if(huart->Instance==USART2)
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	681b      	ldr	r3, [r3, #0]
 8002562:	4a1c      	ldr	r2, [pc, #112]	; (80025d4 <HAL_UART_MspInit+0xf4>)
 8002564:	4293      	cmp	r3, r2
 8002566:	d12b      	bne.n	80025c0 <HAL_UART_MspInit+0xe0>
    __HAL_RCC_USART2_CLK_ENABLE();
 8002568:	2300      	movs	r3, #0
 800256a:	613b      	str	r3, [r7, #16]
 800256c:	4b17      	ldr	r3, [pc, #92]	; (80025cc <HAL_UART_MspInit+0xec>)
 800256e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002570:	4a16      	ldr	r2, [pc, #88]	; (80025cc <HAL_UART_MspInit+0xec>)
 8002572:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002576:	6413      	str	r3, [r2, #64]	; 0x40
 8002578:	4b14      	ldr	r3, [pc, #80]	; (80025cc <HAL_UART_MspInit+0xec>)
 800257a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800257c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002580:	613b      	str	r3, [r7, #16]
 8002582:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002584:	2300      	movs	r3, #0
 8002586:	60fb      	str	r3, [r7, #12]
 8002588:	4b10      	ldr	r3, [pc, #64]	; (80025cc <HAL_UART_MspInit+0xec>)
 800258a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800258c:	4a0f      	ldr	r2, [pc, #60]	; (80025cc <HAL_UART_MspInit+0xec>)
 800258e:	f043 0308 	orr.w	r3, r3, #8
 8002592:	6313      	str	r3, [r2, #48]	; 0x30
 8002594:	4b0d      	ldr	r3, [pc, #52]	; (80025cc <HAL_UART_MspInit+0xec>)
 8002596:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002598:	f003 0308 	and.w	r3, r3, #8
 800259c:	60fb      	str	r3, [r7, #12]
 800259e:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80025a0:	2360      	movs	r3, #96	; 0x60
 80025a2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025a4:	2302      	movs	r3, #2
 80025a6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025a8:	2300      	movs	r3, #0
 80025aa:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025ac:	2303      	movs	r3, #3
 80025ae:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80025b0:	2307      	movs	r3, #7
 80025b2:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025b4:	f107 031c 	add.w	r3, r7, #28
 80025b8:	4619      	mov	r1, r3
 80025ba:	4807      	ldr	r0, [pc, #28]	; (80025d8 <HAL_UART_MspInit+0xf8>)
 80025bc:	f001 fba6 	bl	8003d0c <HAL_GPIO_Init>
}
 80025c0:	bf00      	nop
 80025c2:	3730      	adds	r7, #48	; 0x30
 80025c4:	46bd      	mov	sp, r7
 80025c6:	bd80      	pop	{r7, pc}
 80025c8:	40011000 	.word	0x40011000
 80025cc:	40023800 	.word	0x40023800
 80025d0:	40020000 	.word	0x40020000
 80025d4:	40004400 	.word	0x40004400
 80025d8:	40020c00 	.word	0x40020c00

080025dc <HAL_FMC_MspInit>:

}

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 80025dc:	b580      	push	{r7, lr}
 80025de:	b086      	sub	sp, #24
 80025e0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80025e2:	1d3b      	adds	r3, r7, #4
 80025e4:	2200      	movs	r2, #0
 80025e6:	601a      	str	r2, [r3, #0]
 80025e8:	605a      	str	r2, [r3, #4]
 80025ea:	609a      	str	r2, [r3, #8]
 80025ec:	60da      	str	r2, [r3, #12]
 80025ee:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 80025f0:	4b3b      	ldr	r3, [pc, #236]	; (80026e0 <HAL_FMC_MspInit+0x104>)
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	d16f      	bne.n	80026d8 <HAL_FMC_MspInit+0xfc>
    return;
  }
  FMC_Initialized = 1;
 80025f8:	4b39      	ldr	r3, [pc, #228]	; (80026e0 <HAL_FMC_MspInit+0x104>)
 80025fa:	2201      	movs	r2, #1
 80025fc:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 80025fe:	2300      	movs	r3, #0
 8002600:	603b      	str	r3, [r7, #0]
 8002602:	4b38      	ldr	r3, [pc, #224]	; (80026e4 <HAL_FMC_MspInit+0x108>)
 8002604:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002606:	4a37      	ldr	r2, [pc, #220]	; (80026e4 <HAL_FMC_MspInit+0x108>)
 8002608:	f043 0301 	orr.w	r3, r3, #1
 800260c:	6393      	str	r3, [r2, #56]	; 0x38
 800260e:	4b35      	ldr	r3, [pc, #212]	; (80026e4 <HAL_FMC_MspInit+0x108>)
 8002610:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002612:	f003 0301 	and.w	r3, r3, #1
 8002616:	603b      	str	r3, [r7, #0]
 8002618:	683b      	ldr	r3, [r7, #0]
  PB5   ------> FMC_SDCKE1
  PB6   ------> FMC_SDNE1
  PE0   ------> FMC_NBL0
  PE1   ------> FMC_NBL1
  */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800261a:	f64f 033f 	movw	r3, #63551	; 0xf83f
 800261e:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002620:	2302      	movs	r3, #2
 8002622:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002624:	2300      	movs	r3, #0
 8002626:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002628:	2303      	movs	r3, #3
 800262a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800262c:	230c      	movs	r3, #12
 800262e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002630:	1d3b      	adds	r3, r7, #4
 8002632:	4619      	mov	r1, r3
 8002634:	482c      	ldr	r0, [pc, #176]	; (80026e8 <HAL_FMC_MspInit+0x10c>)
 8002636:	f001 fb69 	bl	8003d0c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800263a:	2301      	movs	r3, #1
 800263c:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800263e:	2302      	movs	r3, #2
 8002640:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002642:	2300      	movs	r3, #0
 8002644:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002646:	2303      	movs	r3, #3
 8002648:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800264a:	230c      	movs	r3, #12
 800264c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800264e:	1d3b      	adds	r3, r7, #4
 8002650:	4619      	mov	r1, r3
 8002652:	4826      	ldr	r0, [pc, #152]	; (80026ec <HAL_FMC_MspInit+0x110>)
 8002654:	f001 fb5a 	bl	8003d0c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002658:	f248 1333 	movw	r3, #33075	; 0x8133
 800265c:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_8|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800265e:	2302      	movs	r3, #2
 8002660:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002662:	2300      	movs	r3, #0
 8002664:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002666:	2303      	movs	r3, #3
 8002668:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800266a:	230c      	movs	r3, #12
 800266c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800266e:	1d3b      	adds	r3, r7, #4
 8002670:	4619      	mov	r1, r3
 8002672:	481f      	ldr	r0, [pc, #124]	; (80026f0 <HAL_FMC_MspInit+0x114>)
 8002674:	f001 fb4a 	bl	8003d0c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002678:	f64f 7383 	movw	r3, #65411	; 0xff83
 800267c:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800267e:	2302      	movs	r3, #2
 8002680:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002682:	2300      	movs	r3, #0
 8002684:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002686:	2303      	movs	r3, #3
 8002688:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800268a:	230c      	movs	r3, #12
 800268c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800268e:	1d3b      	adds	r3, r7, #4
 8002690:	4619      	mov	r1, r3
 8002692:	4818      	ldr	r0, [pc, #96]	; (80026f4 <HAL_FMC_MspInit+0x118>)
 8002694:	f001 fb3a 	bl	8003d0c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002698:	f24c 7303 	movw	r3, #50947	; 0xc703
 800269c:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800269e:	2302      	movs	r3, #2
 80026a0:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026a2:	2300      	movs	r3, #0
 80026a4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026a6:	2303      	movs	r3, #3
 80026a8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026aa:	230c      	movs	r3, #12
 80026ac:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026ae:	1d3b      	adds	r3, r7, #4
 80026b0:	4619      	mov	r1, r3
 80026b2:	4811      	ldr	r0, [pc, #68]	; (80026f8 <HAL_FMC_MspInit+0x11c>)
 80026b4:	f001 fb2a 	bl	8003d0c <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80026b8:	2360      	movs	r3, #96	; 0x60
 80026ba:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026bc:	2302      	movs	r3, #2
 80026be:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026c0:	2300      	movs	r3, #0
 80026c2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026c4:	2303      	movs	r3, #3
 80026c6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026c8:	230c      	movs	r3, #12
 80026ca:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026cc:	1d3b      	adds	r3, r7, #4
 80026ce:	4619      	mov	r1, r3
 80026d0:	480a      	ldr	r0, [pc, #40]	; (80026fc <HAL_FMC_MspInit+0x120>)
 80026d2:	f001 fb1b 	bl	8003d0c <HAL_GPIO_Init>
 80026d6:	e000      	b.n	80026da <HAL_FMC_MspInit+0xfe>
    return;
 80026d8:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 80026da:	3718      	adds	r7, #24
 80026dc:	46bd      	mov	sp, r7
 80026de:	bd80      	pop	{r7, pc}
 80026e0:	200005d0 	.word	0x200005d0
 80026e4:	40023800 	.word	0x40023800
 80026e8:	40021400 	.word	0x40021400
 80026ec:	40020800 	.word	0x40020800
 80026f0:	40021800 	.word	0x40021800
 80026f4:	40021000 	.word	0x40021000
 80026f8:	40020c00 	.word	0x40020c00
 80026fc:	40020400 	.word	0x40020400

08002700 <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002700:	b580      	push	{r7, lr}
 8002702:	b082      	sub	sp, #8
 8002704:	af00      	add	r7, sp, #0
 8002706:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8002708:	f7ff ff68 	bl	80025dc <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800270c:	bf00      	nop
 800270e:	3708      	adds	r7, #8
 8002710:	46bd      	mov	sp, r7
 8002712:	bd80      	pop	{r7, pc}

08002714 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002714:	b580      	push	{r7, lr}
 8002716:	b08c      	sub	sp, #48	; 0x30
 8002718:	af00      	add	r7, sp, #0
 800271a:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
 800271c:	2300      	movs	r3, #0
 800271e:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t              uwPrescalerValue = 0;
 8002720:	2300      	movs	r3, #0
 8002722:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8002724:	2200      	movs	r2, #0
 8002726:	6879      	ldr	r1, [r7, #4]
 8002728:	2036      	movs	r0, #54	; 0x36
 800272a:	f000 fea3 	bl	8003474 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800272e:	2036      	movs	r0, #54	; 0x36
 8002730:	f000 febc 	bl	80034ac <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002734:	2300      	movs	r3, #0
 8002736:	60fb      	str	r3, [r7, #12]
 8002738:	4b1f      	ldr	r3, [pc, #124]	; (80027b8 <HAL_InitTick+0xa4>)
 800273a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800273c:	4a1e      	ldr	r2, [pc, #120]	; (80027b8 <HAL_InitTick+0xa4>)
 800273e:	f043 0310 	orr.w	r3, r3, #16
 8002742:	6413      	str	r3, [r2, #64]	; 0x40
 8002744:	4b1c      	ldr	r3, [pc, #112]	; (80027b8 <HAL_InitTick+0xa4>)
 8002746:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002748:	f003 0310 	and.w	r3, r3, #16
 800274c:	60fb      	str	r3, [r7, #12]
 800274e:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002750:	f107 0210 	add.w	r2, r7, #16
 8002754:	f107 0314 	add.w	r3, r7, #20
 8002758:	4611      	mov	r1, r2
 800275a:	4618      	mov	r0, r3
 800275c:	f002 fd10 	bl	8005180 <HAL_RCC_GetClockConfig>

  /* Compute TIM6 clock */
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8002760:	f002 fce6 	bl	8005130 <HAL_RCC_GetPCLK1Freq>
 8002764:	4603      	mov	r3, r0
 8002766:	005b      	lsls	r3, r3, #1
 8002768:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 800276a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800276c:	4a13      	ldr	r2, [pc, #76]	; (80027bc <HAL_InitTick+0xa8>)
 800276e:	fba2 2303 	umull	r2, r3, r2, r3
 8002772:	0c9b      	lsrs	r3, r3, #18
 8002774:	3b01      	subs	r3, #1
 8002776:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002778:	4b11      	ldr	r3, [pc, #68]	; (80027c0 <HAL_InitTick+0xac>)
 800277a:	4a12      	ldr	r2, [pc, #72]	; (80027c4 <HAL_InitTick+0xb0>)
 800277c:	601a      	str	r2, [r3, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 800277e:	4b10      	ldr	r3, [pc, #64]	; (80027c0 <HAL_InitTick+0xac>)
 8002780:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002784:	60da      	str	r2, [r3, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
 8002786:	4a0e      	ldr	r2, [pc, #56]	; (80027c0 <HAL_InitTick+0xac>)
 8002788:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800278a:	6053      	str	r3, [r2, #4]
  htim6.Init.ClockDivision = 0;
 800278c:	4b0c      	ldr	r3, [pc, #48]	; (80027c0 <HAL_InitTick+0xac>)
 800278e:	2200      	movs	r2, #0
 8002790:	611a      	str	r2, [r3, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002792:	4b0b      	ldr	r3, [pc, #44]	; (80027c0 <HAL_InitTick+0xac>)
 8002794:	2200      	movs	r2, #0
 8002796:	609a      	str	r2, [r3, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8002798:	4809      	ldr	r0, [pc, #36]	; (80027c0 <HAL_InitTick+0xac>)
 800279a:	f003 f9a7 	bl	8005aec <HAL_TIM_Base_Init>
 800279e:	4603      	mov	r3, r0
 80027a0:	2b00      	cmp	r3, #0
 80027a2:	d104      	bne.n	80027ae <HAL_InitTick+0x9a>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80027a4:	4806      	ldr	r0, [pc, #24]	; (80027c0 <HAL_InitTick+0xac>)
 80027a6:	f003 f9cc 	bl	8005b42 <HAL_TIM_Base_Start_IT>
 80027aa:	4603      	mov	r3, r0
 80027ac:	e000      	b.n	80027b0 <HAL_InitTick+0x9c>
  }

  /* Return function status */
  return HAL_ERROR;
 80027ae:	2301      	movs	r3, #1
}
 80027b0:	4618      	mov	r0, r3
 80027b2:	3730      	adds	r7, #48	; 0x30
 80027b4:	46bd      	mov	sp, r7
 80027b6:	bd80      	pop	{r7, pc}
 80027b8:	40023800 	.word	0x40023800
 80027bc:	431bde83 	.word	0x431bde83
 80027c0:	200005d4 	.word	0x200005d4
 80027c4:	40001000 	.word	0x40001000

080027c8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80027c8:	b480      	push	{r7}
 80027ca:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80027cc:	bf00      	nop
 80027ce:	46bd      	mov	sp, r7
 80027d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d4:	4770      	bx	lr

080027d6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80027d6:	b480      	push	{r7}
 80027d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80027da:	e7fe      	b.n	80027da <HardFault_Handler+0x4>

080027dc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80027dc:	b480      	push	{r7}
 80027de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80027e0:	e7fe      	b.n	80027e0 <MemManage_Handler+0x4>

080027e2 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80027e2:	b480      	push	{r7}
 80027e4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80027e6:	e7fe      	b.n	80027e6 <BusFault_Handler+0x4>

080027e8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80027e8:	b480      	push	{r7}
 80027ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80027ec:	e7fe      	b.n	80027ec <UsageFault_Handler+0x4>

080027ee <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80027ee:	b480      	push	{r7}
 80027f0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80027f2:	bf00      	nop
 80027f4:	46bd      	mov	sp, r7
 80027f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027fa:	4770      	bx	lr

080027fc <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80027fc:	b480      	push	{r7}
 80027fe:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002800:	bf00      	nop
 8002802:	46bd      	mov	sp, r7
 8002804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002808:	4770      	bx	lr

0800280a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800280a:	b480      	push	{r7}
 800280c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800280e:	bf00      	nop
 8002810:	46bd      	mov	sp, r7
 8002812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002816:	4770      	bx	lr

08002818 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002818:	b480      	push	{r7}
 800281a:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800281c:	bf00      	nop
 800281e:	46bd      	mov	sp, r7
 8002820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002824:	4770      	bx	lr
	...

08002828 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 8002828:	b580      	push	{r7, lr}
 800282a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800282c:	4802      	ldr	r0, [pc, #8]	; (8002838 <TIM6_DAC_IRQHandler+0x10>)
 800282e:	f003 fa76 	bl	8005d1e <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8002832:	bf00      	nop
 8002834:	bd80      	pop	{r7, pc}
 8002836:	bf00      	nop
 8002838:	200005d4 	.word	0x200005d4

0800283c <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 800283c:	b580      	push	{r7, lr}
 800283e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002840:	4802      	ldr	r0, [pc, #8]	; (800284c <LTDC_IRQHandler+0x10>)
 8002842:	f001 fcf9 	bl	8004238 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 8002846:	bf00      	nop
 8002848:	bd80      	pop	{r7, pc}
 800284a:	bf00      	nop
 800284c:	2000031c 	.word	0x2000031c

08002850 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 8002850:	b580      	push	{r7, lr}
 8002852:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002854:	4802      	ldr	r0, [pc, #8]	; (8002860 <DMA2D_IRQHandler+0x10>)
 8002856:	f001 f81a 	bl	800388e <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 800285a:	bf00      	nop
 800285c:	bd80      	pop	{r7, pc}
 800285e:	bf00      	nop
 8002860:	200002dc 	.word	0x200002dc

08002864 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002864:	b480      	push	{r7}
 8002866:	af00      	add	r7, sp, #0
	return 1;
 8002868:	2301      	movs	r3, #1
}
 800286a:	4618      	mov	r0, r3
 800286c:	46bd      	mov	sp, r7
 800286e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002872:	4770      	bx	lr

08002874 <_kill>:

int _kill(int pid, int sig)
{
 8002874:	b580      	push	{r7, lr}
 8002876:	b082      	sub	sp, #8
 8002878:	af00      	add	r7, sp, #0
 800287a:	6078      	str	r0, [r7, #4]
 800287c:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800287e:	f019 f897 	bl	801b9b0 <__errno>
 8002882:	4603      	mov	r3, r0
 8002884:	2216      	movs	r2, #22
 8002886:	601a      	str	r2, [r3, #0]
	return -1;
 8002888:	f04f 33ff 	mov.w	r3, #4294967295
}
 800288c:	4618      	mov	r0, r3
 800288e:	3708      	adds	r7, #8
 8002890:	46bd      	mov	sp, r7
 8002892:	bd80      	pop	{r7, pc}

08002894 <_exit>:

void _exit (int status)
{
 8002894:	b580      	push	{r7, lr}
 8002896:	b082      	sub	sp, #8
 8002898:	af00      	add	r7, sp, #0
 800289a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800289c:	f04f 31ff 	mov.w	r1, #4294967295
 80028a0:	6878      	ldr	r0, [r7, #4]
 80028a2:	f7ff ffe7 	bl	8002874 <_kill>
	while (1) {}		/* Make sure we hang here */
 80028a6:	e7fe      	b.n	80028a6 <_exit+0x12>

080028a8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80028a8:	b580      	push	{r7, lr}
 80028aa:	b086      	sub	sp, #24
 80028ac:	af00      	add	r7, sp, #0
 80028ae:	60f8      	str	r0, [r7, #12]
 80028b0:	60b9      	str	r1, [r7, #8]
 80028b2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028b4:	2300      	movs	r3, #0
 80028b6:	617b      	str	r3, [r7, #20]
 80028b8:	e00a      	b.n	80028d0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80028ba:	f3af 8000 	nop.w
 80028be:	4601      	mov	r1, r0
 80028c0:	68bb      	ldr	r3, [r7, #8]
 80028c2:	1c5a      	adds	r2, r3, #1
 80028c4:	60ba      	str	r2, [r7, #8]
 80028c6:	b2ca      	uxtb	r2, r1
 80028c8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028ca:	697b      	ldr	r3, [r7, #20]
 80028cc:	3301      	adds	r3, #1
 80028ce:	617b      	str	r3, [r7, #20]
 80028d0:	697a      	ldr	r2, [r7, #20]
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	429a      	cmp	r2, r3
 80028d6:	dbf0      	blt.n	80028ba <_read+0x12>
	}

return len;
 80028d8:	687b      	ldr	r3, [r7, #4]
}
 80028da:	4618      	mov	r0, r3
 80028dc:	3718      	adds	r7, #24
 80028de:	46bd      	mov	sp, r7
 80028e0:	bd80      	pop	{r7, pc}

080028e2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80028e2:	b580      	push	{r7, lr}
 80028e4:	b086      	sub	sp, #24
 80028e6:	af00      	add	r7, sp, #0
 80028e8:	60f8      	str	r0, [r7, #12]
 80028ea:	60b9      	str	r1, [r7, #8]
 80028ec:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028ee:	2300      	movs	r3, #0
 80028f0:	617b      	str	r3, [r7, #20]
 80028f2:	e009      	b.n	8002908 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80028f4:	68bb      	ldr	r3, [r7, #8]
 80028f6:	1c5a      	adds	r2, r3, #1
 80028f8:	60ba      	str	r2, [r7, #8]
 80028fa:	781b      	ldrb	r3, [r3, #0]
 80028fc:	4618      	mov	r0, r3
 80028fe:	f7fe fb53 	bl	8000fa8 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002902:	697b      	ldr	r3, [r7, #20]
 8002904:	3301      	adds	r3, #1
 8002906:	617b      	str	r3, [r7, #20]
 8002908:	697a      	ldr	r2, [r7, #20]
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	429a      	cmp	r2, r3
 800290e:	dbf1      	blt.n	80028f4 <_write+0x12>
	}
	return len;
 8002910:	687b      	ldr	r3, [r7, #4]
}
 8002912:	4618      	mov	r0, r3
 8002914:	3718      	adds	r7, #24
 8002916:	46bd      	mov	sp, r7
 8002918:	bd80      	pop	{r7, pc}

0800291a <_close>:

int _close(int file)
{
 800291a:	b480      	push	{r7}
 800291c:	b083      	sub	sp, #12
 800291e:	af00      	add	r7, sp, #0
 8002920:	6078      	str	r0, [r7, #4]
	return -1;
 8002922:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002926:	4618      	mov	r0, r3
 8002928:	370c      	adds	r7, #12
 800292a:	46bd      	mov	sp, r7
 800292c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002930:	4770      	bx	lr

08002932 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002932:	b480      	push	{r7}
 8002934:	b083      	sub	sp, #12
 8002936:	af00      	add	r7, sp, #0
 8002938:	6078      	str	r0, [r7, #4]
 800293a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800293c:	683b      	ldr	r3, [r7, #0]
 800293e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002942:	605a      	str	r2, [r3, #4]
	return 0;
 8002944:	2300      	movs	r3, #0
}
 8002946:	4618      	mov	r0, r3
 8002948:	370c      	adds	r7, #12
 800294a:	46bd      	mov	sp, r7
 800294c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002950:	4770      	bx	lr

08002952 <_isatty>:

int _isatty(int file)
{
 8002952:	b480      	push	{r7}
 8002954:	b083      	sub	sp, #12
 8002956:	af00      	add	r7, sp, #0
 8002958:	6078      	str	r0, [r7, #4]
	return 1;
 800295a:	2301      	movs	r3, #1
}
 800295c:	4618      	mov	r0, r3
 800295e:	370c      	adds	r7, #12
 8002960:	46bd      	mov	sp, r7
 8002962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002966:	4770      	bx	lr

08002968 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002968:	b480      	push	{r7}
 800296a:	b085      	sub	sp, #20
 800296c:	af00      	add	r7, sp, #0
 800296e:	60f8      	str	r0, [r7, #12]
 8002970:	60b9      	str	r1, [r7, #8]
 8002972:	607a      	str	r2, [r7, #4]
	return 0;
 8002974:	2300      	movs	r3, #0
}
 8002976:	4618      	mov	r0, r3
 8002978:	3714      	adds	r7, #20
 800297a:	46bd      	mov	sp, r7
 800297c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002980:	4770      	bx	lr
	...

08002984 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8002984:	b580      	push	{r7, lr}
 8002986:	b084      	sub	sp, #16
 8002988:	af00      	add	r7, sp, #0
 800298a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800298c:	4b11      	ldr	r3, [pc, #68]	; (80029d4 <_sbrk+0x50>)
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	2b00      	cmp	r3, #0
 8002992:	d102      	bne.n	800299a <_sbrk+0x16>
		heap_end = &end;
 8002994:	4b0f      	ldr	r3, [pc, #60]	; (80029d4 <_sbrk+0x50>)
 8002996:	4a10      	ldr	r2, [pc, #64]	; (80029d8 <_sbrk+0x54>)
 8002998:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800299a:	4b0e      	ldr	r3, [pc, #56]	; (80029d4 <_sbrk+0x50>)
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80029a0:	4b0c      	ldr	r3, [pc, #48]	; (80029d4 <_sbrk+0x50>)
 80029a2:	681a      	ldr	r2, [r3, #0]
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	4413      	add	r3, r2
 80029a8:	466a      	mov	r2, sp
 80029aa:	4293      	cmp	r3, r2
 80029ac:	d907      	bls.n	80029be <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80029ae:	f018 ffff 	bl	801b9b0 <__errno>
 80029b2:	4603      	mov	r3, r0
 80029b4:	220c      	movs	r2, #12
 80029b6:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 80029b8:	f04f 33ff 	mov.w	r3, #4294967295
 80029bc:	e006      	b.n	80029cc <_sbrk+0x48>
	}

	heap_end += incr;
 80029be:	4b05      	ldr	r3, [pc, #20]	; (80029d4 <_sbrk+0x50>)
 80029c0:	681a      	ldr	r2, [r3, #0]
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	4413      	add	r3, r2
 80029c6:	4a03      	ldr	r2, [pc, #12]	; (80029d4 <_sbrk+0x50>)
 80029c8:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 80029ca:	68fb      	ldr	r3, [r7, #12]
}
 80029cc:	4618      	mov	r0, r3
 80029ce:	3710      	adds	r7, #16
 80029d0:	46bd      	mov	sp, r7
 80029d2:	bd80      	pop	{r7, pc}
 80029d4:	20000614 	.word	0x20000614
 80029d8:	20001a68 	.word	0x20001a68

080029dc <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80029dc:	b480      	push	{r7}
 80029de:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80029e0:	4b08      	ldr	r3, [pc, #32]	; (8002a04 <SystemInit+0x28>)
 80029e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80029e6:	4a07      	ldr	r2, [pc, #28]	; (8002a04 <SystemInit+0x28>)
 80029e8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80029ec:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80029f0:	4b04      	ldr	r3, [pc, #16]	; (8002a04 <SystemInit+0x28>)
 80029f2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80029f6:	609a      	str	r2, [r3, #8]
#endif
}
 80029f8:	bf00      	nop
 80029fa:	46bd      	mov	sp, r7
 80029fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a00:	4770      	bx	lr
 8002a02:	bf00      	nop
 8002a04:	e000ed00 	.word	0xe000ed00

08002a08 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8002a08:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002a40 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8002a0c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8002a0e:	e003      	b.n	8002a18 <LoopCopyDataInit>

08002a10 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8002a10:	4b0c      	ldr	r3, [pc, #48]	; (8002a44 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8002a12:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8002a14:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8002a16:	3104      	adds	r1, #4

08002a18 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8002a18:	480b      	ldr	r0, [pc, #44]	; (8002a48 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8002a1a:	4b0c      	ldr	r3, [pc, #48]	; (8002a4c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8002a1c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8002a1e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8002a20:	d3f6      	bcc.n	8002a10 <CopyDataInit>
  ldr  r2, =_sbss
 8002a22:	4a0b      	ldr	r2, [pc, #44]	; (8002a50 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8002a24:	e002      	b.n	8002a2c <LoopFillZerobss>

08002a26 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8002a26:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8002a28:	f842 3b04 	str.w	r3, [r2], #4

08002a2c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8002a2c:	4b09      	ldr	r3, [pc, #36]	; (8002a54 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8002a2e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8002a30:	d3f9      	bcc.n	8002a26 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8002a32:	f7ff ffd3 	bl	80029dc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002a36:	f018 ffd3 	bl	801b9e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002a3a:	f7fe fad5 	bl	8000fe8 <main>
  bx  lr    
 8002a3e:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8002a40:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8002a44:	0802c3e4 	.word	0x0802c3e4
  ldr  r0, =_sdata
 8002a48:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8002a4c:	20000270 	.word	0x20000270
  ldr  r2, =_sbss
 8002a50:	20000270 	.word	0x20000270
  ldr  r3, = _ebss
 8002a54:	20001a68 	.word	0x20001a68

08002a58 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002a58:	e7fe      	b.n	8002a58 <ADC_IRQHandler>
	...

08002a5c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002a5c:	b580      	push	{r7, lr}
 8002a5e:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002a60:	4b0e      	ldr	r3, [pc, #56]	; (8002a9c <HAL_Init+0x40>)
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	4a0d      	ldr	r2, [pc, #52]	; (8002a9c <HAL_Init+0x40>)
 8002a66:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002a6a:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002a6c:	4b0b      	ldr	r3, [pc, #44]	; (8002a9c <HAL_Init+0x40>)
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	4a0a      	ldr	r2, [pc, #40]	; (8002a9c <HAL_Init+0x40>)
 8002a72:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002a76:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002a78:	4b08      	ldr	r3, [pc, #32]	; (8002a9c <HAL_Init+0x40>)
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	4a07      	ldr	r2, [pc, #28]	; (8002a9c <HAL_Init+0x40>)
 8002a7e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002a82:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002a84:	2003      	movs	r0, #3
 8002a86:	f000 fcea 	bl	800345e <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002a8a:	2000      	movs	r0, #0
 8002a8c:	f7ff fe42 	bl	8002714 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002a90:	f7ff fa26 	bl	8001ee0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002a94:	2300      	movs	r3, #0
}
 8002a96:	4618      	mov	r0, r3
 8002a98:	bd80      	pop	{r7, pc}
 8002a9a:	bf00      	nop
 8002a9c:	40023c00 	.word	0x40023c00

08002aa0 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002aa0:	b480      	push	{r7}
 8002aa2:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002aa4:	4b06      	ldr	r3, [pc, #24]	; (8002ac0 <HAL_IncTick+0x20>)
 8002aa6:	781b      	ldrb	r3, [r3, #0]
 8002aa8:	461a      	mov	r2, r3
 8002aaa:	4b06      	ldr	r3, [pc, #24]	; (8002ac4 <HAL_IncTick+0x24>)
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	4413      	add	r3, r2
 8002ab0:	4a04      	ldr	r2, [pc, #16]	; (8002ac4 <HAL_IncTick+0x24>)
 8002ab2:	6013      	str	r3, [r2, #0]
}
 8002ab4:	bf00      	nop
 8002ab6:	46bd      	mov	sp, r7
 8002ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002abc:	4770      	bx	lr
 8002abe:	bf00      	nop
 8002ac0:	2000000c 	.word	0x2000000c
 8002ac4:	20000618 	.word	0x20000618

08002ac8 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002ac8:	b480      	push	{r7}
 8002aca:	af00      	add	r7, sp, #0
  return uwTick;
 8002acc:	4b03      	ldr	r3, [pc, #12]	; (8002adc <HAL_GetTick+0x14>)
 8002ace:	681b      	ldr	r3, [r3, #0]
}
 8002ad0:	4618      	mov	r0, r3
 8002ad2:	46bd      	mov	sp, r7
 8002ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ad8:	4770      	bx	lr
 8002ada:	bf00      	nop
 8002adc:	20000618 	.word	0x20000618

08002ae0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002ae0:	b580      	push	{r7, lr}
 8002ae2:	b084      	sub	sp, #16
 8002ae4:	af00      	add	r7, sp, #0
 8002ae6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002ae8:	f7ff ffee 	bl	8002ac8 <HAL_GetTick>
 8002aec:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002af2:	68fb      	ldr	r3, [r7, #12]
 8002af4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002af8:	d005      	beq.n	8002b06 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002afa:	4b0a      	ldr	r3, [pc, #40]	; (8002b24 <HAL_Delay+0x44>)
 8002afc:	781b      	ldrb	r3, [r3, #0]
 8002afe:	461a      	mov	r2, r3
 8002b00:	68fb      	ldr	r3, [r7, #12]
 8002b02:	4413      	add	r3, r2
 8002b04:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002b06:	bf00      	nop
 8002b08:	f7ff ffde 	bl	8002ac8 <HAL_GetTick>
 8002b0c:	4602      	mov	r2, r0
 8002b0e:	68bb      	ldr	r3, [r7, #8]
 8002b10:	1ad3      	subs	r3, r2, r3
 8002b12:	68fa      	ldr	r2, [r7, #12]
 8002b14:	429a      	cmp	r2, r3
 8002b16:	d8f7      	bhi.n	8002b08 <HAL_Delay+0x28>
  {
  }
}
 8002b18:	bf00      	nop
 8002b1a:	bf00      	nop
 8002b1c:	3710      	adds	r7, #16
 8002b1e:	46bd      	mov	sp, r7
 8002b20:	bd80      	pop	{r7, pc}
 8002b22:	bf00      	nop
 8002b24:	2000000c 	.word	0x2000000c

08002b28 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8002b28:	b580      	push	{r7, lr}
 8002b2a:	b084      	sub	sp, #16
 8002b2c:	af00      	add	r7, sp, #0
 8002b2e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002b30:	2300      	movs	r3, #0
 8002b32:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	2b00      	cmp	r3, #0
 8002b38:	d101      	bne.n	8002b3e <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8002b3a:	2301      	movs	r3, #1
 8002b3c:	e033      	b.n	8002ba6 <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	d109      	bne.n	8002b5a <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002b46:	6878      	ldr	r0, [r7, #4]
 8002b48:	f7ff f9f2 	bl	8001f30 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	2200      	movs	r2, #0
 8002b50:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	2200      	movs	r2, #0
 8002b56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b5e:	f003 0310 	and.w	r3, r3, #16
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d118      	bne.n	8002b98 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b6a:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8002b6e:	f023 0302 	bic.w	r3, r3, #2
 8002b72:	f043 0202 	orr.w	r2, r3, #2
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 8002b7a:	6878      	ldr	r0, [r7, #4]
 8002b7c:	f000 faa2 	bl	80030c4 <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	2200      	movs	r2, #0
 8002b84:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b8a:	f023 0303 	bic.w	r3, r3, #3
 8002b8e:	f043 0201 	orr.w	r2, r3, #1
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	641a      	str	r2, [r3, #64]	; 0x40
 8002b96:	e001      	b.n	8002b9c <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002b98:	2301      	movs	r3, #1
 8002b9a:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	2200      	movs	r2, #0
 8002ba0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002ba4:	7bfb      	ldrb	r3, [r7, #15]
}
 8002ba6:	4618      	mov	r0, r3
 8002ba8:	3710      	adds	r7, #16
 8002baa:	46bd      	mov	sp, r7
 8002bac:	bd80      	pop	{r7, pc}
	...

08002bb0 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 8002bb0:	b480      	push	{r7}
 8002bb2:	b085      	sub	sp, #20
 8002bb4:	af00      	add	r7, sp, #0
 8002bb6:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 8002bb8:	2300      	movs	r3, #0
 8002bba:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002bc2:	2b01      	cmp	r3, #1
 8002bc4:	d101      	bne.n	8002bca <HAL_ADC_Start+0x1a>
 8002bc6:	2302      	movs	r3, #2
 8002bc8:	e0a5      	b.n	8002d16 <HAL_ADC_Start+0x166>
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	2201      	movs	r2, #1
 8002bce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	689b      	ldr	r3, [r3, #8]
 8002bd8:	f003 0301 	and.w	r3, r3, #1
 8002bdc:	2b01      	cmp	r3, #1
 8002bde:	d018      	beq.n	8002c12 <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	689a      	ldr	r2, [r3, #8]
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	f042 0201 	orr.w	r2, r2, #1
 8002bee:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002bf0:	4b4c      	ldr	r3, [pc, #304]	; (8002d24 <HAL_ADC_Start+0x174>)
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	4a4c      	ldr	r2, [pc, #304]	; (8002d28 <HAL_ADC_Start+0x178>)
 8002bf6:	fba2 2303 	umull	r2, r3, r2, r3
 8002bfa:	0c9a      	lsrs	r2, r3, #18
 8002bfc:	4613      	mov	r3, r2
 8002bfe:	005b      	lsls	r3, r3, #1
 8002c00:	4413      	add	r3, r2
 8002c02:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8002c04:	e002      	b.n	8002c0c <HAL_ADC_Start+0x5c>
    {
      counter--;
 8002c06:	68bb      	ldr	r3, [r7, #8]
 8002c08:	3b01      	subs	r3, #1
 8002c0a:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8002c0c:	68bb      	ldr	r3, [r7, #8]
 8002c0e:	2b00      	cmp	r3, #0
 8002c10:	d1f9      	bne.n	8002c06 <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	689b      	ldr	r3, [r3, #8]
 8002c18:	f003 0301 	and.w	r3, r3, #1
 8002c1c:	2b01      	cmp	r3, #1
 8002c1e:	d179      	bne.n	8002d14 <HAL_ADC_Start+0x164>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c24:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8002c28:	f023 0301 	bic.w	r3, r3, #1
 8002c2c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	685b      	ldr	r3, [r3, #4]
 8002c3a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002c3e:	2b00      	cmp	r3, #0
 8002c40:	d007      	beq.n	8002c52 <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c46:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8002c4a:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c56:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002c5a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002c5e:	d106      	bne.n	8002c6e <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002c64:	f023 0206 	bic.w	r2, r3, #6
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	645a      	str	r2, [r3, #68]	; 0x44
 8002c6c:	e002      	b.n	8002c74 <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	2200      	movs	r2, #0
 8002c72:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	2200      	movs	r2, #0
 8002c78:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002c7c:	4b2b      	ldr	r3, [pc, #172]	; (8002d2c <HAL_ADC_Start+0x17c>)
 8002c7e:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8002c88:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002c8a:	68fb      	ldr	r3, [r7, #12]
 8002c8c:	685b      	ldr	r3, [r3, #4]
 8002c8e:	f003 031f 	and.w	r3, r3, #31
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	d12a      	bne.n	8002cec <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	4a25      	ldr	r2, [pc, #148]	; (8002d30 <HAL_ADC_Start+0x180>)
 8002c9c:	4293      	cmp	r3, r2
 8002c9e:	d015      	beq.n	8002ccc <HAL_ADC_Start+0x11c>
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	4a23      	ldr	r2, [pc, #140]	; (8002d34 <HAL_ADC_Start+0x184>)
 8002ca6:	4293      	cmp	r3, r2
 8002ca8:	d105      	bne.n	8002cb6 <HAL_ADC_Start+0x106>
 8002caa:	4b20      	ldr	r3, [pc, #128]	; (8002d2c <HAL_ADC_Start+0x17c>)
 8002cac:	685b      	ldr	r3, [r3, #4]
 8002cae:	f003 031f 	and.w	r3, r3, #31
 8002cb2:	2b00      	cmp	r3, #0
 8002cb4:	d00a      	beq.n	8002ccc <HAL_ADC_Start+0x11c>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	4a1f      	ldr	r2, [pc, #124]	; (8002d38 <HAL_ADC_Start+0x188>)
 8002cbc:	4293      	cmp	r3, r2
 8002cbe:	d129      	bne.n	8002d14 <HAL_ADC_Start+0x164>
 8002cc0:	4b1a      	ldr	r3, [pc, #104]	; (8002d2c <HAL_ADC_Start+0x17c>)
 8002cc2:	685b      	ldr	r3, [r3, #4]
 8002cc4:	f003 0310 	and.w	r3, r3, #16
 8002cc8:	2b00      	cmp	r3, #0
 8002cca:	d123      	bne.n	8002d14 <HAL_ADC_Start+0x164>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	689b      	ldr	r3, [r3, #8]
 8002cd2:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d11c      	bne.n	8002d14 <HAL_ADC_Start+0x164>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	689a      	ldr	r2, [r3, #8]
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8002ce8:	609a      	str	r2, [r3, #8]
 8002cea:	e013      	b.n	8002d14 <HAL_ADC_Start+0x164>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	4a0f      	ldr	r2, [pc, #60]	; (8002d30 <HAL_ADC_Start+0x180>)
 8002cf2:	4293      	cmp	r3, r2
 8002cf4:	d10e      	bne.n	8002d14 <HAL_ADC_Start+0x164>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	689b      	ldr	r3, [r3, #8]
 8002cfc:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d107      	bne.n	8002d14 <HAL_ADC_Start+0x164>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	689a      	ldr	r2, [r3, #8]
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8002d12:	609a      	str	r2, [r3, #8]
      }
    }
  }
  
  /* Return function status */
  return HAL_OK;
 8002d14:	2300      	movs	r3, #0
}
 8002d16:	4618      	mov	r0, r3
 8002d18:	3714      	adds	r7, #20
 8002d1a:	46bd      	mov	sp, r7
 8002d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d20:	4770      	bx	lr
 8002d22:	bf00      	nop
 8002d24:	20000004 	.word	0x20000004
 8002d28:	431bde83 	.word	0x431bde83
 8002d2c:	40012300 	.word	0x40012300
 8002d30:	40012000 	.word	0x40012000
 8002d34:	40012100 	.word	0x40012100
 8002d38:	40012200 	.word	0x40012200

08002d3c <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 8002d3c:	b580      	push	{r7, lr}
 8002d3e:	b084      	sub	sp, #16
 8002d40:	af00      	add	r7, sp, #0
 8002d42:	6078      	str	r0, [r7, #4]
 8002d44:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 8002d46:	2300      	movs	r3, #0
 8002d48:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	689b      	ldr	r3, [r3, #8]
 8002d50:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002d54:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002d58:	d113      	bne.n	8002d82 <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	689b      	ldr	r3, [r3, #8]
 8002d60:	f403 7380 	and.w	r3, r3, #256	; 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8002d64:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002d68:	d10b      	bne.n	8002d82 <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d6e:	f043 0220 	orr.w	r2, r3, #32
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	2200      	movs	r2, #0
 8002d7a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    return HAL_ERROR;
 8002d7e:	2301      	movs	r3, #1
 8002d80:	e05c      	b.n	8002e3c <HAL_ADC_PollForConversion+0x100>
  }

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8002d82:	f7ff fea1 	bl	8002ac8 <HAL_GetTick>
 8002d86:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8002d88:	e01a      	b.n	8002dc0 <HAL_ADC_PollForConversion+0x84>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 8002d8a:	683b      	ldr	r3, [r7, #0]
 8002d8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002d90:	d016      	beq.n	8002dc0 <HAL_ADC_PollForConversion+0x84>
    {
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8002d92:	683b      	ldr	r3, [r7, #0]
 8002d94:	2b00      	cmp	r3, #0
 8002d96:	d007      	beq.n	8002da8 <HAL_ADC_PollForConversion+0x6c>
 8002d98:	f7ff fe96 	bl	8002ac8 <HAL_GetTick>
 8002d9c:	4602      	mov	r2, r0
 8002d9e:	68fb      	ldr	r3, [r7, #12]
 8002da0:	1ad3      	subs	r3, r2, r3
 8002da2:	683a      	ldr	r2, [r7, #0]
 8002da4:	429a      	cmp	r2, r3
 8002da6:	d20b      	bcs.n	8002dc0 <HAL_ADC_PollForConversion+0x84>
      {
        /* Update ADC state machine to timeout */
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dac:	f043 0204 	orr.w	r2, r3, #4
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	641a      	str	r2, [r3, #64]	; 0x40
        
        /* Process unlocked */
        __HAL_UNLOCK(hadc);
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	2200      	movs	r2, #0
 8002db8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
        
        return HAL_TIMEOUT;
 8002dbc:	2303      	movs	r3, #3
 8002dbe:	e03d      	b.n	8002e3c <HAL_ADC_PollForConversion+0x100>
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	681b      	ldr	r3, [r3, #0]
 8002dc6:	f003 0302 	and.w	r3, r3, #2
 8002dca:	2b02      	cmp	r3, #2
 8002dcc:	d1dd      	bne.n	8002d8a <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }
  
  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8002dce:	687b      	ldr	r3, [r7, #4]
 8002dd0:	681b      	ldr	r3, [r3, #0]
 8002dd2:	f06f 0212 	mvn.w	r2, #18
 8002dd6:	601a      	str	r2, [r3, #0]
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ddc:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	641a      	str	r2, [r3, #64]	; 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	689b      	ldr	r3, [r3, #8]
 8002dea:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002dee:	2b00      	cmp	r3, #0
 8002df0:	d123      	bne.n	8002e3a <HAL_ADC_PollForConversion+0xfe>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	7e1b      	ldrb	r3, [r3, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002df6:	2b00      	cmp	r3, #0
 8002df8:	d11f      	bne.n	8002e3a <HAL_ADC_PollForConversion+0xfe>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e00:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002e04:	2b00      	cmp	r3, #0
 8002e06:	d006      	beq.n	8002e16 <HAL_ADC_PollForConversion+0xda>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	689b      	ldr	r3, [r3, #8]
 8002e0e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002e12:	2b00      	cmp	r3, #0
 8002e14:	d111      	bne.n	8002e3a <HAL_ADC_PollForConversion+0xfe>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e1a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	641a      	str	r2, [r3, #64]	; 0x40
    
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e26:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002e2a:	2b00      	cmp	r3, #0
 8002e2c:	d105      	bne.n	8002e3a <HAL_ADC_PollForConversion+0xfe>
    { 
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e32:	f043 0201 	orr.w	r2, r3, #1
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	641a      	str	r2, [r3, #64]	; 0x40
    }
  }
  
  /* Return ADC state */
  return HAL_OK;
 8002e3a:	2300      	movs	r3, #0
}
 8002e3c:	4618      	mov	r0, r3
 8002e3e:	3710      	adds	r7, #16
 8002e40:	46bd      	mov	sp, r7
 8002e42:	bd80      	pop	{r7, pc}

08002e44 <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 8002e44:	b480      	push	{r7}
 8002e46:	b083      	sub	sp, #12
 8002e48:	af00      	add	r7, sp, #0
 8002e4a:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	681b      	ldr	r3, [r3, #0]
 8002e50:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8002e52:	4618      	mov	r0, r3
 8002e54:	370c      	adds	r7, #12
 8002e56:	46bd      	mov	sp, r7
 8002e58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e5c:	4770      	bx	lr
	...

08002e60 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8002e60:	b480      	push	{r7}
 8002e62:	b085      	sub	sp, #20
 8002e64:	af00      	add	r7, sp, #0
 8002e66:	6078      	str	r0, [r7, #4]
 8002e68:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8002e6a:	2300      	movs	r3, #0
 8002e6c:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002e74:	2b01      	cmp	r3, #1
 8002e76:	d101      	bne.n	8002e7c <HAL_ADC_ConfigChannel+0x1c>
 8002e78:	2302      	movs	r3, #2
 8002e7a:	e113      	b.n	80030a4 <HAL_ADC_ConfigChannel+0x244>
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	2201      	movs	r2, #1
 8002e80:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8002e84:	683b      	ldr	r3, [r7, #0]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	2b09      	cmp	r3, #9
 8002e8a:	d925      	bls.n	8002ed8 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	68d9      	ldr	r1, [r3, #12]
 8002e92:	683b      	ldr	r3, [r7, #0]
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	b29b      	uxth	r3, r3
 8002e98:	461a      	mov	r2, r3
 8002e9a:	4613      	mov	r3, r2
 8002e9c:	005b      	lsls	r3, r3, #1
 8002e9e:	4413      	add	r3, r2
 8002ea0:	3b1e      	subs	r3, #30
 8002ea2:	2207      	movs	r2, #7
 8002ea4:	fa02 f303 	lsl.w	r3, r2, r3
 8002ea8:	43da      	mvns	r2, r3
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	400a      	ands	r2, r1
 8002eb0:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	68d9      	ldr	r1, [r3, #12]
 8002eb8:	683b      	ldr	r3, [r7, #0]
 8002eba:	689a      	ldr	r2, [r3, #8]
 8002ebc:	683b      	ldr	r3, [r7, #0]
 8002ebe:	681b      	ldr	r3, [r3, #0]
 8002ec0:	b29b      	uxth	r3, r3
 8002ec2:	4618      	mov	r0, r3
 8002ec4:	4603      	mov	r3, r0
 8002ec6:	005b      	lsls	r3, r3, #1
 8002ec8:	4403      	add	r3, r0
 8002eca:	3b1e      	subs	r3, #30
 8002ecc:	409a      	lsls	r2, r3
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	430a      	orrs	r2, r1
 8002ed4:	60da      	str	r2, [r3, #12]
 8002ed6:	e022      	b.n	8002f1e <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	6919      	ldr	r1, [r3, #16]
 8002ede:	683b      	ldr	r3, [r7, #0]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	b29b      	uxth	r3, r3
 8002ee4:	461a      	mov	r2, r3
 8002ee6:	4613      	mov	r3, r2
 8002ee8:	005b      	lsls	r3, r3, #1
 8002eea:	4413      	add	r3, r2
 8002eec:	2207      	movs	r2, #7
 8002eee:	fa02 f303 	lsl.w	r3, r2, r3
 8002ef2:	43da      	mvns	r2, r3
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	400a      	ands	r2, r1
 8002efa:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	6919      	ldr	r1, [r3, #16]
 8002f02:	683b      	ldr	r3, [r7, #0]
 8002f04:	689a      	ldr	r2, [r3, #8]
 8002f06:	683b      	ldr	r3, [r7, #0]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	b29b      	uxth	r3, r3
 8002f0c:	4618      	mov	r0, r3
 8002f0e:	4603      	mov	r3, r0
 8002f10:	005b      	lsls	r3, r3, #1
 8002f12:	4403      	add	r3, r0
 8002f14:	409a      	lsls	r2, r3
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	430a      	orrs	r2, r1
 8002f1c:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 8002f1e:	683b      	ldr	r3, [r7, #0]
 8002f20:	685b      	ldr	r3, [r3, #4]
 8002f22:	2b06      	cmp	r3, #6
 8002f24:	d824      	bhi.n	8002f70 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002f2c:	683b      	ldr	r3, [r7, #0]
 8002f2e:	685a      	ldr	r2, [r3, #4]
 8002f30:	4613      	mov	r3, r2
 8002f32:	009b      	lsls	r3, r3, #2
 8002f34:	4413      	add	r3, r2
 8002f36:	3b05      	subs	r3, #5
 8002f38:	221f      	movs	r2, #31
 8002f3a:	fa02 f303 	lsl.w	r3, r2, r3
 8002f3e:	43da      	mvns	r2, r3
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	400a      	ands	r2, r1
 8002f46:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002f4e:	683b      	ldr	r3, [r7, #0]
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	b29b      	uxth	r3, r3
 8002f54:	4618      	mov	r0, r3
 8002f56:	683b      	ldr	r3, [r7, #0]
 8002f58:	685a      	ldr	r2, [r3, #4]
 8002f5a:	4613      	mov	r3, r2
 8002f5c:	009b      	lsls	r3, r3, #2
 8002f5e:	4413      	add	r3, r2
 8002f60:	3b05      	subs	r3, #5
 8002f62:	fa00 f203 	lsl.w	r2, r0, r3
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	430a      	orrs	r2, r1
 8002f6c:	635a      	str	r2, [r3, #52]	; 0x34
 8002f6e:	e04c      	b.n	800300a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8002f70:	683b      	ldr	r3, [r7, #0]
 8002f72:	685b      	ldr	r3, [r3, #4]
 8002f74:	2b0c      	cmp	r3, #12
 8002f76:	d824      	bhi.n	8002fc2 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002f7e:	683b      	ldr	r3, [r7, #0]
 8002f80:	685a      	ldr	r2, [r3, #4]
 8002f82:	4613      	mov	r3, r2
 8002f84:	009b      	lsls	r3, r3, #2
 8002f86:	4413      	add	r3, r2
 8002f88:	3b23      	subs	r3, #35	; 0x23
 8002f8a:	221f      	movs	r2, #31
 8002f8c:	fa02 f303 	lsl.w	r3, r2, r3
 8002f90:	43da      	mvns	r2, r3
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	400a      	ands	r2, r1
 8002f98:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002fa0:	683b      	ldr	r3, [r7, #0]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	b29b      	uxth	r3, r3
 8002fa6:	4618      	mov	r0, r3
 8002fa8:	683b      	ldr	r3, [r7, #0]
 8002faa:	685a      	ldr	r2, [r3, #4]
 8002fac:	4613      	mov	r3, r2
 8002fae:	009b      	lsls	r3, r3, #2
 8002fb0:	4413      	add	r3, r2
 8002fb2:	3b23      	subs	r3, #35	; 0x23
 8002fb4:	fa00 f203 	lsl.w	r2, r0, r3
 8002fb8:	687b      	ldr	r3, [r7, #4]
 8002fba:	681b      	ldr	r3, [r3, #0]
 8002fbc:	430a      	orrs	r2, r1
 8002fbe:	631a      	str	r2, [r3, #48]	; 0x30
 8002fc0:	e023      	b.n	800300a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002fc8:	683b      	ldr	r3, [r7, #0]
 8002fca:	685a      	ldr	r2, [r3, #4]
 8002fcc:	4613      	mov	r3, r2
 8002fce:	009b      	lsls	r3, r3, #2
 8002fd0:	4413      	add	r3, r2
 8002fd2:	3b41      	subs	r3, #65	; 0x41
 8002fd4:	221f      	movs	r2, #31
 8002fd6:	fa02 f303 	lsl.w	r3, r2, r3
 8002fda:	43da      	mvns	r2, r3
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	400a      	ands	r2, r1
 8002fe2:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002fea:	683b      	ldr	r3, [r7, #0]
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	b29b      	uxth	r3, r3
 8002ff0:	4618      	mov	r0, r3
 8002ff2:	683b      	ldr	r3, [r7, #0]
 8002ff4:	685a      	ldr	r2, [r3, #4]
 8002ff6:	4613      	mov	r3, r2
 8002ff8:	009b      	lsls	r3, r3, #2
 8002ffa:	4413      	add	r3, r2
 8002ffc:	3b41      	subs	r3, #65	; 0x41
 8002ffe:	fa00 f203 	lsl.w	r2, r0, r3
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	681b      	ldr	r3, [r3, #0]
 8003006:	430a      	orrs	r2, r1
 8003008:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800300a:	4b29      	ldr	r3, [pc, #164]	; (80030b0 <HAL_ADC_ConfigChannel+0x250>)
 800300c:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	4a28      	ldr	r2, [pc, #160]	; (80030b4 <HAL_ADC_ConfigChannel+0x254>)
 8003014:	4293      	cmp	r3, r2
 8003016:	d10f      	bne.n	8003038 <HAL_ADC_ConfigChannel+0x1d8>
 8003018:	683b      	ldr	r3, [r7, #0]
 800301a:	681b      	ldr	r3, [r3, #0]
 800301c:	2b12      	cmp	r3, #18
 800301e:	d10b      	bne.n	8003038 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/    
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8003020:	68fb      	ldr	r3, [r7, #12]
 8003022:	685b      	ldr	r3, [r3, #4]
 8003024:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8003028:	68fb      	ldr	r3, [r7, #12]
 800302a:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800302c:	68fb      	ldr	r3, [r7, #12]
 800302e:	685b      	ldr	r3, [r3, #4]
 8003030:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8003034:	68fb      	ldr	r3, [r7, #12]
 8003036:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	681b      	ldr	r3, [r3, #0]
 800303c:	4a1d      	ldr	r2, [pc, #116]	; (80030b4 <HAL_ADC_ConfigChannel+0x254>)
 800303e:	4293      	cmp	r3, r2
 8003040:	d12b      	bne.n	800309a <HAL_ADC_ConfigChannel+0x23a>
 8003042:	683b      	ldr	r3, [r7, #0]
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	4a1c      	ldr	r2, [pc, #112]	; (80030b8 <HAL_ADC_ConfigChannel+0x258>)
 8003048:	4293      	cmp	r3, r2
 800304a:	d003      	beq.n	8003054 <HAL_ADC_ConfigChannel+0x1f4>
 800304c:	683b      	ldr	r3, [r7, #0]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	2b11      	cmp	r3, #17
 8003052:	d122      	bne.n	800309a <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	685b      	ldr	r3, [r3, #4]
 8003058:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 800305c:	68fb      	ldr	r3, [r7, #12]
 800305e:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	685b      	ldr	r3, [r3, #4]
 8003064:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8003068:	68fb      	ldr	r3, [r7, #12]
 800306a:	605a      	str	r2, [r3, #4]
    
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800306c:	683b      	ldr	r3, [r7, #0]
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	4a11      	ldr	r2, [pc, #68]	; (80030b8 <HAL_ADC_ConfigChannel+0x258>)
 8003072:	4293      	cmp	r3, r2
 8003074:	d111      	bne.n	800309a <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8003076:	4b11      	ldr	r3, [pc, #68]	; (80030bc <HAL_ADC_ConfigChannel+0x25c>)
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	4a11      	ldr	r2, [pc, #68]	; (80030c0 <HAL_ADC_ConfigChannel+0x260>)
 800307c:	fba2 2303 	umull	r2, r3, r2, r3
 8003080:	0c9a      	lsrs	r2, r3, #18
 8003082:	4613      	mov	r3, r2
 8003084:	009b      	lsls	r3, r3, #2
 8003086:	4413      	add	r3, r2
 8003088:	005b      	lsls	r3, r3, #1
 800308a:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 800308c:	e002      	b.n	8003094 <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 800308e:	68bb      	ldr	r3, [r7, #8]
 8003090:	3b01      	subs	r3, #1
 8003092:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 8003094:	68bb      	ldr	r3, [r7, #8]
 8003096:	2b00      	cmp	r3, #0
 8003098:	d1f9      	bne.n	800308e <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	2200      	movs	r2, #0
 800309e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 80030a2:	2300      	movs	r3, #0
}
 80030a4:	4618      	mov	r0, r3
 80030a6:	3714      	adds	r7, #20
 80030a8:	46bd      	mov	sp, r7
 80030aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ae:	4770      	bx	lr
 80030b0:	40012300 	.word	0x40012300
 80030b4:	40012000 	.word	0x40012000
 80030b8:	10000012 	.word	0x10000012
 80030bc:	20000004 	.word	0x20000004
 80030c0:	431bde83 	.word	0x431bde83

080030c4 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 80030c4:	b480      	push	{r7}
 80030c6:	b085      	sub	sp, #20
 80030c8:	af00      	add	r7, sp, #0
 80030ca:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 80030cc:	4b79      	ldr	r3, [pc, #484]	; (80032b4 <ADC_Init+0x1f0>)
 80030ce:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 80030d0:	68fb      	ldr	r3, [r7, #12]
 80030d2:	685b      	ldr	r3, [r3, #4]
 80030d4:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80030d8:	68fb      	ldr	r3, [r7, #12]
 80030da:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 80030dc:	68fb      	ldr	r3, [r7, #12]
 80030de:	685a      	ldr	r2, [r3, #4]
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	685b      	ldr	r3, [r3, #4]
 80030e4:	431a      	orrs	r2, r3
 80030e6:	68fb      	ldr	r3, [r7, #12]
 80030e8:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	681b      	ldr	r3, [r3, #0]
 80030ee:	685a      	ldr	r2, [r3, #4]
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80030f8:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	681b      	ldr	r3, [r3, #0]
 80030fe:	6859      	ldr	r1, [r3, #4]
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	691b      	ldr	r3, [r3, #16]
 8003104:	021a      	lsls	r2, r3, #8
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	430a      	orrs	r2, r1
 800310c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	685a      	ldr	r2, [r3, #4]
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800311c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	6859      	ldr	r1, [r3, #4]
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	689a      	ldr	r2, [r3, #8]
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	430a      	orrs	r2, r1
 800312e:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	689a      	ldr	r2, [r3, #8]
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	681b      	ldr	r3, [r3, #0]
 800313a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800313e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8003140:	687b      	ldr	r3, [r7, #4]
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	6899      	ldr	r1, [r3, #8]
 8003146:	687b      	ldr	r3, [r7, #4]
 8003148:	68da      	ldr	r2, [r3, #12]
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	430a      	orrs	r2, r1
 8003150:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003156:	4a58      	ldr	r2, [pc, #352]	; (80032b8 <ADC_Init+0x1f4>)
 8003158:	4293      	cmp	r3, r2
 800315a:	d022      	beq.n	80031a2 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	689a      	ldr	r2, [r3, #8]
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800316a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	6899      	ldr	r1, [r3, #8]
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	430a      	orrs	r2, r1
 800317c:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	689a      	ldr	r2, [r3, #8]
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800318c:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	6899      	ldr	r1, [r3, #8]
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	430a      	orrs	r2, r1
 800319e:	609a      	str	r2, [r3, #8]
 80031a0:	e00f      	b.n	80031c2 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	689a      	ldr	r2, [r3, #8]
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80031b0:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	689a      	ldr	r2, [r3, #8]
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80031c0:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	689a      	ldr	r2, [r3, #8]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	f022 0202 	bic.w	r2, r2, #2
 80031d0:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	6899      	ldr	r1, [r3, #8]
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	7e1b      	ldrb	r3, [r3, #24]
 80031dc:	005a      	lsls	r2, r3, #1
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	681b      	ldr	r3, [r3, #0]
 80031e2:	430a      	orrs	r2, r1
 80031e4:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	f893 3020 	ldrb.w	r3, [r3, #32]
 80031ec:	2b00      	cmp	r3, #0
 80031ee:	d01b      	beq.n	8003228 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	685a      	ldr	r2, [r3, #4]
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	681b      	ldr	r3, [r3, #0]
 80031fa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80031fe:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	685a      	ldr	r2, [r3, #4]
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	681b      	ldr	r3, [r3, #0]
 800320a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800320e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	6859      	ldr	r1, [r3, #4]
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800321a:	3b01      	subs	r3, #1
 800321c:	035a      	lsls	r2, r3, #13
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	430a      	orrs	r2, r1
 8003224:	605a      	str	r2, [r3, #4]
 8003226:	e007      	b.n	8003238 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	685a      	ldr	r2, [r3, #4]
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	681b      	ldr	r3, [r3, #0]
 8003232:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003236:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8003246:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	69db      	ldr	r3, [r3, #28]
 8003252:	3b01      	subs	r3, #1
 8003254:	051a      	lsls	r2, r3, #20
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	681b      	ldr	r3, [r3, #0]
 800325a:	430a      	orrs	r2, r1
 800325c:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	689a      	ldr	r2, [r3, #8]
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800326c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	6899      	ldr	r1, [r3, #8]
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800327a:	025a      	lsls	r2, r3, #9
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	430a      	orrs	r2, r1
 8003282:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	689a      	ldr	r2, [r3, #8]
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003292:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	6899      	ldr	r1, [r3, #8]
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	695b      	ldr	r3, [r3, #20]
 800329e:	029a      	lsls	r2, r3, #10
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	430a      	orrs	r2, r1
 80032a6:	609a      	str	r2, [r3, #8]
}
 80032a8:	bf00      	nop
 80032aa:	3714      	adds	r7, #20
 80032ac:	46bd      	mov	sp, r7
 80032ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032b2:	4770      	bx	lr
 80032b4:	40012300 	.word	0x40012300
 80032b8:	0f000001 	.word	0x0f000001

080032bc <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80032bc:	b480      	push	{r7}
 80032be:	b085      	sub	sp, #20
 80032c0:	af00      	add	r7, sp, #0
 80032c2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	f003 0307 	and.w	r3, r3, #7
 80032ca:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80032cc:	4b0c      	ldr	r3, [pc, #48]	; (8003300 <__NVIC_SetPriorityGrouping+0x44>)
 80032ce:	68db      	ldr	r3, [r3, #12]
 80032d0:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80032d2:	68ba      	ldr	r2, [r7, #8]
 80032d4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80032d8:	4013      	ands	r3, r2
 80032da:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80032e0:	68bb      	ldr	r3, [r7, #8]
 80032e2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80032e4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80032e8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80032ec:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80032ee:	4a04      	ldr	r2, [pc, #16]	; (8003300 <__NVIC_SetPriorityGrouping+0x44>)
 80032f0:	68bb      	ldr	r3, [r7, #8]
 80032f2:	60d3      	str	r3, [r2, #12]
}
 80032f4:	bf00      	nop
 80032f6:	3714      	adds	r7, #20
 80032f8:	46bd      	mov	sp, r7
 80032fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032fe:	4770      	bx	lr
 8003300:	e000ed00 	.word	0xe000ed00

08003304 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8003304:	b480      	push	{r7}
 8003306:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003308:	4b04      	ldr	r3, [pc, #16]	; (800331c <__NVIC_GetPriorityGrouping+0x18>)
 800330a:	68db      	ldr	r3, [r3, #12]
 800330c:	0a1b      	lsrs	r3, r3, #8
 800330e:	f003 0307 	and.w	r3, r3, #7
}
 8003312:	4618      	mov	r0, r3
 8003314:	46bd      	mov	sp, r7
 8003316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800331a:	4770      	bx	lr
 800331c:	e000ed00 	.word	0xe000ed00

08003320 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003320:	b480      	push	{r7}
 8003322:	b083      	sub	sp, #12
 8003324:	af00      	add	r7, sp, #0
 8003326:	4603      	mov	r3, r0
 8003328:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800332a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800332e:	2b00      	cmp	r3, #0
 8003330:	db0b      	blt.n	800334a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003332:	79fb      	ldrb	r3, [r7, #7]
 8003334:	f003 021f 	and.w	r2, r3, #31
 8003338:	4907      	ldr	r1, [pc, #28]	; (8003358 <__NVIC_EnableIRQ+0x38>)
 800333a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800333e:	095b      	lsrs	r3, r3, #5
 8003340:	2001      	movs	r0, #1
 8003342:	fa00 f202 	lsl.w	r2, r0, r2
 8003346:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800334a:	bf00      	nop
 800334c:	370c      	adds	r7, #12
 800334e:	46bd      	mov	sp, r7
 8003350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003354:	4770      	bx	lr
 8003356:	bf00      	nop
 8003358:	e000e100 	.word	0xe000e100

0800335c <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 800335c:	b480      	push	{r7}
 800335e:	b083      	sub	sp, #12
 8003360:	af00      	add	r7, sp, #0
 8003362:	4603      	mov	r3, r0
 8003364:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003366:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800336a:	2b00      	cmp	r3, #0
 800336c:	db12      	blt.n	8003394 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800336e:	79fb      	ldrb	r3, [r7, #7]
 8003370:	f003 021f 	and.w	r2, r3, #31
 8003374:	490a      	ldr	r1, [pc, #40]	; (80033a0 <__NVIC_DisableIRQ+0x44>)
 8003376:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800337a:	095b      	lsrs	r3, r3, #5
 800337c:	2001      	movs	r0, #1
 800337e:	fa00 f202 	lsl.w	r2, r0, r2
 8003382:	3320      	adds	r3, #32
 8003384:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8003388:	f3bf 8f4f 	dsb	sy
}
 800338c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800338e:	f3bf 8f6f 	isb	sy
}
 8003392:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 8003394:	bf00      	nop
 8003396:	370c      	adds	r7, #12
 8003398:	46bd      	mov	sp, r7
 800339a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800339e:	4770      	bx	lr
 80033a0:	e000e100 	.word	0xe000e100

080033a4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80033a4:	b480      	push	{r7}
 80033a6:	b083      	sub	sp, #12
 80033a8:	af00      	add	r7, sp, #0
 80033aa:	4603      	mov	r3, r0
 80033ac:	6039      	str	r1, [r7, #0]
 80033ae:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80033b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	db0a      	blt.n	80033ce <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80033b8:	683b      	ldr	r3, [r7, #0]
 80033ba:	b2da      	uxtb	r2, r3
 80033bc:	490c      	ldr	r1, [pc, #48]	; (80033f0 <__NVIC_SetPriority+0x4c>)
 80033be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033c2:	0112      	lsls	r2, r2, #4
 80033c4:	b2d2      	uxtb	r2, r2
 80033c6:	440b      	add	r3, r1
 80033c8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80033cc:	e00a      	b.n	80033e4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80033ce:	683b      	ldr	r3, [r7, #0]
 80033d0:	b2da      	uxtb	r2, r3
 80033d2:	4908      	ldr	r1, [pc, #32]	; (80033f4 <__NVIC_SetPriority+0x50>)
 80033d4:	79fb      	ldrb	r3, [r7, #7]
 80033d6:	f003 030f 	and.w	r3, r3, #15
 80033da:	3b04      	subs	r3, #4
 80033dc:	0112      	lsls	r2, r2, #4
 80033de:	b2d2      	uxtb	r2, r2
 80033e0:	440b      	add	r3, r1
 80033e2:	761a      	strb	r2, [r3, #24]
}
 80033e4:	bf00      	nop
 80033e6:	370c      	adds	r7, #12
 80033e8:	46bd      	mov	sp, r7
 80033ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ee:	4770      	bx	lr
 80033f0:	e000e100 	.word	0xe000e100
 80033f4:	e000ed00 	.word	0xe000ed00

080033f8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80033f8:	b480      	push	{r7}
 80033fa:	b089      	sub	sp, #36	; 0x24
 80033fc:	af00      	add	r7, sp, #0
 80033fe:	60f8      	str	r0, [r7, #12]
 8003400:	60b9      	str	r1, [r7, #8]
 8003402:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8003404:	68fb      	ldr	r3, [r7, #12]
 8003406:	f003 0307 	and.w	r3, r3, #7
 800340a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800340c:	69fb      	ldr	r3, [r7, #28]
 800340e:	f1c3 0307 	rsb	r3, r3, #7
 8003412:	2b04      	cmp	r3, #4
 8003414:	bf28      	it	cs
 8003416:	2304      	movcs	r3, #4
 8003418:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800341a:	69fb      	ldr	r3, [r7, #28]
 800341c:	3304      	adds	r3, #4
 800341e:	2b06      	cmp	r3, #6
 8003420:	d902      	bls.n	8003428 <NVIC_EncodePriority+0x30>
 8003422:	69fb      	ldr	r3, [r7, #28]
 8003424:	3b03      	subs	r3, #3
 8003426:	e000      	b.n	800342a <NVIC_EncodePriority+0x32>
 8003428:	2300      	movs	r3, #0
 800342a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800342c:	f04f 32ff 	mov.w	r2, #4294967295
 8003430:	69bb      	ldr	r3, [r7, #24]
 8003432:	fa02 f303 	lsl.w	r3, r2, r3
 8003436:	43da      	mvns	r2, r3
 8003438:	68bb      	ldr	r3, [r7, #8]
 800343a:	401a      	ands	r2, r3
 800343c:	697b      	ldr	r3, [r7, #20]
 800343e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003440:	f04f 31ff 	mov.w	r1, #4294967295
 8003444:	697b      	ldr	r3, [r7, #20]
 8003446:	fa01 f303 	lsl.w	r3, r1, r3
 800344a:	43d9      	mvns	r1, r3
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003450:	4313      	orrs	r3, r2
         );
}
 8003452:	4618      	mov	r0, r3
 8003454:	3724      	adds	r7, #36	; 0x24
 8003456:	46bd      	mov	sp, r7
 8003458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800345c:	4770      	bx	lr

0800345e <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800345e:	b580      	push	{r7, lr}
 8003460:	b082      	sub	sp, #8
 8003462:	af00      	add	r7, sp, #0
 8003464:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003466:	6878      	ldr	r0, [r7, #4]
 8003468:	f7ff ff28 	bl	80032bc <__NVIC_SetPriorityGrouping>
}
 800346c:	bf00      	nop
 800346e:	3708      	adds	r7, #8
 8003470:	46bd      	mov	sp, r7
 8003472:	bd80      	pop	{r7, pc}

08003474 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003474:	b580      	push	{r7, lr}
 8003476:	b086      	sub	sp, #24
 8003478:	af00      	add	r7, sp, #0
 800347a:	4603      	mov	r3, r0
 800347c:	60b9      	str	r1, [r7, #8]
 800347e:	607a      	str	r2, [r7, #4]
 8003480:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8003482:	2300      	movs	r3, #0
 8003484:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8003486:	f7ff ff3d 	bl	8003304 <__NVIC_GetPriorityGrouping>
 800348a:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800348c:	687a      	ldr	r2, [r7, #4]
 800348e:	68b9      	ldr	r1, [r7, #8]
 8003490:	6978      	ldr	r0, [r7, #20]
 8003492:	f7ff ffb1 	bl	80033f8 <NVIC_EncodePriority>
 8003496:	4602      	mov	r2, r0
 8003498:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800349c:	4611      	mov	r1, r2
 800349e:	4618      	mov	r0, r3
 80034a0:	f7ff ff80 	bl	80033a4 <__NVIC_SetPriority>
}
 80034a4:	bf00      	nop
 80034a6:	3718      	adds	r7, #24
 80034a8:	46bd      	mov	sp, r7
 80034aa:	bd80      	pop	{r7, pc}

080034ac <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80034ac:	b580      	push	{r7, lr}
 80034ae:	b082      	sub	sp, #8
 80034b0:	af00      	add	r7, sp, #0
 80034b2:	4603      	mov	r3, r0
 80034b4:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80034b6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034ba:	4618      	mov	r0, r3
 80034bc:	f7ff ff30 	bl	8003320 <__NVIC_EnableIRQ>
}
 80034c0:	bf00      	nop
 80034c2:	3708      	adds	r7, #8
 80034c4:	46bd      	mov	sp, r7
 80034c6:	bd80      	pop	{r7, pc}

080034c8 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80034c8:	b580      	push	{r7, lr}
 80034ca:	b082      	sub	sp, #8
 80034cc:	af00      	add	r7, sp, #0
 80034ce:	4603      	mov	r3, r0
 80034d0:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80034d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034d6:	4618      	mov	r0, r3
 80034d8:	f7ff ff40 	bl	800335c <__NVIC_DisableIRQ>
}
 80034dc:	bf00      	nop
 80034de:	3708      	adds	r7, #8
 80034e0:	46bd      	mov	sp, r7
 80034e2:	bd80      	pop	{r7, pc}

080034e4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80034e4:	b580      	push	{r7, lr}
 80034e6:	b082      	sub	sp, #8
 80034e8:	af00      	add	r7, sp, #0
 80034ea:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	2b00      	cmp	r3, #0
 80034f0:	d101      	bne.n	80034f6 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 80034f2:	2301      	movs	r3, #1
 80034f4:	e00e      	b.n	8003514 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	795b      	ldrb	r3, [r3, #5]
 80034fa:	b2db      	uxtb	r3, r3
 80034fc:	2b00      	cmp	r3, #0
 80034fe:	d105      	bne.n	800350c <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	2200      	movs	r2, #0
 8003504:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003506:	6878      	ldr	r0, [r7, #4]
 8003508:	f7fe fd56 	bl	8001fb8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	2201      	movs	r2, #1
 8003510:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8003512:	2300      	movs	r3, #0
}
 8003514:	4618      	mov	r0, r3
 8003516:	3708      	adds	r7, #8
 8003518:	46bd      	mov	sp, r7
 800351a:	bd80      	pop	{r7, pc}

0800351c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800351c:	b580      	push	{r7, lr}
 800351e:	b082      	sub	sp, #8
 8003520:	af00      	add	r7, sp, #0
 8003522:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8003524:	687b      	ldr	r3, [r7, #4]
 8003526:	2b00      	cmp	r3, #0
 8003528:	d101      	bne.n	800352e <HAL_DMA2D_Init+0x12>
  {
     return HAL_ERROR;
 800352a:	2301      	movs	r3, #1
 800352c:	e03b      	b.n	80035a6 <HAL_DMA2D_Init+0x8a>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003534:	b2db      	uxtb	r3, r3
 8003536:	2b00      	cmp	r3, #0
 8003538:	d106      	bne.n	8003548 <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	2200      	movs	r2, #0
 800353e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003542:	6878      	ldr	r0, [r7, #4]
 8003544:	f7fe fd5a 	bl	8001ffc <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	2202      	movs	r2, #2
 800354c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	685a      	ldr	r2, [r3, #4]
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	430a      	orrs	r2, r1
 8003564:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800356c:	f023 0107 	bic.w	r1, r3, #7
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	689a      	ldr	r2, [r3, #8]
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	681b      	ldr	r3, [r3, #0]
 8003578:	430a      	orrs	r2, r1
 800357a:	635a      	str	r2, [r3, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003582:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003586:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800358a:	687a      	ldr	r2, [r7, #4]
 800358c:	68d1      	ldr	r1, [r2, #12]
 800358e:	687a      	ldr	r2, [r7, #4]
 8003590:	6812      	ldr	r2, [r2, #0]
 8003592:	430b      	orrs	r3, r1
 8003594:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	2200      	movs	r2, #0
 800359a:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	2201      	movs	r2, #1
 80035a0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  return HAL_OK;
 80035a4:	2300      	movs	r3, #0
}
 80035a6:	4618      	mov	r0, r3
 80035a8:	3708      	adds	r7, #8
 80035aa:	46bd      	mov	sp, r7
 80035ac:	bd80      	pop	{r7, pc}
	...

080035b0 <HAL_DMA2D_DeInit>:
  *                 the configuration information for the DMA2D.
  * @retval None
  */

HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
{
 80035b0:	b580      	push	{r7, lr}
 80035b2:	b082      	sub	sp, #8
 80035b4:	af00      	add	r7, sp, #0
 80035b6:	6078      	str	r0, [r7, #4]

  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	2b00      	cmp	r3, #0
 80035bc:	d101      	bne.n	80035c2 <HAL_DMA2D_DeInit+0x12>
  {
     return HAL_ERROR;
 80035be:	2301      	movs	r3, #1
 80035c0:	e05f      	b.n	8003682 <HAL_DMA2D_DeInit+0xd2>
  }

  /* Before aborting any DMA2D transfer or CLUT loading, check
     first whether or not DMA2D clock is enabled */
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 80035c2:	4b32      	ldr	r3, [pc, #200]	; (800368c <HAL_DMA2D_DeInit+0xdc>)
 80035c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80035c6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80035ca:	2b00      	cmp	r3, #0
 80035cc:	d02e      	beq.n	800362c <HAL_DMA2D_DeInit+0x7c>
  {
    /* Abort DMA2D transfer if any */
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	f003 0301 	and.w	r3, r3, #1
 80035d8:	2b01      	cmp	r3, #1
 80035da:	d107      	bne.n	80035ec <HAL_DMA2D_DeInit+0x3c>
    {
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 80035dc:	6878      	ldr	r0, [r7, #4]
 80035de:	f000 f8c1 	bl	8003764 <HAL_DMA2D_Abort>
 80035e2:	4603      	mov	r3, r0
 80035e4:	2b00      	cmp	r3, #0
 80035e6:	d021      	beq.n	800362c <HAL_DMA2D_DeInit+0x7c>
      {
        /* Issue when aborting DMA2D transfer */
        return HAL_ERROR;
 80035e8:	2301      	movs	r3, #1
 80035ea:	e04a      	b.n	8003682 <HAL_DMA2D_DeInit+0xd2>
      }
    }
    else
    {
      /* Abort background CLUT loading if any */
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035f2:	f003 0320 	and.w	r3, r3, #32
 80035f6:	2b20      	cmp	r3, #32
 80035f8:	d108      	bne.n	800360c <HAL_DMA2D_DeInit+0x5c>
      {
        if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 80035fa:	2100      	movs	r1, #0
 80035fc:	6878      	ldr	r0, [r7, #4]
 80035fe:	f000 f8f7 	bl	80037f0 <HAL_DMA2D_CLUTLoading_Abort>
 8003602:	4603      	mov	r3, r0
 8003604:	2b00      	cmp	r3, #0
 8003606:	d011      	beq.n	800362c <HAL_DMA2D_DeInit+0x7c>
        {
          /* Issue when aborting background CLUT loading */
          return HAL_ERROR;
 8003608:	2301      	movs	r3, #1
 800360a:	e03a      	b.n	8003682 <HAL_DMA2D_DeInit+0xd2>
        }
      }
      else
      {
        /* Abort foreground CLUT loading if any */
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 800360c:	687b      	ldr	r3, [r7, #4]
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	69db      	ldr	r3, [r3, #28]
 8003612:	f003 0320 	and.w	r3, r3, #32
 8003616:	2b20      	cmp	r3, #32
 8003618:	d108      	bne.n	800362c <HAL_DMA2D_DeInit+0x7c>
        {
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 800361a:	2101      	movs	r1, #1
 800361c:	6878      	ldr	r0, [r7, #4]
 800361e:	f000 f8e7 	bl	80037f0 <HAL_DMA2D_CLUTLoading_Abort>
 8003622:	4603      	mov	r3, r0
 8003624:	2b00      	cmp	r3, #0
 8003626:	d001      	beq.n	800362c <HAL_DMA2D_DeInit+0x7c>
          {
            /* Issue when aborting foreground CLUT loading */
            return HAL_ERROR;
 8003628:	2301      	movs	r3, #1
 800362a:	e02a      	b.n	8003682 <HAL_DMA2D_DeInit+0xd2>
      }
    }
  }

  /* Reset DMA2D control registers*/
  hdma2d->Instance->CR       =    0U;
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	2200      	movs	r2, #0
 8003632:	601a      	str	r2, [r3, #0]
  hdma2d->Instance->IFCR     = 0x3FU;
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	223f      	movs	r2, #63	; 0x3f
 800363a:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	2200      	movs	r2, #0
 8003642:	611a      	str	r2, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	2200      	movs	r2, #0
 800364a:	619a      	str	r2, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	2200      	movs	r2, #0
 8003652:	61da      	str	r2, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	2200      	movs	r2, #0
 800365a:	625a      	str	r2, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	2200      	movs	r2, #0
 8003662:	635a      	str	r2, [r3, #52]	; 0x34
    /* DeInit the low level hardware */
    hdma2d->MspDeInitCallback(hdma2d);

#else
  /* Carry on with de-initialization of low level hardware */
  HAL_DMA2D_MspDeInit(hdma2d);
 8003664:	6878      	ldr	r0, [r7, #4]
 8003666:	f7fe fcf1 	bl	800204c <HAL_DMA2D_MspDeInit>
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	2200      	movs	r2, #0
 800366e:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	2200      	movs	r2, #0
 8003674:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Release Lock */
  __HAL_UNLOCK(hdma2d);
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	2200      	movs	r2, #0
 800367c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003680:	2300      	movs	r3, #0
}
 8003682:	4618      	mov	r0, r3
 8003684:	3708      	adds	r7, #8
 8003686:	46bd      	mov	sp, r7
 8003688:	bd80      	pop	{r7, pc}
 800368a:	bf00      	nop
 800368c:	40023800 	.word	0x40023800

08003690 <HAL_DMA2D_Start_IT>:
  * @param  Width      The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height     The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 8003690:	b580      	push	{r7, lr}
 8003692:	b086      	sub	sp, #24
 8003694:	af02      	add	r7, sp, #8
 8003696:	60f8      	str	r0, [r7, #12]
 8003698:	60b9      	str	r1, [r7, #8]
 800369a:	607a      	str	r2, [r7, #4]
 800369c:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800369e:	68fb      	ldr	r3, [r7, #12]
 80036a0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80036a4:	2b01      	cmp	r3, #1
 80036a6:	d101      	bne.n	80036ac <HAL_DMA2D_Start_IT+0x1c>
 80036a8:	2302      	movs	r3, #2
 80036aa:	e020      	b.n	80036ee <HAL_DMA2D_Start_IT+0x5e>
 80036ac:	68fb      	ldr	r3, [r7, #12]
 80036ae:	2201      	movs	r2, #1
 80036b0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80036b4:	68fb      	ldr	r3, [r7, #12]
 80036b6:	2202      	movs	r2, #2
 80036b8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 80036bc:	69bb      	ldr	r3, [r7, #24]
 80036be:	9300      	str	r3, [sp, #0]
 80036c0:	683b      	ldr	r3, [r7, #0]
 80036c2:	687a      	ldr	r2, [r7, #4]
 80036c4:	68b9      	ldr	r1, [r7, #8]
 80036c6:	68f8      	ldr	r0, [r7, #12]
 80036c8:	f000 fa84 	bl	8003bd4 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80036cc:	68fb      	ldr	r3, [r7, #12]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	681a      	ldr	r2, [r3, #0]
 80036d2:	68fb      	ldr	r3, [r7, #12]
 80036d4:	681b      	ldr	r3, [r3, #0]
 80036d6:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80036da:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	681a      	ldr	r2, [r3, #0]
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	f042 0201 	orr.w	r2, r2, #1
 80036ea:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 80036ec:	2300      	movs	r3, #0
}
 80036ee:	4618      	mov	r0, r3
 80036f0:	3710      	adds	r7, #16
 80036f2:	46bd      	mov	sp, r7
 80036f4:	bd80      	pop	{r7, pc}

080036f6 <HAL_DMA2D_BlendingStart_IT>:
  * @param  Width       The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height      The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32_t  SrcAddress2, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 80036f6:	b580      	push	{r7, lr}
 80036f8:	b086      	sub	sp, #24
 80036fa:	af02      	add	r7, sp, #8
 80036fc:	60f8      	str	r0, [r7, #12]
 80036fe:	60b9      	str	r1, [r7, #8]
 8003700:	607a      	str	r2, [r7, #4]
 8003702:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003704:	68fb      	ldr	r3, [r7, #12]
 8003706:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800370a:	2b01      	cmp	r3, #1
 800370c:	d101      	bne.n	8003712 <HAL_DMA2D_BlendingStart_IT+0x1c>
 800370e:	2302      	movs	r3, #2
 8003710:	e024      	b.n	800375c <HAL_DMA2D_BlendingStart_IT+0x66>
 8003712:	68fb      	ldr	r3, [r7, #12]
 8003714:	2201      	movs	r2, #1
 8003716:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	2202      	movs	r2, #2
 800371e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure DMA2D Stream source2 address */
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	687a      	ldr	r2, [r7, #4]
 8003728:	615a      	str	r2, [r3, #20]

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 800372a:	69fb      	ldr	r3, [r7, #28]
 800372c:	9300      	str	r3, [sp, #0]
 800372e:	69bb      	ldr	r3, [r7, #24]
 8003730:	683a      	ldr	r2, [r7, #0]
 8003732:	68b9      	ldr	r1, [r7, #8]
 8003734:	68f8      	ldr	r0, [r7, #12]
 8003736:	f000 fa4d 	bl	8003bd4 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800373a:	68fb      	ldr	r3, [r7, #12]
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	681a      	ldr	r2, [r3, #0]
 8003740:	68fb      	ldr	r3, [r7, #12]
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8003748:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 800374a:	68fb      	ldr	r3, [r7, #12]
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	681a      	ldr	r2, [r3, #0]
 8003750:	68fb      	ldr	r3, [r7, #12]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	f042 0201 	orr.w	r2, r2, #1
 8003758:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 800375a:	2300      	movs	r3, #0
}
 800375c:	4618      	mov	r0, r3
 800375e:	3710      	adds	r7, #16
 8003760:	46bd      	mov	sp, r7
 8003762:	bd80      	pop	{r7, pc}

08003764 <HAL_DMA2D_Abort>:
  * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
  *                  the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
{
 8003764:	b580      	push	{r7, lr}
 8003766:	b084      	sub	sp, #16
 8003768:	af00      	add	r7, sp, #0
 800376a:	6078      	str	r0, [r7, #4]

  /* Abort the DMA2D transfer */
  /* START bit is reset to make sure not to set it again, in the event the HW clears it
     between the register read and the register write by the CPU (writing 0 has no
     effect on START bitvalue) */
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	681b      	ldr	r3, [r3, #0]
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	f023 0205 	bic.w	r2, r3, #5
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	f042 0204 	orr.w	r2, r2, #4
 800377e:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8003780:	f7ff f9a2 	bl	8002ac8 <HAL_GetTick>
 8003784:	60f8      	str	r0, [r7, #12]

  /* Check if the DMA2D is effectively disabled */
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8003786:	e017      	b.n	80037b8 <HAL_DMA2D_Abort+0x54>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8003788:	f7ff f99e 	bl	8002ac8 <HAL_GetTick>
 800378c:	4602      	mov	r2, r0
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	1ad3      	subs	r3, r2, r3
 8003792:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003796:	d90f      	bls.n	80037b8 <HAL_DMA2D_Abort+0x54>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800379c:	f043 0220 	orr.w	r2, r3, #32
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	2203      	movs	r2, #3
 80037a8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	2200      	movs	r2, #0
 80037b0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 80037b4:	2303      	movs	r3, #3
 80037b6:	e017      	b.n	80037e8 <HAL_DMA2D_Abort+0x84>
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	f003 0301 	and.w	r3, r3, #1
 80037c2:	2b00      	cmp	r3, #0
 80037c4:	d1e0      	bne.n	8003788 <HAL_DMA2D_Abort+0x24>
    }
  }

  /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	681b      	ldr	r3, [r3, #0]
 80037ca:	681a      	ldr	r2, [r3, #0]
 80037cc:	687b      	ldr	r3, [r7, #4]
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 80037d4:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	2201      	movs	r2, #1
 80037da:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	2200      	movs	r2, #0
 80037e2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 80037e6:	2300      	movs	r3, #0
}
 80037e8:	4618      	mov	r0, r3
 80037ea:	3710      	adds	r7, #16
 80037ec:	46bd      	mov	sp, r7
 80037ee:	bd80      	pop	{r7, pc}

080037f0 <HAL_DMA2D_CLUTLoading_Abort>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80037f0:	b580      	push	{r7, lr}
 80037f2:	b084      	sub	sp, #16
 80037f4:	af00      	add	r7, sp, #0
 80037f6:	6078      	str	r0, [r7, #4]
 80037f8:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	681b      	ldr	r3, [r3, #0]
 80037fe:	3324      	adds	r3, #36	; 0x24
 8003800:	60fb      	str	r3, [r7, #12]

  /* Abort the CLUT loading */
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	681a      	ldr	r2, [r3, #0]
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	f042 0204 	orr.w	r2, r2, #4
 8003810:	601a      	str	r2, [r3, #0]

  /* If foreground CLUT loading is considered, update local variables */
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8003812:	683b      	ldr	r3, [r7, #0]
 8003814:	2b01      	cmp	r3, #1
 8003816:	d103      	bne.n	8003820 <HAL_DMA2D_CLUTLoading_Abort+0x30>
  {
    reg  = &(hdma2d->Instance->FGPFCCR);
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	681b      	ldr	r3, [r3, #0]
 800381c:	331c      	adds	r3, #28
 800381e:	60fb      	str	r3, [r7, #12]
  }


  /* Get tick */
  tickstart = HAL_GetTick();
 8003820:	f7ff f952 	bl	8002ac8 <HAL_GetTick>
 8003824:	60b8      	str	r0, [r7, #8]

  /* Check if the CLUT loading is aborted */
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8003826:	e017      	b.n	8003858 <HAL_DMA2D_CLUTLoading_Abort+0x68>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8003828:	f7ff f94e 	bl	8002ac8 <HAL_GetTick>
 800382c:	4602      	mov	r2, r0
 800382e:	68bb      	ldr	r3, [r7, #8]
 8003830:	1ad3      	subs	r3, r2, r3
 8003832:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003836:	d90f      	bls.n	8003858 <HAL_DMA2D_CLUTLoading_Abort+0x68>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800383c:	f043 0220 	orr.w	r2, r3, #32
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	2203      	movs	r2, #3
 8003848:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	2200      	movs	r2, #0
 8003850:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 8003854:	2303      	movs	r3, #3
 8003856:	e016      	b.n	8003886 <HAL_DMA2D_CLUTLoading_Abort+0x96>
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	f003 0320 	and.w	r3, r3, #32
 8003860:	2b00      	cmp	r3, #0
 8003862:	d1e1      	bne.n	8003828 <HAL_DMA2D_CLUTLoading_Abort+0x38>
    }
  }

  /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	681a      	ldr	r2, [r3, #0]
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 8003872:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	2201      	movs	r2, #1
 8003878:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	2200      	movs	r2, #0
 8003880:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003884:	2300      	movs	r3, #0
}
 8003886:	4618      	mov	r0, r3
 8003888:	3710      	adds	r7, #16
 800388a:	46bd      	mov	sp, r7
 800388c:	bd80      	pop	{r7, pc}

0800388e <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 800388e:	b580      	push	{r7, lr}
 8003890:	b084      	sub	sp, #16
 8003892:	af00      	add	r7, sp, #0
 8003894:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	681b      	ldr	r3, [r3, #0]
 800389a:	685b      	ldr	r3, [r3, #4]
 800389c:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	681b      	ldr	r3, [r3, #0]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80038a6:	68fb      	ldr	r3, [r7, #12]
 80038a8:	f003 0301 	and.w	r3, r3, #1
 80038ac:	2b00      	cmp	r3, #0
 80038ae:	d026      	beq.n	80038fe <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80038b0:	68bb      	ldr	r3, [r7, #8]
 80038b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038b6:	2b00      	cmp	r3, #0
 80038b8:	d021      	beq.n	80038fe <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	681a      	ldr	r2, [r3, #0]
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80038c8:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80038ce:	f043 0201 	orr.w	r2, r3, #1
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	2201      	movs	r2, #1
 80038dc:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	2204      	movs	r2, #4
 80038e2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	2200      	movs	r2, #0
 80038ea:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	695b      	ldr	r3, [r3, #20]
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	d003      	beq.n	80038fe <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	695b      	ldr	r3, [r3, #20]
 80038fa:	6878      	ldr	r0, [r7, #4]
 80038fc:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80038fe:	68fb      	ldr	r3, [r7, #12]
 8003900:	f003 0320 	and.w	r3, r3, #32
 8003904:	2b00      	cmp	r3, #0
 8003906:	d026      	beq.n	8003956 <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003908:	68bb      	ldr	r3, [r7, #8]
 800390a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800390e:	2b00      	cmp	r3, #0
 8003910:	d021      	beq.n	8003956 <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	681a      	ldr	r2, [r3, #0]
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	681b      	ldr	r3, [r3, #0]
 800391c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003920:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	2220      	movs	r2, #32
 8003928:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800392e:	f043 0202 	orr.w	r2, r3, #2
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	2204      	movs	r2, #4
 800393a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	2200      	movs	r2, #0
 8003942:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	695b      	ldr	r3, [r3, #20]
 800394a:	2b00      	cmp	r3, #0
 800394c:	d003      	beq.n	8003956 <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	695b      	ldr	r3, [r3, #20]
 8003952:	6878      	ldr	r0, [r7, #4]
 8003954:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	f003 0308 	and.w	r3, r3, #8
 800395c:	2b00      	cmp	r3, #0
 800395e:	d026      	beq.n	80039ae <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003960:	68bb      	ldr	r3, [r7, #8]
 8003962:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003966:	2b00      	cmp	r3, #0
 8003968:	d021      	beq.n	80039ae <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	681a      	ldr	r2, [r3, #0]
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003978:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	2208      	movs	r2, #8
 8003980:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003982:	687b      	ldr	r3, [r7, #4]
 8003984:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003986:	f043 0204 	orr.w	r2, r3, #4
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	2204      	movs	r2, #4
 8003992:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	2200      	movs	r2, #0
 800399a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	695b      	ldr	r3, [r3, #20]
 80039a2:	2b00      	cmp	r3, #0
 80039a4:	d003      	beq.n	80039ae <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	695b      	ldr	r3, [r3, #20]
 80039aa:	6878      	ldr	r0, [r7, #4]
 80039ac:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80039ae:	68fb      	ldr	r3, [r7, #12]
 80039b0:	f003 0304 	and.w	r3, r3, #4
 80039b4:	2b00      	cmp	r3, #0
 80039b6:	d013      	beq.n	80039e0 <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 80039b8:	68bb      	ldr	r3, [r7, #8]
 80039ba:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d00e      	beq.n	80039e0 <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	681a      	ldr	r2, [r3, #0]
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80039d0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	2204      	movs	r2, #4
 80039d8:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 80039da:	6878      	ldr	r0, [r7, #4]
 80039dc:	f000 f853 	bl	8003a86 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	f003 0302 	and.w	r3, r3, #2
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d024      	beq.n	8003a34 <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 80039ea:	68bb      	ldr	r3, [r7, #8]
 80039ec:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80039f0:	2b00      	cmp	r3, #0
 80039f2:	d01f      	beq.n	8003a34 <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	681a      	ldr	r2, [r3, #0]
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	681b      	ldr	r3, [r3, #0]
 80039fe:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003a02:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	2202      	movs	r2, #2
 8003a0a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	2201      	movs	r2, #1
 8003a18:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	2200      	movs	r2, #0
 8003a20:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	691b      	ldr	r3, [r3, #16]
 8003a28:	2b00      	cmp	r3, #0
 8003a2a:	d003      	beq.n	8003a34 <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	691b      	ldr	r3, [r3, #16]
 8003a30:	6878      	ldr	r0, [r7, #4]
 8003a32:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003a34:	68fb      	ldr	r3, [r7, #12]
 8003a36:	f003 0310 	and.w	r3, r3, #16
 8003a3a:	2b00      	cmp	r3, #0
 8003a3c:	d01f      	beq.n	8003a7e <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003a3e:	68bb      	ldr	r3, [r7, #8]
 8003a40:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	d01a      	beq.n	8003a7e <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	681a      	ldr	r2, [r3, #0]
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	681b      	ldr	r3, [r3, #0]
 8003a52:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003a56:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	681b      	ldr	r3, [r3, #0]
 8003a5c:	2210      	movs	r2, #16
 8003a5e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	2201      	movs	r2, #1
 8003a6c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	2200      	movs	r2, #0
 8003a74:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003a78:	6878      	ldr	r0, [r7, #4]
 8003a7a:	f000 f80e 	bl	8003a9a <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8003a7e:	bf00      	nop
 8003a80:	3710      	adds	r7, #16
 8003a82:	46bd      	mov	sp, r7
 8003a84:	bd80      	pop	{r7, pc}

08003a86 <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8003a86:	b480      	push	{r7}
 8003a88:	b083      	sub	sp, #12
 8003a8a:	af00      	add	r7, sp, #0
 8003a8c:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 8003a8e:	bf00      	nop
 8003a90:	370c      	adds	r7, #12
 8003a92:	46bd      	mov	sp, r7
 8003a94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a98:	4770      	bx	lr

08003a9a <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8003a9a:	b480      	push	{r7}
 8003a9c:	b083      	sub	sp, #12
 8003a9e:	af00      	add	r7, sp, #0
 8003aa0:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 8003aa2:	bf00      	nop
 8003aa4:	370c      	adds	r7, #12
 8003aa6:	46bd      	mov	sp, r7
 8003aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aac:	4770      	bx	lr
	...

08003ab0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003ab0:	b480      	push	{r7}
 8003ab2:	b087      	sub	sp, #28
 8003ab4:	af00      	add	r7, sp, #0
 8003ab6:	6078      	str	r0, [r7, #4]
 8003ab8:	6039      	str	r1, [r7, #0]
  uint32_t regMask, regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if(hdma2d->Init.Mode != DMA2D_R2M)
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	685b      	ldr	r3, [r3, #4]
 8003abe:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003ac8:	2b01      	cmp	r3, #1
 8003aca:	d101      	bne.n	8003ad0 <HAL_DMA2D_ConfigLayer+0x20>
 8003acc:	2302      	movs	r3, #2
 8003ace:	e079      	b.n	8003bc4 <HAL_DMA2D_ConfigLayer+0x114>
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	2201      	movs	r2, #1
 8003ad4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	2202      	movs	r2, #2
 8003adc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 8003ae0:	683b      	ldr	r3, [r7, #0]
 8003ae2:	011b      	lsls	r3, r3, #4
 8003ae4:	3318      	adds	r3, #24
 8003ae6:	687a      	ldr	r2, [r7, #4]
 8003ae8:	4413      	add	r3, r2
 8003aea:	613b      	str	r3, [r7, #16]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003aec:	693b      	ldr	r3, [r7, #16]
 8003aee:	685a      	ldr	r2, [r3, #4]
 8003af0:	693b      	ldr	r3, [r7, #16]
 8003af2:	689b      	ldr	r3, [r3, #8]
 8003af4:	041b      	lsls	r3, r3, #16
 8003af6:	4313      	orrs	r3, r2
 8003af8:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 8003afa:	4b35      	ldr	r3, [pc, #212]	; (8003bd0 <HAL_DMA2D_ConfigLayer+0x120>)
 8003afc:	60fb      	str	r3, [r7, #12]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003afe:	693b      	ldr	r3, [r7, #16]
 8003b00:	685b      	ldr	r3, [r3, #4]
 8003b02:	2b0a      	cmp	r3, #10
 8003b04:	d003      	beq.n	8003b0e <HAL_DMA2D_ConfigLayer+0x5e>
 8003b06:	693b      	ldr	r3, [r7, #16]
 8003b08:	685b      	ldr	r3, [r3, #4]
 8003b0a:	2b09      	cmp	r3, #9
 8003b0c:	d107      	bne.n	8003b1e <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003b0e:	693b      	ldr	r3, [r7, #16]
 8003b10:	68db      	ldr	r3, [r3, #12]
 8003b12:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003b16:	697a      	ldr	r2, [r7, #20]
 8003b18:	4313      	orrs	r3, r2
 8003b1a:	617b      	str	r3, [r7, #20]
 8003b1c:	e005      	b.n	8003b2a <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003b1e:	693b      	ldr	r3, [r7, #16]
 8003b20:	68db      	ldr	r3, [r3, #12]
 8003b22:	061b      	lsls	r3, r3, #24
 8003b24:	697a      	ldr	r2, [r7, #20]
 8003b26:	4313      	orrs	r3, r2
 8003b28:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003b2a:	683b      	ldr	r3, [r7, #0]
 8003b2c:	2b00      	cmp	r3, #0
 8003b2e:	d120      	bne.n	8003b72 <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	43db      	mvns	r3, r3
 8003b3a:	ea02 0103 	and.w	r1, r2, r3
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	697a      	ldr	r2, [r7, #20]
 8003b44:	430a      	orrs	r2, r1
 8003b46:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	693a      	ldr	r2, [r7, #16]
 8003b4e:	6812      	ldr	r2, [r2, #0]
 8003b50:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b52:	693b      	ldr	r3, [r7, #16]
 8003b54:	685b      	ldr	r3, [r3, #4]
 8003b56:	2b0a      	cmp	r3, #10
 8003b58:	d003      	beq.n	8003b62 <HAL_DMA2D_ConfigLayer+0xb2>
 8003b5a:	693b      	ldr	r3, [r7, #16]
 8003b5c:	685b      	ldr	r3, [r3, #4]
 8003b5e:	2b09      	cmp	r3, #9
 8003b60:	d127      	bne.n	8003bb2 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8003b62:	693b      	ldr	r3, [r7, #16]
 8003b64:	68da      	ldr	r2, [r3, #12]
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003b6e:	629a      	str	r2, [r3, #40]	; 0x28
 8003b70:	e01f      	b.n	8003bb2 <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


     /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	69da      	ldr	r2, [r3, #28]
 8003b78:	68fb      	ldr	r3, [r7, #12]
 8003b7a:	43db      	mvns	r3, r3
 8003b7c:	ea02 0103 	and.w	r1, r2, r3
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	697a      	ldr	r2, [r7, #20]
 8003b86:	430a      	orrs	r2, r1
 8003b88:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	693a      	ldr	r2, [r7, #16]
 8003b90:	6812      	ldr	r2, [r2, #0]
 8003b92:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b94:	693b      	ldr	r3, [r7, #16]
 8003b96:	685b      	ldr	r3, [r3, #4]
 8003b98:	2b0a      	cmp	r3, #10
 8003b9a:	d003      	beq.n	8003ba4 <HAL_DMA2D_ConfigLayer+0xf4>
 8003b9c:	693b      	ldr	r3, [r7, #16]
 8003b9e:	685b      	ldr	r3, [r3, #4]
 8003ba0:	2b09      	cmp	r3, #9
 8003ba2:	d106      	bne.n	8003bb2 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8003ba4:	693b      	ldr	r3, [r7, #16]
 8003ba6:	68da      	ldr	r2, [r3, #12]
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003bb0:	621a      	str	r2, [r3, #32]
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	2201      	movs	r2, #1
 8003bb6:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	2200      	movs	r2, #0
 8003bbe:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003bc2:	2300      	movs	r3, #0
}
 8003bc4:	4618      	mov	r0, r3
 8003bc6:	371c      	adds	r7, #28
 8003bc8:	46bd      	mov	sp, r7
 8003bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bce:	4770      	bx	lr
 8003bd0:	ff03000f 	.word	0xff03000f

08003bd4 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8003bd4:	b480      	push	{r7}
 8003bd6:	b08b      	sub	sp, #44	; 0x2c
 8003bd8:	af00      	add	r7, sp, #0
 8003bda:	60f8      	str	r0, [r7, #12]
 8003bdc:	60b9      	str	r1, [r7, #8]
 8003bde:	607a      	str	r2, [r7, #4]
 8003be0:	603b      	str	r3, [r7, #0]
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8003be2:	68fb      	ldr	r3, [r7, #12]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003be8:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 8003bec:	683b      	ldr	r3, [r7, #0]
 8003bee:	041a      	lsls	r2, r3, #16
 8003bf0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003bf2:	431a      	orrs	r2, r3
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	430a      	orrs	r2, r1
 8003bfa:	645a      	str	r2, [r3, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8003bfc:	68fb      	ldr	r3, [r7, #12]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	687a      	ldr	r2, [r7, #4]
 8003c02:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003c04:	68fb      	ldr	r3, [r7, #12]
 8003c06:	685b      	ldr	r3, [r3, #4]
 8003c08:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003c0c:	d174      	bne.n	8003cf8 <DMA2D_SetConfig+0x124>
  {
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8003c0e:	68bb      	ldr	r3, [r7, #8]
 8003c10:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003c14:	623b      	str	r3, [r7, #32]
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8003c16:	68bb      	ldr	r3, [r7, #8]
 8003c18:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8003c1c:	61fb      	str	r3, [r7, #28]
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8003c1e:	68bb      	ldr	r3, [r7, #8]
 8003c20:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8003c24:	61bb      	str	r3, [r7, #24]
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8003c26:	68bb      	ldr	r3, [r7, #8]
 8003c28:	b2db      	uxtb	r3, r3
 8003c2a:	617b      	str	r3, [r7, #20]

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8003c2c:	68fb      	ldr	r3, [r7, #12]
 8003c2e:	689b      	ldr	r3, [r3, #8]
 8003c30:	2b00      	cmp	r3, #0
 8003c32:	d108      	bne.n	8003c46 <DMA2D_SetConfig+0x72>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
 8003c34:	69ba      	ldr	r2, [r7, #24]
 8003c36:	69fb      	ldr	r3, [r7, #28]
 8003c38:	431a      	orrs	r2, r3
 8003c3a:	6a3b      	ldr	r3, [r7, #32]
 8003c3c:	4313      	orrs	r3, r2
 8003c3e:	697a      	ldr	r2, [r7, #20]
 8003c40:	4313      	orrs	r3, r2
 8003c42:	627b      	str	r3, [r7, #36]	; 0x24
 8003c44:	e053      	b.n	8003cee <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8003c46:	68fb      	ldr	r3, [r7, #12]
 8003c48:	689b      	ldr	r3, [r3, #8]
 8003c4a:	2b01      	cmp	r3, #1
 8003c4c:	d106      	bne.n	8003c5c <DMA2D_SetConfig+0x88>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8003c4e:	69ba      	ldr	r2, [r7, #24]
 8003c50:	69fb      	ldr	r3, [r7, #28]
 8003c52:	4313      	orrs	r3, r2
 8003c54:	697a      	ldr	r2, [r7, #20]
 8003c56:	4313      	orrs	r3, r2
 8003c58:	627b      	str	r3, [r7, #36]	; 0x24
 8003c5a:	e048      	b.n	8003cee <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003c5c:	68fb      	ldr	r3, [r7, #12]
 8003c5e:	689b      	ldr	r3, [r3, #8]
 8003c60:	2b02      	cmp	r3, #2
 8003c62:	d111      	bne.n	8003c88 <DMA2D_SetConfig+0xb4>
    {
      tmp2 = (tmp2 >> 19U);
 8003c64:	69fb      	ldr	r3, [r7, #28]
 8003c66:	0cdb      	lsrs	r3, r3, #19
 8003c68:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 10U);
 8003c6a:	69bb      	ldr	r3, [r7, #24]
 8003c6c:	0a9b      	lsrs	r3, r3, #10
 8003c6e:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8003c70:	697b      	ldr	r3, [r7, #20]
 8003c72:	08db      	lsrs	r3, r3, #3
 8003c74:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8003c76:	69bb      	ldr	r3, [r7, #24]
 8003c78:	015a      	lsls	r2, r3, #5
 8003c7a:	69fb      	ldr	r3, [r7, #28]
 8003c7c:	02db      	lsls	r3, r3, #11
 8003c7e:	4313      	orrs	r3, r2
 8003c80:	697a      	ldr	r2, [r7, #20]
 8003c82:	4313      	orrs	r3, r2
 8003c84:	627b      	str	r3, [r7, #36]	; 0x24
 8003c86:	e032      	b.n	8003cee <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003c88:	68fb      	ldr	r3, [r7, #12]
 8003c8a:	689b      	ldr	r3, [r3, #8]
 8003c8c:	2b03      	cmp	r3, #3
 8003c8e:	d117      	bne.n	8003cc0 <DMA2D_SetConfig+0xec>
    {
      tmp1 = (tmp1 >> 31U);
 8003c90:	6a3b      	ldr	r3, [r7, #32]
 8003c92:	0fdb      	lsrs	r3, r3, #31
 8003c94:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 19U);
 8003c96:	69fb      	ldr	r3, [r7, #28]
 8003c98:	0cdb      	lsrs	r3, r3, #19
 8003c9a:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 11U);
 8003c9c:	69bb      	ldr	r3, [r7, #24]
 8003c9e:	0adb      	lsrs	r3, r3, #11
 8003ca0:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8003ca2:	697b      	ldr	r3, [r7, #20]
 8003ca4:	08db      	lsrs	r3, r3, #3
 8003ca6:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003ca8:	69bb      	ldr	r3, [r7, #24]
 8003caa:	015a      	lsls	r2, r3, #5
 8003cac:	69fb      	ldr	r3, [r7, #28]
 8003cae:	029b      	lsls	r3, r3, #10
 8003cb0:	431a      	orrs	r2, r3
 8003cb2:	6a3b      	ldr	r3, [r7, #32]
 8003cb4:	03db      	lsls	r3, r3, #15
 8003cb6:	4313      	orrs	r3, r2
 8003cb8:	697a      	ldr	r2, [r7, #20]
 8003cba:	4313      	orrs	r3, r2
 8003cbc:	627b      	str	r3, [r7, #36]	; 0x24
 8003cbe:	e016      	b.n	8003cee <DMA2D_SetConfig+0x11a>
    }
    else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
    {
      tmp1 = (tmp1 >> 28U);
 8003cc0:	6a3b      	ldr	r3, [r7, #32]
 8003cc2:	0f1b      	lsrs	r3, r3, #28
 8003cc4:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 20U);
 8003cc6:	69fb      	ldr	r3, [r7, #28]
 8003cc8:	0d1b      	lsrs	r3, r3, #20
 8003cca:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 12U);
 8003ccc:	69bb      	ldr	r3, [r7, #24]
 8003cce:	0b1b      	lsrs	r3, r3, #12
 8003cd0:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 4U );
 8003cd2:	697b      	ldr	r3, [r7, #20]
 8003cd4:	091b      	lsrs	r3, r3, #4
 8003cd6:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8003cd8:	69bb      	ldr	r3, [r7, #24]
 8003cda:	011a      	lsls	r2, r3, #4
 8003cdc:	69fb      	ldr	r3, [r7, #28]
 8003cde:	021b      	lsls	r3, r3, #8
 8003ce0:	431a      	orrs	r2, r3
 8003ce2:	6a3b      	ldr	r3, [r7, #32]
 8003ce4:	031b      	lsls	r3, r3, #12
 8003ce6:	4313      	orrs	r3, r2
 8003ce8:	697a      	ldr	r2, [r7, #20]
 8003cea:	4313      	orrs	r3, r2
 8003cec:	627b      	str	r3, [r7, #36]	; 0x24
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8003cee:	68fb      	ldr	r3, [r7, #12]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003cf4:	639a      	str	r2, [r3, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8003cf6:	e003      	b.n	8003d00 <DMA2D_SetConfig+0x12c>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	68ba      	ldr	r2, [r7, #8]
 8003cfe:	60da      	str	r2, [r3, #12]
}
 8003d00:	bf00      	nop
 8003d02:	372c      	adds	r7, #44	; 0x2c
 8003d04:	46bd      	mov	sp, r7
 8003d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d0a:	4770      	bx	lr

08003d0c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003d0c:	b480      	push	{r7}
 8003d0e:	b089      	sub	sp, #36	; 0x24
 8003d10:	af00      	add	r7, sp, #0
 8003d12:	6078      	str	r0, [r7, #4]
 8003d14:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003d16:	2300      	movs	r3, #0
 8003d18:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003d1a:	2300      	movs	r3, #0
 8003d1c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8003d1e:	2300      	movs	r3, #0
 8003d20:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003d22:	2300      	movs	r3, #0
 8003d24:	61fb      	str	r3, [r7, #28]
 8003d26:	e177      	b.n	8004018 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003d28:	2201      	movs	r2, #1
 8003d2a:	69fb      	ldr	r3, [r7, #28]
 8003d2c:	fa02 f303 	lsl.w	r3, r2, r3
 8003d30:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003d32:	683b      	ldr	r3, [r7, #0]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	697a      	ldr	r2, [r7, #20]
 8003d38:	4013      	ands	r3, r2
 8003d3a:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003d3c:	693a      	ldr	r2, [r7, #16]
 8003d3e:	697b      	ldr	r3, [r7, #20]
 8003d40:	429a      	cmp	r2, r3
 8003d42:	f040 8166 	bne.w	8004012 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003d46:	683b      	ldr	r3, [r7, #0]
 8003d48:	685b      	ldr	r3, [r3, #4]
 8003d4a:	2b01      	cmp	r3, #1
 8003d4c:	d00b      	beq.n	8003d66 <HAL_GPIO_Init+0x5a>
 8003d4e:	683b      	ldr	r3, [r7, #0]
 8003d50:	685b      	ldr	r3, [r3, #4]
 8003d52:	2b02      	cmp	r3, #2
 8003d54:	d007      	beq.n	8003d66 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003d56:	683b      	ldr	r3, [r7, #0]
 8003d58:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003d5a:	2b11      	cmp	r3, #17
 8003d5c:	d003      	beq.n	8003d66 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003d5e:	683b      	ldr	r3, [r7, #0]
 8003d60:	685b      	ldr	r3, [r3, #4]
 8003d62:	2b12      	cmp	r3, #18
 8003d64:	d130      	bne.n	8003dc8 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	689b      	ldr	r3, [r3, #8]
 8003d6a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003d6c:	69fb      	ldr	r3, [r7, #28]
 8003d6e:	005b      	lsls	r3, r3, #1
 8003d70:	2203      	movs	r2, #3
 8003d72:	fa02 f303 	lsl.w	r3, r2, r3
 8003d76:	43db      	mvns	r3, r3
 8003d78:	69ba      	ldr	r2, [r7, #24]
 8003d7a:	4013      	ands	r3, r2
 8003d7c:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003d7e:	683b      	ldr	r3, [r7, #0]
 8003d80:	68da      	ldr	r2, [r3, #12]
 8003d82:	69fb      	ldr	r3, [r7, #28]
 8003d84:	005b      	lsls	r3, r3, #1
 8003d86:	fa02 f303 	lsl.w	r3, r2, r3
 8003d8a:	69ba      	ldr	r2, [r7, #24]
 8003d8c:	4313      	orrs	r3, r2
 8003d8e:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	69ba      	ldr	r2, [r7, #24]
 8003d94:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	685b      	ldr	r3, [r3, #4]
 8003d9a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003d9c:	2201      	movs	r2, #1
 8003d9e:	69fb      	ldr	r3, [r7, #28]
 8003da0:	fa02 f303 	lsl.w	r3, r2, r3
 8003da4:	43db      	mvns	r3, r3
 8003da6:	69ba      	ldr	r2, [r7, #24]
 8003da8:	4013      	ands	r3, r2
 8003daa:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8003dac:	683b      	ldr	r3, [r7, #0]
 8003dae:	685b      	ldr	r3, [r3, #4]
 8003db0:	091b      	lsrs	r3, r3, #4
 8003db2:	f003 0201 	and.w	r2, r3, #1
 8003db6:	69fb      	ldr	r3, [r7, #28]
 8003db8:	fa02 f303 	lsl.w	r3, r2, r3
 8003dbc:	69ba      	ldr	r2, [r7, #24]
 8003dbe:	4313      	orrs	r3, r2
 8003dc0:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	69ba      	ldr	r2, [r7, #24]
 8003dc6:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	68db      	ldr	r3, [r3, #12]
 8003dcc:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003dce:	69fb      	ldr	r3, [r7, #28]
 8003dd0:	005b      	lsls	r3, r3, #1
 8003dd2:	2203      	movs	r2, #3
 8003dd4:	fa02 f303 	lsl.w	r3, r2, r3
 8003dd8:	43db      	mvns	r3, r3
 8003dda:	69ba      	ldr	r2, [r7, #24]
 8003ddc:	4013      	ands	r3, r2
 8003dde:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003de0:	683b      	ldr	r3, [r7, #0]
 8003de2:	689a      	ldr	r2, [r3, #8]
 8003de4:	69fb      	ldr	r3, [r7, #28]
 8003de6:	005b      	lsls	r3, r3, #1
 8003de8:	fa02 f303 	lsl.w	r3, r2, r3
 8003dec:	69ba      	ldr	r2, [r7, #24]
 8003dee:	4313      	orrs	r3, r2
 8003df0:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	69ba      	ldr	r2, [r7, #24]
 8003df6:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003df8:	683b      	ldr	r3, [r7, #0]
 8003dfa:	685b      	ldr	r3, [r3, #4]
 8003dfc:	2b02      	cmp	r3, #2
 8003dfe:	d003      	beq.n	8003e08 <HAL_GPIO_Init+0xfc>
 8003e00:	683b      	ldr	r3, [r7, #0]
 8003e02:	685b      	ldr	r3, [r3, #4]
 8003e04:	2b12      	cmp	r3, #18
 8003e06:	d123      	bne.n	8003e50 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003e08:	69fb      	ldr	r3, [r7, #28]
 8003e0a:	08da      	lsrs	r2, r3, #3
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	3208      	adds	r2, #8
 8003e10:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003e14:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003e16:	69fb      	ldr	r3, [r7, #28]
 8003e18:	f003 0307 	and.w	r3, r3, #7
 8003e1c:	009b      	lsls	r3, r3, #2
 8003e1e:	220f      	movs	r2, #15
 8003e20:	fa02 f303 	lsl.w	r3, r2, r3
 8003e24:	43db      	mvns	r3, r3
 8003e26:	69ba      	ldr	r2, [r7, #24]
 8003e28:	4013      	ands	r3, r2
 8003e2a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003e2c:	683b      	ldr	r3, [r7, #0]
 8003e2e:	691a      	ldr	r2, [r3, #16]
 8003e30:	69fb      	ldr	r3, [r7, #28]
 8003e32:	f003 0307 	and.w	r3, r3, #7
 8003e36:	009b      	lsls	r3, r3, #2
 8003e38:	fa02 f303 	lsl.w	r3, r2, r3
 8003e3c:	69ba      	ldr	r2, [r7, #24]
 8003e3e:	4313      	orrs	r3, r2
 8003e40:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8003e42:	69fb      	ldr	r3, [r7, #28]
 8003e44:	08da      	lsrs	r2, r3, #3
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	3208      	adds	r2, #8
 8003e4a:	69b9      	ldr	r1, [r7, #24]
 8003e4c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003e56:	69fb      	ldr	r3, [r7, #28]
 8003e58:	005b      	lsls	r3, r3, #1
 8003e5a:	2203      	movs	r2, #3
 8003e5c:	fa02 f303 	lsl.w	r3, r2, r3
 8003e60:	43db      	mvns	r3, r3
 8003e62:	69ba      	ldr	r2, [r7, #24]
 8003e64:	4013      	ands	r3, r2
 8003e66:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003e68:	683b      	ldr	r3, [r7, #0]
 8003e6a:	685b      	ldr	r3, [r3, #4]
 8003e6c:	f003 0203 	and.w	r2, r3, #3
 8003e70:	69fb      	ldr	r3, [r7, #28]
 8003e72:	005b      	lsls	r3, r3, #1
 8003e74:	fa02 f303 	lsl.w	r3, r2, r3
 8003e78:	69ba      	ldr	r2, [r7, #24]
 8003e7a:	4313      	orrs	r3, r2
 8003e7c:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	69ba      	ldr	r2, [r7, #24]
 8003e82:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003e84:	683b      	ldr	r3, [r7, #0]
 8003e86:	685b      	ldr	r3, [r3, #4]
 8003e88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003e8c:	2b00      	cmp	r3, #0
 8003e8e:	f000 80c0 	beq.w	8004012 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003e92:	2300      	movs	r3, #0
 8003e94:	60fb      	str	r3, [r7, #12]
 8003e96:	4b66      	ldr	r3, [pc, #408]	; (8004030 <HAL_GPIO_Init+0x324>)
 8003e98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003e9a:	4a65      	ldr	r2, [pc, #404]	; (8004030 <HAL_GPIO_Init+0x324>)
 8003e9c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003ea0:	6453      	str	r3, [r2, #68]	; 0x44
 8003ea2:	4b63      	ldr	r3, [pc, #396]	; (8004030 <HAL_GPIO_Init+0x324>)
 8003ea4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003ea6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003eaa:	60fb      	str	r3, [r7, #12]
 8003eac:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8003eae:	4a61      	ldr	r2, [pc, #388]	; (8004034 <HAL_GPIO_Init+0x328>)
 8003eb0:	69fb      	ldr	r3, [r7, #28]
 8003eb2:	089b      	lsrs	r3, r3, #2
 8003eb4:	3302      	adds	r3, #2
 8003eb6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003eba:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003ebc:	69fb      	ldr	r3, [r7, #28]
 8003ebe:	f003 0303 	and.w	r3, r3, #3
 8003ec2:	009b      	lsls	r3, r3, #2
 8003ec4:	220f      	movs	r2, #15
 8003ec6:	fa02 f303 	lsl.w	r3, r2, r3
 8003eca:	43db      	mvns	r3, r3
 8003ecc:	69ba      	ldr	r2, [r7, #24]
 8003ece:	4013      	ands	r3, r2
 8003ed0:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	4a58      	ldr	r2, [pc, #352]	; (8004038 <HAL_GPIO_Init+0x32c>)
 8003ed6:	4293      	cmp	r3, r2
 8003ed8:	d037      	beq.n	8003f4a <HAL_GPIO_Init+0x23e>
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	4a57      	ldr	r2, [pc, #348]	; (800403c <HAL_GPIO_Init+0x330>)
 8003ede:	4293      	cmp	r3, r2
 8003ee0:	d031      	beq.n	8003f46 <HAL_GPIO_Init+0x23a>
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	4a56      	ldr	r2, [pc, #344]	; (8004040 <HAL_GPIO_Init+0x334>)
 8003ee6:	4293      	cmp	r3, r2
 8003ee8:	d02b      	beq.n	8003f42 <HAL_GPIO_Init+0x236>
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	4a55      	ldr	r2, [pc, #340]	; (8004044 <HAL_GPIO_Init+0x338>)
 8003eee:	4293      	cmp	r3, r2
 8003ef0:	d025      	beq.n	8003f3e <HAL_GPIO_Init+0x232>
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	4a54      	ldr	r2, [pc, #336]	; (8004048 <HAL_GPIO_Init+0x33c>)
 8003ef6:	4293      	cmp	r3, r2
 8003ef8:	d01f      	beq.n	8003f3a <HAL_GPIO_Init+0x22e>
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	4a53      	ldr	r2, [pc, #332]	; (800404c <HAL_GPIO_Init+0x340>)
 8003efe:	4293      	cmp	r3, r2
 8003f00:	d019      	beq.n	8003f36 <HAL_GPIO_Init+0x22a>
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	4a52      	ldr	r2, [pc, #328]	; (8004050 <HAL_GPIO_Init+0x344>)
 8003f06:	4293      	cmp	r3, r2
 8003f08:	d013      	beq.n	8003f32 <HAL_GPIO_Init+0x226>
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	4a51      	ldr	r2, [pc, #324]	; (8004054 <HAL_GPIO_Init+0x348>)
 8003f0e:	4293      	cmp	r3, r2
 8003f10:	d00d      	beq.n	8003f2e <HAL_GPIO_Init+0x222>
 8003f12:	687b      	ldr	r3, [r7, #4]
 8003f14:	4a50      	ldr	r2, [pc, #320]	; (8004058 <HAL_GPIO_Init+0x34c>)
 8003f16:	4293      	cmp	r3, r2
 8003f18:	d007      	beq.n	8003f2a <HAL_GPIO_Init+0x21e>
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	4a4f      	ldr	r2, [pc, #316]	; (800405c <HAL_GPIO_Init+0x350>)
 8003f1e:	4293      	cmp	r3, r2
 8003f20:	d101      	bne.n	8003f26 <HAL_GPIO_Init+0x21a>
 8003f22:	2309      	movs	r3, #9
 8003f24:	e012      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f26:	230a      	movs	r3, #10
 8003f28:	e010      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f2a:	2308      	movs	r3, #8
 8003f2c:	e00e      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f2e:	2307      	movs	r3, #7
 8003f30:	e00c      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f32:	2306      	movs	r3, #6
 8003f34:	e00a      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f36:	2305      	movs	r3, #5
 8003f38:	e008      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f3a:	2304      	movs	r3, #4
 8003f3c:	e006      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f3e:	2303      	movs	r3, #3
 8003f40:	e004      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f42:	2302      	movs	r3, #2
 8003f44:	e002      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f46:	2301      	movs	r3, #1
 8003f48:	e000      	b.n	8003f4c <HAL_GPIO_Init+0x240>
 8003f4a:	2300      	movs	r3, #0
 8003f4c:	69fa      	ldr	r2, [r7, #28]
 8003f4e:	f002 0203 	and.w	r2, r2, #3
 8003f52:	0092      	lsls	r2, r2, #2
 8003f54:	4093      	lsls	r3, r2
 8003f56:	69ba      	ldr	r2, [r7, #24]
 8003f58:	4313      	orrs	r3, r2
 8003f5a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003f5c:	4935      	ldr	r1, [pc, #212]	; (8004034 <HAL_GPIO_Init+0x328>)
 8003f5e:	69fb      	ldr	r3, [r7, #28]
 8003f60:	089b      	lsrs	r3, r3, #2
 8003f62:	3302      	adds	r3, #2
 8003f64:	69ba      	ldr	r2, [r7, #24]
 8003f66:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003f6a:	4b3d      	ldr	r3, [pc, #244]	; (8004060 <HAL_GPIO_Init+0x354>)
 8003f6c:	681b      	ldr	r3, [r3, #0]
 8003f6e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003f70:	693b      	ldr	r3, [r7, #16]
 8003f72:	43db      	mvns	r3, r3
 8003f74:	69ba      	ldr	r2, [r7, #24]
 8003f76:	4013      	ands	r3, r2
 8003f78:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8003f7a:	683b      	ldr	r3, [r7, #0]
 8003f7c:	685b      	ldr	r3, [r3, #4]
 8003f7e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003f82:	2b00      	cmp	r3, #0
 8003f84:	d003      	beq.n	8003f8e <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8003f86:	69ba      	ldr	r2, [r7, #24]
 8003f88:	693b      	ldr	r3, [r7, #16]
 8003f8a:	4313      	orrs	r3, r2
 8003f8c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8003f8e:	4a34      	ldr	r2, [pc, #208]	; (8004060 <HAL_GPIO_Init+0x354>)
 8003f90:	69bb      	ldr	r3, [r7, #24]
 8003f92:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8003f94:	4b32      	ldr	r3, [pc, #200]	; (8004060 <HAL_GPIO_Init+0x354>)
 8003f96:	685b      	ldr	r3, [r3, #4]
 8003f98:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003f9a:	693b      	ldr	r3, [r7, #16]
 8003f9c:	43db      	mvns	r3, r3
 8003f9e:	69ba      	ldr	r2, [r7, #24]
 8003fa0:	4013      	ands	r3, r2
 8003fa2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8003fa4:	683b      	ldr	r3, [r7, #0]
 8003fa6:	685b      	ldr	r3, [r3, #4]
 8003fa8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003fac:	2b00      	cmp	r3, #0
 8003fae:	d003      	beq.n	8003fb8 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8003fb0:	69ba      	ldr	r2, [r7, #24]
 8003fb2:	693b      	ldr	r3, [r7, #16]
 8003fb4:	4313      	orrs	r3, r2
 8003fb6:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8003fb8:	4a29      	ldr	r2, [pc, #164]	; (8004060 <HAL_GPIO_Init+0x354>)
 8003fba:	69bb      	ldr	r3, [r7, #24]
 8003fbc:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003fbe:	4b28      	ldr	r3, [pc, #160]	; (8004060 <HAL_GPIO_Init+0x354>)
 8003fc0:	689b      	ldr	r3, [r3, #8]
 8003fc2:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003fc4:	693b      	ldr	r3, [r7, #16]
 8003fc6:	43db      	mvns	r3, r3
 8003fc8:	69ba      	ldr	r2, [r7, #24]
 8003fca:	4013      	ands	r3, r2
 8003fcc:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8003fce:	683b      	ldr	r3, [r7, #0]
 8003fd0:	685b      	ldr	r3, [r3, #4]
 8003fd2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003fd6:	2b00      	cmp	r3, #0
 8003fd8:	d003      	beq.n	8003fe2 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8003fda:	69ba      	ldr	r2, [r7, #24]
 8003fdc:	693b      	ldr	r3, [r7, #16]
 8003fde:	4313      	orrs	r3, r2
 8003fe0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8003fe2:	4a1f      	ldr	r2, [pc, #124]	; (8004060 <HAL_GPIO_Init+0x354>)
 8003fe4:	69bb      	ldr	r3, [r7, #24]
 8003fe6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8003fe8:	4b1d      	ldr	r3, [pc, #116]	; (8004060 <HAL_GPIO_Init+0x354>)
 8003fea:	68db      	ldr	r3, [r3, #12]
 8003fec:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003fee:	693b      	ldr	r3, [r7, #16]
 8003ff0:	43db      	mvns	r3, r3
 8003ff2:	69ba      	ldr	r2, [r7, #24]
 8003ff4:	4013      	ands	r3, r2
 8003ff6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8003ff8:	683b      	ldr	r3, [r7, #0]
 8003ffa:	685b      	ldr	r3, [r3, #4]
 8003ffc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004000:	2b00      	cmp	r3, #0
 8004002:	d003      	beq.n	800400c <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8004004:	69ba      	ldr	r2, [r7, #24]
 8004006:	693b      	ldr	r3, [r7, #16]
 8004008:	4313      	orrs	r3, r2
 800400a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 800400c:	4a14      	ldr	r2, [pc, #80]	; (8004060 <HAL_GPIO_Init+0x354>)
 800400e:	69bb      	ldr	r3, [r7, #24]
 8004010:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004012:	69fb      	ldr	r3, [r7, #28]
 8004014:	3301      	adds	r3, #1
 8004016:	61fb      	str	r3, [r7, #28]
 8004018:	69fb      	ldr	r3, [r7, #28]
 800401a:	2b0f      	cmp	r3, #15
 800401c:	f67f ae84 	bls.w	8003d28 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8004020:	bf00      	nop
 8004022:	bf00      	nop
 8004024:	3724      	adds	r7, #36	; 0x24
 8004026:	46bd      	mov	sp, r7
 8004028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800402c:	4770      	bx	lr
 800402e:	bf00      	nop
 8004030:	40023800 	.word	0x40023800
 8004034:	40013800 	.word	0x40013800
 8004038:	40020000 	.word	0x40020000
 800403c:	40020400 	.word	0x40020400
 8004040:	40020800 	.word	0x40020800
 8004044:	40020c00 	.word	0x40020c00
 8004048:	40021000 	.word	0x40021000
 800404c:	40021400 	.word	0x40021400
 8004050:	40021800 	.word	0x40021800
 8004054:	40021c00 	.word	0x40021c00
 8004058:	40022000 	.word	0x40022000
 800405c:	40022400 	.word	0x40022400
 8004060:	40013c00 	.word	0x40013c00

08004064 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004064:	b480      	push	{r7}
 8004066:	b083      	sub	sp, #12
 8004068:	af00      	add	r7, sp, #0
 800406a:	6078      	str	r0, [r7, #4]
 800406c:	460b      	mov	r3, r1
 800406e:	807b      	strh	r3, [r7, #2]
 8004070:	4613      	mov	r3, r2
 8004072:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004074:	787b      	ldrb	r3, [r7, #1]
 8004076:	2b00      	cmp	r3, #0
 8004078:	d003      	beq.n	8004082 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800407a:	887a      	ldrh	r2, [r7, #2]
 800407c:	687b      	ldr	r3, [r7, #4]
 800407e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8004080:	e003      	b.n	800408a <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004082:	887b      	ldrh	r3, [r7, #2]
 8004084:	041a      	lsls	r2, r3, #16
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	619a      	str	r2, [r3, #24]
}
 800408a:	bf00      	nop
 800408c:	370c      	adds	r7, #12
 800408e:	46bd      	mov	sp, r7
 8004090:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004094:	4770      	bx	lr
	...

08004098 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 8004098:	b580      	push	{r7, lr}
 800409a:	b084      	sub	sp, #16
 800409c:	af00      	add	r7, sp, #0
 800409e:	6078      	str	r0, [r7, #4]
  uint32_t tmp, tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 80040a0:	687b      	ldr	r3, [r7, #4]
 80040a2:	2b00      	cmp	r3, #0
 80040a4:	d101      	bne.n	80040aa <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 80040a6:	2301      	movs	r3, #1
 80040a8:	e0bf      	b.n	800422a <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 80040b0:	b2db      	uxtb	r3, r3
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d106      	bne.n	80040c4 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	2200      	movs	r2, #0
 80040ba:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 80040be:	6878      	ldr	r0, [r7, #4]
 80040c0:	f7fd ffde 	bl	8002080 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	2202      	movs	r2, #2
 80040c8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	699a      	ldr	r2, [r3, #24]
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80040da:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	6999      	ldr	r1, [r3, #24]
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	685a      	ldr	r2, [r3, #4]
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	689b      	ldr	r3, [r3, #8]
 80040ea:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80040f0:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	691b      	ldr	r3, [r3, #16]
 80040f6:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	681b      	ldr	r3, [r3, #0]
 80040fc:	430a      	orrs	r2, r1
 80040fe:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	6899      	ldr	r1, [r3, #8]
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	681a      	ldr	r2, [r3, #0]
 800410a:	4b4a      	ldr	r3, [pc, #296]	; (8004234 <HAL_LTDC_Init+0x19c>)
 800410c:	400b      	ands	r3, r1
 800410e:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	695b      	ldr	r3, [r3, #20]
 8004114:	041b      	lsls	r3, r3, #16
 8004116:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	681b      	ldr	r3, [r3, #0]
 800411c:	6899      	ldr	r1, [r3, #8]
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	699a      	ldr	r2, [r3, #24]
 8004122:	68fb      	ldr	r3, [r7, #12]
 8004124:	431a      	orrs	r2, r3
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	430a      	orrs	r2, r1
 800412c:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	68d9      	ldr	r1, [r3, #12]
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	681a      	ldr	r2, [r3, #0]
 8004138:	4b3e      	ldr	r3, [pc, #248]	; (8004234 <HAL_LTDC_Init+0x19c>)
 800413a:	400b      	ands	r3, r1
 800413c:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	69db      	ldr	r3, [r3, #28]
 8004142:	041b      	lsls	r3, r3, #16
 8004144:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	681b      	ldr	r3, [r3, #0]
 800414a:	68d9      	ldr	r1, [r3, #12]
 800414c:	687b      	ldr	r3, [r7, #4]
 800414e:	6a1a      	ldr	r2, [r3, #32]
 8004150:	68fb      	ldr	r3, [r7, #12]
 8004152:	431a      	orrs	r2, r3
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	681b      	ldr	r3, [r3, #0]
 8004158:	430a      	orrs	r2, r1
 800415a:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	681b      	ldr	r3, [r3, #0]
 8004160:	6919      	ldr	r1, [r3, #16]
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	681a      	ldr	r2, [r3, #0]
 8004166:	4b33      	ldr	r3, [pc, #204]	; (8004234 <HAL_LTDC_Init+0x19c>)
 8004168:	400b      	ands	r3, r1
 800416a:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004170:	041b      	lsls	r3, r3, #16
 8004172:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8004174:	687b      	ldr	r3, [r7, #4]
 8004176:	681b      	ldr	r3, [r3, #0]
 8004178:	6919      	ldr	r1, [r3, #16]
 800417a:	687b      	ldr	r3, [r7, #4]
 800417c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800417e:	68fb      	ldr	r3, [r7, #12]
 8004180:	431a      	orrs	r2, r3
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	681b      	ldr	r3, [r3, #0]
 8004186:	430a      	orrs	r2, r1
 8004188:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	6959      	ldr	r1, [r3, #20]
 8004190:	687b      	ldr	r3, [r7, #4]
 8004192:	681a      	ldr	r2, [r3, #0]
 8004194:	4b27      	ldr	r3, [pc, #156]	; (8004234 <HAL_LTDC_Init+0x19c>)
 8004196:	400b      	ands	r3, r1
 8004198:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800419a:	687b      	ldr	r3, [r7, #4]
 800419c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800419e:	041b      	lsls	r3, r3, #16
 80041a0:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	681b      	ldr	r3, [r3, #0]
 80041a6:	6959      	ldr	r1, [r3, #20]
 80041a8:	687b      	ldr	r3, [r7, #4]
 80041aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041ac:	68fb      	ldr	r3, [r7, #12]
 80041ae:	431a      	orrs	r2, r3
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	430a      	orrs	r2, r1
 80041b6:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80041be:	021b      	lsls	r3, r3, #8
 80041c0:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 80041c8:	041b      	lsls	r3, r3, #16
 80041ca:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	681b      	ldr	r3, [r3, #0]
 80041d0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 80041da:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	681b      	ldr	r3, [r3, #0]
 80041e0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80041e2:	68ba      	ldr	r2, [r7, #8]
 80041e4:	68fb      	ldr	r3, [r7, #12]
 80041e6:	4313      	orrs	r3, r2
 80041e8:	687a      	ldr	r2, [r7, #4]
 80041ea:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 80041ee:	431a      	orrs	r2, r3
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	681b      	ldr	r3, [r3, #0]
 80041f4:	430a      	orrs	r2, r1
 80041f6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	f042 0206 	orr.w	r2, r2, #6
 8004206:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	699a      	ldr	r2, [r3, #24]
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	f042 0201 	orr.w	r2, r2, #1
 8004216:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	2200      	movs	r2, #0
 800421c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	2201      	movs	r2, #1
 8004224:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 8004228:	2300      	movs	r3, #0
}
 800422a:	4618      	mov	r0, r3
 800422c:	3710      	adds	r7, #16
 800422e:	46bd      	mov	sp, r7
 8004230:	bd80      	pop	{r7, pc}
 8004232:	bf00      	nop
 8004234:	f000f800 	.word	0xf000f800

08004238 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8004238:	b580      	push	{r7, lr}
 800423a:	b084      	sub	sp, #16
 800423c:	af00      	add	r7, sp, #0
 800423e:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	681b      	ldr	r3, [r3, #0]
 8004244:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004246:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800424e:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	f003 0304 	and.w	r3, r3, #4
 8004256:	2b00      	cmp	r3, #0
 8004258:	d023      	beq.n	80042a2 <HAL_LTDC_IRQHandler+0x6a>
 800425a:	68bb      	ldr	r3, [r7, #8]
 800425c:	f003 0304 	and.w	r3, r3, #4
 8004260:	2b00      	cmp	r3, #0
 8004262:	d01e      	beq.n	80042a2 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	f022 0204 	bic.w	r2, r2, #4
 8004272:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	2204      	movs	r2, #4
 800427a:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8004282:	f043 0201 	orr.w	r2, r3, #1
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	2204      	movs	r2, #4
 8004290:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	2200      	movs	r2, #0
 8004298:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 800429c:	6878      	ldr	r0, [r7, #4]
 800429e:	f000 f86f 	bl	8004380 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80042a2:	68fb      	ldr	r3, [r7, #12]
 80042a4:	f003 0302 	and.w	r3, r3, #2
 80042a8:	2b00      	cmp	r3, #0
 80042aa:	d023      	beq.n	80042f4 <HAL_LTDC_IRQHandler+0xbc>
 80042ac:	68bb      	ldr	r3, [r7, #8]
 80042ae:	f003 0302 	and.w	r3, r3, #2
 80042b2:	2b00      	cmp	r3, #0
 80042b4:	d01e      	beq.n	80042f4 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	f022 0202 	bic.w	r2, r2, #2
 80042c4:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	681b      	ldr	r3, [r3, #0]
 80042ca:	2202      	movs	r2, #2
 80042cc:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80042d4:	f043 0202 	orr.w	r2, r3, #2
 80042d8:	687b      	ldr	r3, [r7, #4]
 80042da:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	2204      	movs	r2, #4
 80042e2:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	2200      	movs	r2, #0
 80042ea:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 80042ee:	6878      	ldr	r0, [r7, #4]
 80042f0:	f000 f846 	bl	8004380 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80042f4:	68fb      	ldr	r3, [r7, #12]
 80042f6:	f003 0301 	and.w	r3, r3, #1
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d01b      	beq.n	8004336 <HAL_LTDC_IRQHandler+0xfe>
 80042fe:	68bb      	ldr	r3, [r7, #8]
 8004300:	f003 0301 	and.w	r3, r3, #1
 8004304:	2b00      	cmp	r3, #0
 8004306:	d016      	beq.n	8004336 <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004308:	687b      	ldr	r3, [r7, #4]
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	681b      	ldr	r3, [r3, #0]
 8004312:	f022 0201 	bic.w	r2, r2, #1
 8004316:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	2201      	movs	r2, #1
 800431e:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	2201      	movs	r2, #1
 8004324:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	2200      	movs	r2, #0
 800432c:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8004330:	6878      	ldr	r0, [r7, #4]
 8004332:	f007 fccd 	bl	800bcd0 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	f003 0308 	and.w	r3, r3, #8
 800433c:	2b00      	cmp	r3, #0
 800433e:	d01b      	beq.n	8004378 <HAL_LTDC_IRQHandler+0x140>
 8004340:	68bb      	ldr	r3, [r7, #8]
 8004342:	f003 0308 	and.w	r3, r3, #8
 8004346:	2b00      	cmp	r3, #0
 8004348:	d016      	beq.n	8004378 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	681b      	ldr	r3, [r3, #0]
 800434e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	f022 0208 	bic.w	r2, r2, #8
 8004358:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	2208      	movs	r2, #8
 8004360:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	2201      	movs	r2, #1
 8004366:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	2200      	movs	r2, #0
 800436e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 8004372:	6878      	ldr	r0, [r7, #4]
 8004374:	f000 f80e 	bl	8004394 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8004378:	bf00      	nop
 800437a:	3710      	adds	r7, #16
 800437c:	46bd      	mov	sp, r7
 800437e:	bd80      	pop	{r7, pc}

08004380 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 8004380:	b480      	push	{r7}
 8004382:	b083      	sub	sp, #12
 8004384:	af00      	add	r7, sp, #0
 8004386:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 8004388:	bf00      	nop
 800438a:	370c      	adds	r7, #12
 800438c:	46bd      	mov	sp, r7
 800438e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004392:	4770      	bx	lr

08004394 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 8004394:	b480      	push	{r7}
 8004396:	b083      	sub	sp, #12
 8004398:	af00      	add	r7, sp, #0
 800439a:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 800439c:	bf00      	nop
 800439e:	370c      	adds	r7, #12
 80043a0:	46bd      	mov	sp, r7
 80043a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043a6:	4770      	bx	lr

080043a8 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80043a8:	b5b0      	push	{r4, r5, r7, lr}
 80043aa:	b084      	sub	sp, #16
 80043ac:	af00      	add	r7, sp, #0
 80043ae:	60f8      	str	r0, [r7, #12]
 80043b0:	60b9      	str	r1, [r7, #8]
 80043b2:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 80043b4:	68fb      	ldr	r3, [r7, #12]
 80043b6:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80043ba:	2b01      	cmp	r3, #1
 80043bc:	d101      	bne.n	80043c2 <HAL_LTDC_ConfigLayer+0x1a>
 80043be:	2302      	movs	r3, #2
 80043c0:	e02c      	b.n	800441c <HAL_LTDC_ConfigLayer+0x74>
 80043c2:	68fb      	ldr	r3, [r7, #12]
 80043c4:	2201      	movs	r2, #1
 80043c6:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80043ca:	68fb      	ldr	r3, [r7, #12]
 80043cc:	2202      	movs	r2, #2
 80043ce:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80043d2:	68fa      	ldr	r2, [r7, #12]
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	2134      	movs	r1, #52	; 0x34
 80043d8:	fb01 f303 	mul.w	r3, r1, r3
 80043dc:	4413      	add	r3, r2
 80043de:	f103 0238 	add.w	r2, r3, #56	; 0x38
 80043e2:	68bb      	ldr	r3, [r7, #8]
 80043e4:	4614      	mov	r4, r2
 80043e6:	461d      	mov	r5, r3
 80043e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80043ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80043ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80043ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80043f0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80043f2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80043f4:	682b      	ldr	r3, [r5, #0]
 80043f6:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80043f8:	687a      	ldr	r2, [r7, #4]
 80043fa:	68b9      	ldr	r1, [r7, #8]
 80043fc:	68f8      	ldr	r0, [r7, #12]
 80043fe:	f000 f849 	bl	8004494 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004402:	68fb      	ldr	r3, [r7, #12]
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	2201      	movs	r2, #1
 8004408:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	2201      	movs	r2, #1
 800440e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8004412:	68fb      	ldr	r3, [r7, #12]
 8004414:	2200      	movs	r2, #0
 8004416:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 800441a:	2300      	movs	r3, #0
}
 800441c:	4618      	mov	r0, r3
 800441e:	3710      	adds	r7, #16
 8004420:	46bd      	mov	sp, r7
 8004422:	bdb0      	pop	{r4, r5, r7, pc}

08004424 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8004424:	b480      	push	{r7}
 8004426:	b083      	sub	sp, #12
 8004428:	af00      	add	r7, sp, #0
 800442a:	6078      	str	r0, [r7, #4]
 800442c:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8004434:	2b01      	cmp	r3, #1
 8004436:	d101      	bne.n	800443c <HAL_LTDC_ProgramLineEvent+0x18>
 8004438:	2302      	movs	r3, #2
 800443a:	e023      	b.n	8004484 <HAL_LTDC_ProgramLineEvent+0x60>
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	2201      	movs	r2, #1
 8004440:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	2202      	movs	r2, #2
 8004448:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	681b      	ldr	r3, [r3, #0]
 8004450:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	f022 0201 	bic.w	r2, r2, #1
 800445a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 800445c:	4a0c      	ldr	r2, [pc, #48]	; (8004490 <HAL_LTDC_ProgramLineEvent+0x6c>)
 800445e:	683b      	ldr	r3, [r7, #0]
 8004460:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	681b      	ldr	r3, [r3, #0]
 8004466:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	f042 0201 	orr.w	r2, r2, #1
 8004470:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	2201      	movs	r2, #1
 8004476:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	2200      	movs	r2, #0
 800447e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8004482:	2300      	movs	r3, #0
}
 8004484:	4618      	mov	r0, r3
 8004486:	370c      	adds	r7, #12
 8004488:	46bd      	mov	sp, r7
 800448a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800448e:	4770      	bx	lr
 8004490:	40016800 	.word	0x40016800

08004494 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004494:	b480      	push	{r7}
 8004496:	b089      	sub	sp, #36	; 0x24
 8004498:	af00      	add	r7, sp, #0
 800449a:	60f8      	str	r0, [r7, #12]
 800449c:	60b9      	str	r1, [r7, #8]
 800449e:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80044a0:	68bb      	ldr	r3, [r7, #8]
 80044a2:	685a      	ldr	r2, [r3, #4]
 80044a4:	68fb      	ldr	r3, [r7, #12]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	68db      	ldr	r3, [r3, #12]
 80044aa:	0c1b      	lsrs	r3, r3, #16
 80044ac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044b0:	4413      	add	r3, r2
 80044b2:	041b      	lsls	r3, r3, #16
 80044b4:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80044b6:	68fb      	ldr	r3, [r7, #12]
 80044b8:	681b      	ldr	r3, [r3, #0]
 80044ba:	461a      	mov	r2, r3
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	01db      	lsls	r3, r3, #7
 80044c0:	4413      	add	r3, r2
 80044c2:	3384      	adds	r3, #132	; 0x84
 80044c4:	685b      	ldr	r3, [r3, #4]
 80044c6:	68fa      	ldr	r2, [r7, #12]
 80044c8:	6812      	ldr	r2, [r2, #0]
 80044ca:	4611      	mov	r1, r2
 80044cc:	687a      	ldr	r2, [r7, #4]
 80044ce:	01d2      	lsls	r2, r2, #7
 80044d0:	440a      	add	r2, r1
 80044d2:	3284      	adds	r2, #132	; 0x84
 80044d4:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 80044d8:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80044da:	68bb      	ldr	r3, [r7, #8]
 80044dc:	681a      	ldr	r2, [r3, #0]
 80044de:	68fb      	ldr	r3, [r7, #12]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	68db      	ldr	r3, [r3, #12]
 80044e4:	0c1b      	lsrs	r3, r3, #16
 80044e6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044ea:	4413      	add	r3, r2
 80044ec:	1c5a      	adds	r2, r3, #1
 80044ee:	68fb      	ldr	r3, [r7, #12]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	4619      	mov	r1, r3
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	01db      	lsls	r3, r3, #7
 80044f8:	440b      	add	r3, r1
 80044fa:	3384      	adds	r3, #132	; 0x84
 80044fc:	4619      	mov	r1, r3
 80044fe:	69fb      	ldr	r3, [r7, #28]
 8004500:	4313      	orrs	r3, r2
 8004502:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004504:	68bb      	ldr	r3, [r7, #8]
 8004506:	68da      	ldr	r2, [r3, #12]
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	681b      	ldr	r3, [r3, #0]
 800450c:	68db      	ldr	r3, [r3, #12]
 800450e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004512:	4413      	add	r3, r2
 8004514:	041b      	lsls	r3, r3, #16
 8004516:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004518:	68fb      	ldr	r3, [r7, #12]
 800451a:	681b      	ldr	r3, [r3, #0]
 800451c:	461a      	mov	r2, r3
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	01db      	lsls	r3, r3, #7
 8004522:	4413      	add	r3, r2
 8004524:	3384      	adds	r3, #132	; 0x84
 8004526:	689b      	ldr	r3, [r3, #8]
 8004528:	68fa      	ldr	r2, [r7, #12]
 800452a:	6812      	ldr	r2, [r2, #0]
 800452c:	4611      	mov	r1, r2
 800452e:	687a      	ldr	r2, [r7, #4]
 8004530:	01d2      	lsls	r2, r2, #7
 8004532:	440a      	add	r2, r1
 8004534:	3284      	adds	r2, #132	; 0x84
 8004536:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800453a:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800453c:	68bb      	ldr	r3, [r7, #8]
 800453e:	689a      	ldr	r2, [r3, #8]
 8004540:	68fb      	ldr	r3, [r7, #12]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	68db      	ldr	r3, [r3, #12]
 8004546:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800454a:	4413      	add	r3, r2
 800454c:	1c5a      	adds	r2, r3, #1
 800454e:	68fb      	ldr	r3, [r7, #12]
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	4619      	mov	r1, r3
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	01db      	lsls	r3, r3, #7
 8004558:	440b      	add	r3, r1
 800455a:	3384      	adds	r3, #132	; 0x84
 800455c:	4619      	mov	r1, r3
 800455e:	69fb      	ldr	r3, [r7, #28]
 8004560:	4313      	orrs	r3, r2
 8004562:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004564:	68fb      	ldr	r3, [r7, #12]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	461a      	mov	r2, r3
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	01db      	lsls	r3, r3, #7
 800456e:	4413      	add	r3, r2
 8004570:	3384      	adds	r3, #132	; 0x84
 8004572:	691b      	ldr	r3, [r3, #16]
 8004574:	68fa      	ldr	r2, [r7, #12]
 8004576:	6812      	ldr	r2, [r2, #0]
 8004578:	4611      	mov	r1, r2
 800457a:	687a      	ldr	r2, [r7, #4]
 800457c:	01d2      	lsls	r2, r2, #7
 800457e:	440a      	add	r2, r1
 8004580:	3284      	adds	r2, #132	; 0x84
 8004582:	f023 0307 	bic.w	r3, r3, #7
 8004586:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004588:	68fb      	ldr	r3, [r7, #12]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	461a      	mov	r2, r3
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	01db      	lsls	r3, r3, #7
 8004592:	4413      	add	r3, r2
 8004594:	3384      	adds	r3, #132	; 0x84
 8004596:	461a      	mov	r2, r3
 8004598:	68bb      	ldr	r3, [r7, #8]
 800459a:	691b      	ldr	r3, [r3, #16]
 800459c:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800459e:	68bb      	ldr	r3, [r7, #8]
 80045a0:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 80045a4:	021b      	lsls	r3, r3, #8
 80045a6:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80045a8:	68bb      	ldr	r3, [r7, #8]
 80045aa:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 80045ae:	041b      	lsls	r3, r3, #16
 80045b0:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80045b2:	68bb      	ldr	r3, [r7, #8]
 80045b4:	699b      	ldr	r3, [r3, #24]
 80045b6:	061b      	lsls	r3, r3, #24
 80045b8:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80045ba:	68fb      	ldr	r3, [r7, #12]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	461a      	mov	r2, r3
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	01db      	lsls	r3, r3, #7
 80045c4:	4413      	add	r3, r2
 80045c6:	3384      	adds	r3, #132	; 0x84
 80045c8:	699b      	ldr	r3, [r3, #24]
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	461a      	mov	r2, r3
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	01db      	lsls	r3, r3, #7
 80045d4:	4413      	add	r3, r2
 80045d6:	3384      	adds	r3, #132	; 0x84
 80045d8:	461a      	mov	r2, r3
 80045da:	2300      	movs	r3, #0
 80045dc:	6193      	str	r3, [r2, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80045de:	68bb      	ldr	r3, [r7, #8]
 80045e0:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80045e4:	461a      	mov	r2, r3
 80045e6:	69fb      	ldr	r3, [r7, #28]
 80045e8:	431a      	orrs	r2, r3
 80045ea:	69bb      	ldr	r3, [r7, #24]
 80045ec:	431a      	orrs	r2, r3
 80045ee:	68fb      	ldr	r3, [r7, #12]
 80045f0:	681b      	ldr	r3, [r3, #0]
 80045f2:	4619      	mov	r1, r3
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	01db      	lsls	r3, r3, #7
 80045f8:	440b      	add	r3, r1
 80045fa:	3384      	adds	r3, #132	; 0x84
 80045fc:	4619      	mov	r1, r3
 80045fe:	697b      	ldr	r3, [r7, #20]
 8004600:	4313      	orrs	r3, r2
 8004602:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004604:	68fb      	ldr	r3, [r7, #12]
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	461a      	mov	r2, r3
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	01db      	lsls	r3, r3, #7
 800460e:	4413      	add	r3, r2
 8004610:	3384      	adds	r3, #132	; 0x84
 8004612:	695b      	ldr	r3, [r3, #20]
 8004614:	68fa      	ldr	r2, [r7, #12]
 8004616:	6812      	ldr	r2, [r2, #0]
 8004618:	4611      	mov	r1, r2
 800461a:	687a      	ldr	r2, [r7, #4]
 800461c:	01d2      	lsls	r2, r2, #7
 800461e:	440a      	add	r2, r1
 8004620:	3284      	adds	r2, #132	; 0x84
 8004622:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8004626:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004628:	68fb      	ldr	r3, [r7, #12]
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	461a      	mov	r2, r3
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	01db      	lsls	r3, r3, #7
 8004632:	4413      	add	r3, r2
 8004634:	3384      	adds	r3, #132	; 0x84
 8004636:	461a      	mov	r2, r3
 8004638:	68bb      	ldr	r3, [r7, #8]
 800463a:	695b      	ldr	r3, [r3, #20]
 800463c:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800463e:	68fb      	ldr	r3, [r7, #12]
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	461a      	mov	r2, r3
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	01db      	lsls	r3, r3, #7
 8004648:	4413      	add	r3, r2
 800464a:	3384      	adds	r3, #132	; 0x84
 800464c:	69db      	ldr	r3, [r3, #28]
 800464e:	68fa      	ldr	r2, [r7, #12]
 8004650:	6812      	ldr	r2, [r2, #0]
 8004652:	4611      	mov	r1, r2
 8004654:	687a      	ldr	r2, [r7, #4]
 8004656:	01d2      	lsls	r2, r2, #7
 8004658:	440a      	add	r2, r1
 800465a:	3284      	adds	r2, #132	; 0x84
 800465c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004660:	f023 0307 	bic.w	r3, r3, #7
 8004664:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004666:	68bb      	ldr	r3, [r7, #8]
 8004668:	69da      	ldr	r2, [r3, #28]
 800466a:	68bb      	ldr	r3, [r7, #8]
 800466c:	6a1b      	ldr	r3, [r3, #32]
 800466e:	68f9      	ldr	r1, [r7, #12]
 8004670:	6809      	ldr	r1, [r1, #0]
 8004672:	4608      	mov	r0, r1
 8004674:	6879      	ldr	r1, [r7, #4]
 8004676:	01c9      	lsls	r1, r1, #7
 8004678:	4401      	add	r1, r0
 800467a:	3184      	adds	r1, #132	; 0x84
 800467c:	4313      	orrs	r3, r2
 800467e:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	681b      	ldr	r3, [r3, #0]
 8004684:	461a      	mov	r2, r3
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	01db      	lsls	r3, r3, #7
 800468a:	4413      	add	r3, r2
 800468c:	3384      	adds	r3, #132	; 0x84
 800468e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	681b      	ldr	r3, [r3, #0]
 8004694:	461a      	mov	r2, r3
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	01db      	lsls	r3, r3, #7
 800469a:	4413      	add	r3, r2
 800469c:	3384      	adds	r3, #132	; 0x84
 800469e:	461a      	mov	r2, r3
 80046a0:	2300      	movs	r3, #0
 80046a2:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80046a4:	68fb      	ldr	r3, [r7, #12]
 80046a6:	681b      	ldr	r3, [r3, #0]
 80046a8:	461a      	mov	r2, r3
 80046aa:	687b      	ldr	r3, [r7, #4]
 80046ac:	01db      	lsls	r3, r3, #7
 80046ae:	4413      	add	r3, r2
 80046b0:	3384      	adds	r3, #132	; 0x84
 80046b2:	461a      	mov	r2, r3
 80046b4:	68bb      	ldr	r3, [r7, #8]
 80046b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046b8:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80046ba:	68bb      	ldr	r3, [r7, #8]
 80046bc:	691b      	ldr	r3, [r3, #16]
 80046be:	2b00      	cmp	r3, #0
 80046c0:	d102      	bne.n	80046c8 <LTDC_SetConfig+0x234>
  {
    tmp = 4U;
 80046c2:	2304      	movs	r3, #4
 80046c4:	61fb      	str	r3, [r7, #28]
 80046c6:	e01b      	b.n	8004700 <LTDC_SetConfig+0x26c>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80046c8:	68bb      	ldr	r3, [r7, #8]
 80046ca:	691b      	ldr	r3, [r3, #16]
 80046cc:	2b01      	cmp	r3, #1
 80046ce:	d102      	bne.n	80046d6 <LTDC_SetConfig+0x242>
  {
    tmp = 3U;
 80046d0:	2303      	movs	r3, #3
 80046d2:	61fb      	str	r3, [r7, #28]
 80046d4:	e014      	b.n	8004700 <LTDC_SetConfig+0x26c>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80046d6:	68bb      	ldr	r3, [r7, #8]
 80046d8:	691b      	ldr	r3, [r3, #16]
 80046da:	2b04      	cmp	r3, #4
 80046dc:	d00b      	beq.n	80046f6 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 80046de:	68bb      	ldr	r3, [r7, #8]
 80046e0:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80046e2:	2b02      	cmp	r3, #2
 80046e4:	d007      	beq.n	80046f6 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80046e6:	68bb      	ldr	r3, [r7, #8]
 80046e8:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 80046ea:	2b03      	cmp	r3, #3
 80046ec:	d003      	beq.n	80046f6 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 80046ee:	68bb      	ldr	r3, [r7, #8]
 80046f0:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80046f2:	2b07      	cmp	r3, #7
 80046f4:	d102      	bne.n	80046fc <LTDC_SetConfig+0x268>
  {
    tmp = 2U;
 80046f6:	2302      	movs	r3, #2
 80046f8:	61fb      	str	r3, [r7, #28]
 80046fa:	e001      	b.n	8004700 <LTDC_SetConfig+0x26c>
  }
  else
  {
    tmp = 1U;
 80046fc:	2301      	movs	r3, #1
 80046fe:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004700:	68fb      	ldr	r3, [r7, #12]
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	461a      	mov	r2, r3
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	01db      	lsls	r3, r3, #7
 800470a:	4413      	add	r3, r2
 800470c:	3384      	adds	r3, #132	; 0x84
 800470e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004710:	68fa      	ldr	r2, [r7, #12]
 8004712:	6812      	ldr	r2, [r2, #0]
 8004714:	4611      	mov	r1, r2
 8004716:	687a      	ldr	r2, [r7, #4]
 8004718:	01d2      	lsls	r2, r2, #7
 800471a:	440a      	add	r2, r1
 800471c:	3284      	adds	r2, #132	; 0x84
 800471e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8004722:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004724:	68bb      	ldr	r3, [r7, #8]
 8004726:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004728:	69fa      	ldr	r2, [r7, #28]
 800472a:	fb02 f303 	mul.w	r3, r2, r3
 800472e:	041a      	lsls	r2, r3, #16
 8004730:	68bb      	ldr	r3, [r7, #8]
 8004732:	6859      	ldr	r1, [r3, #4]
 8004734:	68bb      	ldr	r3, [r7, #8]
 8004736:	681b      	ldr	r3, [r3, #0]
 8004738:	1acb      	subs	r3, r1, r3
 800473a:	69f9      	ldr	r1, [r7, #28]
 800473c:	fb01 f303 	mul.w	r3, r1, r3
 8004740:	3303      	adds	r3, #3
 8004742:	68f9      	ldr	r1, [r7, #12]
 8004744:	6809      	ldr	r1, [r1, #0]
 8004746:	4608      	mov	r0, r1
 8004748:	6879      	ldr	r1, [r7, #4]
 800474a:	01c9      	lsls	r1, r1, #7
 800474c:	4401      	add	r1, r0
 800474e:	3184      	adds	r1, #132	; 0x84
 8004750:	4313      	orrs	r3, r2
 8004752:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004754:	68fb      	ldr	r3, [r7, #12]
 8004756:	681b      	ldr	r3, [r3, #0]
 8004758:	461a      	mov	r2, r3
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	01db      	lsls	r3, r3, #7
 800475e:	4413      	add	r3, r2
 8004760:	3384      	adds	r3, #132	; 0x84
 8004762:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004764:	68fa      	ldr	r2, [r7, #12]
 8004766:	6812      	ldr	r2, [r2, #0]
 8004768:	4611      	mov	r1, r2
 800476a:	687a      	ldr	r2, [r7, #4]
 800476c:	01d2      	lsls	r2, r2, #7
 800476e:	440a      	add	r2, r1
 8004770:	3284      	adds	r2, #132	; 0x84
 8004772:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8004776:	f023 0307 	bic.w	r3, r3, #7
 800477a:	6313      	str	r3, [r2, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800477c:	68fb      	ldr	r3, [r7, #12]
 800477e:	681b      	ldr	r3, [r3, #0]
 8004780:	461a      	mov	r2, r3
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	01db      	lsls	r3, r3, #7
 8004786:	4413      	add	r3, r2
 8004788:	3384      	adds	r3, #132	; 0x84
 800478a:	461a      	mov	r2, r3
 800478c:	68bb      	ldr	r3, [r7, #8]
 800478e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004790:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	461a      	mov	r2, r3
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	01db      	lsls	r3, r3, #7
 800479c:	4413      	add	r3, r2
 800479e:	3384      	adds	r3, #132	; 0x84
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	68fa      	ldr	r2, [r7, #12]
 80047a4:	6812      	ldr	r2, [r2, #0]
 80047a6:	4611      	mov	r1, r2
 80047a8:	687a      	ldr	r2, [r7, #4]
 80047aa:	01d2      	lsls	r2, r2, #7
 80047ac:	440a      	add	r2, r1
 80047ae:	3284      	adds	r2, #132	; 0x84
 80047b0:	f043 0301 	orr.w	r3, r3, #1
 80047b4:	6013      	str	r3, [r2, #0]
}
 80047b6:	bf00      	nop
 80047b8:	3724      	adds	r7, #36	; 0x24
 80047ba:	46bd      	mov	sp, r7
 80047bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047c0:	4770      	bx	lr
	...

080047c4 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80047c4:	b580      	push	{r7, lr}
 80047c6:	b082      	sub	sp, #8
 80047c8:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 80047ca:	2300      	movs	r3, #0
 80047cc:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 80047ce:	2300      	movs	r3, #0
 80047d0:	603b      	str	r3, [r7, #0]
 80047d2:	4b20      	ldr	r3, [pc, #128]	; (8004854 <HAL_PWREx_EnableOverDrive+0x90>)
 80047d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047d6:	4a1f      	ldr	r2, [pc, #124]	; (8004854 <HAL_PWREx_EnableOverDrive+0x90>)
 80047d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80047dc:	6413      	str	r3, [r2, #64]	; 0x40
 80047de:	4b1d      	ldr	r3, [pc, #116]	; (8004854 <HAL_PWREx_EnableOverDrive+0x90>)
 80047e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80047e6:	603b      	str	r3, [r7, #0]
 80047e8:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80047ea:	4b1b      	ldr	r3, [pc, #108]	; (8004858 <HAL_PWREx_EnableOverDrive+0x94>)
 80047ec:	2201      	movs	r2, #1
 80047ee:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80047f0:	f7fe f96a 	bl	8002ac8 <HAL_GetTick>
 80047f4:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80047f6:	e009      	b.n	800480c <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80047f8:	f7fe f966 	bl	8002ac8 <HAL_GetTick>
 80047fc:	4602      	mov	r2, r0
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	1ad3      	subs	r3, r2, r3
 8004802:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004806:	d901      	bls.n	800480c <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 8004808:	2303      	movs	r3, #3
 800480a:	e01f      	b.n	800484c <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800480c:	4b13      	ldr	r3, [pc, #76]	; (800485c <HAL_PWREx_EnableOverDrive+0x98>)
 800480e:	685b      	ldr	r3, [r3, #4]
 8004810:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004814:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004818:	d1ee      	bne.n	80047f8 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800481a:	4b11      	ldr	r3, [pc, #68]	; (8004860 <HAL_PWREx_EnableOverDrive+0x9c>)
 800481c:	2201      	movs	r2, #1
 800481e:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8004820:	f7fe f952 	bl	8002ac8 <HAL_GetTick>
 8004824:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8004826:	e009      	b.n	800483c <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8004828:	f7fe f94e 	bl	8002ac8 <HAL_GetTick>
 800482c:	4602      	mov	r2, r0
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	1ad3      	subs	r3, r2, r3
 8004832:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004836:	d901      	bls.n	800483c <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 8004838:	2303      	movs	r3, #3
 800483a:	e007      	b.n	800484c <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800483c:	4b07      	ldr	r3, [pc, #28]	; (800485c <HAL_PWREx_EnableOverDrive+0x98>)
 800483e:	685b      	ldr	r3, [r3, #4]
 8004840:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004844:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8004848:	d1ee      	bne.n	8004828 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 800484a:	2300      	movs	r3, #0
}
 800484c:	4618      	mov	r0, r3
 800484e:	3708      	adds	r7, #8
 8004850:	46bd      	mov	sp, r7
 8004852:	bd80      	pop	{r7, pc}
 8004854:	40023800 	.word	0x40023800
 8004858:	420e0040 	.word	0x420e0040
 800485c:	40007000 	.word	0x40007000
 8004860:	420e0044 	.word	0x420e0044

08004864 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004864:	b580      	push	{r7, lr}
 8004866:	b086      	sub	sp, #24
 8004868:	af00      	add	r7, sp, #0
 800486a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	2b00      	cmp	r3, #0
 8004870:	d101      	bne.n	8004876 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8004872:	2301      	movs	r3, #1
 8004874:	e25e      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	f003 0301 	and.w	r3, r3, #1
 800487e:	2b00      	cmp	r3, #0
 8004880:	d075      	beq.n	800496e <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8004882:	4b88      	ldr	r3, [pc, #544]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004884:	689b      	ldr	r3, [r3, #8]
 8004886:	f003 030c 	and.w	r3, r3, #12
 800488a:	2b04      	cmp	r3, #4
 800488c:	d00c      	beq.n	80048a8 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800488e:	4b85      	ldr	r3, [pc, #532]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004890:	689b      	ldr	r3, [r3, #8]
 8004892:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8004896:	2b08      	cmp	r3, #8
 8004898:	d112      	bne.n	80048c0 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800489a:	4b82      	ldr	r3, [pc, #520]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 800489c:	685b      	ldr	r3, [r3, #4]
 800489e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80048a2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80048a6:	d10b      	bne.n	80048c0 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80048a8:	4b7e      	ldr	r3, [pc, #504]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80048b0:	2b00      	cmp	r3, #0
 80048b2:	d05b      	beq.n	800496c <HAL_RCC_OscConfig+0x108>
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	685b      	ldr	r3, [r3, #4]
 80048b8:	2b00      	cmp	r3, #0
 80048ba:	d157      	bne.n	800496c <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 80048bc:	2301      	movs	r3, #1
 80048be:	e239      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80048c0:	687b      	ldr	r3, [r7, #4]
 80048c2:	685b      	ldr	r3, [r3, #4]
 80048c4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80048c8:	d106      	bne.n	80048d8 <HAL_RCC_OscConfig+0x74>
 80048ca:	4b76      	ldr	r3, [pc, #472]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	4a75      	ldr	r2, [pc, #468]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80048d0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80048d4:	6013      	str	r3, [r2, #0]
 80048d6:	e01d      	b.n	8004914 <HAL_RCC_OscConfig+0xb0>
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	685b      	ldr	r3, [r3, #4]
 80048dc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80048e0:	d10c      	bne.n	80048fc <HAL_RCC_OscConfig+0x98>
 80048e2:	4b70      	ldr	r3, [pc, #448]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	4a6f      	ldr	r2, [pc, #444]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80048e8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80048ec:	6013      	str	r3, [r2, #0]
 80048ee:	4b6d      	ldr	r3, [pc, #436]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	4a6c      	ldr	r2, [pc, #432]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80048f4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80048f8:	6013      	str	r3, [r2, #0]
 80048fa:	e00b      	b.n	8004914 <HAL_RCC_OscConfig+0xb0>
 80048fc:	4b69      	ldr	r3, [pc, #420]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	4a68      	ldr	r2, [pc, #416]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004902:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004906:	6013      	str	r3, [r2, #0]
 8004908:	4b66      	ldr	r3, [pc, #408]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 800490a:	681b      	ldr	r3, [r3, #0]
 800490c:	4a65      	ldr	r2, [pc, #404]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 800490e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004912:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	685b      	ldr	r3, [r3, #4]
 8004918:	2b00      	cmp	r3, #0
 800491a:	d013      	beq.n	8004944 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800491c:	f7fe f8d4 	bl	8002ac8 <HAL_GetTick>
 8004920:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004922:	e008      	b.n	8004936 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004924:	f7fe f8d0 	bl	8002ac8 <HAL_GetTick>
 8004928:	4602      	mov	r2, r0
 800492a:	693b      	ldr	r3, [r7, #16]
 800492c:	1ad3      	subs	r3, r2, r3
 800492e:	2b64      	cmp	r3, #100	; 0x64
 8004930:	d901      	bls.n	8004936 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8004932:	2303      	movs	r3, #3
 8004934:	e1fe      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004936:	4b5b      	ldr	r3, [pc, #364]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800493e:	2b00      	cmp	r3, #0
 8004940:	d0f0      	beq.n	8004924 <HAL_RCC_OscConfig+0xc0>
 8004942:	e014      	b.n	800496e <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004944:	f7fe f8c0 	bl	8002ac8 <HAL_GetTick>
 8004948:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800494a:	e008      	b.n	800495e <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800494c:	f7fe f8bc 	bl	8002ac8 <HAL_GetTick>
 8004950:	4602      	mov	r2, r0
 8004952:	693b      	ldr	r3, [r7, #16]
 8004954:	1ad3      	subs	r3, r2, r3
 8004956:	2b64      	cmp	r3, #100	; 0x64
 8004958:	d901      	bls.n	800495e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800495a:	2303      	movs	r3, #3
 800495c:	e1ea      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800495e:	4b51      	ldr	r3, [pc, #324]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004966:	2b00      	cmp	r3, #0
 8004968:	d1f0      	bne.n	800494c <HAL_RCC_OscConfig+0xe8>
 800496a:	e000      	b.n	800496e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800496c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	f003 0302 	and.w	r3, r3, #2
 8004976:	2b00      	cmp	r3, #0
 8004978:	d063      	beq.n	8004a42 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800497a:	4b4a      	ldr	r3, [pc, #296]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 800497c:	689b      	ldr	r3, [r3, #8]
 800497e:	f003 030c 	and.w	r3, r3, #12
 8004982:	2b00      	cmp	r3, #0
 8004984:	d00b      	beq.n	800499e <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004986:	4b47      	ldr	r3, [pc, #284]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004988:	689b      	ldr	r3, [r3, #8]
 800498a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800498e:	2b08      	cmp	r3, #8
 8004990:	d11c      	bne.n	80049cc <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004992:	4b44      	ldr	r3, [pc, #272]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004994:	685b      	ldr	r3, [r3, #4]
 8004996:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800499a:	2b00      	cmp	r3, #0
 800499c:	d116      	bne.n	80049cc <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800499e:	4b41      	ldr	r3, [pc, #260]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	f003 0302 	and.w	r3, r3, #2
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	d005      	beq.n	80049b6 <HAL_RCC_OscConfig+0x152>
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	68db      	ldr	r3, [r3, #12]
 80049ae:	2b01      	cmp	r3, #1
 80049b0:	d001      	beq.n	80049b6 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 80049b2:	2301      	movs	r3, #1
 80049b4:	e1be      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80049b6:	4b3b      	ldr	r3, [pc, #236]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	691b      	ldr	r3, [r3, #16]
 80049c2:	00db      	lsls	r3, r3, #3
 80049c4:	4937      	ldr	r1, [pc, #220]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80049c6:	4313      	orrs	r3, r2
 80049c8:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80049ca:	e03a      	b.n	8004a42 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80049cc:	687b      	ldr	r3, [r7, #4]
 80049ce:	68db      	ldr	r3, [r3, #12]
 80049d0:	2b00      	cmp	r3, #0
 80049d2:	d020      	beq.n	8004a16 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80049d4:	4b34      	ldr	r3, [pc, #208]	; (8004aa8 <HAL_RCC_OscConfig+0x244>)
 80049d6:	2201      	movs	r2, #1
 80049d8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80049da:	f7fe f875 	bl	8002ac8 <HAL_GetTick>
 80049de:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80049e0:	e008      	b.n	80049f4 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80049e2:	f7fe f871 	bl	8002ac8 <HAL_GetTick>
 80049e6:	4602      	mov	r2, r0
 80049e8:	693b      	ldr	r3, [r7, #16]
 80049ea:	1ad3      	subs	r3, r2, r3
 80049ec:	2b02      	cmp	r3, #2
 80049ee:	d901      	bls.n	80049f4 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 80049f0:	2303      	movs	r3, #3
 80049f2:	e19f      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80049f4:	4b2b      	ldr	r3, [pc, #172]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 80049f6:	681b      	ldr	r3, [r3, #0]
 80049f8:	f003 0302 	and.w	r3, r3, #2
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d0f0      	beq.n	80049e2 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004a00:	4b28      	ldr	r3, [pc, #160]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004a02:	681b      	ldr	r3, [r3, #0]
 8004a04:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004a08:	687b      	ldr	r3, [r7, #4]
 8004a0a:	691b      	ldr	r3, [r3, #16]
 8004a0c:	00db      	lsls	r3, r3, #3
 8004a0e:	4925      	ldr	r1, [pc, #148]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004a10:	4313      	orrs	r3, r2
 8004a12:	600b      	str	r3, [r1, #0]
 8004a14:	e015      	b.n	8004a42 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004a16:	4b24      	ldr	r3, [pc, #144]	; (8004aa8 <HAL_RCC_OscConfig+0x244>)
 8004a18:	2200      	movs	r2, #0
 8004a1a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004a1c:	f7fe f854 	bl	8002ac8 <HAL_GetTick>
 8004a20:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004a22:	e008      	b.n	8004a36 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004a24:	f7fe f850 	bl	8002ac8 <HAL_GetTick>
 8004a28:	4602      	mov	r2, r0
 8004a2a:	693b      	ldr	r3, [r7, #16]
 8004a2c:	1ad3      	subs	r3, r2, r3
 8004a2e:	2b02      	cmp	r3, #2
 8004a30:	d901      	bls.n	8004a36 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8004a32:	2303      	movs	r3, #3
 8004a34:	e17e      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004a36:	4b1b      	ldr	r3, [pc, #108]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004a38:	681b      	ldr	r3, [r3, #0]
 8004a3a:	f003 0302 	and.w	r3, r3, #2
 8004a3e:	2b00      	cmp	r3, #0
 8004a40:	d1f0      	bne.n	8004a24 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004a42:	687b      	ldr	r3, [r7, #4]
 8004a44:	681b      	ldr	r3, [r3, #0]
 8004a46:	f003 0308 	and.w	r3, r3, #8
 8004a4a:	2b00      	cmp	r3, #0
 8004a4c:	d036      	beq.n	8004abc <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8004a4e:	687b      	ldr	r3, [r7, #4]
 8004a50:	695b      	ldr	r3, [r3, #20]
 8004a52:	2b00      	cmp	r3, #0
 8004a54:	d016      	beq.n	8004a84 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004a56:	4b15      	ldr	r3, [pc, #84]	; (8004aac <HAL_RCC_OscConfig+0x248>)
 8004a58:	2201      	movs	r2, #1
 8004a5a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004a5c:	f7fe f834 	bl	8002ac8 <HAL_GetTick>
 8004a60:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004a62:	e008      	b.n	8004a76 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004a64:	f7fe f830 	bl	8002ac8 <HAL_GetTick>
 8004a68:	4602      	mov	r2, r0
 8004a6a:	693b      	ldr	r3, [r7, #16]
 8004a6c:	1ad3      	subs	r3, r2, r3
 8004a6e:	2b02      	cmp	r3, #2
 8004a70:	d901      	bls.n	8004a76 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8004a72:	2303      	movs	r3, #3
 8004a74:	e15e      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004a76:	4b0b      	ldr	r3, [pc, #44]	; (8004aa4 <HAL_RCC_OscConfig+0x240>)
 8004a78:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004a7a:	f003 0302 	and.w	r3, r3, #2
 8004a7e:	2b00      	cmp	r3, #0
 8004a80:	d0f0      	beq.n	8004a64 <HAL_RCC_OscConfig+0x200>
 8004a82:	e01b      	b.n	8004abc <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004a84:	4b09      	ldr	r3, [pc, #36]	; (8004aac <HAL_RCC_OscConfig+0x248>)
 8004a86:	2200      	movs	r2, #0
 8004a88:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004a8a:	f7fe f81d 	bl	8002ac8 <HAL_GetTick>
 8004a8e:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004a90:	e00e      	b.n	8004ab0 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004a92:	f7fe f819 	bl	8002ac8 <HAL_GetTick>
 8004a96:	4602      	mov	r2, r0
 8004a98:	693b      	ldr	r3, [r7, #16]
 8004a9a:	1ad3      	subs	r3, r2, r3
 8004a9c:	2b02      	cmp	r3, #2
 8004a9e:	d907      	bls.n	8004ab0 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8004aa0:	2303      	movs	r3, #3
 8004aa2:	e147      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
 8004aa4:	40023800 	.word	0x40023800
 8004aa8:	42470000 	.word	0x42470000
 8004aac:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004ab0:	4b88      	ldr	r3, [pc, #544]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004ab2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004ab4:	f003 0302 	and.w	r3, r3, #2
 8004ab8:	2b00      	cmp	r3, #0
 8004aba:	d1ea      	bne.n	8004a92 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	f003 0304 	and.w	r3, r3, #4
 8004ac4:	2b00      	cmp	r3, #0
 8004ac6:	f000 8097 	beq.w	8004bf8 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004aca:	2300      	movs	r3, #0
 8004acc:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004ace:	4b81      	ldr	r3, [pc, #516]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004ad0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ad2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	d10f      	bne.n	8004afa <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004ada:	2300      	movs	r3, #0
 8004adc:	60bb      	str	r3, [r7, #8]
 8004ade:	4b7d      	ldr	r3, [pc, #500]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004ae0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ae2:	4a7c      	ldr	r2, [pc, #496]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004ae4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004ae8:	6413      	str	r3, [r2, #64]	; 0x40
 8004aea:	4b7a      	ldr	r3, [pc, #488]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004aec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004aee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004af2:	60bb      	str	r3, [r7, #8]
 8004af4:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004af6:	2301      	movs	r3, #1
 8004af8:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004afa:	4b77      	ldr	r3, [pc, #476]	; (8004cd8 <HAL_RCC_OscConfig+0x474>)
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b02:	2b00      	cmp	r3, #0
 8004b04:	d118      	bne.n	8004b38 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004b06:	4b74      	ldr	r3, [pc, #464]	; (8004cd8 <HAL_RCC_OscConfig+0x474>)
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	4a73      	ldr	r2, [pc, #460]	; (8004cd8 <HAL_RCC_OscConfig+0x474>)
 8004b0c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b10:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004b12:	f7fd ffd9 	bl	8002ac8 <HAL_GetTick>
 8004b16:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004b18:	e008      	b.n	8004b2c <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004b1a:	f7fd ffd5 	bl	8002ac8 <HAL_GetTick>
 8004b1e:	4602      	mov	r2, r0
 8004b20:	693b      	ldr	r3, [r7, #16]
 8004b22:	1ad3      	subs	r3, r2, r3
 8004b24:	2b02      	cmp	r3, #2
 8004b26:	d901      	bls.n	8004b2c <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8004b28:	2303      	movs	r3, #3
 8004b2a:	e103      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004b2c:	4b6a      	ldr	r3, [pc, #424]	; (8004cd8 <HAL_RCC_OscConfig+0x474>)
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b34:	2b00      	cmp	r3, #0
 8004b36:	d0f0      	beq.n	8004b1a <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	689b      	ldr	r3, [r3, #8]
 8004b3c:	2b01      	cmp	r3, #1
 8004b3e:	d106      	bne.n	8004b4e <HAL_RCC_OscConfig+0x2ea>
 8004b40:	4b64      	ldr	r3, [pc, #400]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b42:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b44:	4a63      	ldr	r2, [pc, #396]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b46:	f043 0301 	orr.w	r3, r3, #1
 8004b4a:	6713      	str	r3, [r2, #112]	; 0x70
 8004b4c:	e01c      	b.n	8004b88 <HAL_RCC_OscConfig+0x324>
 8004b4e:	687b      	ldr	r3, [r7, #4]
 8004b50:	689b      	ldr	r3, [r3, #8]
 8004b52:	2b05      	cmp	r3, #5
 8004b54:	d10c      	bne.n	8004b70 <HAL_RCC_OscConfig+0x30c>
 8004b56:	4b5f      	ldr	r3, [pc, #380]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b58:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b5a:	4a5e      	ldr	r2, [pc, #376]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b5c:	f043 0304 	orr.w	r3, r3, #4
 8004b60:	6713      	str	r3, [r2, #112]	; 0x70
 8004b62:	4b5c      	ldr	r3, [pc, #368]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b64:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b66:	4a5b      	ldr	r2, [pc, #364]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b68:	f043 0301 	orr.w	r3, r3, #1
 8004b6c:	6713      	str	r3, [r2, #112]	; 0x70
 8004b6e:	e00b      	b.n	8004b88 <HAL_RCC_OscConfig+0x324>
 8004b70:	4b58      	ldr	r3, [pc, #352]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b72:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b74:	4a57      	ldr	r2, [pc, #348]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b76:	f023 0301 	bic.w	r3, r3, #1
 8004b7a:	6713      	str	r3, [r2, #112]	; 0x70
 8004b7c:	4b55      	ldr	r3, [pc, #340]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b7e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b80:	4a54      	ldr	r2, [pc, #336]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004b82:	f023 0304 	bic.w	r3, r3, #4
 8004b86:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8004b88:	687b      	ldr	r3, [r7, #4]
 8004b8a:	689b      	ldr	r3, [r3, #8]
 8004b8c:	2b00      	cmp	r3, #0
 8004b8e:	d015      	beq.n	8004bbc <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004b90:	f7fd ff9a 	bl	8002ac8 <HAL_GetTick>
 8004b94:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004b96:	e00a      	b.n	8004bae <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004b98:	f7fd ff96 	bl	8002ac8 <HAL_GetTick>
 8004b9c:	4602      	mov	r2, r0
 8004b9e:	693b      	ldr	r3, [r7, #16]
 8004ba0:	1ad3      	subs	r3, r2, r3
 8004ba2:	f241 3288 	movw	r2, #5000	; 0x1388
 8004ba6:	4293      	cmp	r3, r2
 8004ba8:	d901      	bls.n	8004bae <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 8004baa:	2303      	movs	r3, #3
 8004bac:	e0c2      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004bae:	4b49      	ldr	r3, [pc, #292]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004bb0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004bb2:	f003 0302 	and.w	r3, r3, #2
 8004bb6:	2b00      	cmp	r3, #0
 8004bb8:	d0ee      	beq.n	8004b98 <HAL_RCC_OscConfig+0x334>
 8004bba:	e014      	b.n	8004be6 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004bbc:	f7fd ff84 	bl	8002ac8 <HAL_GetTick>
 8004bc0:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004bc2:	e00a      	b.n	8004bda <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004bc4:	f7fd ff80 	bl	8002ac8 <HAL_GetTick>
 8004bc8:	4602      	mov	r2, r0
 8004bca:	693b      	ldr	r3, [r7, #16]
 8004bcc:	1ad3      	subs	r3, r2, r3
 8004bce:	f241 3288 	movw	r2, #5000	; 0x1388
 8004bd2:	4293      	cmp	r3, r2
 8004bd4:	d901      	bls.n	8004bda <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8004bd6:	2303      	movs	r3, #3
 8004bd8:	e0ac      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004bda:	4b3e      	ldr	r3, [pc, #248]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004bdc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004bde:	f003 0302 	and.w	r3, r3, #2
 8004be2:	2b00      	cmp	r3, #0
 8004be4:	d1ee      	bne.n	8004bc4 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8004be6:	7dfb      	ldrb	r3, [r7, #23]
 8004be8:	2b01      	cmp	r3, #1
 8004bea:	d105      	bne.n	8004bf8 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004bec:	4b39      	ldr	r3, [pc, #228]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004bee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bf0:	4a38      	ldr	r2, [pc, #224]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004bf2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004bf6:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	699b      	ldr	r3, [r3, #24]
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	f000 8098 	beq.w	8004d32 <HAL_RCC_OscConfig+0x4ce>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004c02:	4b34      	ldr	r3, [pc, #208]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004c04:	689b      	ldr	r3, [r3, #8]
 8004c06:	f003 030c 	and.w	r3, r3, #12
 8004c0a:	2b08      	cmp	r3, #8
 8004c0c:	d05c      	beq.n	8004cc8 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004c0e:	687b      	ldr	r3, [r7, #4]
 8004c10:	699b      	ldr	r3, [r3, #24]
 8004c12:	2b02      	cmp	r3, #2
 8004c14:	d141      	bne.n	8004c9a <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004c16:	4b31      	ldr	r3, [pc, #196]	; (8004cdc <HAL_RCC_OscConfig+0x478>)
 8004c18:	2200      	movs	r2, #0
 8004c1a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004c1c:	f7fd ff54 	bl	8002ac8 <HAL_GetTick>
 8004c20:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004c22:	e008      	b.n	8004c36 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004c24:	f7fd ff50 	bl	8002ac8 <HAL_GetTick>
 8004c28:	4602      	mov	r2, r0
 8004c2a:	693b      	ldr	r3, [r7, #16]
 8004c2c:	1ad3      	subs	r3, r2, r3
 8004c2e:	2b02      	cmp	r3, #2
 8004c30:	d901      	bls.n	8004c36 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8004c32:	2303      	movs	r3, #3
 8004c34:	e07e      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004c36:	4b27      	ldr	r3, [pc, #156]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004c38:	681b      	ldr	r3, [r3, #0]
 8004c3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004c3e:	2b00      	cmp	r3, #0
 8004c40:	d1f0      	bne.n	8004c24 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	69da      	ldr	r2, [r3, #28]
 8004c46:	687b      	ldr	r3, [r7, #4]
 8004c48:	6a1b      	ldr	r3, [r3, #32]
 8004c4a:	431a      	orrs	r2, r3
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c50:	019b      	lsls	r3, r3, #6
 8004c52:	431a      	orrs	r2, r3
 8004c54:	687b      	ldr	r3, [r7, #4]
 8004c56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004c58:	085b      	lsrs	r3, r3, #1
 8004c5a:	3b01      	subs	r3, #1
 8004c5c:	041b      	lsls	r3, r3, #16
 8004c5e:	431a      	orrs	r2, r3
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004c64:	061b      	lsls	r3, r3, #24
 8004c66:	491b      	ldr	r1, [pc, #108]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004c68:	4313      	orrs	r3, r2
 8004c6a:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004c6c:	4b1b      	ldr	r3, [pc, #108]	; (8004cdc <HAL_RCC_OscConfig+0x478>)
 8004c6e:	2201      	movs	r2, #1
 8004c70:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004c72:	f7fd ff29 	bl	8002ac8 <HAL_GetTick>
 8004c76:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004c78:	e008      	b.n	8004c8c <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004c7a:	f7fd ff25 	bl	8002ac8 <HAL_GetTick>
 8004c7e:	4602      	mov	r2, r0
 8004c80:	693b      	ldr	r3, [r7, #16]
 8004c82:	1ad3      	subs	r3, r2, r3
 8004c84:	2b02      	cmp	r3, #2
 8004c86:	d901      	bls.n	8004c8c <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8004c88:	2303      	movs	r3, #3
 8004c8a:	e053      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004c8c:	4b11      	ldr	r3, [pc, #68]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004c8e:	681b      	ldr	r3, [r3, #0]
 8004c90:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004c94:	2b00      	cmp	r3, #0
 8004c96:	d0f0      	beq.n	8004c7a <HAL_RCC_OscConfig+0x416>
 8004c98:	e04b      	b.n	8004d32 <HAL_RCC_OscConfig+0x4ce>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004c9a:	4b10      	ldr	r3, [pc, #64]	; (8004cdc <HAL_RCC_OscConfig+0x478>)
 8004c9c:	2200      	movs	r2, #0
 8004c9e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004ca0:	f7fd ff12 	bl	8002ac8 <HAL_GetTick>
 8004ca4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004ca6:	e008      	b.n	8004cba <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004ca8:	f7fd ff0e 	bl	8002ac8 <HAL_GetTick>
 8004cac:	4602      	mov	r2, r0
 8004cae:	693b      	ldr	r3, [r7, #16]
 8004cb0:	1ad3      	subs	r3, r2, r3
 8004cb2:	2b02      	cmp	r3, #2
 8004cb4:	d901      	bls.n	8004cba <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8004cb6:	2303      	movs	r3, #3
 8004cb8:	e03c      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004cba:	4b06      	ldr	r3, [pc, #24]	; (8004cd4 <HAL_RCC_OscConfig+0x470>)
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004cc2:	2b00      	cmp	r3, #0
 8004cc4:	d1f0      	bne.n	8004ca8 <HAL_RCC_OscConfig+0x444>
 8004cc6:	e034      	b.n	8004d32 <HAL_RCC_OscConfig+0x4ce>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	699b      	ldr	r3, [r3, #24]
 8004ccc:	2b01      	cmp	r3, #1
 8004cce:	d107      	bne.n	8004ce0 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8004cd0:	2301      	movs	r3, #1
 8004cd2:	e02f      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
 8004cd4:	40023800 	.word	0x40023800
 8004cd8:	40007000 	.word	0x40007000
 8004cdc:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8004ce0:	4b16      	ldr	r3, [pc, #88]	; (8004d3c <HAL_RCC_OscConfig+0x4d8>)
 8004ce2:	689b      	ldr	r3, [r3, #8]
 8004ce4:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004ce6:	68fb      	ldr	r3, [r7, #12]
 8004ce8:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	69db      	ldr	r3, [r3, #28]
 8004cf0:	429a      	cmp	r2, r3
 8004cf2:	d11c      	bne.n	8004d2e <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004cf4:	68fb      	ldr	r3, [r7, #12]
 8004cf6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8004cfa:	687b      	ldr	r3, [r7, #4]
 8004cfc:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004cfe:	429a      	cmp	r2, r3
 8004d00:	d115      	bne.n	8004d2e <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8004d02:	68fa      	ldr	r2, [r7, #12]
 8004d04:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004d08:	4013      	ands	r3, r2
 8004d0a:	687a      	ldr	r2, [r7, #4]
 8004d0c:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004d0e:	4293      	cmp	r3, r2
 8004d10:	d10d      	bne.n	8004d2e <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004d12:	68fb      	ldr	r3, [r7, #12]
 8004d14:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004d18:	687b      	ldr	r3, [r7, #4]
 8004d1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8004d1c:	429a      	cmp	r2, r3
 8004d1e:	d106      	bne.n	8004d2e <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8004d20:	68fb      	ldr	r3, [r7, #12]
 8004d22:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004d2a:	429a      	cmp	r2, r3
 8004d2c:	d001      	beq.n	8004d32 <HAL_RCC_OscConfig+0x4ce>
        {
          return HAL_ERROR;
 8004d2e:	2301      	movs	r3, #1
 8004d30:	e000      	b.n	8004d34 <HAL_RCC_OscConfig+0x4d0>
        }
      }
    }
  }
  return HAL_OK;
 8004d32:	2300      	movs	r3, #0
}
 8004d34:	4618      	mov	r0, r3
 8004d36:	3718      	adds	r7, #24
 8004d38:	46bd      	mov	sp, r7
 8004d3a:	bd80      	pop	{r7, pc}
 8004d3c:	40023800 	.word	0x40023800

08004d40 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004d40:	b580      	push	{r7, lr}
 8004d42:	b084      	sub	sp, #16
 8004d44:	af00      	add	r7, sp, #0
 8004d46:	6078      	str	r0, [r7, #4]
 8004d48:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8004d4a:	687b      	ldr	r3, [r7, #4]
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	d101      	bne.n	8004d54 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004d50:	2301      	movs	r3, #1
 8004d52:	e0cc      	b.n	8004eee <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004d54:	4b68      	ldr	r3, [pc, #416]	; (8004ef8 <HAL_RCC_ClockConfig+0x1b8>)
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	f003 030f 	and.w	r3, r3, #15
 8004d5c:	683a      	ldr	r2, [r7, #0]
 8004d5e:	429a      	cmp	r2, r3
 8004d60:	d90c      	bls.n	8004d7c <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004d62:	4b65      	ldr	r3, [pc, #404]	; (8004ef8 <HAL_RCC_ClockConfig+0x1b8>)
 8004d64:	683a      	ldr	r2, [r7, #0]
 8004d66:	b2d2      	uxtb	r2, r2
 8004d68:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004d6a:	4b63      	ldr	r3, [pc, #396]	; (8004ef8 <HAL_RCC_ClockConfig+0x1b8>)
 8004d6c:	681b      	ldr	r3, [r3, #0]
 8004d6e:	f003 030f 	and.w	r3, r3, #15
 8004d72:	683a      	ldr	r2, [r7, #0]
 8004d74:	429a      	cmp	r2, r3
 8004d76:	d001      	beq.n	8004d7c <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8004d78:	2301      	movs	r3, #1
 8004d7a:	e0b8      	b.n	8004eee <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004d7c:	687b      	ldr	r3, [r7, #4]
 8004d7e:	681b      	ldr	r3, [r3, #0]
 8004d80:	f003 0302 	and.w	r3, r3, #2
 8004d84:	2b00      	cmp	r3, #0
 8004d86:	d020      	beq.n	8004dca <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	681b      	ldr	r3, [r3, #0]
 8004d8c:	f003 0304 	and.w	r3, r3, #4
 8004d90:	2b00      	cmp	r3, #0
 8004d92:	d005      	beq.n	8004da0 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8004d94:	4b59      	ldr	r3, [pc, #356]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004d96:	689b      	ldr	r3, [r3, #8]
 8004d98:	4a58      	ldr	r2, [pc, #352]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004d9a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8004d9e:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	681b      	ldr	r3, [r3, #0]
 8004da4:	f003 0308 	and.w	r3, r3, #8
 8004da8:	2b00      	cmp	r3, #0
 8004daa:	d005      	beq.n	8004db8 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8004dac:	4b53      	ldr	r3, [pc, #332]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004dae:	689b      	ldr	r3, [r3, #8]
 8004db0:	4a52      	ldr	r2, [pc, #328]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004db2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8004db6:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004db8:	4b50      	ldr	r3, [pc, #320]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004dba:	689b      	ldr	r3, [r3, #8]
 8004dbc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	689b      	ldr	r3, [r3, #8]
 8004dc4:	494d      	ldr	r1, [pc, #308]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004dc6:	4313      	orrs	r3, r2
 8004dc8:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	f003 0301 	and.w	r3, r3, #1
 8004dd2:	2b00      	cmp	r3, #0
 8004dd4:	d044      	beq.n	8004e60 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004dd6:	687b      	ldr	r3, [r7, #4]
 8004dd8:	685b      	ldr	r3, [r3, #4]
 8004dda:	2b01      	cmp	r3, #1
 8004ddc:	d107      	bne.n	8004dee <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004dde:	4b47      	ldr	r3, [pc, #284]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004de6:	2b00      	cmp	r3, #0
 8004de8:	d119      	bne.n	8004e1e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8004dea:	2301      	movs	r3, #1
 8004dec:	e07f      	b.n	8004eee <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	685b      	ldr	r3, [r3, #4]
 8004df2:	2b02      	cmp	r3, #2
 8004df4:	d003      	beq.n	8004dfe <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004dfa:	2b03      	cmp	r3, #3
 8004dfc:	d107      	bne.n	8004e0e <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004dfe:	4b3f      	ldr	r3, [pc, #252]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004e00:	681b      	ldr	r3, [r3, #0]
 8004e02:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	d109      	bne.n	8004e1e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8004e0a:	2301      	movs	r3, #1
 8004e0c:	e06f      	b.n	8004eee <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004e0e:	4b3b      	ldr	r3, [pc, #236]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004e10:	681b      	ldr	r3, [r3, #0]
 8004e12:	f003 0302 	and.w	r3, r3, #2
 8004e16:	2b00      	cmp	r3, #0
 8004e18:	d101      	bne.n	8004e1e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8004e1a:	2301      	movs	r3, #1
 8004e1c:	e067      	b.n	8004eee <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004e1e:	4b37      	ldr	r3, [pc, #220]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004e20:	689b      	ldr	r3, [r3, #8]
 8004e22:	f023 0203 	bic.w	r2, r3, #3
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	685b      	ldr	r3, [r3, #4]
 8004e2a:	4934      	ldr	r1, [pc, #208]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004e2c:	4313      	orrs	r3, r2
 8004e2e:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004e30:	f7fd fe4a 	bl	8002ac8 <HAL_GetTick>
 8004e34:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004e36:	e00a      	b.n	8004e4e <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004e38:	f7fd fe46 	bl	8002ac8 <HAL_GetTick>
 8004e3c:	4602      	mov	r2, r0
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	1ad3      	subs	r3, r2, r3
 8004e42:	f241 3288 	movw	r2, #5000	; 0x1388
 8004e46:	4293      	cmp	r3, r2
 8004e48:	d901      	bls.n	8004e4e <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8004e4a:	2303      	movs	r3, #3
 8004e4c:	e04f      	b.n	8004eee <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004e4e:	4b2b      	ldr	r3, [pc, #172]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004e50:	689b      	ldr	r3, [r3, #8]
 8004e52:	f003 020c 	and.w	r2, r3, #12
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	685b      	ldr	r3, [r3, #4]
 8004e5a:	009b      	lsls	r3, r3, #2
 8004e5c:	429a      	cmp	r2, r3
 8004e5e:	d1eb      	bne.n	8004e38 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8004e60:	4b25      	ldr	r3, [pc, #148]	; (8004ef8 <HAL_RCC_ClockConfig+0x1b8>)
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	f003 030f 	and.w	r3, r3, #15
 8004e68:	683a      	ldr	r2, [r7, #0]
 8004e6a:	429a      	cmp	r2, r3
 8004e6c:	d20c      	bcs.n	8004e88 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004e6e:	4b22      	ldr	r3, [pc, #136]	; (8004ef8 <HAL_RCC_ClockConfig+0x1b8>)
 8004e70:	683a      	ldr	r2, [r7, #0]
 8004e72:	b2d2      	uxtb	r2, r2
 8004e74:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004e76:	4b20      	ldr	r3, [pc, #128]	; (8004ef8 <HAL_RCC_ClockConfig+0x1b8>)
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	f003 030f 	and.w	r3, r3, #15
 8004e7e:	683a      	ldr	r2, [r7, #0]
 8004e80:	429a      	cmp	r2, r3
 8004e82:	d001      	beq.n	8004e88 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8004e84:	2301      	movs	r3, #1
 8004e86:	e032      	b.n	8004eee <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	f003 0304 	and.w	r3, r3, #4
 8004e90:	2b00      	cmp	r3, #0
 8004e92:	d008      	beq.n	8004ea6 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004e94:	4b19      	ldr	r3, [pc, #100]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004e96:	689b      	ldr	r3, [r3, #8]
 8004e98:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8004e9c:	687b      	ldr	r3, [r7, #4]
 8004e9e:	68db      	ldr	r3, [r3, #12]
 8004ea0:	4916      	ldr	r1, [pc, #88]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004ea2:	4313      	orrs	r3, r2
 8004ea4:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	f003 0308 	and.w	r3, r3, #8
 8004eae:	2b00      	cmp	r3, #0
 8004eb0:	d009      	beq.n	8004ec6 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8004eb2:	4b12      	ldr	r3, [pc, #72]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004eb4:	689b      	ldr	r3, [r3, #8]
 8004eb6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	691b      	ldr	r3, [r3, #16]
 8004ebe:	00db      	lsls	r3, r3, #3
 8004ec0:	490e      	ldr	r1, [pc, #56]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004ec2:	4313      	orrs	r3, r2
 8004ec4:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004ec6:	f000 f821 	bl	8004f0c <HAL_RCC_GetSysClockFreq>
 8004eca:	4602      	mov	r2, r0
 8004ecc:	4b0b      	ldr	r3, [pc, #44]	; (8004efc <HAL_RCC_ClockConfig+0x1bc>)
 8004ece:	689b      	ldr	r3, [r3, #8]
 8004ed0:	091b      	lsrs	r3, r3, #4
 8004ed2:	f003 030f 	and.w	r3, r3, #15
 8004ed6:	490a      	ldr	r1, [pc, #40]	; (8004f00 <HAL_RCC_ClockConfig+0x1c0>)
 8004ed8:	5ccb      	ldrb	r3, [r1, r3]
 8004eda:	fa22 f303 	lsr.w	r3, r2, r3
 8004ede:	4a09      	ldr	r2, [pc, #36]	; (8004f04 <HAL_RCC_ClockConfig+0x1c4>)
 8004ee0:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8004ee2:	4b09      	ldr	r3, [pc, #36]	; (8004f08 <HAL_RCC_ClockConfig+0x1c8>)
 8004ee4:	681b      	ldr	r3, [r3, #0]
 8004ee6:	4618      	mov	r0, r3
 8004ee8:	f7fd fc14 	bl	8002714 <HAL_InitTick>

  return HAL_OK;
 8004eec:	2300      	movs	r3, #0
}
 8004eee:	4618      	mov	r0, r3
 8004ef0:	3710      	adds	r7, #16
 8004ef2:	46bd      	mov	sp, r7
 8004ef4:	bd80      	pop	{r7, pc}
 8004ef6:	bf00      	nop
 8004ef8:	40023c00 	.word	0x40023c00
 8004efc:	40023800 	.word	0x40023800
 8004f00:	0801ed34 	.word	0x0801ed34
 8004f04:	20000004 	.word	0x20000004
 8004f08:	20000008 	.word	0x20000008

08004f0c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004f0c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004f10:	b094      	sub	sp, #80	; 0x50
 8004f12:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8004f14:	2300      	movs	r3, #0
 8004f16:	647b      	str	r3, [r7, #68]	; 0x44
 8004f18:	2300      	movs	r3, #0
 8004f1a:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004f1c:	2300      	movs	r3, #0
 8004f1e:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t sysclockfreq = 0U;
 8004f20:	2300      	movs	r3, #0
 8004f22:	64bb      	str	r3, [r7, #72]	; 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004f24:	4b79      	ldr	r3, [pc, #484]	; (800510c <HAL_RCC_GetSysClockFreq+0x200>)
 8004f26:	689b      	ldr	r3, [r3, #8]
 8004f28:	f003 030c 	and.w	r3, r3, #12
 8004f2c:	2b08      	cmp	r3, #8
 8004f2e:	d00d      	beq.n	8004f4c <HAL_RCC_GetSysClockFreq+0x40>
 8004f30:	2b08      	cmp	r3, #8
 8004f32:	f200 80e1 	bhi.w	80050f8 <HAL_RCC_GetSysClockFreq+0x1ec>
 8004f36:	2b00      	cmp	r3, #0
 8004f38:	d002      	beq.n	8004f40 <HAL_RCC_GetSysClockFreq+0x34>
 8004f3a:	2b04      	cmp	r3, #4
 8004f3c:	d003      	beq.n	8004f46 <HAL_RCC_GetSysClockFreq+0x3a>
 8004f3e:	e0db      	b.n	80050f8 <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8004f40:	4b73      	ldr	r3, [pc, #460]	; (8005110 <HAL_RCC_GetSysClockFreq+0x204>)
 8004f42:	64bb      	str	r3, [r7, #72]	; 0x48
       break;
 8004f44:	e0db      	b.n	80050fe <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8004f46:	4b73      	ldr	r3, [pc, #460]	; (8005114 <HAL_RCC_GetSysClockFreq+0x208>)
 8004f48:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 8004f4a:	e0d8      	b.n	80050fe <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8004f4c:	4b6f      	ldr	r3, [pc, #444]	; (800510c <HAL_RCC_GetSysClockFreq+0x200>)
 8004f4e:	685b      	ldr	r3, [r3, #4]
 8004f50:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004f54:	647b      	str	r3, [r7, #68]	; 0x44
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8004f56:	4b6d      	ldr	r3, [pc, #436]	; (800510c <HAL_RCC_GetSysClockFreq+0x200>)
 8004f58:	685b      	ldr	r3, [r3, #4]
 8004f5a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004f5e:	2b00      	cmp	r3, #0
 8004f60:	d063      	beq.n	800502a <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004f62:	4b6a      	ldr	r3, [pc, #424]	; (800510c <HAL_RCC_GetSysClockFreq+0x200>)
 8004f64:	685b      	ldr	r3, [r3, #4]
 8004f66:	099b      	lsrs	r3, r3, #6
 8004f68:	2200      	movs	r2, #0
 8004f6a:	63bb      	str	r3, [r7, #56]	; 0x38
 8004f6c:	63fa      	str	r2, [r7, #60]	; 0x3c
 8004f6e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004f70:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004f74:	633b      	str	r3, [r7, #48]	; 0x30
 8004f76:	2300      	movs	r3, #0
 8004f78:	637b      	str	r3, [r7, #52]	; 0x34
 8004f7a:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8004f7e:	4622      	mov	r2, r4
 8004f80:	462b      	mov	r3, r5
 8004f82:	f04f 0000 	mov.w	r0, #0
 8004f86:	f04f 0100 	mov.w	r1, #0
 8004f8a:	0159      	lsls	r1, r3, #5
 8004f8c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004f90:	0150      	lsls	r0, r2, #5
 8004f92:	4602      	mov	r2, r0
 8004f94:	460b      	mov	r3, r1
 8004f96:	4621      	mov	r1, r4
 8004f98:	1a51      	subs	r1, r2, r1
 8004f9a:	6139      	str	r1, [r7, #16]
 8004f9c:	4629      	mov	r1, r5
 8004f9e:	eb63 0301 	sbc.w	r3, r3, r1
 8004fa2:	617b      	str	r3, [r7, #20]
 8004fa4:	f04f 0200 	mov.w	r2, #0
 8004fa8:	f04f 0300 	mov.w	r3, #0
 8004fac:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004fb0:	4659      	mov	r1, fp
 8004fb2:	018b      	lsls	r3, r1, #6
 8004fb4:	4651      	mov	r1, sl
 8004fb6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004fba:	4651      	mov	r1, sl
 8004fbc:	018a      	lsls	r2, r1, #6
 8004fbe:	4651      	mov	r1, sl
 8004fc0:	ebb2 0801 	subs.w	r8, r2, r1
 8004fc4:	4659      	mov	r1, fp
 8004fc6:	eb63 0901 	sbc.w	r9, r3, r1
 8004fca:	f04f 0200 	mov.w	r2, #0
 8004fce:	f04f 0300 	mov.w	r3, #0
 8004fd2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004fd6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004fda:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004fde:	4690      	mov	r8, r2
 8004fe0:	4699      	mov	r9, r3
 8004fe2:	4623      	mov	r3, r4
 8004fe4:	eb18 0303 	adds.w	r3, r8, r3
 8004fe8:	60bb      	str	r3, [r7, #8]
 8004fea:	462b      	mov	r3, r5
 8004fec:	eb49 0303 	adc.w	r3, r9, r3
 8004ff0:	60fb      	str	r3, [r7, #12]
 8004ff2:	f04f 0200 	mov.w	r2, #0
 8004ff6:	f04f 0300 	mov.w	r3, #0
 8004ffa:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8004ffe:	4629      	mov	r1, r5
 8005000:	024b      	lsls	r3, r1, #9
 8005002:	4621      	mov	r1, r4
 8005004:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005008:	4621      	mov	r1, r4
 800500a:	024a      	lsls	r2, r1, #9
 800500c:	4610      	mov	r0, r2
 800500e:	4619      	mov	r1, r3
 8005010:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005012:	2200      	movs	r2, #0
 8005014:	62bb      	str	r3, [r7, #40]	; 0x28
 8005016:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005018:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800501c:	f7fb fdd4 	bl	8000bc8 <__aeabi_uldivmod>
 8005020:	4602      	mov	r2, r0
 8005022:	460b      	mov	r3, r1
 8005024:	4613      	mov	r3, r2
 8005026:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005028:	e058      	b.n	80050dc <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800502a:	4b38      	ldr	r3, [pc, #224]	; (800510c <HAL_RCC_GetSysClockFreq+0x200>)
 800502c:	685b      	ldr	r3, [r3, #4]
 800502e:	099b      	lsrs	r3, r3, #6
 8005030:	2200      	movs	r2, #0
 8005032:	4618      	mov	r0, r3
 8005034:	4611      	mov	r1, r2
 8005036:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800503a:	623b      	str	r3, [r7, #32]
 800503c:	2300      	movs	r3, #0
 800503e:	627b      	str	r3, [r7, #36]	; 0x24
 8005040:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005044:	4642      	mov	r2, r8
 8005046:	464b      	mov	r3, r9
 8005048:	f04f 0000 	mov.w	r0, #0
 800504c:	f04f 0100 	mov.w	r1, #0
 8005050:	0159      	lsls	r1, r3, #5
 8005052:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005056:	0150      	lsls	r0, r2, #5
 8005058:	4602      	mov	r2, r0
 800505a:	460b      	mov	r3, r1
 800505c:	4641      	mov	r1, r8
 800505e:	ebb2 0a01 	subs.w	sl, r2, r1
 8005062:	4649      	mov	r1, r9
 8005064:	eb63 0b01 	sbc.w	fp, r3, r1
 8005068:	f04f 0200 	mov.w	r2, #0
 800506c:	f04f 0300 	mov.w	r3, #0
 8005070:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005074:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8005078:	ea4f 128a 	mov.w	r2, sl, lsl #6
 800507c:	ebb2 040a 	subs.w	r4, r2, sl
 8005080:	eb63 050b 	sbc.w	r5, r3, fp
 8005084:	f04f 0200 	mov.w	r2, #0
 8005088:	f04f 0300 	mov.w	r3, #0
 800508c:	00eb      	lsls	r3, r5, #3
 800508e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005092:	00e2      	lsls	r2, r4, #3
 8005094:	4614      	mov	r4, r2
 8005096:	461d      	mov	r5, r3
 8005098:	4643      	mov	r3, r8
 800509a:	18e3      	adds	r3, r4, r3
 800509c:	603b      	str	r3, [r7, #0]
 800509e:	464b      	mov	r3, r9
 80050a0:	eb45 0303 	adc.w	r3, r5, r3
 80050a4:	607b      	str	r3, [r7, #4]
 80050a6:	f04f 0200 	mov.w	r2, #0
 80050aa:	f04f 0300 	mov.w	r3, #0
 80050ae:	e9d7 4500 	ldrd	r4, r5, [r7]
 80050b2:	4629      	mov	r1, r5
 80050b4:	028b      	lsls	r3, r1, #10
 80050b6:	4621      	mov	r1, r4
 80050b8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80050bc:	4621      	mov	r1, r4
 80050be:	028a      	lsls	r2, r1, #10
 80050c0:	4610      	mov	r0, r2
 80050c2:	4619      	mov	r1, r3
 80050c4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80050c6:	2200      	movs	r2, #0
 80050c8:	61bb      	str	r3, [r7, #24]
 80050ca:	61fa      	str	r2, [r7, #28]
 80050cc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80050d0:	f7fb fd7a 	bl	8000bc8 <__aeabi_uldivmod>
 80050d4:	4602      	mov	r2, r0
 80050d6:	460b      	mov	r3, r1
 80050d8:	4613      	mov	r3, r2
 80050da:	64fb      	str	r3, [r7, #76]	; 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80050dc:	4b0b      	ldr	r3, [pc, #44]	; (800510c <HAL_RCC_GetSysClockFreq+0x200>)
 80050de:	685b      	ldr	r3, [r3, #4]
 80050e0:	0c1b      	lsrs	r3, r3, #16
 80050e2:	f003 0303 	and.w	r3, r3, #3
 80050e6:	3301      	adds	r3, #1
 80050e8:	005b      	lsls	r3, r3, #1
 80050ea:	643b      	str	r3, [r7, #64]	; 0x40

      sysclockfreq = pllvco/pllp;
 80050ec:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80050ee:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80050f0:	fbb2 f3f3 	udiv	r3, r2, r3
 80050f4:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 80050f6:	e002      	b.n	80050fe <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 80050f8:	4b05      	ldr	r3, [pc, #20]	; (8005110 <HAL_RCC_GetSysClockFreq+0x204>)
 80050fa:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 80050fc:	bf00      	nop
    }
  }
  return sysclockfreq;
 80050fe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 8005100:	4618      	mov	r0, r3
 8005102:	3750      	adds	r7, #80	; 0x50
 8005104:	46bd      	mov	sp, r7
 8005106:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800510a:	bf00      	nop
 800510c:	40023800 	.word	0x40023800
 8005110:	00f42400 	.word	0x00f42400
 8005114:	007a1200 	.word	0x007a1200

08005118 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005118:	b480      	push	{r7}
 800511a:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800511c:	4b03      	ldr	r3, [pc, #12]	; (800512c <HAL_RCC_GetHCLKFreq+0x14>)
 800511e:	681b      	ldr	r3, [r3, #0]
}
 8005120:	4618      	mov	r0, r3
 8005122:	46bd      	mov	sp, r7
 8005124:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005128:	4770      	bx	lr
 800512a:	bf00      	nop
 800512c:	20000004 	.word	0x20000004

08005130 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005130:	b580      	push	{r7, lr}
 8005132:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005134:	f7ff fff0 	bl	8005118 <HAL_RCC_GetHCLKFreq>
 8005138:	4602      	mov	r2, r0
 800513a:	4b05      	ldr	r3, [pc, #20]	; (8005150 <HAL_RCC_GetPCLK1Freq+0x20>)
 800513c:	689b      	ldr	r3, [r3, #8]
 800513e:	0a9b      	lsrs	r3, r3, #10
 8005140:	f003 0307 	and.w	r3, r3, #7
 8005144:	4903      	ldr	r1, [pc, #12]	; (8005154 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005146:	5ccb      	ldrb	r3, [r1, r3]
 8005148:	fa22 f303 	lsr.w	r3, r2, r3
}
 800514c:	4618      	mov	r0, r3
 800514e:	bd80      	pop	{r7, pc}
 8005150:	40023800 	.word	0x40023800
 8005154:	0801ed44 	.word	0x0801ed44

08005158 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8005158:	b580      	push	{r7, lr}
 800515a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800515c:	f7ff ffdc 	bl	8005118 <HAL_RCC_GetHCLKFreq>
 8005160:	4602      	mov	r2, r0
 8005162:	4b05      	ldr	r3, [pc, #20]	; (8005178 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005164:	689b      	ldr	r3, [r3, #8]
 8005166:	0b5b      	lsrs	r3, r3, #13
 8005168:	f003 0307 	and.w	r3, r3, #7
 800516c:	4903      	ldr	r1, [pc, #12]	; (800517c <HAL_RCC_GetPCLK2Freq+0x24>)
 800516e:	5ccb      	ldrb	r3, [r1, r3]
 8005170:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005174:	4618      	mov	r0, r3
 8005176:	bd80      	pop	{r7, pc}
 8005178:	40023800 	.word	0x40023800
 800517c:	0801ed44 	.word	0x0801ed44

08005180 <HAL_RCC_GetClockConfig>:
  * will be configured.
  * @param  pFLatency Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
 8005180:	b480      	push	{r7}
 8005182:	b083      	sub	sp, #12
 8005184:	af00      	add	r7, sp, #0
 8005186:	6078      	str	r0, [r7, #4]
 8005188:	6039      	str	r1, [r7, #0]
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	220f      	movs	r2, #15
 800518e:	601a      	str	r2, [r3, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005190:	4b12      	ldr	r3, [pc, #72]	; (80051dc <HAL_RCC_GetClockConfig+0x5c>)
 8005192:	689b      	ldr	r3, [r3, #8]
 8005194:	f003 0203 	and.w	r2, r3, #3
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800519c:	4b0f      	ldr	r3, [pc, #60]	; (80051dc <HAL_RCC_GetClockConfig+0x5c>)
 800519e:	689b      	ldr	r3, [r3, #8]
 80051a0:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80051a8:	4b0c      	ldr	r3, [pc, #48]	; (80051dc <HAL_RCC_GetClockConfig+0x5c>)
 80051aa:	689b      	ldr	r3, [r3, #8]
 80051ac:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80051b4:	4b09      	ldr	r3, [pc, #36]	; (80051dc <HAL_RCC_GetClockConfig+0x5c>)
 80051b6:	689b      	ldr	r3, [r3, #8]
 80051b8:	08db      	lsrs	r3, r3, #3
 80051ba:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	611a      	str	r2, [r3, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80051c2:	4b07      	ldr	r3, [pc, #28]	; (80051e0 <HAL_RCC_GetClockConfig+0x60>)
 80051c4:	681b      	ldr	r3, [r3, #0]
 80051c6:	f003 020f 	and.w	r2, r3, #15
 80051ca:	683b      	ldr	r3, [r7, #0]
 80051cc:	601a      	str	r2, [r3, #0]
}
 80051ce:	bf00      	nop
 80051d0:	370c      	adds	r7, #12
 80051d2:	46bd      	mov	sp, r7
 80051d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051d8:	4770      	bx	lr
 80051da:	bf00      	nop
 80051dc:	40023800 	.word	0x40023800
 80051e0:	40023c00 	.word	0x40023c00

080051e4 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80051e4:	b580      	push	{r7, lr}
 80051e6:	b086      	sub	sp, #24
 80051e8:	af00      	add	r7, sp, #0
 80051ea:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 80051ec:	2300      	movs	r3, #0
 80051ee:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 80051f0:	2300      	movs	r3, #0
 80051f2:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	681b      	ldr	r3, [r3, #0]
 80051f8:	f003 0301 	and.w	r3, r3, #1
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d10b      	bne.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005208:	2b00      	cmp	r3, #0
 800520a:	d105      	bne.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005214:	2b00      	cmp	r3, #0
 8005216:	d075      	beq.n	8005304 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8005218:	4b91      	ldr	r3, [pc, #580]	; (8005460 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 800521a:	2200      	movs	r2, #0
 800521c:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800521e:	f7fd fc53 	bl	8002ac8 <HAL_GetTick>
 8005222:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005224:	e008      	b.n	8005238 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005226:	f7fd fc4f 	bl	8002ac8 <HAL_GetTick>
 800522a:	4602      	mov	r2, r0
 800522c:	697b      	ldr	r3, [r7, #20]
 800522e:	1ad3      	subs	r3, r2, r3
 8005230:	2b02      	cmp	r3, #2
 8005232:	d901      	bls.n	8005238 <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005234:	2303      	movs	r3, #3
 8005236:	e189      	b.n	800554c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005238:	4b8a      	ldr	r3, [pc, #552]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800523a:	681b      	ldr	r3, [r3, #0]
 800523c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005240:	2b00      	cmp	r3, #0
 8005242:	d1f0      	bne.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	f003 0301 	and.w	r3, r3, #1
 800524c:	2b00      	cmp	r3, #0
 800524e:	d009      	beq.n	8005264 <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	685b      	ldr	r3, [r3, #4]
 8005254:	019a      	lsls	r2, r3, #6
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	689b      	ldr	r3, [r3, #8]
 800525a:	071b      	lsls	r3, r3, #28
 800525c:	4981      	ldr	r1, [pc, #516]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800525e:	4313      	orrs	r3, r2
 8005260:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	f003 0302 	and.w	r3, r3, #2
 800526c:	2b00      	cmp	r3, #0
 800526e:	d01f      	beq.n	80052b0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005270:	4b7c      	ldr	r3, [pc, #496]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005272:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005276:	0f1b      	lsrs	r3, r3, #28
 8005278:	f003 0307 	and.w	r3, r3, #7
 800527c:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800527e:	687b      	ldr	r3, [r7, #4]
 8005280:	685b      	ldr	r3, [r3, #4]
 8005282:	019a      	lsls	r2, r3, #6
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	68db      	ldr	r3, [r3, #12]
 8005288:	061b      	lsls	r3, r3, #24
 800528a:	431a      	orrs	r2, r3
 800528c:	693b      	ldr	r3, [r7, #16]
 800528e:	071b      	lsls	r3, r3, #28
 8005290:	4974      	ldr	r1, [pc, #464]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005292:	4313      	orrs	r3, r2
 8005294:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005298:	4b72      	ldr	r3, [pc, #456]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800529a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800529e:	f023 021f 	bic.w	r2, r3, #31
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	69db      	ldr	r3, [r3, #28]
 80052a6:	3b01      	subs	r3, #1
 80052a8:	496e      	ldr	r1, [pc, #440]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80052aa:	4313      	orrs	r3, r2
 80052ac:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80052b8:	2b00      	cmp	r3, #0
 80052ba:	d00d      	beq.n	80052d8 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	685b      	ldr	r3, [r3, #4]
 80052c0:	019a      	lsls	r2, r3, #6
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	68db      	ldr	r3, [r3, #12]
 80052c6:	061b      	lsls	r3, r3, #24
 80052c8:	431a      	orrs	r2, r3
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	689b      	ldr	r3, [r3, #8]
 80052ce:	071b      	lsls	r3, r3, #28
 80052d0:	4964      	ldr	r1, [pc, #400]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80052d2:	4313      	orrs	r3, r2
 80052d4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 80052d8:	4b61      	ldr	r3, [pc, #388]	; (8005460 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 80052da:	2201      	movs	r2, #1
 80052dc:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80052de:	f7fd fbf3 	bl	8002ac8 <HAL_GetTick>
 80052e2:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80052e4:	e008      	b.n	80052f8 <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80052e6:	f7fd fbef 	bl	8002ac8 <HAL_GetTick>
 80052ea:	4602      	mov	r2, r0
 80052ec:	697b      	ldr	r3, [r7, #20]
 80052ee:	1ad3      	subs	r3, r2, r3
 80052f0:	2b02      	cmp	r3, #2
 80052f2:	d901      	bls.n	80052f8 <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80052f4:	2303      	movs	r3, #3
 80052f6:	e129      	b.n	800554c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80052f8:	4b5a      	ldr	r3, [pc, #360]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005300:	2b00      	cmp	r3, #0
 8005302:	d0f0      	beq.n	80052e6 <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	681b      	ldr	r3, [r3, #0]
 8005308:	f003 0304 	and.w	r3, r3, #4
 800530c:	2b00      	cmp	r3, #0
 800530e:	d105      	bne.n	800531c <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005318:	2b00      	cmp	r3, #0
 800531a:	d079      	beq.n	8005410 <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800531c:	4b52      	ldr	r3, [pc, #328]	; (8005468 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800531e:	2200      	movs	r2, #0
 8005320:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005322:	f7fd fbd1 	bl	8002ac8 <HAL_GetTick>
 8005326:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005328:	e008      	b.n	800533c <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800532a:	f7fd fbcd 	bl	8002ac8 <HAL_GetTick>
 800532e:	4602      	mov	r2, r0
 8005330:	697b      	ldr	r3, [r7, #20]
 8005332:	1ad3      	subs	r3, r2, r3
 8005334:	2b02      	cmp	r3, #2
 8005336:	d901      	bls.n	800533c <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005338:	2303      	movs	r3, #3
 800533a:	e107      	b.n	800554c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800533c:	4b49      	ldr	r3, [pc, #292]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005344:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005348:	d0ef      	beq.n	800532a <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	681b      	ldr	r3, [r3, #0]
 800534e:	f003 0304 	and.w	r3, r3, #4
 8005352:	2b00      	cmp	r3, #0
 8005354:	d020      	beq.n	8005398 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005356:	4b43      	ldr	r3, [pc, #268]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005358:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800535c:	0f1b      	lsrs	r3, r3, #28
 800535e:	f003 0307 	and.w	r3, r3, #7
 8005362:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	691b      	ldr	r3, [r3, #16]
 8005368:	019a      	lsls	r2, r3, #6
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	695b      	ldr	r3, [r3, #20]
 800536e:	061b      	lsls	r3, r3, #24
 8005370:	431a      	orrs	r2, r3
 8005372:	693b      	ldr	r3, [r7, #16]
 8005374:	071b      	lsls	r3, r3, #28
 8005376:	493b      	ldr	r1, [pc, #236]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005378:	4313      	orrs	r3, r2
 800537a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800537e:	4b39      	ldr	r3, [pc, #228]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005380:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005384:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	6a1b      	ldr	r3, [r3, #32]
 800538c:	3b01      	subs	r3, #1
 800538e:	021b      	lsls	r3, r3, #8
 8005390:	4934      	ldr	r1, [pc, #208]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005392:	4313      	orrs	r3, r2
 8005394:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	f003 0308 	and.w	r3, r3, #8
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d01e      	beq.n	80053e2 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80053a4:	4b2f      	ldr	r3, [pc, #188]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80053a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80053aa:	0e1b      	lsrs	r3, r3, #24
 80053ac:	f003 030f 	and.w	r3, r3, #15
 80053b0:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	691b      	ldr	r3, [r3, #16]
 80053b6:	019a      	lsls	r2, r3, #6
 80053b8:	693b      	ldr	r3, [r7, #16]
 80053ba:	061b      	lsls	r3, r3, #24
 80053bc:	431a      	orrs	r2, r3
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	699b      	ldr	r3, [r3, #24]
 80053c2:	071b      	lsls	r3, r3, #28
 80053c4:	4927      	ldr	r1, [pc, #156]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80053c6:	4313      	orrs	r3, r2
 80053c8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80053cc:	4b25      	ldr	r3, [pc, #148]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80053ce:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80053d2:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053da:	4922      	ldr	r1, [pc, #136]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80053dc:	4313      	orrs	r3, r2
 80053de:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80053e2:	4b21      	ldr	r3, [pc, #132]	; (8005468 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80053e4:	2201      	movs	r2, #1
 80053e6:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80053e8:	f7fd fb6e 	bl	8002ac8 <HAL_GetTick>
 80053ec:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80053ee:	e008      	b.n	8005402 <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80053f0:	f7fd fb6a 	bl	8002ac8 <HAL_GetTick>
 80053f4:	4602      	mov	r2, r0
 80053f6:	697b      	ldr	r3, [r7, #20]
 80053f8:	1ad3      	subs	r3, r2, r3
 80053fa:	2b02      	cmp	r3, #2
 80053fc:	d901      	bls.n	8005402 <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80053fe:	2303      	movs	r3, #3
 8005400:	e0a4      	b.n	800554c <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005402:	4b18      	ldr	r3, [pc, #96]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005404:	681b      	ldr	r3, [r3, #0]
 8005406:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800540a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800540e:	d1ef      	bne.n	80053f0 <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005410:	687b      	ldr	r3, [r7, #4]
 8005412:	681b      	ldr	r3, [r3, #0]
 8005414:	f003 0320 	and.w	r3, r3, #32
 8005418:	2b00      	cmp	r3, #0
 800541a:	f000 808b 	beq.w	8005534 <HAL_RCCEx_PeriphCLKConfig+0x350>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800541e:	2300      	movs	r3, #0
 8005420:	60fb      	str	r3, [r7, #12]
 8005422:	4b10      	ldr	r3, [pc, #64]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005424:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005426:	4a0f      	ldr	r2, [pc, #60]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005428:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800542c:	6413      	str	r3, [r2, #64]	; 0x40
 800542e:	4b0d      	ldr	r3, [pc, #52]	; (8005464 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005430:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005432:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005436:	60fb      	str	r3, [r7, #12]
 8005438:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800543a:	4b0c      	ldr	r3, [pc, #48]	; (800546c <HAL_RCCEx_PeriphCLKConfig+0x288>)
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	4a0b      	ldr	r2, [pc, #44]	; (800546c <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8005440:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005444:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8005446:	f7fd fb3f 	bl	8002ac8 <HAL_GetTick>
 800544a:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800544c:	e010      	b.n	8005470 <HAL_RCCEx_PeriphCLKConfig+0x28c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800544e:	f7fd fb3b 	bl	8002ac8 <HAL_GetTick>
 8005452:	4602      	mov	r2, r0
 8005454:	697b      	ldr	r3, [r7, #20]
 8005456:	1ad3      	subs	r3, r2, r3
 8005458:	2b02      	cmp	r3, #2
 800545a:	d909      	bls.n	8005470 <HAL_RCCEx_PeriphCLKConfig+0x28c>
      {
        return HAL_TIMEOUT;
 800545c:	2303      	movs	r3, #3
 800545e:	e075      	b.n	800554c <HAL_RCCEx_PeriphCLKConfig+0x368>
 8005460:	42470068 	.word	0x42470068
 8005464:	40023800 	.word	0x40023800
 8005468:	42470070 	.word	0x42470070
 800546c:	40007000 	.word	0x40007000
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005470:	4b38      	ldr	r3, [pc, #224]	; (8005554 <HAL_RCCEx_PeriphCLKConfig+0x370>)
 8005472:	681b      	ldr	r3, [r3, #0]
 8005474:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005478:	2b00      	cmp	r3, #0
 800547a:	d0e8      	beq.n	800544e <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800547c:	4b36      	ldr	r3, [pc, #216]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800547e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005480:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005484:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005486:	693b      	ldr	r3, [r7, #16]
 8005488:	2b00      	cmp	r3, #0
 800548a:	d02f      	beq.n	80054ec <HAL_RCCEx_PeriphCLKConfig+0x308>
 800548c:	687b      	ldr	r3, [r7, #4]
 800548e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005490:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005494:	693a      	ldr	r2, [r7, #16]
 8005496:	429a      	cmp	r2, r3
 8005498:	d028      	beq.n	80054ec <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800549a:	4b2f      	ldr	r3, [pc, #188]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800549c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800549e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80054a2:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 80054a4:	4b2d      	ldr	r3, [pc, #180]	; (800555c <HAL_RCCEx_PeriphCLKConfig+0x378>)
 80054a6:	2201      	movs	r2, #1
 80054a8:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 80054aa:	4b2c      	ldr	r3, [pc, #176]	; (800555c <HAL_RCCEx_PeriphCLKConfig+0x378>)
 80054ac:	2200      	movs	r2, #0
 80054ae:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 80054b0:	4a29      	ldr	r2, [pc, #164]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80054b2:	693b      	ldr	r3, [r7, #16]
 80054b4:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80054b6:	4b28      	ldr	r3, [pc, #160]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80054b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80054ba:	f003 0301 	and.w	r3, r3, #1
 80054be:	2b01      	cmp	r3, #1
 80054c0:	d114      	bne.n	80054ec <HAL_RCCEx_PeriphCLKConfig+0x308>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 80054c2:	f7fd fb01 	bl	8002ac8 <HAL_GetTick>
 80054c6:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80054c8:	e00a      	b.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80054ca:	f7fd fafd 	bl	8002ac8 <HAL_GetTick>
 80054ce:	4602      	mov	r2, r0
 80054d0:	697b      	ldr	r3, [r7, #20]
 80054d2:	1ad3      	subs	r3, r2, r3
 80054d4:	f241 3288 	movw	r2, #5000	; 0x1388
 80054d8:	4293      	cmp	r3, r2
 80054da:	d901      	bls.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
          {
            return HAL_TIMEOUT;
 80054dc:	2303      	movs	r3, #3
 80054de:	e035      	b.n	800554c <HAL_RCCEx_PeriphCLKConfig+0x368>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80054e0:	4b1d      	ldr	r3, [pc, #116]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80054e2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80054e4:	f003 0302 	and.w	r3, r3, #2
 80054e8:	2b00      	cmp	r3, #0
 80054ea:	d0ee      	beq.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0x2e6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80054f0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80054f4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80054f8:	d10d      	bne.n	8005516 <HAL_RCCEx_PeriphCLKConfig+0x332>
 80054fa:	4b17      	ldr	r3, [pc, #92]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80054fc:	689b      	ldr	r3, [r3, #8]
 80054fe:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005506:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 800550a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800550e:	4912      	ldr	r1, [pc, #72]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005510:	4313      	orrs	r3, r2
 8005512:	608b      	str	r3, [r1, #8]
 8005514:	e005      	b.n	8005522 <HAL_RCCEx_PeriphCLKConfig+0x33e>
 8005516:	4b10      	ldr	r3, [pc, #64]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005518:	689b      	ldr	r3, [r3, #8]
 800551a:	4a0f      	ldr	r2, [pc, #60]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800551c:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8005520:	6093      	str	r3, [r2, #8]
 8005522:	4b0d      	ldr	r3, [pc, #52]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005524:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800552a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800552e:	490a      	ldr	r1, [pc, #40]	; (8005558 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005530:	4313      	orrs	r3, r2
 8005532:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	f003 0310 	and.w	r3, r3, #16
 800553c:	2b00      	cmp	r3, #0
 800553e:	d004      	beq.n	800554a <HAL_RCCEx_PeriphCLKConfig+0x366>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 8005546:	4b06      	ldr	r3, [pc, #24]	; (8005560 <HAL_RCCEx_PeriphCLKConfig+0x37c>)
 8005548:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 800554a:	2300      	movs	r3, #0
}
 800554c:	4618      	mov	r0, r3
 800554e:	3718      	adds	r7, #24
 8005550:	46bd      	mov	sp, r7
 8005552:	bd80      	pop	{r7, pc}
 8005554:	40007000 	.word	0x40007000
 8005558:	40023800 	.word	0x40023800
 800555c:	42470e40 	.word	0x42470e40
 8005560:	424711e0 	.word	0x424711e0

08005564 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8005564:	b580      	push	{r7, lr}
 8005566:	b082      	sub	sp, #8
 8005568:	af00      	add	r7, sp, #0
 800556a:	6078      	str	r0, [r7, #4]
 800556c:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	2b00      	cmp	r3, #0
 8005572:	d101      	bne.n	8005578 <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 8005574:	2301      	movs	r3, #1
 8005576:	e025      	b.n	80055c4 <HAL_SDRAM_Init+0x60>
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800557e:	b2db      	uxtb	r3, r3
 8005580:	2b00      	cmp	r3, #0
 8005582:	d106      	bne.n	8005592 <HAL_SDRAM_Init+0x2e>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	2200      	movs	r2, #0
 8005588:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800558c:	6878      	ldr	r0, [r7, #4]
 800558e:	f7fd f8b7 	bl	8002700 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	2202      	movs	r2, #2
 8005596:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	681a      	ldr	r2, [r3, #0]
 800559e:	687b      	ldr	r3, [r7, #4]
 80055a0:	3304      	adds	r3, #4
 80055a2:	4619      	mov	r1, r3
 80055a4:	4610      	mov	r0, r2
 80055a6:	f002 fac3 	bl	8007b30 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	6818      	ldr	r0, [r3, #0]
 80055ae:	687b      	ldr	r3, [r7, #4]
 80055b0:	685b      	ldr	r3, [r3, #4]
 80055b2:	461a      	mov	r2, r3
 80055b4:	6839      	ldr	r1, [r7, #0]
 80055b6:	f002 fb2e 	bl	8007c16 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	2201      	movs	r2, #1
 80055be:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;
 80055c2:	2300      	movs	r3, #0
}
 80055c4:	4618      	mov	r0, r3
 80055c6:	3708      	adds	r7, #8
 80055c8:	46bd      	mov	sp, r7
 80055ca:	bd80      	pop	{r7, pc}

080055cc <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80055cc:	b580      	push	{r7, lr}
 80055ce:	b084      	sub	sp, #16
 80055d0:	af00      	add	r7, sp, #0
 80055d2:	60f8      	str	r0, [r7, #12]
 80055d4:	60b9      	str	r1, [r7, #8]
 80055d6:	607a      	str	r2, [r7, #4]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80055d8:	68fb      	ldr	r3, [r7, #12]
 80055da:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 80055de:	b2db      	uxtb	r3, r3
 80055e0:	2b02      	cmp	r3, #2
 80055e2:	d101      	bne.n	80055e8 <HAL_SDRAM_SendCommand+0x1c>
  {
    return HAL_BUSY;
 80055e4:	2302      	movs	r3, #2
 80055e6:	e018      	b.n	800561a <HAL_SDRAM_SendCommand+0x4e>
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80055e8:	68fb      	ldr	r3, [r7, #12]
 80055ea:	2202      	movs	r2, #2
 80055ec:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	687a      	ldr	r2, [r7, #4]
 80055f6:	68b9      	ldr	r1, [r7, #8]
 80055f8:	4618      	mov	r0, r3
 80055fa:	f002 fb8b 	bl	8007d14 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80055fe:	68bb      	ldr	r3, [r7, #8]
 8005600:	681b      	ldr	r3, [r3, #0]
 8005602:	2b02      	cmp	r3, #2
 8005604:	d104      	bne.n	8005610 <HAL_SDRAM_SendCommand+0x44>
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	2205      	movs	r2, #5
 800560a:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800560e:	e003      	b.n	8005618 <HAL_SDRAM_SendCommand+0x4c>
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005610:	68fb      	ldr	r3, [r7, #12]
 8005612:	2201      	movs	r2, #1
 8005614:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8005618:	2300      	movs	r3, #0
}
 800561a:	4618      	mov	r0, r3
 800561c:	3710      	adds	r7, #16
 800561e:	46bd      	mov	sp, r7
 8005620:	bd80      	pop	{r7, pc}

08005622 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8005622:	b580      	push	{r7, lr}
 8005624:	b082      	sub	sp, #8
 8005626:	af00      	add	r7, sp, #0
 8005628:	6078      	str	r0, [r7, #4]
 800562a:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800562c:	687b      	ldr	r3, [r7, #4]
 800562e:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8005632:	b2db      	uxtb	r3, r3
 8005634:	2b02      	cmp	r3, #2
 8005636:	d101      	bne.n	800563c <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
 8005638:	2302      	movs	r3, #2
 800563a:	e00e      	b.n	800565a <HAL_SDRAM_ProgramRefreshRate+0x38>
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	2202      	movs	r2, #2
 8005640:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8005644:	687b      	ldr	r3, [r7, #4]
 8005646:	681b      	ldr	r3, [r3, #0]
 8005648:	6839      	ldr	r1, [r7, #0]
 800564a:	4618      	mov	r0, r3
 800564c:	f002 fb9e 	bl	8007d8c <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	2201      	movs	r2, #1
 8005654:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;   
 8005658:	2300      	movs	r3, #0
}
 800565a:	4618      	mov	r0, r3
 800565c:	3708      	adds	r7, #8
 800565e:	46bd      	mov	sp, r7
 8005660:	bd80      	pop	{r7, pc}

08005662 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005662:	b580      	push	{r7, lr}
 8005664:	b082      	sub	sp, #8
 8005666:	af00      	add	r7, sp, #0
 8005668:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800566a:	687b      	ldr	r3, [r7, #4]
 800566c:	2b00      	cmp	r3, #0
 800566e:	d101      	bne.n	8005674 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8005670:	2301      	movs	r3, #1
 8005672:	e056      	b.n	8005722 <HAL_SPI_Init+0xc0>
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	2200      	movs	r2, #0
 8005678:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005680:	b2db      	uxtb	r3, r3
 8005682:	2b00      	cmp	r3, #0
 8005684:	d106      	bne.n	8005694 <HAL_SPI_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	2200      	movs	r2, #0
 800568a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800568e:	6878      	ldr	r0, [r7, #4]
 8005690:	f7fc fe0c 	bl	80022ac <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005694:	687b      	ldr	r3, [r7, #4]
 8005696:	2202      	movs	r2, #2
 8005698:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	681a      	ldr	r2, [r3, #0]
 80056a2:	687b      	ldr	r3, [r7, #4]
 80056a4:	681b      	ldr	r3, [r3, #0]
 80056a6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80056aa:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	685a      	ldr	r2, [r3, #4]
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	689b      	ldr	r3, [r3, #8]
 80056b4:	431a      	orrs	r2, r3
 80056b6:	687b      	ldr	r3, [r7, #4]
 80056b8:	68db      	ldr	r3, [r3, #12]
 80056ba:	431a      	orrs	r2, r3
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	691b      	ldr	r3, [r3, #16]
 80056c0:	431a      	orrs	r2, r3
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	695b      	ldr	r3, [r3, #20]
 80056c6:	431a      	orrs	r2, r3
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	699b      	ldr	r3, [r3, #24]
 80056cc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80056d0:	431a      	orrs	r2, r3
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	69db      	ldr	r3, [r3, #28]
 80056d6:	431a      	orrs	r2, r3
 80056d8:	687b      	ldr	r3, [r7, #4]
 80056da:	6a1b      	ldr	r3, [r3, #32]
 80056dc:	ea42 0103 	orr.w	r1, r2, r3
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	681b      	ldr	r3, [r3, #0]
 80056e8:	430a      	orrs	r2, r1
 80056ea:	601a      	str	r2, [r3, #0]
                                  hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_SSM) |
                                  hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalculation));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	699b      	ldr	r3, [r3, #24]
 80056f0:	0c1b      	lsrs	r3, r3, #16
 80056f2:	f003 0104 	and.w	r1, r3, #4
 80056f6:	687b      	ldr	r3, [r7, #4]
 80056f8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	430a      	orrs	r2, r1
 8005700:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005702:	687b      	ldr	r3, [r7, #4]
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	69da      	ldr	r2, [r3, #28]
 8005708:	687b      	ldr	r3, [r7, #4]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005710:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005712:	687b      	ldr	r3, [r7, #4]
 8005714:	2200      	movs	r2, #0
 8005716:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005718:	687b      	ldr	r3, [r7, #4]
 800571a:	2201      	movs	r2, #1
 800571c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8005720:	2300      	movs	r3, #0
}
 8005722:	4618      	mov	r0, r3
 8005724:	3708      	adds	r7, #8
 8005726:	46bd      	mov	sp, r7
 8005728:	bd80      	pop	{r7, pc}

0800572a <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800572a:	b580      	push	{r7, lr}
 800572c:	b088      	sub	sp, #32
 800572e:	af00      	add	r7, sp, #0
 8005730:	60f8      	str	r0, [r7, #12]
 8005732:	60b9      	str	r1, [r7, #8]
 8005734:	603b      	str	r3, [r7, #0]
 8005736:	4613      	mov	r3, r2
 8005738:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 800573a:	2300      	movs	r3, #0
 800573c:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 800573e:	68fb      	ldr	r3, [r7, #12]
 8005740:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8005744:	2b01      	cmp	r3, #1
 8005746:	d101      	bne.n	800574c <HAL_SPI_Transmit+0x22>
 8005748:	2302      	movs	r3, #2
 800574a:	e11e      	b.n	800598a <HAL_SPI_Transmit+0x260>
 800574c:	68fb      	ldr	r3, [r7, #12]
 800574e:	2201      	movs	r2, #1
 8005750:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005754:	f7fd f9b8 	bl	8002ac8 <HAL_GetTick>
 8005758:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 800575a:	88fb      	ldrh	r3, [r7, #6]
 800575c:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 800575e:	68fb      	ldr	r3, [r7, #12]
 8005760:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005764:	b2db      	uxtb	r3, r3
 8005766:	2b01      	cmp	r3, #1
 8005768:	d002      	beq.n	8005770 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 800576a:	2302      	movs	r3, #2
 800576c:	77fb      	strb	r3, [r7, #31]
    goto error;
 800576e:	e103      	b.n	8005978 <HAL_SPI_Transmit+0x24e>
  }

  if ((pData == NULL) || (Size == 0U))
 8005770:	68bb      	ldr	r3, [r7, #8]
 8005772:	2b00      	cmp	r3, #0
 8005774:	d002      	beq.n	800577c <HAL_SPI_Transmit+0x52>
 8005776:	88fb      	ldrh	r3, [r7, #6]
 8005778:	2b00      	cmp	r3, #0
 800577a:	d102      	bne.n	8005782 <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 800577c:	2301      	movs	r3, #1
 800577e:	77fb      	strb	r3, [r7, #31]
    goto error;
 8005780:	e0fa      	b.n	8005978 <HAL_SPI_Transmit+0x24e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005782:	68fb      	ldr	r3, [r7, #12]
 8005784:	2203      	movs	r2, #3
 8005786:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800578a:	68fb      	ldr	r3, [r7, #12]
 800578c:	2200      	movs	r2, #0
 800578e:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8005790:	68fb      	ldr	r3, [r7, #12]
 8005792:	68ba      	ldr	r2, [r7, #8]
 8005794:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 8005796:	68fb      	ldr	r3, [r7, #12]
 8005798:	88fa      	ldrh	r2, [r7, #6]
 800579a:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 800579c:	68fb      	ldr	r3, [r7, #12]
 800579e:	88fa      	ldrh	r2, [r7, #6]
 80057a0:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80057a2:	68fb      	ldr	r3, [r7, #12]
 80057a4:	2200      	movs	r2, #0
 80057a6:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	2200      	movs	r2, #0
 80057ac:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80057ae:	68fb      	ldr	r3, [r7, #12]
 80057b0:	2200      	movs	r2, #0
 80057b2:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 80057b4:	68fb      	ldr	r3, [r7, #12]
 80057b6:	2200      	movs	r2, #0
 80057b8:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 80057ba:	68fb      	ldr	r3, [r7, #12]
 80057bc:	2200      	movs	r2, #0
 80057be:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80057c0:	68fb      	ldr	r3, [r7, #12]
 80057c2:	689b      	ldr	r3, [r3, #8]
 80057c4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80057c8:	d107      	bne.n	80057da <HAL_SPI_Transmit+0xb0>
  {
    SPI_1LINE_TX(hspi);
 80057ca:	68fb      	ldr	r3, [r7, #12]
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	681a      	ldr	r2, [r3, #0]
 80057d0:	68fb      	ldr	r3, [r7, #12]
 80057d2:	681b      	ldr	r3, [r3, #0]
 80057d4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80057d8:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80057da:	68fb      	ldr	r3, [r7, #12]
 80057dc:	681b      	ldr	r3, [r3, #0]
 80057de:	681b      	ldr	r3, [r3, #0]
 80057e0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80057e4:	2b40      	cmp	r3, #64	; 0x40
 80057e6:	d007      	beq.n	80057f8 <HAL_SPI_Transmit+0xce>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80057e8:	68fb      	ldr	r3, [r7, #12]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	681a      	ldr	r2, [r3, #0]
 80057ee:	68fb      	ldr	r3, [r7, #12]
 80057f0:	681b      	ldr	r3, [r3, #0]
 80057f2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80057f6:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80057f8:	68fb      	ldr	r3, [r7, #12]
 80057fa:	68db      	ldr	r3, [r3, #12]
 80057fc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005800:	d14b      	bne.n	800589a <HAL_SPI_Transmit+0x170>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005802:	68fb      	ldr	r3, [r7, #12]
 8005804:	685b      	ldr	r3, [r3, #4]
 8005806:	2b00      	cmp	r3, #0
 8005808:	d002      	beq.n	8005810 <HAL_SPI_Transmit+0xe6>
 800580a:	8afb      	ldrh	r3, [r7, #22]
 800580c:	2b01      	cmp	r3, #1
 800580e:	d13e      	bne.n	800588e <HAL_SPI_Transmit+0x164>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005810:	68fb      	ldr	r3, [r7, #12]
 8005812:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005814:	881a      	ldrh	r2, [r3, #0]
 8005816:	68fb      	ldr	r3, [r7, #12]
 8005818:	681b      	ldr	r3, [r3, #0]
 800581a:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800581c:	68fb      	ldr	r3, [r7, #12]
 800581e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005820:	1c9a      	adds	r2, r3, #2
 8005822:	68fb      	ldr	r3, [r7, #12]
 8005824:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8005826:	68fb      	ldr	r3, [r7, #12]
 8005828:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800582a:	b29b      	uxth	r3, r3
 800582c:	3b01      	subs	r3, #1
 800582e:	b29a      	uxth	r2, r3
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8005834:	e02b      	b.n	800588e <HAL_SPI_Transmit+0x164>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005836:	68fb      	ldr	r3, [r7, #12]
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	689b      	ldr	r3, [r3, #8]
 800583c:	f003 0302 	and.w	r3, r3, #2
 8005840:	2b02      	cmp	r3, #2
 8005842:	d112      	bne.n	800586a <HAL_SPI_Transmit+0x140>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005844:	68fb      	ldr	r3, [r7, #12]
 8005846:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005848:	881a      	ldrh	r2, [r3, #0]
 800584a:	68fb      	ldr	r3, [r7, #12]
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005850:	68fb      	ldr	r3, [r7, #12]
 8005852:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005854:	1c9a      	adds	r2, r3, #2
 8005856:	68fb      	ldr	r3, [r7, #12]
 8005858:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800585a:	68fb      	ldr	r3, [r7, #12]
 800585c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800585e:	b29b      	uxth	r3, r3
 8005860:	3b01      	subs	r3, #1
 8005862:	b29a      	uxth	r2, r3
 8005864:	68fb      	ldr	r3, [r7, #12]
 8005866:	86da      	strh	r2, [r3, #54]	; 0x36
 8005868:	e011      	b.n	800588e <HAL_SPI_Transmit+0x164>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800586a:	f7fd f92d 	bl	8002ac8 <HAL_GetTick>
 800586e:	4602      	mov	r2, r0
 8005870:	69bb      	ldr	r3, [r7, #24]
 8005872:	1ad3      	subs	r3, r2, r3
 8005874:	683a      	ldr	r2, [r7, #0]
 8005876:	429a      	cmp	r2, r3
 8005878:	d803      	bhi.n	8005882 <HAL_SPI_Transmit+0x158>
 800587a:	683b      	ldr	r3, [r7, #0]
 800587c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005880:	d102      	bne.n	8005888 <HAL_SPI_Transmit+0x15e>
 8005882:	683b      	ldr	r3, [r7, #0]
 8005884:	2b00      	cmp	r3, #0
 8005886:	d102      	bne.n	800588e <HAL_SPI_Transmit+0x164>
        {
          errorcode = HAL_TIMEOUT;
 8005888:	2303      	movs	r3, #3
 800588a:	77fb      	strb	r3, [r7, #31]
          goto error;
 800588c:	e074      	b.n	8005978 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 800588e:	68fb      	ldr	r3, [r7, #12]
 8005890:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005892:	b29b      	uxth	r3, r3
 8005894:	2b00      	cmp	r3, #0
 8005896:	d1ce      	bne.n	8005836 <HAL_SPI_Transmit+0x10c>
 8005898:	e04c      	b.n	8005934 <HAL_SPI_Transmit+0x20a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800589a:	68fb      	ldr	r3, [r7, #12]
 800589c:	685b      	ldr	r3, [r3, #4]
 800589e:	2b00      	cmp	r3, #0
 80058a0:	d002      	beq.n	80058a8 <HAL_SPI_Transmit+0x17e>
 80058a2:	8afb      	ldrh	r3, [r7, #22]
 80058a4:	2b01      	cmp	r3, #1
 80058a6:	d140      	bne.n	800592a <HAL_SPI_Transmit+0x200>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80058a8:	68fb      	ldr	r3, [r7, #12]
 80058aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80058ac:	68fb      	ldr	r3, [r7, #12]
 80058ae:	681b      	ldr	r3, [r3, #0]
 80058b0:	330c      	adds	r3, #12
 80058b2:	7812      	ldrb	r2, [r2, #0]
 80058b4:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80058b6:	68fb      	ldr	r3, [r7, #12]
 80058b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058ba:	1c5a      	adds	r2, r3, #1
 80058bc:	68fb      	ldr	r3, [r7, #12]
 80058be:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 80058c0:	68fb      	ldr	r3, [r7, #12]
 80058c2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80058c4:	b29b      	uxth	r3, r3
 80058c6:	3b01      	subs	r3, #1
 80058c8:	b29a      	uxth	r2, r3
 80058ca:	68fb      	ldr	r3, [r7, #12]
 80058cc:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 80058ce:	e02c      	b.n	800592a <HAL_SPI_Transmit+0x200>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80058d0:	68fb      	ldr	r3, [r7, #12]
 80058d2:	681b      	ldr	r3, [r3, #0]
 80058d4:	689b      	ldr	r3, [r3, #8]
 80058d6:	f003 0302 	and.w	r3, r3, #2
 80058da:	2b02      	cmp	r3, #2
 80058dc:	d113      	bne.n	8005906 <HAL_SPI_Transmit+0x1dc>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80058de:	68fb      	ldr	r3, [r7, #12]
 80058e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80058e2:	68fb      	ldr	r3, [r7, #12]
 80058e4:	681b      	ldr	r3, [r3, #0]
 80058e6:	330c      	adds	r3, #12
 80058e8:	7812      	ldrb	r2, [r2, #0]
 80058ea:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80058ec:	68fb      	ldr	r3, [r7, #12]
 80058ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058f0:	1c5a      	adds	r2, r3, #1
 80058f2:	68fb      	ldr	r3, [r7, #12]
 80058f4:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 80058f6:	68fb      	ldr	r3, [r7, #12]
 80058f8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80058fa:	b29b      	uxth	r3, r3
 80058fc:	3b01      	subs	r3, #1
 80058fe:	b29a      	uxth	r2, r3
 8005900:	68fb      	ldr	r3, [r7, #12]
 8005902:	86da      	strh	r2, [r3, #54]	; 0x36
 8005904:	e011      	b.n	800592a <HAL_SPI_Transmit+0x200>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005906:	f7fd f8df 	bl	8002ac8 <HAL_GetTick>
 800590a:	4602      	mov	r2, r0
 800590c:	69bb      	ldr	r3, [r7, #24]
 800590e:	1ad3      	subs	r3, r2, r3
 8005910:	683a      	ldr	r2, [r7, #0]
 8005912:	429a      	cmp	r2, r3
 8005914:	d803      	bhi.n	800591e <HAL_SPI_Transmit+0x1f4>
 8005916:	683b      	ldr	r3, [r7, #0]
 8005918:	f1b3 3fff 	cmp.w	r3, #4294967295
 800591c:	d102      	bne.n	8005924 <HAL_SPI_Transmit+0x1fa>
 800591e:	683b      	ldr	r3, [r7, #0]
 8005920:	2b00      	cmp	r3, #0
 8005922:	d102      	bne.n	800592a <HAL_SPI_Transmit+0x200>
        {
          errorcode = HAL_TIMEOUT;
 8005924:	2303      	movs	r3, #3
 8005926:	77fb      	strb	r3, [r7, #31]
          goto error;
 8005928:	e026      	b.n	8005978 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800592e:	b29b      	uxth	r3, r3
 8005930:	2b00      	cmp	r3, #0
 8005932:	d1cd      	bne.n	80058d0 <HAL_SPI_Transmit+0x1a6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005934:	69ba      	ldr	r2, [r7, #24]
 8005936:	6839      	ldr	r1, [r7, #0]
 8005938:	68f8      	ldr	r0, [r7, #12]
 800593a:	f000 f895 	bl	8005a68 <SPI_EndRxTxTransaction>
 800593e:	4603      	mov	r3, r0
 8005940:	2b00      	cmp	r3, #0
 8005942:	d002      	beq.n	800594a <HAL_SPI_Transmit+0x220>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005944:	68fb      	ldr	r3, [r7, #12]
 8005946:	2220      	movs	r2, #32
 8005948:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800594a:	68fb      	ldr	r3, [r7, #12]
 800594c:	689b      	ldr	r3, [r3, #8]
 800594e:	2b00      	cmp	r3, #0
 8005950:	d10a      	bne.n	8005968 <HAL_SPI_Transmit+0x23e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005952:	2300      	movs	r3, #0
 8005954:	613b      	str	r3, [r7, #16]
 8005956:	68fb      	ldr	r3, [r7, #12]
 8005958:	681b      	ldr	r3, [r3, #0]
 800595a:	68db      	ldr	r3, [r3, #12]
 800595c:	613b      	str	r3, [r7, #16]
 800595e:	68fb      	ldr	r3, [r7, #12]
 8005960:	681b      	ldr	r3, [r3, #0]
 8005962:	689b      	ldr	r3, [r3, #8]
 8005964:	613b      	str	r3, [r7, #16]
 8005966:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005968:	68fb      	ldr	r3, [r7, #12]
 800596a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800596c:	2b00      	cmp	r3, #0
 800596e:	d002      	beq.n	8005976 <HAL_SPI_Transmit+0x24c>
  {
    errorcode = HAL_ERROR;
 8005970:	2301      	movs	r3, #1
 8005972:	77fb      	strb	r3, [r7, #31]
 8005974:	e000      	b.n	8005978 <HAL_SPI_Transmit+0x24e>
  }

error:
 8005976:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8005978:	68fb      	ldr	r3, [r7, #12]
 800597a:	2201      	movs	r2, #1
 800597c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8005980:	68fb      	ldr	r3, [r7, #12]
 8005982:	2200      	movs	r2, #0
 8005984:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8005988:	7ffb      	ldrb	r3, [r7, #31]
}
 800598a:	4618      	mov	r0, r3
 800598c:	3720      	adds	r7, #32
 800598e:	46bd      	mov	sp, r7
 8005990:	bd80      	pop	{r7, pc}

08005992 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8005992:	b580      	push	{r7, lr}
 8005994:	b084      	sub	sp, #16
 8005996:	af00      	add	r7, sp, #0
 8005998:	60f8      	str	r0, [r7, #12]
 800599a:	60b9      	str	r1, [r7, #8]
 800599c:	603b      	str	r3, [r7, #0]
 800599e:	4613      	mov	r3, r2
 80059a0:	71fb      	strb	r3, [r7, #7]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80059a2:	e04c      	b.n	8005a3e <SPI_WaitFlagStateUntilTimeout+0xac>
  {
    if (Timeout != HAL_MAX_DELAY)
 80059a4:	683b      	ldr	r3, [r7, #0]
 80059a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80059aa:	d048      	beq.n	8005a3e <SPI_WaitFlagStateUntilTimeout+0xac>
    {
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 80059ac:	f7fd f88c 	bl	8002ac8 <HAL_GetTick>
 80059b0:	4602      	mov	r2, r0
 80059b2:	69bb      	ldr	r3, [r7, #24]
 80059b4:	1ad3      	subs	r3, r2, r3
 80059b6:	683a      	ldr	r2, [r7, #0]
 80059b8:	429a      	cmp	r2, r3
 80059ba:	d902      	bls.n	80059c2 <SPI_WaitFlagStateUntilTimeout+0x30>
 80059bc:	683b      	ldr	r3, [r7, #0]
 80059be:	2b00      	cmp	r3, #0
 80059c0:	d13d      	bne.n	8005a3e <SPI_WaitFlagStateUntilTimeout+0xac>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
        on both master and slave sides in order to resynchronize the master
        and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80059c2:	68fb      	ldr	r3, [r7, #12]
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	685a      	ldr	r2, [r3, #4]
 80059c8:	68fb      	ldr	r3, [r7, #12]
 80059ca:	681b      	ldr	r3, [r3, #0]
 80059cc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80059d0:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80059d2:	68fb      	ldr	r3, [r7, #12]
 80059d4:	685b      	ldr	r3, [r3, #4]
 80059d6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80059da:	d111      	bne.n	8005a00 <SPI_WaitFlagStateUntilTimeout+0x6e>
 80059dc:	68fb      	ldr	r3, [r7, #12]
 80059de:	689b      	ldr	r3, [r3, #8]
 80059e0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80059e4:	d004      	beq.n	80059f0 <SPI_WaitFlagStateUntilTimeout+0x5e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80059e6:	68fb      	ldr	r3, [r7, #12]
 80059e8:	689b      	ldr	r3, [r3, #8]
 80059ea:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80059ee:	d107      	bne.n	8005a00 <SPI_WaitFlagStateUntilTimeout+0x6e>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 80059f0:	68fb      	ldr	r3, [r7, #12]
 80059f2:	681b      	ldr	r3, [r3, #0]
 80059f4:	681a      	ldr	r2, [r3, #0]
 80059f6:	68fb      	ldr	r3, [r7, #12]
 80059f8:	681b      	ldr	r3, [r3, #0]
 80059fa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80059fe:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005a00:	68fb      	ldr	r3, [r7, #12]
 8005a02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005a04:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005a08:	d10f      	bne.n	8005a2a <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          SPI_RESET_CRC(hspi);
 8005a0a:	68fb      	ldr	r3, [r7, #12]
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	681a      	ldr	r2, [r3, #0]
 8005a10:	68fb      	ldr	r3, [r7, #12]
 8005a12:	681b      	ldr	r3, [r3, #0]
 8005a14:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005a18:	601a      	str	r2, [r3, #0]
 8005a1a:	68fb      	ldr	r3, [r7, #12]
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	681a      	ldr	r2, [r3, #0]
 8005a20:	68fb      	ldr	r3, [r7, #12]
 8005a22:	681b      	ldr	r3, [r3, #0]
 8005a24:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005a28:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8005a2a:	68fb      	ldr	r3, [r7, #12]
 8005a2c:	2201      	movs	r2, #1
 8005a2e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8005a32:	68fb      	ldr	r3, [r7, #12]
 8005a34:	2200      	movs	r2, #0
 8005a36:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8005a3a:	2303      	movs	r3, #3
 8005a3c:	e00f      	b.n	8005a5e <SPI_WaitFlagStateUntilTimeout+0xcc>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005a3e:	68fb      	ldr	r3, [r7, #12]
 8005a40:	681b      	ldr	r3, [r3, #0]
 8005a42:	689a      	ldr	r2, [r3, #8]
 8005a44:	68bb      	ldr	r3, [r7, #8]
 8005a46:	4013      	ands	r3, r2
 8005a48:	68ba      	ldr	r2, [r7, #8]
 8005a4a:	429a      	cmp	r2, r3
 8005a4c:	bf0c      	ite	eq
 8005a4e:	2301      	moveq	r3, #1
 8005a50:	2300      	movne	r3, #0
 8005a52:	b2db      	uxtb	r3, r3
 8005a54:	461a      	mov	r2, r3
 8005a56:	79fb      	ldrb	r3, [r7, #7]
 8005a58:	429a      	cmp	r2, r3
 8005a5a:	d1a3      	bne.n	80059a4 <SPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }

  return HAL_OK;
 8005a5c:	2300      	movs	r3, #0
}
 8005a5e:	4618      	mov	r0, r3
 8005a60:	3710      	adds	r7, #16
 8005a62:	46bd      	mov	sp, r7
 8005a64:	bd80      	pop	{r7, pc}
	...

08005a68 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005a68:	b580      	push	{r7, lr}
 8005a6a:	b088      	sub	sp, #32
 8005a6c:	af02      	add	r7, sp, #8
 8005a6e:	60f8      	str	r0, [r7, #12]
 8005a70:	60b9      	str	r1, [r7, #8]
 8005a72:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005a74:	4b1b      	ldr	r3, [pc, #108]	; (8005ae4 <SPI_EndRxTxTransaction+0x7c>)
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	4a1b      	ldr	r2, [pc, #108]	; (8005ae8 <SPI_EndRxTxTransaction+0x80>)
 8005a7a:	fba2 2303 	umull	r2, r3, r2, r3
 8005a7e:	0d5b      	lsrs	r3, r3, #21
 8005a80:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005a84:	fb02 f303 	mul.w	r3, r2, r3
 8005a88:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005a8a:	68fb      	ldr	r3, [r7, #12]
 8005a8c:	685b      	ldr	r3, [r3, #4]
 8005a8e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005a92:	d112      	bne.n	8005aba <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	9300      	str	r3, [sp, #0]
 8005a98:	68bb      	ldr	r3, [r7, #8]
 8005a9a:	2200      	movs	r2, #0
 8005a9c:	2180      	movs	r1, #128	; 0x80
 8005a9e:	68f8      	ldr	r0, [r7, #12]
 8005aa0:	f7ff ff77 	bl	8005992 <SPI_WaitFlagStateUntilTimeout>
 8005aa4:	4603      	mov	r3, r0
 8005aa6:	2b00      	cmp	r3, #0
 8005aa8:	d016      	beq.n	8005ad8 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005aaa:	68fb      	ldr	r3, [r7, #12]
 8005aac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005aae:	f043 0220 	orr.w	r2, r3, #32
 8005ab2:	68fb      	ldr	r3, [r7, #12]
 8005ab4:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8005ab6:	2303      	movs	r3, #3
 8005ab8:	e00f      	b.n	8005ada <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8005aba:	697b      	ldr	r3, [r7, #20]
 8005abc:	2b00      	cmp	r3, #0
 8005abe:	d00a      	beq.n	8005ad6 <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8005ac0:	697b      	ldr	r3, [r7, #20]
 8005ac2:	3b01      	subs	r3, #1
 8005ac4:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005ac6:	68fb      	ldr	r3, [r7, #12]
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	689b      	ldr	r3, [r3, #8]
 8005acc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005ad0:	2b80      	cmp	r3, #128	; 0x80
 8005ad2:	d0f2      	beq.n	8005aba <SPI_EndRxTxTransaction+0x52>
 8005ad4:	e000      	b.n	8005ad8 <SPI_EndRxTxTransaction+0x70>
        break;
 8005ad6:	bf00      	nop
  }

  return HAL_OK;
 8005ad8:	2300      	movs	r3, #0
}
 8005ada:	4618      	mov	r0, r3
 8005adc:	3718      	adds	r7, #24
 8005ade:	46bd      	mov	sp, r7
 8005ae0:	bd80      	pop	{r7, pc}
 8005ae2:	bf00      	nop
 8005ae4:	20000004 	.word	0x20000004
 8005ae8:	165e9f81 	.word	0x165e9f81

08005aec <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8005aec:	b580      	push	{r7, lr}
 8005aee:	b082      	sub	sp, #8
 8005af0:	af00      	add	r7, sp, #0
 8005af2:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8005af4:	687b      	ldr	r3, [r7, #4]
 8005af6:	2b00      	cmp	r3, #0
 8005af8:	d101      	bne.n	8005afe <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8005afa:	2301      	movs	r3, #1
 8005afc:	e01d      	b.n	8005b3a <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005afe:	687b      	ldr	r3, [r7, #4]
 8005b00:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005b04:	b2db      	uxtb	r3, r3
 8005b06:	2b00      	cmp	r3, #0
 8005b08:	d106      	bne.n	8005b18 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	2200      	movs	r2, #0
 8005b0e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8005b12:	6878      	ldr	r0, [r7, #4]
 8005b14:	f7fc fc12 	bl	800233c <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005b18:	687b      	ldr	r3, [r7, #4]
 8005b1a:	2202      	movs	r2, #2
 8005b1c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005b20:	687b      	ldr	r3, [r7, #4]
 8005b22:	681a      	ldr	r2, [r3, #0]
 8005b24:	687b      	ldr	r3, [r7, #4]
 8005b26:	3304      	adds	r3, #4
 8005b28:	4619      	mov	r1, r3
 8005b2a:	4610      	mov	r0, r2
 8005b2c:	f000 fc92 	bl	8006454 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	2201      	movs	r2, #1
 8005b34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005b38:	2300      	movs	r3, #0
}
 8005b3a:	4618      	mov	r0, r3
 8005b3c:	3708      	adds	r7, #8
 8005b3e:	46bd      	mov	sp, r7
 8005b40:	bd80      	pop	{r7, pc}

08005b42 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8005b42:	b480      	push	{r7}
 8005b44:	b085      	sub	sp, #20
 8005b46:	af00      	add	r7, sp, #0
 8005b48:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8005b4a:	687b      	ldr	r3, [r7, #4]
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	68da      	ldr	r2, [r3, #12]
 8005b50:	687b      	ldr	r3, [r7, #4]
 8005b52:	681b      	ldr	r3, [r3, #0]
 8005b54:	f042 0201 	orr.w	r2, r2, #1
 8005b58:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	681b      	ldr	r3, [r3, #0]
 8005b5e:	689b      	ldr	r3, [r3, #8]
 8005b60:	f003 0307 	and.w	r3, r3, #7
 8005b64:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005b66:	68fb      	ldr	r3, [r7, #12]
 8005b68:	2b06      	cmp	r3, #6
 8005b6a:	d007      	beq.n	8005b7c <HAL_TIM_Base_Start_IT+0x3a>
  {
    __HAL_TIM_ENABLE(htim);
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	681b      	ldr	r3, [r3, #0]
 8005b70:	681a      	ldr	r2, [r3, #0]
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	f042 0201 	orr.w	r2, r2, #1
 8005b7a:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005b7c:	2300      	movs	r3, #0
}
 8005b7e:	4618      	mov	r0, r3
 8005b80:	3714      	adds	r7, #20
 8005b82:	46bd      	mov	sp, r7
 8005b84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b88:	4770      	bx	lr

08005b8a <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8005b8a:	b580      	push	{r7, lr}
 8005b8c:	b082      	sub	sp, #8
 8005b8e:	af00      	add	r7, sp, #0
 8005b90:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8005b92:	687b      	ldr	r3, [r7, #4]
 8005b94:	2b00      	cmp	r3, #0
 8005b96:	d101      	bne.n	8005b9c <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8005b98:	2301      	movs	r3, #1
 8005b9a:	e01d      	b.n	8005bd8 <HAL_TIM_PWM_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005ba2:	b2db      	uxtb	r3, r3
 8005ba4:	2b00      	cmp	r3, #0
 8005ba6:	d106      	bne.n	8005bb6 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	2200      	movs	r2, #0
 8005bac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8005bb0:	6878      	ldr	r0, [r7, #4]
 8005bb2:	f000 f815 	bl	8005be0 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005bb6:	687b      	ldr	r3, [r7, #4]
 8005bb8:	2202      	movs	r2, #2
 8005bba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005bbe:	687b      	ldr	r3, [r7, #4]
 8005bc0:	681a      	ldr	r2, [r3, #0]
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	3304      	adds	r3, #4
 8005bc6:	4619      	mov	r1, r3
 8005bc8:	4610      	mov	r0, r2
 8005bca:	f000 fc43 	bl	8006454 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005bce:	687b      	ldr	r3, [r7, #4]
 8005bd0:	2201      	movs	r2, #1
 8005bd2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005bd6:	2300      	movs	r3, #0
}
 8005bd8:	4618      	mov	r0, r3
 8005bda:	3708      	adds	r7, #8
 8005bdc:	46bd      	mov	sp, r7
 8005bde:	bd80      	pop	{r7, pc}

08005be0 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8005be0:	b480      	push	{r7}
 8005be2:	b083      	sub	sp, #12
 8005be4:	af00      	add	r7, sp, #0
 8005be6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8005be8:	bf00      	nop
 8005bea:	370c      	adds	r7, #12
 8005bec:	46bd      	mov	sp, r7
 8005bee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bf2:	4770      	bx	lr

08005bf4 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8005bf4:	b580      	push	{r7, lr}
 8005bf6:	b084      	sub	sp, #16
 8005bf8:	af00      	add	r7, sp, #0
 8005bfa:	6078      	str	r0, [r7, #4]
 8005bfc:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	2201      	movs	r2, #1
 8005c04:	6839      	ldr	r1, [r7, #0]
 8005c06:	4618      	mov	r0, r3
 8005c08:	f001 f838 	bl	8006c7c <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	4a15      	ldr	r2, [pc, #84]	; (8005c68 <HAL_TIM_PWM_Start+0x74>)
 8005c12:	4293      	cmp	r3, r2
 8005c14:	d004      	beq.n	8005c20 <HAL_TIM_PWM_Start+0x2c>
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	4a14      	ldr	r2, [pc, #80]	; (8005c6c <HAL_TIM_PWM_Start+0x78>)
 8005c1c:	4293      	cmp	r3, r2
 8005c1e:	d101      	bne.n	8005c24 <HAL_TIM_PWM_Start+0x30>
 8005c20:	2301      	movs	r3, #1
 8005c22:	e000      	b.n	8005c26 <HAL_TIM_PWM_Start+0x32>
 8005c24:	2300      	movs	r3, #0
 8005c26:	2b00      	cmp	r3, #0
 8005c28:	d007      	beq.n	8005c3a <HAL_TIM_PWM_Start+0x46>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 8005c2a:	687b      	ldr	r3, [r7, #4]
 8005c2c:	681b      	ldr	r3, [r3, #0]
 8005c2e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005c38:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005c3a:	687b      	ldr	r3, [r7, #4]
 8005c3c:	681b      	ldr	r3, [r3, #0]
 8005c3e:	689b      	ldr	r3, [r3, #8]
 8005c40:	f003 0307 	and.w	r3, r3, #7
 8005c44:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005c46:	68fb      	ldr	r3, [r7, #12]
 8005c48:	2b06      	cmp	r3, #6
 8005c4a:	d007      	beq.n	8005c5c <HAL_TIM_PWM_Start+0x68>
  {
    __HAL_TIM_ENABLE(htim);
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	681b      	ldr	r3, [r3, #0]
 8005c50:	681a      	ldr	r2, [r3, #0]
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	681b      	ldr	r3, [r3, #0]
 8005c56:	f042 0201 	orr.w	r2, r2, #1
 8005c5a:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005c5c:	2300      	movs	r3, #0
}
 8005c5e:	4618      	mov	r0, r3
 8005c60:	3710      	adds	r7, #16
 8005c62:	46bd      	mov	sp, r7
 8005c64:	bd80      	pop	{r7, pc}
 8005c66:	bf00      	nop
 8005c68:	40010000 	.word	0x40010000
 8005c6c:	40010400 	.word	0x40010400

08005c70 <HAL_TIM_IC_Init>:
  *         Ex: call @ref HAL_TIM_IC_DeInit() before HAL_TIM_IC_Init()
  * @param  htim TIM Input Capture handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_Init(TIM_HandleTypeDef *htim)
{
 8005c70:	b580      	push	{r7, lr}
 8005c72:	b082      	sub	sp, #8
 8005c74:	af00      	add	r7, sp, #0
 8005c76:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	2b00      	cmp	r3, #0
 8005c7c:	d101      	bne.n	8005c82 <HAL_TIM_IC_Init+0x12>
  {
    return HAL_ERROR;
 8005c7e:	2301      	movs	r3, #1
 8005c80:	e01d      	b.n	8005cbe <HAL_TIM_IC_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005c88:	b2db      	uxtb	r3, r3
 8005c8a:	2b00      	cmp	r3, #0
 8005c8c:	d106      	bne.n	8005c9c <HAL_TIM_IC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005c8e:	687b      	ldr	r3, [r7, #4]
 8005c90:	2200      	movs	r2, #0
 8005c92:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->IC_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_IC_MspInit(htim);
 8005c96:	6878      	ldr	r0, [r7, #4]
 8005c98:	f000 f815 	bl	8005cc6 <HAL_TIM_IC_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	2202      	movs	r2, #2
 8005ca0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the input capture */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005ca4:	687b      	ldr	r3, [r7, #4]
 8005ca6:	681a      	ldr	r2, [r3, #0]
 8005ca8:	687b      	ldr	r3, [r7, #4]
 8005caa:	3304      	adds	r3, #4
 8005cac:	4619      	mov	r1, r3
 8005cae:	4610      	mov	r0, r2
 8005cb0:	f000 fbd0 	bl	8006454 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	2201      	movs	r2, #1
 8005cb8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005cbc:	2300      	movs	r3, #0
}
 8005cbe:	4618      	mov	r0, r3
 8005cc0:	3708      	adds	r7, #8
 8005cc2:	46bd      	mov	sp, r7
 8005cc4:	bd80      	pop	{r7, pc}

08005cc6 <HAL_TIM_IC_MspInit>:
  * @brief  Initializes the TIM Input Capture MSP.
  * @param  htim TIM Input Capture handle
  * @retval None
  */
__weak void HAL_TIM_IC_MspInit(TIM_HandleTypeDef *htim)
{
 8005cc6:	b480      	push	{r7}
 8005cc8:	b083      	sub	sp, #12
 8005cca:	af00      	add	r7, sp, #0
 8005ccc:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_MspInit could be implemented in the user file
   */
}
 8005cce:	bf00      	nop
 8005cd0:	370c      	adds	r7, #12
 8005cd2:	46bd      	mov	sp, r7
 8005cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cd8:	4770      	bx	lr

08005cda <HAL_TIM_IC_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8005cda:	b580      	push	{r7, lr}
 8005cdc:	b084      	sub	sp, #16
 8005cde:	af00      	add	r7, sp, #0
 8005ce0:	6078      	str	r0, [r7, #4]
 8005ce2:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Input Capture channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	681b      	ldr	r3, [r3, #0]
 8005ce8:	2201      	movs	r2, #1
 8005cea:	6839      	ldr	r1, [r7, #0]
 8005cec:	4618      	mov	r0, r3
 8005cee:	f000 ffc5 	bl	8006c7c <TIM_CCxChannelCmd>

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005cf2:	687b      	ldr	r3, [r7, #4]
 8005cf4:	681b      	ldr	r3, [r3, #0]
 8005cf6:	689b      	ldr	r3, [r3, #8]
 8005cf8:	f003 0307 	and.w	r3, r3, #7
 8005cfc:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005cfe:	68fb      	ldr	r3, [r7, #12]
 8005d00:	2b06      	cmp	r3, #6
 8005d02:	d007      	beq.n	8005d14 <HAL_TIM_IC_Start+0x3a>
  {
    __HAL_TIM_ENABLE(htim);
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	681b      	ldr	r3, [r3, #0]
 8005d08:	681a      	ldr	r2, [r3, #0]
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	681b      	ldr	r3, [r3, #0]
 8005d0e:	f042 0201 	orr.w	r2, r2, #1
 8005d12:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005d14:	2300      	movs	r3, #0
}
 8005d16:	4618      	mov	r0, r3
 8005d18:	3710      	adds	r7, #16
 8005d1a:	46bd      	mov	sp, r7
 8005d1c:	bd80      	pop	{r7, pc}

08005d1e <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8005d1e:	b580      	push	{r7, lr}
 8005d20:	b082      	sub	sp, #8
 8005d22:	af00      	add	r7, sp, #0
 8005d24:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	691b      	ldr	r3, [r3, #16]
 8005d2c:	f003 0302 	and.w	r3, r3, #2
 8005d30:	2b02      	cmp	r3, #2
 8005d32:	d122      	bne.n	8005d7a <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	68db      	ldr	r3, [r3, #12]
 8005d3a:	f003 0302 	and.w	r3, r3, #2
 8005d3e:	2b02      	cmp	r3, #2
 8005d40:	d11b      	bne.n	8005d7a <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8005d42:	687b      	ldr	r3, [r7, #4]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	f06f 0202 	mvn.w	r2, #2
 8005d4a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	2201      	movs	r2, #1
 8005d50:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	699b      	ldr	r3, [r3, #24]
 8005d58:	f003 0303 	and.w	r3, r3, #3
 8005d5c:	2b00      	cmp	r3, #0
 8005d5e:	d003      	beq.n	8005d68 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8005d60:	6878      	ldr	r0, [r7, #4]
 8005d62:	f000 fb59 	bl	8006418 <HAL_TIM_IC_CaptureCallback>
 8005d66:	e005      	b.n	8005d74 <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8005d68:	6878      	ldr	r0, [r7, #4]
 8005d6a:	f000 fb4b 	bl	8006404 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005d6e:	6878      	ldr	r0, [r7, #4]
 8005d70:	f000 fb5c 	bl	800642c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	2200      	movs	r2, #0
 8005d78:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	681b      	ldr	r3, [r3, #0]
 8005d7e:	691b      	ldr	r3, [r3, #16]
 8005d80:	f003 0304 	and.w	r3, r3, #4
 8005d84:	2b04      	cmp	r3, #4
 8005d86:	d122      	bne.n	8005dce <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	681b      	ldr	r3, [r3, #0]
 8005d8c:	68db      	ldr	r3, [r3, #12]
 8005d8e:	f003 0304 	and.w	r3, r3, #4
 8005d92:	2b04      	cmp	r3, #4
 8005d94:	d11b      	bne.n	8005dce <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	f06f 0204 	mvn.w	r2, #4
 8005d9e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8005da0:	687b      	ldr	r3, [r7, #4]
 8005da2:	2202      	movs	r2, #2
 8005da4:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005da6:	687b      	ldr	r3, [r7, #4]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	699b      	ldr	r3, [r3, #24]
 8005dac:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005db0:	2b00      	cmp	r3, #0
 8005db2:	d003      	beq.n	8005dbc <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005db4:	6878      	ldr	r0, [r7, #4]
 8005db6:	f000 fb2f 	bl	8006418 <HAL_TIM_IC_CaptureCallback>
 8005dba:	e005      	b.n	8005dc8 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005dbc:	6878      	ldr	r0, [r7, #4]
 8005dbe:	f000 fb21 	bl	8006404 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005dc2:	6878      	ldr	r0, [r7, #4]
 8005dc4:	f000 fb32 	bl	800642c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005dc8:	687b      	ldr	r3, [r7, #4]
 8005dca:	2200      	movs	r2, #0
 8005dcc:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8005dce:	687b      	ldr	r3, [r7, #4]
 8005dd0:	681b      	ldr	r3, [r3, #0]
 8005dd2:	691b      	ldr	r3, [r3, #16]
 8005dd4:	f003 0308 	and.w	r3, r3, #8
 8005dd8:	2b08      	cmp	r3, #8
 8005dda:	d122      	bne.n	8005e22 <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	681b      	ldr	r3, [r3, #0]
 8005de0:	68db      	ldr	r3, [r3, #12]
 8005de2:	f003 0308 	and.w	r3, r3, #8
 8005de6:	2b08      	cmp	r3, #8
 8005de8:	d11b      	bne.n	8005e22 <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8005dea:	687b      	ldr	r3, [r7, #4]
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	f06f 0208 	mvn.w	r2, #8
 8005df2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8005df4:	687b      	ldr	r3, [r7, #4]
 8005df6:	2204      	movs	r2, #4
 8005df8:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	681b      	ldr	r3, [r3, #0]
 8005dfe:	69db      	ldr	r3, [r3, #28]
 8005e00:	f003 0303 	and.w	r3, r3, #3
 8005e04:	2b00      	cmp	r3, #0
 8005e06:	d003      	beq.n	8005e10 <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005e08:	6878      	ldr	r0, [r7, #4]
 8005e0a:	f000 fb05 	bl	8006418 <HAL_TIM_IC_CaptureCallback>
 8005e0e:	e005      	b.n	8005e1c <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005e10:	6878      	ldr	r0, [r7, #4]
 8005e12:	f000 faf7 	bl	8006404 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005e16:	6878      	ldr	r0, [r7, #4]
 8005e18:	f000 fb08 	bl	800642c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	2200      	movs	r2, #0
 8005e20:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	681b      	ldr	r3, [r3, #0]
 8005e26:	691b      	ldr	r3, [r3, #16]
 8005e28:	f003 0310 	and.w	r3, r3, #16
 8005e2c:	2b10      	cmp	r3, #16
 8005e2e:	d122      	bne.n	8005e76 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	68db      	ldr	r3, [r3, #12]
 8005e36:	f003 0310 	and.w	r3, r3, #16
 8005e3a:	2b10      	cmp	r3, #16
 8005e3c:	d11b      	bne.n	8005e76 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	681b      	ldr	r3, [r3, #0]
 8005e42:	f06f 0210 	mvn.w	r2, #16
 8005e46:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	2208      	movs	r2, #8
 8005e4c:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8005e4e:	687b      	ldr	r3, [r7, #4]
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	69db      	ldr	r3, [r3, #28]
 8005e54:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005e58:	2b00      	cmp	r3, #0
 8005e5a:	d003      	beq.n	8005e64 <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005e5c:	6878      	ldr	r0, [r7, #4]
 8005e5e:	f000 fadb 	bl	8006418 <HAL_TIM_IC_CaptureCallback>
 8005e62:	e005      	b.n	8005e70 <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005e64:	6878      	ldr	r0, [r7, #4]
 8005e66:	f000 facd 	bl	8006404 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005e6a:	6878      	ldr	r0, [r7, #4]
 8005e6c:	f000 fade 	bl	800642c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	2200      	movs	r2, #0
 8005e74:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8005e76:	687b      	ldr	r3, [r7, #4]
 8005e78:	681b      	ldr	r3, [r3, #0]
 8005e7a:	691b      	ldr	r3, [r3, #16]
 8005e7c:	f003 0301 	and.w	r3, r3, #1
 8005e80:	2b01      	cmp	r3, #1
 8005e82:	d10e      	bne.n	8005ea2 <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	68db      	ldr	r3, [r3, #12]
 8005e8a:	f003 0301 	and.w	r3, r3, #1
 8005e8e:	2b01      	cmp	r3, #1
 8005e90:	d107      	bne.n	8005ea2 <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8005e92:	687b      	ldr	r3, [r7, #4]
 8005e94:	681b      	ldr	r3, [r3, #0]
 8005e96:	f06f 0201 	mvn.w	r2, #1
 8005e9a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8005e9c:	6878      	ldr	r0, [r7, #4]
 8005e9e:	f7fc f805 	bl	8001eac <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	681b      	ldr	r3, [r3, #0]
 8005ea6:	691b      	ldr	r3, [r3, #16]
 8005ea8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005eac:	2b80      	cmp	r3, #128	; 0x80
 8005eae:	d10e      	bne.n	8005ece <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	681b      	ldr	r3, [r3, #0]
 8005eb4:	68db      	ldr	r3, [r3, #12]
 8005eb6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005eba:	2b80      	cmp	r3, #128	; 0x80
 8005ebc:	d107      	bne.n	8005ece <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8005ec6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8005ec8:	6878      	ldr	r0, [r7, #4]
 8005eca:	f000 ff83 	bl	8006dd4 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8005ece:	687b      	ldr	r3, [r7, #4]
 8005ed0:	681b      	ldr	r3, [r3, #0]
 8005ed2:	691b      	ldr	r3, [r3, #16]
 8005ed4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005ed8:	2b40      	cmp	r3, #64	; 0x40
 8005eda:	d10e      	bne.n	8005efa <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	68db      	ldr	r3, [r3, #12]
 8005ee2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005ee6:	2b40      	cmp	r3, #64	; 0x40
 8005ee8:	d107      	bne.n	8005efa <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8005eea:	687b      	ldr	r3, [r7, #4]
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8005ef2:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8005ef4:	6878      	ldr	r0, [r7, #4]
 8005ef6:	f000 faa3 	bl	8006440 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8005efa:	687b      	ldr	r3, [r7, #4]
 8005efc:	681b      	ldr	r3, [r3, #0]
 8005efe:	691b      	ldr	r3, [r3, #16]
 8005f00:	f003 0320 	and.w	r3, r3, #32
 8005f04:	2b20      	cmp	r3, #32
 8005f06:	d10e      	bne.n	8005f26 <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	681b      	ldr	r3, [r3, #0]
 8005f0c:	68db      	ldr	r3, [r3, #12]
 8005f0e:	f003 0320 	and.w	r3, r3, #32
 8005f12:	2b20      	cmp	r3, #32
 8005f14:	d107      	bne.n	8005f26 <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	f06f 0220 	mvn.w	r2, #32
 8005f1e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8005f20:	6878      	ldr	r0, [r7, #4]
 8005f22:	f000 ff4d 	bl	8006dc0 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8005f26:	bf00      	nop
 8005f28:	3708      	adds	r7, #8
 8005f2a:	46bd      	mov	sp, r7
 8005f2c:	bd80      	pop	{r7, pc}

08005f2e <HAL_TIM_IC_ConfigChannel>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_IC_InitTypeDef *sConfig, uint32_t Channel)
{
 8005f2e:	b580      	push	{r7, lr}
 8005f30:	b084      	sub	sp, #16
 8005f32:	af00      	add	r7, sp, #0
 8005f34:	60f8      	str	r0, [r7, #12]
 8005f36:	60b9      	str	r1, [r7, #8]
 8005f38:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_IC_SELECTION(sConfig->ICSelection));
  assert_param(IS_TIM_IC_PRESCALER(sConfig->ICPrescaler));
  assert_param(IS_TIM_IC_FILTER(sConfig->ICFilter));

  /* Process Locked */
  __HAL_LOCK(htim);
 8005f3a:	68fb      	ldr	r3, [r7, #12]
 8005f3c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005f40:	2b01      	cmp	r3, #1
 8005f42:	d101      	bne.n	8005f48 <HAL_TIM_IC_ConfigChannel+0x1a>
 8005f44:	2302      	movs	r3, #2
 8005f46:	e08a      	b.n	800605e <HAL_TIM_IC_ConfigChannel+0x130>
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	2201      	movs	r2, #1
 8005f4c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8005f50:	68fb      	ldr	r3, [r7, #12]
 8005f52:	2202      	movs	r2, #2
 8005f54:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  if (Channel == TIM_CHANNEL_1)
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	2b00      	cmp	r3, #0
 8005f5c:	d11b      	bne.n	8005f96 <HAL_TIM_IC_ConfigChannel+0x68>
  {
    /* TI1 Configuration */
    TIM_TI1_SetConfig(htim->Instance,
 8005f5e:	68fb      	ldr	r3, [r7, #12]
 8005f60:	6818      	ldr	r0, [r3, #0]
 8005f62:	68bb      	ldr	r3, [r7, #8]
 8005f64:	6819      	ldr	r1, [r3, #0]
 8005f66:	68bb      	ldr	r3, [r7, #8]
 8005f68:	685a      	ldr	r2, [r3, #4]
 8005f6a:	68bb      	ldr	r3, [r7, #8]
 8005f6c:	68db      	ldr	r3, [r3, #12]
 8005f6e:	f000 fcc1 	bl	80068f4 <TIM_TI1_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC1PSC Bits */
    htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 8005f72:	68fb      	ldr	r3, [r7, #12]
 8005f74:	681b      	ldr	r3, [r3, #0]
 8005f76:	699a      	ldr	r2, [r3, #24]
 8005f78:	68fb      	ldr	r3, [r7, #12]
 8005f7a:	681b      	ldr	r3, [r3, #0]
 8005f7c:	f022 020c 	bic.w	r2, r2, #12
 8005f80:	619a      	str	r2, [r3, #24]

    /* Set the IC1PSC value */
    htim->Instance->CCMR1 |= sConfig->ICPrescaler;
 8005f82:	68fb      	ldr	r3, [r7, #12]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	6999      	ldr	r1, [r3, #24]
 8005f88:	68bb      	ldr	r3, [r7, #8]
 8005f8a:	689a      	ldr	r2, [r3, #8]
 8005f8c:	68fb      	ldr	r3, [r7, #12]
 8005f8e:	681b      	ldr	r3, [r3, #0]
 8005f90:	430a      	orrs	r2, r1
 8005f92:	619a      	str	r2, [r3, #24]
 8005f94:	e05a      	b.n	800604c <HAL_TIM_IC_ConfigChannel+0x11e>
  }
  else if (Channel == TIM_CHANNEL_2)
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	2b04      	cmp	r3, #4
 8005f9a:	d11c      	bne.n	8005fd6 <HAL_TIM_IC_ConfigChannel+0xa8>
  {
    /* TI2 Configuration */
    assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

    TIM_TI2_SetConfig(htim->Instance,
 8005f9c:	68fb      	ldr	r3, [r7, #12]
 8005f9e:	6818      	ldr	r0, [r3, #0]
 8005fa0:	68bb      	ldr	r3, [r7, #8]
 8005fa2:	6819      	ldr	r1, [r3, #0]
 8005fa4:	68bb      	ldr	r3, [r7, #8]
 8005fa6:	685a      	ldr	r2, [r3, #4]
 8005fa8:	68bb      	ldr	r3, [r7, #8]
 8005faa:	68db      	ldr	r3, [r3, #12]
 8005fac:	f000 fd45 	bl	8006a3a <TIM_TI2_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC2PSC Bits */
    htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 8005fb0:	68fb      	ldr	r3, [r7, #12]
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	699a      	ldr	r2, [r3, #24]
 8005fb6:	68fb      	ldr	r3, [r7, #12]
 8005fb8:	681b      	ldr	r3, [r3, #0]
 8005fba:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8005fbe:	619a      	str	r2, [r3, #24]

    /* Set the IC2PSC value */
    htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	6999      	ldr	r1, [r3, #24]
 8005fc6:	68bb      	ldr	r3, [r7, #8]
 8005fc8:	689b      	ldr	r3, [r3, #8]
 8005fca:	021a      	lsls	r2, r3, #8
 8005fcc:	68fb      	ldr	r3, [r7, #12]
 8005fce:	681b      	ldr	r3, [r3, #0]
 8005fd0:	430a      	orrs	r2, r1
 8005fd2:	619a      	str	r2, [r3, #24]
 8005fd4:	e03a      	b.n	800604c <HAL_TIM_IC_ConfigChannel+0x11e>
  }
  else if (Channel == TIM_CHANNEL_3)
 8005fd6:	687b      	ldr	r3, [r7, #4]
 8005fd8:	2b08      	cmp	r3, #8
 8005fda:	d11b      	bne.n	8006014 <HAL_TIM_IC_ConfigChannel+0xe6>
  {
    /* TI3 Configuration */
    assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

    TIM_TI3_SetConfig(htim->Instance,
 8005fdc:	68fb      	ldr	r3, [r7, #12]
 8005fde:	6818      	ldr	r0, [r3, #0]
 8005fe0:	68bb      	ldr	r3, [r7, #8]
 8005fe2:	6819      	ldr	r1, [r3, #0]
 8005fe4:	68bb      	ldr	r3, [r7, #8]
 8005fe6:	685a      	ldr	r2, [r3, #4]
 8005fe8:	68bb      	ldr	r3, [r7, #8]
 8005fea:	68db      	ldr	r3, [r3, #12]
 8005fec:	f000 fd92 	bl	8006b14 <TIM_TI3_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC3PSC Bits */
    htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
 8005ff0:	68fb      	ldr	r3, [r7, #12]
 8005ff2:	681b      	ldr	r3, [r3, #0]
 8005ff4:	69da      	ldr	r2, [r3, #28]
 8005ff6:	68fb      	ldr	r3, [r7, #12]
 8005ff8:	681b      	ldr	r3, [r3, #0]
 8005ffa:	f022 020c 	bic.w	r2, r2, #12
 8005ffe:	61da      	str	r2, [r3, #28]

    /* Set the IC3PSC value */
    htim->Instance->CCMR2 |= sConfig->ICPrescaler;
 8006000:	68fb      	ldr	r3, [r7, #12]
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	69d9      	ldr	r1, [r3, #28]
 8006006:	68bb      	ldr	r3, [r7, #8]
 8006008:	689a      	ldr	r2, [r3, #8]
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	681b      	ldr	r3, [r3, #0]
 800600e:	430a      	orrs	r2, r1
 8006010:	61da      	str	r2, [r3, #28]
 8006012:	e01b      	b.n	800604c <HAL_TIM_IC_ConfigChannel+0x11e>
  else
  {
    /* TI4 Configuration */
    assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

    TIM_TI4_SetConfig(htim->Instance,
 8006014:	68fb      	ldr	r3, [r7, #12]
 8006016:	6818      	ldr	r0, [r3, #0]
 8006018:	68bb      	ldr	r3, [r7, #8]
 800601a:	6819      	ldr	r1, [r3, #0]
 800601c:	68bb      	ldr	r3, [r7, #8]
 800601e:	685a      	ldr	r2, [r3, #4]
 8006020:	68bb      	ldr	r3, [r7, #8]
 8006022:	68db      	ldr	r3, [r3, #12]
 8006024:	f000 fdb2 	bl	8006b8c <TIM_TI4_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC4PSC Bits */
    htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
 8006028:	68fb      	ldr	r3, [r7, #12]
 800602a:	681b      	ldr	r3, [r3, #0]
 800602c:	69da      	ldr	r2, [r3, #28]
 800602e:	68fb      	ldr	r3, [r7, #12]
 8006030:	681b      	ldr	r3, [r3, #0]
 8006032:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8006036:	61da      	str	r2, [r3, #28]

    /* Set the IC4PSC value */
    htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	69d9      	ldr	r1, [r3, #28]
 800603e:	68bb      	ldr	r3, [r7, #8]
 8006040:	689b      	ldr	r3, [r3, #8]
 8006042:	021a      	lsls	r2, r3, #8
 8006044:	68fb      	ldr	r3, [r7, #12]
 8006046:	681b      	ldr	r3, [r3, #0]
 8006048:	430a      	orrs	r2, r1
 800604a:	61da      	str	r2, [r3, #28]
  }

  htim->State = HAL_TIM_STATE_READY;
 800604c:	68fb      	ldr	r3, [r7, #12]
 800604e:	2201      	movs	r2, #1
 8006050:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006054:	68fb      	ldr	r3, [r7, #12]
 8006056:	2200      	movs	r2, #0
 8006058:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 800605c:	2300      	movs	r3, #0
}
 800605e:	4618      	mov	r0, r3
 8006060:	3710      	adds	r7, #16
 8006062:	46bd      	mov	sp, r7
 8006064:	bd80      	pop	{r7, pc}
	...

08006068 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8006068:	b580      	push	{r7, lr}
 800606a:	b084      	sub	sp, #16
 800606c:	af00      	add	r7, sp, #0
 800606e:	60f8      	str	r0, [r7, #12]
 8006070:	60b9      	str	r1, [r7, #8]
 8006072:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8006074:	68fb      	ldr	r3, [r7, #12]
 8006076:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800607a:	2b01      	cmp	r3, #1
 800607c:	d101      	bne.n	8006082 <HAL_TIM_PWM_ConfigChannel+0x1a>
 800607e:	2302      	movs	r3, #2
 8006080:	e0b4      	b.n	80061ec <HAL_TIM_PWM_ConfigChannel+0x184>
 8006082:	68fb      	ldr	r3, [r7, #12]
 8006084:	2201      	movs	r2, #1
 8006086:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 800608a:	68fb      	ldr	r3, [r7, #12]
 800608c:	2202      	movs	r2, #2
 800608e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  switch (Channel)
 8006092:	687b      	ldr	r3, [r7, #4]
 8006094:	2b0c      	cmp	r3, #12
 8006096:	f200 809f 	bhi.w	80061d8 <HAL_TIM_PWM_ConfigChannel+0x170>
 800609a:	a201      	add	r2, pc, #4	; (adr r2, 80060a0 <HAL_TIM_PWM_ConfigChannel+0x38>)
 800609c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80060a0:	080060d5 	.word	0x080060d5
 80060a4:	080061d9 	.word	0x080061d9
 80060a8:	080061d9 	.word	0x080061d9
 80060ac:	080061d9 	.word	0x080061d9
 80060b0:	08006115 	.word	0x08006115
 80060b4:	080061d9 	.word	0x080061d9
 80060b8:	080061d9 	.word	0x080061d9
 80060bc:	080061d9 	.word	0x080061d9
 80060c0:	08006157 	.word	0x08006157
 80060c4:	080061d9 	.word	0x080061d9
 80060c8:	080061d9 	.word	0x080061d9
 80060cc:	080061d9 	.word	0x080061d9
 80060d0:	08006197 	.word	0x08006197
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80060d4:	68fb      	ldr	r3, [r7, #12]
 80060d6:	681b      	ldr	r3, [r3, #0]
 80060d8:	68b9      	ldr	r1, [r7, #8]
 80060da:	4618      	mov	r0, r3
 80060dc:	f000 fa5a 	bl	8006594 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 80060e0:	68fb      	ldr	r3, [r7, #12]
 80060e2:	681b      	ldr	r3, [r3, #0]
 80060e4:	699a      	ldr	r2, [r3, #24]
 80060e6:	68fb      	ldr	r3, [r7, #12]
 80060e8:	681b      	ldr	r3, [r3, #0]
 80060ea:	f042 0208 	orr.w	r2, r2, #8
 80060ee:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80060f0:	68fb      	ldr	r3, [r7, #12]
 80060f2:	681b      	ldr	r3, [r3, #0]
 80060f4:	699a      	ldr	r2, [r3, #24]
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	f022 0204 	bic.w	r2, r2, #4
 80060fe:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	681b      	ldr	r3, [r3, #0]
 8006104:	6999      	ldr	r1, [r3, #24]
 8006106:	68bb      	ldr	r3, [r7, #8]
 8006108:	691a      	ldr	r2, [r3, #16]
 800610a:	68fb      	ldr	r3, [r7, #12]
 800610c:	681b      	ldr	r3, [r3, #0]
 800610e:	430a      	orrs	r2, r1
 8006110:	619a      	str	r2, [r3, #24]
      break;
 8006112:	e062      	b.n	80061da <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8006114:	68fb      	ldr	r3, [r7, #12]
 8006116:	681b      	ldr	r3, [r3, #0]
 8006118:	68b9      	ldr	r1, [r7, #8]
 800611a:	4618      	mov	r0, r3
 800611c:	f000 faaa 	bl	8006674 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	681b      	ldr	r3, [r3, #0]
 8006124:	699a      	ldr	r2, [r3, #24]
 8006126:	68fb      	ldr	r3, [r7, #12]
 8006128:	681b      	ldr	r3, [r3, #0]
 800612a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800612e:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8006130:	68fb      	ldr	r3, [r7, #12]
 8006132:	681b      	ldr	r3, [r3, #0]
 8006134:	699a      	ldr	r2, [r3, #24]
 8006136:	68fb      	ldr	r3, [r7, #12]
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800613e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8006140:	68fb      	ldr	r3, [r7, #12]
 8006142:	681b      	ldr	r3, [r3, #0]
 8006144:	6999      	ldr	r1, [r3, #24]
 8006146:	68bb      	ldr	r3, [r7, #8]
 8006148:	691b      	ldr	r3, [r3, #16]
 800614a:	021a      	lsls	r2, r3, #8
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	681b      	ldr	r3, [r3, #0]
 8006150:	430a      	orrs	r2, r1
 8006152:	619a      	str	r2, [r3, #24]
      break;
 8006154:	e041      	b.n	80061da <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	68b9      	ldr	r1, [r7, #8]
 800615c:	4618      	mov	r0, r3
 800615e:	f000 faff 	bl	8006760 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8006162:	68fb      	ldr	r3, [r7, #12]
 8006164:	681b      	ldr	r3, [r3, #0]
 8006166:	69da      	ldr	r2, [r3, #28]
 8006168:	68fb      	ldr	r3, [r7, #12]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	f042 0208 	orr.w	r2, r2, #8
 8006170:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8006172:	68fb      	ldr	r3, [r7, #12]
 8006174:	681b      	ldr	r3, [r3, #0]
 8006176:	69da      	ldr	r2, [r3, #28]
 8006178:	68fb      	ldr	r3, [r7, #12]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	f022 0204 	bic.w	r2, r2, #4
 8006180:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8006182:	68fb      	ldr	r3, [r7, #12]
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	69d9      	ldr	r1, [r3, #28]
 8006188:	68bb      	ldr	r3, [r7, #8]
 800618a:	691a      	ldr	r2, [r3, #16]
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	430a      	orrs	r2, r1
 8006192:	61da      	str	r2, [r3, #28]
      break;
 8006194:	e021      	b.n	80061da <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	681b      	ldr	r3, [r3, #0]
 800619a:	68b9      	ldr	r1, [r7, #8]
 800619c:	4618      	mov	r0, r3
 800619e:	f000 fb53 	bl	8006848 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80061a2:	68fb      	ldr	r3, [r7, #12]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	69da      	ldr	r2, [r3, #28]
 80061a8:	68fb      	ldr	r3, [r7, #12]
 80061aa:	681b      	ldr	r3, [r3, #0]
 80061ac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80061b0:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80061b2:	68fb      	ldr	r3, [r7, #12]
 80061b4:	681b      	ldr	r3, [r3, #0]
 80061b6:	69da      	ldr	r2, [r3, #28]
 80061b8:	68fb      	ldr	r3, [r7, #12]
 80061ba:	681b      	ldr	r3, [r3, #0]
 80061bc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80061c0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80061c2:	68fb      	ldr	r3, [r7, #12]
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	69d9      	ldr	r1, [r3, #28]
 80061c8:	68bb      	ldr	r3, [r7, #8]
 80061ca:	691b      	ldr	r3, [r3, #16]
 80061cc:	021a      	lsls	r2, r3, #8
 80061ce:	68fb      	ldr	r3, [r7, #12]
 80061d0:	681b      	ldr	r3, [r3, #0]
 80061d2:	430a      	orrs	r2, r1
 80061d4:	61da      	str	r2, [r3, #28]
      break;
 80061d6:	e000      	b.n	80061da <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      break;
 80061d8:	bf00      	nop
  }

  htim->State = HAL_TIM_STATE_READY;
 80061da:	68fb      	ldr	r3, [r7, #12]
 80061dc:	2201      	movs	r2, #1
 80061de:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80061e2:	68fb      	ldr	r3, [r7, #12]
 80061e4:	2200      	movs	r2, #0
 80061e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 80061ea:	2300      	movs	r3, #0
}
 80061ec:	4618      	mov	r0, r3
 80061ee:	3710      	adds	r7, #16
 80061f0:	46bd      	mov	sp, r7
 80061f2:	bd80      	pop	{r7, pc}

080061f4 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 80061f4:	b580      	push	{r7, lr}
 80061f6:	b084      	sub	sp, #16
 80061f8:	af00      	add	r7, sp, #0
 80061fa:	6078      	str	r0, [r7, #4]
 80061fc:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 80061fe:	687b      	ldr	r3, [r7, #4]
 8006200:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006204:	2b01      	cmp	r3, #1
 8006206:	d101      	bne.n	800620c <HAL_TIM_ConfigClockSource+0x18>
 8006208:	2302      	movs	r3, #2
 800620a:	e0b3      	b.n	8006374 <HAL_TIM_ConfigClockSource+0x180>
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	2201      	movs	r2, #1
 8006210:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8006214:	687b      	ldr	r3, [r7, #4]
 8006216:	2202      	movs	r2, #2
 8006218:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800621c:	687b      	ldr	r3, [r7, #4]
 800621e:	681b      	ldr	r3, [r3, #0]
 8006220:	689b      	ldr	r3, [r3, #8]
 8006222:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8006224:	68fb      	ldr	r3, [r7, #12]
 8006226:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800622a:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800622c:	68fb      	ldr	r3, [r7, #12]
 800622e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006232:	60fb      	str	r3, [r7, #12]
  htim->Instance->SMCR = tmpsmcr;
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	68fa      	ldr	r2, [r7, #12]
 800623a:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 800623c:	683b      	ldr	r3, [r7, #0]
 800623e:	681b      	ldr	r3, [r3, #0]
 8006240:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006244:	d03e      	beq.n	80062c4 <HAL_TIM_ConfigClockSource+0xd0>
 8006246:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800624a:	f200 8087 	bhi.w	800635c <HAL_TIM_ConfigClockSource+0x168>
 800624e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006252:	f000 8085 	beq.w	8006360 <HAL_TIM_ConfigClockSource+0x16c>
 8006256:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800625a:	d87f      	bhi.n	800635c <HAL_TIM_ConfigClockSource+0x168>
 800625c:	2b70      	cmp	r3, #112	; 0x70
 800625e:	d01a      	beq.n	8006296 <HAL_TIM_ConfigClockSource+0xa2>
 8006260:	2b70      	cmp	r3, #112	; 0x70
 8006262:	d87b      	bhi.n	800635c <HAL_TIM_ConfigClockSource+0x168>
 8006264:	2b60      	cmp	r3, #96	; 0x60
 8006266:	d050      	beq.n	800630a <HAL_TIM_ConfigClockSource+0x116>
 8006268:	2b60      	cmp	r3, #96	; 0x60
 800626a:	d877      	bhi.n	800635c <HAL_TIM_ConfigClockSource+0x168>
 800626c:	2b50      	cmp	r3, #80	; 0x50
 800626e:	d03c      	beq.n	80062ea <HAL_TIM_ConfigClockSource+0xf6>
 8006270:	2b50      	cmp	r3, #80	; 0x50
 8006272:	d873      	bhi.n	800635c <HAL_TIM_ConfigClockSource+0x168>
 8006274:	2b40      	cmp	r3, #64	; 0x40
 8006276:	d058      	beq.n	800632a <HAL_TIM_ConfigClockSource+0x136>
 8006278:	2b40      	cmp	r3, #64	; 0x40
 800627a:	d86f      	bhi.n	800635c <HAL_TIM_ConfigClockSource+0x168>
 800627c:	2b30      	cmp	r3, #48	; 0x30
 800627e:	d064      	beq.n	800634a <HAL_TIM_ConfigClockSource+0x156>
 8006280:	2b30      	cmp	r3, #48	; 0x30
 8006282:	d86b      	bhi.n	800635c <HAL_TIM_ConfigClockSource+0x168>
 8006284:	2b20      	cmp	r3, #32
 8006286:	d060      	beq.n	800634a <HAL_TIM_ConfigClockSource+0x156>
 8006288:	2b20      	cmp	r3, #32
 800628a:	d867      	bhi.n	800635c <HAL_TIM_ConfigClockSource+0x168>
 800628c:	2b00      	cmp	r3, #0
 800628e:	d05c      	beq.n	800634a <HAL_TIM_ConfigClockSource+0x156>
 8006290:	2b10      	cmp	r3, #16
 8006292:	d05a      	beq.n	800634a <HAL_TIM_ConfigClockSource+0x156>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
      break;
    }

    default:
      break;
 8006294:	e062      	b.n	800635c <HAL_TIM_ConfigClockSource+0x168>
      TIM_ETR_SetConfig(htim->Instance,
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	6818      	ldr	r0, [r3, #0]
 800629a:	683b      	ldr	r3, [r7, #0]
 800629c:	6899      	ldr	r1, [r3, #8]
 800629e:	683b      	ldr	r3, [r7, #0]
 80062a0:	685a      	ldr	r2, [r3, #4]
 80062a2:	683b      	ldr	r3, [r7, #0]
 80062a4:	68db      	ldr	r3, [r3, #12]
 80062a6:	f000 fcc9 	bl	8006c3c <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	689b      	ldr	r3, [r3, #8]
 80062b0:	60fb      	str	r3, [r7, #12]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80062b2:	68fb      	ldr	r3, [r7, #12]
 80062b4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80062b8:	60fb      	str	r3, [r7, #12]
      htim->Instance->SMCR = tmpsmcr;
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	68fa      	ldr	r2, [r7, #12]
 80062c0:	609a      	str	r2, [r3, #8]
      break;
 80062c2:	e04e      	b.n	8006362 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_ETR_SetConfig(htim->Instance,
 80062c4:	687b      	ldr	r3, [r7, #4]
 80062c6:	6818      	ldr	r0, [r3, #0]
 80062c8:	683b      	ldr	r3, [r7, #0]
 80062ca:	6899      	ldr	r1, [r3, #8]
 80062cc:	683b      	ldr	r3, [r7, #0]
 80062ce:	685a      	ldr	r2, [r3, #4]
 80062d0:	683b      	ldr	r3, [r7, #0]
 80062d2:	68db      	ldr	r3, [r3, #12]
 80062d4:	f000 fcb2 	bl	8006c3c <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80062d8:	687b      	ldr	r3, [r7, #4]
 80062da:	681b      	ldr	r3, [r3, #0]
 80062dc:	689a      	ldr	r2, [r3, #8]
 80062de:	687b      	ldr	r3, [r7, #4]
 80062e0:	681b      	ldr	r3, [r3, #0]
 80062e2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80062e6:	609a      	str	r2, [r3, #8]
      break;
 80062e8:	e03b      	b.n	8006362 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_TI1_ConfigInputStage(htim->Instance,
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	6818      	ldr	r0, [r3, #0]
 80062ee:	683b      	ldr	r3, [r7, #0]
 80062f0:	6859      	ldr	r1, [r3, #4]
 80062f2:	683b      	ldr	r3, [r7, #0]
 80062f4:	68db      	ldr	r3, [r3, #12]
 80062f6:	461a      	mov	r2, r3
 80062f8:	f000 fb70 	bl	80069dc <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80062fc:	687b      	ldr	r3, [r7, #4]
 80062fe:	681b      	ldr	r3, [r3, #0]
 8006300:	2150      	movs	r1, #80	; 0x50
 8006302:	4618      	mov	r0, r3
 8006304:	f000 fc7f 	bl	8006c06 <TIM_ITRx_SetConfig>
      break;
 8006308:	e02b      	b.n	8006362 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_TI2_ConfigInputStage(htim->Instance,
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	6818      	ldr	r0, [r3, #0]
 800630e:	683b      	ldr	r3, [r7, #0]
 8006310:	6859      	ldr	r1, [r3, #4]
 8006312:	683b      	ldr	r3, [r7, #0]
 8006314:	68db      	ldr	r3, [r3, #12]
 8006316:	461a      	mov	r2, r3
 8006318:	f000 fbcc 	bl	8006ab4 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 800631c:	687b      	ldr	r3, [r7, #4]
 800631e:	681b      	ldr	r3, [r3, #0]
 8006320:	2160      	movs	r1, #96	; 0x60
 8006322:	4618      	mov	r0, r3
 8006324:	f000 fc6f 	bl	8006c06 <TIM_ITRx_SetConfig>
      break;
 8006328:	e01b      	b.n	8006362 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	6818      	ldr	r0, [r3, #0]
 800632e:	683b      	ldr	r3, [r7, #0]
 8006330:	6859      	ldr	r1, [r3, #4]
 8006332:	683b      	ldr	r3, [r7, #0]
 8006334:	68db      	ldr	r3, [r3, #12]
 8006336:	461a      	mov	r2, r3
 8006338:	f000 fb50 	bl	80069dc <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	681b      	ldr	r3, [r3, #0]
 8006340:	2140      	movs	r1, #64	; 0x40
 8006342:	4618      	mov	r0, r3
 8006344:	f000 fc5f 	bl	8006c06 <TIM_ITRx_SetConfig>
      break;
 8006348:	e00b      	b.n	8006362 <HAL_TIM_ConfigClockSource+0x16e>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800634a:	687b      	ldr	r3, [r7, #4]
 800634c:	681a      	ldr	r2, [r3, #0]
 800634e:	683b      	ldr	r3, [r7, #0]
 8006350:	681b      	ldr	r3, [r3, #0]
 8006352:	4619      	mov	r1, r3
 8006354:	4610      	mov	r0, r2
 8006356:	f000 fc56 	bl	8006c06 <TIM_ITRx_SetConfig>
      break;
 800635a:	e002      	b.n	8006362 <HAL_TIM_ConfigClockSource+0x16e>
      break;
 800635c:	bf00      	nop
 800635e:	e000      	b.n	8006362 <HAL_TIM_ConfigClockSource+0x16e>
      break;
 8006360:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8006362:	687b      	ldr	r3, [r7, #4]
 8006364:	2201      	movs	r2, #1
 8006366:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800636a:	687b      	ldr	r3, [r7, #4]
 800636c:	2200      	movs	r2, #0
 800636e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8006372:	2300      	movs	r3, #0
}
 8006374:	4618      	mov	r0, r3
 8006376:	3710      	adds	r7, #16
 8006378:	46bd      	mov	sp, r7
 800637a:	bd80      	pop	{r7, pc}

0800637c <HAL_TIM_ReadCapturedValue>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval Captured value
  */
uint32_t HAL_TIM_ReadCapturedValue(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 800637c:	b480      	push	{r7}
 800637e:	b085      	sub	sp, #20
 8006380:	af00      	add	r7, sp, #0
 8006382:	6078      	str	r0, [r7, #4]
 8006384:	6039      	str	r1, [r7, #0]
  uint32_t tmpreg = 0U;
 8006386:	2300      	movs	r3, #0
 8006388:	60fb      	str	r3, [r7, #12]

  switch (Channel)
 800638a:	683b      	ldr	r3, [r7, #0]
 800638c:	2b0c      	cmp	r3, #12
 800638e:	d831      	bhi.n	80063f4 <HAL_TIM_ReadCapturedValue+0x78>
 8006390:	a201      	add	r2, pc, #4	; (adr r2, 8006398 <HAL_TIM_ReadCapturedValue+0x1c>)
 8006392:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006396:	bf00      	nop
 8006398:	080063cd 	.word	0x080063cd
 800639c:	080063f5 	.word	0x080063f5
 80063a0:	080063f5 	.word	0x080063f5
 80063a4:	080063f5 	.word	0x080063f5
 80063a8:	080063d7 	.word	0x080063d7
 80063ac:	080063f5 	.word	0x080063f5
 80063b0:	080063f5 	.word	0x080063f5
 80063b4:	080063f5 	.word	0x080063f5
 80063b8:	080063e1 	.word	0x080063e1
 80063bc:	080063f5 	.word	0x080063f5
 80063c0:	080063f5 	.word	0x080063f5
 80063c4:	080063f5 	.word	0x080063f5
 80063c8:	080063eb 	.word	0x080063eb
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Return the capture 1 value */
      tmpreg =  htim->Instance->CCR1;
 80063cc:	687b      	ldr	r3, [r7, #4]
 80063ce:	681b      	ldr	r3, [r3, #0]
 80063d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80063d2:	60fb      	str	r3, [r7, #12]

      break;
 80063d4:	e00f      	b.n	80063f6 <HAL_TIM_ReadCapturedValue+0x7a>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Return the capture 2 value */
      tmpreg =   htim->Instance->CCR2;
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	681b      	ldr	r3, [r3, #0]
 80063da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80063dc:	60fb      	str	r3, [r7, #12]

      break;
 80063de:	e00a      	b.n	80063f6 <HAL_TIM_ReadCapturedValue+0x7a>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Return the capture 3 value */
      tmpreg =   htim->Instance->CCR3;
 80063e0:	687b      	ldr	r3, [r7, #4]
 80063e2:	681b      	ldr	r3, [r3, #0]
 80063e4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80063e6:	60fb      	str	r3, [r7, #12]

      break;
 80063e8:	e005      	b.n	80063f6 <HAL_TIM_ReadCapturedValue+0x7a>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Return the capture 4 value */
      tmpreg =   htim->Instance->CCR4;
 80063ea:	687b      	ldr	r3, [r7, #4]
 80063ec:	681b      	ldr	r3, [r3, #0]
 80063ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80063f0:	60fb      	str	r3, [r7, #12]

      break;
 80063f2:	e000      	b.n	80063f6 <HAL_TIM_ReadCapturedValue+0x7a>
    }

    default:
      break;
 80063f4:	bf00      	nop
  }

  return tmpreg;
 80063f6:	68fb      	ldr	r3, [r7, #12]
}
 80063f8:	4618      	mov	r0, r3
 80063fa:	3714      	adds	r7, #20
 80063fc:	46bd      	mov	sp, r7
 80063fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006402:	4770      	bx	lr

08006404 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8006404:	b480      	push	{r7}
 8006406:	b083      	sub	sp, #12
 8006408:	af00      	add	r7, sp, #0
 800640a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800640c:	bf00      	nop
 800640e:	370c      	adds	r7, #12
 8006410:	46bd      	mov	sp, r7
 8006412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006416:	4770      	bx	lr

08006418 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8006418:	b480      	push	{r7}
 800641a:	b083      	sub	sp, #12
 800641c:	af00      	add	r7, sp, #0
 800641e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8006420:	bf00      	nop
 8006422:	370c      	adds	r7, #12
 8006424:	46bd      	mov	sp, r7
 8006426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800642a:	4770      	bx	lr

0800642c <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800642c:	b480      	push	{r7}
 800642e:	b083      	sub	sp, #12
 8006430:	af00      	add	r7, sp, #0
 8006432:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8006434:	bf00      	nop
 8006436:	370c      	adds	r7, #12
 8006438:	46bd      	mov	sp, r7
 800643a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800643e:	4770      	bx	lr

08006440 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 8006440:	b480      	push	{r7}
 8006442:	b083      	sub	sp, #12
 8006444:	af00      	add	r7, sp, #0
 8006446:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8006448:	bf00      	nop
 800644a:	370c      	adds	r7, #12
 800644c:	46bd      	mov	sp, r7
 800644e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006452:	4770      	bx	lr

08006454 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 8006454:	b480      	push	{r7}
 8006456:	b085      	sub	sp, #20
 8006458:	af00      	add	r7, sp, #0
 800645a:	6078      	str	r0, [r7, #4]
 800645c:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800645e:	687b      	ldr	r3, [r7, #4]
 8006460:	681b      	ldr	r3, [r3, #0]
 8006462:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	4a40      	ldr	r2, [pc, #256]	; (8006568 <TIM_Base_SetConfig+0x114>)
 8006468:	4293      	cmp	r3, r2
 800646a:	d013      	beq.n	8006494 <TIM_Base_SetConfig+0x40>
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006472:	d00f      	beq.n	8006494 <TIM_Base_SetConfig+0x40>
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	4a3d      	ldr	r2, [pc, #244]	; (800656c <TIM_Base_SetConfig+0x118>)
 8006478:	4293      	cmp	r3, r2
 800647a:	d00b      	beq.n	8006494 <TIM_Base_SetConfig+0x40>
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	4a3c      	ldr	r2, [pc, #240]	; (8006570 <TIM_Base_SetConfig+0x11c>)
 8006480:	4293      	cmp	r3, r2
 8006482:	d007      	beq.n	8006494 <TIM_Base_SetConfig+0x40>
 8006484:	687b      	ldr	r3, [r7, #4]
 8006486:	4a3b      	ldr	r2, [pc, #236]	; (8006574 <TIM_Base_SetConfig+0x120>)
 8006488:	4293      	cmp	r3, r2
 800648a:	d003      	beq.n	8006494 <TIM_Base_SetConfig+0x40>
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	4a3a      	ldr	r2, [pc, #232]	; (8006578 <TIM_Base_SetConfig+0x124>)
 8006490:	4293      	cmp	r3, r2
 8006492:	d108      	bne.n	80064a6 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006494:	68fb      	ldr	r3, [r7, #12]
 8006496:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800649a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800649c:	683b      	ldr	r3, [r7, #0]
 800649e:	685b      	ldr	r3, [r3, #4]
 80064a0:	68fa      	ldr	r2, [r7, #12]
 80064a2:	4313      	orrs	r3, r2
 80064a4:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80064a6:	687b      	ldr	r3, [r7, #4]
 80064a8:	4a2f      	ldr	r2, [pc, #188]	; (8006568 <TIM_Base_SetConfig+0x114>)
 80064aa:	4293      	cmp	r3, r2
 80064ac:	d02b      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80064b4:	d027      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064b6:	687b      	ldr	r3, [r7, #4]
 80064b8:	4a2c      	ldr	r2, [pc, #176]	; (800656c <TIM_Base_SetConfig+0x118>)
 80064ba:	4293      	cmp	r3, r2
 80064bc:	d023      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	4a2b      	ldr	r2, [pc, #172]	; (8006570 <TIM_Base_SetConfig+0x11c>)
 80064c2:	4293      	cmp	r3, r2
 80064c4:	d01f      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064c6:	687b      	ldr	r3, [r7, #4]
 80064c8:	4a2a      	ldr	r2, [pc, #168]	; (8006574 <TIM_Base_SetConfig+0x120>)
 80064ca:	4293      	cmp	r3, r2
 80064cc:	d01b      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064ce:	687b      	ldr	r3, [r7, #4]
 80064d0:	4a29      	ldr	r2, [pc, #164]	; (8006578 <TIM_Base_SetConfig+0x124>)
 80064d2:	4293      	cmp	r3, r2
 80064d4:	d017      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064d6:	687b      	ldr	r3, [r7, #4]
 80064d8:	4a28      	ldr	r2, [pc, #160]	; (800657c <TIM_Base_SetConfig+0x128>)
 80064da:	4293      	cmp	r3, r2
 80064dc:	d013      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064de:	687b      	ldr	r3, [r7, #4]
 80064e0:	4a27      	ldr	r2, [pc, #156]	; (8006580 <TIM_Base_SetConfig+0x12c>)
 80064e2:	4293      	cmp	r3, r2
 80064e4:	d00f      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064e6:	687b      	ldr	r3, [r7, #4]
 80064e8:	4a26      	ldr	r2, [pc, #152]	; (8006584 <TIM_Base_SetConfig+0x130>)
 80064ea:	4293      	cmp	r3, r2
 80064ec:	d00b      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	4a25      	ldr	r2, [pc, #148]	; (8006588 <TIM_Base_SetConfig+0x134>)
 80064f2:	4293      	cmp	r3, r2
 80064f4:	d007      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	4a24      	ldr	r2, [pc, #144]	; (800658c <TIM_Base_SetConfig+0x138>)
 80064fa:	4293      	cmp	r3, r2
 80064fc:	d003      	beq.n	8006506 <TIM_Base_SetConfig+0xb2>
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	4a23      	ldr	r2, [pc, #140]	; (8006590 <TIM_Base_SetConfig+0x13c>)
 8006502:	4293      	cmp	r3, r2
 8006504:	d108      	bne.n	8006518 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006506:	68fb      	ldr	r3, [r7, #12]
 8006508:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800650c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800650e:	683b      	ldr	r3, [r7, #0]
 8006510:	68db      	ldr	r3, [r3, #12]
 8006512:	68fa      	ldr	r2, [r7, #12]
 8006514:	4313      	orrs	r3, r2
 8006516:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006518:	68fb      	ldr	r3, [r7, #12]
 800651a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800651e:	683b      	ldr	r3, [r7, #0]
 8006520:	695b      	ldr	r3, [r3, #20]
 8006522:	4313      	orrs	r3, r2
 8006524:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8006526:	687b      	ldr	r3, [r7, #4]
 8006528:	68fa      	ldr	r2, [r7, #12]
 800652a:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800652c:	683b      	ldr	r3, [r7, #0]
 800652e:	689a      	ldr	r2, [r3, #8]
 8006530:	687b      	ldr	r3, [r7, #4]
 8006532:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006534:	683b      	ldr	r3, [r7, #0]
 8006536:	681a      	ldr	r2, [r3, #0]
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800653c:	687b      	ldr	r3, [r7, #4]
 800653e:	4a0a      	ldr	r2, [pc, #40]	; (8006568 <TIM_Base_SetConfig+0x114>)
 8006540:	4293      	cmp	r3, r2
 8006542:	d003      	beq.n	800654c <TIM_Base_SetConfig+0xf8>
 8006544:	687b      	ldr	r3, [r7, #4]
 8006546:	4a0c      	ldr	r2, [pc, #48]	; (8006578 <TIM_Base_SetConfig+0x124>)
 8006548:	4293      	cmp	r3, r2
 800654a:	d103      	bne.n	8006554 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800654c:	683b      	ldr	r3, [r7, #0]
 800654e:	691a      	ldr	r2, [r3, #16]
 8006550:	687b      	ldr	r3, [r7, #4]
 8006552:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006554:	687b      	ldr	r3, [r7, #4]
 8006556:	2201      	movs	r2, #1
 8006558:	615a      	str	r2, [r3, #20]
}
 800655a:	bf00      	nop
 800655c:	3714      	adds	r7, #20
 800655e:	46bd      	mov	sp, r7
 8006560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006564:	4770      	bx	lr
 8006566:	bf00      	nop
 8006568:	40010000 	.word	0x40010000
 800656c:	40000400 	.word	0x40000400
 8006570:	40000800 	.word	0x40000800
 8006574:	40000c00 	.word	0x40000c00
 8006578:	40010400 	.word	0x40010400
 800657c:	40014000 	.word	0x40014000
 8006580:	40014400 	.word	0x40014400
 8006584:	40014800 	.word	0x40014800
 8006588:	40001800 	.word	0x40001800
 800658c:	40001c00 	.word	0x40001c00
 8006590:	40002000 	.word	0x40002000

08006594 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8006594:	b480      	push	{r7}
 8006596:	b087      	sub	sp, #28
 8006598:	af00      	add	r7, sp, #0
 800659a:	6078      	str	r0, [r7, #4]
 800659c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800659e:	687b      	ldr	r3, [r7, #4]
 80065a0:	6a1b      	ldr	r3, [r3, #32]
 80065a2:	f023 0201 	bic.w	r2, r3, #1
 80065a6:	687b      	ldr	r3, [r7, #4]
 80065a8:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80065aa:	687b      	ldr	r3, [r7, #4]
 80065ac:	6a1b      	ldr	r3, [r3, #32]
 80065ae:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80065b0:	687b      	ldr	r3, [r7, #4]
 80065b2:	685b      	ldr	r3, [r3, #4]
 80065b4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	699b      	ldr	r3, [r3, #24]
 80065ba:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 80065bc:	68fb      	ldr	r3, [r7, #12]
 80065be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80065c2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 80065c4:	68fb      	ldr	r3, [r7, #12]
 80065c6:	f023 0303 	bic.w	r3, r3, #3
 80065ca:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80065cc:	683b      	ldr	r3, [r7, #0]
 80065ce:	681b      	ldr	r3, [r3, #0]
 80065d0:	68fa      	ldr	r2, [r7, #12]
 80065d2:	4313      	orrs	r3, r2
 80065d4:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 80065d6:	697b      	ldr	r3, [r7, #20]
 80065d8:	f023 0302 	bic.w	r3, r3, #2
 80065dc:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 80065de:	683b      	ldr	r3, [r7, #0]
 80065e0:	689b      	ldr	r3, [r3, #8]
 80065e2:	697a      	ldr	r2, [r7, #20]
 80065e4:	4313      	orrs	r3, r2
 80065e6:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 80065e8:	687b      	ldr	r3, [r7, #4]
 80065ea:	4a20      	ldr	r2, [pc, #128]	; (800666c <TIM_OC1_SetConfig+0xd8>)
 80065ec:	4293      	cmp	r3, r2
 80065ee:	d003      	beq.n	80065f8 <TIM_OC1_SetConfig+0x64>
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	4a1f      	ldr	r2, [pc, #124]	; (8006670 <TIM_OC1_SetConfig+0xdc>)
 80065f4:	4293      	cmp	r3, r2
 80065f6:	d10c      	bne.n	8006612 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 80065f8:	697b      	ldr	r3, [r7, #20]
 80065fa:	f023 0308 	bic.w	r3, r3, #8
 80065fe:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8006600:	683b      	ldr	r3, [r7, #0]
 8006602:	68db      	ldr	r3, [r3, #12]
 8006604:	697a      	ldr	r2, [r7, #20]
 8006606:	4313      	orrs	r3, r2
 8006608:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800660a:	697b      	ldr	r3, [r7, #20]
 800660c:	f023 0304 	bic.w	r3, r3, #4
 8006610:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006612:	687b      	ldr	r3, [r7, #4]
 8006614:	4a15      	ldr	r2, [pc, #84]	; (800666c <TIM_OC1_SetConfig+0xd8>)
 8006616:	4293      	cmp	r3, r2
 8006618:	d003      	beq.n	8006622 <TIM_OC1_SetConfig+0x8e>
 800661a:	687b      	ldr	r3, [r7, #4]
 800661c:	4a14      	ldr	r2, [pc, #80]	; (8006670 <TIM_OC1_SetConfig+0xdc>)
 800661e:	4293      	cmp	r3, r2
 8006620:	d111      	bne.n	8006646 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8006622:	693b      	ldr	r3, [r7, #16]
 8006624:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006628:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800662a:	693b      	ldr	r3, [r7, #16]
 800662c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006630:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8006632:	683b      	ldr	r3, [r7, #0]
 8006634:	695b      	ldr	r3, [r3, #20]
 8006636:	693a      	ldr	r2, [r7, #16]
 8006638:	4313      	orrs	r3, r2
 800663a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800663c:	683b      	ldr	r3, [r7, #0]
 800663e:	699b      	ldr	r3, [r3, #24]
 8006640:	693a      	ldr	r2, [r7, #16]
 8006642:	4313      	orrs	r3, r2
 8006644:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006646:	687b      	ldr	r3, [r7, #4]
 8006648:	693a      	ldr	r2, [r7, #16]
 800664a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800664c:	687b      	ldr	r3, [r7, #4]
 800664e:	68fa      	ldr	r2, [r7, #12]
 8006650:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8006652:	683b      	ldr	r3, [r7, #0]
 8006654:	685a      	ldr	r2, [r3, #4]
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	697a      	ldr	r2, [r7, #20]
 800665e:	621a      	str	r2, [r3, #32]
}
 8006660:	bf00      	nop
 8006662:	371c      	adds	r7, #28
 8006664:	46bd      	mov	sp, r7
 8006666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800666a:	4770      	bx	lr
 800666c:	40010000 	.word	0x40010000
 8006670:	40010400 	.word	0x40010400

08006674 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8006674:	b480      	push	{r7}
 8006676:	b087      	sub	sp, #28
 8006678:	af00      	add	r7, sp, #0
 800667a:	6078      	str	r0, [r7, #4]
 800667c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800667e:	687b      	ldr	r3, [r7, #4]
 8006680:	6a1b      	ldr	r3, [r3, #32]
 8006682:	f023 0210 	bic.w	r2, r3, #16
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	6a1b      	ldr	r3, [r3, #32]
 800668e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	685b      	ldr	r3, [r3, #4]
 8006694:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8006696:	687b      	ldr	r3, [r7, #4]
 8006698:	699b      	ldr	r3, [r3, #24]
 800669a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80066a2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80066a4:	68fb      	ldr	r3, [r7, #12]
 80066a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80066aa:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80066ac:	683b      	ldr	r3, [r7, #0]
 80066ae:	681b      	ldr	r3, [r3, #0]
 80066b0:	021b      	lsls	r3, r3, #8
 80066b2:	68fa      	ldr	r2, [r7, #12]
 80066b4:	4313      	orrs	r3, r2
 80066b6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 80066b8:	697b      	ldr	r3, [r7, #20]
 80066ba:	f023 0320 	bic.w	r3, r3, #32
 80066be:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80066c0:	683b      	ldr	r3, [r7, #0]
 80066c2:	689b      	ldr	r3, [r3, #8]
 80066c4:	011b      	lsls	r3, r3, #4
 80066c6:	697a      	ldr	r2, [r7, #20]
 80066c8:	4313      	orrs	r3, r2
 80066ca:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 80066cc:	687b      	ldr	r3, [r7, #4]
 80066ce:	4a22      	ldr	r2, [pc, #136]	; (8006758 <TIM_OC2_SetConfig+0xe4>)
 80066d0:	4293      	cmp	r3, r2
 80066d2:	d003      	beq.n	80066dc <TIM_OC2_SetConfig+0x68>
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	4a21      	ldr	r2, [pc, #132]	; (800675c <TIM_OC2_SetConfig+0xe8>)
 80066d8:	4293      	cmp	r3, r2
 80066da:	d10d      	bne.n	80066f8 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 80066dc:	697b      	ldr	r3, [r7, #20]
 80066de:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80066e2:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80066e4:	683b      	ldr	r3, [r7, #0]
 80066e6:	68db      	ldr	r3, [r3, #12]
 80066e8:	011b      	lsls	r3, r3, #4
 80066ea:	697a      	ldr	r2, [r7, #20]
 80066ec:	4313      	orrs	r3, r2
 80066ee:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 80066f0:	697b      	ldr	r3, [r7, #20]
 80066f2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80066f6:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	4a17      	ldr	r2, [pc, #92]	; (8006758 <TIM_OC2_SetConfig+0xe4>)
 80066fc:	4293      	cmp	r3, r2
 80066fe:	d003      	beq.n	8006708 <TIM_OC2_SetConfig+0x94>
 8006700:	687b      	ldr	r3, [r7, #4]
 8006702:	4a16      	ldr	r2, [pc, #88]	; (800675c <TIM_OC2_SetConfig+0xe8>)
 8006704:	4293      	cmp	r3, r2
 8006706:	d113      	bne.n	8006730 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8006708:	693b      	ldr	r3, [r7, #16]
 800670a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800670e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8006710:	693b      	ldr	r3, [r7, #16]
 8006712:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006716:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8006718:	683b      	ldr	r3, [r7, #0]
 800671a:	695b      	ldr	r3, [r3, #20]
 800671c:	009b      	lsls	r3, r3, #2
 800671e:	693a      	ldr	r2, [r7, #16]
 8006720:	4313      	orrs	r3, r2
 8006722:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8006724:	683b      	ldr	r3, [r7, #0]
 8006726:	699b      	ldr	r3, [r3, #24]
 8006728:	009b      	lsls	r3, r3, #2
 800672a:	693a      	ldr	r2, [r7, #16]
 800672c:	4313      	orrs	r3, r2
 800672e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006730:	687b      	ldr	r3, [r7, #4]
 8006732:	693a      	ldr	r2, [r7, #16]
 8006734:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	68fa      	ldr	r2, [r7, #12]
 800673a:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 800673c:	683b      	ldr	r3, [r7, #0]
 800673e:	685a      	ldr	r2, [r3, #4]
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	697a      	ldr	r2, [r7, #20]
 8006748:	621a      	str	r2, [r3, #32]
}
 800674a:	bf00      	nop
 800674c:	371c      	adds	r7, #28
 800674e:	46bd      	mov	sp, r7
 8006750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006754:	4770      	bx	lr
 8006756:	bf00      	nop
 8006758:	40010000 	.word	0x40010000
 800675c:	40010400 	.word	0x40010400

08006760 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8006760:	b480      	push	{r7}
 8006762:	b087      	sub	sp, #28
 8006764:	af00      	add	r7, sp, #0
 8006766:	6078      	str	r0, [r7, #4]
 8006768:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	6a1b      	ldr	r3, [r3, #32]
 800676e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006772:	687b      	ldr	r3, [r7, #4]
 8006774:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	6a1b      	ldr	r3, [r3, #32]
 800677a:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800677c:	687b      	ldr	r3, [r7, #4]
 800677e:	685b      	ldr	r3, [r3, #4]
 8006780:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	69db      	ldr	r3, [r3, #28]
 8006786:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8006788:	68fb      	ldr	r3, [r7, #12]
 800678a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800678e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8006790:	68fb      	ldr	r3, [r7, #12]
 8006792:	f023 0303 	bic.w	r3, r3, #3
 8006796:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006798:	683b      	ldr	r3, [r7, #0]
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	68fa      	ldr	r2, [r7, #12]
 800679e:	4313      	orrs	r3, r2
 80067a0:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 80067a2:	697b      	ldr	r3, [r7, #20]
 80067a4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80067a8:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80067aa:	683b      	ldr	r3, [r7, #0]
 80067ac:	689b      	ldr	r3, [r3, #8]
 80067ae:	021b      	lsls	r3, r3, #8
 80067b0:	697a      	ldr	r2, [r7, #20]
 80067b2:	4313      	orrs	r3, r2
 80067b4:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	4a21      	ldr	r2, [pc, #132]	; (8006840 <TIM_OC3_SetConfig+0xe0>)
 80067ba:	4293      	cmp	r3, r2
 80067bc:	d003      	beq.n	80067c6 <TIM_OC3_SetConfig+0x66>
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	4a20      	ldr	r2, [pc, #128]	; (8006844 <TIM_OC3_SetConfig+0xe4>)
 80067c2:	4293      	cmp	r3, r2
 80067c4:	d10d      	bne.n	80067e2 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 80067c6:	697b      	ldr	r3, [r7, #20]
 80067c8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80067cc:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80067ce:	683b      	ldr	r3, [r7, #0]
 80067d0:	68db      	ldr	r3, [r3, #12]
 80067d2:	021b      	lsls	r3, r3, #8
 80067d4:	697a      	ldr	r2, [r7, #20]
 80067d6:	4313      	orrs	r3, r2
 80067d8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 80067da:	697b      	ldr	r3, [r7, #20]
 80067dc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80067e0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80067e2:	687b      	ldr	r3, [r7, #4]
 80067e4:	4a16      	ldr	r2, [pc, #88]	; (8006840 <TIM_OC3_SetConfig+0xe0>)
 80067e6:	4293      	cmp	r3, r2
 80067e8:	d003      	beq.n	80067f2 <TIM_OC3_SetConfig+0x92>
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	4a15      	ldr	r2, [pc, #84]	; (8006844 <TIM_OC3_SetConfig+0xe4>)
 80067ee:	4293      	cmp	r3, r2
 80067f0:	d113      	bne.n	800681a <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 80067f2:	693b      	ldr	r3, [r7, #16]
 80067f4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80067f8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 80067fa:	693b      	ldr	r3, [r7, #16]
 80067fc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006800:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8006802:	683b      	ldr	r3, [r7, #0]
 8006804:	695b      	ldr	r3, [r3, #20]
 8006806:	011b      	lsls	r3, r3, #4
 8006808:	693a      	ldr	r2, [r7, #16]
 800680a:	4313      	orrs	r3, r2
 800680c:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800680e:	683b      	ldr	r3, [r7, #0]
 8006810:	699b      	ldr	r3, [r3, #24]
 8006812:	011b      	lsls	r3, r3, #4
 8006814:	693a      	ldr	r2, [r7, #16]
 8006816:	4313      	orrs	r3, r2
 8006818:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800681a:	687b      	ldr	r3, [r7, #4]
 800681c:	693a      	ldr	r2, [r7, #16]
 800681e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	68fa      	ldr	r2, [r7, #12]
 8006824:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8006826:	683b      	ldr	r3, [r7, #0]
 8006828:	685a      	ldr	r2, [r3, #4]
 800682a:	687b      	ldr	r3, [r7, #4]
 800682c:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	697a      	ldr	r2, [r7, #20]
 8006832:	621a      	str	r2, [r3, #32]
}
 8006834:	bf00      	nop
 8006836:	371c      	adds	r7, #28
 8006838:	46bd      	mov	sp, r7
 800683a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800683e:	4770      	bx	lr
 8006840:	40010000 	.word	0x40010000
 8006844:	40010400 	.word	0x40010400

08006848 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8006848:	b480      	push	{r7}
 800684a:	b087      	sub	sp, #28
 800684c:	af00      	add	r7, sp, #0
 800684e:	6078      	str	r0, [r7, #4]
 8006850:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	6a1b      	ldr	r3, [r3, #32]
 8006856:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800685a:	687b      	ldr	r3, [r7, #4]
 800685c:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800685e:	687b      	ldr	r3, [r7, #4]
 8006860:	6a1b      	ldr	r3, [r3, #32]
 8006862:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	685b      	ldr	r3, [r3, #4]
 8006868:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800686a:	687b      	ldr	r3, [r7, #4]
 800686c:	69db      	ldr	r3, [r3, #28]
 800686e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8006870:	68fb      	ldr	r3, [r7, #12]
 8006872:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006876:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8006878:	68fb      	ldr	r3, [r7, #12]
 800687a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800687e:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8006880:	683b      	ldr	r3, [r7, #0]
 8006882:	681b      	ldr	r3, [r3, #0]
 8006884:	021b      	lsls	r3, r3, #8
 8006886:	68fa      	ldr	r2, [r7, #12]
 8006888:	4313      	orrs	r3, r2
 800688a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 800688c:	693b      	ldr	r3, [r7, #16]
 800688e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006892:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8006894:	683b      	ldr	r3, [r7, #0]
 8006896:	689b      	ldr	r3, [r3, #8]
 8006898:	031b      	lsls	r3, r3, #12
 800689a:	693a      	ldr	r2, [r7, #16]
 800689c:	4313      	orrs	r3, r2
 800689e:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	4a12      	ldr	r2, [pc, #72]	; (80068ec <TIM_OC4_SetConfig+0xa4>)
 80068a4:	4293      	cmp	r3, r2
 80068a6:	d003      	beq.n	80068b0 <TIM_OC4_SetConfig+0x68>
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	4a11      	ldr	r2, [pc, #68]	; (80068f0 <TIM_OC4_SetConfig+0xa8>)
 80068ac:	4293      	cmp	r3, r2
 80068ae:	d109      	bne.n	80068c4 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 80068b0:	697b      	ldr	r3, [r7, #20]
 80068b2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80068b6:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 80068b8:	683b      	ldr	r3, [r7, #0]
 80068ba:	695b      	ldr	r3, [r3, #20]
 80068bc:	019b      	lsls	r3, r3, #6
 80068be:	697a      	ldr	r2, [r7, #20]
 80068c0:	4313      	orrs	r3, r2
 80068c2:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	697a      	ldr	r2, [r7, #20]
 80068c8:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	68fa      	ldr	r2, [r7, #12]
 80068ce:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 80068d0:	683b      	ldr	r3, [r7, #0]
 80068d2:	685a      	ldr	r2, [r3, #4]
 80068d4:	687b      	ldr	r3, [r7, #4]
 80068d6:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	693a      	ldr	r2, [r7, #16]
 80068dc:	621a      	str	r2, [r3, #32]
}
 80068de:	bf00      	nop
 80068e0:	371c      	adds	r7, #28
 80068e2:	46bd      	mov	sp, r7
 80068e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068e8:	4770      	bx	lr
 80068ea:	bf00      	nop
 80068ec:	40010000 	.word	0x40010000
 80068f0:	40010400 	.word	0x40010400

080068f4 <TIM_TI1_SetConfig>:
  *       (on channel2 path) is used as the input signal. Therefore CCMR1 must be
  *        protected against un-initialized filter and polarity values.
  */
void TIM_TI1_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                       uint32_t TIM_ICFilter)
{
 80068f4:	b480      	push	{r7}
 80068f6:	b087      	sub	sp, #28
 80068f8:	af00      	add	r7, sp, #0
 80068fa:	60f8      	str	r0, [r7, #12]
 80068fc:	60b9      	str	r1, [r7, #8]
 80068fe:	607a      	str	r2, [r7, #4]
 8006900:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8006902:	68fb      	ldr	r3, [r7, #12]
 8006904:	6a1b      	ldr	r3, [r3, #32]
 8006906:	f023 0201 	bic.w	r2, r3, #1
 800690a:	68fb      	ldr	r3, [r7, #12]
 800690c:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800690e:	68fb      	ldr	r3, [r7, #12]
 8006910:	699b      	ldr	r3, [r3, #24]
 8006912:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006914:	68fb      	ldr	r3, [r7, #12]
 8006916:	6a1b      	ldr	r3, [r3, #32]
 8006918:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  if (IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 800691a:	68fb      	ldr	r3, [r7, #12]
 800691c:	4a28      	ldr	r2, [pc, #160]	; (80069c0 <TIM_TI1_SetConfig+0xcc>)
 800691e:	4293      	cmp	r3, r2
 8006920:	d01b      	beq.n	800695a <TIM_TI1_SetConfig+0x66>
 8006922:	68fb      	ldr	r3, [r7, #12]
 8006924:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006928:	d017      	beq.n	800695a <TIM_TI1_SetConfig+0x66>
 800692a:	68fb      	ldr	r3, [r7, #12]
 800692c:	4a25      	ldr	r2, [pc, #148]	; (80069c4 <TIM_TI1_SetConfig+0xd0>)
 800692e:	4293      	cmp	r3, r2
 8006930:	d013      	beq.n	800695a <TIM_TI1_SetConfig+0x66>
 8006932:	68fb      	ldr	r3, [r7, #12]
 8006934:	4a24      	ldr	r2, [pc, #144]	; (80069c8 <TIM_TI1_SetConfig+0xd4>)
 8006936:	4293      	cmp	r3, r2
 8006938:	d00f      	beq.n	800695a <TIM_TI1_SetConfig+0x66>
 800693a:	68fb      	ldr	r3, [r7, #12]
 800693c:	4a23      	ldr	r2, [pc, #140]	; (80069cc <TIM_TI1_SetConfig+0xd8>)
 800693e:	4293      	cmp	r3, r2
 8006940:	d00b      	beq.n	800695a <TIM_TI1_SetConfig+0x66>
 8006942:	68fb      	ldr	r3, [r7, #12]
 8006944:	4a22      	ldr	r2, [pc, #136]	; (80069d0 <TIM_TI1_SetConfig+0xdc>)
 8006946:	4293      	cmp	r3, r2
 8006948:	d007      	beq.n	800695a <TIM_TI1_SetConfig+0x66>
 800694a:	68fb      	ldr	r3, [r7, #12]
 800694c:	4a21      	ldr	r2, [pc, #132]	; (80069d4 <TIM_TI1_SetConfig+0xe0>)
 800694e:	4293      	cmp	r3, r2
 8006950:	d003      	beq.n	800695a <TIM_TI1_SetConfig+0x66>
 8006952:	68fb      	ldr	r3, [r7, #12]
 8006954:	4a20      	ldr	r2, [pc, #128]	; (80069d8 <TIM_TI1_SetConfig+0xe4>)
 8006956:	4293      	cmp	r3, r2
 8006958:	d101      	bne.n	800695e <TIM_TI1_SetConfig+0x6a>
 800695a:	2301      	movs	r3, #1
 800695c:	e000      	b.n	8006960 <TIM_TI1_SetConfig+0x6c>
 800695e:	2300      	movs	r3, #0
 8006960:	2b00      	cmp	r3, #0
 8006962:	d008      	beq.n	8006976 <TIM_TI1_SetConfig+0x82>
  {
    tmpccmr1 &= ~TIM_CCMR1_CC1S;
 8006964:	697b      	ldr	r3, [r7, #20]
 8006966:	f023 0303 	bic.w	r3, r3, #3
 800696a:	617b      	str	r3, [r7, #20]
    tmpccmr1 |= TIM_ICSelection;
 800696c:	697a      	ldr	r2, [r7, #20]
 800696e:	687b      	ldr	r3, [r7, #4]
 8006970:	4313      	orrs	r3, r2
 8006972:	617b      	str	r3, [r7, #20]
 8006974:	e003      	b.n	800697e <TIM_TI1_SetConfig+0x8a>
  }
  else
  {
    tmpccmr1 |= TIM_CCMR1_CC1S_0;
 8006976:	697b      	ldr	r3, [r7, #20]
 8006978:	f043 0301 	orr.w	r3, r3, #1
 800697c:	617b      	str	r3, [r7, #20]
  }

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800697e:	697b      	ldr	r3, [r7, #20]
 8006980:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006984:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
 8006986:	683b      	ldr	r3, [r7, #0]
 8006988:	011b      	lsls	r3, r3, #4
 800698a:	b2db      	uxtb	r3, r3
 800698c:	697a      	ldr	r2, [r7, #20]
 800698e:	4313      	orrs	r3, r2
 8006990:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8006992:	693b      	ldr	r3, [r7, #16]
 8006994:	f023 030a 	bic.w	r3, r3, #10
 8006998:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
 800699a:	68bb      	ldr	r3, [r7, #8]
 800699c:	f003 030a 	and.w	r3, r3, #10
 80069a0:	693a      	ldr	r2, [r7, #16]
 80069a2:	4313      	orrs	r3, r2
 80069a4:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 80069a6:	68fb      	ldr	r3, [r7, #12]
 80069a8:	697a      	ldr	r2, [r7, #20]
 80069aa:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80069ac:	68fb      	ldr	r3, [r7, #12]
 80069ae:	693a      	ldr	r2, [r7, #16]
 80069b0:	621a      	str	r2, [r3, #32]
}
 80069b2:	bf00      	nop
 80069b4:	371c      	adds	r7, #28
 80069b6:	46bd      	mov	sp, r7
 80069b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069bc:	4770      	bx	lr
 80069be:	bf00      	nop
 80069c0:	40010000 	.word	0x40010000
 80069c4:	40000400 	.word	0x40000400
 80069c8:	40000800 	.word	0x40000800
 80069cc:	40000c00 	.word	0x40000c00
 80069d0:	40010400 	.word	0x40010400
 80069d4:	40014000 	.word	0x40014000
 80069d8:	40001800 	.word	0x40001800

080069dc <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80069dc:	b480      	push	{r7}
 80069de:	b087      	sub	sp, #28
 80069e0:	af00      	add	r7, sp, #0
 80069e2:	60f8      	str	r0, [r7, #12]
 80069e4:	60b9      	str	r1, [r7, #8]
 80069e6:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	6a1b      	ldr	r3, [r3, #32]
 80069ec:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80069ee:	68fb      	ldr	r3, [r7, #12]
 80069f0:	6a1b      	ldr	r3, [r3, #32]
 80069f2:	f023 0201 	bic.w	r2, r3, #1
 80069f6:	68fb      	ldr	r3, [r7, #12]
 80069f8:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80069fa:	68fb      	ldr	r3, [r7, #12]
 80069fc:	699b      	ldr	r3, [r3, #24]
 80069fe:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8006a00:	693b      	ldr	r3, [r7, #16]
 8006a02:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006a06:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	011b      	lsls	r3, r3, #4
 8006a0c:	693a      	ldr	r2, [r7, #16]
 8006a0e:	4313      	orrs	r3, r2
 8006a10:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8006a12:	697b      	ldr	r3, [r7, #20]
 8006a14:	f023 030a 	bic.w	r3, r3, #10
 8006a18:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8006a1a:	697a      	ldr	r2, [r7, #20]
 8006a1c:	68bb      	ldr	r3, [r7, #8]
 8006a1e:	4313      	orrs	r3, r2
 8006a20:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8006a22:	68fb      	ldr	r3, [r7, #12]
 8006a24:	693a      	ldr	r2, [r7, #16]
 8006a26:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006a28:	68fb      	ldr	r3, [r7, #12]
 8006a2a:	697a      	ldr	r2, [r7, #20]
 8006a2c:	621a      	str	r2, [r3, #32]
}
 8006a2e:	bf00      	nop
 8006a30:	371c      	adds	r7, #28
 8006a32:	46bd      	mov	sp, r7
 8006a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a38:	4770      	bx	lr

08006a3a <TIM_TI2_SetConfig>:
  *       (on channel1 path) is used as the input signal. Therefore CCMR1 must be
  *        protected against un-initialized filter and polarity values.
  */
static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                              uint32_t TIM_ICFilter)
{
 8006a3a:	b480      	push	{r7}
 8006a3c:	b087      	sub	sp, #28
 8006a3e:	af00      	add	r7, sp, #0
 8006a40:	60f8      	str	r0, [r7, #12]
 8006a42:	60b9      	str	r1, [r7, #8]
 8006a44:	607a      	str	r2, [r7, #4]
 8006a46:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006a48:	68fb      	ldr	r3, [r7, #12]
 8006a4a:	6a1b      	ldr	r3, [r3, #32]
 8006a4c:	f023 0210 	bic.w	r2, r3, #16
 8006a50:	68fb      	ldr	r3, [r7, #12]
 8006a52:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006a54:	68fb      	ldr	r3, [r7, #12]
 8006a56:	699b      	ldr	r3, [r3, #24]
 8006a58:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006a5a:	68fb      	ldr	r3, [r7, #12]
 8006a5c:	6a1b      	ldr	r3, [r3, #32]
 8006a5e:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  tmpccmr1 &= ~TIM_CCMR1_CC2S;
 8006a60:	697b      	ldr	r3, [r7, #20]
 8006a62:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006a66:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICSelection << 8U);
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	021b      	lsls	r3, r3, #8
 8006a6c:	697a      	ldr	r2, [r7, #20]
 8006a6e:	4313      	orrs	r3, r2
 8006a70:	617b      	str	r3, [r7, #20]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8006a72:	697b      	ldr	r3, [r7, #20]
 8006a74:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8006a78:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 8006a7a:	683b      	ldr	r3, [r7, #0]
 8006a7c:	031b      	lsls	r3, r3, #12
 8006a7e:	b29b      	uxth	r3, r3
 8006a80:	697a      	ldr	r2, [r7, #20]
 8006a82:	4313      	orrs	r3, r2
 8006a84:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8006a86:	693b      	ldr	r3, [r7, #16]
 8006a88:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8006a8c:	613b      	str	r3, [r7, #16]
  tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 8006a8e:	68bb      	ldr	r3, [r7, #8]
 8006a90:	011b      	lsls	r3, r3, #4
 8006a92:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 8006a96:	693a      	ldr	r2, [r7, #16]
 8006a98:	4313      	orrs	r3, r2
 8006a9a:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8006a9c:	68fb      	ldr	r3, [r7, #12]
 8006a9e:	697a      	ldr	r2, [r7, #20]
 8006aa0:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	693a      	ldr	r2, [r7, #16]
 8006aa6:	621a      	str	r2, [r3, #32]
}
 8006aa8:	bf00      	nop
 8006aaa:	371c      	adds	r7, #28
 8006aac:	46bd      	mov	sp, r7
 8006aae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ab2:	4770      	bx	lr

08006ab4 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006ab4:	b480      	push	{r7}
 8006ab6:	b087      	sub	sp, #28
 8006ab8:	af00      	add	r7, sp, #0
 8006aba:	60f8      	str	r0, [r7, #12]
 8006abc:	60b9      	str	r1, [r7, #8]
 8006abe:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	6a1b      	ldr	r3, [r3, #32]
 8006ac4:	f023 0210 	bic.w	r2, r3, #16
 8006ac8:	68fb      	ldr	r3, [r7, #12]
 8006aca:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006acc:	68fb      	ldr	r3, [r7, #12]
 8006ace:	699b      	ldr	r3, [r3, #24]
 8006ad0:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006ad2:	68fb      	ldr	r3, [r7, #12]
 8006ad4:	6a1b      	ldr	r3, [r3, #32]
 8006ad6:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8006ad8:	697b      	ldr	r3, [r7, #20]
 8006ada:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8006ade:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	031b      	lsls	r3, r3, #12
 8006ae4:	697a      	ldr	r2, [r7, #20]
 8006ae6:	4313      	orrs	r3, r2
 8006ae8:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8006aea:	693b      	ldr	r3, [r7, #16]
 8006aec:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8006af0:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8006af2:	68bb      	ldr	r3, [r7, #8]
 8006af4:	011b      	lsls	r3, r3, #4
 8006af6:	693a      	ldr	r2, [r7, #16]
 8006af8:	4313      	orrs	r3, r2
 8006afa:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8006afc:	68fb      	ldr	r3, [r7, #12]
 8006afe:	697a      	ldr	r2, [r7, #20]
 8006b00:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006b02:	68fb      	ldr	r3, [r7, #12]
 8006b04:	693a      	ldr	r2, [r7, #16]
 8006b06:	621a      	str	r2, [r3, #32]
}
 8006b08:	bf00      	nop
 8006b0a:	371c      	adds	r7, #28
 8006b0c:	46bd      	mov	sp, r7
 8006b0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b12:	4770      	bx	lr

08006b14 <TIM_TI3_SetConfig>:
  *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be
  *        protected against un-initialized filter and polarity values.
  */
static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                              uint32_t TIM_ICFilter)
{
 8006b14:	b480      	push	{r7}
 8006b16:	b087      	sub	sp, #28
 8006b18:	af00      	add	r7, sp, #0
 8006b1a:	60f8      	str	r0, [r7, #12]
 8006b1c:	60b9      	str	r1, [r7, #8]
 8006b1e:	607a      	str	r2, [r7, #4]
 8006b20:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr2;
  uint32_t tmpccer;

  /* Disable the Channel 3: Reset the CC3E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8006b22:	68fb      	ldr	r3, [r7, #12]
 8006b24:	6a1b      	ldr	r3, [r3, #32]
 8006b26:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006b2a:	68fb      	ldr	r3, [r7, #12]
 8006b2c:	621a      	str	r2, [r3, #32]
  tmpccmr2 = TIMx->CCMR2;
 8006b2e:	68fb      	ldr	r3, [r7, #12]
 8006b30:	69db      	ldr	r3, [r3, #28]
 8006b32:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006b34:	68fb      	ldr	r3, [r7, #12]
 8006b36:	6a1b      	ldr	r3, [r3, #32]
 8006b38:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  tmpccmr2 &= ~TIM_CCMR2_CC3S;
 8006b3a:	697b      	ldr	r3, [r7, #20]
 8006b3c:	f023 0303 	bic.w	r3, r3, #3
 8006b40:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= TIM_ICSelection;
 8006b42:	697a      	ldr	r2, [r7, #20]
 8006b44:	687b      	ldr	r3, [r7, #4]
 8006b46:	4313      	orrs	r3, r2
 8006b48:	617b      	str	r3, [r7, #20]

  /* Set the filter */
  tmpccmr2 &= ~TIM_CCMR2_IC3F;
 8006b4a:	697b      	ldr	r3, [r7, #20]
 8006b4c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006b50:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 8006b52:	683b      	ldr	r3, [r7, #0]
 8006b54:	011b      	lsls	r3, r3, #4
 8006b56:	b2db      	uxtb	r3, r3
 8006b58:	697a      	ldr	r2, [r7, #20]
 8006b5a:	4313      	orrs	r3, r2
 8006b5c:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= ~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 8006b5e:	693b      	ldr	r3, [r7, #16]
 8006b60:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 8006b64:	613b      	str	r3, [r7, #16]
  tmpccer |= ((TIM_ICPolarity << 8U) & (TIM_CCER_CC3P | TIM_CCER_CC3NP));
 8006b66:	68bb      	ldr	r3, [r7, #8]
 8006b68:	021b      	lsls	r3, r3, #8
 8006b6a:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 8006b6e:	693a      	ldr	r2, [r7, #16]
 8006b70:	4313      	orrs	r3, r2
 8006b72:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
 8006b74:	68fb      	ldr	r3, [r7, #12]
 8006b76:	697a      	ldr	r2, [r7, #20]
 8006b78:	61da      	str	r2, [r3, #28]
  TIMx->CCER = tmpccer;
 8006b7a:	68fb      	ldr	r3, [r7, #12]
 8006b7c:	693a      	ldr	r2, [r7, #16]
 8006b7e:	621a      	str	r2, [r3, #32]
}
 8006b80:	bf00      	nop
 8006b82:	371c      	adds	r7, #28
 8006b84:	46bd      	mov	sp, r7
 8006b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b8a:	4770      	bx	lr

08006b8c <TIM_TI4_SetConfig>:
  *        protected against un-initialized filter and polarity values.
  * @retval None
  */
static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                              uint32_t TIM_ICFilter)
{
 8006b8c:	b480      	push	{r7}
 8006b8e:	b087      	sub	sp, #28
 8006b90:	af00      	add	r7, sp, #0
 8006b92:	60f8      	str	r0, [r7, #12]
 8006b94:	60b9      	str	r1, [r7, #8]
 8006b96:	607a      	str	r2, [r7, #4]
 8006b98:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr2;
  uint32_t tmpccer;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8006b9a:	68fb      	ldr	r3, [r7, #12]
 8006b9c:	6a1b      	ldr	r3, [r3, #32]
 8006b9e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8006ba2:	68fb      	ldr	r3, [r7, #12]
 8006ba4:	621a      	str	r2, [r3, #32]
  tmpccmr2 = TIMx->CCMR2;
 8006ba6:	68fb      	ldr	r3, [r7, #12]
 8006ba8:	69db      	ldr	r3, [r3, #28]
 8006baa:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006bac:	68fb      	ldr	r3, [r7, #12]
 8006bae:	6a1b      	ldr	r3, [r3, #32]
 8006bb0:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  tmpccmr2 &= ~TIM_CCMR2_CC4S;
 8006bb2:	697b      	ldr	r3, [r7, #20]
 8006bb4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006bb8:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= (TIM_ICSelection << 8U);
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	021b      	lsls	r3, r3, #8
 8006bbe:	697a      	ldr	r2, [r7, #20]
 8006bc0:	4313      	orrs	r3, r2
 8006bc2:	617b      	str	r3, [r7, #20]

  /* Set the filter */
  tmpccmr2 &= ~TIM_CCMR2_IC4F;
 8006bc4:	697b      	ldr	r3, [r7, #20]
 8006bc6:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8006bca:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 8006bcc:	683b      	ldr	r3, [r7, #0]
 8006bce:	031b      	lsls	r3, r3, #12
 8006bd0:	b29b      	uxth	r3, r3
 8006bd2:	697a      	ldr	r2, [r7, #20]
 8006bd4:	4313      	orrs	r3, r2
 8006bd6:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= ~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 8006bd8:	693b      	ldr	r3, [r7, #16]
 8006bda:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 8006bde:	613b      	str	r3, [r7, #16]
  tmpccer |= ((TIM_ICPolarity << 12U) & (TIM_CCER_CC4P | TIM_CCER_CC4NP));
 8006be0:	68bb      	ldr	r3, [r7, #8]
 8006be2:	031b      	lsls	r3, r3, #12
 8006be4:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 8006be8:	693a      	ldr	r2, [r7, #16]
 8006bea:	4313      	orrs	r3, r2
 8006bec:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
 8006bee:	68fb      	ldr	r3, [r7, #12]
 8006bf0:	697a      	ldr	r2, [r7, #20]
 8006bf2:	61da      	str	r2, [r3, #28]
  TIMx->CCER = tmpccer ;
 8006bf4:	68fb      	ldr	r3, [r7, #12]
 8006bf6:	693a      	ldr	r2, [r7, #16]
 8006bf8:	621a      	str	r2, [r3, #32]
}
 8006bfa:	bf00      	nop
 8006bfc:	371c      	adds	r7, #28
 8006bfe:	46bd      	mov	sp, r7
 8006c00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c04:	4770      	bx	lr

08006c06 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8006c06:	b480      	push	{r7}
 8006c08:	b085      	sub	sp, #20
 8006c0a:	af00      	add	r7, sp, #0
 8006c0c:	6078      	str	r0, [r7, #4]
 8006c0e:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8006c10:	687b      	ldr	r3, [r7, #4]
 8006c12:	689b      	ldr	r3, [r3, #8]
 8006c14:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8006c16:	68fb      	ldr	r3, [r7, #12]
 8006c18:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006c1c:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006c1e:	683a      	ldr	r2, [r7, #0]
 8006c20:	68fb      	ldr	r3, [r7, #12]
 8006c22:	4313      	orrs	r3, r2
 8006c24:	f043 0307 	orr.w	r3, r3, #7
 8006c28:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	68fa      	ldr	r2, [r7, #12]
 8006c2e:	609a      	str	r2, [r3, #8]
}
 8006c30:	bf00      	nop
 8006c32:	3714      	adds	r7, #20
 8006c34:	46bd      	mov	sp, r7
 8006c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c3a:	4770      	bx	lr

08006c3c <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8006c3c:	b480      	push	{r7}
 8006c3e:	b087      	sub	sp, #28
 8006c40:	af00      	add	r7, sp, #0
 8006c42:	60f8      	str	r0, [r7, #12]
 8006c44:	60b9      	str	r1, [r7, #8]
 8006c46:	607a      	str	r2, [r7, #4]
 8006c48:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8006c4a:	68fb      	ldr	r3, [r7, #12]
 8006c4c:	689b      	ldr	r3, [r3, #8]
 8006c4e:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006c50:	697b      	ldr	r3, [r7, #20]
 8006c52:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006c56:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8006c58:	683b      	ldr	r3, [r7, #0]
 8006c5a:	021a      	lsls	r2, r3, #8
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	431a      	orrs	r2, r3
 8006c60:	68bb      	ldr	r3, [r7, #8]
 8006c62:	4313      	orrs	r3, r2
 8006c64:	697a      	ldr	r2, [r7, #20]
 8006c66:	4313      	orrs	r3, r2
 8006c68:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006c6a:	68fb      	ldr	r3, [r7, #12]
 8006c6c:	697a      	ldr	r2, [r7, #20]
 8006c6e:	609a      	str	r2, [r3, #8]
}
 8006c70:	bf00      	nop
 8006c72:	371c      	adds	r7, #28
 8006c74:	46bd      	mov	sp, r7
 8006c76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c7a:	4770      	bx	lr

08006c7c <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8006c7c:	b480      	push	{r7}
 8006c7e:	b087      	sub	sp, #28
 8006c80:	af00      	add	r7, sp, #0
 8006c82:	60f8      	str	r0, [r7, #12]
 8006c84:	60b9      	str	r1, [r7, #8]
 8006c86:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8006c88:	68bb      	ldr	r3, [r7, #8]
 8006c8a:	f003 031f 	and.w	r3, r3, #31
 8006c8e:	2201      	movs	r2, #1
 8006c90:	fa02 f303 	lsl.w	r3, r2, r3
 8006c94:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8006c96:	68fb      	ldr	r3, [r7, #12]
 8006c98:	6a1a      	ldr	r2, [r3, #32]
 8006c9a:	697b      	ldr	r3, [r7, #20]
 8006c9c:	43db      	mvns	r3, r3
 8006c9e:	401a      	ands	r2, r3
 8006ca0:	68fb      	ldr	r3, [r7, #12]
 8006ca2:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8006ca4:	68fb      	ldr	r3, [r7, #12]
 8006ca6:	6a1a      	ldr	r2, [r3, #32]
 8006ca8:	68bb      	ldr	r3, [r7, #8]
 8006caa:	f003 031f 	and.w	r3, r3, #31
 8006cae:	6879      	ldr	r1, [r7, #4]
 8006cb0:	fa01 f303 	lsl.w	r3, r1, r3
 8006cb4:	431a      	orrs	r2, r3
 8006cb6:	68fb      	ldr	r3, [r7, #12]
 8006cb8:	621a      	str	r2, [r3, #32]
}
 8006cba:	bf00      	nop
 8006cbc:	371c      	adds	r7, #28
 8006cbe:	46bd      	mov	sp, r7
 8006cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cc4:	4770      	bx	lr
	...

08006cc8 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8006cc8:	b480      	push	{r7}
 8006cca:	b085      	sub	sp, #20
 8006ccc:	af00      	add	r7, sp, #0
 8006cce:	6078      	str	r0, [r7, #4]
 8006cd0:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006cd2:	687b      	ldr	r3, [r7, #4]
 8006cd4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006cd8:	2b01      	cmp	r3, #1
 8006cda:	d101      	bne.n	8006ce0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006cdc:	2302      	movs	r3, #2
 8006cde:	e05a      	b.n	8006d96 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	2201      	movs	r2, #1
 8006ce4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	2202      	movs	r2, #2
 8006cec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	681b      	ldr	r3, [r3, #0]
 8006cf4:	685b      	ldr	r3, [r3, #4]
 8006cf6:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8006cf8:	687b      	ldr	r3, [r7, #4]
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	689b      	ldr	r3, [r3, #8]
 8006cfe:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8006d00:	68fb      	ldr	r3, [r7, #12]
 8006d02:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006d06:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8006d08:	683b      	ldr	r3, [r7, #0]
 8006d0a:	681b      	ldr	r3, [r3, #0]
 8006d0c:	68fa      	ldr	r2, [r7, #12]
 8006d0e:	4313      	orrs	r3, r2
 8006d10:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	681b      	ldr	r3, [r3, #0]
 8006d16:	68fa      	ldr	r2, [r7, #12]
 8006d18:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	681b      	ldr	r3, [r3, #0]
 8006d1e:	4a21      	ldr	r2, [pc, #132]	; (8006da4 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8006d20:	4293      	cmp	r3, r2
 8006d22:	d022      	beq.n	8006d6a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	681b      	ldr	r3, [r3, #0]
 8006d28:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006d2c:	d01d      	beq.n	8006d6a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d2e:	687b      	ldr	r3, [r7, #4]
 8006d30:	681b      	ldr	r3, [r3, #0]
 8006d32:	4a1d      	ldr	r2, [pc, #116]	; (8006da8 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8006d34:	4293      	cmp	r3, r2
 8006d36:	d018      	beq.n	8006d6a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d38:	687b      	ldr	r3, [r7, #4]
 8006d3a:	681b      	ldr	r3, [r3, #0]
 8006d3c:	4a1b      	ldr	r2, [pc, #108]	; (8006dac <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8006d3e:	4293      	cmp	r3, r2
 8006d40:	d013      	beq.n	8006d6a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	681b      	ldr	r3, [r3, #0]
 8006d46:	4a1a      	ldr	r2, [pc, #104]	; (8006db0 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8006d48:	4293      	cmp	r3, r2
 8006d4a:	d00e      	beq.n	8006d6a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	681b      	ldr	r3, [r3, #0]
 8006d50:	4a18      	ldr	r2, [pc, #96]	; (8006db4 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8006d52:	4293      	cmp	r3, r2
 8006d54:	d009      	beq.n	8006d6a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d56:	687b      	ldr	r3, [r7, #4]
 8006d58:	681b      	ldr	r3, [r3, #0]
 8006d5a:	4a17      	ldr	r2, [pc, #92]	; (8006db8 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006d5c:	4293      	cmp	r3, r2
 8006d5e:	d004      	beq.n	8006d6a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d60:	687b      	ldr	r3, [r7, #4]
 8006d62:	681b      	ldr	r3, [r3, #0]
 8006d64:	4a15      	ldr	r2, [pc, #84]	; (8006dbc <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8006d66:	4293      	cmp	r3, r2
 8006d68:	d10c      	bne.n	8006d84 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8006d6a:	68bb      	ldr	r3, [r7, #8]
 8006d6c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006d70:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8006d72:	683b      	ldr	r3, [r7, #0]
 8006d74:	685b      	ldr	r3, [r3, #4]
 8006d76:	68ba      	ldr	r2, [r7, #8]
 8006d78:	4313      	orrs	r3, r2
 8006d7a:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	681b      	ldr	r3, [r3, #0]
 8006d80:	68ba      	ldr	r2, [r7, #8]
 8006d82:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	2201      	movs	r2, #1
 8006d88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	2200      	movs	r2, #0
 8006d90:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8006d94:	2300      	movs	r3, #0
}
 8006d96:	4618      	mov	r0, r3
 8006d98:	3714      	adds	r7, #20
 8006d9a:	46bd      	mov	sp, r7
 8006d9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006da0:	4770      	bx	lr
 8006da2:	bf00      	nop
 8006da4:	40010000 	.word	0x40010000
 8006da8:	40000400 	.word	0x40000400
 8006dac:	40000800 	.word	0x40000800
 8006db0:	40000c00 	.word	0x40000c00
 8006db4:	40010400 	.word	0x40010400
 8006db8:	40014000 	.word	0x40014000
 8006dbc:	40001800 	.word	0x40001800

08006dc0 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8006dc0:	b480      	push	{r7}
 8006dc2:	b083      	sub	sp, #12
 8006dc4:	af00      	add	r7, sp, #0
 8006dc6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8006dc8:	bf00      	nop
 8006dca:	370c      	adds	r7, #12
 8006dcc:	46bd      	mov	sp, r7
 8006dce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dd2:	4770      	bx	lr

08006dd4 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8006dd4:	b480      	push	{r7}
 8006dd6:	b083      	sub	sp, #12
 8006dd8:	af00      	add	r7, sp, #0
 8006dda:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8006ddc:	bf00      	nop
 8006dde:	370c      	adds	r7, #12
 8006de0:	46bd      	mov	sp, r7
 8006de2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006de6:	4770      	bx	lr

08006de8 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8006de8:	b580      	push	{r7, lr}
 8006dea:	b082      	sub	sp, #8
 8006dec:	af00      	add	r7, sp, #0
 8006dee:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	2b00      	cmp	r3, #0
 8006df4:	d101      	bne.n	8006dfa <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8006df6:	2301      	movs	r3, #1
 8006df8:	e03f      	b.n	8006e7a <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8006e00:	b2db      	uxtb	r3, r3
 8006e02:	2b00      	cmp	r3, #0
 8006e04:	d106      	bne.n	8006e14 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8006e06:	687b      	ldr	r3, [r7, #4]
 8006e08:	2200      	movs	r2, #0
 8006e0a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8006e0e:	6878      	ldr	r0, [r7, #4]
 8006e10:	f7fb fb66 	bl	80024e0 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	2224      	movs	r2, #36	; 0x24
 8006e18:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	681b      	ldr	r3, [r3, #0]
 8006e20:	68da      	ldr	r2, [r3, #12]
 8006e22:	687b      	ldr	r3, [r7, #4]
 8006e24:	681b      	ldr	r3, [r3, #0]
 8006e26:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006e2a:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8006e2c:	6878      	ldr	r0, [r7, #4]
 8006e2e:	f000 f9b1 	bl	8007194 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	681b      	ldr	r3, [r3, #0]
 8006e36:	691a      	ldr	r2, [r3, #16]
 8006e38:	687b      	ldr	r3, [r7, #4]
 8006e3a:	681b      	ldr	r3, [r3, #0]
 8006e3c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006e40:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006e42:	687b      	ldr	r3, [r7, #4]
 8006e44:	681b      	ldr	r3, [r3, #0]
 8006e46:	695a      	ldr	r2, [r3, #20]
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	681b      	ldr	r3, [r3, #0]
 8006e4c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006e50:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	681b      	ldr	r3, [r3, #0]
 8006e56:	68da      	ldr	r2, [r3, #12]
 8006e58:	687b      	ldr	r3, [r7, #4]
 8006e5a:	681b      	ldr	r3, [r3, #0]
 8006e5c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006e60:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006e62:	687b      	ldr	r3, [r7, #4]
 8006e64:	2200      	movs	r2, #0
 8006e66:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 8006e68:	687b      	ldr	r3, [r7, #4]
 8006e6a:	2220      	movs	r2, #32
 8006e6c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	2220      	movs	r2, #32
 8006e74:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
 8006e78:	2300      	movs	r3, #0
}
 8006e7a:	4618      	mov	r0, r3
 8006e7c:	3708      	adds	r7, #8
 8006e7e:	46bd      	mov	sp, r7
 8006e80:	bd80      	pop	{r7, pc}

08006e82 <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006e82:	b580      	push	{r7, lr}
 8006e84:	b088      	sub	sp, #32
 8006e86:	af02      	add	r7, sp, #8
 8006e88:	60f8      	str	r0, [r7, #12]
 8006e8a:	60b9      	str	r1, [r7, #8]
 8006e8c:	603b      	str	r3, [r7, #0]
 8006e8e:	4613      	mov	r3, r2
 8006e90:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 8006e92:	2300      	movs	r3, #0
 8006e94:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8006e96:	68fb      	ldr	r3, [r7, #12]
 8006e98:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8006e9c:	b2db      	uxtb	r3, r3
 8006e9e:	2b20      	cmp	r3, #32
 8006ea0:	f040 8083 	bne.w	8006faa <HAL_UART_Transmit+0x128>
  {
    if ((pData == NULL) || (Size == 0U))
 8006ea4:	68bb      	ldr	r3, [r7, #8]
 8006ea6:	2b00      	cmp	r3, #0
 8006ea8:	d002      	beq.n	8006eb0 <HAL_UART_Transmit+0x2e>
 8006eaa:	88fb      	ldrh	r3, [r7, #6]
 8006eac:	2b00      	cmp	r3, #0
 8006eae:	d101      	bne.n	8006eb4 <HAL_UART_Transmit+0x32>
    {
      return  HAL_ERROR;
 8006eb0:	2301      	movs	r3, #1
 8006eb2:	e07b      	b.n	8006fac <HAL_UART_Transmit+0x12a>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8006eb4:	68fb      	ldr	r3, [r7, #12]
 8006eb6:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8006eba:	2b01      	cmp	r3, #1
 8006ebc:	d101      	bne.n	8006ec2 <HAL_UART_Transmit+0x40>
 8006ebe:	2302      	movs	r3, #2
 8006ec0:	e074      	b.n	8006fac <HAL_UART_Transmit+0x12a>
 8006ec2:	68fb      	ldr	r3, [r7, #12]
 8006ec4:	2201      	movs	r2, #1
 8006ec6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006eca:	68fb      	ldr	r3, [r7, #12]
 8006ecc:	2200      	movs	r2, #0
 8006ece:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006ed0:	68fb      	ldr	r3, [r7, #12]
 8006ed2:	2221      	movs	r2, #33	; 0x21
 8006ed4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 8006ed8:	f7fb fdf6 	bl	8002ac8 <HAL_GetTick>
 8006edc:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 8006ede:	68fb      	ldr	r3, [r7, #12]
 8006ee0:	88fa      	ldrh	r2, [r7, #6]
 8006ee2:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 8006ee4:	68fb      	ldr	r3, [r7, #12]
 8006ee6:	88fa      	ldrh	r2, [r7, #6]
 8006ee8:	84da      	strh	r2, [r3, #38]	; 0x26

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8006eea:	68fb      	ldr	r3, [r7, #12]
 8006eec:	2200      	movs	r2, #0
 8006eee:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    while (huart->TxXferCount > 0U)
 8006ef2:	e042      	b.n	8006f7a <HAL_UART_Transmit+0xf8>
    {
      huart->TxXferCount--;
 8006ef4:	68fb      	ldr	r3, [r7, #12]
 8006ef6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006ef8:	b29b      	uxth	r3, r3
 8006efa:	3b01      	subs	r3, #1
 8006efc:	b29a      	uxth	r2, r3
 8006efe:	68fb      	ldr	r3, [r7, #12]
 8006f00:	84da      	strh	r2, [r3, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006f02:	68fb      	ldr	r3, [r7, #12]
 8006f04:	689b      	ldr	r3, [r3, #8]
 8006f06:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006f0a:	d122      	bne.n	8006f52 <HAL_UART_Transmit+0xd0>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006f0c:	683b      	ldr	r3, [r7, #0]
 8006f0e:	9300      	str	r3, [sp, #0]
 8006f10:	697b      	ldr	r3, [r7, #20]
 8006f12:	2200      	movs	r2, #0
 8006f14:	2180      	movs	r1, #128	; 0x80
 8006f16:	68f8      	ldr	r0, [r7, #12]
 8006f18:	f000 f8f2 	bl	8007100 <UART_WaitOnFlagUntilTimeout>
 8006f1c:	4603      	mov	r3, r0
 8006f1e:	2b00      	cmp	r3, #0
 8006f20:	d001      	beq.n	8006f26 <HAL_UART_Transmit+0xa4>
        {
          return HAL_TIMEOUT;
 8006f22:	2303      	movs	r3, #3
 8006f24:	e042      	b.n	8006fac <HAL_UART_Transmit+0x12a>
        }
        tmp = (uint16_t *) pData;
 8006f26:	68bb      	ldr	r3, [r7, #8]
 8006f28:	613b      	str	r3, [r7, #16]
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 8006f2a:	693b      	ldr	r3, [r7, #16]
 8006f2c:	881b      	ldrh	r3, [r3, #0]
 8006f2e:	461a      	mov	r2, r3
 8006f30:	68fb      	ldr	r3, [r7, #12]
 8006f32:	681b      	ldr	r3, [r3, #0]
 8006f34:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006f38:	605a      	str	r2, [r3, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 8006f3a:	68fb      	ldr	r3, [r7, #12]
 8006f3c:	691b      	ldr	r3, [r3, #16]
 8006f3e:	2b00      	cmp	r3, #0
 8006f40:	d103      	bne.n	8006f4a <HAL_UART_Transmit+0xc8>
        {
          pData += 2U;
 8006f42:	68bb      	ldr	r3, [r7, #8]
 8006f44:	3302      	adds	r3, #2
 8006f46:	60bb      	str	r3, [r7, #8]
 8006f48:	e017      	b.n	8006f7a <HAL_UART_Transmit+0xf8>
        }
        else
        {
          pData += 1U;
 8006f4a:	68bb      	ldr	r3, [r7, #8]
 8006f4c:	3301      	adds	r3, #1
 8006f4e:	60bb      	str	r3, [r7, #8]
 8006f50:	e013      	b.n	8006f7a <HAL_UART_Transmit+0xf8>
        }
      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006f52:	683b      	ldr	r3, [r7, #0]
 8006f54:	9300      	str	r3, [sp, #0]
 8006f56:	697b      	ldr	r3, [r7, #20]
 8006f58:	2200      	movs	r2, #0
 8006f5a:	2180      	movs	r1, #128	; 0x80
 8006f5c:	68f8      	ldr	r0, [r7, #12]
 8006f5e:	f000 f8cf 	bl	8007100 <UART_WaitOnFlagUntilTimeout>
 8006f62:	4603      	mov	r3, r0
 8006f64:	2b00      	cmp	r3, #0
 8006f66:	d001      	beq.n	8006f6c <HAL_UART_Transmit+0xea>
        {
          return HAL_TIMEOUT;
 8006f68:	2303      	movs	r3, #3
 8006f6a:	e01f      	b.n	8006fac <HAL_UART_Transmit+0x12a>
        }
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 8006f6c:	68bb      	ldr	r3, [r7, #8]
 8006f6e:	1c5a      	adds	r2, r3, #1
 8006f70:	60ba      	str	r2, [r7, #8]
 8006f72:	781a      	ldrb	r2, [r3, #0]
 8006f74:	68fb      	ldr	r3, [r7, #12]
 8006f76:	681b      	ldr	r3, [r3, #0]
 8006f78:	605a      	str	r2, [r3, #4]
    while (huart->TxXferCount > 0U)
 8006f7a:	68fb      	ldr	r3, [r7, #12]
 8006f7c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006f7e:	b29b      	uxth	r3, r3
 8006f80:	2b00      	cmp	r3, #0
 8006f82:	d1b7      	bne.n	8006ef4 <HAL_UART_Transmit+0x72>
      }
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8006f84:	683b      	ldr	r3, [r7, #0]
 8006f86:	9300      	str	r3, [sp, #0]
 8006f88:	697b      	ldr	r3, [r7, #20]
 8006f8a:	2200      	movs	r2, #0
 8006f8c:	2140      	movs	r1, #64	; 0x40
 8006f8e:	68f8      	ldr	r0, [r7, #12]
 8006f90:	f000 f8b6 	bl	8007100 <UART_WaitOnFlagUntilTimeout>
 8006f94:	4603      	mov	r3, r0
 8006f96:	2b00      	cmp	r3, #0
 8006f98:	d001      	beq.n	8006f9e <HAL_UART_Transmit+0x11c>
    {
      return HAL_TIMEOUT;
 8006f9a:	2303      	movs	r3, #3
 8006f9c:	e006      	b.n	8006fac <HAL_UART_Transmit+0x12a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8006f9e:	68fb      	ldr	r3, [r7, #12]
 8006fa0:	2220      	movs	r2, #32
 8006fa2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    return HAL_OK;
 8006fa6:	2300      	movs	r3, #0
 8006fa8:	e000      	b.n	8006fac <HAL_UART_Transmit+0x12a>
  }
  else
  {
    return HAL_BUSY;
 8006faa:	2302      	movs	r3, #2
  }
}
 8006fac:	4618      	mov	r0, r3
 8006fae:	3718      	adds	r7, #24
 8006fb0:	46bd      	mov	sp, r7
 8006fb2:	bd80      	pop	{r7, pc}

08006fb4 <HAL_UART_Receive>:
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006fb4:	b580      	push	{r7, lr}
 8006fb6:	b088      	sub	sp, #32
 8006fb8:	af02      	add	r7, sp, #8
 8006fba:	60f8      	str	r0, [r7, #12]
 8006fbc:	60b9      	str	r1, [r7, #8]
 8006fbe:	603b      	str	r3, [r7, #0]
 8006fc0:	4613      	mov	r3, r2
 8006fc2:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 8006fc4:	2300      	movs	r3, #0
 8006fc6:	617b      	str	r3, [r7, #20]

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8006fc8:	68fb      	ldr	r3, [r7, #12]
 8006fca:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8006fce:	b2db      	uxtb	r3, r3
 8006fd0:	2b20      	cmp	r3, #32
 8006fd2:	f040 8090 	bne.w	80070f6 <HAL_UART_Receive+0x142>
  {
    if ((pData == NULL) || (Size == 0U))
 8006fd6:	68bb      	ldr	r3, [r7, #8]
 8006fd8:	2b00      	cmp	r3, #0
 8006fda:	d002      	beq.n	8006fe2 <HAL_UART_Receive+0x2e>
 8006fdc:	88fb      	ldrh	r3, [r7, #6]
 8006fde:	2b00      	cmp	r3, #0
 8006fe0:	d101      	bne.n	8006fe6 <HAL_UART_Receive+0x32>
    {
      return  HAL_ERROR;
 8006fe2:	2301      	movs	r3, #1
 8006fe4:	e088      	b.n	80070f8 <HAL_UART_Receive+0x144>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8006fe6:	68fb      	ldr	r3, [r7, #12]
 8006fe8:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8006fec:	2b01      	cmp	r3, #1
 8006fee:	d101      	bne.n	8006ff4 <HAL_UART_Receive+0x40>
 8006ff0:	2302      	movs	r3, #2
 8006ff2:	e081      	b.n	80070f8 <HAL_UART_Receive+0x144>
 8006ff4:	68fb      	ldr	r3, [r7, #12]
 8006ff6:	2201      	movs	r2, #1
 8006ff8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006ffc:	68fb      	ldr	r3, [r7, #12]
 8006ffe:	2200      	movs	r2, #0
 8007000:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8007002:	68fb      	ldr	r3, [r7, #12]
 8007004:	2222      	movs	r2, #34	; 0x22
 8007006:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 800700a:	f7fb fd5d 	bl	8002ac8 <HAL_GetTick>
 800700e:	6178      	str	r0, [r7, #20]

    huart->RxXferSize = Size;
 8007010:	68fb      	ldr	r3, [r7, #12]
 8007012:	88fa      	ldrh	r2, [r7, #6]
 8007014:	859a      	strh	r2, [r3, #44]	; 0x2c
    huart->RxXferCount = Size;
 8007016:	68fb      	ldr	r3, [r7, #12]
 8007018:	88fa      	ldrh	r2, [r7, #6]
 800701a:	85da      	strh	r2, [r3, #46]	; 0x2e

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 800701c:	68fb      	ldr	r3, [r7, #12]
 800701e:	2200      	movs	r2, #0
 8007020:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Check the remain data to be received */
    while (huart->RxXferCount > 0U)
 8007024:	e05c      	b.n	80070e0 <HAL_UART_Receive+0x12c>
    {
      huart->RxXferCount--;
 8007026:	68fb      	ldr	r3, [r7, #12]
 8007028:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800702a:	b29b      	uxth	r3, r3
 800702c:	3b01      	subs	r3, #1
 800702e:	b29a      	uxth	r2, r3
 8007030:	68fb      	ldr	r3, [r7, #12]
 8007032:	85da      	strh	r2, [r3, #46]	; 0x2e
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8007034:	68fb      	ldr	r3, [r7, #12]
 8007036:	689b      	ldr	r3, [r3, #8]
 8007038:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800703c:	d12b      	bne.n	8007096 <HAL_UART_Receive+0xe2>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 800703e:	683b      	ldr	r3, [r7, #0]
 8007040:	9300      	str	r3, [sp, #0]
 8007042:	697b      	ldr	r3, [r7, #20]
 8007044:	2200      	movs	r2, #0
 8007046:	2120      	movs	r1, #32
 8007048:	68f8      	ldr	r0, [r7, #12]
 800704a:	f000 f859 	bl	8007100 <UART_WaitOnFlagUntilTimeout>
 800704e:	4603      	mov	r3, r0
 8007050:	2b00      	cmp	r3, #0
 8007052:	d001      	beq.n	8007058 <HAL_UART_Receive+0xa4>
        {
          return HAL_TIMEOUT;
 8007054:	2303      	movs	r3, #3
 8007056:	e04f      	b.n	80070f8 <HAL_UART_Receive+0x144>
        }
        tmp = (uint16_t *) pData;
 8007058:	68bb      	ldr	r3, [r7, #8]
 800705a:	613b      	str	r3, [r7, #16]
        if (huart->Init.Parity == UART_PARITY_NONE)
 800705c:	68fb      	ldr	r3, [r7, #12]
 800705e:	691b      	ldr	r3, [r3, #16]
 8007060:	2b00      	cmp	r3, #0
 8007062:	d10c      	bne.n	800707e <HAL_UART_Receive+0xca>
        {
          *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8007064:	68fb      	ldr	r3, [r7, #12]
 8007066:	681b      	ldr	r3, [r3, #0]
 8007068:	685b      	ldr	r3, [r3, #4]
 800706a:	b29b      	uxth	r3, r3
 800706c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007070:	b29a      	uxth	r2, r3
 8007072:	693b      	ldr	r3, [r7, #16]
 8007074:	801a      	strh	r2, [r3, #0]
          pData += 2U;
 8007076:	68bb      	ldr	r3, [r7, #8]
 8007078:	3302      	adds	r3, #2
 800707a:	60bb      	str	r3, [r7, #8]
 800707c:	e030      	b.n	80070e0 <HAL_UART_Receive+0x12c>
        }
        else
        {
          *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 800707e:	68fb      	ldr	r3, [r7, #12]
 8007080:	681b      	ldr	r3, [r3, #0]
 8007082:	685b      	ldr	r3, [r3, #4]
 8007084:	b29b      	uxth	r3, r3
 8007086:	b2db      	uxtb	r3, r3
 8007088:	b29a      	uxth	r2, r3
 800708a:	693b      	ldr	r3, [r7, #16]
 800708c:	801a      	strh	r2, [r3, #0]
          pData += 1U;
 800708e:	68bb      	ldr	r3, [r7, #8]
 8007090:	3301      	adds	r3, #1
 8007092:	60bb      	str	r3, [r7, #8]
 8007094:	e024      	b.n	80070e0 <HAL_UART_Receive+0x12c>
        }

      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 8007096:	683b      	ldr	r3, [r7, #0]
 8007098:	9300      	str	r3, [sp, #0]
 800709a:	697b      	ldr	r3, [r7, #20]
 800709c:	2200      	movs	r2, #0
 800709e:	2120      	movs	r1, #32
 80070a0:	68f8      	ldr	r0, [r7, #12]
 80070a2:	f000 f82d 	bl	8007100 <UART_WaitOnFlagUntilTimeout>
 80070a6:	4603      	mov	r3, r0
 80070a8:	2b00      	cmp	r3, #0
 80070aa:	d001      	beq.n	80070b0 <HAL_UART_Receive+0xfc>
        {
          return HAL_TIMEOUT;
 80070ac:	2303      	movs	r3, #3
 80070ae:	e023      	b.n	80070f8 <HAL_UART_Receive+0x144>
        }
        if (huart->Init.Parity == UART_PARITY_NONE)
 80070b0:	68fb      	ldr	r3, [r7, #12]
 80070b2:	691b      	ldr	r3, [r3, #16]
 80070b4:	2b00      	cmp	r3, #0
 80070b6:	d108      	bne.n	80070ca <HAL_UART_Receive+0x116>
        {
          *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 80070b8:	68fb      	ldr	r3, [r7, #12]
 80070ba:	681b      	ldr	r3, [r3, #0]
 80070bc:	6859      	ldr	r1, [r3, #4]
 80070be:	68bb      	ldr	r3, [r7, #8]
 80070c0:	1c5a      	adds	r2, r3, #1
 80070c2:	60ba      	str	r2, [r7, #8]
 80070c4:	b2ca      	uxtb	r2, r1
 80070c6:	701a      	strb	r2, [r3, #0]
 80070c8:	e00a      	b.n	80070e0 <HAL_UART_Receive+0x12c>
        }
        else
        {
          *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 80070ca:	68fb      	ldr	r3, [r7, #12]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	685b      	ldr	r3, [r3, #4]
 80070d0:	b2da      	uxtb	r2, r3
 80070d2:	68bb      	ldr	r3, [r7, #8]
 80070d4:	1c59      	adds	r1, r3, #1
 80070d6:	60b9      	str	r1, [r7, #8]
 80070d8:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80070dc:	b2d2      	uxtb	r2, r2
 80070de:	701a      	strb	r2, [r3, #0]
    while (huart->RxXferCount > 0U)
 80070e0:	68fb      	ldr	r3, [r7, #12]
 80070e2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80070e4:	b29b      	uxth	r3, r3
 80070e6:	2b00      	cmp	r3, #0
 80070e8:	d19d      	bne.n	8007026 <HAL_UART_Receive+0x72>

      }
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 80070ea:	68fb      	ldr	r3, [r7, #12]
 80070ec:	2220      	movs	r2, #32
 80070ee:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

    return HAL_OK;
 80070f2:	2300      	movs	r3, #0
 80070f4:	e000      	b.n	80070f8 <HAL_UART_Receive+0x144>
  }
  else
  {
    return HAL_BUSY;
 80070f6:	2302      	movs	r3, #2
  }
}
 80070f8:	4618      	mov	r0, r3
 80070fa:	3718      	adds	r7, #24
 80070fc:	46bd      	mov	sp, r7
 80070fe:	bd80      	pop	{r7, pc}

08007100 <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 8007100:	b580      	push	{r7, lr}
 8007102:	b084      	sub	sp, #16
 8007104:	af00      	add	r7, sp, #0
 8007106:	60f8      	str	r0, [r7, #12]
 8007108:	60b9      	str	r1, [r7, #8]
 800710a:	603b      	str	r3, [r7, #0]
 800710c:	4613      	mov	r3, r2
 800710e:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8007110:	e02c      	b.n	800716c <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8007112:	69bb      	ldr	r3, [r7, #24]
 8007114:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007118:	d028      	beq.n	800716c <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800711a:	69bb      	ldr	r3, [r7, #24]
 800711c:	2b00      	cmp	r3, #0
 800711e:	d007      	beq.n	8007130 <UART_WaitOnFlagUntilTimeout+0x30>
 8007120:	f7fb fcd2 	bl	8002ac8 <HAL_GetTick>
 8007124:	4602      	mov	r2, r0
 8007126:	683b      	ldr	r3, [r7, #0]
 8007128:	1ad3      	subs	r3, r2, r3
 800712a:	69ba      	ldr	r2, [r7, #24]
 800712c:	429a      	cmp	r2, r3
 800712e:	d21d      	bcs.n	800716c <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8007130:	68fb      	ldr	r3, [r7, #12]
 8007132:	681b      	ldr	r3, [r3, #0]
 8007134:	68da      	ldr	r2, [r3, #12]
 8007136:	68fb      	ldr	r3, [r7, #12]
 8007138:	681b      	ldr	r3, [r3, #0]
 800713a:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800713e:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007140:	68fb      	ldr	r3, [r7, #12]
 8007142:	681b      	ldr	r3, [r3, #0]
 8007144:	695a      	ldr	r2, [r3, #20]
 8007146:	68fb      	ldr	r3, [r7, #12]
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	f022 0201 	bic.w	r2, r2, #1
 800714e:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
 8007150:	68fb      	ldr	r3, [r7, #12]
 8007152:	2220      	movs	r2, #32
 8007154:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 8007158:	68fb      	ldr	r3, [r7, #12]
 800715a:	2220      	movs	r2, #32
 800715c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 8007160:	68fb      	ldr	r3, [r7, #12]
 8007162:	2200      	movs	r2, #0
 8007164:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

        return HAL_TIMEOUT;
 8007168:	2303      	movs	r3, #3
 800716a:	e00f      	b.n	800718c <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800716c:	68fb      	ldr	r3, [r7, #12]
 800716e:	681b      	ldr	r3, [r3, #0]
 8007170:	681a      	ldr	r2, [r3, #0]
 8007172:	68bb      	ldr	r3, [r7, #8]
 8007174:	4013      	ands	r3, r2
 8007176:	68ba      	ldr	r2, [r7, #8]
 8007178:	429a      	cmp	r2, r3
 800717a:	bf0c      	ite	eq
 800717c:	2301      	moveq	r3, #1
 800717e:	2300      	movne	r3, #0
 8007180:	b2db      	uxtb	r3, r3
 8007182:	461a      	mov	r2, r3
 8007184:	79fb      	ldrb	r3, [r7, #7]
 8007186:	429a      	cmp	r2, r3
 8007188:	d0c3      	beq.n	8007112 <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 800718a:	2300      	movs	r3, #0
}
 800718c:	4618      	mov	r0, r3
 800718e:	3710      	adds	r7, #16
 8007190:	46bd      	mov	sp, r7
 8007192:	bd80      	pop	{r7, pc}

08007194 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8007194:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007198:	f5ad 7d02 	sub.w	sp, sp, #520	; 0x208
 800719c:	af00      	add	r7, sp, #0
 800719e:	f8c7 01fc 	str.w	r0, [r7, #508]	; 0x1fc
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80071a2:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071a6:	681b      	ldr	r3, [r3, #0]
 80071a8:	691b      	ldr	r3, [r3, #16]
 80071aa:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 80071ae:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071b2:	68d9      	ldr	r1, [r3, #12]
 80071b4:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071b8:	681a      	ldr	r2, [r3, #0]
 80071ba:	ea40 0301 	orr.w	r3, r0, r1
 80071be:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80071c0:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071c4:	689a      	ldr	r2, [r3, #8]
 80071c6:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071ca:	691b      	ldr	r3, [r3, #16]
 80071cc:	431a      	orrs	r2, r3
 80071ce:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071d2:	695b      	ldr	r3, [r3, #20]
 80071d4:	431a      	orrs	r2, r3
 80071d6:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071da:	69db      	ldr	r3, [r3, #28]
 80071dc:	4313      	orrs	r3, r2
 80071de:	f8c7 3204 	str.w	r3, [r7, #516]	; 0x204
  MODIFY_REG(huart->Instance->CR1,
 80071e2:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071e6:	681b      	ldr	r3, [r3, #0]
 80071e8:	68db      	ldr	r3, [r3, #12]
 80071ea:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 80071ee:	f021 010c 	bic.w	r1, r1, #12
 80071f2:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071f6:	681a      	ldr	r2, [r3, #0]
 80071f8:	f8d7 3204 	ldr.w	r3, [r7, #516]	; 0x204
 80071fc:	430b      	orrs	r3, r1
 80071fe:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8007200:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007204:	681b      	ldr	r3, [r3, #0]
 8007206:	695b      	ldr	r3, [r3, #20]
 8007208:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800720c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007210:	6999      	ldr	r1, [r3, #24]
 8007212:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007216:	681a      	ldr	r2, [r3, #0]
 8007218:	ea40 0301 	orr.w	r3, r0, r1
 800721c:	6153      	str	r3, [r2, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800721e:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007222:	69db      	ldr	r3, [r3, #28]
 8007224:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007228:	f040 824a 	bne.w	80076c0 <UART_SetConfig+0x52c>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800722c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007230:	681a      	ldr	r2, [r3, #0]
 8007232:	4b96      	ldr	r3, [pc, #600]	; (800748c <UART_SetConfig+0x2f8>)
 8007234:	429a      	cmp	r2, r3
 8007236:	d006      	beq.n	8007246 <UART_SetConfig+0xb2>
 8007238:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800723c:	681a      	ldr	r2, [r3, #0]
 800723e:	4b94      	ldr	r3, [pc, #592]	; (8007490 <UART_SetConfig+0x2fc>)
 8007240:	429a      	cmp	r2, r3
 8007242:	f040 8129 	bne.w	8007498 <UART_SetConfig+0x304>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8007246:	f7fd ff87 	bl	8005158 <HAL_RCC_GetPCLK2Freq>
 800724a:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800724e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007252:	2200      	movs	r2, #0
 8007254:	f8c7 31f0 	str.w	r3, [r7, #496]	; 0x1f0
 8007258:	f8c7 21f4 	str.w	r2, [r7, #500]	; 0x1f4
 800725c:	e9d7 457c 	ldrd	r4, r5, [r7, #496]	; 0x1f0
 8007260:	4622      	mov	r2, r4
 8007262:	462b      	mov	r3, r5
 8007264:	1891      	adds	r1, r2, r2
 8007266:	f8c7 10d0 	str.w	r1, [r7, #208]	; 0xd0
 800726a:	415b      	adcs	r3, r3
 800726c:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8007270:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	; 0xd0
 8007274:	4621      	mov	r1, r4
 8007276:	1851      	adds	r1, r2, r1
 8007278:	f8c7 10c8 	str.w	r1, [r7, #200]	; 0xc8
 800727c:	4629      	mov	r1, r5
 800727e:	414b      	adcs	r3, r1
 8007280:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8007284:	f04f 0200 	mov.w	r2, #0
 8007288:	f04f 0300 	mov.w	r3, #0
 800728c:	e9d7 8932 	ldrd	r8, r9, [r7, #200]	; 0xc8
 8007290:	4649      	mov	r1, r9
 8007292:	00cb      	lsls	r3, r1, #3
 8007294:	4641      	mov	r1, r8
 8007296:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800729a:	4641      	mov	r1, r8
 800729c:	00ca      	lsls	r2, r1, #3
 800729e:	4610      	mov	r0, r2
 80072a0:	4619      	mov	r1, r3
 80072a2:	4603      	mov	r3, r0
 80072a4:	4622      	mov	r2, r4
 80072a6:	189b      	adds	r3, r3, r2
 80072a8:	f8c7 31e8 	str.w	r3, [r7, #488]	; 0x1e8
 80072ac:	462b      	mov	r3, r5
 80072ae:	460a      	mov	r2, r1
 80072b0:	eb42 0303 	adc.w	r3, r2, r3
 80072b4:	f8c7 31ec 	str.w	r3, [r7, #492]	; 0x1ec
 80072b8:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80072bc:	685b      	ldr	r3, [r3, #4]
 80072be:	2200      	movs	r2, #0
 80072c0:	f8c7 31e0 	str.w	r3, [r7, #480]	; 0x1e0
 80072c4:	f8c7 21e4 	str.w	r2, [r7, #484]	; 0x1e4
 80072c8:	e9d7 1278 	ldrd	r1, r2, [r7, #480]	; 0x1e0
 80072cc:	460b      	mov	r3, r1
 80072ce:	18db      	adds	r3, r3, r3
 80072d0:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 80072d4:	4613      	mov	r3, r2
 80072d6:	eb42 0303 	adc.w	r3, r2, r3
 80072da:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 80072de:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 80072e2:	e9d7 017a 	ldrd	r0, r1, [r7, #488]	; 0x1e8
 80072e6:	f7f9 fc6f 	bl	8000bc8 <__aeabi_uldivmod>
 80072ea:	4602      	mov	r2, r0
 80072ec:	460b      	mov	r3, r1
 80072ee:	4b69      	ldr	r3, [pc, #420]	; (8007494 <UART_SetConfig+0x300>)
 80072f0:	fba3 2302 	umull	r2, r3, r3, r2
 80072f4:	095b      	lsrs	r3, r3, #5
 80072f6:	011c      	lsls	r4, r3, #4
 80072f8:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80072fc:	2200      	movs	r2, #0
 80072fe:	f8c7 31d8 	str.w	r3, [r7, #472]	; 0x1d8
 8007302:	f8c7 21dc 	str.w	r2, [r7, #476]	; 0x1dc
 8007306:	e9d7 8976 	ldrd	r8, r9, [r7, #472]	; 0x1d8
 800730a:	4642      	mov	r2, r8
 800730c:	464b      	mov	r3, r9
 800730e:	1891      	adds	r1, r2, r2
 8007310:	f8c7 10b8 	str.w	r1, [r7, #184]	; 0xb8
 8007314:	415b      	adcs	r3, r3
 8007316:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 800731a:	e9d7 232e 	ldrd	r2, r3, [r7, #184]	; 0xb8
 800731e:	4641      	mov	r1, r8
 8007320:	1851      	adds	r1, r2, r1
 8007322:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8007326:	4649      	mov	r1, r9
 8007328:	414b      	adcs	r3, r1
 800732a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800732e:	f04f 0200 	mov.w	r2, #0
 8007332:	f04f 0300 	mov.w	r3, #0
 8007336:	e9d7 ab2c 	ldrd	sl, fp, [r7, #176]	; 0xb0
 800733a:	4659      	mov	r1, fp
 800733c:	00cb      	lsls	r3, r1, #3
 800733e:	4651      	mov	r1, sl
 8007340:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007344:	4651      	mov	r1, sl
 8007346:	00ca      	lsls	r2, r1, #3
 8007348:	4610      	mov	r0, r2
 800734a:	4619      	mov	r1, r3
 800734c:	4603      	mov	r3, r0
 800734e:	4642      	mov	r2, r8
 8007350:	189b      	adds	r3, r3, r2
 8007352:	f8c7 31d0 	str.w	r3, [r7, #464]	; 0x1d0
 8007356:	464b      	mov	r3, r9
 8007358:	460a      	mov	r2, r1
 800735a:	eb42 0303 	adc.w	r3, r2, r3
 800735e:	f8c7 31d4 	str.w	r3, [r7, #468]	; 0x1d4
 8007362:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007366:	685b      	ldr	r3, [r3, #4]
 8007368:	2200      	movs	r2, #0
 800736a:	f8c7 31c8 	str.w	r3, [r7, #456]	; 0x1c8
 800736e:	f8c7 21cc 	str.w	r2, [r7, #460]	; 0x1cc
 8007372:	e9d7 1272 	ldrd	r1, r2, [r7, #456]	; 0x1c8
 8007376:	460b      	mov	r3, r1
 8007378:	18db      	adds	r3, r3, r3
 800737a:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800737e:	4613      	mov	r3, r2
 8007380:	eb42 0303 	adc.w	r3, r2, r3
 8007384:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8007388:	e9d7 232a 	ldrd	r2, r3, [r7, #168]	; 0xa8
 800738c:	e9d7 0174 	ldrd	r0, r1, [r7, #464]	; 0x1d0
 8007390:	f7f9 fc1a 	bl	8000bc8 <__aeabi_uldivmod>
 8007394:	4602      	mov	r2, r0
 8007396:	460b      	mov	r3, r1
 8007398:	4611      	mov	r1, r2
 800739a:	4b3e      	ldr	r3, [pc, #248]	; (8007494 <UART_SetConfig+0x300>)
 800739c:	fba3 2301 	umull	r2, r3, r3, r1
 80073a0:	095b      	lsrs	r3, r3, #5
 80073a2:	2264      	movs	r2, #100	; 0x64
 80073a4:	fb02 f303 	mul.w	r3, r2, r3
 80073a8:	1acb      	subs	r3, r1, r3
 80073aa:	00db      	lsls	r3, r3, #3
 80073ac:	f103 0232 	add.w	r2, r3, #50	; 0x32
 80073b0:	4b38      	ldr	r3, [pc, #224]	; (8007494 <UART_SetConfig+0x300>)
 80073b2:	fba3 2302 	umull	r2, r3, r3, r2
 80073b6:	095b      	lsrs	r3, r3, #5
 80073b8:	005b      	lsls	r3, r3, #1
 80073ba:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80073be:	441c      	add	r4, r3
 80073c0:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80073c4:	2200      	movs	r2, #0
 80073c6:	f8c7 31c0 	str.w	r3, [r7, #448]	; 0x1c0
 80073ca:	f8c7 21c4 	str.w	r2, [r7, #452]	; 0x1c4
 80073ce:	e9d7 8970 	ldrd	r8, r9, [r7, #448]	; 0x1c0
 80073d2:	4642      	mov	r2, r8
 80073d4:	464b      	mov	r3, r9
 80073d6:	1891      	adds	r1, r2, r2
 80073d8:	f8c7 10a0 	str.w	r1, [r7, #160]	; 0xa0
 80073dc:	415b      	adcs	r3, r3
 80073de:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80073e2:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 80073e6:	4641      	mov	r1, r8
 80073e8:	1851      	adds	r1, r2, r1
 80073ea:	f8c7 1098 	str.w	r1, [r7, #152]	; 0x98
 80073ee:	4649      	mov	r1, r9
 80073f0:	414b      	adcs	r3, r1
 80073f2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80073f6:	f04f 0200 	mov.w	r2, #0
 80073fa:	f04f 0300 	mov.w	r3, #0
 80073fe:	e9d7 ab26 	ldrd	sl, fp, [r7, #152]	; 0x98
 8007402:	4659      	mov	r1, fp
 8007404:	00cb      	lsls	r3, r1, #3
 8007406:	4651      	mov	r1, sl
 8007408:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800740c:	4651      	mov	r1, sl
 800740e:	00ca      	lsls	r2, r1, #3
 8007410:	4610      	mov	r0, r2
 8007412:	4619      	mov	r1, r3
 8007414:	4603      	mov	r3, r0
 8007416:	4642      	mov	r2, r8
 8007418:	189b      	adds	r3, r3, r2
 800741a:	f8c7 31b8 	str.w	r3, [r7, #440]	; 0x1b8
 800741e:	464b      	mov	r3, r9
 8007420:	460a      	mov	r2, r1
 8007422:	eb42 0303 	adc.w	r3, r2, r3
 8007426:	f8c7 31bc 	str.w	r3, [r7, #444]	; 0x1bc
 800742a:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800742e:	685b      	ldr	r3, [r3, #4]
 8007430:	2200      	movs	r2, #0
 8007432:	f8c7 31b0 	str.w	r3, [r7, #432]	; 0x1b0
 8007436:	f8c7 21b4 	str.w	r2, [r7, #436]	; 0x1b4
 800743a:	e9d7 126c 	ldrd	r1, r2, [r7, #432]	; 0x1b0
 800743e:	460b      	mov	r3, r1
 8007440:	18db      	adds	r3, r3, r3
 8007442:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8007446:	4613      	mov	r3, r2
 8007448:	eb42 0303 	adc.w	r3, r2, r3
 800744c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8007450:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 8007454:	e9d7 016e 	ldrd	r0, r1, [r7, #440]	; 0x1b8
 8007458:	f7f9 fbb6 	bl	8000bc8 <__aeabi_uldivmod>
 800745c:	4602      	mov	r2, r0
 800745e:	460b      	mov	r3, r1
 8007460:	4b0c      	ldr	r3, [pc, #48]	; (8007494 <UART_SetConfig+0x300>)
 8007462:	fba3 1302 	umull	r1, r3, r3, r2
 8007466:	095b      	lsrs	r3, r3, #5
 8007468:	2164      	movs	r1, #100	; 0x64
 800746a:	fb01 f303 	mul.w	r3, r1, r3
 800746e:	1ad3      	subs	r3, r2, r3
 8007470:	00db      	lsls	r3, r3, #3
 8007472:	3332      	adds	r3, #50	; 0x32
 8007474:	4a07      	ldr	r2, [pc, #28]	; (8007494 <UART_SetConfig+0x300>)
 8007476:	fba2 2303 	umull	r2, r3, r2, r3
 800747a:	095b      	lsrs	r3, r3, #5
 800747c:	f003 0207 	and.w	r2, r3, #7
 8007480:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007484:	681b      	ldr	r3, [r3, #0]
 8007486:	4422      	add	r2, r4
 8007488:	609a      	str	r2, [r3, #8]
 800748a:	e349      	b.n	8007b20 <UART_SetConfig+0x98c>
 800748c:	40011000 	.word	0x40011000
 8007490:	40011400 	.word	0x40011400
 8007494:	51eb851f 	.word	0x51eb851f
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8007498:	f7fd fe4a 	bl	8005130 <HAL_RCC_GetPCLK1Freq>
 800749c:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80074a0:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80074a4:	2200      	movs	r2, #0
 80074a6:	f8c7 31a8 	str.w	r3, [r7, #424]	; 0x1a8
 80074aa:	f8c7 21ac 	str.w	r2, [r7, #428]	; 0x1ac
 80074ae:	e9d7 456a 	ldrd	r4, r5, [r7, #424]	; 0x1a8
 80074b2:	4622      	mov	r2, r4
 80074b4:	462b      	mov	r3, r5
 80074b6:	1891      	adds	r1, r2, r2
 80074b8:	f8c7 1088 	str.w	r1, [r7, #136]	; 0x88
 80074bc:	415b      	adcs	r3, r3
 80074be:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80074c2:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 80074c6:	4621      	mov	r1, r4
 80074c8:	eb12 0a01 	adds.w	sl, r2, r1
 80074cc:	4629      	mov	r1, r5
 80074ce:	eb43 0b01 	adc.w	fp, r3, r1
 80074d2:	f04f 0200 	mov.w	r2, #0
 80074d6:	f04f 0300 	mov.w	r3, #0
 80074da:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80074de:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80074e2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80074e6:	4692      	mov	sl, r2
 80074e8:	469b      	mov	fp, r3
 80074ea:	4623      	mov	r3, r4
 80074ec:	eb1a 0303 	adds.w	r3, sl, r3
 80074f0:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 80074f4:	462b      	mov	r3, r5
 80074f6:	eb4b 0303 	adc.w	r3, fp, r3
 80074fa:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 80074fe:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007502:	685b      	ldr	r3, [r3, #4]
 8007504:	2200      	movs	r2, #0
 8007506:	f8c7 3198 	str.w	r3, [r7, #408]	; 0x198
 800750a:	f8c7 219c 	str.w	r2, [r7, #412]	; 0x19c
 800750e:	e9d7 1266 	ldrd	r1, r2, [r7, #408]	; 0x198
 8007512:	460b      	mov	r3, r1
 8007514:	18db      	adds	r3, r3, r3
 8007516:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800751a:	4613      	mov	r3, r2
 800751c:	eb42 0303 	adc.w	r3, r2, r3
 8007520:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8007524:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8007528:	e9d7 0168 	ldrd	r0, r1, [r7, #416]	; 0x1a0
 800752c:	f7f9 fb4c 	bl	8000bc8 <__aeabi_uldivmod>
 8007530:	4602      	mov	r2, r0
 8007532:	460b      	mov	r3, r1
 8007534:	4b61      	ldr	r3, [pc, #388]	; (80076bc <UART_SetConfig+0x528>)
 8007536:	fba3 2302 	umull	r2, r3, r3, r2
 800753a:	095b      	lsrs	r3, r3, #5
 800753c:	011c      	lsls	r4, r3, #4
 800753e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007542:	2200      	movs	r2, #0
 8007544:	f8c7 3190 	str.w	r3, [r7, #400]	; 0x190
 8007548:	f8c7 2194 	str.w	r2, [r7, #404]	; 0x194
 800754c:	e9d7 8964 	ldrd	r8, r9, [r7, #400]	; 0x190
 8007550:	4642      	mov	r2, r8
 8007552:	464b      	mov	r3, r9
 8007554:	1891      	adds	r1, r2, r2
 8007556:	67b9      	str	r1, [r7, #120]	; 0x78
 8007558:	415b      	adcs	r3, r3
 800755a:	67fb      	str	r3, [r7, #124]	; 0x7c
 800755c:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8007560:	4641      	mov	r1, r8
 8007562:	1851      	adds	r1, r2, r1
 8007564:	6739      	str	r1, [r7, #112]	; 0x70
 8007566:	4649      	mov	r1, r9
 8007568:	414b      	adcs	r3, r1
 800756a:	677b      	str	r3, [r7, #116]	; 0x74
 800756c:	f04f 0200 	mov.w	r2, #0
 8007570:	f04f 0300 	mov.w	r3, #0
 8007574:	e9d7 ab1c 	ldrd	sl, fp, [r7, #112]	; 0x70
 8007578:	4659      	mov	r1, fp
 800757a:	00cb      	lsls	r3, r1, #3
 800757c:	4651      	mov	r1, sl
 800757e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007582:	4651      	mov	r1, sl
 8007584:	00ca      	lsls	r2, r1, #3
 8007586:	4610      	mov	r0, r2
 8007588:	4619      	mov	r1, r3
 800758a:	4603      	mov	r3, r0
 800758c:	4642      	mov	r2, r8
 800758e:	189b      	adds	r3, r3, r2
 8007590:	f8c7 3188 	str.w	r3, [r7, #392]	; 0x188
 8007594:	464b      	mov	r3, r9
 8007596:	460a      	mov	r2, r1
 8007598:	eb42 0303 	adc.w	r3, r2, r3
 800759c:	f8c7 318c 	str.w	r3, [r7, #396]	; 0x18c
 80075a0:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80075a4:	685b      	ldr	r3, [r3, #4]
 80075a6:	2200      	movs	r2, #0
 80075a8:	f8c7 3180 	str.w	r3, [r7, #384]	; 0x180
 80075ac:	f8c7 2184 	str.w	r2, [r7, #388]	; 0x184
 80075b0:	e9d7 1260 	ldrd	r1, r2, [r7, #384]	; 0x180
 80075b4:	460b      	mov	r3, r1
 80075b6:	18db      	adds	r3, r3, r3
 80075b8:	66bb      	str	r3, [r7, #104]	; 0x68
 80075ba:	4613      	mov	r3, r2
 80075bc:	eb42 0303 	adc.w	r3, r2, r3
 80075c0:	66fb      	str	r3, [r7, #108]	; 0x6c
 80075c2:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 80075c6:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 80075ca:	f7f9 fafd 	bl	8000bc8 <__aeabi_uldivmod>
 80075ce:	4602      	mov	r2, r0
 80075d0:	460b      	mov	r3, r1
 80075d2:	4611      	mov	r1, r2
 80075d4:	4b39      	ldr	r3, [pc, #228]	; (80076bc <UART_SetConfig+0x528>)
 80075d6:	fba3 2301 	umull	r2, r3, r3, r1
 80075da:	095b      	lsrs	r3, r3, #5
 80075dc:	2264      	movs	r2, #100	; 0x64
 80075de:	fb02 f303 	mul.w	r3, r2, r3
 80075e2:	1acb      	subs	r3, r1, r3
 80075e4:	00db      	lsls	r3, r3, #3
 80075e6:	f103 0232 	add.w	r2, r3, #50	; 0x32
 80075ea:	4b34      	ldr	r3, [pc, #208]	; (80076bc <UART_SetConfig+0x528>)
 80075ec:	fba3 2302 	umull	r2, r3, r3, r2
 80075f0:	095b      	lsrs	r3, r3, #5
 80075f2:	005b      	lsls	r3, r3, #1
 80075f4:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80075f8:	441c      	add	r4, r3
 80075fa:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80075fe:	2200      	movs	r2, #0
 8007600:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8007604:	f8c7 217c 	str.w	r2, [r7, #380]	; 0x17c
 8007608:	e9d7 895e 	ldrd	r8, r9, [r7, #376]	; 0x178
 800760c:	4642      	mov	r2, r8
 800760e:	464b      	mov	r3, r9
 8007610:	1891      	adds	r1, r2, r2
 8007612:	6639      	str	r1, [r7, #96]	; 0x60
 8007614:	415b      	adcs	r3, r3
 8007616:	667b      	str	r3, [r7, #100]	; 0x64
 8007618:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800761c:	4641      	mov	r1, r8
 800761e:	1851      	adds	r1, r2, r1
 8007620:	65b9      	str	r1, [r7, #88]	; 0x58
 8007622:	4649      	mov	r1, r9
 8007624:	414b      	adcs	r3, r1
 8007626:	65fb      	str	r3, [r7, #92]	; 0x5c
 8007628:	f04f 0200 	mov.w	r2, #0
 800762c:	f04f 0300 	mov.w	r3, #0
 8007630:	e9d7 ab16 	ldrd	sl, fp, [r7, #88]	; 0x58
 8007634:	4659      	mov	r1, fp
 8007636:	00cb      	lsls	r3, r1, #3
 8007638:	4651      	mov	r1, sl
 800763a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800763e:	4651      	mov	r1, sl
 8007640:	00ca      	lsls	r2, r1, #3
 8007642:	4610      	mov	r0, r2
 8007644:	4619      	mov	r1, r3
 8007646:	4603      	mov	r3, r0
 8007648:	4642      	mov	r2, r8
 800764a:	189b      	adds	r3, r3, r2
 800764c:	f8c7 3170 	str.w	r3, [r7, #368]	; 0x170
 8007650:	464b      	mov	r3, r9
 8007652:	460a      	mov	r2, r1
 8007654:	eb42 0303 	adc.w	r3, r2, r3
 8007658:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800765c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007660:	685b      	ldr	r3, [r3, #4]
 8007662:	2200      	movs	r2, #0
 8007664:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
 8007668:	f8c7 216c 	str.w	r2, [r7, #364]	; 0x16c
 800766c:	e9d7 125a 	ldrd	r1, r2, [r7, #360]	; 0x168
 8007670:	460b      	mov	r3, r1
 8007672:	18db      	adds	r3, r3, r3
 8007674:	653b      	str	r3, [r7, #80]	; 0x50
 8007676:	4613      	mov	r3, r2
 8007678:	eb42 0303 	adc.w	r3, r2, r3
 800767c:	657b      	str	r3, [r7, #84]	; 0x54
 800767e:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8007682:	e9d7 015c 	ldrd	r0, r1, [r7, #368]	; 0x170
 8007686:	f7f9 fa9f 	bl	8000bc8 <__aeabi_uldivmod>
 800768a:	4602      	mov	r2, r0
 800768c:	460b      	mov	r3, r1
 800768e:	4b0b      	ldr	r3, [pc, #44]	; (80076bc <UART_SetConfig+0x528>)
 8007690:	fba3 1302 	umull	r1, r3, r3, r2
 8007694:	095b      	lsrs	r3, r3, #5
 8007696:	2164      	movs	r1, #100	; 0x64
 8007698:	fb01 f303 	mul.w	r3, r1, r3
 800769c:	1ad3      	subs	r3, r2, r3
 800769e:	00db      	lsls	r3, r3, #3
 80076a0:	3332      	adds	r3, #50	; 0x32
 80076a2:	4a06      	ldr	r2, [pc, #24]	; (80076bc <UART_SetConfig+0x528>)
 80076a4:	fba2 2303 	umull	r2, r3, r2, r3
 80076a8:	095b      	lsrs	r3, r3, #5
 80076aa:	f003 0207 	and.w	r2, r3, #7
 80076ae:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80076b2:	681b      	ldr	r3, [r3, #0]
 80076b4:	4422      	add	r2, r4
 80076b6:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 80076b8:	e232      	b.n	8007b20 <UART_SetConfig+0x98c>
 80076ba:	bf00      	nop
 80076bc:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80076c0:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80076c4:	681a      	ldr	r2, [r3, #0]
 80076c6:	4b8d      	ldr	r3, [pc, #564]	; (80078fc <UART_SetConfig+0x768>)
 80076c8:	429a      	cmp	r2, r3
 80076ca:	d006      	beq.n	80076da <UART_SetConfig+0x546>
 80076cc:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80076d0:	681a      	ldr	r2, [r3, #0]
 80076d2:	4b8b      	ldr	r3, [pc, #556]	; (8007900 <UART_SetConfig+0x76c>)
 80076d4:	429a      	cmp	r2, r3
 80076d6:	f040 8117 	bne.w	8007908 <UART_SetConfig+0x774>
      pclk = HAL_RCC_GetPCLK2Freq();
 80076da:	f7fd fd3d 	bl	8005158 <HAL_RCC_GetPCLK2Freq>
 80076de:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 80076e2:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80076e6:	2200      	movs	r2, #0
 80076e8:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
 80076ec:	f8c7 2164 	str.w	r2, [r7, #356]	; 0x164
 80076f0:	e9d7 4558 	ldrd	r4, r5, [r7, #352]	; 0x160
 80076f4:	4622      	mov	r2, r4
 80076f6:	462b      	mov	r3, r5
 80076f8:	1891      	adds	r1, r2, r2
 80076fa:	64b9      	str	r1, [r7, #72]	; 0x48
 80076fc:	415b      	adcs	r3, r3
 80076fe:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007700:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8007704:	4621      	mov	r1, r4
 8007706:	eb12 0801 	adds.w	r8, r2, r1
 800770a:	4629      	mov	r1, r5
 800770c:	eb43 0901 	adc.w	r9, r3, r1
 8007710:	f04f 0200 	mov.w	r2, #0
 8007714:	f04f 0300 	mov.w	r3, #0
 8007718:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800771c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007720:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8007724:	4690      	mov	r8, r2
 8007726:	4699      	mov	r9, r3
 8007728:	4623      	mov	r3, r4
 800772a:	eb18 0303 	adds.w	r3, r8, r3
 800772e:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 8007732:	462b      	mov	r3, r5
 8007734:	eb49 0303 	adc.w	r3, r9, r3
 8007738:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c
 800773c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007740:	685b      	ldr	r3, [r3, #4]
 8007742:	2200      	movs	r2, #0
 8007744:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8007748:	f8c7 2154 	str.w	r2, [r7, #340]	; 0x154
 800774c:	f04f 0200 	mov.w	r2, #0
 8007750:	f04f 0300 	mov.w	r3, #0
 8007754:	e9d7 4554 	ldrd	r4, r5, [r7, #336]	; 0x150
 8007758:	4629      	mov	r1, r5
 800775a:	008b      	lsls	r3, r1, #2
 800775c:	4621      	mov	r1, r4
 800775e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007762:	4621      	mov	r1, r4
 8007764:	008a      	lsls	r2, r1, #2
 8007766:	e9d7 0156 	ldrd	r0, r1, [r7, #344]	; 0x158
 800776a:	f7f9 fa2d 	bl	8000bc8 <__aeabi_uldivmod>
 800776e:	4602      	mov	r2, r0
 8007770:	460b      	mov	r3, r1
 8007772:	4b64      	ldr	r3, [pc, #400]	; (8007904 <UART_SetConfig+0x770>)
 8007774:	fba3 2302 	umull	r2, r3, r3, r2
 8007778:	095b      	lsrs	r3, r3, #5
 800777a:	011c      	lsls	r4, r3, #4
 800777c:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007780:	2200      	movs	r2, #0
 8007782:	f8c7 3148 	str.w	r3, [r7, #328]	; 0x148
 8007786:	f8c7 214c 	str.w	r2, [r7, #332]	; 0x14c
 800778a:	e9d7 8952 	ldrd	r8, r9, [r7, #328]	; 0x148
 800778e:	4642      	mov	r2, r8
 8007790:	464b      	mov	r3, r9
 8007792:	1891      	adds	r1, r2, r2
 8007794:	6439      	str	r1, [r7, #64]	; 0x40
 8007796:	415b      	adcs	r3, r3
 8007798:	647b      	str	r3, [r7, #68]	; 0x44
 800779a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800779e:	4641      	mov	r1, r8
 80077a0:	1851      	adds	r1, r2, r1
 80077a2:	63b9      	str	r1, [r7, #56]	; 0x38
 80077a4:	4649      	mov	r1, r9
 80077a6:	414b      	adcs	r3, r1
 80077a8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80077aa:	f04f 0200 	mov.w	r2, #0
 80077ae:	f04f 0300 	mov.w	r3, #0
 80077b2:	e9d7 ab0e 	ldrd	sl, fp, [r7, #56]	; 0x38
 80077b6:	4659      	mov	r1, fp
 80077b8:	00cb      	lsls	r3, r1, #3
 80077ba:	4651      	mov	r1, sl
 80077bc:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80077c0:	4651      	mov	r1, sl
 80077c2:	00ca      	lsls	r2, r1, #3
 80077c4:	4610      	mov	r0, r2
 80077c6:	4619      	mov	r1, r3
 80077c8:	4603      	mov	r3, r0
 80077ca:	4642      	mov	r2, r8
 80077cc:	189b      	adds	r3, r3, r2
 80077ce:	f8c7 3140 	str.w	r3, [r7, #320]	; 0x140
 80077d2:	464b      	mov	r3, r9
 80077d4:	460a      	mov	r2, r1
 80077d6:	eb42 0303 	adc.w	r3, r2, r3
 80077da:	f8c7 3144 	str.w	r3, [r7, #324]	; 0x144
 80077de:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80077e2:	685b      	ldr	r3, [r3, #4]
 80077e4:	2200      	movs	r2, #0
 80077e6:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
 80077ea:	f8c7 213c 	str.w	r2, [r7, #316]	; 0x13c
 80077ee:	f04f 0200 	mov.w	r2, #0
 80077f2:	f04f 0300 	mov.w	r3, #0
 80077f6:	e9d7 894e 	ldrd	r8, r9, [r7, #312]	; 0x138
 80077fa:	4649      	mov	r1, r9
 80077fc:	008b      	lsls	r3, r1, #2
 80077fe:	4641      	mov	r1, r8
 8007800:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007804:	4641      	mov	r1, r8
 8007806:	008a      	lsls	r2, r1, #2
 8007808:	e9d7 0150 	ldrd	r0, r1, [r7, #320]	; 0x140
 800780c:	f7f9 f9dc 	bl	8000bc8 <__aeabi_uldivmod>
 8007810:	4602      	mov	r2, r0
 8007812:	460b      	mov	r3, r1
 8007814:	4b3b      	ldr	r3, [pc, #236]	; (8007904 <UART_SetConfig+0x770>)
 8007816:	fba3 1302 	umull	r1, r3, r3, r2
 800781a:	095b      	lsrs	r3, r3, #5
 800781c:	2164      	movs	r1, #100	; 0x64
 800781e:	fb01 f303 	mul.w	r3, r1, r3
 8007822:	1ad3      	subs	r3, r2, r3
 8007824:	011b      	lsls	r3, r3, #4
 8007826:	3332      	adds	r3, #50	; 0x32
 8007828:	4a36      	ldr	r2, [pc, #216]	; (8007904 <UART_SetConfig+0x770>)
 800782a:	fba2 2303 	umull	r2, r3, r2, r3
 800782e:	095b      	lsrs	r3, r3, #5
 8007830:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8007834:	441c      	add	r4, r3
 8007836:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800783a:	2200      	movs	r2, #0
 800783c:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 8007840:	f8c7 2134 	str.w	r2, [r7, #308]	; 0x134
 8007844:	e9d7 894c 	ldrd	r8, r9, [r7, #304]	; 0x130
 8007848:	4642      	mov	r2, r8
 800784a:	464b      	mov	r3, r9
 800784c:	1891      	adds	r1, r2, r2
 800784e:	6339      	str	r1, [r7, #48]	; 0x30
 8007850:	415b      	adcs	r3, r3
 8007852:	637b      	str	r3, [r7, #52]	; 0x34
 8007854:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8007858:	4641      	mov	r1, r8
 800785a:	1851      	adds	r1, r2, r1
 800785c:	62b9      	str	r1, [r7, #40]	; 0x28
 800785e:	4649      	mov	r1, r9
 8007860:	414b      	adcs	r3, r1
 8007862:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007864:	f04f 0200 	mov.w	r2, #0
 8007868:	f04f 0300 	mov.w	r3, #0
 800786c:	e9d7 ab0a 	ldrd	sl, fp, [r7, #40]	; 0x28
 8007870:	4659      	mov	r1, fp
 8007872:	00cb      	lsls	r3, r1, #3
 8007874:	4651      	mov	r1, sl
 8007876:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800787a:	4651      	mov	r1, sl
 800787c:	00ca      	lsls	r2, r1, #3
 800787e:	4610      	mov	r0, r2
 8007880:	4619      	mov	r1, r3
 8007882:	4603      	mov	r3, r0
 8007884:	4642      	mov	r2, r8
 8007886:	189b      	adds	r3, r3, r2
 8007888:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 800788c:	464b      	mov	r3, r9
 800788e:	460a      	mov	r2, r1
 8007890:	eb42 0303 	adc.w	r3, r2, r3
 8007894:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8007898:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800789c:	685b      	ldr	r3, [r3, #4]
 800789e:	2200      	movs	r2, #0
 80078a0:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 80078a4:	f8c7 2124 	str.w	r2, [r7, #292]	; 0x124
 80078a8:	f04f 0200 	mov.w	r2, #0
 80078ac:	f04f 0300 	mov.w	r3, #0
 80078b0:	e9d7 8948 	ldrd	r8, r9, [r7, #288]	; 0x120
 80078b4:	4649      	mov	r1, r9
 80078b6:	008b      	lsls	r3, r1, #2
 80078b8:	4641      	mov	r1, r8
 80078ba:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80078be:	4641      	mov	r1, r8
 80078c0:	008a      	lsls	r2, r1, #2
 80078c2:	e9d7 014a 	ldrd	r0, r1, [r7, #296]	; 0x128
 80078c6:	f7f9 f97f 	bl	8000bc8 <__aeabi_uldivmod>
 80078ca:	4602      	mov	r2, r0
 80078cc:	460b      	mov	r3, r1
 80078ce:	4b0d      	ldr	r3, [pc, #52]	; (8007904 <UART_SetConfig+0x770>)
 80078d0:	fba3 1302 	umull	r1, r3, r3, r2
 80078d4:	095b      	lsrs	r3, r3, #5
 80078d6:	2164      	movs	r1, #100	; 0x64
 80078d8:	fb01 f303 	mul.w	r3, r1, r3
 80078dc:	1ad3      	subs	r3, r2, r3
 80078de:	011b      	lsls	r3, r3, #4
 80078e0:	3332      	adds	r3, #50	; 0x32
 80078e2:	4a08      	ldr	r2, [pc, #32]	; (8007904 <UART_SetConfig+0x770>)
 80078e4:	fba2 2303 	umull	r2, r3, r2, r3
 80078e8:	095b      	lsrs	r3, r3, #5
 80078ea:	f003 020f 	and.w	r2, r3, #15
 80078ee:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80078f2:	681b      	ldr	r3, [r3, #0]
 80078f4:	4422      	add	r2, r4
 80078f6:	609a      	str	r2, [r3, #8]
 80078f8:	e112      	b.n	8007b20 <UART_SetConfig+0x98c>
 80078fa:	bf00      	nop
 80078fc:	40011000 	.word	0x40011000
 8007900:	40011400 	.word	0x40011400
 8007904:	51eb851f 	.word	0x51eb851f
      pclk = HAL_RCC_GetPCLK1Freq();
 8007908:	f7fd fc12 	bl	8005130 <HAL_RCC_GetPCLK1Freq>
 800790c:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8007910:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007914:	2200      	movs	r2, #0
 8007916:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 800791a:	f8c7 211c 	str.w	r2, [r7, #284]	; 0x11c
 800791e:	e9d7 8946 	ldrd	r8, r9, [r7, #280]	; 0x118
 8007922:	4642      	mov	r2, r8
 8007924:	464b      	mov	r3, r9
 8007926:	1891      	adds	r1, r2, r2
 8007928:	6239      	str	r1, [r7, #32]
 800792a:	415b      	adcs	r3, r3
 800792c:	627b      	str	r3, [r7, #36]	; 0x24
 800792e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8007932:	4641      	mov	r1, r8
 8007934:	1854      	adds	r4, r2, r1
 8007936:	4649      	mov	r1, r9
 8007938:	eb43 0501 	adc.w	r5, r3, r1
 800793c:	f04f 0200 	mov.w	r2, #0
 8007940:	f04f 0300 	mov.w	r3, #0
 8007944:	00eb      	lsls	r3, r5, #3
 8007946:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800794a:	00e2      	lsls	r2, r4, #3
 800794c:	4614      	mov	r4, r2
 800794e:	461d      	mov	r5, r3
 8007950:	4643      	mov	r3, r8
 8007952:	18e3      	adds	r3, r4, r3
 8007954:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 8007958:	464b      	mov	r3, r9
 800795a:	eb45 0303 	adc.w	r3, r5, r3
 800795e:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 8007962:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007966:	685b      	ldr	r3, [r3, #4]
 8007968:	2200      	movs	r2, #0
 800796a:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 800796e:	f8c7 210c 	str.w	r2, [r7, #268]	; 0x10c
 8007972:	f04f 0200 	mov.w	r2, #0
 8007976:	f04f 0300 	mov.w	r3, #0
 800797a:	e9d7 4542 	ldrd	r4, r5, [r7, #264]	; 0x108
 800797e:	4629      	mov	r1, r5
 8007980:	008b      	lsls	r3, r1, #2
 8007982:	4621      	mov	r1, r4
 8007984:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007988:	4621      	mov	r1, r4
 800798a:	008a      	lsls	r2, r1, #2
 800798c:	e9d7 0144 	ldrd	r0, r1, [r7, #272]	; 0x110
 8007990:	f7f9 f91a 	bl	8000bc8 <__aeabi_uldivmod>
 8007994:	4602      	mov	r2, r0
 8007996:	460b      	mov	r3, r1
 8007998:	4b64      	ldr	r3, [pc, #400]	; (8007b2c <UART_SetConfig+0x998>)
 800799a:	fba3 2302 	umull	r2, r3, r3, r2
 800799e:	095b      	lsrs	r3, r3, #5
 80079a0:	011c      	lsls	r4, r3, #4
 80079a2:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80079a6:	2200      	movs	r2, #0
 80079a8:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 80079ac:	f8c7 2104 	str.w	r2, [r7, #260]	; 0x104
 80079b0:	e9d7 8940 	ldrd	r8, r9, [r7, #256]	; 0x100
 80079b4:	4642      	mov	r2, r8
 80079b6:	464b      	mov	r3, r9
 80079b8:	1891      	adds	r1, r2, r2
 80079ba:	61b9      	str	r1, [r7, #24]
 80079bc:	415b      	adcs	r3, r3
 80079be:	61fb      	str	r3, [r7, #28]
 80079c0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80079c4:	4641      	mov	r1, r8
 80079c6:	1851      	adds	r1, r2, r1
 80079c8:	6139      	str	r1, [r7, #16]
 80079ca:	4649      	mov	r1, r9
 80079cc:	414b      	adcs	r3, r1
 80079ce:	617b      	str	r3, [r7, #20]
 80079d0:	f04f 0200 	mov.w	r2, #0
 80079d4:	f04f 0300 	mov.w	r3, #0
 80079d8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80079dc:	4659      	mov	r1, fp
 80079de:	00cb      	lsls	r3, r1, #3
 80079e0:	4651      	mov	r1, sl
 80079e2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80079e6:	4651      	mov	r1, sl
 80079e8:	00ca      	lsls	r2, r1, #3
 80079ea:	4610      	mov	r0, r2
 80079ec:	4619      	mov	r1, r3
 80079ee:	4603      	mov	r3, r0
 80079f0:	4642      	mov	r2, r8
 80079f2:	189b      	adds	r3, r3, r2
 80079f4:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 80079f8:	464b      	mov	r3, r9
 80079fa:	460a      	mov	r2, r1
 80079fc:	eb42 0303 	adc.w	r3, r2, r3
 8007a00:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8007a04:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007a08:	685b      	ldr	r3, [r3, #4]
 8007a0a:	2200      	movs	r2, #0
 8007a0c:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8007a10:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
 8007a14:	f04f 0200 	mov.w	r2, #0
 8007a18:	f04f 0300 	mov.w	r3, #0
 8007a1c:	e9d7 893c 	ldrd	r8, r9, [r7, #240]	; 0xf0
 8007a20:	4649      	mov	r1, r9
 8007a22:	008b      	lsls	r3, r1, #2
 8007a24:	4641      	mov	r1, r8
 8007a26:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007a2a:	4641      	mov	r1, r8
 8007a2c:	008a      	lsls	r2, r1, #2
 8007a2e:	e9d7 013e 	ldrd	r0, r1, [r7, #248]	; 0xf8
 8007a32:	f7f9 f8c9 	bl	8000bc8 <__aeabi_uldivmod>
 8007a36:	4602      	mov	r2, r0
 8007a38:	460b      	mov	r3, r1
 8007a3a:	4b3c      	ldr	r3, [pc, #240]	; (8007b2c <UART_SetConfig+0x998>)
 8007a3c:	fba3 1302 	umull	r1, r3, r3, r2
 8007a40:	095b      	lsrs	r3, r3, #5
 8007a42:	2164      	movs	r1, #100	; 0x64
 8007a44:	fb01 f303 	mul.w	r3, r1, r3
 8007a48:	1ad3      	subs	r3, r2, r3
 8007a4a:	011b      	lsls	r3, r3, #4
 8007a4c:	3332      	adds	r3, #50	; 0x32
 8007a4e:	4a37      	ldr	r2, [pc, #220]	; (8007b2c <UART_SetConfig+0x998>)
 8007a50:	fba2 2303 	umull	r2, r3, r2, r3
 8007a54:	095b      	lsrs	r3, r3, #5
 8007a56:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8007a5a:	441c      	add	r4, r3
 8007a5c:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007a60:	2200      	movs	r2, #0
 8007a62:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8007a66:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8007a6a:	e9d7 893a 	ldrd	r8, r9, [r7, #232]	; 0xe8
 8007a6e:	4642      	mov	r2, r8
 8007a70:	464b      	mov	r3, r9
 8007a72:	1891      	adds	r1, r2, r2
 8007a74:	60b9      	str	r1, [r7, #8]
 8007a76:	415b      	adcs	r3, r3
 8007a78:	60fb      	str	r3, [r7, #12]
 8007a7a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007a7e:	4641      	mov	r1, r8
 8007a80:	1851      	adds	r1, r2, r1
 8007a82:	6039      	str	r1, [r7, #0]
 8007a84:	4649      	mov	r1, r9
 8007a86:	414b      	adcs	r3, r1
 8007a88:	607b      	str	r3, [r7, #4]
 8007a8a:	f04f 0200 	mov.w	r2, #0
 8007a8e:	f04f 0300 	mov.w	r3, #0
 8007a92:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8007a96:	4659      	mov	r1, fp
 8007a98:	00cb      	lsls	r3, r1, #3
 8007a9a:	4651      	mov	r1, sl
 8007a9c:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007aa0:	4651      	mov	r1, sl
 8007aa2:	00ca      	lsls	r2, r1, #3
 8007aa4:	4610      	mov	r0, r2
 8007aa6:	4619      	mov	r1, r3
 8007aa8:	4603      	mov	r3, r0
 8007aaa:	4642      	mov	r2, r8
 8007aac:	189b      	adds	r3, r3, r2
 8007aae:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8007ab2:	464b      	mov	r3, r9
 8007ab4:	460a      	mov	r2, r1
 8007ab6:	eb42 0303 	adc.w	r3, r2, r3
 8007aba:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8007abe:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007ac2:	685b      	ldr	r3, [r3, #4]
 8007ac4:	2200      	movs	r2, #0
 8007ac6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8007aca:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8007ace:	f04f 0200 	mov.w	r2, #0
 8007ad2:	f04f 0300 	mov.w	r3, #0
 8007ad6:	e9d7 8936 	ldrd	r8, r9, [r7, #216]	; 0xd8
 8007ada:	4649      	mov	r1, r9
 8007adc:	008b      	lsls	r3, r1, #2
 8007ade:	4641      	mov	r1, r8
 8007ae0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007ae4:	4641      	mov	r1, r8
 8007ae6:	008a      	lsls	r2, r1, #2
 8007ae8:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8007aec:	f7f9 f86c 	bl	8000bc8 <__aeabi_uldivmod>
 8007af0:	4602      	mov	r2, r0
 8007af2:	460b      	mov	r3, r1
 8007af4:	4b0d      	ldr	r3, [pc, #52]	; (8007b2c <UART_SetConfig+0x998>)
 8007af6:	fba3 1302 	umull	r1, r3, r3, r2
 8007afa:	095b      	lsrs	r3, r3, #5
 8007afc:	2164      	movs	r1, #100	; 0x64
 8007afe:	fb01 f303 	mul.w	r3, r1, r3
 8007b02:	1ad3      	subs	r3, r2, r3
 8007b04:	011b      	lsls	r3, r3, #4
 8007b06:	3332      	adds	r3, #50	; 0x32
 8007b08:	4a08      	ldr	r2, [pc, #32]	; (8007b2c <UART_SetConfig+0x998>)
 8007b0a:	fba2 2303 	umull	r2, r3, r2, r3
 8007b0e:	095b      	lsrs	r3, r3, #5
 8007b10:	f003 020f 	and.w	r2, r3, #15
 8007b14:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007b18:	681b      	ldr	r3, [r3, #0]
 8007b1a:	4422      	add	r2, r4
 8007b1c:	609a      	str	r2, [r3, #8]
}
 8007b1e:	e7ff      	b.n	8007b20 <UART_SetConfig+0x98c>
 8007b20:	bf00      	nop
 8007b22:	f507 7702 	add.w	r7, r7, #520	; 0x208
 8007b26:	46bd      	mov	sp, r7
 8007b28:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007b2c:	51eb851f 	.word	0x51eb851f

08007b30 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007b30:	b480      	push	{r7}
 8007b32:	b085      	sub	sp, #20
 8007b34:	af00      	add	r7, sp, #0
 8007b36:	6078      	str	r0, [r7, #4]
 8007b38:	6039      	str	r1, [r7, #0]
  uint32_t tmpr1 = 0U;
 8007b3a:	2300      	movs	r3, #0
 8007b3c:	60fb      	str	r3, [r7, #12]
  uint32_t tmpr2 = 0U;
 8007b3e:	2300      	movs	r3, #0
 8007b40:	60bb      	str	r3, [r7, #8]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007b42:	683b      	ldr	r3, [r7, #0]
 8007b44:	681b      	ldr	r3, [r3, #0]
 8007b46:	2b01      	cmp	r3, #1
 8007b48:	d029      	beq.n	8007b9e <FMC_SDRAM_Init+0x6e>
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007b4a:	687b      	ldr	r3, [r7, #4]
 8007b4c:	681b      	ldr	r3, [r3, #0]
 8007b4e:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007b50:	68fb      	ldr	r3, [r7, #12]
 8007b52:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8007b56:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8007b5a:	60fb      	str	r3, [r7, #12]
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007b5c:	683b      	ldr	r3, [r7, #0]
 8007b5e:	685a      	ldr	r2, [r3, #4]
                                               Init->RowBitsNumber      |\
 8007b60:	683b      	ldr	r3, [r7, #0]
 8007b62:	689b      	ldr	r3, [r3, #8]
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007b64:	431a      	orrs	r2, r3
                                               Init->MemoryDataWidth    |\
 8007b66:	683b      	ldr	r3, [r7, #0]
 8007b68:	68db      	ldr	r3, [r3, #12]
                                               Init->RowBitsNumber      |\
 8007b6a:	431a      	orrs	r2, r3
                                               Init->InternalBankNumber |\
 8007b6c:	683b      	ldr	r3, [r7, #0]
 8007b6e:	691b      	ldr	r3, [r3, #16]
                                               Init->MemoryDataWidth    |\
 8007b70:	431a      	orrs	r2, r3
                                               Init->CASLatency         |\
 8007b72:	683b      	ldr	r3, [r7, #0]
 8007b74:	695b      	ldr	r3, [r3, #20]
                                               Init->InternalBankNumber |\
 8007b76:	431a      	orrs	r2, r3
                                               Init->WriteProtection    |\
 8007b78:	683b      	ldr	r3, [r7, #0]
 8007b7a:	699b      	ldr	r3, [r3, #24]
                                               Init->CASLatency         |\
 8007b7c:	431a      	orrs	r2, r3
                                               Init->SDClockPeriod      |\
 8007b7e:	683b      	ldr	r3, [r7, #0]
 8007b80:	69db      	ldr	r3, [r3, #28]
                                               Init->WriteProtection    |\
 8007b82:	431a      	orrs	r2, r3
                                               Init->ReadBurst          |\
 8007b84:	683b      	ldr	r3, [r7, #0]
 8007b86:	6a1b      	ldr	r3, [r3, #32]
                                               Init->SDClockPeriod      |\
 8007b88:	431a      	orrs	r2, r3
                                               Init->ReadPipeDelay
 8007b8a:	683b      	ldr	r3, [r7, #0]
 8007b8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                                               Init->ReadBurst          |\
 8007b8e:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007b90:	68fa      	ldr	r2, [r7, #12]
 8007b92:	4313      	orrs	r3, r2
 8007b94:	60fb      	str	r3, [r7, #12]
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	68fa      	ldr	r2, [r7, #12]
 8007b9a:	601a      	str	r2, [r3, #0]
 8007b9c:	e034      	b.n	8007c08 <FMC_SDRAM_Init+0xd8>
  }
  else /* FMC_Bank2_SDRAM */                      
  {
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8007ba4:	68fb      	ldr	r3, [r7, #12]
 8007ba6:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8007baa:	60fb      	str	r3, [r7, #12]
    
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007bac:	683b      	ldr	r3, [r7, #0]
 8007bae:	69da      	ldr	r2, [r3, #28]
                        Init->ReadBurst          |\
 8007bb0:	683b      	ldr	r3, [r7, #0]
 8007bb2:	6a1b      	ldr	r3, [r3, #32]
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007bb4:	431a      	orrs	r2, r3
                        Init->ReadPipeDelay);  
 8007bb6:	683b      	ldr	r3, [r7, #0]
 8007bb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                        Init->ReadBurst          |\
 8007bba:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007bbc:	68fa      	ldr	r2, [r7, #12]
 8007bbe:	4313      	orrs	r3, r2
 8007bc0:	60fb      	str	r3, [r7, #12]
    
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	685b      	ldr	r3, [r3, #4]
 8007bc6:	60bb      	str	r3, [r7, #8]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007bc8:	68bb      	ldr	r3, [r7, #8]
 8007bca:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8007bce:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8007bd2:	60bb      	str	r3, [r7, #8]
                          FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                          FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));

    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007bd4:	683b      	ldr	r3, [r7, #0]
 8007bd6:	685a      	ldr	r2, [r3, #4]
                       Init->RowBitsNumber      |\
 8007bd8:	683b      	ldr	r3, [r7, #0]
 8007bda:	689b      	ldr	r3, [r3, #8]
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007bdc:	431a      	orrs	r2, r3
                       Init->MemoryDataWidth    |\
 8007bde:	683b      	ldr	r3, [r7, #0]
 8007be0:	68db      	ldr	r3, [r3, #12]
                       Init->RowBitsNumber      |\
 8007be2:	431a      	orrs	r2, r3
                       Init->InternalBankNumber |\
 8007be4:	683b      	ldr	r3, [r7, #0]
 8007be6:	691b      	ldr	r3, [r3, #16]
                       Init->MemoryDataWidth    |\
 8007be8:	431a      	orrs	r2, r3
                       Init->CASLatency         |\
 8007bea:	683b      	ldr	r3, [r7, #0]
 8007bec:	695b      	ldr	r3, [r3, #20]
                       Init->InternalBankNumber |\
 8007bee:	431a      	orrs	r2, r3
                       Init->WriteProtection);
 8007bf0:	683b      	ldr	r3, [r7, #0]
 8007bf2:	699b      	ldr	r3, [r3, #24]
                       Init->CASLatency         |\
 8007bf4:	4313      	orrs	r3, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007bf6:	68ba      	ldr	r2, [r7, #8]
 8007bf8:	4313      	orrs	r3, r2
 8007bfa:	60bb      	str	r3, [r7, #8]

    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007bfc:	687b      	ldr	r3, [r7, #4]
 8007bfe:	68fa      	ldr	r2, [r7, #12]
 8007c00:	601a      	str	r2, [r3, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007c02:	687b      	ldr	r3, [r7, #4]
 8007c04:	68ba      	ldr	r2, [r7, #8]
 8007c06:	605a      	str	r2, [r3, #4]
  }  
  
  return HAL_OK;
 8007c08:	2300      	movs	r3, #0
}
 8007c0a:	4618      	mov	r0, r3
 8007c0c:	3714      	adds	r7, #20
 8007c0e:	46bd      	mov	sp, r7
 8007c10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c14:	4770      	bx	lr

08007c16 <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8007c16:	b480      	push	{r7}
 8007c18:	b087      	sub	sp, #28
 8007c1a:	af00      	add	r7, sp, #0
 8007c1c:	60f8      	str	r0, [r7, #12]
 8007c1e:	60b9      	str	r1, [r7, #8]
 8007c20:	607a      	str	r2, [r7, #4]
  uint32_t tmpr1 = 0U;
 8007c22:	2300      	movs	r3, #0
 8007c24:	617b      	str	r3, [r7, #20]
  uint32_t tmpr2 = 0U;
 8007c26:	2300      	movs	r3, #0
 8007c28:	613b      	str	r3, [r7, #16]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8007c2a:	687b      	ldr	r3, [r7, #4]
 8007c2c:	2b01      	cmp	r3, #1
 8007c2e:	d02e      	beq.n	8007c8e <FMC_SDRAM_Timing_Init+0x78>
  { 
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007c30:	68fb      	ldr	r3, [r7, #12]
 8007c32:	689b      	ldr	r3, [r3, #8]
 8007c34:	617b      	str	r3, [r7, #20]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007c36:	697b      	ldr	r3, [r7, #20]
 8007c38:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8007c3c:	617b      	str	r3, [r7, #20]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007c3e:	68bb      	ldr	r3, [r7, #8]
 8007c40:	681b      	ldr	r3, [r3, #0]
 8007c42:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007c44:	68bb      	ldr	r3, [r7, #8]
 8007c46:	685b      	ldr	r3, [r3, #4]
 8007c48:	3b01      	subs	r3, #1
 8007c4a:	011b      	lsls	r3, r3, #4
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007c4c:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007c4e:	68bb      	ldr	r3, [r7, #8]
 8007c50:	689b      	ldr	r3, [r3, #8]
 8007c52:	3b01      	subs	r3, #1
 8007c54:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007c56:	431a      	orrs	r2, r3
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007c58:	68bb      	ldr	r3, [r7, #8]
 8007c5a:	68db      	ldr	r3, [r3, #12]
 8007c5c:	3b01      	subs	r3, #1
 8007c5e:	031b      	lsls	r3, r3, #12
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007c60:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007c62:	68bb      	ldr	r3, [r7, #8]
 8007c64:	691b      	ldr	r3, [r3, #16]
 8007c66:	3b01      	subs	r3, #1
 8007c68:	041b      	lsls	r3, r3, #16
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007c6a:	431a      	orrs	r2, r3
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8007c6c:	68bb      	ldr	r3, [r7, #8]
 8007c6e:	695b      	ldr	r3, [r3, #20]
 8007c70:	3b01      	subs	r3, #1
 8007c72:	051b      	lsls	r3, r3, #20
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007c74:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U));
 8007c76:	68bb      	ldr	r3, [r7, #8]
 8007c78:	699b      	ldr	r3, [r3, #24]
 8007c7a:	3b01      	subs	r3, #1
 8007c7c:	061b      	lsls	r3, r3, #24
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007c7e:	4313      	orrs	r3, r2
 8007c80:	697a      	ldr	r2, [r7, #20]
 8007c82:	4313      	orrs	r3, r2
 8007c84:	617b      	str	r3, [r7, #20]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007c86:	68fb      	ldr	r3, [r7, #12]
 8007c88:	697a      	ldr	r2, [r7, #20]
 8007c8a:	609a      	str	r2, [r3, #8]
 8007c8c:	e03b      	b.n	8007d06 <FMC_SDRAM_Timing_Init+0xf0>
  }
   else /* FMC_Bank2_SDRAM */
  {
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007c8e:	68fb      	ldr	r3, [r7, #12]
 8007c90:	689b      	ldr	r3, [r3, #8]
 8007c92:	617b      	str	r3, [r7, #20]
    
    /* Clear TRC and TRP bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007c94:	697b      	ldr	r3, [r7, #20]
 8007c96:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8007c9a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8007c9e:	617b      	str	r3, [r7, #20]
    
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007ca0:	68bb      	ldr	r3, [r7, #8]
 8007ca2:	68db      	ldr	r3, [r3, #12]
 8007ca4:	3b01      	subs	r3, #1
 8007ca6:	031a      	lsls	r2, r3, #12
                        (((Timing->RPDelay)-1U) << 20U)); 
 8007ca8:	68bb      	ldr	r3, [r7, #8]
 8007caa:	695b      	ldr	r3, [r3, #20]
 8007cac:	3b01      	subs	r3, #1
 8007cae:	051b      	lsls	r3, r3, #20
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007cb0:	4313      	orrs	r3, r2
 8007cb2:	697a      	ldr	r2, [r7, #20]
 8007cb4:	4313      	orrs	r3, r2
 8007cb6:	617b      	str	r3, [r7, #20]
    
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007cb8:	68fb      	ldr	r3, [r7, #12]
 8007cba:	68db      	ldr	r3, [r3, #12]
 8007cbc:	613b      	str	r3, [r7, #16]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007cbe:	693b      	ldr	r3, [r7, #16]
 8007cc0:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8007cc4:	613b      	str	r3, [r7, #16]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007cc6:	68bb      	ldr	r3, [r7, #8]
 8007cc8:	681b      	ldr	r3, [r3, #0]
 8007cca:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 8007ccc:	68bb      	ldr	r3, [r7, #8]
 8007cce:	685b      	ldr	r3, [r3, #4]
 8007cd0:	3b01      	subs	r3, #1
 8007cd2:	011b      	lsls	r3, r3, #4
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007cd4:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 8007cd6:	68bb      	ldr	r3, [r7, #8]
 8007cd8:	689b      	ldr	r3, [r3, #8]
 8007cda:	3b01      	subs	r3, #1
 8007cdc:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 8007cde:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)     |\
 8007ce0:	68bb      	ldr	r3, [r7, #8]
 8007ce2:	691b      	ldr	r3, [r3, #16]
 8007ce4:	3b01      	subs	r3, #1
 8007ce6:	041b      	lsls	r3, r3, #16
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 8007ce8:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U)));   
 8007cea:	68bb      	ldr	r3, [r7, #8]
 8007cec:	699b      	ldr	r3, [r3, #24]
 8007cee:	3b01      	subs	r3, #1
 8007cf0:	061b      	lsls	r3, r3, #24
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007cf2:	4313      	orrs	r3, r2
 8007cf4:	693a      	ldr	r2, [r7, #16]
 8007cf6:	4313      	orrs	r3, r2
 8007cf8:	613b      	str	r3, [r7, #16]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007cfa:	68fb      	ldr	r3, [r7, #12]
 8007cfc:	697a      	ldr	r2, [r7, #20]
 8007cfe:	609a      	str	r2, [r3, #8]
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8007d00:	68fb      	ldr	r3, [r7, #12]
 8007d02:	693a      	ldr	r2, [r7, #16]
 8007d04:	60da      	str	r2, [r3, #12]
  }
  return HAL_OK;
 8007d06:	2300      	movs	r3, #0
}
 8007d08:	4618      	mov	r0, r3
 8007d0a:	371c      	adds	r7, #28
 8007d0c:	46bd      	mov	sp, r7
 8007d0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d12:	4770      	bx	lr

08007d14 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007d14:	b580      	push	{r7, lr}
 8007d16:	b086      	sub	sp, #24
 8007d18:	af00      	add	r7, sp, #0
 8007d1a:	60f8      	str	r0, [r7, #12]
 8007d1c:	60b9      	str	r1, [r7, #8]
 8007d1e:	607a      	str	r2, [r7, #4]
  __IO uint32_t tmpr = 0U;
 8007d20:	2300      	movs	r3, #0
 8007d22:	613b      	str	r3, [r7, #16]
  uint32_t tickstart = 0U;
 8007d24:	2300      	movs	r3, #0
 8007d26:	617b      	str	r3, [r7, #20]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007d28:	68bb      	ldr	r3, [r7, #8]
 8007d2a:	681a      	ldr	r2, [r3, #0]
                    (Command->CommandTarget)                |\
 8007d2c:	68bb      	ldr	r3, [r7, #8]
 8007d2e:	685b      	ldr	r3, [r3, #4]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007d30:	431a      	orrs	r2, r3
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007d32:	68bb      	ldr	r3, [r7, #8]
 8007d34:	689b      	ldr	r3, [r3, #8]
 8007d36:	3b01      	subs	r3, #1
 8007d38:	015b      	lsls	r3, r3, #5
                    (Command->CommandTarget)                |\
 8007d3a:	431a      	orrs	r2, r3
                    ((Command->ModeRegisterDefinition) << 9U)
 8007d3c:	68bb      	ldr	r3, [r7, #8]
 8007d3e:	68db      	ldr	r3, [r3, #12]
 8007d40:	025b      	lsls	r3, r3, #9
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007d42:	4313      	orrs	r3, r2
 8007d44:	613b      	str	r3, [r7, #16]
                    );
    
  Device->SDCMR = tmpr;
 8007d46:	693a      	ldr	r2, [r7, #16]
 8007d48:	68fb      	ldr	r3, [r7, #12]
 8007d4a:	611a      	str	r2, [r3, #16]

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007d4c:	f7fa febc 	bl	8002ac8 <HAL_GetTick>
 8007d50:	6178      	str	r0, [r7, #20]

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007d52:	e010      	b.n	8007d76 <FMC_SDRAM_SendCommand+0x62>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8007d54:	687b      	ldr	r3, [r7, #4]
 8007d56:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007d5a:	d00c      	beq.n	8007d76 <FMC_SDRAM_SendCommand+0x62>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007d5c:	687b      	ldr	r3, [r7, #4]
 8007d5e:	2b00      	cmp	r3, #0
 8007d60:	d007      	beq.n	8007d72 <FMC_SDRAM_SendCommand+0x5e>
 8007d62:	f7fa feb1 	bl	8002ac8 <HAL_GetTick>
 8007d66:	4602      	mov	r2, r0
 8007d68:	697b      	ldr	r3, [r7, #20]
 8007d6a:	1ad3      	subs	r3, r2, r3
 8007d6c:	687a      	ldr	r2, [r7, #4]
 8007d6e:	429a      	cmp	r2, r3
 8007d70:	d201      	bcs.n	8007d76 <FMC_SDRAM_SendCommand+0x62>
      {
        return HAL_TIMEOUT;
 8007d72:	2303      	movs	r3, #3
 8007d74:	e006      	b.n	8007d84 <FMC_SDRAM_SendCommand+0x70>
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007d76:	68fb      	ldr	r3, [r7, #12]
 8007d78:	699b      	ldr	r3, [r3, #24]
 8007d7a:	f003 0320 	and.w	r3, r3, #32
 8007d7e:	2b20      	cmp	r3, #32
 8007d80:	d0e8      	beq.n	8007d54 <FMC_SDRAM_SendCommand+0x40>
      }
    }
  }

  return HAL_OK;
 8007d82:	2300      	movs	r3, #0
}
 8007d84:	4618      	mov	r0, r3
 8007d86:	3718      	adds	r7, #24
 8007d88:	46bd      	mov	sp, r7
 8007d8a:	bd80      	pop	{r7, pc}

08007d8c <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance  
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 8007d8c:	b480      	push	{r7}
 8007d8e:	b083      	sub	sp, #12
 8007d90:	af00      	add	r7, sp, #0
 8007d92:	6078      	str	r0, [r7, #4]
 8007d94:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007d96:	687b      	ldr	r3, [r7, #4]
 8007d98:	695a      	ldr	r2, [r3, #20]
 8007d9a:	683b      	ldr	r3, [r7, #0]
 8007d9c:	005b      	lsls	r3, r3, #1
 8007d9e:	431a      	orrs	r2, r3
 8007da0:	687b      	ldr	r3, [r7, #4]
 8007da2:	615a      	str	r2, [r3, #20]
  
  return HAL_OK;   
 8007da4:	2300      	movs	r3, #0
}
 8007da6:	4618      	mov	r0, r3
 8007da8:	370c      	adds	r7, #12
 8007daa:	46bd      	mov	sp, r7
 8007dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007db0:	4770      	bx	lr

08007db2 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8007db2:	b580      	push	{r7, lr}
 8007db4:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8007db6:	f003 fba7 	bl	800b508 <touchgfx_init>
}
 8007dba:	bf00      	nop
 8007dbc:	bd80      	pop	{r7, pc}

08007dbe <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8007dbe:	b580      	push	{r7, lr}
 8007dc0:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8007dc2:	f003 fbd1 	bl	800b568 <touchgfx_taskEntry>
}
 8007dc6:	bf00      	nop
 8007dc8:	bd80      	pop	{r7, pc}
	...

08007dcc <_ZN8touchgfx12FontProviderD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~FontProvider()
 8007dcc:	b480      	push	{r7}
 8007dce:	b083      	sub	sp, #12
 8007dd0:	af00      	add	r7, sp, #0
 8007dd2:	6078      	str	r0, [r7, #4]
    {
 8007dd4:	4a04      	ldr	r2, [pc, #16]	; (8007de8 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8007dd6:	687b      	ldr	r3, [r7, #4]
 8007dd8:	601a      	str	r2, [r3, #0]
    }
 8007dda:	687b      	ldr	r3, [r7, #4]
 8007ddc:	4618      	mov	r0, r3
 8007dde:	370c      	adds	r7, #12
 8007de0:	46bd      	mov	sp, r7
 8007de2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007de6:	4770      	bx	lr
 8007de8:	0801ed68 	.word	0x0801ed68

08007dec <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8007dec:	b580      	push	{r7, lr}
 8007dee:	b082      	sub	sp, #8
 8007df0:	af00      	add	r7, sp, #0
 8007df2:	6078      	str	r0, [r7, #4]
    }
 8007df4:	6878      	ldr	r0, [r7, #4]
 8007df6:	f7ff ffe9 	bl	8007dcc <_ZN8touchgfx12FontProviderD1Ev>
 8007dfa:	2104      	movs	r1, #4
 8007dfc:	6878      	ldr	r0, [r7, #4]
 8007dfe:	f013 fd72 	bl	801b8e6 <_ZdlPvj>
 8007e02:	687b      	ldr	r3, [r7, #4]
 8007e04:	4618      	mov	r0, r3
 8007e06:	3708      	adds	r7, #8
 8007e08:	46bd      	mov	sp, r7
 8007e0a:	bd80      	pop	{r7, pc}

08007e0c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8007e0c:	b580      	push	{r7, lr}
 8007e0e:	b082      	sub	sp, #8
 8007e10:	af00      	add	r7, sp, #0
 8007e12:	6078      	str	r0, [r7, #4]
 8007e14:	460b      	mov	r3, r1
 8007e16:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8007e18:	887b      	ldrh	r3, [r7, #2]
 8007e1a:	2b02      	cmp	r3, #2
 8007e1c:	d010      	beq.n	8007e40 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 8007e1e:	2b02      	cmp	r3, #2
 8007e20:	dc13      	bgt.n	8007e4a <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 8007e22:	2b00      	cmp	r3, #0
 8007e24:	d002      	beq.n	8007e2c <_ZN23ApplicationFontProvider7getFontEt+0x20>
 8007e26:	2b01      	cmp	r3, #1
 8007e28:	d005      	beq.n	8007e36 <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 8007e2a:	e00e      	b.n	8007e4a <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8007e2c:	f001 ff5c 	bl	8009ce8 <_ZN17TypedTextDatabase8getFontsEv>
 8007e30:	4603      	mov	r3, r0
 8007e32:	681b      	ldr	r3, [r3, #0]
 8007e34:	e00a      	b.n	8007e4c <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8007e36:	f001 ff57 	bl	8009ce8 <_ZN17TypedTextDatabase8getFontsEv>
 8007e3a:	4603      	mov	r3, r0
 8007e3c:	685b      	ldr	r3, [r3, #4]
 8007e3e:	e005      	b.n	8007e4c <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8007e40:	f001 ff52 	bl	8009ce8 <_ZN17TypedTextDatabase8getFontsEv>
 8007e44:	4603      	mov	r3, r0
 8007e46:	689b      	ldr	r3, [r3, #8]
 8007e48:	e000      	b.n	8007e4c <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 8007e4a:	2300      	movs	r3, #0
    }
}
 8007e4c:	4618      	mov	r0, r3
 8007e4e:	3708      	adds	r7, #8
 8007e50:	46bd      	mov	sp, r7
 8007e52:	bd80      	pop	{r7, pc}

08007e54 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8007e54:	b580      	push	{r7, lr}
 8007e56:	b082      	sub	sp, #8
 8007e58:	af00      	add	r7, sp, #0
 8007e5a:	6078      	str	r0, [r7, #4]
 8007e5c:	4a05      	ldr	r2, [pc, #20]	; (8007e74 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	601a      	str	r2, [r3, #0]
 8007e62:	687b      	ldr	r3, [r7, #4]
 8007e64:	4618      	mov	r0, r3
 8007e66:	f7ff ffb1 	bl	8007dcc <_ZN8touchgfx12FontProviderD1Ev>
 8007e6a:	687b      	ldr	r3, [r7, #4]
 8007e6c:	4618      	mov	r0, r3
 8007e6e:	3708      	adds	r7, #8
 8007e70:	46bd      	mov	sp, r7
 8007e72:	bd80      	pop	{r7, pc}
 8007e74:	0801ed54 	.word	0x0801ed54

08007e78 <_ZN23ApplicationFontProviderD0Ev>:
 8007e78:	b580      	push	{r7, lr}
 8007e7a:	b082      	sub	sp, #8
 8007e7c:	af00      	add	r7, sp, #0
 8007e7e:	6078      	str	r0, [r7, #4]
 8007e80:	6878      	ldr	r0, [r7, #4]
 8007e82:	f7ff ffe7 	bl	8007e54 <_ZN23ApplicationFontProviderD1Ev>
 8007e86:	2104      	movs	r1, #4
 8007e88:	6878      	ldr	r0, [r7, #4]
 8007e8a:	f013 fd2c 	bl	801b8e6 <_ZdlPvj>
 8007e8e:	687b      	ldr	r3, [r7, #4]
 8007e90:	4618      	mov	r0, r3
 8007e92:	3708      	adds	r7, #8
 8007e94:	46bd      	mov	sp, r7
 8007e96:	bd80      	pop	{r7, pc}

08007e98 <_ZN8touchgfx4FontD1Ev>:
 *        It provides utility functions such as obtaining string width and font height.
 */
class Font
{
public:
    virtual ~Font() { }
 8007e98:	b480      	push	{r7}
 8007e9a:	b083      	sub	sp, #12
 8007e9c:	af00      	add	r7, sp, #0
 8007e9e:	6078      	str	r0, [r7, #4]
 8007ea0:	4a04      	ldr	r2, [pc, #16]	; (8007eb4 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8007ea2:	687b      	ldr	r3, [r7, #4]
 8007ea4:	601a      	str	r2, [r3, #0]
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	4618      	mov	r0, r3
 8007eaa:	370c      	adds	r7, #12
 8007eac:	46bd      	mov	sp, r7
 8007eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007eb2:	4770      	bx	lr
 8007eb4:	080202d8 	.word	0x080202d8

08007eb8 <_ZN8touchgfx4FontD0Ev>:
 8007eb8:	b580      	push	{r7, lr}
 8007eba:	b082      	sub	sp, #8
 8007ebc:	af00      	add	r7, sp, #0
 8007ebe:	6078      	str	r0, [r7, #4]
 8007ec0:	6878      	ldr	r0, [r7, #4]
 8007ec2:	f7ff ffe9 	bl	8007e98 <_ZN8touchgfx4FontD1Ev>
 8007ec6:	2110      	movs	r1, #16
 8007ec8:	6878      	ldr	r0, [r7, #4]
 8007eca:	f013 fd0c 	bl	801b8e6 <_ZdlPvj>
 8007ece:	687b      	ldr	r3, [r7, #4]
 8007ed0:	4618      	mov	r0, r3
 8007ed2:	3708      	adds	r7, #8
 8007ed4:	46bd      	mov	sp, r7
 8007ed6:	bd80      	pop	{r7, pc}

08007ed8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getGlyph
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8007ed8:	b590      	push	{r4, r7, lr}
 8007eda:	b087      	sub	sp, #28
 8007edc:	af00      	add	r7, sp, #0
 8007ede:	6078      	str	r0, [r7, #4]
 8007ee0:	460b      	mov	r3, r1
 8007ee2:	807b      	strh	r3, [r7, #2]
    {
        const uint8_t* dummyPixelDataPointer = 0;
 8007ee4:	2300      	movs	r3, #0
 8007ee6:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8007ee8:	2300      	movs	r3, #0
 8007eea:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8007eec:	687b      	ldr	r3, [r7, #4]
 8007eee:	681b      	ldr	r3, [r3, #0]
 8007ef0:	3308      	adds	r3, #8
 8007ef2:	681c      	ldr	r4, [r3, #0]
 8007ef4:	f107 030f 	add.w	r3, r7, #15
 8007ef8:	f107 0210 	add.w	r2, r7, #16
 8007efc:	8879      	ldrh	r1, [r7, #2]
 8007efe:	6878      	ldr	r0, [r7, #4]
 8007f00:	47a0      	blx	r4
 8007f02:	6178      	str	r0, [r7, #20]
        return glyph;
 8007f04:	697b      	ldr	r3, [r7, #20]
    }
 8007f06:	4618      	mov	r0, r3
 8007f08:	371c      	adds	r7, #28
 8007f0a:	46bd      	mov	sp, r7
 8007f0c:	bd90      	pop	{r4, r7, pc}

08007f0e <_ZNK8touchgfx4Font15getFallbackCharEv>:
     *        character, use the glyph for the character returned by this function. If 0 (zero)
     *        is returned, there is no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8007f0e:	b480      	push	{r7}
 8007f10:	b083      	sub	sp, #12
 8007f12:	af00      	add	r7, sp, #0
 8007f14:	6078      	str	r0, [r7, #4]
    {
        return falllbackCharacter;
 8007f16:	687b      	ldr	r3, [r7, #4]
 8007f18:	895b      	ldrh	r3, [r3, #10]
    }
 8007f1a:	4618      	mov	r0, r3
 8007f1c:	370c      	adds	r7, #12
 8007f1e:	46bd      	mov	sp, r7
 8007f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f24:	4770      	bx	lr

08007f26 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
    *        Gets ellipsis character for the given font. This is the character which is used
    *        when truncating long lines.
    *
    * @return The ellipsis character for the typography.
    */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8007f26:	b480      	push	{r7}
 8007f28:	b083      	sub	sp, #12
 8007f2a:	af00      	add	r7, sp, #0
 8007f2c:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	899b      	ldrh	r3, [r3, #12]
    }
 8007f32:	4618      	mov	r0, r3
 8007f34:	370c      	adds	r7, #12
 8007f36:	46bd      	mov	sp, r7
 8007f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f3c:	4770      	bx	lr

08007f3e <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     *
     * @return The height in pixels of this font.
     */
    virtual uint16_t getFontHeight() const
 8007f3e:	b480      	push	{r7}
 8007f40:	b083      	sub	sp, #12
 8007f42:	af00      	add	r7, sp, #0
 8007f44:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8007f46:	687b      	ldr	r3, [r7, #4]
 8007f48:	889b      	ldrh	r3, [r3, #4]
    }
 8007f4a:	4618      	mov	r0, r3
 8007f4c:	370c      	adds	r7, #12
 8007f4e:	46bd      	mov	sp, r7
 8007f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f54:	4770      	bx	lr

08007f56 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *        into account that certain characters (eg 'g') have pixels below the baseline,
     *        thus making the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    virtual uint16_t getMinimumTextHeight() const
 8007f56:	b480      	push	{r7}
 8007f58:	b083      	sub	sp, #12
 8007f5a:	af00      	add	r7, sp, #0
 8007f5c:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	889a      	ldrh	r2, [r3, #4]
 8007f62:	687b      	ldr	r3, [r7, #4]
 8007f64:	799b      	ldrb	r3, [r3, #6]
 8007f66:	b29b      	uxth	r3, r3
 8007f68:	4413      	add	r3, r2
 8007f6a:	b29b      	uxth	r3, r3
    }
 8007f6c:	4618      	mov	r0, r3
 8007f6e:	370c      	adds	r7, #12
 8007f70:	46bd      	mov	sp, r7
 8007f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f76:	4770      	bx	lr

08007f78 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     *        Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    virtual uint8_t getBitsPerPixel() const
 8007f78:	b480      	push	{r7}
 8007f7a:	b083      	sub	sp, #12
 8007f7c:	af00      	add	r7, sp, #0
 8007f7e:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	79db      	ldrb	r3, [r3, #7]
 8007f84:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8007f88:	b2db      	uxtb	r3, r3
    }
 8007f8a:	4618      	mov	r0, r3
 8007f8c:	370c      	adds	r7, #12
 8007f8e:	46bd      	mov	sp, r7
 8007f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f94:	4770      	bx	lr

08007f96 <_ZNK8touchgfx4Font15getDataFormatA4Ev>:
     *
     *        Are the glyphs saved using ST A4 format.
     *
     * @return True if the font is stored using A4 format, false otherwise.
     */
    virtual uint8_t getDataFormatA4() const
 8007f96:	b480      	push	{r7}
 8007f98:	b083      	sub	sp, #12
 8007f9a:	af00      	add	r7, sp, #0
 8007f9c:	6078      	str	r0, [r7, #4]
    {
        return a4;
 8007f9e:	687b      	ldr	r3, [r7, #4]
 8007fa0:	79db      	ldrb	r3, [r3, #7]
 8007fa2:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8007fa6:	b2db      	uxtb	r3, r3
    }
 8007fa8:	4618      	mov	r0, r3
 8007faa:	370c      	adds	r7, #12
 8007fac:	46bd      	mov	sp, r7
 8007fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fb2:	4770      	bx	lr

08007fb4 <_ZN8touchgfx9ConstFontD1Ev>:
 * @note Pure virtual class. Create an application-
 *          specific implementation of getPixelData.
 *
 * @see Font
 */
class ConstFont : public Font
 8007fb4:	b580      	push	{r7, lr}
 8007fb6:	b082      	sub	sp, #8
 8007fb8:	af00      	add	r7, sp, #0
 8007fba:	6078      	str	r0, [r7, #4]
 8007fbc:	4a05      	ldr	r2, [pc, #20]	; (8007fd4 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	601a      	str	r2, [r3, #0]
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	4618      	mov	r0, r3
 8007fc6:	f7ff ff67 	bl	8007e98 <_ZN8touchgfx4FontD1Ev>
 8007fca:	687b      	ldr	r3, [r7, #4]
 8007fcc:	4618      	mov	r0, r3
 8007fce:	3708      	adds	r7, #8
 8007fd0:	46bd      	mov	sp, r7
 8007fd2:	bd80      	pop	{r7, pc}
 8007fd4:	08020390 	.word	0x08020390

08007fd8 <_ZN8touchgfx9ConstFontD0Ev>:
 8007fd8:	b580      	push	{r7, lr}
 8007fda:	b082      	sub	sp, #8
 8007fdc:	af00      	add	r7, sp, #0
 8007fde:	6078      	str	r0, [r7, #4]
 8007fe0:	6878      	ldr	r0, [r7, #4]
 8007fe2:	f7ff ffe7 	bl	8007fb4 <_ZN8touchgfx9ConstFontD1Ev>
 8007fe6:	2118      	movs	r1, #24
 8007fe8:	6878      	ldr	r0, [r7, #4]
 8007fea:	f013 fc7c 	bl	801b8e6 <_ZdlPvj>
 8007fee:	687b      	ldr	r3, [r7, #4]
 8007ff0:	4618      	mov	r0, r3
 8007ff2:	3708      	adds	r7, #8
 8007ff4:	46bd      	mov	sp, r7
 8007ff6:	bd80      	pop	{r7, pc}

08007ff8 <_ZN8touchgfx13GeneratedFontD1Ev>:
 *        An GeneratedFont has both glyph table and glyph data placed in a flash which
 *        supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 8007ff8:	b580      	push	{r7, lr}
 8007ffa:	b082      	sub	sp, #8
 8007ffc:	af00      	add	r7, sp, #0
 8007ffe:	6078      	str	r0, [r7, #4]
 8008000:	4a05      	ldr	r2, [pc, #20]	; (8008018 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8008002:	687b      	ldr	r3, [r7, #4]
 8008004:	601a      	str	r2, [r3, #0]
 8008006:	687b      	ldr	r3, [r7, #4]
 8008008:	4618      	mov	r0, r3
 800800a:	f7ff ffd3 	bl	8007fb4 <_ZN8touchgfx9ConstFontD1Ev>
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	4618      	mov	r0, r3
 8008012:	3708      	adds	r7, #8
 8008014:	46bd      	mov	sp, r7
 8008016:	bd80      	pop	{r7, pc}
 8008018:	0801ed7c 	.word	0x0801ed7c

0800801c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800801c:	b580      	push	{r7, lr}
 800801e:	b082      	sub	sp, #8
 8008020:	af00      	add	r7, sp, #0
 8008022:	6078      	str	r0, [r7, #4]
 8008024:	6878      	ldr	r0, [r7, #4]
 8008026:	f7ff ffe7 	bl	8007ff8 <_ZN8touchgfx13GeneratedFontD1Ev>
 800802a:	2124      	movs	r1, #36	; 0x24
 800802c:	6878      	ldr	r0, [r7, #4]
 800802e:	f013 fc5a 	bl	801b8e6 <_ZdlPvj>
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	4618      	mov	r0, r3
 8008036:	3708      	adds	r7, #8
 8008038:	46bd      	mov	sp, r7
 800803a:	bd80      	pop	{r7, pc}

0800803c <_ZNK8touchgfx9TypedText7getFontEv>:
     *
     *        Gets the font associated with this TypedText.
     *
     * @return The font.
     */
    const Font* getFont() const
 800803c:	b580      	push	{r7, lr}
 800803e:	b082      	sub	sp, #8
 8008040:	af00      	add	r7, sp, #0
 8008042:	6078      	str	r0, [r7, #4]
    {
        assertValid();
 8008044:	6878      	ldr	r0, [r7, #4]
 8008046:	f000 f82d 	bl	80080a4 <_ZNK8touchgfx9TypedText11assertValidEv>
        return fonts[typedTexts[typedTextId].fontIdx];
 800804a:	4b08      	ldr	r3, [pc, #32]	; (800806c <_ZNK8touchgfx9TypedText7getFontEv+0x30>)
 800804c:	681a      	ldr	r2, [r3, #0]
 800804e:	4b08      	ldr	r3, [pc, #32]	; (8008070 <_ZNK8touchgfx9TypedText7getFontEv+0x34>)
 8008050:	6819      	ldr	r1, [r3, #0]
 8008052:	687b      	ldr	r3, [r7, #4]
 8008054:	881b      	ldrh	r3, [r3, #0]
 8008056:	005b      	lsls	r3, r3, #1
 8008058:	440b      	add	r3, r1
 800805a:	781b      	ldrb	r3, [r3, #0]
 800805c:	009b      	lsls	r3, r3, #2
 800805e:	4413      	add	r3, r2
 8008060:	681b      	ldr	r3, [r3, #0]
    }
 8008062:	4618      	mov	r0, r3
 8008064:	3708      	adds	r7, #8
 8008066:	46bd      	mov	sp, r7
 8008068:	bd80      	pop	{r7, pc}
 800806a:	bf00      	nop
 800806c:	2000181c 	.word	0x2000181c
 8008070:	20001814 	.word	0x20001814

08008074 <_ZNK8touchgfx9TypedText16getTextDirectionEv>:
     *
     *        Gets the text direction associated with this TypedText.
     *
     * @return The alignment.
     */
    TextDirection getTextDirection() const
 8008074:	b580      	push	{r7, lr}
 8008076:	b082      	sub	sp, #8
 8008078:	af00      	add	r7, sp, #0
 800807a:	6078      	str	r0, [r7, #4]
    {
        assertValid();
 800807c:	6878      	ldr	r0, [r7, #4]
 800807e:	f000 f811 	bl	80080a4 <_ZNK8touchgfx9TypedText11assertValidEv>
        return typedTexts[typedTextId].direction;
 8008082:	4b07      	ldr	r3, [pc, #28]	; (80080a0 <_ZNK8touchgfx9TypedText16getTextDirectionEv+0x2c>)
 8008084:	681a      	ldr	r2, [r3, #0]
 8008086:	687b      	ldr	r3, [r7, #4]
 8008088:	881b      	ldrh	r3, [r3, #0]
 800808a:	005b      	lsls	r3, r3, #1
 800808c:	4413      	add	r3, r2
 800808e:	785b      	ldrb	r3, [r3, #1]
 8008090:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8008094:	b2db      	uxtb	r3, r3
    }
 8008096:	4618      	mov	r0, r3
 8008098:	3708      	adds	r7, #8
 800809a:	46bd      	mov	sp, r7
 800809c:	bd80      	pop	{r7, pc}
 800809e:	bf00      	nop
 80080a0:	20001814 	.word	0x20001814

080080a4 <_ZNK8touchgfx9TypedText11assertValidEv>:
    {
        texts = t;
    }

private:
    void assertValid() const
 80080a4:	b580      	push	{r7, lr}
 80080a6:	b082      	sub	sp, #8
 80080a8:	af00      	add	r7, sp, #0
 80080aa:	6078      	str	r0, [r7, #4]
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80080ac:	4b0c      	ldr	r3, [pc, #48]	; (80080e0 <_ZNK8touchgfx9TypedText11assertValidEv+0x3c>)
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	2b00      	cmp	r3, #0
 80080b2:	d105      	bne.n	80080c0 <_ZNK8touchgfx9TypedText11assertValidEv+0x1c>
 80080b4:	4b0b      	ldr	r3, [pc, #44]	; (80080e4 <_ZNK8touchgfx9TypedText11assertValidEv+0x40>)
 80080b6:	4a0c      	ldr	r2, [pc, #48]	; (80080e8 <_ZNK8touchgfx9TypedText11assertValidEv+0x44>)
 80080b8:	21de      	movs	r1, #222	; 0xde
 80080ba:	480c      	ldr	r0, [pc, #48]	; (80080ec <_ZNK8touchgfx9TypedText11assertValidEv+0x48>)
 80080bc:	f013 fc42 	bl	801b944 <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	881a      	ldrh	r2, [r3, #0]
 80080c4:	4b0a      	ldr	r3, [pc, #40]	; (80080f0 <_ZNK8touchgfx9TypedText11assertValidEv+0x4c>)
 80080c6:	881b      	ldrh	r3, [r3, #0]
 80080c8:	429a      	cmp	r2, r3
 80080ca:	d305      	bcc.n	80080d8 <_ZNK8touchgfx9TypedText11assertValidEv+0x34>
 80080cc:	4b09      	ldr	r3, [pc, #36]	; (80080f4 <_ZNK8touchgfx9TypedText11assertValidEv+0x50>)
 80080ce:	4a06      	ldr	r2, [pc, #24]	; (80080e8 <_ZNK8touchgfx9TypedText11assertValidEv+0x44>)
 80080d0:	21df      	movs	r1, #223	; 0xdf
 80080d2:	4806      	ldr	r0, [pc, #24]	; (80080ec <_ZNK8touchgfx9TypedText11assertValidEv+0x48>)
 80080d4:	f013 fc36 	bl	801b944 <__assert_func>
    }
 80080d8:	bf00      	nop
 80080da:	3708      	adds	r7, #8
 80080dc:	46bd      	mov	sp, r7
 80080de:	bd80      	pop	{r7, pc}
 80080e0:	20001814 	.word	0x20001814
 80080e4:	0801e63c 	.word	0x0801e63c
 80080e8:	0801e680 	.word	0x0801e680
 80080ec:	0801e6b0 	.word	0x0801e6b0
 80080f0:	20001818 	.word	0x20001818
 80080f4:	0801e6f4 	.word	0x0801e6f4

080080f8 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>:
    uint16_t kerningTablePos() const
 80080f8:	b480      	push	{r7}
 80080fa:	b083      	sub	sp, #12
 80080fc:	af00      	add	r7, sp, #0
 80080fe:	6078      	str	r0, [r7, #4]
        return (((uint16_t)(flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10)) << 8) | (uint16_t)_kerningTablePos;
 8008100:	687b      	ldr	r3, [r7, #4]
 8008102:	7b5b      	ldrb	r3, [r3, #13]
 8008104:	021b      	lsls	r3, r3, #8
 8008106:	b21b      	sxth	r3, r3
 8008108:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800810c:	b21a      	sxth	r2, r3
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	7adb      	ldrb	r3, [r3, #11]
 8008112:	b21b      	sxth	r3, r3
 8008114:	4313      	orrs	r3, r2
 8008116:	b21b      	sxth	r3, r3
 8008118:	b29b      	uxth	r3, r3
    }
 800811a:	4618      	mov	r0, r3
 800811c:	370c      	adds	r7, #12
 800811e:	46bd      	mov	sp, r7
 8008120:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008124:	4770      	bx	lr

08008126 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     *
     *        Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 8008126:	b480      	push	{r7}
 8008128:	b083      	sub	sp, #12
 800812a:	af00      	add	r7, sp, #0
 800812c:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	6a1b      	ldr	r3, [r3, #32]
    }
 8008132:	4618      	mov	r0, r3
 8008134:	370c      	adds	r7, #12
 8008136:	46bd      	mov	sp, r7
 8008138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800813c:	4770      	bx	lr
	...

08008140 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t dataFormatA4, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8008140:	b580      	push	{r7, lr}
 8008142:	b08c      	sub	sp, #48	; 0x30
 8008144:	af08      	add	r7, sp, #32
 8008146:	60f8      	str	r0, [r7, #12]
 8008148:	60b9      	str	r1, [r7, #8]
 800814a:	4611      	mov	r1, r2
 800814c:	461a      	mov	r2, r3
 800814e:	460b      	mov	r3, r1
 8008150:	80fb      	strh	r3, [r7, #6]
 8008152:	4613      	mov	r3, r2
 8008154:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, dataFormatA4, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
 8008156:	68f8      	ldr	r0, [r7, #12]
 8008158:	88b9      	ldrh	r1, [r7, #4]
 800815a:	88fa      	ldrh	r2, [r7, #6]
 800815c:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 800815e:	9306      	str	r3, [sp, #24]
 8008160:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 8008162:	9305      	str	r3, [sp, #20]
 8008164:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008168:	9304      	str	r3, [sp, #16]
 800816a:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800816e:	9303      	str	r3, [sp, #12]
 8008170:	f897 3020 	ldrb.w	r3, [r7, #32]
 8008174:	9302      	str	r3, [sp, #8]
 8008176:	7f3b      	ldrb	r3, [r7, #28]
 8008178:	9301      	str	r3, [sp, #4]
 800817a:	7e3b      	ldrb	r3, [r7, #24]
 800817c:	9300      	str	r3, [sp, #0]
 800817e:	460b      	mov	r3, r1
 8008180:	68b9      	ldr	r1, [r7, #8]
 8008182:	f006 fe45 	bl	800ee10 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8008186:	4a08      	ldr	r2, [pc, #32]	; (80081a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
 8008188:	68fb      	ldr	r3, [r7, #12]
 800818a:	601a      	str	r2, [r3, #0]
 800818c:	68fb      	ldr	r3, [r7, #12]
 800818e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008190:	619a      	str	r2, [r3, #24]
 8008192:	68fb      	ldr	r3, [r7, #12]
 8008194:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8008196:	61da      	str	r2, [r3, #28]
 8008198:	68fb      	ldr	r3, [r7, #12]
 800819a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800819c:	621a      	str	r2, [r3, #32]
{
}
 800819e:	68fb      	ldr	r3, [r7, #12]
 80081a0:	4618      	mov	r0, r3
 80081a2:	3710      	adds	r7, #16
 80081a4:	46bd      	mov	sp, r7
 80081a6:	bd80      	pop	{r7, pc}
 80081a8:	0801ed7c 	.word	0x0801ed7c

080081ac <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80081ac:	b480      	push	{r7}
 80081ae:	b085      	sub	sp, #20
 80081b0:	af00      	add	r7, sp, #0
 80081b2:	6078      	str	r0, [r7, #4]
 80081b4:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 80081b6:	687b      	ldr	r3, [r7, #4]
 80081b8:	699b      	ldr	r3, [r3, #24]
 80081ba:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80081bc:	683b      	ldr	r3, [r7, #0]
 80081be:	889b      	ldrh	r3, [r3, #4]
 80081c0:	0adb      	lsrs	r3, r3, #11
 80081c2:	b29b      	uxth	r3, r3
 80081c4:	009b      	lsls	r3, r3, #2
 80081c6:	68fa      	ldr	r2, [r7, #12]
 80081c8:	4413      	add	r3, r2
 80081ca:	681a      	ldr	r2, [r3, #0]
 80081cc:	683b      	ldr	r3, [r7, #0]
 80081ce:	681b      	ldr	r3, [r3, #0]
 80081d0:	4413      	add	r3, r2
}
 80081d2:	4618      	mov	r0, r3
 80081d4:	3714      	adds	r7, #20
 80081d6:	46bd      	mov	sp, r7
 80081d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081dc:	4770      	bx	lr

080081de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80081de:	b580      	push	{r7, lr}
 80081e0:	b086      	sub	sp, #24
 80081e2:	af00      	add	r7, sp, #0
 80081e4:	60f8      	str	r0, [r7, #12]
 80081e6:	460b      	mov	r3, r1
 80081e8:	607a      	str	r2, [r7, #4]
 80081ea:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	2b00      	cmp	r3, #0
 80081f0:	d003      	beq.n	80081fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80081f2:	687b      	ldr	r3, [r7, #4]
 80081f4:	7b1b      	ldrb	r3, [r3, #12]
 80081f6:	2b00      	cmp	r3, #0
 80081f8:	d101      	bne.n	80081fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 80081fa:	2300      	movs	r3, #0
 80081fc:	e023      	b.n	8008246 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    }

    uint16_t kerningTablePos = glyph->kerningTablePos();
 80081fe:	6878      	ldr	r0, [r7, #4]
 8008200:	f7ff ff7a 	bl	80080f8 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>
 8008204:	4603      	mov	r3, r0
 8008206:	82bb      	strh	r3, [r7, #20]
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8008208:	8abb      	ldrh	r3, [r7, #20]
 800820a:	82fb      	strh	r3, [r7, #22]
 800820c:	8afa      	ldrh	r2, [r7, #22]
 800820e:	8abb      	ldrh	r3, [r7, #20]
 8008210:	6879      	ldr	r1, [r7, #4]
 8008212:	7b09      	ldrb	r1, [r1, #12]
 8008214:	440b      	add	r3, r1
 8008216:	429a      	cmp	r2, r3
 8008218:	da14      	bge.n	8008244 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
    {
        if (prevChar == kerningData[i].unicodePrevChar)
 800821a:	68fb      	ldr	r3, [r7, #12]
 800821c:	69da      	ldr	r2, [r3, #28]
 800821e:	8afb      	ldrh	r3, [r7, #22]
 8008220:	009b      	lsls	r3, r3, #2
 8008222:	4413      	add	r3, r2
 8008224:	881b      	ldrh	r3, [r3, #0]
 8008226:	897a      	ldrh	r2, [r7, #10]
 8008228:	429a      	cmp	r2, r3
 800822a:	d107      	bne.n	800823c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x5e>
        {
            return kerningData[i].distance;
 800822c:	68fb      	ldr	r3, [r7, #12]
 800822e:	69da      	ldr	r2, [r3, #28]
 8008230:	8afb      	ldrh	r3, [r7, #22]
 8008232:	009b      	lsls	r3, r3, #2
 8008234:	4413      	add	r3, r2
 8008236:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800823a:	e004      	b.n	8008246 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 800823c:	8afb      	ldrh	r3, [r7, #22]
 800823e:	3301      	adds	r3, #1
 8008240:	82fb      	strh	r3, [r7, #22]
 8008242:	e7e3      	b.n	800820c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
        }
    }
    return 0;
 8008244:	2300      	movs	r3, #0
}
 8008246:	4618      	mov	r0, r3
 8008248:	3718      	adds	r7, #24
 800824a:	46bd      	mov	sp, r7
 800824c:	bd80      	pop	{r7, pc}
	...

08008250 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_10_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 20, 10, 2, 4, 1, 1, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8008250:	b580      	push	{r7, lr}
 8008252:	af00      	add	r7, sp, #0
 8008254:	4801      	ldr	r0, [pc, #4]	; (800825c <__tcf_0+0xc>)
 8008256:	f7ff fecf 	bl	8007ff8 <_ZN8touchgfx13GeneratedFontD1Ev>
 800825a:	bd80      	pop	{r7, pc}
 800825c:	2000061c 	.word	0x2000061c

08008260 <_Z23getFont_verdana_10_4bppv>:
{
 8008260:	b580      	push	{r7, lr}
 8008262:	b08a      	sub	sp, #40	; 0x28
 8008264:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 20, 10, 2, 4, 1, 1, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8008266:	4b1e      	ldr	r3, [pc, #120]	; (80082e0 <_Z23getFont_verdana_10_4bppv+0x80>)
 8008268:	781b      	ldrb	r3, [r3, #0]
 800826a:	f3bf 8f5b 	dmb	ish
 800826e:	b2db      	uxtb	r3, r3
 8008270:	f003 0301 	and.w	r3, r3, #1
 8008274:	2b00      	cmp	r3, #0
 8008276:	bf0c      	ite	eq
 8008278:	2301      	moveq	r3, #1
 800827a:	2300      	movne	r3, #0
 800827c:	b2db      	uxtb	r3, r3
 800827e:	2b00      	cmp	r3, #0
 8008280:	d02a      	beq.n	80082d8 <_Z23getFont_verdana_10_4bppv+0x78>
 8008282:	4817      	ldr	r0, [pc, #92]	; (80082e0 <_Z23getFont_verdana_10_4bppv+0x80>)
 8008284:	f013 fb31 	bl	801b8ea <__cxa_guard_acquire>
 8008288:	4603      	mov	r3, r0
 800828a:	2b00      	cmp	r3, #0
 800828c:	bf14      	ite	ne
 800828e:	2301      	movne	r3, #1
 8008290:	2300      	moveq	r3, #0
 8008292:	b2db      	uxtb	r3, r3
 8008294:	2b00      	cmp	r3, #0
 8008296:	d01f      	beq.n	80082d8 <_Z23getFont_verdana_10_4bppv+0x78>
 8008298:	2300      	movs	r3, #0
 800829a:	9309      	str	r3, [sp, #36]	; 0x24
 800829c:	2300      	movs	r3, #0
 800829e:	9308      	str	r3, [sp, #32]
 80082a0:	233f      	movs	r3, #63	; 0x3f
 80082a2:	9307      	str	r3, [sp, #28]
 80082a4:	4b0f      	ldr	r3, [pc, #60]	; (80082e4 <_Z23getFont_verdana_10_4bppv+0x84>)
 80082a6:	9306      	str	r3, [sp, #24]
 80082a8:	4b0f      	ldr	r3, [pc, #60]	; (80082e8 <_Z23getFont_verdana_10_4bppv+0x88>)
 80082aa:	9305      	str	r3, [sp, #20]
 80082ac:	2300      	movs	r3, #0
 80082ae:	9304      	str	r3, [sp, #16]
 80082b0:	2301      	movs	r3, #1
 80082b2:	9303      	str	r3, [sp, #12]
 80082b4:	2301      	movs	r3, #1
 80082b6:	9302      	str	r3, [sp, #8]
 80082b8:	2304      	movs	r3, #4
 80082ba:	9301      	str	r3, [sp, #4]
 80082bc:	2302      	movs	r3, #2
 80082be:	9300      	str	r3, [sp, #0]
 80082c0:	230a      	movs	r3, #10
 80082c2:	2214      	movs	r2, #20
 80082c4:	4909      	ldr	r1, [pc, #36]	; (80082ec <_Z23getFont_verdana_10_4bppv+0x8c>)
 80082c6:	480a      	ldr	r0, [pc, #40]	; (80082f0 <_Z23getFont_verdana_10_4bppv+0x90>)
 80082c8:	f7ff ff3a 	bl	8008140 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80082cc:	4809      	ldr	r0, [pc, #36]	; (80082f4 <_Z23getFont_verdana_10_4bppv+0x94>)
 80082ce:	f013 fb57 	bl	801b980 <atexit>
 80082d2:	4803      	ldr	r0, [pc, #12]	; (80082e0 <_Z23getFont_verdana_10_4bppv+0x80>)
 80082d4:	f013 fb15 	bl	801b902 <__cxa_guard_release>
    return verdana_10_4bpp;
 80082d8:	4b05      	ldr	r3, [pc, #20]	; (80082f0 <_Z23getFont_verdana_10_4bppv+0x90>)
}
 80082da:	4618      	mov	r0, r3
 80082dc:	46bd      	mov	sp, r7
 80082de:	bd80      	pop	{r7, pc}
 80082e0:	20000640 	.word	0x20000640
 80082e4:	080227bc 	.word	0x080227bc
 80082e8:	0801edc8 	.word	0x0801edc8
 80082ec:	08022800 	.word	0x08022800
 80082f0:	2000061c 	.word	0x2000061c
 80082f4:	08008251 	.word	0x08008251

080082f8 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_20_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 2, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80082f8:	b580      	push	{r7, lr}
 80082fa:	af00      	add	r7, sp, #0
 80082fc:	4801      	ldr	r0, [pc, #4]	; (8008304 <__tcf_0+0xc>)
 80082fe:	f7ff fe7b 	bl	8007ff8 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008302:	bd80      	pop	{r7, pc}
 8008304:	20000644 	.word	0x20000644

08008308 <_Z23getFont_verdana_20_4bppv>:
{
 8008308:	b580      	push	{r7, lr}
 800830a:	b08a      	sub	sp, #40	; 0x28
 800830c:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 2, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 800830e:	4b1e      	ldr	r3, [pc, #120]	; (8008388 <_Z23getFont_verdana_20_4bppv+0x80>)
 8008310:	781b      	ldrb	r3, [r3, #0]
 8008312:	f3bf 8f5b 	dmb	ish
 8008316:	b2db      	uxtb	r3, r3
 8008318:	f003 0301 	and.w	r3, r3, #1
 800831c:	2b00      	cmp	r3, #0
 800831e:	bf0c      	ite	eq
 8008320:	2301      	moveq	r3, #1
 8008322:	2300      	movne	r3, #0
 8008324:	b2db      	uxtb	r3, r3
 8008326:	2b00      	cmp	r3, #0
 8008328:	d02a      	beq.n	8008380 <_Z23getFont_verdana_20_4bppv+0x78>
 800832a:	4817      	ldr	r0, [pc, #92]	; (8008388 <_Z23getFont_verdana_20_4bppv+0x80>)
 800832c:	f013 fadd 	bl	801b8ea <__cxa_guard_acquire>
 8008330:	4603      	mov	r3, r0
 8008332:	2b00      	cmp	r3, #0
 8008334:	bf14      	ite	ne
 8008336:	2301      	movne	r3, #1
 8008338:	2300      	moveq	r3, #0
 800833a:	b2db      	uxtb	r3, r3
 800833c:	2b00      	cmp	r3, #0
 800833e:	d01f      	beq.n	8008380 <_Z23getFont_verdana_20_4bppv+0x78>
 8008340:	2300      	movs	r3, #0
 8008342:	9309      	str	r3, [sp, #36]	; 0x24
 8008344:	2300      	movs	r3, #0
 8008346:	9308      	str	r3, [sp, #32]
 8008348:	233f      	movs	r3, #63	; 0x3f
 800834a:	9307      	str	r3, [sp, #28]
 800834c:	4b0f      	ldr	r3, [pc, #60]	; (800838c <_Z23getFont_verdana_20_4bppv+0x84>)
 800834e:	9306      	str	r3, [sp, #24]
 8008350:	4b0f      	ldr	r3, [pc, #60]	; (8008390 <_Z23getFont_verdana_20_4bppv+0x88>)
 8008352:	9305      	str	r3, [sp, #20]
 8008354:	2302      	movs	r3, #2
 8008356:	9304      	str	r3, [sp, #16]
 8008358:	2300      	movs	r3, #0
 800835a:	9303      	str	r3, [sp, #12]
 800835c:	2301      	movs	r3, #1
 800835e:	9302      	str	r3, [sp, #8]
 8008360:	2304      	movs	r3, #4
 8008362:	9301      	str	r3, [sp, #4]
 8008364:	2304      	movs	r3, #4
 8008366:	9300      	str	r3, [sp, #0]
 8008368:	2314      	movs	r3, #20
 800836a:	221e      	movs	r2, #30
 800836c:	4909      	ldr	r1, [pc, #36]	; (8008394 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800836e:	480a      	ldr	r0, [pc, #40]	; (8008398 <_Z23getFont_verdana_20_4bppv+0x90>)
 8008370:	f7ff fee6 	bl	8008140 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8008374:	4809      	ldr	r0, [pc, #36]	; (800839c <_Z23getFont_verdana_20_4bppv+0x94>)
 8008376:	f013 fb03 	bl	801b980 <atexit>
 800837a:	4803      	ldr	r0, [pc, #12]	; (8008388 <_Z23getFont_verdana_20_4bppv+0x80>)
 800837c:	f013 fac1 	bl	801b902 <__cxa_guard_release>
    return verdana_20_4bpp;
 8008380:	4b05      	ldr	r3, [pc, #20]	; (8008398 <_Z23getFont_verdana_20_4bppv+0x90>)
}
 8008382:	4618      	mov	r0, r3
 8008384:	46bd      	mov	sp, r7
 8008386:	bd80      	pop	{r7, pc}
 8008388:	20000668 	.word	0x20000668
 800838c:	080227c0 	.word	0x080227c0
 8008390:	0801edcc 	.word	0x0801edcc
 8008394:	08022918 	.word	0x08022918
 8008398:	20000644 	.word	0x20000644
 800839c:	080082f9 	.word	0x080082f9

080083a0 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_40_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80083a0:	b580      	push	{r7, lr}
 80083a2:	af00      	add	r7, sp, #0
 80083a4:	4801      	ldr	r0, [pc, #4]	; (80083ac <__tcf_0+0xc>)
 80083a6:	f7ff fe27 	bl	8007ff8 <_ZN8touchgfx13GeneratedFontD1Ev>
 80083aa:	bd80      	pop	{r7, pc}
 80083ac:	2000066c 	.word	0x2000066c

080083b0 <_Z23getFont_verdana_40_4bppv>:
{
 80083b0:	b580      	push	{r7, lr}
 80083b2:	b08a      	sub	sp, #40	; 0x28
 80083b4:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80083b6:	4b1e      	ldr	r3, [pc, #120]	; (8008430 <_Z23getFont_verdana_40_4bppv+0x80>)
 80083b8:	781b      	ldrb	r3, [r3, #0]
 80083ba:	f3bf 8f5b 	dmb	ish
 80083be:	b2db      	uxtb	r3, r3
 80083c0:	f003 0301 	and.w	r3, r3, #1
 80083c4:	2b00      	cmp	r3, #0
 80083c6:	bf0c      	ite	eq
 80083c8:	2301      	moveq	r3, #1
 80083ca:	2300      	movne	r3, #0
 80083cc:	b2db      	uxtb	r3, r3
 80083ce:	2b00      	cmp	r3, #0
 80083d0:	d02a      	beq.n	8008428 <_Z23getFont_verdana_40_4bppv+0x78>
 80083d2:	4817      	ldr	r0, [pc, #92]	; (8008430 <_Z23getFont_verdana_40_4bppv+0x80>)
 80083d4:	f013 fa89 	bl	801b8ea <__cxa_guard_acquire>
 80083d8:	4603      	mov	r3, r0
 80083da:	2b00      	cmp	r3, #0
 80083dc:	bf14      	ite	ne
 80083de:	2301      	movne	r3, #1
 80083e0:	2300      	moveq	r3, #0
 80083e2:	b2db      	uxtb	r3, r3
 80083e4:	2b00      	cmp	r3, #0
 80083e6:	d01f      	beq.n	8008428 <_Z23getFont_verdana_40_4bppv+0x78>
 80083e8:	2300      	movs	r3, #0
 80083ea:	9309      	str	r3, [sp, #36]	; 0x24
 80083ec:	2300      	movs	r3, #0
 80083ee:	9308      	str	r3, [sp, #32]
 80083f0:	233f      	movs	r3, #63	; 0x3f
 80083f2:	9307      	str	r3, [sp, #28]
 80083f4:	4b0f      	ldr	r3, [pc, #60]	; (8008434 <_Z23getFont_verdana_40_4bppv+0x84>)
 80083f6:	9306      	str	r3, [sp, #24]
 80083f8:	4b0f      	ldr	r3, [pc, #60]	; (8008438 <_Z23getFont_verdana_40_4bppv+0x88>)
 80083fa:	9305      	str	r3, [sp, #20]
 80083fc:	2300      	movs	r3, #0
 80083fe:	9304      	str	r3, [sp, #16]
 8008400:	2300      	movs	r3, #0
 8008402:	9303      	str	r3, [sp, #12]
 8008404:	2301      	movs	r3, #1
 8008406:	9302      	str	r3, [sp, #8]
 8008408:	2304      	movs	r3, #4
 800840a:	9301      	str	r3, [sp, #4]
 800840c:	2300      	movs	r3, #0
 800840e:	9300      	str	r3, [sp, #0]
 8008410:	2328      	movs	r3, #40	; 0x28
 8008412:	2201      	movs	r2, #1
 8008414:	4909      	ldr	r1, [pc, #36]	; (800843c <_Z23getFont_verdana_40_4bppv+0x8c>)
 8008416:	480a      	ldr	r0, [pc, #40]	; (8008440 <_Z23getFont_verdana_40_4bppv+0x90>)
 8008418:	f7ff fe92 	bl	8008140 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800841c:	4809      	ldr	r0, [pc, #36]	; (8008444 <_Z23getFont_verdana_40_4bppv+0x94>)
 800841e:	f013 faaf 	bl	801b980 <atexit>
 8008422:	4803      	ldr	r0, [pc, #12]	; (8008430 <_Z23getFont_verdana_40_4bppv+0x80>)
 8008424:	f013 fa6d 	bl	801b902 <__cxa_guard_release>
    return verdana_40_4bpp;
 8008428:	4b05      	ldr	r3, [pc, #20]	; (8008440 <_Z23getFont_verdana_40_4bppv+0x90>)
}
 800842a:	4618      	mov	r0, r3
 800842c:	46bd      	mov	sp, r7
 800842e:	bd80      	pop	{r7, pc}
 8008430:	20000690 	.word	0x20000690
 8008434:	080227fc 	.word	0x080227fc
 8008438:	0801edd0 	.word	0x0801edd0
 800843c:	08022abc 	.word	0x08022abc
 8008440:	2000066c 	.word	0x2000066c
 8008444:	080083a1 	.word	0x080083a1

08008448 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8008448:	b480      	push	{r7}
 800844a:	b083      	sub	sp, #12
 800844c:	af00      	add	r7, sp, #0
 800844e:	6078      	str	r0, [r7, #4]
 8008450:	6039      	str	r1, [r7, #0]
 8008452:	683b      	ldr	r3, [r7, #0]
 8008454:	4618      	mov	r0, r3
 8008456:	370c      	adds	r7, #12
 8008458:	46bd      	mov	sp, r7
 800845a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800845e:	4770      	bx	lr

08008460 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     *        This handler is invoked when a mouse click or display touch event has been
     *        detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008460:	b480      	push	{r7}
 8008462:	b083      	sub	sp, #12
 8008464:	af00      	add	r7, sp, #0
 8008466:	6078      	str	r0, [r7, #4]
 8008468:	6039      	str	r1, [r7, #0]
    {
    }
 800846a:	bf00      	nop
 800846c:	370c      	adds	r7, #12
 800846e:	46bd      	mov	sp, r7
 8008470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008474:	4770      	bx	lr

08008476 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
     *
     *        This handler is invoked when a drag event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8008476:	b480      	push	{r7}
 8008478:	b083      	sub	sp, #12
 800847a:	af00      	add	r7, sp, #0
 800847c:	6078      	str	r0, [r7, #4]
 800847e:	6039      	str	r1, [r7, #0]
    {
    }
 8008480:	bf00      	nop
 8008482:	370c      	adds	r7, #12
 8008484:	46bd      	mov	sp, r7
 8008486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800848a:	4770      	bx	lr

0800848c <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
     *
     *        This handler is invoked when a gesture event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800848c:	b480      	push	{r7}
 800848e:	b083      	sub	sp, #12
 8008490:	af00      	add	r7, sp, #0
 8008492:	6078      	str	r0, [r7, #4]
 8008494:	6039      	str	r1, [r7, #0]
    {
    }
 8008496:	bf00      	nop
 8008498:	370c      	adds	r7, #12
 800849a:	46bd      	mov	sp, r7
 800849c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084a0:	4770      	bx	lr

080084a2 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
     *        This handler is invoked when a key (or button) event has been detected by the
     *        system.
     *
     * @param c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 80084a2:	b480      	push	{r7}
 80084a4:	b083      	sub	sp, #12
 80084a6:	af00      	add	r7, sp, #0
 80084a8:	6078      	str	r0, [r7, #4]
 80084aa:	460b      	mov	r3, r1
 80084ac:	70fb      	strb	r3, [r7, #3]
    {
    }
 80084ae:	bf00      	nop
 80084b0:	370c      	adds	r7, #12
 80084b2:	46bd      	mov	sp, r7
 80084b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084b8:	4770      	bx	lr

080084ba <_ZN8touchgfx15UIEventListener15handleTickEventEv>:
     * @brief This handler is invoked when a system tick event has been generated.
     *
     *        This handler is invoked when a system tick event has been generated. The system
     *        tick period is configured in the HAL.
     */
    virtual void handleTickEvent()
 80084ba:	b480      	push	{r7}
 80084bc:	b083      	sub	sp, #12
 80084be:	af00      	add	r7, sp, #0
 80084c0:	6078      	str	r0, [r7, #4]
    {
    }
 80084c2:	bf00      	nop
 80084c4:	370c      	adds	r7, #12
 80084c6:	46bd      	mov	sp, r7
 80084c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084cc:	4770      	bx	lr

080084ce <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:
     *
     * @brief This handler is invoked when a change screen event is pending.
     *
     *        This handler is invoked when a change screen event is pending.
     */
    virtual void handlePendingScreenTransition()
 80084ce:	b480      	push	{r7}
 80084d0:	b083      	sub	sp, #12
 80084d2:	af00      	add	r7, sp, #0
 80084d4:	6078      	str	r0, [r7, #4]
    {
    }
 80084d6:	bf00      	nop
 80084d8:	370c      	adds	r7, #12
 80084da:	46bd      	mov	sp, r7
 80084dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084e0:	4770      	bx	lr
	...

080084e4 <_ZN8touchgfx15UIEventListenerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~UIEventListener()
 80084e4:	b480      	push	{r7}
 80084e6:	b083      	sub	sp, #12
 80084e8:	af00      	add	r7, sp, #0
 80084ea:	6078      	str	r0, [r7, #4]
    {
 80084ec:	4a04      	ldr	r2, [pc, #16]	; (8008500 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 80084ee:	687b      	ldr	r3, [r7, #4]
 80084f0:	601a      	str	r2, [r3, #0]
    }
 80084f2:	687b      	ldr	r3, [r7, #4]
 80084f4:	4618      	mov	r0, r3
 80084f6:	370c      	adds	r7, #12
 80084f8:	46bd      	mov	sp, r7
 80084fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084fe:	4770      	bx	lr
 8008500:	0801eec4 	.word	0x0801eec4

08008504 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8008504:	b580      	push	{r7, lr}
 8008506:	b082      	sub	sp, #8
 8008508:	af00      	add	r7, sp, #0
 800850a:	6078      	str	r0, [r7, #4]
    }
 800850c:	6878      	ldr	r0, [r7, #4]
 800850e:	f7ff ffe9 	bl	80084e4 <_ZN8touchgfx15UIEventListenerD1Ev>
 8008512:	2104      	movs	r1, #4
 8008514:	6878      	ldr	r0, [r7, #4]
 8008516:	f013 f9e6 	bl	801b8e6 <_ZdlPvj>
 800851a:	687b      	ldr	r3, [r7, #4]
 800851c:	4618      	mov	r0, r3
 800851e:	3708      	adds	r7, #8
 8008520:	46bd      	mov	sp, r7
 8008522:	bd80      	pop	{r7, pc}

08008524 <_ZN8touchgfx10TransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs the Transition.
     */
    Transition() :
 8008524:	b480      	push	{r7}
 8008526:	b083      	sub	sp, #12
 8008528:	af00      	add	r7, sp, #0
 800852a:	6078      	str	r0, [r7, #4]
        screenContainer(0), done(false)
 800852c:	4a07      	ldr	r2, [pc, #28]	; (800854c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	601a      	str	r2, [r3, #0]
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	2200      	movs	r2, #0
 8008536:	605a      	str	r2, [r3, #4]
 8008538:	687b      	ldr	r3, [r7, #4]
 800853a:	2200      	movs	r2, #0
 800853c:	721a      	strb	r2, [r3, #8]
    {
    }
 800853e:	687b      	ldr	r3, [r7, #4]
 8008540:	4618      	mov	r0, r3
 8008542:	370c      	adds	r7, #12
 8008544:	46bd      	mov	sp, r7
 8008546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800854a:	4770      	bx	lr
 800854c:	0801eea4 	.word	0x0801eea4

08008550 <_ZN8touchgfx10TransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Transition()
 8008550:	b480      	push	{r7}
 8008552:	b083      	sub	sp, #12
 8008554:	af00      	add	r7, sp, #0
 8008556:	6078      	str	r0, [r7, #4]
    {
 8008558:	4a04      	ldr	r2, [pc, #16]	; (800856c <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	601a      	str	r2, [r3, #0]
    }
 800855e:	687b      	ldr	r3, [r7, #4]
 8008560:	4618      	mov	r0, r3
 8008562:	370c      	adds	r7, #12
 8008564:	46bd      	mov	sp, r7
 8008566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800856a:	4770      	bx	lr
 800856c:	0801eea4 	.word	0x0801eea4

08008570 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8008570:	b580      	push	{r7, lr}
 8008572:	b082      	sub	sp, #8
 8008574:	af00      	add	r7, sp, #0
 8008576:	6078      	str	r0, [r7, #4]
    }
 8008578:	6878      	ldr	r0, [r7, #4]
 800857a:	f7ff ffe9 	bl	8008550 <_ZN8touchgfx10TransitionD1Ev>
 800857e:	210c      	movs	r1, #12
 8008580:	6878      	ldr	r0, [r7, #4]
 8008582:	f013 f9b0 	bl	801b8e6 <_ZdlPvj>
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	4618      	mov	r0, r3
 800858a:	3708      	adds	r7, #8
 800858c:	46bd      	mov	sp, r7
 800858e:	bd80      	pop	{r7, pc}

08008590 <_ZN8touchgfx10Transition15handleTickEventEv>:
     *
     * @brief Called for every tick when transitioning.
     *
     *        Called for every tick when transitioning. Base does nothing.
     */
    virtual void handleTickEvent() { }
 8008590:	b480      	push	{r7}
 8008592:	b083      	sub	sp, #12
 8008594:	af00      	add	r7, sp, #0
 8008596:	6078      	str	r0, [r7, #4]
 8008598:	bf00      	nop
 800859a:	370c      	adds	r7, #12
 800859c:	46bd      	mov	sp, r7
 800859e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085a2:	4770      	bx	lr

080085a4 <_ZN8touchgfx10Transition8tearDownEv>:
     * @brief Tears down the Animation.
     *
     *        Tears down the Animation. Called before the d.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void tearDown() { }
 80085a4:	b480      	push	{r7}
 80085a6:	b083      	sub	sp, #12
 80085a8:	af00      	add	r7, sp, #0
 80085aa:	6078      	str	r0, [r7, #4]
 80085ac:	bf00      	nop
 80085ae:	370c      	adds	r7, #12
 80085b0:	46bd      	mov	sp, r7
 80085b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085b6:	4770      	bx	lr

080085b8 <_ZN8touchgfx10Transition4initEv>:
     * @brief Initializes the transition.
     *
     *        Initializes the transition. Called after the c.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void init() { }
 80085b8:	b480      	push	{r7}
 80085ba:	b083      	sub	sp, #12
 80085bc:	af00      	add	r7, sp, #0
 80085be:	6078      	str	r0, [r7, #4]
 80085c0:	bf00      	nop
 80085c2:	370c      	adds	r7, #12
 80085c4:	46bd      	mov	sp, r7
 80085c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ca:	4770      	bx	lr

080085cc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *        Sets the screen container. Is used by Screen to enable the transition to access
     *        the container.
     *
     * @param [in] cont The container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 80085cc:	b480      	push	{r7}
 80085ce:	b083      	sub	sp, #12
 80085d0:	af00      	add	r7, sp, #0
 80085d2:	6078      	str	r0, [r7, #4]
 80085d4:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 80085d6:	687b      	ldr	r3, [r7, #4]
 80085d8:	683a      	ldr	r2, [r7, #0]
 80085da:	605a      	str	r2, [r3, #4]
    }
 80085dc:	bf00      	nop
 80085de:	370c      	adds	r7, #12
 80085e0:	46bd      	mov	sp, r7
 80085e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085e6:	4770      	bx	lr

080085e8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *        provide a means to switch screen from places that does not have access to a
     *        pointer to the new screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 80085e8:	b480      	push	{r7}
 80085ea:	b083      	sub	sp, #12
 80085ec:	af00      	add	r7, sp, #0
 80085ee:	6078      	str	r0, [r7, #4]
 80085f0:	460b      	mov	r3, r1
 80085f2:	70fb      	strb	r3, [r7, #3]
    {
    }
 80085f4:	bf00      	nop
 80085f6:	370c      	adds	r7, #12
 80085f8:	46bd      	mov	sp, r7
 80085fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085fe:	4770      	bx	lr

08008600 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
     *
     * @brief Destructor.
     *
     *        Empty virtual destructor.
     */
    virtual ~GenericCallback()
 8008600:	b480      	push	{r7}
 8008602:	b083      	sub	sp, #12
 8008604:	af00      	add	r7, sp, #0
 8008606:	6078      	str	r0, [r7, #4]
    {
 8008608:	4a04      	ldr	r2, [pc, #16]	; (800861c <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800860a:	687b      	ldr	r3, [r7, #4]
 800860c:	601a      	str	r2, [r3, #0]
    }
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	4618      	mov	r0, r3
 8008612:	370c      	adds	r7, #12
 8008614:	46bd      	mov	sp, r7
 8008616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800861a:	4770      	bx	lr
 800861c:	0801ee8c 	.word	0x0801ee8c

08008620 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8008620:	b580      	push	{r7, lr}
 8008622:	b082      	sub	sp, #8
 8008624:	af00      	add	r7, sp, #0
 8008626:	6078      	str	r0, [r7, #4]
    }
 8008628:	6878      	ldr	r0, [r7, #4]
 800862a:	f7ff ffe9 	bl	8008600 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800862e:	2104      	movs	r1, #4
 8008630:	6878      	ldr	r0, [r7, #4]
 8008632:	f013 f958 	bl	801b8e6 <_ZdlPvj>
 8008636:	687b      	ldr	r3, [r7, #4]
 8008638:	4618      	mov	r0, r3
 800863a:	3708      	adds	r7, #8
 800863c:	46bd      	mov	sp, r7
 800863e:	bd80      	pop	{r7, pc}

08008640 <_ZN8touchgfx3HAL11getInstanceEv>:
     *
     *        Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8008640:	b480      	push	{r7}
 8008642:	af00      	add	r7, sp, #0
    {
        return instance;
 8008644:	4b03      	ldr	r3, [pc, #12]	; (8008654 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 8008646:	681b      	ldr	r3, [r3, #0]
    }
 8008648:	4618      	mov	r0, r3
 800864a:	46bd      	mov	sp, r7
 800864c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008650:	4770      	bx	lr
 8008652:	bf00      	nop
 8008654:	200017a4 	.word	0x200017a4

08008658 <_ZN8touchgfx3HAL3lcdEv>:
     *
     *        Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8008658:	b480      	push	{r7}
 800865a:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800865c:	4b0b      	ldr	r3, [pc, #44]	; (800868c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800865e:	681b      	ldr	r3, [r3, #0]
 8008660:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 8008664:	2b00      	cmp	r3, #0
 8008666:	d008      	beq.n	800867a <_ZN8touchgfx3HAL3lcdEv+0x22>
 8008668:	4b08      	ldr	r3, [pc, #32]	; (800868c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800866a:	681b      	ldr	r3, [r3, #0]
 800866c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800866e:	2b00      	cmp	r3, #0
 8008670:	d003      	beq.n	800867a <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 8008672:	4b06      	ldr	r3, [pc, #24]	; (800868c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008674:	681b      	ldr	r3, [r3, #0]
 8008676:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008678:	e002      	b.n	8008680 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        else
        {
            return instance->lcdRef;
 800867a:	4b04      	ldr	r3, [pc, #16]	; (800868c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800867c:	681b      	ldr	r3, [r3, #0]
 800867e:	689b      	ldr	r3, [r3, #8]
        }
    }
 8008680:	4618      	mov	r0, r3
 8008682:	46bd      	mov	sp, r7
 8008684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008688:	4770      	bx	lr
 800868a:	bf00      	nop
 800868c:	200017a4 	.word	0x200017a4

08008690 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8008690:	b580      	push	{r7, lr}
 8008692:	b082      	sub	sp, #8
 8008694:	af00      	add	r7, sp, #0
 8008696:	6078      	str	r0, [r7, #4]
 8008698:	4a05      	ldr	r2, [pc, #20]	; (80086b0 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800869a:	687b      	ldr	r3, [r7, #4]
 800869c:	601a      	str	r2, [r3, #0]
 800869e:	687b      	ldr	r3, [r7, #4]
 80086a0:	4618      	mov	r0, r3
 80086a2:	f7ff ff1f 	bl	80084e4 <_ZN8touchgfx15UIEventListenerD1Ev>
 80086a6:	687b      	ldr	r3, [r7, #4]
 80086a8:	4618      	mov	r0, r3
 80086aa:	3708      	adds	r7, #8
 80086ac:	46bd      	mov	sp, r7
 80086ae:	bd80      	pop	{r7, pc}
 80086b0:	080201f0 	.word	0x080201f0

080086b4 <_ZN8touchgfx11ApplicationD0Ev>:
 80086b4:	b580      	push	{r7, lr}
 80086b6:	b082      	sub	sp, #8
 80086b8:	af00      	add	r7, sp, #0
 80086ba:	6078      	str	r0, [r7, #4]
 80086bc:	6878      	ldr	r0, [r7, #4]
 80086be:	f7ff ffe7 	bl	8008690 <_ZN8touchgfx11ApplicationD1Ev>
 80086c2:	f44f 7198 	mov.w	r1, #304	; 0x130
 80086c6:	6878      	ldr	r0, [r7, #4]
 80086c8:	f013 f90d 	bl	801b8e6 <_ZdlPvj>
 80086cc:	687b      	ldr	r3, [r7, #4]
 80086ce:	4618      	mov	r0, r3
 80086d0:	3708      	adds	r7, #8
 80086d2:	46bd      	mov	sp, r7
 80086d4:	bd80      	pop	{r7, pc}
	...

080086d8 <_ZN8touchgfx14MVPApplicationC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    MVPApplication() :
 80086d8:	b580      	push	{r7, lr}
 80086da:	b082      	sub	sp, #8
 80086dc:	af00      	add	r7, sp, #0
 80086de:	6078      	str	r0, [r7, #4]
        currentPresenter(0),
        pendingScreenTransitionCallback(0)
 80086e0:	687b      	ldr	r3, [r7, #4]
 80086e2:	4618      	mov	r0, r3
 80086e4:	f005 fed0 	bl	800e488 <_ZN8touchgfx11ApplicationC1Ev>
 80086e8:	4a09      	ldr	r2, [pc, #36]	; (8008710 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 80086ea:	687b      	ldr	r3, [r7, #4]
 80086ec:	601a      	str	r2, [r3, #0]
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	2200      	movs	r2, #0
 80086f2:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 80086f6:	687b      	ldr	r3, [r7, #4]
 80086f8:	2200      	movs	r2, #0
 80086fa:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    {
        instance = this;
 80086fe:	687b      	ldr	r3, [r7, #4]
 8008700:	4a04      	ldr	r2, [pc, #16]	; (8008714 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8008702:	6013      	str	r3, [r2, #0]
    }
 8008704:	687b      	ldr	r3, [r7, #4]
 8008706:	4618      	mov	r0, r3
 8008708:	3708      	adds	r7, #8
 800870a:	46bd      	mov	sp, r7
 800870c:	bd80      	pop	{r7, pc}
 800870e:	bf00      	nop
 8008710:	0801ee50 	.word	0x0801ee50
 8008714:	20001810 	.word	0x20001810

08008718 <_ZN8touchgfx14MVPApplicationD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPApplication() { }
 8008718:	b580      	push	{r7, lr}
 800871a:	b082      	sub	sp, #8
 800871c:	af00      	add	r7, sp, #0
 800871e:	6078      	str	r0, [r7, #4]
 8008720:	4a05      	ldr	r2, [pc, #20]	; (8008738 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 8008722:	687b      	ldr	r3, [r7, #4]
 8008724:	601a      	str	r2, [r3, #0]
 8008726:	687b      	ldr	r3, [r7, #4]
 8008728:	4618      	mov	r0, r3
 800872a:	f7ff ffb1 	bl	8008690 <_ZN8touchgfx11ApplicationD1Ev>
 800872e:	687b      	ldr	r3, [r7, #4]
 8008730:	4618      	mov	r0, r3
 8008732:	3708      	adds	r7, #8
 8008734:	46bd      	mov	sp, r7
 8008736:	bd80      	pop	{r7, pc}
 8008738:	0801ee50 	.word	0x0801ee50

0800873c <_ZN8touchgfx14MVPApplicationD0Ev>:
 800873c:	b580      	push	{r7, lr}
 800873e:	b082      	sub	sp, #8
 8008740:	af00      	add	r7, sp, #0
 8008742:	6078      	str	r0, [r7, #4]
 8008744:	6878      	ldr	r0, [r7, #4]
 8008746:	f7ff ffe7 	bl	8008718 <_ZN8touchgfx14MVPApplicationD1Ev>
 800874a:	f44f 719c 	mov.w	r1, #312	; 0x138
 800874e:	6878      	ldr	r0, [r7, #4]
 8008750:	f013 f8c9 	bl	801b8e6 <_ZdlPvj>
 8008754:	687b      	ldr	r3, [r7, #4]
 8008756:	4618      	mov	r0, r3
 8008758:	3708      	adds	r7, #8
 800875a:	46bd      	mov	sp, r7
 800875c:	bd80      	pop	{r7, pc}

0800875e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     *
     * @brief Handles the pending screen transition.
     *
     *        Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800875e:	b580      	push	{r7, lr}
 8008760:	b082      	sub	sp, #8
 8008762:	af00      	add	r7, sp, #0
 8008764:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8008766:	6878      	ldr	r0, [r7, #4]
 8008768:	f000 f804 	bl	8008774 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800876c:	bf00      	nop
 800876e:	3708      	adds	r7, #8
 8008770:	46bd      	mov	sp, r7
 8008772:	bd80      	pop	{r7, pc}

08008774 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:
     * @brief Evaluates the pending Callback instances.
     *
     *        Evaluates the pending Callback instances. If a callback is valid, it is executed
     *        and a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8008774:	b580      	push	{r7, lr}
 8008776:	b082      	sub	sp, #8
 8008778:	af00      	add	r7, sp, #0
 800877a:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800877c:	687b      	ldr	r3, [r7, #4]
 800877e:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8008782:	2b00      	cmp	r3, #0
 8008784:	d00f      	beq.n	80087a6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008786:	687b      	ldr	r3, [r7, #4]
 8008788:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 800878c:	687b      	ldr	r3, [r7, #4]
 800878e:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8008792:	681b      	ldr	r3, [r3, #0]
 8008794:	330c      	adds	r3, #12
 8008796:	681b      	ldr	r3, [r3, #0]
 8008798:	4610      	mov	r0, r2
 800879a:	4798      	blx	r3
 800879c:	4603      	mov	r3, r0
 800879e:	2b00      	cmp	r3, #0
 80087a0:	d001      	beq.n	80087a6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80087a2:	2301      	movs	r3, #1
 80087a4:	e000      	b.n	80087a8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 80087a6:	2300      	movs	r3, #0
 80087a8:	2b00      	cmp	r3, #0
 80087aa:	d00e      	beq.n	80087ca <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 80087b2:	687b      	ldr	r3, [r7, #4]
 80087b4:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80087b8:	681b      	ldr	r3, [r3, #0]
 80087ba:	3308      	adds	r3, #8
 80087bc:	681b      	ldr	r3, [r3, #0]
 80087be:	4610      	mov	r0, r2
 80087c0:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80087c2:	687b      	ldr	r3, [r7, #4]
 80087c4:	2200      	movs	r2, #0
 80087c6:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
        }
    }
 80087ca:	bf00      	nop
 80087cc:	3708      	adds	r7, #8
 80087ce:	46bd      	mov	sp, r7
 80087d0:	bd80      	pop	{r7, pc}

080087d2 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>:
 * @param [in] currentScreen    If non-null, the current screen.
 * @param [in] currentPresenter If non-null, the current presenter.
 * @param [in] currentTrans     If non-null, the current transaction.
 */
static inline void prepareTransition(Screen** currentScreen, Presenter** currentPresenter, Transition** currentTrans)
{
 80087d2:	b580      	push	{r7, lr}
 80087d4:	b084      	sub	sp, #16
 80087d6:	af00      	add	r7, sp, #0
 80087d8:	60f8      	str	r0, [r7, #12]
 80087da:	60b9      	str	r1, [r7, #8]
 80087dc:	607a      	str	r2, [r7, #4]
    Application::getInstance()->clearAllTimerWidgets();
 80087de:	f005 fe33 	bl	800e448 <_ZN8touchgfx11Application11getInstanceEv>
 80087e2:	4603      	mov	r3, r0
 80087e4:	4618      	mov	r0, r3
 80087e6:	f005 fe35 	bl	800e454 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>

    if (*currentTrans)
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	681b      	ldr	r3, [r3, #0]
 80087ee:	2b00      	cmp	r3, #0
 80087f0:	d008      	beq.n	8008804 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x32>
    {
        (*currentTrans)->tearDown();
 80087f2:	687b      	ldr	r3, [r7, #4]
 80087f4:	681a      	ldr	r2, [r3, #0]
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	681b      	ldr	r3, [r3, #0]
 80087fa:	681b      	ldr	r3, [r3, #0]
 80087fc:	330c      	adds	r3, #12
 80087fe:	681b      	ldr	r3, [r3, #0]
 8008800:	4610      	mov	r0, r2
 8008802:	4798      	blx	r3
    }
    if (*currentTrans)
 8008804:	687b      	ldr	r3, [r7, #4]
 8008806:	681b      	ldr	r3, [r3, #0]
 8008808:	2b00      	cmp	r3, #0
 800880a:	d007      	beq.n	800881c <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x4a>
    {
        (*currentTrans)->~Transition();
 800880c:	687b      	ldr	r3, [r7, #4]
 800880e:	681a      	ldr	r2, [r3, #0]
 8008810:	687b      	ldr	r3, [r7, #4]
 8008812:	681b      	ldr	r3, [r3, #0]
 8008814:	681b      	ldr	r3, [r3, #0]
 8008816:	681b      	ldr	r3, [r3, #0]
 8008818:	4610      	mov	r0, r2
 800881a:	4798      	blx	r3
    }
    if (*currentScreen)
 800881c:	68fb      	ldr	r3, [r7, #12]
 800881e:	681b      	ldr	r3, [r3, #0]
 8008820:	2b00      	cmp	r3, #0
 8008822:	d008      	beq.n	8008836 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x64>
    {
        (*currentScreen)->tearDownScreen();
 8008824:	68fb      	ldr	r3, [r7, #12]
 8008826:	681a      	ldr	r2, [r3, #0]
 8008828:	68fb      	ldr	r3, [r7, #12]
 800882a:	681b      	ldr	r3, [r3, #0]
 800882c:	681b      	ldr	r3, [r3, #0]
 800882e:	3314      	adds	r3, #20
 8008830:	681b      	ldr	r3, [r3, #0]
 8008832:	4610      	mov	r0, r2
 8008834:	4798      	blx	r3
    }
    if (*currentPresenter)
 8008836:	68bb      	ldr	r3, [r7, #8]
 8008838:	681b      	ldr	r3, [r3, #0]
 800883a:	2b00      	cmp	r3, #0
 800883c:	d008      	beq.n	8008850 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x7e>
    {
        (*currentPresenter)->deactivate();
 800883e:	68bb      	ldr	r3, [r7, #8]
 8008840:	681a      	ldr	r2, [r3, #0]
 8008842:	68bb      	ldr	r3, [r7, #8]
 8008844:	681b      	ldr	r3, [r3, #0]
 8008846:	681b      	ldr	r3, [r3, #0]
 8008848:	3304      	adds	r3, #4
 800884a:	681b      	ldr	r3, [r3, #0]
 800884c:	4610      	mov	r0, r2
 800884e:	4798      	blx	r3
    }
    if (*currentScreen)
 8008850:	68fb      	ldr	r3, [r7, #12]
 8008852:	681b      	ldr	r3, [r3, #0]
 8008854:	2b00      	cmp	r3, #0
 8008856:	d007      	beq.n	8008868 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x96>
    {
        (*currentScreen)->~Screen();
 8008858:	68fb      	ldr	r3, [r7, #12]
 800885a:	681a      	ldr	r2, [r3, #0]
 800885c:	68fb      	ldr	r3, [r7, #12]
 800885e:	681b      	ldr	r3, [r3, #0]
 8008860:	681b      	ldr	r3, [r3, #0]
 8008862:	681b      	ldr	r3, [r3, #0]
 8008864:	4610      	mov	r0, r2
 8008866:	4798      	blx	r3
    }
    if (*currentPresenter)
 8008868:	68bb      	ldr	r3, [r7, #8]
 800886a:	681b      	ldr	r3, [r3, #0]
 800886c:	2b00      	cmp	r3, #0
 800886e:	d008      	beq.n	8008882 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0xb0>
    {
        (*currentPresenter)->~Presenter();
 8008870:	68bb      	ldr	r3, [r7, #8]
 8008872:	681a      	ldr	r2, [r3, #0]
 8008874:	68bb      	ldr	r3, [r7, #8]
 8008876:	681b      	ldr	r3, [r3, #0]
 8008878:	681b      	ldr	r3, [r3, #0]
 800887a:	3308      	adds	r3, #8
 800887c:	681b      	ldr	r3, [r3, #0]
 800887e:	4610      	mov	r0, r2
 8008880:	4798      	blx	r3
    }
}
 8008882:	bf00      	nop
 8008884:	3710      	adds	r7, #16
 8008886:	46bd      	mov	sp, r7
 8008888:	bd80      	pop	{r7, pc}

0800888a <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>:
 * @param [in] newScreen     If non-null, the new screen.
 * @param [in] newPresenter  If non-null, the new presenter.
 * @param [in] newTransition If non-null, the new transition.
 */
static inline void finalizeTransition(Screen* newScreen, Presenter* newPresenter, Transition* newTransition)
{
 800888a:	b580      	push	{r7, lr}
 800888c:	b084      	sub	sp, #16
 800888e:	af00      	add	r7, sp, #0
 8008890:	60f8      	str	r0, [r7, #12]
 8008892:	60b9      	str	r1, [r7, #8]
 8008894:	607a      	str	r2, [r7, #4]
    newScreen->setupScreen();
 8008896:	68fb      	ldr	r3, [r7, #12]
 8008898:	681b      	ldr	r3, [r3, #0]
 800889a:	330c      	adds	r3, #12
 800889c:	681b      	ldr	r3, [r3, #0]
 800889e:	68f8      	ldr	r0, [r7, #12]
 80088a0:	4798      	blx	r3
    newPresenter->activate();
 80088a2:	68bb      	ldr	r3, [r7, #8]
 80088a4:	681b      	ldr	r3, [r3, #0]
 80088a6:	681b      	ldr	r3, [r3, #0]
 80088a8:	68b8      	ldr	r0, [r7, #8]
 80088aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80088ac:	6879      	ldr	r1, [r7, #4]
 80088ae:	68f8      	ldr	r0, [r7, #12]
 80088b0:	f006 fe74 	bl	800f59c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80088b4:	687b      	ldr	r3, [r7, #4]
 80088b6:	681b      	ldr	r3, [r3, #0]
 80088b8:	3310      	adds	r3, #16
 80088ba:	681b      	ldr	r3, [r3, #0]
 80088bc:	6878      	ldr	r0, [r7, #4]
 80088be:	4798      	blx	r3

    Application::getInstance()->draw();
 80088c0:	f005 fdc2 	bl	800e448 <_ZN8touchgfx11Application11getInstanceEv>
 80088c4:	4603      	mov	r3, r0
 80088c6:	681a      	ldr	r2, [r3, #0]
 80088c8:	3228      	adds	r2, #40	; 0x28
 80088ca:	6812      	ldr	r2, [r2, #0]
 80088cc:	4618      	mov	r0, r3
 80088ce:	4790      	blx	r2
}
 80088d0:	bf00      	nop
 80088d2:	3710      	adds	r7, #16
 80088d4:	46bd      	mov	sp, r7
 80088d6:	bd80      	pop	{r7, pc}

080088d8 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 80088d8:	b480      	push	{r7}
 80088da:	b083      	sub	sp, #12
 80088dc:	af00      	add	r7, sp, #0
 80088de:	6078      	str	r0, [r7, #4]
 80088e0:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 80088e2:	687b      	ldr	r3, [r7, #4]
 80088e4:	683a      	ldr	r2, [r7, #0]
 80088e6:	601a      	str	r2, [r3, #0]
    }
 80088e8:	bf00      	nop
 80088ea:	370c      	adds	r7, #12
 80088ec:	46bd      	mov	sp, r7
 80088ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088f2:	4770      	bx	lr

080088f4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80088f4:	b580      	push	{r7, lr}
 80088f6:	b082      	sub	sp, #8
 80088f8:	af00      	add	r7, sp, #0
 80088fa:	6078      	str	r0, [r7, #4]
 80088fc:	4a08      	ldr	r2, [pc, #32]	; (8008920 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 80088fe:	687b      	ldr	r3, [r7, #4]
 8008900:	601a      	str	r2, [r3, #0]
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8008908:	4618      	mov	r0, r3
 800890a:	f000 fa4f 	bl	8008dac <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800890e:	687b      	ldr	r3, [r7, #4]
 8008910:	4618      	mov	r0, r3
 8008912:	f7ff ff01 	bl	8008718 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008916:	687b      	ldr	r3, [r7, #4]
 8008918:	4618      	mov	r0, r3
 800891a:	3708      	adds	r7, #8
 800891c:	46bd      	mov	sp, r7
 800891e:	bd80      	pop	{r7, pc}
 8008920:	0801edfc 	.word	0x0801edfc

08008924 <_ZN23FrontendApplicationBaseD0Ev>:
 8008924:	b580      	push	{r7, lr}
 8008926:	b082      	sub	sp, #8
 8008928:	af00      	add	r7, sp, #0
 800892a:	6078      	str	r0, [r7, #4]
 800892c:	6878      	ldr	r0, [r7, #4]
 800892e:	f7ff ffe1 	bl	80088f4 <_ZN23FrontendApplicationBaseD1Ev>
 8008932:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8008936:	6878      	ldr	r0, [r7, #4]
 8008938:	f012 ffd5 	bl	801b8e6 <_ZdlPvj>
 800893c:	687b      	ldr	r3, [r7, #4]
 800893e:	4618      	mov	r0, r3
 8008940:	3708      	adds	r7, #8
 8008942:	46bd      	mov	sp, r7
 8008944:	bd80      	pop	{r7, pc}
	...

08008948 <_ZN8touchgfx12NoTransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    NoTransition() : Transition() { }
 8008948:	b580      	push	{r7, lr}
 800894a:	b082      	sub	sp, #8
 800894c:	af00      	add	r7, sp, #0
 800894e:	6078      	str	r0, [r7, #4]
 8008950:	687b      	ldr	r3, [r7, #4]
 8008952:	4618      	mov	r0, r3
 8008954:	f7ff fde6 	bl	8008524 <_ZN8touchgfx10TransitionC1Ev>
 8008958:	4a03      	ldr	r2, [pc, #12]	; (8008968 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	601a      	str	r2, [r3, #0]
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	4618      	mov	r0, r3
 8008962:	3708      	adds	r7, #8
 8008964:	46bd      	mov	sp, r7
 8008966:	bd80      	pop	{r7, pc}
 8008968:	0801eddc 	.word	0x0801eddc

0800896c <_ZN8touchgfx12NoTransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~NoTransition() { }
 800896c:	b580      	push	{r7, lr}
 800896e:	b082      	sub	sp, #8
 8008970:	af00      	add	r7, sp, #0
 8008972:	6078      	str	r0, [r7, #4]
 8008974:	4a05      	ldr	r2, [pc, #20]	; (800898c <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8008976:	687b      	ldr	r3, [r7, #4]
 8008978:	601a      	str	r2, [r3, #0]
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	4618      	mov	r0, r3
 800897e:	f7ff fde7 	bl	8008550 <_ZN8touchgfx10TransitionD1Ev>
 8008982:	687b      	ldr	r3, [r7, #4]
 8008984:	4618      	mov	r0, r3
 8008986:	3708      	adds	r7, #8
 8008988:	46bd      	mov	sp, r7
 800898a:	bd80      	pop	{r7, pc}
 800898c:	0801eddc 	.word	0x0801eddc

08008990 <_ZN8touchgfx12NoTransitionD0Ev>:
 8008990:	b580      	push	{r7, lr}
 8008992:	b082      	sub	sp, #8
 8008994:	af00      	add	r7, sp, #0
 8008996:	6078      	str	r0, [r7, #4]
 8008998:	6878      	ldr	r0, [r7, #4]
 800899a:	f7ff ffe7 	bl	800896c <_ZN8touchgfx12NoTransitionD1Ev>
 800899e:	210c      	movs	r1, #12
 80089a0:	6878      	ldr	r0, [r7, #4]
 80089a2:	f012 ffa0 	bl	801b8e6 <_ZdlPvj>
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	4618      	mov	r0, r3
 80089aa:	3708      	adds	r7, #8
 80089ac:	46bd      	mov	sp, r7
 80089ae:	bd80      	pop	{r7, pc}

080089b0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
     *
     * @brief Indicates that the transition is done after the first tick.
     *
     *        Indicates that the transition is done after the first tick.
     */
    virtual void handleTickEvent()
 80089b0:	b480      	push	{r7}
 80089b2:	b083      	sub	sp, #12
 80089b4:	af00      	add	r7, sp, #0
 80089b6:	6078      	str	r0, [r7, #4]
    {
        done = true;
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	2201      	movs	r2, #1
 80089bc:	721a      	strb	r2, [r3, #8]
    }
 80089be:	bf00      	nop
 80089c0:	370c      	adds	r7, #12
 80089c2:	46bd      	mov	sp, r7
 80089c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089c8:	4770      	bx	lr

080089ca <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 80089ca:	b480      	push	{r7}
 80089cc:	b083      	sub	sp, #12
 80089ce:	af00      	add	r7, sp, #0
 80089d0:	6078      	str	r0, [r7, #4]
 80089d2:	6039      	str	r1, [r7, #0]
    {
        model = m;
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	683a      	ldr	r2, [r7, #0]
 80089d8:	605a      	str	r2, [r3, #4]
    }
 80089da:	bf00      	nop
 80089dc:	370c      	adds	r7, #12
 80089de:	46bd      	mov	sp, r7
 80089e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089e4:	4770      	bx	lr
	...

080089e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80089e8:	b580      	push	{r7, lr}
 80089ea:	b084      	sub	sp, #16
 80089ec:	af00      	add	r7, sp, #0
 80089ee:	60f8      	str	r0, [r7, #12]
 80089f0:	60b9      	str	r1, [r7, #8]
 80089f2:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80089f4:	68fb      	ldr	r3, [r7, #12]
 80089f6:	4618      	mov	r0, r3
 80089f8:	f7ff fe6e 	bl	80086d8 <_ZN8touchgfx14MVPApplicationC1Ev>
 80089fc:	4a13      	ldr	r2, [pc, #76]	; (8008a4c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 80089fe:	68fb      	ldr	r3, [r7, #12]
 8008a00:	601a      	str	r2, [r3, #0]
 8008a02:	68fb      	ldr	r3, [r7, #12]
 8008a04:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8008a08:	4618      	mov	r0, r3
 8008a0a:	f000 f89f 	bl	8008b4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 8008a0e:	68fb      	ldr	r3, [r7, #12]
 8008a10:	687a      	ldr	r2, [r7, #4]
 8008a12:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
 8008a16:	68fb      	ldr	r3, [r7, #12]
 8008a18:	68ba      	ldr	r2, [r7, #8]
 8008a1a:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8008a1e:	f7ff fe0f 	bl	8008640 <_ZN8touchgfx3HAL11getInstanceEv>
 8008a22:	4603      	mov	r3, r0
 8008a24:	681a      	ldr	r2, [r3, #0]
 8008a26:	3208      	adds	r2, #8
 8008a28:	6812      	ldr	r2, [r2, #0]
 8008a2a:	2101      	movs	r1, #1
 8008a2c:	4618      	mov	r0, r3
 8008a2e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8008a30:	2000      	movs	r0, #0
 8008a32:	f001 f8e1 	bl	8009bf8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8008a36:	f7ff fe0f 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 8008a3a:	4603      	mov	r3, r0
 8008a3c:	4618      	mov	r0, r3
 8008a3e:	f00b fef0 	bl	8014822 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8008a42:	68fb      	ldr	r3, [r7, #12]
 8008a44:	4618      	mov	r0, r3
 8008a46:	3710      	adds	r7, #16
 8008a48:	46bd      	mov	sp, r7
 8008a4a:	bd80      	pop	{r7, pc}
 8008a4c:	0801edfc 	.word	0x0801edfc

08008a50 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8008a50:	b480      	push	{r7}
 8008a52:	b083      	sub	sp, #12
 8008a54:	af00      	add	r7, sp, #0
 8008a56:	6078      	str	r0, [r7, #4]
 8008a58:	6039      	str	r1, [r7, #0]
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	4618      	mov	r0, r3
 8008a5e:	370c      	adds	r7, #12
 8008a60:	46bd      	mov	sp, r7
 8008a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a66:	4770      	bx	lr

08008a68 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *       three arguments of any type.
 *
 * @tparam dest_type The type of the class in which the member function resides.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008a68:	b580      	push	{r7, lr}
 8008a6a:	b082      	sub	sp, #8
 8008a6c:	af00      	add	r7, sp, #0
 8008a6e:	6078      	str	r0, [r7, #4]
 8008a70:	6039      	str	r1, [r7, #0]
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	683a      	ldr	r2, [r7, #0]
 8008a76:	4611      	mov	r1, r2
 8008a78:	4618      	mov	r0, r3
 8008a7a:	f7ff ffe9 	bl	8008a50 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8008a7e:	683b      	ldr	r3, [r7, #0]
 8008a80:	685a      	ldr	r2, [r3, #4]
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	605a      	str	r2, [r3, #4]
 8008a86:	687b      	ldr	r3, [r7, #4]
 8008a88:	683a      	ldr	r2, [r7, #0]
 8008a8a:	3308      	adds	r3, #8
 8008a8c:	3208      	adds	r2, #8
 8008a8e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008a92:	e883 0003 	stmia.w	r3, {r0, r1}
 8008a96:	687b      	ldr	r3, [r7, #4]
 8008a98:	4618      	mov	r0, r3
 8008a9a:	3708      	adds	r7, #8
 8008a9c:	46bd      	mov	sp, r7
 8008a9e:	bd80      	pop	{r7, pc}

08008aa0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 8008aa0:	b590      	push	{r4, r7, lr}
 8008aa2:	b089      	sub	sp, #36	; 0x24
 8008aa4:	af00      	add	r7, sp, #0
 8008aa6:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
 8008aa8:	687b      	ldr	r3, [r7, #4]
 8008aaa:	f503 749c 	add.w	r4, r3, #312	; 0x138
 8008aae:	4b10      	ldr	r3, [pc, #64]	; (8008af0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 8008ab0:	61bb      	str	r3, [r7, #24]
 8008ab2:	2300      	movs	r3, #0
 8008ab4:	61fb      	str	r3, [r7, #28]
 8008ab6:	f107 0008 	add.w	r0, r7, #8
 8008aba:	f107 0318 	add.w	r3, r7, #24
 8008abe:	cb0c      	ldmia	r3, {r2, r3}
 8008ac0:	6879      	ldr	r1, [r7, #4]
 8008ac2:	f000 f85f 	bl	8008b84 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008ac6:	f107 0308 	add.w	r3, r7, #8
 8008aca:	4619      	mov	r1, r3
 8008acc:	4620      	mov	r0, r4
 8008ace:	f7ff ffcb 	bl	8008a68 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008ad2:	f107 0308 	add.w	r3, r7, #8
 8008ad6:	4618      	mov	r0, r3
 8008ad8:	f000 f968 	bl	8008dac <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008adc:	687b      	ldr	r3, [r7, #4]
 8008ade:	f503 729c 	add.w	r2, r3, #312	; 0x138
 8008ae2:	687b      	ldr	r3, [r7, #4]
 8008ae4:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
}
 8008ae8:	bf00      	nop
 8008aea:	3724      	adds	r7, #36	; 0x24
 8008aec:	46bd      	mov	sp, r7
 8008aee:	bd90      	pop	{r4, r7, pc}
 8008af0:	08008af5 	.word	0x08008af5

08008af4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8008af4:	b580      	push	{r7, lr}
 8008af6:	b084      	sub	sp, #16
 8008af8:	af02      	add	r7, sp, #8
 8008afa:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008afc:	687b      	ldr	r3, [r7, #4]
 8008afe:	f503 7198 	add.w	r1, r3, #304	; 0x130
 8008b02:	687b      	ldr	r3, [r7, #4]
 8008b04:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8008b08:	461a      	mov	r2, r3
 8008b0a:	687b      	ldr	r3, [r7, #4]
 8008b0c:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8008b10:	9300      	str	r3, [sp, #0]
 8008b12:	4b04      	ldr	r3, [pc, #16]	; (8008b24 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 8008b14:	4804      	ldr	r0, [pc, #16]	; (8008b28 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 8008b16:	f000 f855 	bl	8008bc4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008b1a:	bf00      	nop
 8008b1c:	3708      	adds	r7, #8
 8008b1e:	46bd      	mov	sp, r7
 8008b20:	bd80      	pop	{r7, pc}
 8008b22:	bf00      	nop
 8008b24:	20001804 	.word	0x20001804
 8008b28:	20001800 	.word	0x20001800

08008b2c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008b2c:	b480      	push	{r7}
 8008b2e:	b083      	sub	sp, #12
 8008b30:	af00      	add	r7, sp, #0
 8008b32:	6078      	str	r0, [r7, #4]
 8008b34:	4a04      	ldr	r2, [pc, #16]	; (8008b48 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	601a      	str	r2, [r3, #0]
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	4618      	mov	r0, r3
 8008b3e:	370c      	adds	r7, #12
 8008b40:	46bd      	mov	sp, r7
 8008b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b46:	4770      	bx	lr
 8008b48:	0801ee8c 	.word	0x0801ee8c

08008b4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Initializes an empty callback.
     */
    Callback() : pobject(0), pmemfun_0(0) { }
 8008b4c:	b580      	push	{r7, lr}
 8008b4e:	b082      	sub	sp, #8
 8008b50:	af00      	add	r7, sp, #0
 8008b52:	6078      	str	r0, [r7, #4]
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	4618      	mov	r0, r3
 8008b58:	f7ff ffe8 	bl	8008b2c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008b5c:	4a08      	ldr	r2, [pc, #32]	; (8008b80 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8008b5e:	687b      	ldr	r3, [r7, #4]
 8008b60:	601a      	str	r2, [r3, #0]
 8008b62:	687b      	ldr	r3, [r7, #4]
 8008b64:	2200      	movs	r2, #0
 8008b66:	605a      	str	r2, [r3, #4]
 8008b68:	687b      	ldr	r3, [r7, #4]
 8008b6a:	2200      	movs	r2, #0
 8008b6c:	609a      	str	r2, [r3, #8]
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	2200      	movs	r2, #0
 8008b72:	60da      	str	r2, [r3, #12]
 8008b74:	687b      	ldr	r3, [r7, #4]
 8008b76:	4618      	mov	r0, r3
 8008b78:	3708      	adds	r7, #8
 8008b7a:	46bd      	mov	sp, r7
 8008b7c:	bd80      	pop	{r7, pc}
 8008b7e:	bf00      	nop
 8008b80:	0801ee38 	.word	0x0801ee38

08008b84 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pobject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function
     *                       takes zero arguments.
     */
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 8008b84:	b580      	push	{r7, lr}
 8008b86:	b084      	sub	sp, #16
 8008b88:	af00      	add	r7, sp, #0
 8008b8a:	60f8      	str	r0, [r7, #12]
 8008b8c:	60b9      	str	r1, [r7, #8]
 8008b8e:	4639      	mov	r1, r7
 8008b90:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 8008b94:	68fb      	ldr	r3, [r7, #12]
 8008b96:	4618      	mov	r0, r3
 8008b98:	f7ff ffc8 	bl	8008b2c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008b9c:	4a08      	ldr	r2, [pc, #32]	; (8008bc0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8008b9e:	68fb      	ldr	r3, [r7, #12]
 8008ba0:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 8008ba2:	68fb      	ldr	r3, [r7, #12]
 8008ba4:	68ba      	ldr	r2, [r7, #8]
 8008ba6:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
 8008ba8:	68fb      	ldr	r3, [r7, #12]
 8008baa:	3308      	adds	r3, #8
 8008bac:	463a      	mov	r2, r7
 8008bae:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008bb2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 8008bb6:	68fb      	ldr	r3, [r7, #12]
 8008bb8:	4618      	mov	r0, r3
 8008bba:	3710      	adds	r7, #16
 8008bbc:	46bd      	mov	sp, r7
 8008bbe:	bd80      	pop	{r7, pc}
 8008bc0:	0801ee38 	.word	0x0801ee38

08008bc4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template< class ScreenType, class PresenterType, class TransType, class ModelType  >
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008bc4:	b590      	push	{r4, r7, lr}
 8008bc6:	b089      	sub	sp, #36	; 0x24
 8008bc8:	af00      	add	r7, sp, #0
 8008bca:	60f8      	str	r0, [r7, #12]
 8008bcc:	60b9      	str	r1, [r7, #8]
 8008bce:	607a      	str	r2, [r7, #4]
 8008bd0:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	689a      	ldr	r2, [r3, #8]
 8008bd6:	687b      	ldr	r3, [r7, #4]
 8008bd8:	689b      	ldr	r3, [r3, #8]
 8008bda:	681b      	ldr	r3, [r3, #0]
 8008bdc:	3320      	adds	r3, #32
 8008bde:	681b      	ldr	r3, [r3, #0]
 8008be0:	4610      	mov	r0, r2
 8008be2:	4798      	blx	r3
 8008be4:	4603      	mov	r3, r0
 8008be6:	f5b3 7f05 	cmp.w	r3, #532	; 0x214
 8008bea:	d205      	bcs.n	8008bf8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008bec:	4b46      	ldr	r3, [pc, #280]	; (8008d08 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x144>)
 8008bee:	4a47      	ldr	r2, [pc, #284]	; (8008d0c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8008bf0:	21c2      	movs	r1, #194	; 0xc2
 8008bf2:	4847      	ldr	r0, [pc, #284]	; (8008d10 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14c>)
 8008bf4:	f012 fea6 	bl	801b944 <__assert_func>
 8008bf8:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008bfa:	687b      	ldr	r3, [r7, #4]
 8008bfc:	685a      	ldr	r2, [r3, #4]
 8008bfe:	687b      	ldr	r3, [r7, #4]
 8008c00:	685b      	ldr	r3, [r3, #4]
 8008c02:	681b      	ldr	r3, [r3, #0]
 8008c04:	3320      	adds	r3, #32
 8008c06:	681b      	ldr	r3, [r3, #0]
 8008c08:	4610      	mov	r0, r2
 8008c0a:	4798      	blx	r3
 8008c0c:	4603      	mov	r3, r0
 8008c0e:	2b0f      	cmp	r3, #15
 8008c10:	d805      	bhi.n	8008c1e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 8008c12:	4b40      	ldr	r3, [pc, #256]	; (8008d14 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x150>)
 8008c14:	4a3d      	ldr	r2, [pc, #244]	; (8008d0c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8008c16:	21c3      	movs	r1, #195	; 0xc3
 8008c18:	483d      	ldr	r0, [pc, #244]	; (8008d10 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14c>)
 8008c1a:	f012 fe93 	bl	801b944 <__assert_func>
 8008c1e:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008c20:	687b      	ldr	r3, [r7, #4]
 8008c22:	68da      	ldr	r2, [r3, #12]
 8008c24:	687b      	ldr	r3, [r7, #4]
 8008c26:	68db      	ldr	r3, [r3, #12]
 8008c28:	681b      	ldr	r3, [r3, #0]
 8008c2a:	3320      	adds	r3, #32
 8008c2c:	681b      	ldr	r3, [r3, #0]
 8008c2e:	4610      	mov	r0, r2
 8008c30:	4798      	blx	r3
 8008c32:	4603      	mov	r3, r0
 8008c34:	2b0b      	cmp	r3, #11
 8008c36:	d805      	bhi.n	8008c44 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
 8008c38:	4b37      	ldr	r3, [pc, #220]	; (8008d18 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x154>)
 8008c3a:	4a34      	ldr	r2, [pc, #208]	; (8008d0c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8008c3c:	21c4      	movs	r1, #196	; 0xc4
 8008c3e:	4834      	ldr	r0, [pc, #208]	; (8008d10 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14c>)
 8008c40:	f012 fe80 	bl	801b944 <__assert_func>
 8008c44:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);
 8008c46:	683a      	ldr	r2, [r7, #0]
 8008c48:	68b9      	ldr	r1, [r7, #8]
 8008c4a:	68f8      	ldr	r0, [r7, #12]
 8008c4c:	f7ff fdc1 	bl	80087d2 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>

    TransType* newTransition = new (&heap.transitionStorage.at< TransType >(0)) TransType;
 8008c50:	687b      	ldr	r3, [r7, #4]
 8008c52:	68db      	ldr	r3, [r3, #12]
 8008c54:	2100      	movs	r1, #0
 8008c56:	4618      	mov	r0, r3
 8008c58:	f000 f860 	bl	8008d1c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008c5c:	4603      	mov	r3, r0
 8008c5e:	4619      	mov	r1, r3
 8008c60:	200c      	movs	r0, #12
 8008c62:	f7ff fbf1 	bl	8008448 <_ZnwjPv>
 8008c66:	4604      	mov	r4, r0
 8008c68:	4620      	mov	r0, r4
 8008c6a:	f7ff fe6d 	bl	8008948 <_ZN8touchgfx12NoTransitionC1Ev>
 8008c6e:	61fc      	str	r4, [r7, #28]
    ScreenType* newScreen = new (&heap.screenStorage.at< ScreenType >(0)) ScreenType;
 8008c70:	687b      	ldr	r3, [r7, #4]
 8008c72:	689b      	ldr	r3, [r3, #8]
 8008c74:	2100      	movs	r1, #0
 8008c76:	4618      	mov	r0, r3
 8008c78:	f000 f863 	bl	8008d42 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 8008c7c:	4603      	mov	r3, r0
 8008c7e:	4619      	mov	r1, r3
 8008c80:	f44f 7005 	mov.w	r0, #532	; 0x214
 8008c84:	f7ff fbe0 	bl	8008448 <_ZnwjPv>
 8008c88:	4604      	mov	r4, r0
 8008c8a:	4620      	mov	r0, r4
 8008c8c:	f001 f9c8 	bl	800a020 <_ZN11Screen1ViewC1Ev>
 8008c90:	61bc      	str	r4, [r7, #24]
    PresenterType* newPresenter = new (&heap.presenterStorage.at< PresenterType >(0)) PresenterType(*newScreen);
 8008c92:	687b      	ldr	r3, [r7, #4]
 8008c94:	685b      	ldr	r3, [r3, #4]
 8008c96:	2100      	movs	r1, #0
 8008c98:	4618      	mov	r0, r3
 8008c9a:	f000 f865 	bl	8008d68 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 8008c9e:	4603      	mov	r3, r0
 8008ca0:	4619      	mov	r1, r3
 8008ca2:	2010      	movs	r0, #16
 8008ca4:	f7ff fbd0 	bl	8008448 <_ZnwjPv>
 8008ca8:	4604      	mov	r4, r0
 8008caa:	69b9      	ldr	r1, [r7, #24]
 8008cac:	4620      	mov	r0, r4
 8008cae:	f001 f95f 	bl	8009f70 <_ZN16Screen1PresenterC1ER11Screen1View>
 8008cb2:	617c      	str	r4, [r7, #20]
    *currentTrans = newTransition;
 8008cb4:	683b      	ldr	r3, [r7, #0]
 8008cb6:	69fa      	ldr	r2, [r7, #28]
 8008cb8:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008cba:	68bb      	ldr	r3, [r7, #8]
 8008cbc:	697a      	ldr	r2, [r7, #20]
 8008cbe:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008cc0:	68fb      	ldr	r3, [r7, #12]
 8008cc2:	69ba      	ldr	r2, [r7, #24]
 8008cc4:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008cc6:	697b      	ldr	r3, [r7, #20]
 8008cc8:	2b00      	cmp	r3, #0
 8008cca:	d002      	beq.n	8008cd2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10e>
 8008ccc:	697b      	ldr	r3, [r7, #20]
 8008cce:	3304      	adds	r3, #4
 8008cd0:	e000      	b.n	8008cd4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x110>
 8008cd2:	2300      	movs	r3, #0
 8008cd4:	4619      	mov	r1, r3
 8008cd6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8008cd8:	f7ff fdfe 	bl	80088d8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008cdc:	697b      	ldr	r3, [r7, #20]
 8008cde:	3304      	adds	r3, #4
 8008ce0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8008ce2:	4618      	mov	r0, r3
 8008ce4:	f7ff fe71 	bl	80089ca <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008ce8:	69bb      	ldr	r3, [r7, #24]
 8008cea:	6979      	ldr	r1, [r7, #20]
 8008cec:	4618      	mov	r0, r3
 8008cee:	f000 f84e 	bl	8008d8e <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);
 8008cf2:	69fa      	ldr	r2, [r7, #28]
 8008cf4:	6979      	ldr	r1, [r7, #20]
 8008cf6:	69b8      	ldr	r0, [r7, #24]
 8008cf8:	f7ff fdc7 	bl	800888a <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>

    return newPresenter;
 8008cfc:	697b      	ldr	r3, [r7, #20]
}
 8008cfe:	4618      	mov	r0, r3
 8008d00:	3724      	adds	r7, #36	; 0x24
 8008d02:	46bd      	mov	sp, r7
 8008d04:	bd90      	pop	{r4, r7, pc}
 8008d06:	bf00      	nop
 8008d08:	0801e748 	.word	0x0801e748
 8008d0c:	0801e7d8 	.word	0x0801e7d8
 8008d10:	0801e8dc 	.word	0x0801e8dc
 8008d14:	0801e920 	.word	0x0801e920
 8008d18:	0801e9c4 	.word	0x0801e9c4

08008d1c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template< typename T >
    T& at(const uint16_t index)
 8008d1c:	b580      	push	{r7, lr}
 8008d1e:	b082      	sub	sp, #8
 8008d20:	af00      	add	r7, sp, #0
 8008d22:	6078      	str	r0, [r7, #4]
 8008d24:	460b      	mov	r3, r1
 8008d26:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8008d28:	687b      	ldr	r3, [r7, #4]
 8008d2a:	681b      	ldr	r3, [r3, #0]
 8008d2c:	3324      	adds	r3, #36	; 0x24
 8008d2e:	681b      	ldr	r3, [r3, #0]
 8008d30:	887a      	ldrh	r2, [r7, #2]
 8008d32:	4611      	mov	r1, r2
 8008d34:	6878      	ldr	r0, [r7, #4]
 8008d36:	4798      	blx	r3
 8008d38:	4603      	mov	r3, r0
    }
 8008d3a:	4618      	mov	r0, r3
 8008d3c:	3708      	adds	r7, #8
 8008d3e:	46bd      	mov	sp, r7
 8008d40:	bd80      	pop	{r7, pc}

08008d42 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 8008d42:	b580      	push	{r7, lr}
 8008d44:	b082      	sub	sp, #8
 8008d46:	af00      	add	r7, sp, #0
 8008d48:	6078      	str	r0, [r7, #4]
 8008d4a:	460b      	mov	r3, r1
 8008d4c:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008d4e:	687b      	ldr	r3, [r7, #4]
 8008d50:	681b      	ldr	r3, [r3, #0]
 8008d52:	3324      	adds	r3, #36	; 0x24
 8008d54:	681b      	ldr	r3, [r3, #0]
 8008d56:	887a      	ldrh	r2, [r7, #2]
 8008d58:	4611      	mov	r1, r2
 8008d5a:	6878      	ldr	r0, [r7, #4]
 8008d5c:	4798      	blx	r3
 8008d5e:	4603      	mov	r3, r0
    }
 8008d60:	4618      	mov	r0, r3
 8008d62:	3708      	adds	r7, #8
 8008d64:	46bd      	mov	sp, r7
 8008d66:	bd80      	pop	{r7, pc}

08008d68 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 8008d68:	b580      	push	{r7, lr}
 8008d6a:	b082      	sub	sp, #8
 8008d6c:	af00      	add	r7, sp, #0
 8008d6e:	6078      	str	r0, [r7, #4]
 8008d70:	460b      	mov	r3, r1
 8008d72:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008d74:	687b      	ldr	r3, [r7, #4]
 8008d76:	681b      	ldr	r3, [r3, #0]
 8008d78:	3324      	adds	r3, #36	; 0x24
 8008d7a:	681b      	ldr	r3, [r3, #0]
 8008d7c:	887a      	ldrh	r2, [r7, #2]
 8008d7e:	4611      	mov	r1, r2
 8008d80:	6878      	ldr	r0, [r7, #4]
 8008d82:	4798      	blx	r3
 8008d84:	4603      	mov	r3, r0
    }
 8008d86:	4618      	mov	r0, r3
 8008d88:	3708      	adds	r7, #8
 8008d8a:	46bd      	mov	sp, r7
 8008d8c:	bd80      	pop	{r7, pc}

08008d8e <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     *        Binds an instance of a specific Presenter type (subclass) to the View instance.
     *        This function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 8008d8e:	b480      	push	{r7}
 8008d90:	b083      	sub	sp, #12
 8008d92:	af00      	add	r7, sp, #0
 8008d94:	6078      	str	r0, [r7, #4]
 8008d96:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 8008d98:	687b      	ldr	r3, [r7, #4]
 8008d9a:	683a      	ldr	r2, [r7, #0]
 8008d9c:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8008d9e:	bf00      	nop
 8008da0:	370c      	adds	r7, #12
 8008da2:	46bd      	mov	sp, r7
 8008da4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008da8:	4770      	bx	lr
	...

08008dac <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008dac:	b580      	push	{r7, lr}
 8008dae:	b082      	sub	sp, #8
 8008db0:	af00      	add	r7, sp, #0
 8008db2:	6078      	str	r0, [r7, #4]
 8008db4:	4a05      	ldr	r2, [pc, #20]	; (8008dcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8008db6:	687b      	ldr	r3, [r7, #4]
 8008db8:	601a      	str	r2, [r3, #0]
 8008dba:	687b      	ldr	r3, [r7, #4]
 8008dbc:	4618      	mov	r0, r3
 8008dbe:	f7ff fc1f 	bl	8008600 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8008dc2:	687b      	ldr	r3, [r7, #4]
 8008dc4:	4618      	mov	r0, r3
 8008dc6:	3708      	adds	r7, #8
 8008dc8:	46bd      	mov	sp, r7
 8008dca:	bd80      	pop	{r7, pc}
 8008dcc:	0801ee38 	.word	0x0801ee38

08008dd0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8008dd0:	b580      	push	{r7, lr}
 8008dd2:	b082      	sub	sp, #8
 8008dd4:	af00      	add	r7, sp, #0
 8008dd6:	6078      	str	r0, [r7, #4]
 8008dd8:	6878      	ldr	r0, [r7, #4]
 8008dda:	f7ff ffe7 	bl	8008dac <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8008dde:	2110      	movs	r1, #16
 8008de0:	6878      	ldr	r0, [r7, #4]
 8008de2:	f012 fd80 	bl	801b8e6 <_ZdlPvj>
 8008de6:	687b      	ldr	r3, [r7, #4]
 8008de8:	4618      	mov	r0, r3
 8008dea:	3708      	adds	r7, #8
 8008dec:	46bd      	mov	sp, r7
 8008dee:	bd80      	pop	{r7, pc}

08008df0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * @brief Calls the member function.
     *
     *        Calls the member function. Do not call execute unless isValid() returns true (ie.
     *        a pointer to the object and the function has been set).
     */
    virtual void execute()
 8008df0:	b580      	push	{r7, lr}
 8008df2:	b082      	sub	sp, #8
 8008df4:	af00      	add	r7, sp, #0
 8008df6:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 8008df8:	687b      	ldr	r3, [r7, #4]
 8008dfa:	685b      	ldr	r3, [r3, #4]
 8008dfc:	687a      	ldr	r2, [r7, #4]
 8008dfe:	68d2      	ldr	r2, [r2, #12]
 8008e00:	1052      	asrs	r2, r2, #1
 8008e02:	1899      	adds	r1, r3, r2
 8008e04:	687b      	ldr	r3, [r7, #4]
 8008e06:	68db      	ldr	r3, [r3, #12]
 8008e08:	f003 0301 	and.w	r3, r3, #1
 8008e0c:	2b00      	cmp	r3, #0
 8008e0e:	d102      	bne.n	8008e16 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8008e10:	687b      	ldr	r3, [r7, #4]
 8008e12:	689b      	ldr	r3, [r3, #8]
 8008e14:	e00a      	b.n	8008e2c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8008e16:	687b      	ldr	r3, [r7, #4]
 8008e18:	685b      	ldr	r3, [r3, #4]
 8008e1a:	687a      	ldr	r2, [r7, #4]
 8008e1c:	68d2      	ldr	r2, [r2, #12]
 8008e1e:	1052      	asrs	r2, r2, #1
 8008e20:	4413      	add	r3, r2
 8008e22:	681b      	ldr	r3, [r3, #0]
 8008e24:	687a      	ldr	r2, [r7, #4]
 8008e26:	6892      	ldr	r2, [r2, #8]
 8008e28:	4413      	add	r3, r2
 8008e2a:	681b      	ldr	r3, [r3, #0]
 8008e2c:	4608      	mov	r0, r1
 8008e2e:	4798      	blx	r3
    }
 8008e30:	bf00      	nop
 8008e32:	3708      	adds	r7, #8
 8008e34:	46bd      	mov	sp, r7
 8008e36:	bd80      	pop	{r7, pc}

08008e38 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     *        Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8008e38:	b480      	push	{r7}
 8008e3a:	b083      	sub	sp, #12
 8008e3c:	af00      	add	r7, sp, #0
 8008e3e:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8008e40:	687b      	ldr	r3, [r7, #4]
 8008e42:	685b      	ldr	r3, [r3, #4]
 8008e44:	2b00      	cmp	r3, #0
 8008e46:	d010      	beq.n	8008e6a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8008e48:	687b      	ldr	r3, [r7, #4]
 8008e4a:	689b      	ldr	r3, [r3, #8]
 8008e4c:	2b00      	cmp	r3, #0
 8008e4e:	d107      	bne.n	8008e60 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8008e50:	687b      	ldr	r3, [r7, #4]
 8008e52:	68db      	ldr	r3, [r3, #12]
 8008e54:	f003 0301 	and.w	r3, r3, #1
 8008e58:	2b00      	cmp	r3, #0
 8008e5a:	d101      	bne.n	8008e60 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8008e5c:	2301      	movs	r3, #1
 8008e5e:	e000      	b.n	8008e62 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8008e60:	2300      	movs	r3, #0
 8008e62:	2b01      	cmp	r3, #1
 8008e64:	d001      	beq.n	8008e6a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8008e66:	2301      	movs	r3, #1
 8008e68:	e000      	b.n	8008e6c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8008e6a:	2300      	movs	r3, #0
    }
 8008e6c:	4618      	mov	r0, r3
 8008e6e:	370c      	adds	r7, #12
 8008e70:	46bd      	mov	sp, r7
 8008e72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e76:	4770      	bx	lr

08008e78 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param col The color.
     *
     * @see Color::getColorFrom24BitRGB()
     */
    colortype(uint32_t col)
 8008e78:	b480      	push	{r7}
 8008e7a:	b083      	sub	sp, #12
 8008e7c:	af00      	add	r7, sp, #0
 8008e7e:	6078      	str	r0, [r7, #4]
 8008e80:	6039      	str	r1, [r7, #0]
    {
        color = col;
 8008e82:	687b      	ldr	r3, [r7, #4]
 8008e84:	683a      	ldr	r2, [r7, #0]
 8008e86:	601a      	str	r2, [r3, #0]
    }
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	4618      	mov	r0, r3
 8008e8c:	370c      	adds	r7, #12
 8008e8e:	46bd      	mov	sp, r7
 8008e90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e94:	4770      	bx	lr

08008e96 <_ZN8touchgfx4RectC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Resulting in an empty Rect with coordinates 0,0.
     */
    Rect()
 8008e96:	b480      	push	{r7}
 8008e98:	b083      	sub	sp, #12
 8008e9a:	af00      	add	r7, sp, #0
 8008e9c:	6078      	str	r0, [r7, #4]
    {
        this->x = 0;
 8008e9e:	687b      	ldr	r3, [r7, #4]
 8008ea0:	2200      	movs	r2, #0
 8008ea2:	801a      	strh	r2, [r3, #0]
        this->y = 0;
 8008ea4:	687b      	ldr	r3, [r7, #4]
 8008ea6:	2200      	movs	r2, #0
 8008ea8:	805a      	strh	r2, [r3, #2]
        this->width = 0;
 8008eaa:	687b      	ldr	r3, [r7, #4]
 8008eac:	2200      	movs	r2, #0
 8008eae:	809a      	strh	r2, [r3, #4]
        this->height = 0;
 8008eb0:	687b      	ldr	r3, [r7, #4]
 8008eb2:	2200      	movs	r2, #0
 8008eb4:	80da      	strh	r2, [r3, #6]
    }
 8008eb6:	687b      	ldr	r3, [r7, #4]
 8008eb8:	4618      	mov	r0, r3
 8008eba:	370c      	adds	r7, #12
 8008ebc:	46bd      	mov	sp, r7
 8008ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ec2:	4770      	bx	lr

08008ec4 <_ZN8touchgfx4RectC1Essss>:
     * @param x      The x coordinate.
     * @param y      The y coordinate.
     * @param width  The width.
     * @param height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
 8008ec4:	b480      	push	{r7}
 8008ec6:	b085      	sub	sp, #20
 8008ec8:	af00      	add	r7, sp, #0
 8008eca:	60f8      	str	r0, [r7, #12]
 8008ecc:	4608      	mov	r0, r1
 8008ece:	4611      	mov	r1, r2
 8008ed0:	461a      	mov	r2, r3
 8008ed2:	4603      	mov	r3, r0
 8008ed4:	817b      	strh	r3, [r7, #10]
 8008ed6:	460b      	mov	r3, r1
 8008ed8:	813b      	strh	r3, [r7, #8]
 8008eda:	4613      	mov	r3, r2
 8008edc:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
 8008ede:	68fb      	ldr	r3, [r7, #12]
 8008ee0:	897a      	ldrh	r2, [r7, #10]
 8008ee2:	801a      	strh	r2, [r3, #0]
        this->y = y;
 8008ee4:	68fb      	ldr	r3, [r7, #12]
 8008ee6:	893a      	ldrh	r2, [r7, #8]
 8008ee8:	805a      	strh	r2, [r3, #2]
        this->width = width;
 8008eea:	68fb      	ldr	r3, [r7, #12]
 8008eec:	88fa      	ldrh	r2, [r7, #6]
 8008eee:	809a      	strh	r2, [r3, #4]
        this->height = height;
 8008ef0:	68fb      	ldr	r3, [r7, #12]
 8008ef2:	8b3a      	ldrh	r2, [r7, #24]
 8008ef4:	80da      	strh	r2, [r3, #6]
    }
 8008ef6:	68fb      	ldr	r3, [r7, #12]
 8008ef8:	4618      	mov	r0, r3
 8008efa:	3714      	adds	r7, #20
 8008efc:	46bd      	mov	sp, r7
 8008efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f02:	4770      	bx	lr

08008f04 <_ZN8touchgfx6BitmapC1Et>:
     *        Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     *        array.
     *
     * @param id The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
 8008f04:	b480      	push	{r7}
 8008f06:	b083      	sub	sp, #12
 8008f08:	af00      	add	r7, sp, #0
 8008f0a:	6078      	str	r0, [r7, #4]
 8008f0c:	460b      	mov	r3, r1
 8008f0e:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8008f10:	687b      	ldr	r3, [r7, #4]
 8008f12:	887a      	ldrh	r2, [r7, #2]
 8008f14:	801a      	strh	r2, [r3, #0]
    {
    }
 8008f16:	687b      	ldr	r3, [r7, #4]
 8008f18:	4618      	mov	r0, r3
 8008f1a:	370c      	adds	r7, #12
 8008f1c:	46bd      	mov	sp, r7
 8008f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f22:	4770      	bx	lr

08008f24 <_ZN8touchgfx8DrawableC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Drawable() : rect(0, 0, 0, 0),
 8008f24:	b580      	push	{r7, lr}
 8008f26:	b084      	sub	sp, #16
 8008f28:	af02      	add	r7, sp, #8
 8008f2a:	6078      	str	r0, [r7, #4]
        parent(0),
        nextSibling(0),
        nextDrawChainElement(0),
        touchable(false),
        visible(true)
 8008f2c:	4a13      	ldr	r2, [pc, #76]	; (8008f7c <_ZN8touchgfx8DrawableC1Ev+0x58>)
 8008f2e:	687b      	ldr	r3, [r7, #4]
 8008f30:	601a      	str	r2, [r3, #0]
 8008f32:	687b      	ldr	r3, [r7, #4]
 8008f34:	1d18      	adds	r0, r3, #4
 8008f36:	2300      	movs	r3, #0
 8008f38:	9300      	str	r3, [sp, #0]
 8008f3a:	2300      	movs	r3, #0
 8008f3c:	2200      	movs	r2, #0
 8008f3e:	2100      	movs	r1, #0
 8008f40:	f7ff ffc0 	bl	8008ec4 <_ZN8touchgfx4RectC1Essss>
 8008f44:	687b      	ldr	r3, [r7, #4]
 8008f46:	330c      	adds	r3, #12
 8008f48:	4618      	mov	r0, r3
 8008f4a:	f7ff ffa4 	bl	8008e96 <_ZN8touchgfx4RectC1Ev>
 8008f4e:	687b      	ldr	r3, [r7, #4]
 8008f50:	2200      	movs	r2, #0
 8008f52:	615a      	str	r2, [r3, #20]
 8008f54:	687b      	ldr	r3, [r7, #4]
 8008f56:	2200      	movs	r2, #0
 8008f58:	619a      	str	r2, [r3, #24]
 8008f5a:	687b      	ldr	r3, [r7, #4]
 8008f5c:	2200      	movs	r2, #0
 8008f5e:	61da      	str	r2, [r3, #28]
 8008f60:	687b      	ldr	r3, [r7, #4]
 8008f62:	2200      	movs	r2, #0
 8008f64:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8008f68:	687b      	ldr	r3, [r7, #4]
 8008f6a:	2201      	movs	r2, #1
 8008f6c:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8008f70:	687b      	ldr	r3, [r7, #4]
 8008f72:	4618      	mov	r0, r3
 8008f74:	3708      	adds	r7, #8
 8008f76:	46bd      	mov	sp, r7
 8008f78:	bd80      	pop	{r7, pc}
 8008f7a:	bf00      	nop
 8008f7c:	08020328 	.word	0x08020328

08008f80 <_ZN8touchgfx8DrawableD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Drawable() { }
 8008f80:	b480      	push	{r7}
 8008f82:	b083      	sub	sp, #12
 8008f84:	af00      	add	r7, sp, #0
 8008f86:	6078      	str	r0, [r7, #4]
 8008f88:	4a04      	ldr	r2, [pc, #16]	; (8008f9c <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8008f8a:	687b      	ldr	r3, [r7, #4]
 8008f8c:	601a      	str	r2, [r3, #0]
 8008f8e:	687b      	ldr	r3, [r7, #4]
 8008f90:	4618      	mov	r0, r3
 8008f92:	370c      	adds	r7, #12
 8008f94:	46bd      	mov	sp, r7
 8008f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f9a:	4770      	bx	lr
 8008f9c:	08020328 	.word	0x08020328

08008fa0 <_ZN8touchgfx8DrawableD0Ev>:
 8008fa0:	b580      	push	{r7, lr}
 8008fa2:	b082      	sub	sp, #8
 8008fa4:	af00      	add	r7, sp, #0
 8008fa6:	6078      	str	r0, [r7, #4]
 8008fa8:	6878      	ldr	r0, [r7, #4]
 8008faa:	f7ff ffe9 	bl	8008f80 <_ZN8touchgfx8DrawableD1Ev>
 8008fae:	2128      	movs	r1, #40	; 0x28
 8008fb0:	6878      	ldr	r0, [r7, #4]
 8008fb2:	f012 fc98 	bl	801b8e6 <_ZdlPvj>
 8008fb6:	687b      	ldr	r3, [r7, #4]
 8008fb8:	4618      	mov	r0, r3
 8008fba:	3708      	adds	r7, #8
 8008fbc:	46bd      	mov	sp, r7
 8008fbe:	bd80      	pop	{r7, pc}

08008fc0 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param x      The x coordinate of this Drawable.
     * @param y      The y coordinate of this Drawable.
     * @param width  The width of this Drawable.
     * @param height The height of this Drawable.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8008fc0:	b580      	push	{r7, lr}
 8008fc2:	b084      	sub	sp, #16
 8008fc4:	af00      	add	r7, sp, #0
 8008fc6:	60f8      	str	r0, [r7, #12]
 8008fc8:	4608      	mov	r0, r1
 8008fca:	4611      	mov	r1, r2
 8008fcc:	461a      	mov	r2, r3
 8008fce:	4603      	mov	r3, r0
 8008fd0:	817b      	strh	r3, [r7, #10]
 8008fd2:	460b      	mov	r3, r1
 8008fd4:	813b      	strh	r3, [r7, #8]
 8008fd6:	4613      	mov	r3, r2
 8008fd8:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8008fda:	68fb      	ldr	r3, [r7, #12]
 8008fdc:	681b      	ldr	r3, [r3, #0]
 8008fde:	3334      	adds	r3, #52	; 0x34
 8008fe0:	681b      	ldr	r3, [r3, #0]
 8008fe2:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8008fe6:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8008fea:	68f8      	ldr	r0, [r7, #12]
 8008fec:	4798      	blx	r3
        setWidth(width);
 8008fee:	68fb      	ldr	r3, [r7, #12]
 8008ff0:	681b      	ldr	r3, [r3, #0]
 8008ff2:	3338      	adds	r3, #56	; 0x38
 8008ff4:	681b      	ldr	r3, [r3, #0]
 8008ff6:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8008ffa:	4611      	mov	r1, r2
 8008ffc:	68f8      	ldr	r0, [r7, #12]
 8008ffe:	4798      	blx	r3
        setHeight(height);
 8009000:	68fb      	ldr	r3, [r7, #12]
 8009002:	681b      	ldr	r3, [r3, #0]
 8009004:	333c      	adds	r3, #60	; 0x3c
 8009006:	681b      	ldr	r3, [r3, #0]
 8009008:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800900c:	4611      	mov	r1, r2
 800900e:	68f8      	ldr	r0, [r7, #12]
 8009010:	4798      	blx	r3
    }
 8009012:	bf00      	nop
 8009014:	3710      	adds	r7, #16
 8009016:	46bd      	mov	sp, r7
 8009018:	bd80      	pop	{r7, pc}

0800901a <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     */
    virtual void setX(int16_t x)
 800901a:	b480      	push	{r7}
 800901c:	b083      	sub	sp, #12
 800901e:	af00      	add	r7, sp, #0
 8009020:	6078      	str	r0, [r7, #4]
 8009022:	460b      	mov	r3, r1
 8009024:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	887a      	ldrh	r2, [r7, #2]
 800902a:	809a      	strh	r2, [r3, #4]
    }
 800902c:	bf00      	nop
 800902e:	370c      	adds	r7, #12
 8009030:	46bd      	mov	sp, r7
 8009032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009036:	4770      	bx	lr

08009038 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setY(int16_t y)
 8009038:	b480      	push	{r7}
 800903a:	b083      	sub	sp, #12
 800903c:	af00      	add	r7, sp, #0
 800903e:	6078      	str	r0, [r7, #4]
 8009040:	460b      	mov	r3, r1
 8009042:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8009044:	687b      	ldr	r3, [r7, #4]
 8009046:	887a      	ldrh	r2, [r7, #2]
 8009048:	80da      	strh	r2, [r3, #6]
    }
 800904a:	bf00      	nop
 800904c:	370c      	adds	r7, #12
 800904e:	46bd      	mov	sp, r7
 8009050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009054:	4770      	bx	lr

08009056 <_ZN8touchgfx8Drawable5setXYEss>:
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setXY(int16_t x, int16_t y)
 8009056:	b580      	push	{r7, lr}
 8009058:	b082      	sub	sp, #8
 800905a:	af00      	add	r7, sp, #0
 800905c:	6078      	str	r0, [r7, #4]
 800905e:	460b      	mov	r3, r1
 8009060:	807b      	strh	r3, [r7, #2]
 8009062:	4613      	mov	r3, r2
 8009064:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009066:	687b      	ldr	r3, [r7, #4]
 8009068:	681b      	ldr	r3, [r3, #0]
 800906a:	332c      	adds	r3, #44	; 0x2c
 800906c:	681b      	ldr	r3, [r3, #0]
 800906e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009072:	4611      	mov	r1, r2
 8009074:	6878      	ldr	r0, [r7, #4]
 8009076:	4798      	blx	r3
        setY(y);
 8009078:	687b      	ldr	r3, [r7, #4]
 800907a:	681b      	ldr	r3, [r3, #0]
 800907c:	3330      	adds	r3, #48	; 0x30
 800907e:	681b      	ldr	r3, [r3, #0]
 8009080:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009084:	4611      	mov	r1, r2
 8009086:	6878      	ldr	r0, [r7, #4]
 8009088:	4798      	blx	r3
    }
 800908a:	bf00      	nop
 800908c:	3708      	adds	r7, #8
 800908e:	46bd      	mov	sp, r7
 8009090:	bd80      	pop	{r7, pc}

08009092 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param width The new width.
     */
    virtual void setWidth(int16_t width)
 8009092:	b480      	push	{r7}
 8009094:	b083      	sub	sp, #12
 8009096:	af00      	add	r7, sp, #0
 8009098:	6078      	str	r0, [r7, #4]
 800909a:	460b      	mov	r3, r1
 800909c:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800909e:	687b      	ldr	r3, [r7, #4]
 80090a0:	887a      	ldrh	r2, [r7, #2]
 80090a2:	811a      	strh	r2, [r3, #8]
    }
 80090a4:	bf00      	nop
 80090a6:	370c      	adds	r7, #12
 80090a8:	46bd      	mov	sp, r7
 80090aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090ae:	4770      	bx	lr

080090b0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param height The new height.
     */
    virtual void setHeight(int16_t height)
 80090b0:	b480      	push	{r7}
 80090b2:	b083      	sub	sp, #12
 80090b4:	af00      	add	r7, sp, #0
 80090b6:	6078      	str	r0, [r7, #4]
 80090b8:	460b      	mov	r3, r1
 80090ba:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	887a      	ldrh	r2, [r7, #2]
 80090c0:	815a      	strh	r2, [r3, #10]
    }
 80090c2:	bf00      	nop
 80090c4:	370c      	adds	r7, #12
 80090c6:	46bd      	mov	sp, r7
 80090c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090cc:	4770      	bx	lr

080090ce <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     *
     *        This function can be called on parent nodes to signal that the size of one or
     *        more of its children has changed. Currently only used in ScrollableContainer to
     *        redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged() { }
 80090ce:	b480      	push	{r7}
 80090d0:	b083      	sub	sp, #12
 80090d2:	af00      	add	r7, sp, #0
 80090d4:	6078      	str	r0, [r7, #4]
 80090d6:	bf00      	nop
 80090d8:	370c      	adds	r7, #12
 80090da:	46bd      	mov	sp, r7
 80090dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090e0:	4770      	bx	lr

080090e2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *        Defines the event handler interface for ClickEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt) { }
 80090e2:	b480      	push	{r7}
 80090e4:	b083      	sub	sp, #12
 80090e6:	af00      	add	r7, sp, #0
 80090e8:	6078      	str	r0, [r7, #4]
 80090ea:	6039      	str	r1, [r7, #0]
 80090ec:	bf00      	nop
 80090ee:	370c      	adds	r7, #12
 80090f0:	46bd      	mov	sp, r7
 80090f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090f6:	4770      	bx	lr

080090f8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *        Defines the event handler interface for GestureEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt) { }
 80090f8:	b480      	push	{r7}
 80090fa:	b083      	sub	sp, #12
 80090fc:	af00      	add	r7, sp, #0
 80090fe:	6078      	str	r0, [r7, #4]
 8009100:	6039      	str	r1, [r7, #0]
 8009102:	bf00      	nop
 8009104:	370c      	adds	r7, #12
 8009106:	46bd      	mov	sp, r7
 8009108:	f85d 7b04 	ldr.w	r7, [sp], #4
 800910c:	4770      	bx	lr

0800910e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *        Defines the event handler interface for DragEvents. The event is only received if
     *        the drawable is touchable.
     *
     * @param evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt) { }
 800910e:	b480      	push	{r7}
 8009110:	b083      	sub	sp, #12
 8009112:	af00      	add	r7, sp, #0
 8009114:	6078      	str	r0, [r7, #4]
 8009116:	6039      	str	r1, [r7, #0]
 8009118:	bf00      	nop
 800911a:	370c      	adds	r7, #12
 800911c:	46bd      	mov	sp, r7
 800911e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009122:	4770      	bx	lr

08009124 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *        Called periodically by the framework if the Drawable instance has subscribed to
     *        timer ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent() { }
 8009124:	b480      	push	{r7}
 8009126:	b083      	sub	sp, #12
 8009128:	af00      	add	r7, sp, #0
 800912a:	6078      	str	r0, [r7, #4]
 800912c:	bf00      	nop
 800912e:	370c      	adds	r7, #12
 8009130:	46bd      	mov	sp, r7
 8009132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009136:	4770      	bx	lr

08009138 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     * @return true if the Drawable is visible.
     * @return True if visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009138:	b480      	push	{r7}
 800913a:	b083      	sub	sp, #12
 800913c:	af00      	add	r7, sp, #0
 800913e:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009140:	687b      	ldr	r3, [r7, #4]
 8009142:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 8009146:	4618      	mov	r0, r3
 8009148:	370c      	adds	r7, #12
 800914a:	46bd      	mov	sp, r7
 800914c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009150:	4770      	bx	lr

08009152 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8009152:	b480      	push	{r7}
 8009154:	b083      	sub	sp, #12
 8009156:	af00      	add	r7, sp, #0
 8009158:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800915a:	687b      	ldr	r3, [r7, #4]
 800915c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 8009160:	4618      	mov	r0, r3
 8009162:	370c      	adds	r7, #12
 8009164:	46bd      	mov	sp, r7
 8009166:	f85d 7b04 	ldr.w	r7, [sp], #4
 800916a:	4770      	bx	lr

0800916c <_ZN8touchgfx8Drawable6moveToEss>:
     * @note Will redraw the appropriate areas of the screen.
     *
     * @param x The absolute position to move to.
     * @param y The absolute position to move to.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800916c:	b580      	push	{r7, lr}
 800916e:	b082      	sub	sp, #8
 8009170:	af00      	add	r7, sp, #0
 8009172:	6078      	str	r0, [r7, #4]
 8009174:	460b      	mov	r3, r1
 8009176:	807b      	strh	r3, [r7, #2]
 8009178:	4613      	mov	r3, r2
 800917a:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	681b      	ldr	r3, [r3, #0]
 8009180:	3354      	adds	r3, #84	; 0x54
 8009182:	681b      	ldr	r3, [r3, #0]
 8009184:	8879      	ldrh	r1, [r7, #2]
 8009186:	687a      	ldr	r2, [r7, #4]
 8009188:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800918c:	b292      	uxth	r2, r2
 800918e:	1a8a      	subs	r2, r1, r2
 8009190:	b292      	uxth	r2, r2
 8009192:	b210      	sxth	r0, r2
 8009194:	8839      	ldrh	r1, [r7, #0]
 8009196:	687a      	ldr	r2, [r7, #4]
 8009198:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800919c:	b292      	uxth	r2, r2
 800919e:	1a8a      	subs	r2, r1, r2
 80091a0:	b292      	uxth	r2, r2
 80091a2:	b212      	sxth	r2, r2
 80091a4:	4601      	mov	r1, r0
 80091a6:	6878      	ldr	r0, [r7, #4]
 80091a8:	4798      	blx	r3
    }
 80091aa:	bf00      	nop
 80091ac:	3708      	adds	r7, #8
 80091ae:	46bd      	mov	sp, r7
 80091b0:	bd80      	pop	{r7, pc}

080091b2 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     *        Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 80091b2:	b480      	push	{r7}
 80091b4:	b083      	sub	sp, #12
 80091b6:	af00      	add	r7, sp, #0
 80091b8:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80091ba:	687b      	ldr	r3, [r7, #4]
 80091bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80091c0:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80091c2:	687b      	ldr	r3, [r7, #4]
 80091c4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80091c8:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 80091ca:	687b      	ldr	r3, [r7, #4]
 80091cc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80091d0:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 80091d2:	bf00      	nop
 80091d4:	370c      	adds	r7, #12
 80091d6:	46bd      	mov	sp, r7
 80091d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091dc:	4770      	bx	lr

080091de <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     *
     * @param invalidatedArea              Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 80091de:	b580      	push	{r7, lr}
 80091e0:	b084      	sub	sp, #16
 80091e2:	af00      	add	r7, sp, #0
 80091e4:	60f8      	str	r0, [r7, #12]
 80091e6:	60b9      	str	r1, [r7, #8]
 80091e8:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 80091ea:	68f8      	ldr	r0, [r7, #12]
 80091ec:	f7ff ffe1 	bl	80091b2 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 80091f0:	687b      	ldr	r3, [r7, #4]
 80091f2:	681a      	ldr	r2, [r3, #0]
 80091f4:	68fb      	ldr	r3, [r7, #12]
 80091f6:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 80091f8:	687b      	ldr	r3, [r7, #4]
 80091fa:	68fa      	ldr	r2, [r7, #12]
 80091fc:	601a      	str	r2, [r3, #0]
    }
 80091fe:	bf00      	nop
 8009200:	3710      	adds	r7, #16
 8009202:	46bd      	mov	sp, r7
 8009204:	bd80      	pop	{r7, pc}
	...

08009208 <_ZN8touchgfx9ContainerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Container() { }
 8009208:	b580      	push	{r7, lr}
 800920a:	b082      	sub	sp, #8
 800920c:	af00      	add	r7, sp, #0
 800920e:	6078      	str	r0, [r7, #4]
 8009210:	4a05      	ldr	r2, [pc, #20]	; (8009228 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 8009212:	687b      	ldr	r3, [r7, #4]
 8009214:	601a      	str	r2, [r3, #0]
 8009216:	687b      	ldr	r3, [r7, #4]
 8009218:	4618      	mov	r0, r3
 800921a:	f7ff feb1 	bl	8008f80 <_ZN8touchgfx8DrawableD1Ev>
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	4618      	mov	r0, r3
 8009222:	3708      	adds	r7, #8
 8009224:	46bd      	mov	sp, r7
 8009226:	bd80      	pop	{r7, pc}
 8009228:	0801f63c 	.word	0x0801f63c

0800922c <_ZN8touchgfx9ContainerD0Ev>:
 800922c:	b580      	push	{r7, lr}
 800922e:	b082      	sub	sp, #8
 8009230:	af00      	add	r7, sp, #0
 8009232:	6078      	str	r0, [r7, #4]
 8009234:	6878      	ldr	r0, [r7, #4]
 8009236:	f7ff ffe7 	bl	8009208 <_ZN8touchgfx9ContainerD1Ev>
 800923a:	212c      	movs	r1, #44	; 0x2c
 800923c:	6878      	ldr	r0, [r7, #4]
 800923e:	f012 fb52 	bl	801b8e6 <_ZdlPvj>
 8009242:	687b      	ldr	r3, [r7, #4]
 8009244:	4618      	mov	r0, r3
 8009246:	3708      	adds	r7, #8
 8009248:	46bd      	mov	sp, r7
 800924a:	bd80      	pop	{r7, pc}

0800924c <_ZN8touchgfx6ScreenD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Screen() { }
 800924c:	b580      	push	{r7, lr}
 800924e:	b082      	sub	sp, #8
 8009250:	af00      	add	r7, sp, #0
 8009252:	6078      	str	r0, [r7, #4]
 8009254:	4a06      	ldr	r2, [pc, #24]	; (8009270 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8009256:	687b      	ldr	r3, [r7, #4]
 8009258:	601a      	str	r2, [r3, #0]
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	3304      	adds	r3, #4
 800925e:	4618      	mov	r0, r3
 8009260:	f7ff ffd2 	bl	8009208 <_ZN8touchgfx9ContainerD1Ev>
 8009264:	687b      	ldr	r3, [r7, #4]
 8009266:	4618      	mov	r0, r3
 8009268:	3708      	adds	r7, #8
 800926a:	46bd      	mov	sp, r7
 800926c:	bd80      	pop	{r7, pc}
 800926e:	bf00      	nop
 8009270:	08020420 	.word	0x08020420

08009274 <_ZN8touchgfx6ScreenD0Ev>:
 8009274:	b580      	push	{r7, lr}
 8009276:	b082      	sub	sp, #8
 8009278:	af00      	add	r7, sp, #0
 800927a:	6078      	str	r0, [r7, #4]
 800927c:	6878      	ldr	r0, [r7, #4]
 800927e:	f7ff ffe5 	bl	800924c <_ZN8touchgfx6ScreenD1Ev>
 8009282:	213c      	movs	r1, #60	; 0x3c
 8009284:	6878      	ldr	r0, [r7, #4]
 8009286:	f012 fb2e 	bl	801b8e6 <_ZdlPvj>
 800928a:	687b      	ldr	r3, [r7, #4]
 800928c:	4618      	mov	r0, r3
 800928e:	3708      	adds	r7, #8
 8009290:	46bd      	mov	sp, r7
 8009292:	bd80      	pop	{r7, pc}

08009294 <_ZN8touchgfx6Screen11setupScreenEv>:
     *        Base version does nothing, but place any screen specific initialization code in
     *        an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void setupScreen() { }
 8009294:	b480      	push	{r7}
 8009296:	b083      	sub	sp, #12
 8009298:	af00      	add	r7, sp, #0
 800929a:	6078      	str	r0, [r7, #4]
 800929c:	bf00      	nop
 800929e:	370c      	adds	r7, #12
 80092a0:	46bd      	mov	sp, r7
 80092a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092a6:	4770      	bx	lr

080092a8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *        Base version does nothing, but override to do screen specific initialization code
     *        that has to be done after the transition to the screen.
     *
     * @see touchgfx::Application::handleTick()
     */
    virtual void afterTransition() { }
 80092a8:	b480      	push	{r7}
 80092aa:	b083      	sub	sp, #12
 80092ac:	af00      	add	r7, sp, #0
 80092ae:	6078      	str	r0, [r7, #4]
 80092b0:	bf00      	nop
 80092b2:	370c      	adds	r7, #12
 80092b4:	46bd      	mov	sp, r7
 80092b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092ba:	4770      	bx	lr

080092bc <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *        displayed. Base version does nothing, but place any screen specific cleanup code
     *        in an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void tearDownScreen() { }
 80092bc:	b480      	push	{r7}
 80092be:	b083      	sub	sp, #12
 80092c0:	af00      	add	r7, sp, #0
 80092c2:	6078      	str	r0, [r7, #4]
 80092c4:	bf00      	nop
 80092c6:	370c      	adds	r7, #12
 80092c8:	46bd      	mov	sp, r7
 80092ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092ce:	4770      	bx	lr

080092d0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     *        Application::TICK_INTERVAL_MS.
     *
     *        Called by the Application on the current screen with a frequency of
     *        Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 80092d0:	b480      	push	{r7}
 80092d2:	b083      	sub	sp, #12
 80092d4:	af00      	add	r7, sp, #0
 80092d6:	6078      	str	r0, [r7, #4]
    {
    }
 80092d8:	bf00      	nop
 80092da:	370c      	adds	r7, #12
 80092dc:	46bd      	mov	sp, r7
 80092de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092e2:	4770      	bx	lr

080092e4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *        Called by the Application on the reception of a "key", the meaning of which is
     *        platform/application specific. Default implementation does nothing.
     *
     * @param key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 80092e4:	b480      	push	{r7}
 80092e6:	b083      	sub	sp, #12
 80092e8:	af00      	add	r7, sp, #0
 80092ea:	6078      	str	r0, [r7, #4]
 80092ec:	460b      	mov	r3, r1
 80092ee:	70fb      	strb	r3, [r7, #3]
    {
    }
 80092f0:	bf00      	nop
 80092f2:	370c      	adds	r7, #12
 80092f4:	46bd      	mov	sp, r7
 80092f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092fa:	4770      	bx	lr

080092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     *
     * @param [in] d The Drawable to add.
     */
    void add(Drawable& d)
 80092fc:	b580      	push	{r7, lr}
 80092fe:	b082      	sub	sp, #8
 8009300:	af00      	add	r7, sp, #0
 8009302:	6078      	str	r0, [r7, #4]
 8009304:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8009306:	687b      	ldr	r3, [r7, #4]
 8009308:	3304      	adds	r3, #4
 800930a:	6839      	ldr	r1, [r7, #0]
 800930c:	4618      	mov	r0, r3
 800930e:	f002 fe45 	bl	800bf9c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8009312:	bf00      	nop
 8009314:	3708      	adds	r7, #8
 8009316:	46bd      	mov	sp, r7
 8009318:	bd80      	pop	{r7, pc}
	...

0800931c <_ZN8touchgfx6WidgetC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Widget() : Drawable() { }
 800931c:	b580      	push	{r7, lr}
 800931e:	b082      	sub	sp, #8
 8009320:	af00      	add	r7, sp, #0
 8009322:	6078      	str	r0, [r7, #4]
 8009324:	687b      	ldr	r3, [r7, #4]
 8009326:	4618      	mov	r0, r3
 8009328:	f7ff fdfc 	bl	8008f24 <_ZN8touchgfx8DrawableC1Ev>
 800932c:	4a03      	ldr	r2, [pc, #12]	; (800933c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800932e:	687b      	ldr	r3, [r7, #4]
 8009330:	601a      	str	r2, [r3, #0]
 8009332:	687b      	ldr	r3, [r7, #4]
 8009334:	4618      	mov	r0, r3
 8009336:	3708      	adds	r7, #8
 8009338:	46bd      	mov	sp, r7
 800933a:	bd80      	pop	{r7, pc}
 800933c:	0801ef54 	.word	0x0801ef54

08009340 <_ZN8touchgfx6WidgetD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Widget() { }
 8009340:	b580      	push	{r7, lr}
 8009342:	b082      	sub	sp, #8
 8009344:	af00      	add	r7, sp, #0
 8009346:	6078      	str	r0, [r7, #4]
 8009348:	4a05      	ldr	r2, [pc, #20]	; (8009360 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800934a:	687b      	ldr	r3, [r7, #4]
 800934c:	601a      	str	r2, [r3, #0]
 800934e:	687b      	ldr	r3, [r7, #4]
 8009350:	4618      	mov	r0, r3
 8009352:	f7ff fe15 	bl	8008f80 <_ZN8touchgfx8DrawableD1Ev>
 8009356:	687b      	ldr	r3, [r7, #4]
 8009358:	4618      	mov	r0, r3
 800935a:	3708      	adds	r7, #8
 800935c:	46bd      	mov	sp, r7
 800935e:	bd80      	pop	{r7, pc}
 8009360:	0801ef54 	.word	0x0801ef54

08009364 <_ZN8touchgfx6WidgetD0Ev>:
 8009364:	b580      	push	{r7, lr}
 8009366:	b082      	sub	sp, #8
 8009368:	af00      	add	r7, sp, #0
 800936a:	6078      	str	r0, [r7, #4]
 800936c:	6878      	ldr	r0, [r7, #4]
 800936e:	f7ff ffe7 	bl	8009340 <_ZN8touchgfx6WidgetD1Ev>
 8009372:	2128      	movs	r1, #40	; 0x28
 8009374:	6878      	ldr	r0, [r7, #4]
 8009376:	f012 fab6 	bl	801b8e6 <_ZdlPvj>
 800937a:	687b      	ldr	r3, [r7, #4]
 800937c:	4618      	mov	r0, r3
 800937e:	3708      	adds	r7, #8
 8009380:	46bd      	mov	sp, r7
 8009382:	bd80      	pop	{r7, pc}

08009384 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param x          The point of intersection expressed in coordinates relative to the parent.
     * @param y          The y coordinate.
     * @param [out] last Result will be placed here.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 8009384:	b580      	push	{r7, lr}
 8009386:	b084      	sub	sp, #16
 8009388:	af00      	add	r7, sp, #0
 800938a:	60f8      	str	r0, [r7, #12]
 800938c:	607b      	str	r3, [r7, #4]
 800938e:	460b      	mov	r3, r1
 8009390:	817b      	strh	r3, [r7, #10]
 8009392:	4613      	mov	r3, r2
 8009394:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 8009396:	68fb      	ldr	r3, [r7, #12]
 8009398:	4618      	mov	r0, r3
 800939a:	f7ff fecd 	bl	8009138 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800939e:	4603      	mov	r3, r0
 80093a0:	2b00      	cmp	r3, #0
 80093a2:	d008      	beq.n	80093b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 80093a4:	68fb      	ldr	r3, [r7, #12]
 80093a6:	4618      	mov	r0, r3
 80093a8:	f7ff fed3 	bl	8009152 <_ZNK8touchgfx8Drawable11isTouchableEv>
 80093ac:	4603      	mov	r3, r0
 80093ae:	2b00      	cmp	r3, #0
 80093b0:	d001      	beq.n	80093b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 80093b2:	2301      	movs	r3, #1
 80093b4:	e000      	b.n	80093b8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 80093b6:	2300      	movs	r3, #0
 80093b8:	2b00      	cmp	r3, #0
 80093ba:	d002      	beq.n	80093c2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 80093bc:	68fa      	ldr	r2, [r7, #12]
 80093be:	687b      	ldr	r3, [r7, #4]
 80093c0:	601a      	str	r2, [r3, #0]
        }
    }
 80093c2:	bf00      	nop
 80093c4:	3710      	adds	r7, #16
 80093c6:	46bd      	mov	sp, r7
 80093c8:	bd80      	pop	{r7, pc}
	...

080093cc <_ZN8touchgfx3BoxC1Ev>:
     *
     * @brief Constructor.
     *
     *        Constructs a new Box with a default alpha value of 255 (solid)
     */
    Box() : Widget(), alpha(255), color(0), reportAsSolid(false)
 80093cc:	b580      	push	{r7, lr}
 80093ce:	b082      	sub	sp, #8
 80093d0:	af00      	add	r7, sp, #0
 80093d2:	6078      	str	r0, [r7, #4]
 80093d4:	687b      	ldr	r3, [r7, #4]
 80093d6:	4618      	mov	r0, r3
 80093d8:	f7ff ffa0 	bl	800931c <_ZN8touchgfx6WidgetC1Ev>
 80093dc:	4a0a      	ldr	r2, [pc, #40]	; (8009408 <_ZN8touchgfx3BoxC1Ev+0x3c>)
 80093de:	687b      	ldr	r3, [r7, #4]
 80093e0:	601a      	str	r2, [r3, #0]
 80093e2:	687b      	ldr	r3, [r7, #4]
 80093e4:	22ff      	movs	r2, #255	; 0xff
 80093e6:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 80093ea:	687b      	ldr	r3, [r7, #4]
 80093ec:	3328      	adds	r3, #40	; 0x28
 80093ee:	2100      	movs	r1, #0
 80093f0:	4618      	mov	r0, r3
 80093f2:	f7ff fd41 	bl	8008e78 <_ZN8touchgfx9colortypeC1Em>
 80093f6:	687b      	ldr	r3, [r7, #4]
 80093f8:	2200      	movs	r2, #0
 80093fa:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
    }
 80093fe:	687b      	ldr	r3, [r7, #4]
 8009400:	4618      	mov	r0, r3
 8009402:	3708      	adds	r7, #8
 8009404:	46bd      	mov	sp, r7
 8009406:	bd80      	pop	{r7, pc}
 8009408:	0801ffa4 	.word	0x0801ffa4

0800940c <_ZN8touchgfx3BoxD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Box() {}
 800940c:	b580      	push	{r7, lr}
 800940e:	b082      	sub	sp, #8
 8009410:	af00      	add	r7, sp, #0
 8009412:	6078      	str	r0, [r7, #4]
 8009414:	4a05      	ldr	r2, [pc, #20]	; (800942c <_ZN8touchgfx3BoxD1Ev+0x20>)
 8009416:	687b      	ldr	r3, [r7, #4]
 8009418:	601a      	str	r2, [r3, #0]
 800941a:	687b      	ldr	r3, [r7, #4]
 800941c:	4618      	mov	r0, r3
 800941e:	f7ff ff8f 	bl	8009340 <_ZN8touchgfx6WidgetD1Ev>
 8009422:	687b      	ldr	r3, [r7, #4]
 8009424:	4618      	mov	r0, r3
 8009426:	3708      	adds	r7, #8
 8009428:	46bd      	mov	sp, r7
 800942a:	bd80      	pop	{r7, pc}
 800942c:	0801ffa4 	.word	0x0801ffa4

08009430 <_ZN8touchgfx3BoxD0Ev>:
 8009430:	b580      	push	{r7, lr}
 8009432:	b082      	sub	sp, #8
 8009434:	af00      	add	r7, sp, #0
 8009436:	6078      	str	r0, [r7, #4]
 8009438:	6878      	ldr	r0, [r7, #4]
 800943a:	f7ff ffe7 	bl	800940c <_ZN8touchgfx3BoxD1Ev>
 800943e:	2130      	movs	r1, #48	; 0x30
 8009440:	6878      	ldr	r0, [r7, #4]
 8009442:	f012 fa50 	bl	801b8e6 <_ZdlPvj>
 8009446:	687b      	ldr	r3, [r7, #4]
 8009448:	4618      	mov	r0, r3
 800944a:	3708      	adds	r7, #8
 800944c:	46bd      	mov	sp, r7
 800944e:	bd80      	pop	{r7, pc}

08009450 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     *        Sets the color of the rectangle.
     *
     * @param color The color of the box.
     */
    void setColor(colortype color)
 8009450:	b480      	push	{r7}
 8009452:	b083      	sub	sp, #12
 8009454:	af00      	add	r7, sp, #0
 8009456:	6078      	str	r0, [r7, #4]
 8009458:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 800945a:	687b      	ldr	r3, [r7, #4]
 800945c:	683a      	ldr	r2, [r7, #0]
 800945e:	629a      	str	r2, [r3, #40]	; 0x28
    }
 8009460:	bf00      	nop
 8009462:	370c      	adds	r7, #12
 8009464:	46bd      	mov	sp, r7
 8009466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800946a:	4770      	bx	lr

0800946c <_ZN8touchgfx9TypedTextC1Et>:
    explicit TypedText(const TypedTextId id = TYPED_TEXT_INVALID) : typedTextId(id)
 800946c:	b480      	push	{r7}
 800946e:	b083      	sub	sp, #12
 8009470:	af00      	add	r7, sp, #0
 8009472:	6078      	str	r0, [r7, #4]
 8009474:	460b      	mov	r3, r1
 8009476:	807b      	strh	r3, [r7, #2]
 8009478:	687b      	ldr	r3, [r7, #4]
 800947a:	887a      	ldrh	r2, [r7, #2]
 800947c:	801a      	strh	r2, [r3, #0]
    }
 800947e:	687b      	ldr	r3, [r7, #4]
 8009480:	4618      	mov	r0, r3
 8009482:	370c      	adds	r7, #12
 8009484:	46bd      	mov	sp, r7
 8009486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800948a:	4770      	bx	lr

0800948c <_ZN8touchgfx8TextAreaC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Create an empty TextArea. Default color is black.
     */
    TextArea()
 800948c:	b580      	push	{r7, lr}
 800948e:	b082      	sub	sp, #8
 8009490:	af00      	add	r7, sp, #0
 8009492:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8009494:	687b      	ldr	r3, [r7, #4]
 8009496:	4618      	mov	r0, r3
 8009498:	f7ff ff40 	bl	800931c <_ZN8touchgfx6WidgetC1Ev>
 800949c:	4a13      	ldr	r2, [pc, #76]	; (80094ec <_ZN8touchgfx8TextAreaC1Ev+0x60>)
 800949e:	687b      	ldr	r3, [r7, #4]
 80094a0:	601a      	str	r2, [r3, #0]
 80094a2:	687b      	ldr	r3, [r7, #4]
 80094a4:	3326      	adds	r3, #38	; 0x26
 80094a6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80094aa:	4618      	mov	r0, r3
 80094ac:	f7ff ffde 	bl	800946c <_ZN8touchgfx9TypedTextC1Et>
 80094b0:	687b      	ldr	r3, [r7, #4]
 80094b2:	3328      	adds	r3, #40	; 0x28
 80094b4:	2100      	movs	r1, #0
 80094b6:	4618      	mov	r0, r3
 80094b8:	f7ff fcde 	bl	8008e78 <_ZN8touchgfx9colortypeC1Em>
 80094bc:	687b      	ldr	r3, [r7, #4]
 80094be:	2200      	movs	r2, #0
 80094c0:	859a      	strh	r2, [r3, #44]	; 0x2c
 80094c2:	687b      	ldr	r3, [r7, #4]
 80094c4:	22ff      	movs	r2, #255	; 0xff
 80094c6:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	2200      	movs	r2, #0
 80094ce:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	2200      	movs	r2, #0
 80094d6:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	2200      	movs	r2, #0
 80094de:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
    {
    }
 80094e2:	687b      	ldr	r3, [r7, #4]
 80094e4:	4618      	mov	r0, r3
 80094e6:	3708      	adds	r7, #8
 80094e8:	46bd      	mov	sp, r7
 80094ea:	bd80      	pop	{r7, pc}
 80094ec:	0801ff28 	.word	0x0801ff28

080094f0 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>:
     *
     *        Sets the color of the text.
     *
     * @param color The color to use.
     */
    inline void setColor(colortype color)
 80094f0:	b480      	push	{r7}
 80094f2:	b083      	sub	sp, #12
 80094f4:	af00      	add	r7, sp, #0
 80094f6:	6078      	str	r0, [r7, #4]
 80094f8:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 80094fa:	687b      	ldr	r3, [r7, #4]
 80094fc:	683a      	ldr	r2, [r7, #0]
 80094fe:	629a      	str	r2, [r3, #40]	; 0x28
    }
 8009500:	bf00      	nop
 8009502:	370c      	adds	r7, #12
 8009504:	46bd      	mov	sp, r7
 8009506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800950a:	4770      	bx	lr

0800950c <_ZN8touchgfx8TextArea14setLinespacingEs>:
     *
     *        Sets the line spacing of the TextArea.
     *
     * @param space The line spacing of use in the TextArea.
     */
    inline void setLinespacing(int16_t space)
 800950c:	b480      	push	{r7}
 800950e:	b083      	sub	sp, #12
 8009510:	af00      	add	r7, sp, #0
 8009512:	6078      	str	r0, [r7, #4]
 8009514:	460b      	mov	r3, r1
 8009516:	807b      	strh	r3, [r7, #2]
    {
        linespace = space;
 8009518:	687b      	ldr	r3, [r7, #4]
 800951a:	887a      	ldrh	r2, [r7, #2]
 800951c:	859a      	strh	r2, [r3, #44]	; 0x2c
    }
 800951e:	bf00      	nop
 8009520:	370c      	adds	r7, #12
 8009522:	46bd      	mov	sp, r7
 8009524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009528:	4770      	bx	lr
	...

0800952c <_ZN8touchgfx14AbstractButtonD1Ev>:
 *        clickable element that has two states - pressed or released - and executes an action
 *        when the pressed->released transition is made.
 *
 * @see Widget
 */
class AbstractButton : public Widget
 800952c:	b580      	push	{r7, lr}
 800952e:	b082      	sub	sp, #8
 8009530:	af00      	add	r7, sp, #0
 8009532:	6078      	str	r0, [r7, #4]
 8009534:	4a05      	ldr	r2, [pc, #20]	; (800954c <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 8009536:	687b      	ldr	r3, [r7, #4]
 8009538:	601a      	str	r2, [r3, #0]
 800953a:	687b      	ldr	r3, [r7, #4]
 800953c:	4618      	mov	r0, r3
 800953e:	f7ff feff 	bl	8009340 <_ZN8touchgfx6WidgetD1Ev>
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	4618      	mov	r0, r3
 8009546:	3708      	adds	r7, #8
 8009548:	46bd      	mov	sp, r7
 800954a:	bd80      	pop	{r7, pc}
 800954c:	0801fe4c 	.word	0x0801fe4c

08009550 <_ZN8touchgfx14AbstractButtonD0Ev>:
 8009550:	b580      	push	{r7, lr}
 8009552:	b082      	sub	sp, #8
 8009554:	af00      	add	r7, sp, #0
 8009556:	6078      	str	r0, [r7, #4]
 8009558:	6878      	ldr	r0, [r7, #4]
 800955a:	f7ff ffe7 	bl	800952c <_ZN8touchgfx14AbstractButtonD1Ev>
 800955e:	2130      	movs	r1, #48	; 0x30
 8009560:	6878      	ldr	r0, [r7, #4]
 8009562:	f012 f9c0 	bl	801b8e6 <_ZdlPvj>
 8009566:	687b      	ldr	r3, [r7, #4]
 8009568:	4618      	mov	r0, r3
 800956a:	3708      	adds	r7, #8
 800956c:	46bd      	mov	sp, r7
 800956e:	bd80      	pop	{r7, pc}

08009570 <_ZN8touchgfx6ButtonD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Button() { }
 8009570:	b580      	push	{r7, lr}
 8009572:	b082      	sub	sp, #8
 8009574:	af00      	add	r7, sp, #0
 8009576:	6078      	str	r0, [r7, #4]
 8009578:	4a05      	ldr	r2, [pc, #20]	; (8009590 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800957a:	687b      	ldr	r3, [r7, #4]
 800957c:	601a      	str	r2, [r3, #0]
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	4618      	mov	r0, r3
 8009582:	f7ff ffd3 	bl	800952c <_ZN8touchgfx14AbstractButtonD1Ev>
 8009586:	687b      	ldr	r3, [r7, #4]
 8009588:	4618      	mov	r0, r3
 800958a:	3708      	adds	r7, #8
 800958c:	46bd      	mov	sp, r7
 800958e:	bd80      	pop	{r7, pc}
 8009590:	08020070 	.word	0x08020070

08009594 <_ZN8touchgfx6ButtonD0Ev>:
 8009594:	b580      	push	{r7, lr}
 8009596:	b082      	sub	sp, #8
 8009598:	af00      	add	r7, sp, #0
 800959a:	6078      	str	r0, [r7, #4]
 800959c:	6878      	ldr	r0, [r7, #4]
 800959e:	f7ff ffe7 	bl	8009570 <_ZN8touchgfx6ButtonD1Ev>
 80095a2:	2134      	movs	r1, #52	; 0x34
 80095a4:	6878      	ldr	r0, [r7, #4]
 80095a6:	f012 f99e 	bl	801b8e6 <_ZdlPvj>
 80095aa:	687b      	ldr	r3, [r7, #4]
 80095ac:	4618      	mov	r0, r3
 80095ae:	3708      	adds	r7, #8
 80095b0:	46bd      	mov	sp, r7
 80095b2:	bd80      	pop	{r7, pc}

080095b4 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
     * @param bmpReleased The bitmap to show in the "normal" state, ie when button is not pressed.
     * @param bmpPressed  The bitmap to show when the button is pressed.
     *
     * @see Button::setBitmaps
     */
    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
 80095b4:	b580      	push	{r7, lr}
 80095b6:	b084      	sub	sp, #16
 80095b8:	af00      	add	r7, sp, #0
 80095ba:	60f8      	str	r0, [r7, #12]
 80095bc:	60b9      	str	r1, [r7, #8]
 80095be:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bmpPressed;
 80095c0:	68fb      	ldr	r3, [r7, #12]
 80095c2:	687a      	ldr	r2, [r7, #4]
 80095c4:	8812      	ldrh	r2, [r2, #0]
 80095c6:	869a      	strh	r2, [r3, #52]	; 0x34
        Button::setBitmaps(bmpReleased, bmpPressed);
 80095c8:	68fb      	ldr	r3, [r7, #12]
 80095ca:	687a      	ldr	r2, [r7, #4]
 80095cc:	68b9      	ldr	r1, [r7, #8]
 80095ce:	4618      	mov	r0, r3
 80095d0:	f003 feaa 	bl	800d328 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 80095d4:	bf00      	nop
 80095d6:	3710      	adds	r7, #16
 80095d8:	46bd      	mov	sp, r7
 80095da:	bd80      	pop	{r7, pc}

080095dc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 80095dc:	b580      	push	{r7, lr}
 80095de:	b082      	sub	sp, #8
 80095e0:	af00      	add	r7, sp, #0
 80095e2:	6078      	str	r0, [r7, #4]
 80095e4:	4a05      	ldr	r2, [pc, #20]	; (80095fc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 80095e6:	687b      	ldr	r3, [r7, #4]
 80095e8:	601a      	str	r2, [r3, #0]
 80095ea:	687b      	ldr	r3, [r7, #4]
 80095ec:	4618      	mov	r0, r3
 80095ee:	f7ff fe2d 	bl	800924c <_ZN8touchgfx6ScreenD1Ev>
 80095f2:	687b      	ldr	r3, [r7, #4]
 80095f4:	4618      	mov	r0, r3
 80095f6:	3708      	adds	r7, #8
 80095f8:	46bd      	mov	sp, r7
 80095fa:	bd80      	pop	{r7, pc}
 80095fc:	0801ef20 	.word	0x0801ef20

08009600 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 8009600:	b580      	push	{r7, lr}
 8009602:	b082      	sub	sp, #8
 8009604:	af00      	add	r7, sp, #0
 8009606:	6078      	str	r0, [r7, #4]
 8009608:	6878      	ldr	r0, [r7, #4]
 800960a:	f7ff ffe7 	bl	80095dc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800960e:	2140      	movs	r1, #64	; 0x40
 8009610:	6878      	ldr	r0, [r7, #4]
 8009612:	f012 f968 	bl	801b8e6 <_ZdlPvj>
 8009616:	687b      	ldr	r3, [r7, #4]
 8009618:	4618      	mov	r0, r3
 800961a:	3708      	adds	r7, #8
 800961c:	46bd      	mov	sp, r7
 800961e:	bd80      	pop	{r7, pc}

08009620 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8009620:	b580      	push	{r7, lr}
 8009622:	b082      	sub	sp, #8
 8009624:	af00      	add	r7, sp, #0
 8009626:	6078      	str	r0, [r7, #4]
 8009628:	4a1e      	ldr	r2, [pc, #120]	; (80096a4 <_ZN15Screen1ViewBaseD1Ev+0x84>)
 800962a:	687b      	ldr	r3, [r7, #4]
 800962c:	601a      	str	r2, [r3, #0]
 800962e:	687b      	ldr	r3, [r7, #4]
 8009630:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8009634:	4618      	mov	r0, r3
 8009636:	f000 fa6d 	bl	8009b14 <_ZN8touchgfx8TextAreaD1Ev>
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 8009640:	4618      	mov	r0, r3
 8009642:	f000 fa67 	bl	8009b14 <_ZN8touchgfx8TextAreaD1Ev>
 8009646:	687b      	ldr	r3, [r7, #4]
 8009648:	f503 73ba 	add.w	r3, r3, #372	; 0x174
 800964c:	4618      	mov	r0, r3
 800964e:	f000 fa83 	bl	8009b58 <_ZN8touchgfx12ToggleButtonD1Ev>
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8009658:	4618      	mov	r0, r3
 800965a:	f000 fa5b 	bl	8009b14 <_ZN8touchgfx8TextAreaD1Ev>
 800965e:	687b      	ldr	r3, [r7, #4]
 8009660:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 8009664:	4618      	mov	r0, r3
 8009666:	f000 fa55 	bl	8009b14 <_ZN8touchgfx8TextAreaD1Ev>
 800966a:	687b      	ldr	r3, [r7, #4]
 800966c:	33d8      	adds	r3, #216	; 0xd8
 800966e:	4618      	mov	r0, r3
 8009670:	f000 fa50 	bl	8009b14 <_ZN8touchgfx8TextAreaD1Ev>
 8009674:	687b      	ldr	r3, [r7, #4]
 8009676:	33a4      	adds	r3, #164	; 0xa4
 8009678:	4618      	mov	r0, r3
 800967a:	f000 fa4b 	bl	8009b14 <_ZN8touchgfx8TextAreaD1Ev>
 800967e:	687b      	ldr	r3, [r7, #4]
 8009680:	3370      	adds	r3, #112	; 0x70
 8009682:	4618      	mov	r0, r3
 8009684:	f000 fa46 	bl	8009b14 <_ZN8touchgfx8TextAreaD1Ev>
 8009688:	687b      	ldr	r3, [r7, #4]
 800968a:	3340      	adds	r3, #64	; 0x40
 800968c:	4618      	mov	r0, r3
 800968e:	f7ff febd 	bl	800940c <_ZN8touchgfx3BoxD1Ev>
 8009692:	687b      	ldr	r3, [r7, #4]
 8009694:	4618      	mov	r0, r3
 8009696:	f7ff ffa1 	bl	80095dc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800969a:	687b      	ldr	r3, [r7, #4]
 800969c:	4618      	mov	r0, r3
 800969e:	3708      	adds	r7, #8
 80096a0:	46bd      	mov	sp, r7
 80096a2:	bd80      	pop	{r7, pc}
 80096a4:	0801eeec 	.word	0x0801eeec

080096a8 <_ZN15Screen1ViewBaseD0Ev>:
 80096a8:	b580      	push	{r7, lr}
 80096aa:	b082      	sub	sp, #8
 80096ac:	af00      	add	r7, sp, #0
 80096ae:	6078      	str	r0, [r7, #4]
 80096b0:	6878      	ldr	r0, [r7, #4]
 80096b2:	f7ff ffb5 	bl	8009620 <_ZN15Screen1ViewBaseD1Ev>
 80096b6:	f44f 7105 	mov.w	r1, #532	; 0x214
 80096ba:	6878      	ldr	r0, [r7, #4]
 80096bc:	f012 f913 	bl	801b8e6 <_ZdlPvj>
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	4618      	mov	r0, r3
 80096c4:	3708      	adds	r7, #8
 80096c6:	46bd      	mov	sp, r7
 80096c8:	bd80      	pop	{r7, pc}
	...

080096cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     * @param green Value of the green part (0-255).
     * @param blue  Value of the blue part (0-255).
     *
     * @return The color representation depending on LCD color format.
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 80096cc:	b590      	push	{r4, r7, lr}
 80096ce:	b083      	sub	sp, #12
 80096d0:	af00      	add	r7, sp, #0
 80096d2:	4603      	mov	r3, r0
 80096d4:	71fb      	strb	r3, [r7, #7]
 80096d6:	460b      	mov	r3, r1
 80096d8:	71bb      	strb	r3, [r7, #6]
 80096da:	4613      	mov	r3, r2
 80096dc:	717b      	strb	r3, [r7, #5]
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 80096de:	f7fe ffaf 	bl	8008640 <_ZN8touchgfx3HAL11getInstanceEv>
 80096e2:	4603      	mov	r3, r0
 80096e4:	2b00      	cmp	r3, #0
 80096e6:	d105      	bne.n	80096f4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x28>
 80096e8:	4b0a      	ldr	r3, [pc, #40]	; (8009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x48>)
 80096ea:	4a0b      	ldr	r2, [pc, #44]	; (8009718 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x4c>)
 80096ec:	2138      	movs	r1, #56	; 0x38
 80096ee:	480b      	ldr	r0, [pc, #44]	; (800971c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x50>)
 80096f0:	f012 f928 	bl	801b944 <__assert_func>
 80096f4:	bf00      	nop
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80096f6:	f7fe ffaf 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 80096fa:	6803      	ldr	r3, [r0, #0]
 80096fc:	332c      	adds	r3, #44	; 0x2c
 80096fe:	681c      	ldr	r4, [r3, #0]
 8009700:	797b      	ldrb	r3, [r7, #5]
 8009702:	79ba      	ldrb	r2, [r7, #6]
 8009704:	79f9      	ldrb	r1, [r7, #7]
 8009706:	47a0      	blx	r4
 8009708:	4603      	mov	r3, r0
    }
 800970a:	4618      	mov	r0, r3
 800970c:	370c      	adds	r7, #12
 800970e:	46bd      	mov	sp, r7
 8009710:	bd90      	pop	{r4, r7, pc}
 8009712:	bf00      	nop
 8009714:	0801ea68 	.word	0x0801ea68
 8009718:	0801eaac 	.word	0x0801eaac
 800971c:	0801eb08 	.word	0x0801eb08

08009720 <_ZN15Screen1ViewBaseC1Ev>:
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

Screen1ViewBase::Screen1ViewBase()
 8009720:	b590      	push	{r4, r7, lr}
 8009722:	b08f      	sub	sp, #60	; 0x3c
 8009724:	af02      	add	r7, sp, #8
 8009726:	6078      	str	r0, [r7, #4]
 8009728:	687b      	ldr	r3, [r7, #4]
 800972a:	4618      	mov	r0, r3
 800972c:	f000 f9dc 	bl	8009ae8 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 8009730:	4adc      	ldr	r2, [pc, #880]	; (8009aa4 <_ZN15Screen1ViewBaseC1Ev+0x384>)
 8009732:	687b      	ldr	r3, [r7, #4]
 8009734:	601a      	str	r2, [r3, #0]
 8009736:	687b      	ldr	r3, [r7, #4]
 8009738:	3340      	adds	r3, #64	; 0x40
 800973a:	4618      	mov	r0, r3
 800973c:	f7ff fe46 	bl	80093cc <_ZN8touchgfx3BoxC1Ev>
 8009740:	687b      	ldr	r3, [r7, #4]
 8009742:	3370      	adds	r3, #112	; 0x70
 8009744:	4618      	mov	r0, r3
 8009746:	f7ff fea1 	bl	800948c <_ZN8touchgfx8TextAreaC1Ev>
 800974a:	687b      	ldr	r3, [r7, #4]
 800974c:	33a4      	adds	r3, #164	; 0xa4
 800974e:	4618      	mov	r0, r3
 8009750:	f7ff fe9c 	bl	800948c <_ZN8touchgfx8TextAreaC1Ev>
 8009754:	687b      	ldr	r3, [r7, #4]
 8009756:	33d8      	adds	r3, #216	; 0xd8
 8009758:	4618      	mov	r0, r3
 800975a:	f7ff fe97 	bl	800948c <_ZN8touchgfx8TextAreaC1Ev>
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 8009764:	4618      	mov	r0, r3
 8009766:	f7ff fe91 	bl	800948c <_ZN8touchgfx8TextAreaC1Ev>
 800976a:	687b      	ldr	r3, [r7, #4]
 800976c:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8009770:	4618      	mov	r0, r3
 8009772:	f7ff fe8b 	bl	800948c <_ZN8touchgfx8TextAreaC1Ev>
 8009776:	687b      	ldr	r3, [r7, #4]
 8009778:	f503 73ba 	add.w	r3, r3, #372	; 0x174
 800977c:	4618      	mov	r0, r3
 800977e:	f003 fc39 	bl	800cff4 <_ZN8touchgfx12ToggleButtonC1Ev>
 8009782:	687b      	ldr	r3, [r7, #4]
 8009784:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 8009788:	4618      	mov	r0, r3
 800978a:	f7ff fe7f 	bl	800948c <_ZN8touchgfx8TextAreaC1Ev>
 800978e:	687b      	ldr	r3, [r7, #4]
 8009790:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8009794:	4618      	mov	r0, r3
 8009796:	f7ff fe79 	bl	800948c <_ZN8touchgfx8TextAreaC1Ev>
{

    box1.setPosition(0, 0, 240, 320);
 800979a:	687b      	ldr	r3, [r7, #4]
 800979c:	f103 0040 	add.w	r0, r3, #64	; 0x40
 80097a0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80097a4:	9300      	str	r3, [sp, #0]
 80097a6:	23f0      	movs	r3, #240	; 0xf0
 80097a8:	2200      	movs	r2, #0
 80097aa:	2100      	movs	r1, #0
 80097ac:	f7ff fc08 	bl	8008fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80097b0:	687b      	ldr	r3, [r7, #4]
 80097b2:	f103 0440 	add.w	r4, r3, #64	; 0x40
 80097b6:	22ff      	movs	r2, #255	; 0xff
 80097b8:	21ff      	movs	r1, #255	; 0xff
 80097ba:	20ff      	movs	r0, #255	; 0xff
 80097bc:	f7ff ff86 	bl	80096cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80097c0:	4603      	mov	r3, r0
 80097c2:	4619      	mov	r1, r3
 80097c4:	4620      	mov	r0, r4
 80097c6:	f7ff fe43 	bl	8009450 <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    textArea1.setXY(24, 0);
 80097ca:	687b      	ldr	r3, [r7, #4]
 80097cc:	3370      	adds	r3, #112	; 0x70
 80097ce:	2200      	movs	r2, #0
 80097d0:	2118      	movs	r1, #24
 80097d2:	4618      	mov	r0, r3
 80097d4:	f7ff fc3f 	bl	8009056 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80097d8:	687b      	ldr	r3, [r7, #4]
 80097da:	f103 0470 	add.w	r4, r3, #112	; 0x70
 80097de:	2200      	movs	r2, #0
 80097e0:	2100      	movs	r1, #0
 80097e2:	2000      	movs	r0, #0
 80097e4:	f7ff ff72 	bl	80096cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80097e8:	4603      	mov	r3, r0
 80097ea:	4619      	mov	r1, r3
 80097ec:	4620      	mov	r0, r4
 80097ee:	f7ff fe7f 	bl	80094f0 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea1.setLinespacing(0);
 80097f2:	687b      	ldr	r3, [r7, #4]
 80097f4:	3370      	adds	r3, #112	; 0x70
 80097f6:	2100      	movs	r1, #0
 80097f8:	4618      	mov	r0, r3
 80097fa:	f7ff fe87 	bl	800950c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 80097fe:	687b      	ldr	r3, [r7, #4]
 8009800:	f103 0470 	add.w	r4, r3, #112	; 0x70
 8009804:	f107 030c 	add.w	r3, r7, #12
 8009808:	2100      	movs	r1, #0
 800980a:	4618      	mov	r0, r3
 800980c:	f7ff fe2e 	bl	800946c <_ZN8touchgfx9TypedTextC1Et>
 8009810:	89b9      	ldrh	r1, [r7, #12]
 8009812:	4620      	mov	r0, r4
 8009814:	f003 fd4e 	bl	800d2b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2.setXY(18, 58);
 8009818:	687b      	ldr	r3, [r7, #4]
 800981a:	33a4      	adds	r3, #164	; 0xa4
 800981c:	223a      	movs	r2, #58	; 0x3a
 800981e:	2112      	movs	r1, #18
 8009820:	4618      	mov	r0, r3
 8009822:	f7ff fc18 	bl	8009056 <_ZN8touchgfx8Drawable5setXYEss>
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8009826:	687b      	ldr	r3, [r7, #4]
 8009828:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 800982c:	2200      	movs	r2, #0
 800982e:	2100      	movs	r1, #0
 8009830:	2000      	movs	r0, #0
 8009832:	f7ff ff4b 	bl	80096cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8009836:	4603      	mov	r3, r0
 8009838:	4619      	mov	r1, r3
 800983a:	4620      	mov	r0, r4
 800983c:	f7ff fe58 	bl	80094f0 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2.setLinespacing(0);
 8009840:	687b      	ldr	r3, [r7, #4]
 8009842:	33a4      	adds	r3, #164	; 0xa4
 8009844:	2100      	movs	r1, #0
 8009846:	4618      	mov	r0, r3
 8009848:	f7ff fe60 	bl	800950c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 800984c:	687b      	ldr	r3, [r7, #4]
 800984e:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8009852:	f107 0310 	add.w	r3, r7, #16
 8009856:	2101      	movs	r1, #1
 8009858:	4618      	mov	r0, r3
 800985a:	f7ff fe07 	bl	800946c <_ZN8touchgfx9TypedTextC1Et>
 800985e:	8a39      	ldrh	r1, [r7, #16]
 8009860:	4620      	mov	r0, r4
 8009862:	f003 fd27 	bl	800d2b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2_2.setXY(103, 115);
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	33d8      	adds	r3, #216	; 0xd8
 800986a:	2273      	movs	r2, #115	; 0x73
 800986c:	2167      	movs	r1, #103	; 0x67
 800986e:	4618      	mov	r0, r3
 8009870:	f7ff fbf1 	bl	8009056 <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8009874:	687b      	ldr	r3, [r7, #4]
 8009876:	f103 04d8 	add.w	r4, r3, #216	; 0xd8
 800987a:	2200      	movs	r2, #0
 800987c:	2100      	movs	r1, #0
 800987e:	2000      	movs	r0, #0
 8009880:	f7ff ff24 	bl	80096cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8009884:	4603      	mov	r3, r0
 8009886:	4619      	mov	r1, r3
 8009888:	4620      	mov	r0, r4
 800988a:	f7ff fe31 	bl	80094f0 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_2.setLinespacing(0);
 800988e:	687b      	ldr	r3, [r7, #4]
 8009890:	33d8      	adds	r3, #216	; 0xd8
 8009892:	2100      	movs	r1, #0
 8009894:	4618      	mov	r0, r3
 8009896:	f7ff fe39 	bl	800950c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
 800989a:	687b      	ldr	r3, [r7, #4]
 800989c:	f103 04d8 	add.w	r4, r3, #216	; 0xd8
 80098a0:	f107 0314 	add.w	r3, r7, #20
 80098a4:	2102      	movs	r1, #2
 80098a6:	4618      	mov	r0, r3
 80098a8:	f7ff fde0 	bl	800946c <_ZN8touchgfx9TypedTextC1Et>
 80098ac:	8ab9      	ldrh	r1, [r7, #20]
 80098ae:	4620      	mov	r0, r4
 80098b0:	f003 fd00 	bl	800d2b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2_3.setXY(40, 231);
 80098b4:	687b      	ldr	r3, [r7, #4]
 80098b6:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 80098ba:	22e7      	movs	r2, #231	; 0xe7
 80098bc:	2128      	movs	r1, #40	; 0x28
 80098be:	4618      	mov	r0, r3
 80098c0:	f7ff fbc9 	bl	8009056 <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_3.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80098c4:	687b      	ldr	r3, [r7, #4]
 80098c6:	f503 7486 	add.w	r4, r3, #268	; 0x10c
 80098ca:	2200      	movs	r2, #0
 80098cc:	2100      	movs	r1, #0
 80098ce:	2000      	movs	r0, #0
 80098d0:	f7ff fefc 	bl	80096cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80098d4:	4603      	mov	r3, r0
 80098d6:	4619      	mov	r1, r3
 80098d8:	4620      	mov	r0, r4
 80098da:	f7ff fe09 	bl	80094f0 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_3.setLinespacing(0);
 80098de:	687b      	ldr	r3, [r7, #4]
 80098e0:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 80098e4:	2100      	movs	r1, #0
 80098e6:	4618      	mov	r0, r3
 80098e8:	f7ff fe10 	bl	800950c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));
 80098ec:	687b      	ldr	r3, [r7, #4]
 80098ee:	f503 7486 	add.w	r4, r3, #268	; 0x10c
 80098f2:	f107 0318 	add.w	r3, r7, #24
 80098f6:	2103      	movs	r1, #3
 80098f8:	4618      	mov	r0, r3
 80098fa:	f7ff fdb7 	bl	800946c <_ZN8touchgfx9TypedTextC1Et>
 80098fe:	8b39      	ldrh	r1, [r7, #24]
 8009900:	4620      	mov	r0, r4
 8009902:	f003 fcd7 	bl	800d2b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2_4.setXY(52, 83);
 8009906:	687b      	ldr	r3, [r7, #4]
 8009908:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 800990c:	2253      	movs	r2, #83	; 0x53
 800990e:	2134      	movs	r1, #52	; 0x34
 8009910:	4618      	mov	r0, r3
 8009912:	f7ff fba0 	bl	8009056 <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_4.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8009916:	687b      	ldr	r3, [r7, #4]
 8009918:	f503 74a0 	add.w	r4, r3, #320	; 0x140
 800991c:	2200      	movs	r2, #0
 800991e:	2100      	movs	r1, #0
 8009920:	2000      	movs	r0, #0
 8009922:	f7ff fed3 	bl	80096cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8009926:	4603      	mov	r3, r0
 8009928:	4619      	mov	r1, r3
 800992a:	4620      	mov	r0, r4
 800992c:	f7ff fde0 	bl	80094f0 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_4.setLinespacing(0);
 8009930:	687b      	ldr	r3, [r7, #4]
 8009932:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8009936:	2100      	movs	r1, #0
 8009938:	4618      	mov	r0, r3
 800993a:	f7ff fde7 	bl	800950c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID11));
 800993e:	687b      	ldr	r3, [r7, #4]
 8009940:	f503 74a0 	add.w	r4, r3, #320	; 0x140
 8009944:	f107 031c 	add.w	r3, r7, #28
 8009948:	2104      	movs	r1, #4
 800994a:	4618      	mov	r0, r3
 800994c:	f7ff fd8e 	bl	800946c <_ZN8touchgfx9TypedTextC1Et>
 8009950:	8bb9      	ldrh	r1, [r7, #28]
 8009952:	4620      	mov	r0, r4
 8009954:	f003 fcae 	bl	800d2b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    toggleButton1.setXY(52, 244);
 8009958:	687b      	ldr	r3, [r7, #4]
 800995a:	f503 73ba 	add.w	r3, r3, #372	; 0x174
 800995e:	22f4      	movs	r2, #244	; 0xf4
 8009960:	2134      	movs	r1, #52	; 0x34
 8009962:	4618      	mov	r0, r3
 8009964:	f7ff fb77 	bl	8009056 <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
 8009968:	687b      	ldr	r3, [r7, #4]
 800996a:	f503 74ba 	add.w	r4, r3, #372	; 0x174
 800996e:	f107 0320 	add.w	r3, r7, #32
 8009972:	2100      	movs	r1, #0
 8009974:	4618      	mov	r0, r3
 8009976:	f7ff fac5 	bl	8008f04 <_ZN8touchgfx6BitmapC1Et>
 800997a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800997e:	2101      	movs	r1, #1
 8009980:	4618      	mov	r0, r3
 8009982:	f7ff fabf 	bl	8008f04 <_ZN8touchgfx6BitmapC1Et>
 8009986:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800998a:	f107 0320 	add.w	r3, r7, #32
 800998e:	4619      	mov	r1, r3
 8009990:	4620      	mov	r0, r4
 8009992:	f7ff fe0f 	bl	80095b4 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>

    textArea2_5.setXY(18, 195);
 8009996:	687b      	ldr	r3, [r7, #4]
 8009998:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 800999c:	22c3      	movs	r2, #195	; 0xc3
 800999e:	2112      	movs	r1, #18
 80099a0:	4618      	mov	r0, r3
 80099a2:	f7ff fb58 	bl	8009056 <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_5.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80099a6:	687b      	ldr	r3, [r7, #4]
 80099a8:	f503 74d6 	add.w	r4, r3, #428	; 0x1ac
 80099ac:	2200      	movs	r2, #0
 80099ae:	2100      	movs	r1, #0
 80099b0:	2000      	movs	r0, #0
 80099b2:	f7ff fe8b 	bl	80096cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80099b6:	4603      	mov	r3, r0
 80099b8:	4619      	mov	r1, r3
 80099ba:	4620      	mov	r0, r4
 80099bc:	f7ff fd98 	bl	80094f0 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_5.setLinespacing(0);
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 80099c6:	2100      	movs	r1, #0
 80099c8:	4618      	mov	r0, r3
 80099ca:	f7ff fd9f 	bl	800950c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	f503 74d6 	add.w	r4, r3, #428	; 0x1ac
 80099d4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80099d8:	2105      	movs	r1, #5
 80099da:	4618      	mov	r0, r3
 80099dc:	f7ff fd46 	bl	800946c <_ZN8touchgfx9TypedTextC1Et>
 80099e0:	8d39      	ldrh	r1, [r7, #40]	; 0x28
 80099e2:	4620      	mov	r0, r4
 80099e4:	f003 fc66 	bl	800d2b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2_5_1.setXY(161, 195);
 80099e8:	687b      	ldr	r3, [r7, #4]
 80099ea:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 80099ee:	22c3      	movs	r2, #195	; 0xc3
 80099f0:	21a1      	movs	r1, #161	; 0xa1
 80099f2:	4618      	mov	r0, r3
 80099f4:	f7ff fb2f 	bl	8009056 <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_5_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	f503 74f0 	add.w	r4, r3, #480	; 0x1e0
 80099fe:	2200      	movs	r2, #0
 8009a00:	2100      	movs	r1, #0
 8009a02:	2000      	movs	r0, #0
 8009a04:	f7ff fe62 	bl	80096cc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8009a08:	4603      	mov	r3, r0
 8009a0a:	4619      	mov	r1, r3
 8009a0c:	4620      	mov	r0, r4
 8009a0e:	f7ff fd6f 	bl	80094f0 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_5_1.setLinespacing(0);
 8009a12:	687b      	ldr	r3, [r7, #4]
 8009a14:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8009a18:	2100      	movs	r1, #0
 8009a1a:	4618      	mov	r0, r3
 8009a1c:	f7ff fd76 	bl	800950c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_5_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID13));
 8009a20:	687b      	ldr	r3, [r7, #4]
 8009a22:	f503 74f0 	add.w	r4, r3, #480	; 0x1e0
 8009a26:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8009a2a:	2106      	movs	r1, #6
 8009a2c:	4618      	mov	r0, r3
 8009a2e:	f7ff fd1d 	bl	800946c <_ZN8touchgfx9TypedTextC1Et>
 8009a32:	8db9      	ldrh	r1, [r7, #44]	; 0x2c
 8009a34:	4620      	mov	r0, r4
 8009a36:	f003 fc3d 	bl	800d2b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    add(box1);
 8009a3a:	687a      	ldr	r2, [r7, #4]
 8009a3c:	687b      	ldr	r3, [r7, #4]
 8009a3e:	3340      	adds	r3, #64	; 0x40
 8009a40:	4619      	mov	r1, r3
 8009a42:	4610      	mov	r0, r2
 8009a44:	f7ff fc5a 	bl	80092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea1);
 8009a48:	687a      	ldr	r2, [r7, #4]
 8009a4a:	687b      	ldr	r3, [r7, #4]
 8009a4c:	3370      	adds	r3, #112	; 0x70
 8009a4e:	4619      	mov	r1, r3
 8009a50:	4610      	mov	r0, r2
 8009a52:	f7ff fc53 	bl	80092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2);
 8009a56:	687a      	ldr	r2, [r7, #4]
 8009a58:	687b      	ldr	r3, [r7, #4]
 8009a5a:	33a4      	adds	r3, #164	; 0xa4
 8009a5c:	4619      	mov	r1, r3
 8009a5e:	4610      	mov	r0, r2
 8009a60:	f7ff fc4c 	bl	80092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2_2);
 8009a64:	687a      	ldr	r2, [r7, #4]
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	33d8      	adds	r3, #216	; 0xd8
 8009a6a:	4619      	mov	r1, r3
 8009a6c:	4610      	mov	r0, r2
 8009a6e:	f7ff fc45 	bl	80092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2_3);
 8009a72:	687a      	ldr	r2, [r7, #4]
 8009a74:	687b      	ldr	r3, [r7, #4]
 8009a76:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 8009a7a:	4619      	mov	r1, r3
 8009a7c:	4610      	mov	r0, r2
 8009a7e:	f7ff fc3d 	bl	80092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2_4);
 8009a82:	687a      	ldr	r2, [r7, #4]
 8009a84:	687b      	ldr	r3, [r7, #4]
 8009a86:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8009a8a:	4619      	mov	r1, r3
 8009a8c:	4610      	mov	r0, r2
 8009a8e:	f7ff fc35 	bl	80092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(toggleButton1);
 8009a92:	687a      	ldr	r2, [r7, #4]
 8009a94:	687b      	ldr	r3, [r7, #4]
 8009a96:	f503 73ba 	add.w	r3, r3, #372	; 0x174
 8009a9a:	4619      	mov	r1, r3
 8009a9c:	4610      	mov	r0, r2
 8009a9e:	f7ff fc2d 	bl	80092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
 8009aa2:	e001      	b.n	8009aa8 <_ZN15Screen1ViewBaseC1Ev+0x388>
 8009aa4:	0801eeec 	.word	0x0801eeec
    add(textArea2_5);
 8009aa8:	687a      	ldr	r2, [r7, #4]
 8009aaa:	687b      	ldr	r3, [r7, #4]
 8009aac:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 8009ab0:	4619      	mov	r1, r3
 8009ab2:	4610      	mov	r0, r2
 8009ab4:	f7ff fc22 	bl	80092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2_5_1);
 8009ab8:	687a      	ldr	r2, [r7, #4]
 8009aba:	687b      	ldr	r3, [r7, #4]
 8009abc:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8009ac0:	4619      	mov	r1, r3
 8009ac2:	4610      	mov	r0, r2
 8009ac4:	f7ff fc1a 	bl	80092fc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 8009ac8:	687b      	ldr	r3, [r7, #4]
 8009aca:	4618      	mov	r0, r3
 8009acc:	3734      	adds	r7, #52	; 0x34
 8009ace:	46bd      	mov	sp, r7
 8009ad0:	bd90      	pop	{r4, r7, pc}
 8009ad2:	bf00      	nop

08009ad4 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 8009ad4:	b480      	push	{r7}
 8009ad6:	b083      	sub	sp, #12
 8009ad8:	af00      	add	r7, sp, #0
 8009ada:	6078      	str	r0, [r7, #4]

}
 8009adc:	bf00      	nop
 8009ade:	370c      	adds	r7, #12
 8009ae0:	46bd      	mov	sp, r7
 8009ae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ae6:	4770      	bx	lr

08009ae8 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View() : presenter(0)
 8009ae8:	b580      	push	{r7, lr}
 8009aea:	b082      	sub	sp, #8
 8009aec:	af00      	add	r7, sp, #0
 8009aee:	6078      	str	r0, [r7, #4]
 8009af0:	687b      	ldr	r3, [r7, #4]
 8009af2:	4618      	mov	r0, r3
 8009af4:	f005 fbd8 	bl	800f2a8 <_ZN8touchgfx6ScreenC1Ev>
 8009af8:	4a05      	ldr	r2, [pc, #20]	; (8009b10 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 8009afa:	687b      	ldr	r3, [r7, #4]
 8009afc:	601a      	str	r2, [r3, #0]
 8009afe:	687b      	ldr	r3, [r7, #4]
 8009b00:	2200      	movs	r2, #0
 8009b02:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8009b04:	687b      	ldr	r3, [r7, #4]
 8009b06:	4618      	mov	r0, r3
 8009b08:	3708      	adds	r7, #8
 8009b0a:	46bd      	mov	sp, r7
 8009b0c:	bd80      	pop	{r7, pc}
 8009b0e:	bf00      	nop
 8009b10:	0801ef20 	.word	0x0801ef20

08009b14 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 8009b14:	b580      	push	{r7, lr}
 8009b16:	b082      	sub	sp, #8
 8009b18:	af00      	add	r7, sp, #0
 8009b1a:	6078      	str	r0, [r7, #4]
 8009b1c:	4a05      	ldr	r2, [pc, #20]	; (8009b34 <_ZN8touchgfx8TextAreaD1Ev+0x20>)
 8009b1e:	687b      	ldr	r3, [r7, #4]
 8009b20:	601a      	str	r2, [r3, #0]
 8009b22:	687b      	ldr	r3, [r7, #4]
 8009b24:	4618      	mov	r0, r3
 8009b26:	f7ff fc0b 	bl	8009340 <_ZN8touchgfx6WidgetD1Ev>
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	4618      	mov	r0, r3
 8009b2e:	3708      	adds	r7, #8
 8009b30:	46bd      	mov	sp, r7
 8009b32:	bd80      	pop	{r7, pc}
 8009b34:	0801ff28 	.word	0x0801ff28

08009b38 <_ZN8touchgfx8TextAreaD0Ev>:
 8009b38:	b580      	push	{r7, lr}
 8009b3a:	b082      	sub	sp, #8
 8009b3c:	af00      	add	r7, sp, #0
 8009b3e:	6078      	str	r0, [r7, #4]
 8009b40:	6878      	ldr	r0, [r7, #4]
 8009b42:	f7ff ffe7 	bl	8009b14 <_ZN8touchgfx8TextAreaD1Ev>
 8009b46:	2134      	movs	r1, #52	; 0x34
 8009b48:	6878      	ldr	r0, [r7, #4]
 8009b4a:	f011 fecc 	bl	801b8e6 <_ZdlPvj>
 8009b4e:	687b      	ldr	r3, [r7, #4]
 8009b50:	4618      	mov	r0, r3
 8009b52:	3708      	adds	r7, #8
 8009b54:	46bd      	mov	sp, r7
 8009b56:	bd80      	pop	{r7, pc}

08009b58 <_ZN8touchgfx12ToggleButtonD1Ev>:
class ToggleButton : public Button
 8009b58:	b580      	push	{r7, lr}
 8009b5a:	b082      	sub	sp, #8
 8009b5c:	af00      	add	r7, sp, #0
 8009b5e:	6078      	str	r0, [r7, #4]
 8009b60:	4a05      	ldr	r2, [pc, #20]	; (8009b78 <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 8009b62:	687b      	ldr	r3, [r7, #4]
 8009b64:	601a      	str	r2, [r3, #0]
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	4618      	mov	r0, r3
 8009b6a:	f7ff fd01 	bl	8009570 <_ZN8touchgfx6ButtonD1Ev>
 8009b6e:	687b      	ldr	r3, [r7, #4]
 8009b70:	4618      	mov	r0, r3
 8009b72:	3708      	adds	r7, #8
 8009b74:	46bd      	mov	sp, r7
 8009b76:	bd80      	pop	{r7, pc}
 8009b78:	0801feb8 	.word	0x0801feb8

08009b7c <_ZN8touchgfx12ToggleButtonD0Ev>:
 8009b7c:	b580      	push	{r7, lr}
 8009b7e:	b082      	sub	sp, #8
 8009b80:	af00      	add	r7, sp, #0
 8009b82:	6078      	str	r0, [r7, #4]
 8009b84:	6878      	ldr	r0, [r7, #4]
 8009b86:	f7ff ffe7 	bl	8009b58 <_ZN8touchgfx12ToggleButtonD1Ev>
 8009b8a:	2138      	movs	r1, #56	; 0x38
 8009b8c:	6878      	ldr	r0, [r7, #4]
 8009b8e:	f011 feaa 	bl	801b8e6 <_ZdlPvj>
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	4618      	mov	r0, r3
 8009b96:	3708      	adds	r7, #8
 8009b98:	46bd      	mov	sp, r7
 8009b9a:	bd80      	pop	{r7, pc}

08009b9c <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 8009b9c:	b480      	push	{r7}
 8009b9e:	af00      	add	r7, sp, #0
    return bitmap_database;
 8009ba0:	4b02      	ldr	r3, [pc, #8]	; (8009bac <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 8009ba2:	4618      	mov	r0, r3
 8009ba4:	46bd      	mov	sp, r7
 8009ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009baa:	4770      	bx	lr
 8009bac:	0801efb4 	.word	0x0801efb4

08009bb0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 8009bb0:	b480      	push	{r7}
 8009bb2:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 8009bb4:	2302      	movs	r3, #2
}
 8009bb6:	4618      	mov	r0, r3
 8009bb8:	46bd      	mov	sp, r7
 8009bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bbe:	4770      	bx	lr

08009bc0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8009bc0:	b480      	push	{r7}
 8009bc2:	b085      	sub	sp, #20
 8009bc4:	af00      	add	r7, sp, #0
 8009bc6:	60f8      	str	r0, [r7, #12]
 8009bc8:	60b9      	str	r1, [r7, #8]
 8009bca:	4613      	mov	r3, r2
 8009bcc:	80fb      	strh	r3, [r7, #6]
        typedTexts = data;
 8009bce:	4a07      	ldr	r2, [pc, #28]	; (8009bec <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8009bd0:	68fb      	ldr	r3, [r7, #12]
 8009bd2:	6013      	str	r3, [r2, #0]
        fonts = f;
 8009bd4:	4a06      	ldr	r2, [pc, #24]	; (8009bf0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 8009bd6:	68bb      	ldr	r3, [r7, #8]
 8009bd8:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 8009bda:	4a06      	ldr	r2, [pc, #24]	; (8009bf4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 8009bdc:	88fb      	ldrh	r3, [r7, #6]
 8009bde:	8013      	strh	r3, [r2, #0]
    }
 8009be0:	bf00      	nop
 8009be2:	3714      	adds	r7, #20
 8009be4:	46bd      	mov	sp, r7
 8009be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bea:	4770      	bx	lr
 8009bec:	20001814 	.word	0x20001814
 8009bf0:	2000181c 	.word	0x2000181c
 8009bf4:	20001818 	.word	0x20001818

08009bf8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8009bf8:	b590      	push	{r4, r7, lr}
 8009bfa:	b085      	sub	sp, #20
 8009bfc:	af00      	add	r7, sp, #0
 8009bfe:	4603      	mov	r3, r0
 8009c00:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 8009c02:	2300      	movs	r3, #0
 8009c04:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8009c06:	88fb      	ldrh	r3, [r7, #6]
 8009c08:	2b00      	cmp	r3, #0
 8009c0a:	d127      	bne.n	8009c5c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 8009c0c:	88fb      	ldrh	r3, [r7, #6]
 8009c0e:	4a1e      	ldr	r2, [pc, #120]	; (8009c88 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8009c10:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009c14:	2b00      	cmp	r3, #0
 8009c16:	d016      	beq.n	8009c46 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8009c18:	88fb      	ldrh	r3, [r7, #6]
 8009c1a:	4a1b      	ldr	r2, [pc, #108]	; (8009c88 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8009c1c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009c20:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8009c22:	68bb      	ldr	r3, [r7, #8]
 8009c24:	681b      	ldr	r3, [r3, #0]
 8009c26:	68ba      	ldr	r2, [r7, #8]
 8009c28:	4413      	add	r3, r2
 8009c2a:	4a18      	ldr	r2, [pc, #96]	; (8009c8c <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8009c2c:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8009c2e:	68bb      	ldr	r3, [r7, #8]
 8009c30:	685b      	ldr	r3, [r3, #4]
 8009c32:	68ba      	ldr	r2, [r7, #8]
 8009c34:	4413      	add	r3, r2
 8009c36:	4a16      	ldr	r2, [pc, #88]	; (8009c90 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8009c38:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8009c3a:	68bb      	ldr	r3, [r7, #8]
 8009c3c:	689b      	ldr	r3, [r3, #8]
 8009c3e:	68ba      	ldr	r2, [r7, #8]
 8009c40:	4413      	add	r3, r2
 8009c42:	60fb      	str	r3, [r7, #12]
 8009c44:	e00a      	b.n	8009c5c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 8009c46:	4b11      	ldr	r3, [pc, #68]	; (8009c8c <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8009c48:	4a12      	ldr	r2, [pc, #72]	; (8009c94 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 8009c4a:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8009c4c:	4a12      	ldr	r2, [pc, #72]	; (8009c98 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 8009c4e:	4b10      	ldr	r3, [pc, #64]	; (8009c90 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8009c50:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8009c52:	88fb      	ldrh	r3, [r7, #6]
 8009c54:	4a11      	ldr	r2, [pc, #68]	; (8009c9c <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 8009c56:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009c5a:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8009c5c:	68fb      	ldr	r3, [r7, #12]
 8009c5e:	2b00      	cmp	r3, #0
 8009c60:	d00d      	beq.n	8009c7e <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 8009c62:	4a0f      	ldr	r2, [pc, #60]	; (8009ca0 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 8009c64:	88fb      	ldrh	r3, [r7, #6]
 8009c66:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8009c68:	f000 f83e 	bl	8009ce8 <_ZN17TypedTextDatabase8getFontsEv>
 8009c6c:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8009c6e:	f000 f833 	bl	8009cd8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 8009c72:	4603      	mov	r3, r0
 8009c74:	461a      	mov	r2, r3
 8009c76:	4621      	mov	r1, r4
 8009c78:	68f8      	ldr	r0, [r7, #12]
 8009c7a:	f7ff ffa1 	bl	8009bc0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 8009c7e:	bf00      	nop
 8009c80:	3714      	adds	r7, #20
 8009c82:	46bd      	mov	sp, r7
 8009c84:	bd90      	pop	{r4, r7, pc}
 8009c86:	bf00      	nop
 8009c88:	200006a4 	.word	0x200006a4
 8009c8c:	200006ac 	.word	0x200006ac
 8009c90:	200006b0 	.word	0x200006b0
 8009c94:	0802c2e8 	.word	0x0802c2e8
 8009c98:	0802c2cc 	.word	0x0802c2cc
 8009c9c:	0802c3bc 	.word	0x0802c3bc
 8009ca0:	200006a8 	.word	0x200006a8

08009ca4 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 8009ca4:	b480      	push	{r7}
 8009ca6:	b083      	sub	sp, #12
 8009ca8:	af00      	add	r7, sp, #0
 8009caa:	6078      	str	r0, [r7, #4]
 8009cac:	460b      	mov	r3, r1
 8009cae:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8009cb0:	4b07      	ldr	r3, [pc, #28]	; (8009cd0 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 8009cb2:	681a      	ldr	r2, [r3, #0]
 8009cb4:	4b07      	ldr	r3, [pc, #28]	; (8009cd4 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 8009cb6:	6819      	ldr	r1, [r3, #0]
 8009cb8:	887b      	ldrh	r3, [r7, #2]
 8009cba:	009b      	lsls	r3, r3, #2
 8009cbc:	440b      	add	r3, r1
 8009cbe:	681b      	ldr	r3, [r3, #0]
 8009cc0:	005b      	lsls	r3, r3, #1
 8009cc2:	4413      	add	r3, r2
}
 8009cc4:	4618      	mov	r0, r3
 8009cc6:	370c      	adds	r7, #12
 8009cc8:	46bd      	mov	sp, r7
 8009cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cce:	4770      	bx	lr
 8009cd0:	200006ac 	.word	0x200006ac
 8009cd4:	200006b0 	.word	0x200006b0

08009cd8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8009cd8:	b480      	push	{r7}
 8009cda:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8009cdc:	2307      	movs	r3, #7
}
 8009cde:	4618      	mov	r0, r3
 8009ce0:	46bd      	mov	sp, r7
 8009ce2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ce6:	4770      	bx	lr

08009ce8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8009ce8:	b480      	push	{r7}
 8009cea:	af00      	add	r7, sp, #0
    return _fonts;
 8009cec:	4b02      	ldr	r3, [pc, #8]	; (8009cf8 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 8009cee:	4618      	mov	r0, r3
 8009cf0:	46bd      	mov	sp, r7
 8009cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cf6:	4770      	bx	lr
 8009cf8:	200006b4 	.word	0x200006b4

08009cfc <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        _fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8009cfc:	b580      	push	{r7, lr}
 8009cfe:	b082      	sub	sp, #8
 8009d00:	af00      	add	r7, sp, #0
 8009d02:	6078      	str	r0, [r7, #4]
 8009d04:	6039      	str	r1, [r7, #0]
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	2b01      	cmp	r3, #1
 8009d0a:	d113      	bne.n	8009d34 <_Z41__static_initialization_and_destruction_0ii+0x38>
 8009d0c:	683b      	ldr	r3, [r7, #0]
 8009d0e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009d12:	4293      	cmp	r3, r2
 8009d14:	d10e      	bne.n	8009d34 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 8009d16:	f7fe faf7 	bl	8008308 <_Z23getFont_verdana_20_4bppv>
 8009d1a:	4603      	mov	r3, r0
};
 8009d1c:	4a07      	ldr	r2, [pc, #28]	; (8009d3c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009d1e:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 8009d20:	f7fe fb46 	bl	80083b0 <_Z23getFont_verdana_40_4bppv>
 8009d24:	4603      	mov	r3, r0
};
 8009d26:	4a05      	ldr	r2, [pc, #20]	; (8009d3c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009d28:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 8009d2a:	f7fe fa99 	bl	8008260 <_Z23getFont_verdana_10_4bppv>
 8009d2e:	4603      	mov	r3, r0
};
 8009d30:	4a02      	ldr	r2, [pc, #8]	; (8009d3c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009d32:	6093      	str	r3, [r2, #8]
}  // namespace TypedTextDatabase
 8009d34:	bf00      	nop
 8009d36:	3708      	adds	r7, #8
 8009d38:	46bd      	mov	sp, r7
 8009d3a:	bd80      	pop	{r7, pc}
 8009d3c:	200006b4 	.word	0x200006b4

08009d40 <_GLOBAL__sub_I__fonts>:
 8009d40:	b580      	push	{r7, lr}
 8009d42:	af00      	add	r7, sp, #0
 8009d44:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009d48:	2001      	movs	r0, #1
 8009d4a:	f7ff ffd7 	bl	8009cfc <_Z41__static_initialization_and_destruction_0ii>
 8009d4e:	bd80      	pop	{r7, pc}

08009d50 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009d50:	b580      	push	{r7, lr}
 8009d52:	b082      	sub	sp, #8
 8009d54:	af00      	add	r7, sp, #0
 8009d56:	6078      	str	r0, [r7, #4]
 8009d58:	4a05      	ldr	r2, [pc, #20]	; (8009d70 <_ZN19FrontendApplicationD1Ev+0x20>)
 8009d5a:	687b      	ldr	r3, [r7, #4]
 8009d5c:	601a      	str	r2, [r3, #0]
 8009d5e:	687b      	ldr	r3, [r7, #4]
 8009d60:	4618      	mov	r0, r3
 8009d62:	f7fe fdc7 	bl	80088f4 <_ZN23FrontendApplicationBaseD1Ev>
 8009d66:	687b      	ldr	r3, [r7, #4]
 8009d68:	4618      	mov	r0, r3
 8009d6a:	3708      	adds	r7, #8
 8009d6c:	46bd      	mov	sp, r7
 8009d6e:	bd80      	pop	{r7, pc}
 8009d70:	0801efe4 	.word	0x0801efe4

08009d74 <_ZN19FrontendApplicationD0Ev>:
 8009d74:	b580      	push	{r7, lr}
 8009d76:	b082      	sub	sp, #8
 8009d78:	af00      	add	r7, sp, #0
 8009d7a:	6078      	str	r0, [r7, #4]
 8009d7c:	6878      	ldr	r0, [r7, #4]
 8009d7e:	f7ff ffe7 	bl	8009d50 <_ZN19FrontendApplicationD1Ev>
 8009d82:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8009d86:	6878      	ldr	r0, [r7, #4]
 8009d88:	f011 fdad 	bl	801b8e6 <_ZdlPvj>
 8009d8c:	687b      	ldr	r3, [r7, #4]
 8009d8e:	4618      	mov	r0, r3
 8009d90:	3708      	adds	r7, #8
 8009d92:	46bd      	mov	sp, r7
 8009d94:	bd80      	pop	{r7, pc}

08009d96 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8009d96:	b580      	push	{r7, lr}
 8009d98:	b082      	sub	sp, #8
 8009d9a:	af00      	add	r7, sp, #0
 8009d9c:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 8009d9e:	687b      	ldr	r3, [r7, #4]
 8009da0:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8009da4:	4618      	mov	r0, r3
 8009da6:	f000 f82d 	bl	8009e04 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009daa:	687b      	ldr	r3, [r7, #4]
 8009dac:	4618      	mov	r0, r3
 8009dae:	f004 fa1f 	bl	800e1f0 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8009db2:	bf00      	nop
 8009db4:	3708      	adds	r7, #8
 8009db6:	46bd      	mov	sp, r7
 8009db8:	bd80      	pop	{r7, pc}
	...

08009dbc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8009dbc:	b580      	push	{r7, lr}
 8009dbe:	b084      	sub	sp, #16
 8009dc0:	af00      	add	r7, sp, #0
 8009dc2:	60f8      	str	r0, [r7, #12]
 8009dc4:	60b9      	str	r1, [r7, #8]
 8009dc6:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8009dc8:	68fb      	ldr	r3, [r7, #12]
 8009dca:	687a      	ldr	r2, [r7, #4]
 8009dcc:	68b9      	ldr	r1, [r7, #8]
 8009dce:	4618      	mov	r0, r3
 8009dd0:	f7fe fe0a 	bl	80089e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009dd4:	4a03      	ldr	r2, [pc, #12]	; (8009de4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8009dd6:	68fb      	ldr	r3, [r7, #12]
 8009dd8:	601a      	str	r2, [r3, #0]
{

}
 8009dda:	68fb      	ldr	r3, [r7, #12]
 8009ddc:	4618      	mov	r0, r3
 8009dde:	3710      	adds	r7, #16
 8009de0:	46bd      	mov	sp, r7
 8009de2:	bd80      	pop	{r7, pc}
 8009de4:	0801efe4 	.word	0x0801efe4

08009de8 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8009de8:	b480      	push	{r7}
 8009dea:	b083      	sub	sp, #12
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	6078      	str	r0, [r7, #4]
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	2200      	movs	r2, #0
 8009df4:	601a      	str	r2, [r3, #0]
{

}
 8009df6:	687b      	ldr	r3, [r7, #4]
 8009df8:	4618      	mov	r0, r3
 8009dfa:	370c      	adds	r7, #12
 8009dfc:	46bd      	mov	sp, r7
 8009dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e02:	4770      	bx	lr

08009e04 <_ZN5Model4tickEv>:

void Model::tick()
{
 8009e04:	b480      	push	{r7}
 8009e06:	b083      	sub	sp, #12
 8009e08:	af00      	add	r7, sp, #0
 8009e0a:	6078      	str	r0, [r7, #4]

}
 8009e0c:	bf00      	nop
 8009e0e:	370c      	adds	r7, #12
 8009e10:	46bd      	mov	sp, r7
 8009e12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e16:	4770      	bx	lr

08009e18 <_ZN8touchgfx9Presenter8activateEv>:
     * @brief Place initialization code for the Presenter here.
     *
     *        The activate function is called automatically when a screen transition causes
     *        this Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8009e18:	b480      	push	{r7}
 8009e1a:	b083      	sub	sp, #12
 8009e1c:	af00      	add	r7, sp, #0
 8009e1e:	6078      	str	r0, [r7, #4]
    {
    }
 8009e20:	bf00      	nop
 8009e22:	370c      	adds	r7, #12
 8009e24:	46bd      	mov	sp, r7
 8009e26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e2a:	4770      	bx	lr

08009e2c <_ZN8touchgfx9Presenter10deactivateEv>:
     * @brief Place cleanup code for the Presenter here.
     *
     *        The deactivate function is called automatically when a screen transition causes
     *        this Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8009e2c:	b480      	push	{r7}
 8009e2e:	b083      	sub	sp, #12
 8009e30:	af00      	add	r7, sp, #0
 8009e32:	6078      	str	r0, [r7, #4]
    {
    }
 8009e34:	bf00      	nop
 8009e36:	370c      	adds	r7, #12
 8009e38:	46bd      	mov	sp, r7
 8009e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e3e:	4770      	bx	lr

08009e40 <_ZN8touchgfx9PresenterD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Presenter()
 8009e40:	b480      	push	{r7}
 8009e42:	b083      	sub	sp, #12
 8009e44:	af00      	add	r7, sp, #0
 8009e46:	6078      	str	r0, [r7, #4]
    {
 8009e48:	4a04      	ldr	r2, [pc, #16]	; (8009e5c <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 8009e4a:	687b      	ldr	r3, [r7, #4]
 8009e4c:	601a      	str	r2, [r3, #0]
    }
 8009e4e:	687b      	ldr	r3, [r7, #4]
 8009e50:	4618      	mov	r0, r3
 8009e52:	370c      	adds	r7, #12
 8009e54:	46bd      	mov	sp, r7
 8009e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e5a:	4770      	bx	lr
 8009e5c:	0801f058 	.word	0x0801f058

08009e60 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 8009e60:	b580      	push	{r7, lr}
 8009e62:	b082      	sub	sp, #8
 8009e64:	af00      	add	r7, sp, #0
 8009e66:	6078      	str	r0, [r7, #4]
    }
 8009e68:	6878      	ldr	r0, [r7, #4]
 8009e6a:	f7ff ffe9 	bl	8009e40 <_ZN8touchgfx9PresenterD1Ev>
 8009e6e:	2104      	movs	r1, #4
 8009e70:	6878      	ldr	r0, [r7, #4]
 8009e72:	f011 fd38 	bl	801b8e6 <_ZdlPvj>
 8009e76:	687b      	ldr	r3, [r7, #4]
 8009e78:	4618      	mov	r0, r3
 8009e7a:	3708      	adds	r7, #8
 8009e7c:	46bd      	mov	sp, r7
 8009e7e:	bd80      	pop	{r7, pc}

08009e80 <_ZN8touchgfx9PresenterC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Presenter()
 8009e80:	b480      	push	{r7}
 8009e82:	b083      	sub	sp, #12
 8009e84:	af00      	add	r7, sp, #0
 8009e86:	6078      	str	r0, [r7, #4]
    {
 8009e88:	4a04      	ldr	r2, [pc, #16]	; (8009e9c <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8009e8a:	687b      	ldr	r3, [r7, #4]
 8009e8c:	601a      	str	r2, [r3, #0]
    }
 8009e8e:	687b      	ldr	r3, [r7, #4]
 8009e90:	4618      	mov	r0, r3
 8009e92:	370c      	adds	r7, #12
 8009e94:	46bd      	mov	sp, r7
 8009e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e9a:	4770      	bx	lr
 8009e9c:	0801f058 	.word	0x0801f058

08009ea0 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 8009ea0:	b480      	push	{r7}
 8009ea2:	b083      	sub	sp, #12
 8009ea4:	af00      	add	r7, sp, #0
 8009ea6:	6078      	str	r0, [r7, #4]
 8009ea8:	4a06      	ldr	r2, [pc, #24]	; (8009ec4 <_ZN13ModelListenerC1Ev+0x24>)
 8009eaa:	687b      	ldr	r3, [r7, #4]
 8009eac:	601a      	str	r2, [r3, #0]
 8009eae:	687b      	ldr	r3, [r7, #4]
 8009eb0:	2200      	movs	r2, #0
 8009eb2:	605a      	str	r2, [r3, #4]
 8009eb4:	687b      	ldr	r3, [r7, #4]
 8009eb6:	4618      	mov	r0, r3
 8009eb8:	370c      	adds	r7, #12
 8009eba:	46bd      	mov	sp, r7
 8009ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ec0:	4770      	bx	lr
 8009ec2:	bf00      	nop
 8009ec4:	0801f048 	.word	0x0801f048

08009ec8 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 8009ec8:	b480      	push	{r7}
 8009eca:	b083      	sub	sp, #12
 8009ecc:	af00      	add	r7, sp, #0
 8009ece:	6078      	str	r0, [r7, #4]
 8009ed0:	4a04      	ldr	r2, [pc, #16]	; (8009ee4 <_ZN13ModelListenerD1Ev+0x1c>)
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	601a      	str	r2, [r3, #0]
 8009ed6:	687b      	ldr	r3, [r7, #4]
 8009ed8:	4618      	mov	r0, r3
 8009eda:	370c      	adds	r7, #12
 8009edc:	46bd      	mov	sp, r7
 8009ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ee2:	4770      	bx	lr
 8009ee4:	0801f048 	.word	0x0801f048

08009ee8 <_ZN13ModelListenerD0Ev>:
 8009ee8:	b580      	push	{r7, lr}
 8009eea:	b082      	sub	sp, #8
 8009eec:	af00      	add	r7, sp, #0
 8009eee:	6078      	str	r0, [r7, #4]
 8009ef0:	6878      	ldr	r0, [r7, #4]
 8009ef2:	f7ff ffe9 	bl	8009ec8 <_ZN13ModelListenerD1Ev>
 8009ef6:	2108      	movs	r1, #8
 8009ef8:	6878      	ldr	r0, [r7, #4]
 8009efa:	f011 fcf4 	bl	801b8e6 <_ZdlPvj>
 8009efe:	687b      	ldr	r3, [r7, #4]
 8009f00:	4618      	mov	r0, r3
 8009f02:	3708      	adds	r7, #8
 8009f04:	46bd      	mov	sp, r7
 8009f06:	bd80      	pop	{r7, pc}

08009f08 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8009f08:	b580      	push	{r7, lr}
 8009f0a:	b082      	sub	sp, #8
 8009f0c:	af00      	add	r7, sp, #0
 8009f0e:	6078      	str	r0, [r7, #4]
 8009f10:	4a09      	ldr	r2, [pc, #36]	; (8009f38 <_ZN16Screen1PresenterD1Ev+0x30>)
 8009f12:	687b      	ldr	r3, [r7, #4]
 8009f14:	601a      	str	r2, [r3, #0]
 8009f16:	4a09      	ldr	r2, [pc, #36]	; (8009f3c <_ZN16Screen1PresenterD1Ev+0x34>)
 8009f18:	687b      	ldr	r3, [r7, #4]
 8009f1a:	605a      	str	r2, [r3, #4]
 8009f1c:	687b      	ldr	r3, [r7, #4]
 8009f1e:	3304      	adds	r3, #4
 8009f20:	4618      	mov	r0, r3
 8009f22:	f7ff ffd1 	bl	8009ec8 <_ZN13ModelListenerD1Ev>
 8009f26:	687b      	ldr	r3, [r7, #4]
 8009f28:	4618      	mov	r0, r3
 8009f2a:	f7ff ff89 	bl	8009e40 <_ZN8touchgfx9PresenterD1Ev>
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	4618      	mov	r0, r3
 8009f32:	3708      	adds	r7, #8
 8009f34:	46bd      	mov	sp, r7
 8009f36:	bd80      	pop	{r7, pc}
 8009f38:	0801f020 	.word	0x0801f020
 8009f3c:	0801f038 	.word	0x0801f038

08009f40 <_ZThn4_N16Screen1PresenterD1Ev>:
 8009f40:	f1a0 0004 	sub.w	r0, r0, #4
 8009f44:	e7e0      	b.n	8009f08 <_ZN16Screen1PresenterD1Ev>
 8009f46:	bf00      	nop

08009f48 <_ZN16Screen1PresenterD0Ev>:
 8009f48:	b580      	push	{r7, lr}
 8009f4a:	b082      	sub	sp, #8
 8009f4c:	af00      	add	r7, sp, #0
 8009f4e:	6078      	str	r0, [r7, #4]
 8009f50:	6878      	ldr	r0, [r7, #4]
 8009f52:	f7ff ffd9 	bl	8009f08 <_ZN16Screen1PresenterD1Ev>
 8009f56:	2110      	movs	r1, #16
 8009f58:	6878      	ldr	r0, [r7, #4]
 8009f5a:	f011 fcc4 	bl	801b8e6 <_ZdlPvj>
 8009f5e:	687b      	ldr	r3, [r7, #4]
 8009f60:	4618      	mov	r0, r3
 8009f62:	3708      	adds	r7, #8
 8009f64:	46bd      	mov	sp, r7
 8009f66:	bd80      	pop	{r7, pc}

08009f68 <_ZThn4_N16Screen1PresenterD0Ev>:
 8009f68:	f1a0 0004 	sub.w	r0, r0, #4
 8009f6c:	e7ec      	b.n	8009f48 <_ZN16Screen1PresenterD0Ev>
	...

08009f70 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 8009f70:	b580      	push	{r7, lr}
 8009f72:	b082      	sub	sp, #8
 8009f74:	af00      	add	r7, sp, #0
 8009f76:	6078      	str	r0, [r7, #4]
 8009f78:	6039      	str	r1, [r7, #0]
    : view(v)
 8009f7a:	687b      	ldr	r3, [r7, #4]
 8009f7c:	4618      	mov	r0, r3
 8009f7e:	f7ff ff7f 	bl	8009e80 <_ZN8touchgfx9PresenterC1Ev>
 8009f82:	687b      	ldr	r3, [r7, #4]
 8009f84:	3304      	adds	r3, #4
 8009f86:	4618      	mov	r0, r3
 8009f88:	f7ff ff8a 	bl	8009ea0 <_ZN13ModelListenerC1Ev>
 8009f8c:	4a06      	ldr	r2, [pc, #24]	; (8009fa8 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 8009f8e:	687b      	ldr	r3, [r7, #4]
 8009f90:	601a      	str	r2, [r3, #0]
 8009f92:	4a06      	ldr	r2, [pc, #24]	; (8009fac <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 8009f94:	687b      	ldr	r3, [r7, #4]
 8009f96:	605a      	str	r2, [r3, #4]
 8009f98:	687b      	ldr	r3, [r7, #4]
 8009f9a:	683a      	ldr	r2, [r7, #0]
 8009f9c:	60da      	str	r2, [r3, #12]
{

}
 8009f9e:	687b      	ldr	r3, [r7, #4]
 8009fa0:	4618      	mov	r0, r3
 8009fa2:	3708      	adds	r7, #8
 8009fa4:	46bd      	mov	sp, r7
 8009fa6:	bd80      	pop	{r7, pc}
 8009fa8:	0801f020 	.word	0x0801f020
 8009fac:	0801f038 	.word	0x0801f038

08009fb0 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 8009fb0:	b480      	push	{r7}
 8009fb2:	b083      	sub	sp, #12
 8009fb4:	af00      	add	r7, sp, #0
 8009fb6:	6078      	str	r0, [r7, #4]

}
 8009fb8:	bf00      	nop
 8009fba:	370c      	adds	r7, #12
 8009fbc:	46bd      	mov	sp, r7
 8009fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fc2:	4770      	bx	lr

08009fc4 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 8009fc4:	b480      	push	{r7}
 8009fc6:	b083      	sub	sp, #12
 8009fc8:	af00      	add	r7, sp, #0
 8009fca:	6078      	str	r0, [r7, #4]

}
 8009fcc:	bf00      	nop
 8009fce:	370c      	adds	r7, #12
 8009fd0:	46bd      	mov	sp, r7
 8009fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fd6:	4770      	bx	lr

08009fd8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8009fd8:	b580      	push	{r7, lr}
 8009fda:	b082      	sub	sp, #8
 8009fdc:	af00      	add	r7, sp, #0
 8009fde:	6078      	str	r0, [r7, #4]
 8009fe0:	4a05      	ldr	r2, [pc, #20]	; (8009ff8 <_ZN11Screen1ViewD1Ev+0x20>)
 8009fe2:	687b      	ldr	r3, [r7, #4]
 8009fe4:	601a      	str	r2, [r3, #0]
 8009fe6:	687b      	ldr	r3, [r7, #4]
 8009fe8:	4618      	mov	r0, r3
 8009fea:	f7ff fb19 	bl	8009620 <_ZN15Screen1ViewBaseD1Ev>
 8009fee:	687b      	ldr	r3, [r7, #4]
 8009ff0:	4618      	mov	r0, r3
 8009ff2:	3708      	adds	r7, #8
 8009ff4:	46bd      	mov	sp, r7
 8009ff6:	bd80      	pop	{r7, pc}
 8009ff8:	0801f070 	.word	0x0801f070

08009ffc <_ZN11Screen1ViewD0Ev>:
 8009ffc:	b580      	push	{r7, lr}
 8009ffe:	b082      	sub	sp, #8
 800a000:	af00      	add	r7, sp, #0
 800a002:	6078      	str	r0, [r7, #4]
 800a004:	6878      	ldr	r0, [r7, #4]
 800a006:	f7ff ffe7 	bl	8009fd8 <_ZN11Screen1ViewD1Ev>
 800a00a:	f44f 7105 	mov.w	r1, #532	; 0x214
 800a00e:	6878      	ldr	r0, [r7, #4]
 800a010:	f011 fc69 	bl	801b8e6 <_ZdlPvj>
 800a014:	687b      	ldr	r3, [r7, #4]
 800a016:	4618      	mov	r0, r3
 800a018:	3708      	adds	r7, #8
 800a01a:	46bd      	mov	sp, r7
 800a01c:	bd80      	pop	{r7, pc}
	...

0800a020 <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 800a020:	b580      	push	{r7, lr}
 800a022:	b082      	sub	sp, #8
 800a024:	af00      	add	r7, sp, #0
 800a026:	6078      	str	r0, [r7, #4]
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	4618      	mov	r0, r3
 800a02c:	f7ff fb78 	bl	8009720 <_ZN15Screen1ViewBaseC1Ev>
 800a030:	4a03      	ldr	r2, [pc, #12]	; (800a040 <_ZN11Screen1ViewC1Ev+0x20>)
 800a032:	687b      	ldr	r3, [r7, #4]
 800a034:	601a      	str	r2, [r3, #0]
{

}
 800a036:	687b      	ldr	r3, [r7, #4]
 800a038:	4618      	mov	r0, r3
 800a03a:	3708      	adds	r7, #8
 800a03c:	46bd      	mov	sp, r7
 800a03e:	bd80      	pop	{r7, pc}
 800a040:	0801f070 	.word	0x0801f070

0800a044 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800a044:	b580      	push	{r7, lr}
 800a046:	b082      	sub	sp, #8
 800a048:	af00      	add	r7, sp, #0
 800a04a:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800a04c:	687b      	ldr	r3, [r7, #4]
 800a04e:	4618      	mov	r0, r3
 800a050:	f7ff fd40 	bl	8009ad4 <_ZN15Screen1ViewBase11setupScreenEv>
}
 800a054:	bf00      	nop
 800a056:	3708      	adds	r7, #8
 800a058:	46bd      	mov	sp, r7
 800a05a:	bd80      	pop	{r7, pc}

0800a05c <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800a05c:	b580      	push	{r7, lr}
 800a05e:	b082      	sub	sp, #8
 800a060:	af00      	add	r7, sp, #0
 800a062:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800a064:	687b      	ldr	r3, [r7, #4]
 800a066:	4618      	mov	r0, r3
 800a068:	f7ff f928 	bl	80092bc <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800a06c:	bf00      	nop
 800a06e:	3708      	adds	r7, #8
 800a070:	46bd      	mov	sp, r7
 800a072:	bd80      	pop	{r7, pc}

0800a074 <_ZN8touchgfx15TouchControllerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~TouchController()
 800a074:	b480      	push	{r7}
 800a076:	b083      	sub	sp, #12
 800a078:	af00      	add	r7, sp, #0
 800a07a:	6078      	str	r0, [r7, #4]
    {
 800a07c:	4a04      	ldr	r2, [pc, #16]	; (800a090 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800a07e:	687b      	ldr	r3, [r7, #4]
 800a080:	601a      	str	r2, [r3, #0]
    }
 800a082:	687b      	ldr	r3, [r7, #4]
 800a084:	4618      	mov	r0, r3
 800a086:	370c      	adds	r7, #12
 800a088:	46bd      	mov	sp, r7
 800a08a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a08e:	4770      	bx	lr
 800a090:	0801f0bc 	.word	0x0801f0bc

0800a094 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800a094:	b580      	push	{r7, lr}
 800a096:	b082      	sub	sp, #8
 800a098:	af00      	add	r7, sp, #0
 800a09a:	6078      	str	r0, [r7, #4]
    }
 800a09c:	6878      	ldr	r0, [r7, #4]
 800a09e:	f7ff ffe9 	bl	800a074 <_ZN8touchgfx15TouchControllerD1Ev>
 800a0a2:	2104      	movs	r1, #4
 800a0a4:	6878      	ldr	r0, [r7, #4]
 800a0a6:	f011 fc1e 	bl	801b8e6 <_ZdlPvj>
 800a0aa:	687b      	ldr	r3, [r7, #4]
 800a0ac:	4618      	mov	r0, r3
 800a0ae:	3708      	adds	r7, #8
 800a0b0:	46bd      	mov	sp, r7
 800a0b2:	bd80      	pop	{r7, pc}

0800a0b4 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800a0b4:	b480      	push	{r7}
 800a0b6:	b083      	sub	sp, #12
 800a0b8:	af00      	add	r7, sp, #0
 800a0ba:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800a0bc:	bf00      	nop
 800a0be:	370c      	adds	r7, #12
 800a0c0:	46bd      	mov	sp, r7
 800a0c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0c6:	4770      	bx	lr

0800a0c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800a0c8:	b480      	push	{r7}
 800a0ca:	b085      	sub	sp, #20
 800a0cc:	af00      	add	r7, sp, #0
 800a0ce:	60f8      	str	r0, [r7, #12]
 800a0d0:	60b9      	str	r1, [r7, #8]
 800a0d2:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800a0d4:	2300      	movs	r3, #0
}
 800a0d6:	4618      	mov	r0, r3
 800a0d8:	3714      	adds	r7, #20
 800a0da:	46bd      	mov	sp, r7
 800a0dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0e0:	4770      	bx	lr
	...

0800a0e4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800a0e4:	b580      	push	{r7, lr}
 800a0e6:	b082      	sub	sp, #8
 800a0e8:	af00      	add	r7, sp, #0
 800a0ea:	6078      	str	r0, [r7, #4]
 800a0ec:	4a05      	ldr	r2, [pc, #20]	; (800a104 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800a0ee:	687b      	ldr	r3, [r7, #4]
 800a0f0:	601a      	str	r2, [r3, #0]
 800a0f2:	687b      	ldr	r3, [r7, #4]
 800a0f4:	4618      	mov	r0, r3
 800a0f6:	f7ff ffbd 	bl	800a074 <_ZN8touchgfx15TouchControllerD1Ev>
 800a0fa:	687b      	ldr	r3, [r7, #4]
 800a0fc:	4618      	mov	r0, r3
 800a0fe:	3708      	adds	r7, #8
 800a100:	46bd      	mov	sp, r7
 800a102:	bd80      	pop	{r7, pc}
 800a104:	0801f0a4 	.word	0x0801f0a4

0800a108 <_ZN20STM32TouchControllerD0Ev>:
 800a108:	b580      	push	{r7, lr}
 800a10a:	b082      	sub	sp, #8
 800a10c:	af00      	add	r7, sp, #0
 800a10e:	6078      	str	r0, [r7, #4]
 800a110:	6878      	ldr	r0, [r7, #4]
 800a112:	f7ff ffe7 	bl	800a0e4 <_ZN20STM32TouchControllerD1Ev>
 800a116:	2104      	movs	r1, #4
 800a118:	6878      	ldr	r0, [r7, #4]
 800a11a:	f011 fbe4 	bl	801b8e6 <_ZdlPvj>
 800a11e:	687b      	ldr	r3, [r7, #4]
 800a120:	4618      	mov	r0, r3
 800a122:	3708      	adds	r7, #8
 800a124:	46bd      	mov	sp, r7
 800a126:	bd80      	pop	{r7, pc}

0800a128 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800a128:	b480      	push	{r7}
 800a12a:	b083      	sub	sp, #12
 800a12c:	af00      	add	r7, sp, #0
 800a12e:	4603      	mov	r3, r0
 800a130:	71fb      	strb	r3, [r7, #7]

}
 800a132:	bf00      	nop
 800a134:	370c      	adds	r7, #12
 800a136:	46bd      	mov	sp, r7
 800a138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a13c:	4770      	bx	lr

0800a13e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800a13e:	b480      	push	{r7}
 800a140:	b083      	sub	sp, #12
 800a142:	af00      	add	r7, sp, #0
 800a144:	4603      	mov	r3, r0
 800a146:	71fb      	strb	r3, [r7, #7]

}
 800a148:	bf00      	nop
 800a14a:	370c      	adds	r7, #12
 800a14c:	46bd      	mov	sp, r7
 800a14e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a152:	4770      	bx	lr

0800a154 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800a154:	b480      	push	{r7}
 800a156:	b083      	sub	sp, #12
 800a158:	af00      	add	r7, sp, #0
 800a15a:	4603      	mov	r3, r0
 800a15c:	71fb      	strb	r3, [r7, #7]

}
 800a15e:	bf00      	nop
 800a160:	370c      	adds	r7, #12
 800a162:	46bd      	mov	sp, r7
 800a164:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a168:	4770      	bx	lr
	...

0800a16c <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800a16c:	b480      	push	{r7}
 800a16e:	b083      	sub	sp, #12
 800a170:	af00      	add	r7, sp, #0
 800a172:	6078      	str	r0, [r7, #4]
    {
 800a174:	4a04      	ldr	r2, [pc, #16]	; (800a188 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	601a      	str	r2, [r3, #0]
    }
 800a17a:	687b      	ldr	r3, [r7, #4]
 800a17c:	4618      	mov	r0, r3
 800a17e:	370c      	adds	r7, #12
 800a180:	46bd      	mov	sp, r7
 800a182:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a186:	4770      	bx	lr
 800a188:	0801f8e4 	.word	0x0801f8e4

0800a18c <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800a18c:	b580      	push	{r7, lr}
 800a18e:	b082      	sub	sp, #8
 800a190:	af00      	add	r7, sp, #0
 800a192:	6078      	str	r0, [r7, #4]
    }
 800a194:	6878      	ldr	r0, [r7, #4]
 800a196:	f7ff ffe9 	bl	800a16c <_ZN8touchgfx3HALD1Ev>
 800a19a:	2178      	movs	r1, #120	; 0x78
 800a19c:	6878      	ldr	r0, [r7, #4]
 800a19e:	f011 fba2 	bl	801b8e6 <_ZdlPvj>
 800a1a2:	687b      	ldr	r3, [r7, #4]
 800a1a4:	4618      	mov	r0, r3
 800a1a6:	3708      	adds	r7, #8
 800a1a8:	46bd      	mov	sp, r7
 800a1aa:	bd80      	pop	{r7, pc}

0800a1ac <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800a1ac:	b480      	push	{r7}
 800a1ae:	b083      	sub	sp, #12
 800a1b0:	af00      	add	r7, sp, #0
 800a1b2:	6078      	str	r0, [r7, #4]
 800a1b4:	460b      	mov	r3, r1
 800a1b6:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800a1b8:	687b      	ldr	r3, [r7, #4]
 800a1ba:	78fa      	ldrb	r2, [r7, #3]
 800a1bc:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800a1c0:	687b      	ldr	r3, [r7, #4]
 800a1c2:	2201      	movs	r2, #1
 800a1c4:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 800a1c8:	bf00      	nop
 800a1ca:	370c      	adds	r7, #12
 800a1cc:	46bd      	mov	sp, r7
 800a1ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1d2:	4770      	bx	lr

0800a1d4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *        As default, will return whatever blitcaps are reported by the associated DMA
     *        object.
     *
     * @return a bitmask of the supported blitcaps.
     */
    virtual BlitOperations getBlitCaps()
 800a1d4:	b580      	push	{r7, lr}
 800a1d6:	b082      	sub	sp, #8
 800a1d8:	af00      	add	r7, sp, #0
 800a1da:	6078      	str	r0, [r7, #4]
    {
        return dma.getBlitCaps();
 800a1dc:	687b      	ldr	r3, [r7, #4]
 800a1de:	685a      	ldr	r2, [r3, #4]
 800a1e0:	687b      	ldr	r3, [r7, #4]
 800a1e2:	685b      	ldr	r3, [r3, #4]
 800a1e4:	681b      	ldr	r3, [r3, #0]
 800a1e6:	681b      	ldr	r3, [r3, #0]
 800a1e8:	4610      	mov	r0, r2
 800a1ea:	4798      	blx	r3
 800a1ec:	4603      	mov	r3, r0
    }
 800a1ee:	4618      	mov	r0, r3
 800a1f0:	3708      	adds	r7, #8
 800a1f2:	46bd      	mov	sp, r7
 800a1f4:	bd80      	pop	{r7, pc}

0800a1f6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
     * @brief Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     *        Has to be called from within the LCD IRQ rutine when the Back Porch Exit is
     *        reached.
     */
    virtual void backPorchExited()
 800a1f6:	b580      	push	{r7, lr}
 800a1f8:	b082      	sub	sp, #8
 800a1fa:	af00      	add	r7, sp, #0
 800a1fc:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800a1fe:	6878      	ldr	r0, [r7, #4]
 800a200:	f002 fd8c 	bl	800cd1c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800a204:	687b      	ldr	r3, [r7, #4]
 800a206:	681b      	ldr	r3, [r3, #0]
 800a208:	3390      	adds	r3, #144	; 0x90
 800a20a:	681b      	ldr	r3, [r3, #0]
 800a20c:	6878      	ldr	r0, [r7, #4]
 800a20e:	4798      	blx	r3
    }
 800a210:	bf00      	nop
 800a212:	3708      	adds	r7, #8
 800a214:	46bd      	mov	sp, r7
 800a216:	bd80      	pop	{r7, pc}

0800a218 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800a218:	b480      	push	{r7}
 800a21a:	b083      	sub	sp, #12
 800a21c:	af00      	add	r7, sp, #0
 800a21e:	6078      	str	r0, [r7, #4]
 800a220:	6039      	str	r1, [r7, #0]
    {
        return false;
 800a222:	2300      	movs	r3, #0
    }
 800a224:	4618      	mov	r0, r3
 800a226:	370c      	adds	r7, #12
 800a228:	46bd      	mov	sp, r7
 800a22a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a22e:	4770      	bx	lr

0800a230 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
     * @param      useDoubleBuffering  (Optional) If true, reserve memory for an extra frame buffer.
     * @param      useAnimationStorage (Optional) If true, reserve memory for animation storage.
     *
     * @deprecated Use the setFramaBufferStartAddress with 'format' parameter instead of 'depth'
     */
    virtual void setFrameBufferStartAddress(void* adr, uint16_t depth = 16, bool useDoubleBuffering = true, bool useAnimationStorage = true)
 800a230:	b590      	push	{r4, r7, lr}
 800a232:	b08b      	sub	sp, #44	; 0x2c
 800a234:	af00      	add	r7, sp, #0
 800a236:	60f8      	str	r0, [r7, #12]
 800a238:	60b9      	str	r1, [r7, #8]
 800a23a:	4611      	mov	r1, r2
 800a23c:	461a      	mov	r2, r3
 800a23e:	460b      	mov	r3, r1
 800a240:	80fb      	strh	r3, [r7, #6]
 800a242:	4613      	mov	r3, r2
 800a244:	717b      	strb	r3, [r7, #5]
    {
        uint16_t stride = lcd().framebufferStride();
 800a246:	f7fe fa07 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800a24a:	4603      	mov	r3, r0
 800a24c:	681a      	ldr	r2, [r3, #0]
 800a24e:	3228      	adds	r2, #40	; 0x28
 800a250:	6812      	ldr	r2, [r2, #0]
 800a252:	4618      	mov	r0, r3
 800a254:	4790      	blx	r2
 800a256:	4603      	mov	r3, r0
 800a258:	837b      	strh	r3, [r7, #26]
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 800a25a:	8b7b      	ldrh	r3, [r7, #26]
 800a25c:	4a3d      	ldr	r2, [pc, #244]	; (800a354 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x124>)
 800a25e:	8812      	ldrh	r2, [r2, #0]
 800a260:	fb02 f303 	mul.w	r3, r2, r3
 800a264:	617b      	str	r3, [r7, #20]
        uint8_t* ptr = (uint8_t*)adr;
 800a266:	68bb      	ldr	r3, [r7, #8]
 800a268:	627b      	str	r3, [r7, #36]	; 0x24
        void* double_buf = 0;
 800a26a:	2300      	movs	r3, #0
 800a26c:	623b      	str	r3, [r7, #32]
        void* anim_store = 0;
 800a26e:	2300      	movs	r3, #0
 800a270:	61fb      	str	r3, [r7, #28]
        if (useDoubleBuffering)
 800a272:	797b      	ldrb	r3, [r7, #5]
 800a274:	2b00      	cmp	r3, #0
 800a276:	d005      	beq.n	800a284 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x54>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 800a278:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a27a:	697b      	ldr	r3, [r7, #20]
 800a27c:	4413      	add	r3, r2
 800a27e:	627b      	str	r3, [r7, #36]	; 0x24
            double_buf = (void*)ptr;
 800a280:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a282:	623b      	str	r3, [r7, #32]
        }
        if (useAnimationStorage)
 800a284:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 800a288:	2b00      	cmp	r3, #0
 800a28a:	d005      	beq.n	800a298 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x68>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800a28c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a28e:	697b      	ldr	r3, [r7, #20]
 800a290:	4413      	add	r3, r2
 800a292:	627b      	str	r3, [r7, #36]	; 0x24
            anim_store = (void*)ptr;
 800a294:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a296:	61fb      	str	r3, [r7, #28]
        }
        switch (depth)
 800a298:	88fb      	ldrh	r3, [r7, #6]
 800a29a:	3b01      	subs	r3, #1
 800a29c:	2b1f      	cmp	r3, #31
 800a29e:	d84d      	bhi.n	800a33c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x10c>
 800a2a0:	a201      	add	r2, pc, #4	; (adr r2, 800a2a8 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
 800a2a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a2a6:	bf00      	nop
 800a2a8:	0800a329 	.word	0x0800a329
 800a2ac:	0800a329 	.word	0x0800a329
 800a2b0:	0800a33d 	.word	0x0800a33d
 800a2b4:	0800a329 	.word	0x0800a329
 800a2b8:	0800a33d 	.word	0x0800a33d
 800a2bc:	0800a33d 	.word	0x0800a33d
 800a2c0:	0800a33d 	.word	0x0800a33d
 800a2c4:	0800a329 	.word	0x0800a329
 800a2c8:	0800a33d 	.word	0x0800a33d
 800a2cc:	0800a33d 	.word	0x0800a33d
 800a2d0:	0800a33d 	.word	0x0800a33d
 800a2d4:	0800a33d 	.word	0x0800a33d
 800a2d8:	0800a33d 	.word	0x0800a33d
 800a2dc:	0800a33d 	.word	0x0800a33d
 800a2e0:	0800a33d 	.word	0x0800a33d
 800a2e4:	0800a329 	.word	0x0800a329
 800a2e8:	0800a33d 	.word	0x0800a33d
 800a2ec:	0800a33d 	.word	0x0800a33d
 800a2f0:	0800a33d 	.word	0x0800a33d
 800a2f4:	0800a33d 	.word	0x0800a33d
 800a2f8:	0800a33d 	.word	0x0800a33d
 800a2fc:	0800a33d 	.word	0x0800a33d
 800a300:	0800a33d 	.word	0x0800a33d
 800a304:	0800a329 	.word	0x0800a329
 800a308:	0800a33d 	.word	0x0800a33d
 800a30c:	0800a33d 	.word	0x0800a33d
 800a310:	0800a33d 	.word	0x0800a33d
 800a314:	0800a33d 	.word	0x0800a33d
 800a318:	0800a33d 	.word	0x0800a33d
 800a31c:	0800a33d 	.word	0x0800a33d
 800a320:	0800a33d 	.word	0x0800a33d
 800a324:	0800a329 	.word	0x0800a329
        case 16:
        case 8:
        case 4:
        case 2:
        case 1:
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 800a328:	68fb      	ldr	r3, [r7, #12]
 800a32a:	681b      	ldr	r3, [r3, #0]
 800a32c:	3374      	adds	r3, #116	; 0x74
 800a32e:	681c      	ldr	r4, [r3, #0]
 800a330:	69fb      	ldr	r3, [r7, #28]
 800a332:	6a3a      	ldr	r2, [r7, #32]
 800a334:	68b9      	ldr	r1, [r7, #8]
 800a336:	68f8      	ldr	r0, [r7, #12]
 800a338:	47a0      	blx	r4
            break;
 800a33a:	e006      	b.n	800a34a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x11a>
        default:
            assert(0 && "Unsupported bit depth");
 800a33c:	4b06      	ldr	r3, [pc, #24]	; (800a358 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x128>)
 800a33e:	4a07      	ldr	r2, [pc, #28]	; (800a35c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x12c>)
 800a340:	f240 3125 	movw	r1, #805	; 0x325
 800a344:	4806      	ldr	r0, [pc, #24]	; (800a360 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x130>)
 800a346:	f011 fafd 	bl	801b944 <__assert_func>
            break;
        }
    }
 800a34a:	bf00      	nop
 800a34c:	372c      	adds	r7, #44	; 0x2c
 800a34e:	46bd      	mov	sp, r7
 800a350:	bd90      	pop	{r4, r7, pc}
 800a352:	bf00      	nop
 800a354:	200017a0 	.word	0x200017a0
 800a358:	0801eb48 	.word	0x0801eb48
 800a35c:	0801eb68 	.word	0x0801eb68
 800a360:	0801ebbc 	.word	0x0801ebbc

0800a364 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     *
     * @param [in] frameBuffer      Buffer for frame buffer data, must be non-null.
     * @param [in] doubleBuffer     If non-null, buffer for double buffer data. If null double buffering is disabled.
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage is disabled.
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800a364:	b580      	push	{r7, lr}
 800a366:	b084      	sub	sp, #16
 800a368:	af00      	add	r7, sp, #0
 800a36a:	60f8      	str	r0, [r7, #12]
 800a36c:	60b9      	str	r1, [r7, #8]
 800a36e:	607a      	str	r2, [r7, #4]
 800a370:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800a372:	68bb      	ldr	r3, [r7, #8]
 800a374:	2b00      	cmp	r3, #0
 800a376:	d106      	bne.n	800a386 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800a378:	4b11      	ldr	r3, [pc, #68]	; (800a3c0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800a37a:	4a12      	ldr	r2, [pc, #72]	; (800a3c4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800a37c:	f240 3137 	movw	r1, #823	; 0x337
 800a380:	4811      	ldr	r0, [pc, #68]	; (800a3c8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
 800a382:	f011 fadf 	bl	801b944 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800a386:	68fb      	ldr	r3, [r7, #12]
 800a388:	68ba      	ldr	r2, [r7, #8]
 800a38a:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800a38c:	68fb      	ldr	r3, [r7, #12]
 800a38e:	687a      	ldr	r2, [r7, #4]
 800a390:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800a392:	68fb      	ldr	r3, [r7, #12]
 800a394:	683a      	ldr	r2, [r7, #0]
 800a396:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800a398:	687b      	ldr	r3, [r7, #4]
 800a39a:	2b00      	cmp	r3, #0
 800a39c:	bf14      	ite	ne
 800a39e:	2301      	movne	r3, #1
 800a3a0:	2300      	moveq	r3, #0
 800a3a2:	b2da      	uxtb	r2, r3
 800a3a4:	4b09      	ldr	r3, [pc, #36]	; (800a3cc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
 800a3a6:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800a3a8:	683b      	ldr	r3, [r7, #0]
 800a3aa:	2b00      	cmp	r3, #0
 800a3ac:	bf14      	ite	ne
 800a3ae:	2301      	movne	r3, #1
 800a3b0:	2300      	moveq	r3, #0
 800a3b2:	b2da      	uxtb	r2, r3
 800a3b4:	4b06      	ldr	r3, [pc, #24]	; (800a3d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
 800a3b6:	701a      	strb	r2, [r3, #0]
    }
 800a3b8:	bf00      	nop
 800a3ba:	3710      	adds	r7, #16
 800a3bc:	46bd      	mov	sp, r7
 800a3be:	bd80      	pop	{r7, pc}
 800a3c0:	0801ec00 	.word	0x0801ec00
 800a3c4:	0801ec38 	.word	0x0801ec38
 800a3c8:	0801ebbc 	.word	0x0801ebbc
 800a3cc:	200017a2 	.word	0x200017a2
 800a3d0:	200017a3 	.word	0x200017a3

0800a3d4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param ms Number of milliseconds to wait.
     *
     * @see void registerTaskDelayFunction(void (*delayF)(uint16_t))
     */
    virtual void taskDelay(uint16_t ms)
 800a3d4:	b580      	push	{r7, lr}
 800a3d6:	b082      	sub	sp, #8
 800a3d8:	af00      	add	r7, sp, #0
 800a3da:	6078      	str	r0, [r7, #4]
 800a3dc:	460b      	mov	r3, r1
 800a3de:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800a3e0:	687b      	ldr	r3, [r7, #4]
 800a3e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a3e4:	2b00      	cmp	r3, #0
 800a3e6:	d004      	beq.n	800a3f2 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800a3e8:	687b      	ldr	r3, [r7, #4]
 800a3ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a3ec:	887a      	ldrh	r2, [r7, #2]
 800a3ee:	4610      	mov	r0, r2
 800a3f0:	4798      	blx	r3
        }
    }
 800a3f2:	bf00      	nop
 800a3f4:	3708      	adds	r7, #8
 800a3f6:	46bd      	mov	sp, r7
 800a3f8:	bd80      	pop	{r7, pc}

0800a3fa <_ZN8touchgfx3HAL10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800a3fa:	b580      	push	{r7, lr}
 800a3fc:	b082      	sub	sp, #8
 800a3fe:	af00      	add	r7, sp, #0
 800a400:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800a402:	687b      	ldr	r3, [r7, #4]
 800a404:	685a      	ldr	r2, [r3, #4]
 800a406:	687b      	ldr	r3, [r7, #4]
 800a408:	685b      	ldr	r3, [r3, #4]
 800a40a:	681b      	ldr	r3, [r3, #0]
 800a40c:	3318      	adds	r3, #24
 800a40e:	681b      	ldr	r3, [r3, #0]
 800a410:	4610      	mov	r0, r2
 800a412:	4798      	blx	r3
 800a414:	4603      	mov	r3, r0
    }
 800a416:	4618      	mov	r0, r3
 800a418:	3708      	adds	r7, #8
 800a41a:	46bd      	mov	sp, r7
 800a41c:	bd80      	pop	{r7, pc}
	...

0800a420 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
     *
     * @brief Perform the actual display orientation change.
     *
     *        Perform the actual display orientation change.
     */
    virtual void performDisplayOrientationChange()
 800a420:	b480      	push	{r7}
 800a422:	b083      	sub	sp, #12
 800a424:	af00      	add	r7, sp, #0
 800a426:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 800a42e:	687b      	ldr	r3, [r7, #4]
 800a430:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800a434:	429a      	cmp	r2, r3
 800a436:	d017      	beq.n	800a468 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
 800a438:	4b1a      	ldr	r3, [pc, #104]	; (800a4a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a43a:	781b      	ldrb	r3, [r3, #0]
 800a43c:	2b00      	cmp	r3, #0
 800a43e:	d12a      	bne.n	800a496 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800a440:	4b19      	ldr	r3, [pc, #100]	; (800a4a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a442:	881a      	ldrh	r2, [r3, #0]
 800a444:	4b19      	ldr	r3, [pc, #100]	; (800a4ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a446:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800a448:	4b19      	ldr	r3, [pc, #100]	; (800a4b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a44a:	881a      	ldrh	r2, [r3, #0]
 800a44c:	4b19      	ldr	r3, [pc, #100]	; (800a4b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a44e:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800a450:	4b16      	ldr	r3, [pc, #88]	; (800a4ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a452:	881a      	ldrh	r2, [r3, #0]
 800a454:	4b16      	ldr	r3, [pc, #88]	; (800a4b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a456:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800a458:	4b16      	ldr	r3, [pc, #88]	; (800a4b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a45a:	881a      	ldrh	r2, [r3, #0]
 800a45c:	4b12      	ldr	r3, [pc, #72]	; (800a4a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a45e:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 800a460:	4b10      	ldr	r3, [pc, #64]	; (800a4a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a462:	2201      	movs	r2, #1
 800a464:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800a466:	e016      	b.n	800a496 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
 800a468:	4b0e      	ldr	r3, [pc, #56]	; (800a4a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a46a:	781b      	ldrb	r3, [r3, #0]
 800a46c:	2b00      	cmp	r3, #0
 800a46e:	d012      	beq.n	800a496 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800a470:	4b0f      	ldr	r3, [pc, #60]	; (800a4b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a472:	881a      	ldrh	r2, [r3, #0]
 800a474:	4b0d      	ldr	r3, [pc, #52]	; (800a4ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a476:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 800a478:	4b0b      	ldr	r3, [pc, #44]	; (800a4a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a47a:	881a      	ldrh	r2, [r3, #0]
 800a47c:	4b0d      	ldr	r3, [pc, #52]	; (800a4b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a47e:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800a480:	4b0c      	ldr	r3, [pc, #48]	; (800a4b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a482:	881a      	ldrh	r2, [r3, #0]
 800a484:	4b0a      	ldr	r3, [pc, #40]	; (800a4b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a486:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800a488:	4b08      	ldr	r3, [pc, #32]	; (800a4ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a48a:	881a      	ldrh	r2, [r3, #0]
 800a48c:	4b06      	ldr	r3, [pc, #24]	; (800a4a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a48e:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 800a490:	4b04      	ldr	r3, [pc, #16]	; (800a4a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a492:	2200      	movs	r2, #0
 800a494:	701a      	strb	r2, [r3, #0]
    }
 800a496:	bf00      	nop
 800a498:	370c      	adds	r7, #12
 800a49a:	46bd      	mov	sp, r7
 800a49c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4a0:	4770      	bx	lr
 800a4a2:	bf00      	nop
 800a4a4:	2000179c 	.word	0x2000179c
 800a4a8:	20001798 	.word	0x20001798
 800a4ac:	2000179e 	.word	0x2000179e
 800a4b0:	2000179a 	.word	0x2000179a
 800a4b4:	200017a0 	.word	0x200017a0

0800a4b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800a4b8:	b580      	push	{r7, lr}
 800a4ba:	b082      	sub	sp, #8
 800a4bc:	af00      	add	r7, sp, #0
 800a4be:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800a4c0:	687b      	ldr	r3, [r7, #4]
 800a4c2:	4618      	mov	r0, r3
 800a4c4:	f001 feac 	bl	800c220 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800a4c8:	bf00      	nop
 800a4ca:	3708      	adds	r7, #8
 800a4cc:	46bd      	mov	sp, r7
 800a4ce:	bd80      	pop	{r7, pc}

0800a4d0 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800a4d0:	b580      	push	{r7, lr}
 800a4d2:	b082      	sub	sp, #8
 800a4d4:	af00      	add	r7, sp, #0
 800a4d6:	6078      	str	r0, [r7, #4]
 800a4d8:	4a05      	ldr	r2, [pc, #20]	; (800a4f0 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800a4da:	687b      	ldr	r3, [r7, #4]
 800a4dc:	601a      	str	r2, [r3, #0]
 800a4de:	687b      	ldr	r3, [r7, #4]
 800a4e0:	4618      	mov	r0, r3
 800a4e2:	f7ff fe43 	bl	800a16c <_ZN8touchgfx3HALD1Ev>
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	4618      	mov	r0, r3
 800a4ea:	3708      	adds	r7, #8
 800a4ec:	46bd      	mov	sp, r7
 800a4ee:	bd80      	pop	{r7, pc}
 800a4f0:	0801f2d0 	.word	0x0801f2d0

0800a4f4 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800a4f4:	b580      	push	{r7, lr}
 800a4f6:	b082      	sub	sp, #8
 800a4f8:	af00      	add	r7, sp, #0
 800a4fa:	6078      	str	r0, [r7, #4]
 800a4fc:	6878      	ldr	r0, [r7, #4]
 800a4fe:	f7ff ffe7 	bl	800a4d0 <_ZN20TouchGFXGeneratedHALD1Ev>
 800a502:	2178      	movs	r1, #120	; 0x78
 800a504:	6878      	ldr	r0, [r7, #4]
 800a506:	f011 f9ee 	bl	801b8e6 <_ZdlPvj>
 800a50a:	687b      	ldr	r3, [r7, #4]
 800a50c:	4618      	mov	r0, r3
 800a50e:	3708      	adds	r7, #8
 800a510:	46bd      	mov	sp, r7
 800a512:	bd80      	pop	{r7, pc}

0800a514 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800a514:	b580      	push	{r7, lr}
 800a516:	b082      	sub	sp, #8
 800a518:	af00      	add	r7, sp, #0
 800a51a:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800a51c:	687b      	ldr	r3, [r7, #4]
 800a51e:	4618      	mov	r0, r3
 800a520:	f7ff ffca 	bl	800a4b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800a524:	bf00      	nop
 800a526:	3708      	adds	r7, #8
 800a528:	46bd      	mov	sp, r7
 800a52a:	bd80      	pop	{r7, pc}

0800a52c <_ZN11TouchGFXHAL10initializeEv>:
#include "stm32f4xx.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800a52c:	b580      	push	{r7, lr}
 800a52e:	b082      	sub	sp, #8
 800a530:	af00      	add	r7, sp, #0
 800a532:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800a534:	687b      	ldr	r3, [r7, #4]
 800a536:	4618      	mov	r0, r3
 800a538:	f001 faea 	bl	800bb10 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800a53c:	bf00      	nop
 800a53e:	3708      	adds	r7, #8
 800a540:	46bd      	mov	sp, r7
 800a542:	bd80      	pop	{r7, pc}

0800a544 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800a544:	b580      	push	{r7, lr}
 800a546:	b082      	sub	sp, #8
 800a548:	af00      	add	r7, sp, #0
 800a54a:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800a54c:	687b      	ldr	r3, [r7, #4]
 800a54e:	4618      	mov	r0, r3
 800a550:	f001 fb6a 	bl	800bc28 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800a554:	4603      	mov	r3, r0
}
 800a556:	4618      	mov	r0, r3
 800a558:	3708      	adds	r7, #8
 800a55a:	46bd      	mov	sp, r7
 800a55c:	bd80      	pop	{r7, pc}

0800a55e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800a55e:	b580      	push	{r7, lr}
 800a560:	b082      	sub	sp, #8
 800a562:	af00      	add	r7, sp, #0
 800a564:	6078      	str	r0, [r7, #4]
 800a566:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800a568:	687b      	ldr	r3, [r7, #4]
 800a56a:	6839      	ldr	r1, [r7, #0]
 800a56c:	4618      	mov	r0, r3
 800a56e:	f001 fb69 	bl	800bc44 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800a572:	bf00      	nop
 800a574:	3708      	adds	r7, #8
 800a576:	46bd      	mov	sp, r7
 800a578:	bd80      	pop	{r7, pc}

0800a57a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800a57a:	b580      	push	{r7, lr}
 800a57c:	b082      	sub	sp, #8
 800a57e:	af00      	add	r7, sp, #0
 800a580:	6078      	str	r0, [r7, #4]
 800a582:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800a584:	687b      	ldr	r3, [r7, #4]
 800a586:	6839      	ldr	r1, [r7, #0]
 800a588:	4618      	mov	r0, r3
 800a58a:	f001 fb71 	bl	800bc70 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800a58e:	bf00      	nop
 800a590:	3708      	adds	r7, #8
 800a592:	46bd      	mov	sp, r7
 800a594:	bd80      	pop	{r7, pc}

0800a596 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800a596:	b580      	push	{r7, lr}
 800a598:	b082      	sub	sp, #8
 800a59a:	af00      	add	r7, sp, #0
 800a59c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800a59e:	687b      	ldr	r3, [r7, #4]
 800a5a0:	4618      	mov	r0, r3
 800a5a2:	f001 fae7 	bl	800bb74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800a5a6:	bf00      	nop
 800a5a8:	3708      	adds	r7, #8
 800a5aa:	46bd      	mov	sp, r7
 800a5ac:	bd80      	pop	{r7, pc}

0800a5ae <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800a5ae:	b580      	push	{r7, lr}
 800a5b0:	b082      	sub	sp, #8
 800a5b2:	af00      	add	r7, sp, #0
 800a5b4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800a5b6:	687b      	ldr	r3, [r7, #4]
 800a5b8:	4618      	mov	r0, r3
 800a5ba:	f001 faeb 	bl	800bb94 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800a5be:	bf00      	nop
 800a5c0:	3708      	adds	r7, #8
 800a5c2:	46bd      	mov	sp, r7
 800a5c4:	bd80      	pop	{r7, pc}

0800a5c6 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800a5c6:	b580      	push	{r7, lr}
 800a5c8:	b082      	sub	sp, #8
 800a5ca:	af00      	add	r7, sp, #0
 800a5cc:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800a5ce:	687b      	ldr	r3, [r7, #4]
 800a5d0:	4618      	mov	r0, r3
 800a5d2:	f001 faed 	bl	800bbb0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800a5d6:	bf00      	nop
 800a5d8:	3708      	adds	r7, #8
 800a5da:	46bd      	mov	sp, r7
 800a5dc:	bd80      	pop	{r7, pc}

0800a5de <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800a5de:	b580      	push	{r7, lr}
 800a5e0:	b082      	sub	sp, #8
 800a5e2:	af00      	add	r7, sp, #0
 800a5e4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800a5e6:	687b      	ldr	r3, [r7, #4]
 800a5e8:	4618      	mov	r0, r3
 800a5ea:	f001 faef 	bl	800bbcc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800a5ee:	bf00      	nop
 800a5f0:	3708      	adds	r7, #8
 800a5f2:	46bd      	mov	sp, r7
 800a5f4:	bd80      	pop	{r7, pc}
	...

0800a5f8 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800a5f8:	b580      	push	{r7, lr}
 800a5fa:	b082      	sub	sp, #8
 800a5fc:	af00      	add	r7, sp, #0
 800a5fe:	6078      	str	r0, [r7, #4]
 800a600:	4a05      	ldr	r2, [pc, #20]	; (800a618 <_ZN11TouchGFXHALD1Ev+0x20>)
 800a602:	687b      	ldr	r3, [r7, #4]
 800a604:	601a      	str	r2, [r3, #0]
 800a606:	687b      	ldr	r3, [r7, #4]
 800a608:	4618      	mov	r0, r3
 800a60a:	f7ff ff61 	bl	800a4d0 <_ZN20TouchGFXGeneratedHALD1Ev>
 800a60e:	687b      	ldr	r3, [r7, #4]
 800a610:	4618      	mov	r0, r3
 800a612:	3708      	adds	r7, #8
 800a614:	46bd      	mov	sp, r7
 800a616:	bd80      	pop	{r7, pc}
 800a618:	0801f0d4 	.word	0x0801f0d4

0800a61c <_ZN11TouchGFXHALD0Ev>:
 800a61c:	b580      	push	{r7, lr}
 800a61e:	b082      	sub	sp, #8
 800a620:	af00      	add	r7, sp, #0
 800a622:	6078      	str	r0, [r7, #4]
 800a624:	6878      	ldr	r0, [r7, #4]
 800a626:	f7ff ffe7 	bl	800a5f8 <_ZN11TouchGFXHALD1Ev>
 800a62a:	2178      	movs	r1, #120	; 0x78
 800a62c:	6878      	ldr	r0, [r7, #4]
 800a62e:	f011 f95a 	bl	801b8e6 <_ZdlPvj>
 800a632:	687b      	ldr	r3, [r7, #4]
 800a634:	4618      	mov	r0, r3
 800a636:	3708      	adds	r7, #8
 800a638:	46bd      	mov	sp, r7
 800a63a:	bd80      	pop	{r7, pc}

0800a63c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800a63c:	b480      	push	{r7}
 800a63e:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800a640:	4b05      	ldr	r3, [pc, #20]	; (800a658 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800a642:	2200      	movs	r2, #0
 800a644:	601a      	str	r2, [r3, #0]
  vsync_sem = 0;
 800a646:	4b05      	ldr	r3, [pc, #20]	; (800a65c <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800a648:	2200      	movs	r2, #0
 800a64a:	601a      	str	r2, [r3, #0]
}
 800a64c:	bf00      	nop
 800a64e:	46bd      	mov	sp, r7
 800a650:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a654:	4770      	bx	lr
 800a656:	bf00      	nop
 800a658:	200006c0 	.word	0x200006c0
 800a65c:	200006c4 	.word	0x200006c4

0800a660 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800a660:	b480      	push	{r7}
 800a662:	af00      	add	r7, sp, #0
  while(fb_sem);
 800a664:	4b08      	ldr	r3, [pc, #32]	; (800a688 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a666:	681b      	ldr	r3, [r3, #0]
 800a668:	2b00      	cmp	r3, #0
 800a66a:	bf14      	ite	ne
 800a66c:	2301      	movne	r3, #1
 800a66e:	2300      	moveq	r3, #0
 800a670:	b2db      	uxtb	r3, r3
 800a672:	2b00      	cmp	r3, #0
 800a674:	d000      	beq.n	800a678 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>
 800a676:	e7f5      	b.n	800a664 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x4>
  fb_sem = 1;
 800a678:	4b03      	ldr	r3, [pc, #12]	; (800a688 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a67a:	2201      	movs	r2, #1
 800a67c:	601a      	str	r2, [r3, #0]
}
 800a67e:	bf00      	nop
 800a680:	46bd      	mov	sp, r7
 800a682:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a686:	4770      	bx	lr
 800a688:	200006c0 	.word	0x200006c0

0800a68c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800a68c:	b480      	push	{r7}
 800a68e:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800a690:	4b03      	ldr	r3, [pc, #12]	; (800a6a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800a692:	2200      	movs	r2, #0
 800a694:	601a      	str	r2, [r3, #0]
}
 800a696:	bf00      	nop
 800a698:	46bd      	mov	sp, r7
 800a69a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a69e:	4770      	bx	lr
 800a6a0:	200006c0 	.word	0x200006c0

0800a6a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800a6a4:	b480      	push	{r7}
 800a6a6:	af00      	add	r7, sp, #0
  fb_sem = 1;
 800a6a8:	4b03      	ldr	r3, [pc, #12]	; (800a6b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800a6aa:	2201      	movs	r2, #1
 800a6ac:	601a      	str	r2, [r3, #0]
}
 800a6ae:	bf00      	nop
 800a6b0:	46bd      	mov	sp, r7
 800a6b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6b6:	4770      	bx	lr
 800a6b8:	200006c0 	.word	0x200006c0

0800a6bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800a6bc:	b480      	push	{r7}
 800a6be:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800a6c0:	4b03      	ldr	r3, [pc, #12]	; (800a6d0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800a6c2:	2200      	movs	r2, #0
 800a6c4:	601a      	str	r2, [r3, #0]
}
 800a6c6:	bf00      	nop
 800a6c8:	46bd      	mov	sp, r7
 800a6ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6ce:	4770      	bx	lr
 800a6d0:	200006c0 	.word	0x200006c0

0800a6d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800a6d4:	b480      	push	{r7}
 800a6d6:	af00      	add	r7, sp, #0
  vsync_sem = 1;
 800a6d8:	4b03      	ldr	r3, [pc, #12]	; (800a6e8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800a6da:	2201      	movs	r2, #1
 800a6dc:	601a      	str	r2, [r3, #0]
}
 800a6de:	bf00      	nop
 800a6e0:	46bd      	mov	sp, r7
 800a6e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6e6:	4770      	bx	lr
 800a6e8:	200006c4 	.word	0x200006c4

0800a6ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800a6ec:	b580      	push	{r7, lr}
 800a6ee:	af00      	add	r7, sp, #0
  if(vsync_sem)
 800a6f0:	4b0a      	ldr	r3, [pc, #40]	; (800a71c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a6f2:	681b      	ldr	r3, [r3, #0]
 800a6f4:	2b00      	cmp	r3, #0
 800a6f6:	bf14      	ite	ne
 800a6f8:	2301      	movne	r3, #1
 800a6fa:	2300      	moveq	r3, #0
 800a6fc:	b2db      	uxtb	r3, r3
 800a6fe:	2b00      	cmp	r3, #0
 800a700:	d00a      	beq.n	800a718 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
  {
    vsync_sem = 0;
 800a702:	4b06      	ldr	r3, [pc, #24]	; (800a71c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a704:	2200      	movs	r2, #0
 800a706:	601a      	str	r2, [r3, #0]
    HAL::getInstance()->backPorchExited();
 800a708:	f7fd ff9a 	bl	8008640 <_ZN8touchgfx3HAL11getInstanceEv>
 800a70c:	4603      	mov	r3, r0
 800a70e:	681a      	ldr	r2, [r3, #0]
 800a710:	3258      	adds	r2, #88	; 0x58
 800a712:	6812      	ldr	r2, [r2, #0]
 800a714:	4618      	mov	r0, r3
 800a716:	4790      	blx	r2
  }
}
 800a718:	bf00      	nop
 800a71a:	bd80      	pop	{r7, pc}
 800a71c:	200006c4 	.word	0x200006c4

0800a720 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 800a720:	b580      	push	{r7, lr}
 800a722:	b082      	sub	sp, #8
 800a724:	af00      	add	r7, sp, #0
 800a726:	4603      	mov	r3, r0
 800a728:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 800a72a:	88fb      	ldrh	r3, [r7, #6]
 800a72c:	4618      	mov	r0, r3
 800a72e:	f7f8 f9d7 	bl	8002ae0 <HAL_Delay>
}
 800a732:	bf00      	nop
 800a734:	3708      	adds	r7, #8
 800a736:	46bd      	mov	sp, r7
 800a738:	bd80      	pop	{r7, pc}
	...

0800a73c <__NVIC_EnableIRQ>:
{
 800a73c:	b480      	push	{r7}
 800a73e:	b083      	sub	sp, #12
 800a740:	af00      	add	r7, sp, #0
 800a742:	4603      	mov	r3, r0
 800a744:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a746:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a74a:	2b00      	cmp	r3, #0
 800a74c:	db0b      	blt.n	800a766 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a74e:	79fb      	ldrb	r3, [r7, #7]
 800a750:	f003 021f 	and.w	r2, r3, #31
 800a754:	4907      	ldr	r1, [pc, #28]	; (800a774 <__NVIC_EnableIRQ+0x38>)
 800a756:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a75a:	095b      	lsrs	r3, r3, #5
 800a75c:	2001      	movs	r0, #1
 800a75e:	fa00 f202 	lsl.w	r2, r0, r2
 800a762:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800a766:	bf00      	nop
 800a768:	370c      	adds	r7, #12
 800a76a:	46bd      	mov	sp, r7
 800a76c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a770:	4770      	bx	lr
 800a772:	bf00      	nop
 800a774:	e000e100 	.word	0xe000e100

0800a778 <__NVIC_DisableIRQ>:
{
 800a778:	b480      	push	{r7}
 800a77a:	b083      	sub	sp, #12
 800a77c:	af00      	add	r7, sp, #0
 800a77e:	4603      	mov	r3, r0
 800a780:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a782:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a786:	2b00      	cmp	r3, #0
 800a788:	db12      	blt.n	800a7b0 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a78a:	79fb      	ldrb	r3, [r7, #7]
 800a78c:	f003 021f 	and.w	r2, r3, #31
 800a790:	490a      	ldr	r1, [pc, #40]	; (800a7bc <__NVIC_DisableIRQ+0x44>)
 800a792:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a796:	095b      	lsrs	r3, r3, #5
 800a798:	2001      	movs	r0, #1
 800a79a:	fa00 f202 	lsl.w	r2, r0, r2
 800a79e:	3320      	adds	r3, #32
 800a7a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800a7a4:	f3bf 8f4f 	dsb	sy
}
 800a7a8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800a7aa:	f3bf 8f6f 	isb	sy
}
 800a7ae:	bf00      	nop
}
 800a7b0:	bf00      	nop
 800a7b2:	370c      	adds	r7, #12
 800a7b4:	46bd      	mov	sp, r7
 800a7b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7ba:	4770      	bx	lr
 800a7bc:	e000e100 	.word	0xe000e100

0800a7c0 <_ZN8touchgfx9colortypeC1Ev>:
    colortype() : color(0) {}
 800a7c0:	b480      	push	{r7}
 800a7c2:	b083      	sub	sp, #12
 800a7c4:	af00      	add	r7, sp, #0
 800a7c6:	6078      	str	r0, [r7, #4]
 800a7c8:	687b      	ldr	r3, [r7, #4]
 800a7ca:	2200      	movs	r2, #0
 800a7cc:	601a      	str	r2, [r3, #0]
 800a7ce:	687b      	ldr	r3, [r7, #4]
 800a7d0:	4618      	mov	r0, r3
 800a7d2:	370c      	adds	r7, #12
 800a7d4:	46bd      	mov	sp, r7
 800a7d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7da:	4770      	bx	lr

0800a7dc <_ZNK8touchgfx9colortype10getColor32Ev>:
    inline uint32_t getColor32() const
 800a7dc:	b480      	push	{r7}
 800a7de:	b083      	sub	sp, #12
 800a7e0:	af00      	add	r7, sp, #0
 800a7e2:	6078      	str	r0, [r7, #4]
        return color;
 800a7e4:	687b      	ldr	r3, [r7, #4]
 800a7e6:	681b      	ldr	r3, [r3, #0]
    }
 800a7e8:	4618      	mov	r0, r3
 800a7ea:	370c      	adds	r7, #12
 800a7ec:	46bd      	mov	sp, r7
 800a7ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7f2:	4770      	bx	lr

0800a7f4 <_ZNK8touchgfx9colortypecvtEv>:
    operator uint16_t() const
 800a7f4:	b480      	push	{r7}
 800a7f6:	b083      	sub	sp, #12
 800a7f8:	af00      	add	r7, sp, #0
 800a7fa:	6078      	str	r0, [r7, #4]
        return (uint16_t)color;
 800a7fc:	687b      	ldr	r3, [r7, #4]
 800a7fe:	681b      	ldr	r3, [r3, #0]
 800a800:	b29b      	uxth	r3, r3
    }
 800a802:	4618      	mov	r0, r3
 800a804:	370c      	adds	r7, #12
 800a806:	46bd      	mov	sp, r7
 800a808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a80c:	4770      	bx	lr
	...

0800a810 <_ZN8touchgfx9DMA_QueueD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Queue()
 800a810:	b480      	push	{r7}
 800a812:	b083      	sub	sp, #12
 800a814:	af00      	add	r7, sp, #0
 800a816:	6078      	str	r0, [r7, #4]
    {
 800a818:	4a04      	ldr	r2, [pc, #16]	; (800a82c <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800a81a:	687b      	ldr	r3, [r7, #4]
 800a81c:	601a      	str	r2, [r3, #0]
    }
 800a81e:	687b      	ldr	r3, [r7, #4]
 800a820:	4618      	mov	r0, r3
 800a822:	370c      	adds	r7, #12
 800a824:	46bd      	mov	sp, r7
 800a826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a82a:	4770      	bx	lr
 800a82c:	0801f1d8 	.word	0x0801f1d8

0800a830 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800a830:	b580      	push	{r7, lr}
 800a832:	b082      	sub	sp, #8
 800a834:	af00      	add	r7, sp, #0
 800a836:	6078      	str	r0, [r7, #4]
    }
 800a838:	6878      	ldr	r0, [r7, #4]
 800a83a:	f7ff ffe9 	bl	800a810 <_ZN8touchgfx9DMA_QueueD1Ev>
 800a83e:	2104      	movs	r1, #4
 800a840:	6878      	ldr	r0, [r7, #4]
 800a842:	f011 f850 	bl	801b8e6 <_ZdlPvj>
 800a846:	687b      	ldr	r3, [r7, #4]
 800a848:	4618      	mov	r0, r3
 800a84a:	3708      	adds	r7, #8
 800a84c:	46bd      	mov	sp, r7
 800a84e:	bd80      	pop	{r7, pc}

0800a850 <_ZN8touchgfx13DMA_Interface5flushEv>:
     *
     * @brief This function blocks until all DMA transfers in the queue have been completed.
     *
     *        This function blocks until all DMA transfers in the queue have been completed.
     */
    virtual void flush()
 800a850:	b580      	push	{r7, lr}
 800a852:	b082      	sub	sp, #8
 800a854:	af00      	add	r7, sp, #0
 800a856:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800a858:	687b      	ldr	r3, [r7, #4]
 800a85a:	681b      	ldr	r3, [r3, #0]
 800a85c:	3344      	adds	r3, #68	; 0x44
 800a85e:	681b      	ldr	r3, [r3, #0]
 800a860:	6878      	ldr	r0, [r7, #4]
 800a862:	4798      	blx	r3
    }
 800a864:	bf00      	nop
 800a866:	3708      	adds	r7, #8
 800a868:	46bd      	mov	sp, r7
 800a86a:	bd80      	pop	{r7, pc}

0800a86c <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
 800a86c:	b480      	push	{r7}
 800a86e:	b083      	sub	sp, #12
 800a870:	af00      	add	r7, sp, #0
 800a872:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800a874:	2300      	movs	r3, #0
    }
 800a876:	4618      	mov	r0, r3
 800a878:	370c      	adds	r7, #12
 800a87a:	46bd      	mov	sp, r7
 800a87c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a880:	4770      	bx	lr
	...

0800a884 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Interface()
 800a884:	b480      	push	{r7}
 800a886:	b083      	sub	sp, #12
 800a888:	af00      	add	r7, sp, #0
 800a88a:	6078      	str	r0, [r7, #4]
    {
 800a88c:	4a04      	ldr	r2, [pc, #16]	; (800a8a0 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800a88e:	687b      	ldr	r3, [r7, #4]
 800a890:	601a      	str	r2, [r3, #0]
    }
 800a892:	687b      	ldr	r3, [r7, #4]
 800a894:	4618      	mov	r0, r3
 800a896:	370c      	adds	r7, #12
 800a898:	46bd      	mov	sp, r7
 800a89a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a89e:	4770      	bx	lr
 800a8a0:	0801fd28 	.word	0x0801fd28

0800a8a4 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800a8a4:	b580      	push	{r7, lr}
 800a8a6:	b082      	sub	sp, #8
 800a8a8:	af00      	add	r7, sp, #0
 800a8aa:	6078      	str	r0, [r7, #4]
    }
 800a8ac:	6878      	ldr	r0, [r7, #4]
 800a8ae:	f7ff ffe9 	bl	800a884 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800a8b2:	210c      	movs	r1, #12
 800a8b4:	6878      	ldr	r0, [r7, #4]
 800a8b6:	f011 f816 	bl	801b8e6 <_ZdlPvj>
 800a8ba:	687b      	ldr	r3, [r7, #4]
 800a8bc:	4618      	mov	r0, r3
 800a8be:	3708      	adds	r7, #8
 800a8c0:	46bd      	mov	sp, r7
 800a8c2:	bd80      	pop	{r7, pc}

0800a8c4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
     *
     *        Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800a8c4:	b480      	push	{r7}
 800a8c6:	b083      	sub	sp, #12
 800a8c8:	af00      	add	r7, sp, #0
 800a8ca:	6078      	str	r0, [r7, #4]
 800a8cc:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800a8ce:	4a09      	ldr	r2, [pc, #36]	; (800a8f4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800a8d0:	687b      	ldr	r3, [r7, #4]
 800a8d2:	601a      	str	r2, [r3, #0]
 800a8d4:	687b      	ldr	r3, [r7, #4]
 800a8d6:	683a      	ldr	r2, [r7, #0]
 800a8d8:	605a      	str	r2, [r3, #4]
 800a8da:	687b      	ldr	r3, [r7, #4]
 800a8dc:	2200      	movs	r2, #0
 800a8de:	721a      	strb	r2, [r3, #8]
 800a8e0:	687b      	ldr	r3, [r7, #4]
 800a8e2:	2200      	movs	r2, #0
 800a8e4:	725a      	strb	r2, [r3, #9]
    {
    }
 800a8e6:	687b      	ldr	r3, [r7, #4]
 800a8e8:	4618      	mov	r0, r3
 800a8ea:	370c      	adds	r7, #12
 800a8ec:	46bd      	mov	sp, r7
 800a8ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8f2:	4770      	bx	lr
 800a8f4:	0801fd28 	.word	0x0801fd28

0800a8f8 <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800a8f8:	b580      	push	{r7, lr}
 800a8fa:	b082      	sub	sp, #8
 800a8fc:	af00      	add	r7, sp, #0
 800a8fe:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800a900:	687b      	ldr	r3, [r7, #4]
 800a902:	685a      	ldr	r2, [r3, #4]
 800a904:	687b      	ldr	r3, [r7, #4]
 800a906:	685b      	ldr	r3, [r3, #4]
 800a908:	681b      	ldr	r3, [r3, #0]
 800a90a:	3314      	adds	r3, #20
 800a90c:	681b      	ldr	r3, [r3, #0]
 800a90e:	4610      	mov	r0, r2
 800a910:	4798      	blx	r3
    }
 800a912:	bf00      	nop
 800a914:	3708      	adds	r7, #8
 800a916:	46bd      	mov	sp, r7
 800a918:	bd80      	pop	{r7, pc}

0800a91a <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800a91a:	b580      	push	{r7, lr}
 800a91c:	b082      	sub	sp, #8
 800a91e:	af00      	add	r7, sp, #0
 800a920:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800a922:	687a      	ldr	r2, [r7, #4]
 800a924:	687b      	ldr	r3, [r7, #4]
 800a926:	681b      	ldr	r3, [r3, #0]
 800a928:	3328      	adds	r3, #40	; 0x28
 800a92a:	681b      	ldr	r3, [r3, #0]
 800a92c:	4610      	mov	r0, r2
 800a92e:	4798      	blx	r3
    }
 800a930:	bf00      	nop
 800a932:	3708      	adds	r7, #8
 800a934:	46bd      	mov	sp, r7
 800a936:	bd80      	pop	{r7, pc}

0800a938 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>:
/* USER CODE END user includes */

extern DMA2D_HandleTypeDef hdma2d;

static HAL_StatusTypeDef HAL_DMA2D_SetMode(DMA2D_HandleTypeDef *hdma2d, uint32_t mode, uint32_t color, uint32_t offset)
{
 800a938:	b480      	push	{r7}
 800a93a:	b085      	sub	sp, #20
 800a93c:	af00      	add	r7, sp, #0
 800a93e:	60f8      	str	r0, [r7, #12]
 800a940:	60b9      	str	r1, [r7, #8]
 800a942:	607a      	str	r2, [r7, #4]
 800a944:	603b      	str	r3, [r7, #0]
    assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));

    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800a946:	68fb      	ldr	r3, [r7, #12]
 800a948:	681b      	ldr	r3, [r3, #0]
 800a94a:	681b      	ldr	r3, [r3, #0]
 800a94c:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 800a950:	68fb      	ldr	r3, [r7, #12]
 800a952:	681b      	ldr	r3, [r3, #0]
 800a954:	68ba      	ldr	r2, [r7, #8]
 800a956:	430a      	orrs	r2, r1
 800a958:	601a      	str	r2, [r3, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 800a95a:	68fb      	ldr	r3, [r7, #12]
 800a95c:	681b      	ldr	r3, [r3, #0]
 800a95e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a960:	f023 0107 	bic.w	r1, r3, #7
 800a964:	68fb      	ldr	r3, [r7, #12]
 800a966:	681b      	ldr	r3, [r3, #0]
 800a968:	687a      	ldr	r2, [r7, #4]
 800a96a:	430a      	orrs	r2, r1
 800a96c:	635a      	str	r2, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800a96e:	68fb      	ldr	r3, [r7, #12]
 800a970:	681b      	ldr	r3, [r3, #0]
 800a972:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a974:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800a978:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800a97c:	68fa      	ldr	r2, [r7, #12]
 800a97e:	6812      	ldr	r2, [r2, #0]
 800a980:	6839      	ldr	r1, [r7, #0]
 800a982:	430b      	orrs	r3, r1
 800a984:	6413      	str	r3, [r2, #64]	; 0x40

    return HAL_OK;
 800a986:	2300      	movs	r3, #0
}
 800a988:	4618      	mov	r0, r3
 800a98a:	3714      	adds	r7, #20
 800a98c:	46bd      	mov	sp, r7
 800a98e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a992:	4770      	bx	lr

0800a994 <DMA2D_XferCpltCallback>:

extern "C" {

static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
{
 800a994:	b580      	push	{r7, lr}
 800a996:	b082      	sub	sp, #8
 800a998:	af00      	add	r7, sp, #0
 800a99a:	6078      	str	r0, [r7, #4]
    touchgfx::HAL::getInstance()->signalDMAInterrupt();
 800a99c:	f7fd fe50 	bl	8008640 <_ZN8touchgfx3HAL11getInstanceEv>
 800a9a0:	4603      	mov	r3, r0
 800a9a2:	4618      	mov	r0, r3
 800a9a4:	f7ff ffa8 	bl	800a8f8 <_ZN8touchgfx3HAL18signalDMAInterruptEv>
}
 800a9a8:	bf00      	nop
 800a9aa:	3708      	adds	r7, #8
 800a9ac:	46bd      	mov	sp, r7
 800a9ae:	bd80      	pop	{r7, pc}

0800a9b0 <DMA2D_XferErrorCallback>:

static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
{
 800a9b0:	b580      	push	{r7, lr}
 800a9b2:	b082      	sub	sp, #8
 800a9b4:	af00      	add	r7, sp, #0
 800a9b6:	6078      	str	r0, [r7, #4]
    assert(0);
 800a9b8:	4b02      	ldr	r3, [pc, #8]	; (800a9c4 <DMA2D_XferErrorCallback+0x14>)
 800a9ba:	4a03      	ldr	r2, [pc, #12]	; (800a9c8 <DMA2D_XferErrorCallback+0x18>)
 800a9bc:	2136      	movs	r1, #54	; 0x36
 800a9be:	4803      	ldr	r0, [pc, #12]	; (800a9cc <DMA2D_XferErrorCallback+0x1c>)
 800a9c0:	f010 ffc0 	bl	801b944 <__assert_func>
 800a9c4:	0801ec88 	.word	0x0801ec88
 800a9c8:	0801ec8c 	.word	0x0801ec8c
 800a9cc:	0801ecc0 	.word	0x0801ecc0

0800a9d0 <_ZN8touchgfx6BlitOpC1Ev>:
 *        (frame buffer) using DMA.
 *
 *        BlitOp instances carry the required information for performing operations on the LCD
 *        (frame buffer) using DMA.
 */
struct BlitOp
 800a9d0:	b580      	push	{r7, lr}
 800a9d2:	b082      	sub	sp, #8
 800a9d4:	af00      	add	r7, sp, #0
 800a9d6:	6078      	str	r0, [r7, #4]
 800a9d8:	687b      	ldr	r3, [r7, #4]
 800a9da:	3318      	adds	r3, #24
 800a9dc:	4618      	mov	r0, r3
 800a9de:	f7ff feef 	bl	800a7c0 <_ZN8touchgfx9colortypeC1Ev>
 800a9e2:	687b      	ldr	r3, [r7, #4]
 800a9e4:	4618      	mov	r0, r3
 800a9e6:	3708      	adds	r7, #8
 800a9e8:	46bd      	mov	sp, r7
 800a9ea:	bd80      	pop	{r7, pc}

0800a9ec <_ZN10STM32F4DMAC1Ev>:
}

}

STM32F4DMA::STM32F4DMA()
 800a9ec:	b5b0      	push	{r4, r5, r7, lr}
 800a9ee:	b082      	sub	sp, #8
 800a9f0:	af00      	add	r7, sp, #0
 800a9f2:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800a9f4:	687a      	ldr	r2, [r7, #4]
 800a9f6:	687b      	ldr	r3, [r7, #4]
 800a9f8:	330c      	adds	r3, #12
 800a9fa:	4619      	mov	r1, r3
 800a9fc:	4610      	mov	r0, r2
 800a9fe:	f7ff ff61 	bl	800a8c4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800aa02:	4a0e      	ldr	r2, [pc, #56]	; (800aa3c <_ZN10STM32F4DMAC1Ev+0x50>)
 800aa04:	687b      	ldr	r3, [r7, #4]
 800aa06:	601a      	str	r2, [r3, #0]
 800aa08:	687b      	ldr	r3, [r7, #4]
 800aa0a:	f103 000c 	add.w	r0, r3, #12
 800aa0e:	687b      	ldr	r3, [r7, #4]
 800aa10:	3320      	adds	r3, #32
 800aa12:	2260      	movs	r2, #96	; 0x60
 800aa14:	4619      	mov	r1, r3
 800aa16:	f002 faa7 	bl	800cf68 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800aa1a:	687b      	ldr	r3, [r7, #4]
 800aa1c:	3320      	adds	r3, #32
 800aa1e:	245f      	movs	r4, #95	; 0x5f
 800aa20:	461d      	mov	r5, r3
 800aa22:	2c00      	cmp	r4, #0
 800aa24:	db05      	blt.n	800aa32 <_ZN10STM32F4DMAC1Ev+0x46>
 800aa26:	4628      	mov	r0, r5
 800aa28:	f7ff ffd2 	bl	800a9d0 <_ZN8touchgfx6BlitOpC1Ev>
 800aa2c:	3520      	adds	r5, #32
 800aa2e:	3c01      	subs	r4, #1
 800aa30:	e7f7      	b.n	800aa22 <_ZN10STM32F4DMAC1Ev+0x36>
{}
 800aa32:	687b      	ldr	r3, [r7, #4]
 800aa34:	4618      	mov	r0, r3
 800aa36:	3708      	adds	r7, #8
 800aa38:	46bd      	mov	sp, r7
 800aa3a:	bdb0      	pop	{r4, r5, r7, pc}
 800aa3c:	0801f188 	.word	0x0801f188

0800aa40 <_ZN10STM32F4DMAD1Ev>:

STM32F4DMA::~STM32F4DMA()
 800aa40:	b580      	push	{r7, lr}
 800aa42:	b082      	sub	sp, #8
 800aa44:	af00      	add	r7, sp, #0
 800aa46:	6078      	str	r0, [r7, #4]
 800aa48:	4a0b      	ldr	r2, [pc, #44]	; (800aa78 <_ZN10STM32F4DMAD1Ev+0x38>)
 800aa4a:	687b      	ldr	r3, [r7, #4]
 800aa4c:	601a      	str	r2, [r3, #0]
{
    HAL_DMA2D_DeInit(&hdma2d);
 800aa4e:	480b      	ldr	r0, [pc, #44]	; (800aa7c <_ZN10STM32F4DMAD1Ev+0x3c>)
 800aa50:	f7f8 fdae 	bl	80035b0 <HAL_DMA2D_DeInit>
    NVIC_DisableIRQ(DMA2D_IRQn);
 800aa54:	205a      	movs	r0, #90	; 0x5a
 800aa56:	f7ff fe8f 	bl	800a778 <__NVIC_DisableIRQ>
STM32F4DMA::~STM32F4DMA()
 800aa5a:	687b      	ldr	r3, [r7, #4]
 800aa5c:	330c      	adds	r3, #12
 800aa5e:	4618      	mov	r0, r3
 800aa60:	f000 faa8 	bl	800afb4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800aa64:	687b      	ldr	r3, [r7, #4]
 800aa66:	4618      	mov	r0, r3
 800aa68:	f7ff ff0c 	bl	800a884 <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 800aa6c:	687b      	ldr	r3, [r7, #4]
 800aa6e:	4618      	mov	r0, r3
 800aa70:	3708      	adds	r7, #8
 800aa72:	46bd      	mov	sp, r7
 800aa74:	bd80      	pop	{r7, pc}
 800aa76:	bf00      	nop
 800aa78:	0801f188 	.word	0x0801f188
 800aa7c:	200002dc 	.word	0x200002dc

0800aa80 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 800aa80:	b580      	push	{r7, lr}
 800aa82:	b082      	sub	sp, #8
 800aa84:	af00      	add	r7, sp, #0
 800aa86:	6078      	str	r0, [r7, #4]
}
 800aa88:	6878      	ldr	r0, [r7, #4]
 800aa8a:	f7ff ffd9 	bl	800aa40 <_ZN10STM32F4DMAD1Ev>
 800aa8e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 800aa92:	6878      	ldr	r0, [r7, #4]
 800aa94:	f010 ff27 	bl	801b8e6 <_ZdlPvj>
 800aa98:	687b      	ldr	r3, [r7, #4]
 800aa9a:	4618      	mov	r0, r3
 800aa9c:	3708      	adds	r7, #8
 800aa9e:	46bd      	mov	sp, r7
 800aaa0:	bd80      	pop	{r7, pc}
	...

0800aaa4 <_ZN10STM32F4DMA10initializeEv>:

void STM32F4DMA::initialize()
{
 800aaa4:	b580      	push	{r7, lr}
 800aaa6:	b082      	sub	sp, #8
 800aaa8:	af00      	add	r7, sp, #0
 800aaaa:	6078      	str	r0, [r7, #4]
    hdma2d.Instance = DMA2D;
 800aaac:	4b09      	ldr	r3, [pc, #36]	; (800aad4 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800aaae:	4a0a      	ldr	r2, [pc, #40]	; (800aad8 <_ZN10STM32F4DMA10initializeEv+0x34>)
 800aab0:	601a      	str	r2, [r3, #0]
    HAL_DMA2D_Init(&hdma2d);
 800aab2:	4808      	ldr	r0, [pc, #32]	; (800aad4 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800aab4:	f7f8 fd32 	bl	800351c <HAL_DMA2D_Init>

    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800aab8:	4b06      	ldr	r3, [pc, #24]	; (800aad4 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800aaba:	4a08      	ldr	r2, [pc, #32]	; (800aadc <_ZN10STM32F4DMA10initializeEv+0x38>)
 800aabc:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800aabe:	4b05      	ldr	r3, [pc, #20]	; (800aad4 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800aac0:	4a07      	ldr	r2, [pc, #28]	; (800aae0 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 800aac2:	615a      	str	r2, [r3, #20]

    NVIC_EnableIRQ(DMA2D_IRQn);
 800aac4:	205a      	movs	r0, #90	; 0x5a
 800aac6:	f7ff fe39 	bl	800a73c <__NVIC_EnableIRQ>
}
 800aaca:	bf00      	nop
 800aacc:	3708      	adds	r7, #8
 800aace:	46bd      	mov	sp, r7
 800aad0:	bd80      	pop	{r7, pc}
 800aad2:	bf00      	nop
 800aad4:	200002dc 	.word	0x200002dc
 800aad8:	4002b000 	.word	0x4002b000
 800aadc:	0800a995 	.word	0x0800a995
 800aae0:	0800a9b1 	.word	0x0800a9b1

0800aae4 <_ZN10STM32F4DMA11getBlitCapsEv>:

BlitOperations STM32F4DMA::getBlitCaps()
{
 800aae4:	b480      	push	{r7}
 800aae6:	b083      	sub	sp, #12
 800aae8:	af00      	add	r7, sp, #0
 800aaea:	6078      	str	r0, [r7, #4]
                                        | BLIT_OP_COPY
                                        | BLIT_OP_COPY_WITH_ALPHA
                                        | BLIT_OP_COPY_ARGB8888
                                        | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                        | BLIT_OP_COPY_A4
                                        | BLIT_OP_COPY_A8);
 800aaec:	f240 13ef 	movw	r3, #495	; 0x1ef
}
 800aaf0:	4618      	mov	r0, r3
 800aaf2:	370c      	adds	r7, #12
 800aaf4:	46bd      	mov	sp, r7
 800aaf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aafa:	4770      	bx	lr

0800aafc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 800aafc:	b590      	push	{r4, r7, lr}
 800aafe:	b08d      	sub	sp, #52	; 0x34
 800ab00:	af02      	add	r7, sp, #8
 800ab02:	6078      	str	r0, [r7, #4]
 800ab04:	6039      	str	r1, [r7, #0]
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 800ab06:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800ab0a:	627b      	str	r3, [r7, #36]	; 0x24
    uint32_t dma2dColorMode = 0;
 800ab0c:	2300      	movs	r3, #0
 800ab0e:	623b      	str	r3, [r7, #32]

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 800ab10:	683b      	ldr	r3, [r7, #0]
 800ab12:	681b      	ldr	r3, [r3, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 800ab14:	2b20      	cmp	r3, #32
 800ab16:	d007      	beq.n	800ab28 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 800ab18:	683b      	ldr	r3, [r7, #0]
 800ab1a:	681b      	ldr	r3, [r3, #0]
 800ab1c:	2b40      	cmp	r3, #64	; 0x40
 800ab1e:	d003      	beq.n	800ab28 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 800ab20:	683b      	ldr	r3, [r7, #0]
 800ab22:	681b      	ldr	r3, [r3, #0]
 800ab24:	2b04      	cmp	r3, #4
 800ab26:	d101      	bne.n	800ab2c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x30>
 800ab28:	2301      	movs	r3, #1
 800ab2a:	e000      	b.n	800ab2e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x32>
 800ab2c:	2300      	movs	r3, #0
    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 800ab2e:	77fb      	strb	r3, [r7, #31]

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 800ab30:	683b      	ldr	r3, [r7, #0]
 800ab32:	681b      	ldr	r3, [r3, #0]
                         || blitOp.operation == BLIT_OP_COPY_A8);
 800ab34:	2b80      	cmp	r3, #128	; 0x80
 800ab36:	d004      	beq.n	800ab42 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x46>
 800ab38:	683b      	ldr	r3, [r7, #0]
 800ab3a:	681b      	ldr	r3, [r3, #0]
 800ab3c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ab40:	d101      	bne.n	800ab46 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4a>
 800ab42:	2301      	movs	r3, #1
 800ab44:	e000      	b.n	800ab48 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
 800ab46:	2300      	movs	r3, #0
    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 800ab48:	77bb      	strb	r3, [r7, #30]

    uint8_t bitDepth = HAL::lcd().bitDepth();
 800ab4a:	f7fd fd85 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800ab4e:	4603      	mov	r3, r0
 800ab50:	681a      	ldr	r2, [r3, #0]
 800ab52:	3220      	adds	r2, #32
 800ab54:	6812      	ldr	r2, [r2, #0]
 800ab56:	4618      	mov	r0, r3
 800ab58:	4790      	blx	r2
 800ab5a:	4603      	mov	r3, r0
 800ab5c:	777b      	strb	r3, [r7, #29]

    switch (blitOp.operation)
 800ab5e:	683b      	ldr	r3, [r7, #0]
 800ab60:	681b      	ldr	r3, [r3, #0]
 800ab62:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ab66:	d012      	beq.n	800ab8e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
 800ab68:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ab6c:	d820      	bhi.n	800abb0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 800ab6e:	2b80      	cmp	r3, #128	; 0x80
 800ab70:	d00a      	beq.n	800ab88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
 800ab72:	2b80      	cmp	r3, #128	; 0x80
 800ab74:	d81c      	bhi.n	800abb0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 800ab76:	2b40      	cmp	r3, #64	; 0x40
 800ab78:	d017      	beq.n	800abaa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
 800ab7a:	2b40      	cmp	r3, #64	; 0x40
 800ab7c:	d818      	bhi.n	800abb0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 800ab7e:	2b04      	cmp	r3, #4
 800ab80:	d008      	beq.n	800ab94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x98>
 800ab82:	2b20      	cmp	r3, #32
 800ab84:	d011      	beq.n	800abaa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
 800ab86:	e013      	b.n	800abb0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
    {
    case BLIT_OP_COPY_A4:
        dma2dColorMode = CM_A4;
 800ab88:	230a      	movs	r3, #10
 800ab8a:	623b      	str	r3, [r7, #32]
        break;
 800ab8c:	e01a      	b.n	800abc4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    case BLIT_OP_COPY_A8:
        dma2dColorMode = CM_A8;
 800ab8e:	2309      	movs	r3, #9
 800ab90:	623b      	str	r3, [r7, #32]
        break;
 800ab92:	e017      	b.n	800abc4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    case BLIT_OP_COPY_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800ab94:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800ab98:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800ab9a:	7f7b      	ldrb	r3, [r7, #29]
 800ab9c:	2b10      	cmp	r3, #16
 800ab9e:	d101      	bne.n	800aba4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 800aba0:	2302      	movs	r3, #2
 800aba2:	e000      	b.n	800aba6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
 800aba4:	2301      	movs	r3, #1
 800aba6:	623b      	str	r3, [r7, #32]
        break;
 800aba8:	e00c      	b.n	800abc4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
 800abaa:	2300      	movs	r3, #0
 800abac:	623b      	str	r3, [r7, #32]
        break;
 800abae:	e009      	b.n	800abc4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    default:
        dma2dTransferMode = DMA2D_M2M;
 800abb0:	2300      	movs	r3, #0
 800abb2:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800abb4:	7f7b      	ldrb	r3, [r7, #29]
 800abb6:	2b10      	cmp	r3, #16
 800abb8:	d101      	bne.n	800abbe <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc2>
 800abba:	2302      	movs	r3, #2
 800abbc:	e000      	b.n	800abc0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc4>
 800abbe:	2301      	movs	r3, #1
 800abc0:	623b      	str	r3, [r7, #32]
        break;
 800abc2:	bf00      	nop
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800abc4:	4a77      	ldr	r2, [pc, #476]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800abc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800abc8:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800abca:	7f7b      	ldrb	r3, [r7, #29]
 800abcc:	2b10      	cmp	r3, #16
 800abce:	d101      	bne.n	800abd4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd8>
 800abd0:	2302      	movs	r3, #2
 800abd2:	e000      	b.n	800abd6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xda>
 800abd4:	2301      	movs	r3, #1
 800abd6:	4a73      	ldr	r2, [pc, #460]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800abd8:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800abda:	683b      	ldr	r3, [r7, #0]
 800abdc:	8adb      	ldrh	r3, [r3, #22]
 800abde:	461a      	mov	r2, r3
 800abe0:	683b      	ldr	r3, [r7, #0]
 800abe2:	8a1b      	ldrh	r3, [r3, #16]
 800abe4:	1ad3      	subs	r3, r2, r3
 800abe6:	461a      	mov	r2, r3
 800abe8:	4b6e      	ldr	r3, [pc, #440]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800abea:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800abec:	7f7b      	ldrb	r3, [r7, #29]
 800abee:	2b10      	cmp	r3, #16
 800abf0:	d101      	bne.n	800abf6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800abf2:	2202      	movs	r2, #2
 800abf4:	e000      	b.n	800abf8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfc>
 800abf6:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 800abf8:	683b      	ldr	r3, [r7, #0]
 800abfa:	8adb      	ldrh	r3, [r3, #22]
 800abfc:	4619      	mov	r1, r3
 800abfe:	683b      	ldr	r3, [r7, #0]
 800ac00:	8a1b      	ldrh	r3, [r3, #16]
 800ac02:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800ac04:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800ac06:	4867      	ldr	r0, [pc, #412]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac08:	f7ff fe96 	bl	800a938 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800ac0c:	4a65      	ldr	r2, [pc, #404]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac0e:	6a3b      	ldr	r3, [r7, #32]
 800ac10:	62d3      	str	r3, [r2, #44]	; 0x2c
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 800ac12:	683b      	ldr	r3, [r7, #0]
 800ac14:	8a9b      	ldrh	r3, [r3, #20]
 800ac16:	461a      	mov	r2, r3
 800ac18:	683b      	ldr	r3, [r7, #0]
 800ac1a:	8a1b      	ldrh	r3, [r3, #16]
 800ac1c:	1ad3      	subs	r3, r2, r3
 800ac1e:	461a      	mov	r2, r3
 800ac20:	4b60      	ldr	r3, [pc, #384]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac22:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 800ac24:	7ffb      	ldrb	r3, [r7, #31]
 800ac26:	2b00      	cmp	r3, #0
 800ac28:	d103      	bne.n	800ac32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 800ac2a:	7fbb      	ldrb	r3, [r7, #30]
 800ac2c:	2b00      	cmp	r3, #0
 800ac2e:	f000 8084 	beq.w	800ad3a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x23e>
    {
        if (blitOp.alpha < 255)
 800ac32:	683b      	ldr	r3, [r7, #0]
 800ac34:	7f1b      	ldrb	r3, [r3, #28]
 800ac36:	2bff      	cmp	r3, #255	; 0xff
 800ac38:	d008      	beq.n	800ac4c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 800ac3a:	4b5a      	ldr	r3, [pc, #360]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac3c:	2202      	movs	r2, #2
 800ac3e:	631a      	str	r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 800ac40:	683b      	ldr	r3, [r7, #0]
 800ac42:	7f1b      	ldrb	r3, [r3, #28]
 800ac44:	461a      	mov	r2, r3
 800ac46:	4b57      	ldr	r3, [pc, #348]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac48:	635a      	str	r2, [r3, #52]	; 0x34
 800ac4a:	e002      	b.n	800ac52 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 800ac4c:	4b55      	ldr	r3, [pc, #340]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac4e:	2200      	movs	r2, #0
 800ac50:	631a      	str	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 800ac52:	7fbb      	ldrb	r3, [r7, #30]
 800ac54:	2b00      	cmp	r3, #0
 800ac56:	d05b      	beq.n	800ad10 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x214>
        {
            if (bitDepth == 16)
 800ac58:	7f7b      	ldrb	r3, [r7, #29]
 800ac5a:	2b10      	cmp	r3, #16
 800ac5c:	d14c      	bne.n	800acf8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1fc>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 800ac5e:	683b      	ldr	r3, [r7, #0]
 800ac60:	3318      	adds	r3, #24
 800ac62:	4618      	mov	r0, r3
 800ac64:	f7ff fdc6 	bl	800a7f4 <_ZNK8touchgfx9colortypecvtEv>
 800ac68:	4603      	mov	r3, r0
 800ac6a:	0adb      	lsrs	r3, r3, #11
 800ac6c:	b29b      	uxth	r3, r3
 800ac6e:	f003 021f 	and.w	r2, r3, #31
 800ac72:	4613      	mov	r3, r2
 800ac74:	021b      	lsls	r3, r3, #8
 800ac76:	1a9b      	subs	r3, r3, r2
 800ac78:	4a4b      	ldr	r2, [pc, #300]	; (800ada8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 800ac7a:	fb82 1203 	smull	r1, r2, r2, r3
 800ac7e:	441a      	add	r2, r3
 800ac80:	1112      	asrs	r2, r2, #4
 800ac82:	17db      	asrs	r3, r3, #31
 800ac84:	1ad3      	subs	r3, r2, r3
 800ac86:	61bb      	str	r3, [r7, #24]
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 800ac88:	683b      	ldr	r3, [r7, #0]
 800ac8a:	3318      	adds	r3, #24
 800ac8c:	4618      	mov	r0, r3
 800ac8e:	f7ff fdb1 	bl	800a7f4 <_ZNK8touchgfx9colortypecvtEv>
 800ac92:	4603      	mov	r3, r0
 800ac94:	095b      	lsrs	r3, r3, #5
 800ac96:	b29b      	uxth	r3, r3
 800ac98:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800ac9c:	4613      	mov	r3, r2
 800ac9e:	021b      	lsls	r3, r3, #8
 800aca0:	1a9b      	subs	r3, r3, r2
 800aca2:	4a42      	ldr	r2, [pc, #264]	; (800adac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>)
 800aca4:	fb82 1203 	smull	r1, r2, r2, r3
 800aca8:	441a      	add	r2, r3
 800acaa:	1152      	asrs	r2, r2, #5
 800acac:	17db      	asrs	r3, r3, #31
 800acae:	1ad3      	subs	r3, r2, r3
 800acb0:	617b      	str	r3, [r7, #20]
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 800acb2:	683b      	ldr	r3, [r7, #0]
 800acb4:	3318      	adds	r3, #24
 800acb6:	4618      	mov	r0, r3
 800acb8:	f7ff fd9c 	bl	800a7f4 <_ZNK8touchgfx9colortypecvtEv>
 800acbc:	4603      	mov	r3, r0
 800acbe:	f003 021f 	and.w	r2, r3, #31
 800acc2:	4613      	mov	r3, r2
 800acc4:	021b      	lsls	r3, r3, #8
 800acc6:	1a9b      	subs	r3, r3, r2
 800acc8:	4a37      	ldr	r2, [pc, #220]	; (800ada8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 800acca:	fb82 1203 	smull	r1, r2, r2, r3
 800acce:	441a      	add	r2, r3
 800acd0:	1112      	asrs	r2, r2, #4
 800acd2:	17db      	asrs	r3, r3, #31
 800acd4:	1ad3      	subs	r3, r2, r3
 800acd6:	613b      	str	r3, [r7, #16]
                uint32_t alpha = blitOp.alpha;
 800acd8:	683b      	ldr	r3, [r7, #0]
 800acda:	7f1b      	ldrb	r3, [r3, #28]
 800acdc:	60fb      	str	r3, [r7, #12]
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 800acde:	68fb      	ldr	r3, [r7, #12]
 800ace0:	061a      	lsls	r2, r3, #24
 800ace2:	69bb      	ldr	r3, [r7, #24]
 800ace4:	041b      	lsls	r3, r3, #16
 800ace6:	431a      	orrs	r2, r3
 800ace8:	697b      	ldr	r3, [r7, #20]
 800acea:	021b      	lsls	r3, r3, #8
 800acec:	431a      	orrs	r2, r3
 800acee:	693b      	ldr	r3, [r7, #16]
 800acf0:	4313      	orrs	r3, r2
 800acf2:	4a2c      	ldr	r2, [pc, #176]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800acf4:	6353      	str	r3, [r2, #52]	; 0x34
 800acf6:	e00b      	b.n	800ad10 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x214>
            }
            else
            {
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 800acf8:	683b      	ldr	r3, [r7, #0]
 800acfa:	3318      	adds	r3, #24
 800acfc:	4618      	mov	r0, r3
 800acfe:	f7ff fd6d 	bl	800a7dc <_ZNK8touchgfx9colortype10getColor32Ev>
 800ad02:	4602      	mov	r2, r0
 800ad04:	683b      	ldr	r3, [r7, #0]
 800ad06:	7f1b      	ldrb	r3, [r3, #28]
 800ad08:	061b      	lsls	r3, r3, #24
 800ad0a:	4313      	orrs	r3, r2
 800ad0c:	4a25      	ldr	r2, [pc, #148]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad0e:	6353      	str	r3, [r2, #52]	; 0x34
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800ad10:	683b      	ldr	r3, [r7, #0]
 800ad12:	8adb      	ldrh	r3, [r3, #22]
 800ad14:	461a      	mov	r2, r3
 800ad16:	683b      	ldr	r3, [r7, #0]
 800ad18:	8a1b      	ldrh	r3, [r3, #16]
 800ad1a:	1ad3      	subs	r3, r2, r3
 800ad1c:	461a      	mov	r2, r3
 800ad1e:	4b21      	ldr	r3, [pc, #132]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad20:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800ad22:	7f7b      	ldrb	r3, [r7, #29]
 800ad24:	2b10      	cmp	r3, #16
 800ad26:	d101      	bne.n	800ad2c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
 800ad28:	2302      	movs	r3, #2
 800ad2a:	e000      	b.n	800ad2e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x232>
 800ad2c:	2301      	movs	r3, #1
 800ad2e:	4a1d      	ldr	r2, [pc, #116]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad30:	61d3      	str	r3, [r2, #28]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800ad32:	2100      	movs	r1, #0
 800ad34:	481b      	ldr	r0, [pc, #108]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad36:	f7f8 febb 	bl	8003ab0 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 800ad3a:	2101      	movs	r1, #1
 800ad3c:	4819      	ldr	r0, [pc, #100]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad3e:	f7f8 feb7 	bl	8003ab0 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 800ad42:	7ffb      	ldrb	r3, [r7, #31]
 800ad44:	2b00      	cmp	r3, #0
 800ad46:	d102      	bne.n	800ad4e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x252>
 800ad48:	7fbb      	ldrb	r3, [r7, #30]
 800ad4a:	2b00      	cmp	r3, #0
 800ad4c:	d015      	beq.n	800ad7a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x27e>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pSrc,
 800ad4e:	683b      	ldr	r3, [r7, #0]
 800ad50:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ad52:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 800ad54:	683b      	ldr	r3, [r7, #0]
 800ad56:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ad58:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 800ad5a:	683b      	ldr	r3, [r7, #0]
 800ad5c:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ad5e:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800ad60:	683b      	ldr	r3, [r7, #0]
 800ad62:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ad64:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800ad66:	683b      	ldr	r3, [r7, #0]
 800ad68:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ad6a:	9301      	str	r3, [sp, #4]
 800ad6c:	9200      	str	r2, [sp, #0]
 800ad6e:	4623      	mov	r3, r4
 800ad70:	4602      	mov	r2, r0
 800ad72:	480c      	ldr	r0, [pc, #48]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad74:	f7f8 fcbf 	bl	80036f6 <HAL_DMA2D_BlendingStart_IT>
 800ad78:	e010      	b.n	800ad9c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>
    }
    else
    {
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
 800ad7a:	683b      	ldr	r3, [r7, #0]
 800ad7c:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_Start_IT(&hdma2d,
 800ad7e:	4619      	mov	r1, r3
                           (unsigned int)blitOp.pDst,
 800ad80:	683b      	ldr	r3, [r7, #0]
 800ad82:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_Start_IT(&hdma2d,
 800ad84:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 800ad86:	683b      	ldr	r3, [r7, #0]
 800ad88:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d,
 800ad8a:	4618      	mov	r0, r3
                           blitOp.nSteps, blitOp.nLoops);
 800ad8c:	683b      	ldr	r3, [r7, #0]
 800ad8e:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d,
 800ad90:	9300      	str	r3, [sp, #0]
 800ad92:	4603      	mov	r3, r0
 800ad94:	4803      	ldr	r0, [pc, #12]	; (800ada4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad96:	f7f8 fc7b 	bl	8003690 <HAL_DMA2D_Start_IT>
    }
}
 800ad9a:	bf00      	nop
 800ad9c:	bf00      	nop
 800ad9e:	372c      	adds	r7, #44	; 0x2c
 800ada0:	46bd      	mov	sp, r7
 800ada2:	bd90      	pop	{r4, r7, pc}
 800ada4:	200002dc 	.word	0x200002dc
 800ada8:	84210843 	.word	0x84210843
 800adac:	82082083 	.word	0x82082083

0800adb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 800adb0:	b590      	push	{r4, r7, lr}
 800adb2:	b08d      	sub	sp, #52	; 0x34
 800adb4:	af02      	add	r7, sp, #8
 800adb6:	6078      	str	r0, [r7, #4]
 800adb8:	6039      	str	r1, [r7, #0]
    uint8_t bitDepth = HAL::lcd().bitDepth();
 800adba:	f7fd fc4d 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800adbe:	4603      	mov	r3, r0
 800adc0:	681a      	ldr	r2, [r3, #0]
 800adc2:	3220      	adds	r2, #32
 800adc4:	6812      	ldr	r2, [r2, #0]
 800adc6:	4618      	mov	r0, r3
 800adc8:	4790      	blx	r2
 800adca:	4603      	mov	r3, r0
 800adcc:	77fb      	strb	r3, [r7, #31]
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800adce:	7ffb      	ldrb	r3, [r7, #31]
 800add0:	2b10      	cmp	r3, #16
 800add2:	d101      	bne.n	800add8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x28>
 800add4:	2302      	movs	r3, #2
 800add6:	e000      	b.n	800adda <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x2a>
 800add8:	2301      	movs	r3, #1
 800adda:	61bb      	str	r3, [r7, #24]

    uint32_t color = 0;
 800addc:	2300      	movs	r3, #0
 800adde:	623b      	str	r3, [r7, #32]
    if (bitDepth == 16)
 800ade0:	7ffb      	ldrb	r3, [r7, #31]
 800ade2:	2b10      	cmp	r3, #16
 800ade4:	d14b      	bne.n	800ae7e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 800ade6:	683b      	ldr	r3, [r7, #0]
 800ade8:	3318      	adds	r3, #24
 800adea:	4618      	mov	r0, r3
 800adec:	f7ff fd02 	bl	800a7f4 <_ZNK8touchgfx9colortypecvtEv>
 800adf0:	4603      	mov	r3, r0
 800adf2:	0adb      	lsrs	r3, r3, #11
 800adf4:	b29b      	uxth	r3, r3
 800adf6:	f003 021f 	and.w	r2, r3, #31
 800adfa:	4613      	mov	r3, r2
 800adfc:	021b      	lsls	r3, r3, #8
 800adfe:	1a9b      	subs	r3, r3, r2
 800ae00:	4a69      	ldr	r2, [pc, #420]	; (800afa8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 800ae02:	fb82 1203 	smull	r1, r2, r2, r3
 800ae06:	441a      	add	r2, r3
 800ae08:	1112      	asrs	r2, r2, #4
 800ae0a:	17db      	asrs	r3, r3, #31
 800ae0c:	1ad3      	subs	r3, r2, r3
 800ae0e:	617b      	str	r3, [r7, #20]
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 800ae10:	683b      	ldr	r3, [r7, #0]
 800ae12:	3318      	adds	r3, #24
 800ae14:	4618      	mov	r0, r3
 800ae16:	f7ff fced 	bl	800a7f4 <_ZNK8touchgfx9colortypecvtEv>
 800ae1a:	4603      	mov	r3, r0
 800ae1c:	095b      	lsrs	r3, r3, #5
 800ae1e:	b29b      	uxth	r3, r3
 800ae20:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800ae24:	4613      	mov	r3, r2
 800ae26:	021b      	lsls	r3, r3, #8
 800ae28:	1a9b      	subs	r3, r3, r2
 800ae2a:	4a60      	ldr	r2, [pc, #384]	; (800afac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ae2c:	fb82 1203 	smull	r1, r2, r2, r3
 800ae30:	441a      	add	r2, r3
 800ae32:	1152      	asrs	r2, r2, #5
 800ae34:	17db      	asrs	r3, r3, #31
 800ae36:	1ad3      	subs	r3, r2, r3
 800ae38:	613b      	str	r3, [r7, #16]
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 800ae3a:	683b      	ldr	r3, [r7, #0]
 800ae3c:	3318      	adds	r3, #24
 800ae3e:	4618      	mov	r0, r3
 800ae40:	f7ff fcd8 	bl	800a7f4 <_ZNK8touchgfx9colortypecvtEv>
 800ae44:	4603      	mov	r3, r0
 800ae46:	f003 021f 	and.w	r2, r3, #31
 800ae4a:	4613      	mov	r3, r2
 800ae4c:	021b      	lsls	r3, r3, #8
 800ae4e:	1a9b      	subs	r3, r3, r2
 800ae50:	4a55      	ldr	r2, [pc, #340]	; (800afa8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 800ae52:	fb82 1203 	smull	r1, r2, r2, r3
 800ae56:	441a      	add	r2, r3
 800ae58:	1112      	asrs	r2, r2, #4
 800ae5a:	17db      	asrs	r3, r3, #31
 800ae5c:	1ad3      	subs	r3, r2, r3
 800ae5e:	60fb      	str	r3, [r7, #12]
        uint32_t alpha = blitOp.alpha;
 800ae60:	683b      	ldr	r3, [r7, #0]
 800ae62:	7f1b      	ldrb	r3, [r3, #28]
 800ae64:	60bb      	str	r3, [r7, #8]
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 800ae66:	68bb      	ldr	r3, [r7, #8]
 800ae68:	061a      	lsls	r2, r3, #24
 800ae6a:	697b      	ldr	r3, [r7, #20]
 800ae6c:	041b      	lsls	r3, r3, #16
 800ae6e:	431a      	orrs	r2, r3
 800ae70:	693b      	ldr	r3, [r7, #16]
 800ae72:	021b      	lsls	r3, r3, #8
 800ae74:	4313      	orrs	r3, r2
 800ae76:	68fa      	ldr	r2, [r7, #12]
 800ae78:	4313      	orrs	r3, r2
 800ae7a:	623b      	str	r3, [r7, #32]
 800ae7c:	e00b      	b.n	800ae96 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe6>
    }
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 800ae7e:	683b      	ldr	r3, [r7, #0]
 800ae80:	7f1b      	ldrb	r3, [r3, #28]
 800ae82:	061b      	lsls	r3, r3, #24
 800ae84:	461c      	mov	r4, r3
 800ae86:	683b      	ldr	r3, [r7, #0]
 800ae88:	3318      	adds	r3, #24
 800ae8a:	4618      	mov	r0, r3
 800ae8c:	f7ff fca6 	bl	800a7dc <_ZNK8touchgfx9colortype10getColor32Ev>
 800ae90:	4603      	mov	r3, r0
 800ae92:	4323      	orrs	r3, r4
 800ae94:	623b      	str	r3, [r7, #32]
    }

    switch (blitOp.operation)
 800ae96:	683b      	ldr	r3, [r7, #0]
 800ae98:	681b      	ldr	r3, [r3, #0]
 800ae9a:	2b08      	cmp	r3, #8
 800ae9c:	d103      	bne.n	800aea6 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf6>
    {
    case BLIT_OP_FILL_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800ae9e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800aea2:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800aea4:	e003      	b.n	800aeae <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfe>
    default:
        dma2dTransferMode = DMA2D_R2M;
 800aea6:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 800aeaa:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800aeac:	bf00      	nop
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800aeae:	4a40      	ldr	r2, [pc, #256]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800aeb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800aeb2:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800aeb4:	7ffb      	ldrb	r3, [r7, #31]
 800aeb6:	2b10      	cmp	r3, #16
 800aeb8:	d101      	bne.n	800aebe <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10e>
 800aeba:	2302      	movs	r3, #2
 800aebc:	e000      	b.n	800aec0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>
 800aebe:	2301      	movs	r3, #1
 800aec0:	4a3b      	ldr	r2, [pc, #236]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800aec2:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800aec4:	683b      	ldr	r3, [r7, #0]
 800aec6:	8adb      	ldrh	r3, [r3, #22]
 800aec8:	461a      	mov	r2, r3
 800aeca:	683b      	ldr	r3, [r7, #0]
 800aecc:	8a1b      	ldrh	r3, [r3, #16]
 800aece:	1ad3      	subs	r3, r2, r3
 800aed0:	461a      	mov	r2, r3
 800aed2:	4b37      	ldr	r3, [pc, #220]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800aed4:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800aed6:	7ffb      	ldrb	r3, [r7, #31]
 800aed8:	2b10      	cmp	r3, #16
 800aeda:	d101      	bne.n	800aee0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x130>
 800aedc:	2202      	movs	r2, #2
 800aede:	e000      	b.n	800aee2 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x132>
 800aee0:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 800aee2:	683b      	ldr	r3, [r7, #0]
 800aee4:	8adb      	ldrh	r3, [r3, #22]
 800aee6:	4619      	mov	r1, r3
 800aee8:	683b      	ldr	r3, [r7, #0]
 800aeea:	8a1b      	ldrh	r3, [r3, #16]
 800aeec:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800aeee:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800aef0:	482f      	ldr	r0, [pc, #188]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800aef2:	f7ff fd21 	bl	800a938 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    if (dma2dTransferMode == DMA2D_M2M_BLEND) {
 800aef6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800aef8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800aefc:	d11e      	bne.n	800af3c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18c>
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 800aefe:	4b2c      	ldr	r3, [pc, #176]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af00:	2201      	movs	r2, #1
 800af02:	631a      	str	r2, [r3, #48]	; 0x30
        hdma2d.LayerCfg[1].InputAlpha = color;
 800af04:	4a2a      	ldr	r2, [pc, #168]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af06:	6a3b      	ldr	r3, [r7, #32]
 800af08:	6353      	str	r3, [r2, #52]	; 0x34
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800af0a:	4b29      	ldr	r3, [pc, #164]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af0c:	2209      	movs	r2, #9
 800af0e:	62da      	str	r2, [r3, #44]	; 0x2c
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800af10:	683b      	ldr	r3, [r7, #0]
 800af12:	8adb      	ldrh	r3, [r3, #22]
 800af14:	461a      	mov	r2, r3
 800af16:	683b      	ldr	r3, [r7, #0]
 800af18:	8a1b      	ldrh	r3, [r3, #16]
 800af1a:	1ad3      	subs	r3, r2, r3
 800af1c:	461a      	mov	r2, r3
 800af1e:	4b24      	ldr	r3, [pc, #144]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af20:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800af22:	7ffb      	ldrb	r3, [r7, #31]
 800af24:	2b10      	cmp	r3, #16
 800af26:	d101      	bne.n	800af2c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17c>
 800af28:	2302      	movs	r3, #2
 800af2a:	e000      	b.n	800af2e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17e>
 800af2c:	2301      	movs	r3, #1
 800af2e:	4a20      	ldr	r2, [pc, #128]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af30:	61d3      	str	r3, [r2, #28]
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800af32:	2100      	movs	r1, #0
 800af34:	481e      	ldr	r0, [pc, #120]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af36:	f7f8 fdbb 	bl	8003ab0 <HAL_DMA2D_ConfigLayer>
 800af3a:	e005      	b.n	800af48 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x198>
    } else {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800af3c:	4a1c      	ldr	r2, [pc, #112]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af3e:	69bb      	ldr	r3, [r7, #24]
 800af40:	62d3      	str	r3, [r2, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 800af42:	4b1b      	ldr	r3, [pc, #108]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af44:	2200      	movs	r2, #0
 800af46:	629a      	str	r2, [r3, #40]	; 0x28
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 800af48:	2101      	movs	r1, #1
 800af4a:	4819      	ldr	r0, [pc, #100]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af4c:	f7f8 fdb0 	bl	8003ab0 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800af50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af52:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800af56:	d115      	bne.n	800af84 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1d4>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pDst,
 800af58:	683b      	ldr	r3, [r7, #0]
 800af5a:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800af5c:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 800af5e:	683b      	ldr	r3, [r7, #0]
 800af60:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800af62:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 800af64:	683b      	ldr	r3, [r7, #0]
 800af66:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800af68:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800af6a:	683b      	ldr	r3, [r7, #0]
 800af6c:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800af6e:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800af70:	683b      	ldr	r3, [r7, #0]
 800af72:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800af74:	9301      	str	r3, [sp, #4]
 800af76:	9200      	str	r2, [sp, #0]
 800af78:	4623      	mov	r3, r4
 800af7a:	4602      	mov	r2, r0
 800af7c:	480c      	ldr	r0, [pc, #48]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af7e:	f7f8 fbba 	bl	80036f6 <HAL_DMA2D_BlendingStart_IT>
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 800af82:	e00d      	b.n	800afa0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f0>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800af84:	683b      	ldr	r3, [r7, #0]
 800af86:	68db      	ldr	r3, [r3, #12]
 800af88:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 800af8a:	683b      	ldr	r3, [r7, #0]
 800af8c:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800af8e:	4619      	mov	r1, r3
                           blitOp.nSteps, blitOp.nLoops);
 800af90:	683b      	ldr	r3, [r7, #0]
 800af92:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800af94:	9300      	str	r3, [sp, #0]
 800af96:	460b      	mov	r3, r1
 800af98:	6a39      	ldr	r1, [r7, #32]
 800af9a:	4805      	ldr	r0, [pc, #20]	; (800afb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af9c:	f7f8 fb78 	bl	8003690 <HAL_DMA2D_Start_IT>
}
 800afa0:	bf00      	nop
 800afa2:	372c      	adds	r7, #44	; 0x2c
 800afa4:	46bd      	mov	sp, r7
 800afa6:	bd90      	pop	{r4, r7, pc}
 800afa8:	84210843 	.word	0x84210843
 800afac:	82082083 	.word	0x82082083
 800afb0:	200002dc 	.word	0x200002dc

0800afb4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800afb4:	b580      	push	{r7, lr}
 800afb6:	b082      	sub	sp, #8
 800afb8:	af00      	add	r7, sp, #0
 800afba:	6078      	str	r0, [r7, #4]
 800afbc:	4a05      	ldr	r2, [pc, #20]	; (800afd4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800afbe:	687b      	ldr	r3, [r7, #4]
 800afc0:	601a      	str	r2, [r3, #0]
 800afc2:	687b      	ldr	r3, [r7, #4]
 800afc4:	4618      	mov	r0, r3
 800afc6:	f7ff fc23 	bl	800a810 <_ZN8touchgfx9DMA_QueueD1Ev>
 800afca:	687b      	ldr	r3, [r7, #4]
 800afcc:	4618      	mov	r0, r3
 800afce:	3708      	adds	r7, #8
 800afd0:	46bd      	mov	sp, r7
 800afd2:	bd80      	pop	{r7, pc}
 800afd4:	0801fd78 	.word	0x0801fd78

0800afd8 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800afd8:	b580      	push	{r7, lr}
 800afda:	b082      	sub	sp, #8
 800afdc:	af00      	add	r7, sp, #0
 800afde:	6078      	str	r0, [r7, #4]
 800afe0:	6878      	ldr	r0, [r7, #4]
 800afe2:	f7ff ffe7 	bl	800afb4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800afe6:	2114      	movs	r1, #20
 800afe8:	6878      	ldr	r0, [r7, #4]
 800afea:	f010 fc7c 	bl	801b8e6 <_ZdlPvj>
 800afee:	687b      	ldr	r3, [r7, #4]
 800aff0:	4618      	mov	r0, r3
 800aff2:	3708      	adds	r7, #8
 800aff4:	46bd      	mov	sp, r7
 800aff6:	bd80      	pop	{r7, pc}

0800aff8 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
    static void registerTexts(const Texts* t)
 800aff8:	b480      	push	{r7}
 800affa:	b083      	sub	sp, #12
 800affc:	af00      	add	r7, sp, #0
 800affe:	6078      	str	r0, [r7, #4]
        texts = t;
 800b000:	4a04      	ldr	r2, [pc, #16]	; (800b014 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800b002:	687b      	ldr	r3, [r7, #4]
 800b004:	6013      	str	r3, [r2, #0]
    }
 800b006:	bf00      	nop
 800b008:	370c      	adds	r7, #12
 800b00a:	46bd      	mov	sp, r7
 800b00c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b010:	4770      	bx	lr
 800b012:	bf00      	nop
 800b014:	20001820 	.word	0x20001820

0800b018 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800b018:	b480      	push	{r7}
 800b01a:	b085      	sub	sp, #20
 800b01c:	af00      	add	r7, sp, #0
 800b01e:	60f8      	str	r0, [r7, #12]
 800b020:	60b9      	str	r1, [r7, #8]
 800b022:	607a      	str	r2, [r7, #4]
 800b024:	603b      	str	r3, [r7, #0]
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app) : presenterStorage(pres),
        screenStorage(scr),
        transitionStorage(tra),
        frontendApplication(app)
 800b026:	4a0b      	ldr	r2, [pc, #44]	; (800b054 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800b028:	68fb      	ldr	r3, [r7, #12]
 800b02a:	601a      	str	r2, [r3, #0]
 800b02c:	68fb      	ldr	r3, [r7, #12]
 800b02e:	68ba      	ldr	r2, [r7, #8]
 800b030:	605a      	str	r2, [r3, #4]
 800b032:	68fb      	ldr	r3, [r7, #12]
 800b034:	687a      	ldr	r2, [r7, #4]
 800b036:	609a      	str	r2, [r3, #8]
 800b038:	68fb      	ldr	r3, [r7, #12]
 800b03a:	683a      	ldr	r2, [r7, #0]
 800b03c:	60da      	str	r2, [r3, #12]
 800b03e:	68fb      	ldr	r3, [r7, #12]
 800b040:	69ba      	ldr	r2, [r7, #24]
 800b042:	611a      	str	r2, [r3, #16]
    {
    }
 800b044:	68fb      	ldr	r3, [r7, #12]
 800b046:	4618      	mov	r0, r3
 800b048:	3714      	adds	r7, #20
 800b04a:	46bd      	mov	sp, r7
 800b04c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b050:	4770      	bx	lr
 800b052:	bf00      	nop
 800b054:	0801f2c0 	.word	0x0801f2c0

0800b058 <_ZN8touchgfx7MVPHeapD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPHeap()
 800b058:	b480      	push	{r7}
 800b05a:	b083      	sub	sp, #12
 800b05c:	af00      	add	r7, sp, #0
 800b05e:	6078      	str	r0, [r7, #4]
    {
 800b060:	4a04      	ldr	r2, [pc, #16]	; (800b074 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800b062:	687b      	ldr	r3, [r7, #4]
 800b064:	601a      	str	r2, [r3, #0]
    }
 800b066:	687b      	ldr	r3, [r7, #4]
 800b068:	4618      	mov	r0, r3
 800b06a:	370c      	adds	r7, #12
 800b06c:	46bd      	mov	sp, r7
 800b06e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b072:	4770      	bx	lr
 800b074:	0801f2c0 	.word	0x0801f2c0

0800b078 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800b078:	b580      	push	{r7, lr}
 800b07a:	b082      	sub	sp, #8
 800b07c:	af00      	add	r7, sp, #0
 800b07e:	6078      	str	r0, [r7, #4]
    }
 800b080:	6878      	ldr	r0, [r7, #4]
 800b082:	f7ff ffe9 	bl	800b058 <_ZN8touchgfx7MVPHeapD1Ev>
 800b086:	2114      	movs	r1, #20
 800b088:	6878      	ldr	r0, [r7, #4]
 800b08a:	f010 fc2c 	bl	801b8e6 <_ZdlPvj>
 800b08e:	687b      	ldr	r3, [r7, #4]
 800b090:	4618      	mov	r0, r3
 800b092:	3708      	adds	r7, #8
 800b094:	46bd      	mov	sp, r7
 800b096:	bd80      	pop	{r7, pc}

0800b098 <_ZN8touchgfx3LCDD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~LCD()
 800b098:	b480      	push	{r7}
 800b09a:	b083      	sub	sp, #12
 800b09c:	af00      	add	r7, sp, #0
 800b09e:	6078      	str	r0, [r7, #4]
    {
 800b0a0:	4a04      	ldr	r2, [pc, #16]	; (800b0b4 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800b0a2:	687b      	ldr	r3, [r7, #4]
 800b0a4:	601a      	str	r2, [r3, #0]
    }
 800b0a6:	687b      	ldr	r3, [r7, #4]
 800b0a8:	4618      	mov	r0, r3
 800b0aa:	370c      	adds	r7, #12
 800b0ac:	46bd      	mov	sp, r7
 800b0ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0b2:	4770      	bx	lr
 800b0b4:	08020114 	.word	0x08020114

0800b0b8 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800b0b8:	b580      	push	{r7, lr}
 800b0ba:	b082      	sub	sp, #8
 800b0bc:	af00      	add	r7, sp, #0
 800b0be:	6078      	str	r0, [r7, #4]
    }
 800b0c0:	6878      	ldr	r0, [r7, #4]
 800b0c2:	f7ff ffe9 	bl	800b098 <_ZN8touchgfx3LCDD1Ev>
 800b0c6:	2108      	movs	r1, #8
 800b0c8:	6878      	ldr	r0, [r7, #4]
 800b0ca:	f010 fc0c 	bl	801b8e6 <_ZdlPvj>
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	4618      	mov	r0, r3
 800b0d2:	3708      	adds	r7, #8
 800b0d4:	46bd      	mov	sp, r7
 800b0d6:	bd80      	pop	{r7, pc}

0800b0d8 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
     *
     *        Defines the state of a drag.
     */
    struct DragState
    {
        DragState() : startX(0),
 800b0d8:	b480      	push	{r7}
 800b0da:	b083      	sub	sp, #12
 800b0dc:	af00      	add	r7, sp, #0
 800b0de:	6078      	str	r0, [r7, #4]
            downX(0),
            downY(0),
            tickCount(0),
            velocityX(0),
            velocityY(0),
            inProgress(false)
 800b0e0:	687b      	ldr	r3, [r7, #4]
 800b0e2:	2200      	movs	r2, #0
 800b0e4:	801a      	strh	r2, [r3, #0]
 800b0e6:	687b      	ldr	r3, [r7, #4]
 800b0e8:	2200      	movs	r2, #0
 800b0ea:	805a      	strh	r2, [r3, #2]
 800b0ec:	687b      	ldr	r3, [r7, #4]
 800b0ee:	2200      	movs	r2, #0
 800b0f0:	809a      	strh	r2, [r3, #4]
 800b0f2:	687b      	ldr	r3, [r7, #4]
 800b0f4:	2200      	movs	r2, #0
 800b0f6:	80da      	strh	r2, [r3, #6]
 800b0f8:	687b      	ldr	r3, [r7, #4]
 800b0fa:	2200      	movs	r2, #0
 800b0fc:	811a      	strh	r2, [r3, #8]
 800b0fe:	687b      	ldr	r3, [r7, #4]
 800b100:	2200      	movs	r2, #0
 800b102:	815a      	strh	r2, [r3, #10]
 800b104:	687b      	ldr	r3, [r7, #4]
 800b106:	2200      	movs	r2, #0
 800b108:	819a      	strh	r2, [r3, #12]
 800b10a:	687b      	ldr	r3, [r7, #4]
 800b10c:	2200      	movs	r2, #0
 800b10e:	739a      	strb	r2, [r3, #14]
        {
        }
 800b110:	687b      	ldr	r3, [r7, #4]
 800b112:	4618      	mov	r0, r3
 800b114:	370c      	adds	r7, #12
 800b116:	46bd      	mov	sp, r7
 800b118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b11c:	4770      	bx	lr

0800b11e <_ZN8touchgfx8GesturesC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Does nothing.
     */
    Gestures() : listener(0), dragThresholdValue(0) { }
 800b11e:	b580      	push	{r7, lr}
 800b120:	b082      	sub	sp, #8
 800b122:	af00      	add	r7, sp, #0
 800b124:	6078      	str	r0, [r7, #4]
 800b126:	687b      	ldr	r3, [r7, #4]
 800b128:	4618      	mov	r0, r3
 800b12a:	f7ff ffd5 	bl	800b0d8 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800b12e:	687b      	ldr	r3, [r7, #4]
 800b130:	2200      	movs	r2, #0
 800b132:	611a      	str	r2, [r3, #16]
 800b134:	687b      	ldr	r3, [r7, #4]
 800b136:	2200      	movs	r2, #0
 800b138:	829a      	strh	r2, [r3, #20]
 800b13a:	687b      	ldr	r3, [r7, #4]
 800b13c:	4618      	mov	r0, r3
 800b13e:	3708      	adds	r7, #8
 800b140:	46bd      	mov	sp, r7
 800b142:	bd80      	pop	{r7, pc}

0800b144 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height) :
 800b144:	b580      	push	{r7, lr}
 800b146:	b084      	sub	sp, #16
 800b148:	af00      	add	r7, sp, #0
 800b14a:	60f8      	str	r0, [r7, #12]
 800b14c:	60b9      	str	r1, [r7, #8]
 800b14e:	607a      	str	r2, [r7, #4]
 800b150:	603b      	str	r3, [r7, #0]
        displayOrientationChangeRequested(false)
 800b152:	4a44      	ldr	r2, [pc, #272]	; (800b264 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x120>)
 800b154:	68fb      	ldr	r3, [r7, #12]
 800b156:	601a      	str	r2, [r3, #0]
 800b158:	68fb      	ldr	r3, [r7, #12]
 800b15a:	68ba      	ldr	r2, [r7, #8]
 800b15c:	605a      	str	r2, [r3, #4]
 800b15e:	68fb      	ldr	r3, [r7, #12]
 800b160:	687a      	ldr	r2, [r7, #4]
 800b162:	609a      	str	r2, [r3, #8]
 800b164:	68fb      	ldr	r3, [r7, #12]
 800b166:	683a      	ldr	r2, [r7, #0]
 800b168:	60da      	str	r2, [r3, #12]
 800b16a:	68fb      	ldr	r3, [r7, #12]
 800b16c:	2200      	movs	r2, #0
 800b16e:	611a      	str	r2, [r3, #16]
 800b170:	68fb      	ldr	r3, [r7, #12]
 800b172:	2200      	movs	r2, #0
 800b174:	615a      	str	r2, [r3, #20]
 800b176:	68fb      	ldr	r3, [r7, #12]
 800b178:	2200      	movs	r2, #0
 800b17a:	619a      	str	r2, [r3, #24]
 800b17c:	68fb      	ldr	r3, [r7, #12]
 800b17e:	331c      	adds	r3, #28
 800b180:	4618      	mov	r0, r3
 800b182:	f7ff ffcc 	bl	800b11e <_ZN8touchgfx8GesturesC1Ev>
 800b186:	68fb      	ldr	r3, [r7, #12]
 800b188:	2200      	movs	r2, #0
 800b18a:	639a      	str	r2, [r3, #56]	; 0x38
 800b18c:	68fb      	ldr	r3, [r7, #12]
 800b18e:	2200      	movs	r2, #0
 800b190:	63da      	str	r2, [r3, #60]	; 0x3c
 800b192:	68fb      	ldr	r3, [r7, #12]
 800b194:	2200      	movs	r2, #0
 800b196:	641a      	str	r2, [r3, #64]	; 0x40
 800b198:	68fb      	ldr	r3, [r7, #12]
 800b19a:	2200      	movs	r2, #0
 800b19c:	645a      	str	r2, [r3, #68]	; 0x44
 800b19e:	68fb      	ldr	r3, [r7, #12]
 800b1a0:	2200      	movs	r2, #0
 800b1a2:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800b1a6:	68fb      	ldr	r3, [r7, #12]
 800b1a8:	2201      	movs	r2, #1
 800b1aa:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 800b1ae:	68fb      	ldr	r3, [r7, #12]
 800b1b0:	2201      	movs	r2, #1
 800b1b2:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 800b1b6:	68fb      	ldr	r3, [r7, #12]
 800b1b8:	2200      	movs	r2, #0
 800b1ba:	64da      	str	r2, [r3, #76]	; 0x4c
 800b1bc:	68fb      	ldr	r3, [r7, #12]
 800b1be:	3350      	adds	r3, #80	; 0x50
 800b1c0:	4618      	mov	r0, r3
 800b1c2:	f7fd fe68 	bl	8008e96 <_ZN8touchgfx4RectC1Ev>
 800b1c6:	68fb      	ldr	r3, [r7, #12]
 800b1c8:	2201      	movs	r2, #1
 800b1ca:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 800b1ce:	68fb      	ldr	r3, [r7, #12]
 800b1d0:	2200      	movs	r2, #0
 800b1d2:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 800b1d6:	68fb      	ldr	r3, [r7, #12]
 800b1d8:	2200      	movs	r2, #0
 800b1da:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 800b1de:	68fb      	ldr	r3, [r7, #12]
 800b1e0:	2201      	movs	r2, #1
 800b1e2:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 800b1e6:	68fb      	ldr	r3, [r7, #12]
 800b1e8:	2200      	movs	r2, #0
 800b1ea:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800b1ee:	68fb      	ldr	r3, [r7, #12]
 800b1f0:	2200      	movs	r2, #0
 800b1f2:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 800b1f6:	68fb      	ldr	r3, [r7, #12]
 800b1f8:	2200      	movs	r2, #0
 800b1fa:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 800b1fe:	68fb      	ldr	r3, [r7, #12]
 800b200:	2200      	movs	r2, #0
 800b202:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800b206:	68fb      	ldr	r3, [r7, #12]
 800b208:	2200      	movs	r2, #0
 800b20a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800b20e:	68fb      	ldr	r3, [r7, #12]
 800b210:	2200      	movs	r2, #0
 800b212:	671a      	str	r2, [r3, #112]	; 0x70
 800b214:	68fb      	ldr	r3, [r7, #12]
 800b216:	2200      	movs	r2, #0
 800b218:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
        instance = this;
 800b21c:	4a12      	ldr	r2, [pc, #72]	; (800b268 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x124>)
 800b21e:	68fb      	ldr	r3, [r7, #12]
 800b220:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
 800b222:	4a12      	ldr	r2, [pc, #72]	; (800b26c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800b224:	8b3b      	ldrh	r3, [r7, #24]
 800b226:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
 800b228:	4a11      	ldr	r2, [pc, #68]	; (800b270 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800b22a:	8bbb      	ldrh	r3, [r7, #28]
 800b22c:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 800b22e:	4b11      	ldr	r3, [pc, #68]	; (800b274 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x130>)
 800b230:	2200      	movs	r2, #0
 800b232:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800b234:	4b0d      	ldr	r3, [pc, #52]	; (800b26c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800b236:	881a      	ldrh	r2, [r3, #0]
 800b238:	4b0f      	ldr	r3, [pc, #60]	; (800b278 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x134>)
 800b23a:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800b23c:	4b0c      	ldr	r3, [pc, #48]	; (800b270 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800b23e:	881a      	ldrh	r2, [r3, #0]
 800b240:	4b0e      	ldr	r3, [pc, #56]	; (800b27c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
 800b242:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800b244:	8b3a      	ldrh	r2, [r7, #24]
 800b246:	8bbb      	ldrh	r3, [r7, #28]
 800b248:	429a      	cmp	r2, r3
 800b24a:	bf34      	ite	cc
 800b24c:	2301      	movcc	r3, #1
 800b24e:	2300      	movcs	r3, #0
 800b250:	b2db      	uxtb	r3, r3
 800b252:	461a      	mov	r2, r3
 800b254:	68fb      	ldr	r3, [r7, #12]
 800b256:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800b25a:	68fb      	ldr	r3, [r7, #12]
 800b25c:	4618      	mov	r0, r3
 800b25e:	3710      	adds	r7, #16
 800b260:	46bd      	mov	sp, r7
 800b262:	bd80      	pop	{r7, pc}
 800b264:	0801f8e4 	.word	0x0801f8e4
 800b268:	200017a4 	.word	0x200017a4
 800b26c:	20001798 	.word	0x20001798
 800b270:	2000179a 	.word	0x2000179a
 800b274:	2000179c 	.word	0x2000179c
 800b278:	2000179e 	.word	0x2000179e
 800b27c:	200017a0 	.word	0x200017a0

0800b280 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800b280:	b580      	push	{r7, lr}
 800b282:	b082      	sub	sp, #8
 800b284:	af00      	add	r7, sp, #0
 800b286:	6078      	str	r0, [r7, #4]
 800b288:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800b28a:	683b      	ldr	r3, [r7, #0]
 800b28c:	4618      	mov	r0, r3
 800b28e:	f7fd fc07 	bl	8008aa0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800b292:	bf00      	nop
 800b294:	3708      	adds	r7, #8
 800b296:	46bd      	mov	sp, r7
 800b298:	bd80      	pop	{r7, pc}
	...

0800b29c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800b29c:	b580      	push	{r7, lr}
 800b29e:	b086      	sub	sp, #24
 800b2a0:	af02      	add	r7, sp, #8
 800b2a2:	60f8      	str	r0, [r7, #12]
 800b2a4:	60b9      	str	r1, [r7, #8]
 800b2a6:	607a      	str	r2, [r7, #4]
 800b2a8:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800b2aa:	68f8      	ldr	r0, [r7, #12]
 800b2ac:	69bb      	ldr	r3, [r7, #24]
 800b2ae:	9300      	str	r3, [sp, #0]
 800b2b0:	683b      	ldr	r3, [r7, #0]
 800b2b2:	687a      	ldr	r2, [r7, #4]
 800b2b4:	68b9      	ldr	r1, [r7, #8]
 800b2b6:	f7ff feaf 	bl	800b018 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800b2ba:	4a04      	ldr	r2, [pc, #16]	; (800b2cc <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800b2bc:	68fb      	ldr	r3, [r7, #12]
 800b2be:	601a      	str	r2, [r3, #0]
    {

    }
 800b2c0:	68fb      	ldr	r3, [r7, #12]
 800b2c2:	4618      	mov	r0, r3
 800b2c4:	3710      	adds	r7, #16
 800b2c6:	46bd      	mov	sp, r7
 800b2c8:	bd80      	pop	{r7, pc}
 800b2ca:	bf00      	nop
 800b2cc:	0801f2ac 	.word	0x0801f2ac

0800b2d0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800b2d0:	b580      	push	{r7, lr}
 800b2d2:	af00      	add	r7, sp, #0
 800b2d4:	4801      	ldr	r0, [pc, #4]	; (800b2dc <__tcf_0+0xc>)
 800b2d6:	f000 f9eb 	bl	800b6b0 <_ZN12FrontendHeapD1Ev>
 800b2da:	bd80      	pop	{r7, pc}
 800b2dc:	200006c8 	.word	0x200006c8

0800b2e0 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800b2e0:	b580      	push	{r7, lr}
 800b2e2:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800b2e4:	4b12      	ldr	r3, [pc, #72]	; (800b330 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800b2e6:	781b      	ldrb	r3, [r3, #0]
 800b2e8:	f3bf 8f5b 	dmb	ish
 800b2ec:	b2db      	uxtb	r3, r3
 800b2ee:	f003 0301 	and.w	r3, r3, #1
 800b2f2:	2b00      	cmp	r3, #0
 800b2f4:	bf0c      	ite	eq
 800b2f6:	2301      	moveq	r3, #1
 800b2f8:	2300      	movne	r3, #0
 800b2fa:	b2db      	uxtb	r3, r3
 800b2fc:	2b00      	cmp	r3, #0
 800b2fe:	d013      	beq.n	800b328 <_ZN12FrontendHeap11getInstanceEv+0x48>
 800b300:	480b      	ldr	r0, [pc, #44]	; (800b330 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800b302:	f010 faf2 	bl	801b8ea <__cxa_guard_acquire>
 800b306:	4603      	mov	r3, r0
 800b308:	2b00      	cmp	r3, #0
 800b30a:	bf14      	ite	ne
 800b30c:	2301      	movne	r3, #1
 800b30e:	2300      	moveq	r3, #0
 800b310:	b2db      	uxtb	r3, r3
 800b312:	2b00      	cmp	r3, #0
 800b314:	d008      	beq.n	800b328 <_ZN12FrontendHeap11getInstanceEv+0x48>
 800b316:	4807      	ldr	r0, [pc, #28]	; (800b334 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800b318:	f000 f832 	bl	800b380 <_ZN12FrontendHeapC1Ev>
 800b31c:	4806      	ldr	r0, [pc, #24]	; (800b338 <_ZN12FrontendHeap11getInstanceEv+0x58>)
 800b31e:	f010 fb2f 	bl	801b980 <atexit>
 800b322:	4803      	ldr	r0, [pc, #12]	; (800b330 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800b324:	f010 faed 	bl	801b902 <__cxa_guard_release>
        return instance;
 800b328:	4b02      	ldr	r3, [pc, #8]	; (800b334 <_ZN12FrontendHeap11getInstanceEv+0x54>)
    }
 800b32a:	4618      	mov	r0, r3
 800b32c:	bd80      	pop	{r7, pc}
 800b32e:	bf00      	nop
 800b330:	20000a78 	.word	0x20000a78
 800b334:	200006c8 	.word	0x200006c8
 800b338:	0800b2d1 	.word	0x0800b2d1

0800b33c <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800b33c:	b580      	push	{r7, lr}
 800b33e:	b082      	sub	sp, #8
 800b340:	af00      	add	r7, sp, #0
 800b342:	6078      	str	r0, [r7, #4]
 800b344:	4a05      	ldr	r2, [pc, #20]	; (800b35c <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	601a      	str	r2, [r3, #0]
 800b34a:	687b      	ldr	r3, [r7, #4]
 800b34c:	4618      	mov	r0, r3
 800b34e:	f7ff fe83 	bl	800b058 <_ZN8touchgfx7MVPHeapD1Ev>
 800b352:	687b      	ldr	r3, [r7, #4]
 800b354:	4618      	mov	r0, r3
 800b356:	3708      	adds	r7, #8
 800b358:	46bd      	mov	sp, r7
 800b35a:	bd80      	pop	{r7, pc}
 800b35c:	0801f2ac 	.word	0x0801f2ac

0800b360 <_ZN16FrontendHeapBaseD0Ev>:
 800b360:	b580      	push	{r7, lr}
 800b362:	b082      	sub	sp, #8
 800b364:	af00      	add	r7, sp, #0
 800b366:	6078      	str	r0, [r7, #4]
 800b368:	6878      	ldr	r0, [r7, #4]
 800b36a:	f7ff ffe7 	bl	800b33c <_ZN16FrontendHeapBaseD1Ev>
 800b36e:	2114      	movs	r1, #20
 800b370:	6878      	ldr	r0, [r7, #4]
 800b372:	f010 fab8 	bl	801b8e6 <_ZdlPvj>
 800b376:	687b      	ldr	r3, [r7, #4]
 800b378:	4618      	mov	r0, r3
 800b37a:	3708      	adds	r7, #8
 800b37c:	46bd      	mov	sp, r7
 800b37e:	bd80      	pop	{r7, pc}

0800b380 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800b380:	b590      	push	{r4, r7, lr}
 800b382:	b085      	sub	sp, #20
 800b384:	af02      	add	r7, sp, #8
 800b386:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800b388:	6878      	ldr	r0, [r7, #4]
 800b38a:	687b      	ldr	r3, [r7, #4]
 800b38c:	f103 0114 	add.w	r1, r3, #20
 800b390:	687b      	ldr	r3, [r7, #4]
 800b392:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800b396:	687b      	ldr	r3, [r7, #4]
 800b398:	f503 7412 	add.w	r4, r3, #584	; 0x248
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800b39c:	687b      	ldr	r3, [r7, #4]
 800b39e:	f503 7317 	add.w	r3, r3, #604	; 0x25c
                     app(model, *this)
 800b3a2:	9300      	str	r3, [sp, #0]
 800b3a4:	4623      	mov	r3, r4
 800b3a6:	f7ff ff79 	bl	800b29c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800b3aa:	4a18      	ldr	r2, [pc, #96]	; (800b40c <_ZN12FrontendHeapC1Ev+0x8c>)
 800b3ac:	687b      	ldr	r3, [r7, #4]
 800b3ae:	601a      	str	r2, [r3, #0]
 800b3b0:	687b      	ldr	r3, [r7, #4]
 800b3b2:	3314      	adds	r3, #20
 800b3b4:	4618      	mov	r0, r3
 800b3b6:	f000 f8dd 	bl	800b574 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b3ba:	687b      	ldr	r3, [r7, #4]
 800b3bc:	332c      	adds	r3, #44	; 0x2c
 800b3be:	4618      	mov	r0, r3
 800b3c0:	f000 f90c 	bl	800b5dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b3c4:	687b      	ldr	r3, [r7, #4]
 800b3c6:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800b3ca:	4618      	mov	r0, r3
 800b3cc:	f000 f93c 	bl	800b648 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b3d0:	687b      	ldr	r3, [r7, #4]
 800b3d2:	f503 7017 	add.w	r0, r3, #604	; 0x25c
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	f503 736b 	add.w	r3, r3, #940	; 0x3ac
 800b3dc:	687a      	ldr	r2, [r7, #4]
 800b3de:	4619      	mov	r1, r3
 800b3e0:	f7fe fcec 	bl	8009dbc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800b3e4:	687b      	ldr	r3, [r7, #4]
 800b3e6:	f503 736b 	add.w	r3, r3, #940	; 0x3ac
 800b3ea:	4618      	mov	r0, r3
 800b3ec:	f7fe fcfc 	bl	8009de8 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800b3f0:	687a      	ldr	r2, [r7, #4]
 800b3f2:	687b      	ldr	r3, [r7, #4]
 800b3f4:	f503 7317 	add.w	r3, r3, #604	; 0x25c
 800b3f8:	4619      	mov	r1, r3
 800b3fa:	4610      	mov	r0, r2
 800b3fc:	f7ff ff40 	bl	800b280 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	4618      	mov	r0, r3
 800b404:	370c      	adds	r7, #12
 800b406:	46bd      	mov	sp, r7
 800b408:	bd90      	pop	{r4, r7, pc}
 800b40a:	bf00      	nop
 800b40c:	0801f1fc 	.word	0x0801f1fc

0800b410 <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
{
public:
    LCD16bpp();

    virtual ~LCD16bpp()
 800b410:	b580      	push	{r7, lr}
 800b412:	b082      	sub	sp, #8
 800b414:	af00      	add	r7, sp, #0
 800b416:	6078      	str	r0, [r7, #4]
    {
 800b418:	4a05      	ldr	r2, [pc, #20]	; (800b430 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	601a      	str	r2, [r3, #0]
 800b41e:	687b      	ldr	r3, [r7, #4]
 800b420:	4618      	mov	r0, r3
 800b422:	f7ff fe39 	bl	800b098 <_ZN8touchgfx3LCDD1Ev>
    }
 800b426:	687b      	ldr	r3, [r7, #4]
 800b428:	4618      	mov	r0, r3
 800b42a:	3708      	adds	r7, #8
 800b42c:	46bd      	mov	sp, r7
 800b42e:	bd80      	pop	{r7, pc}
 800b430:	080213b0 	.word	0x080213b0

0800b434 <_ZN8touchgfx8LCD16bppD0Ev>:
    virtual ~LCD16bpp()
 800b434:	b580      	push	{r7, lr}
 800b436:	b082      	sub	sp, #8
 800b438:	af00      	add	r7, sp, #0
 800b43a:	6078      	str	r0, [r7, #4]
    }
 800b43c:	6878      	ldr	r0, [r7, #4]
 800b43e:	f7ff ffe7 	bl	800b410 <_ZN8touchgfx8LCD16bppD1Ev>
 800b442:	2178      	movs	r1, #120	; 0x78
 800b444:	6878      	ldr	r0, [r7, #4]
 800b446:	f010 fa4e 	bl	801b8e6 <_ZdlPvj>
 800b44a:	687b      	ldr	r3, [r7, #4]
 800b44c:	4618      	mov	r0, r3
 800b44e:	3708      	adds	r7, #8
 800b450:	46bd      	mov	sp, r7
 800b452:	bd80      	pop	{r7, pc}

0800b454 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : touchgfx::HAL(dma, display, tc, width, height)
 800b454:	b580      	push	{r7, lr}
 800b456:	b086      	sub	sp, #24
 800b458:	af02      	add	r7, sp, #8
 800b45a:	60f8      	str	r0, [r7, #12]
 800b45c:	60b9      	str	r1, [r7, #8]
 800b45e:	607a      	str	r2, [r7, #4]
 800b460:	603b      	str	r3, [r7, #0]
 800b462:	68f8      	ldr	r0, [r7, #12]
 800b464:	8bbb      	ldrh	r3, [r7, #28]
 800b466:	9301      	str	r3, [sp, #4]
 800b468:	8b3b      	ldrh	r3, [r7, #24]
 800b46a:	9300      	str	r3, [sp, #0]
 800b46c:	683b      	ldr	r3, [r7, #0]
 800b46e:	687a      	ldr	r2, [r7, #4]
 800b470:	68b9      	ldr	r1, [r7, #8]
 800b472:	f7ff fe67 	bl	800b144 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800b476:	4a04      	ldr	r2, [pc, #16]	; (800b488 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b478:	68fb      	ldr	r3, [r7, #12]
 800b47a:	601a      	str	r2, [r3, #0]
    }
 800b47c:	68fb      	ldr	r3, [r7, #12]
 800b47e:	4618      	mov	r0, r3
 800b480:	3710      	adds	r7, #16
 800b482:	46bd      	mov	sp, r7
 800b484:	bd80      	pop	{r7, pc}
 800b486:	bf00      	nop
 800b488:	0801f2d0 	.word	0x0801f2d0

0800b48c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800b48c:	b580      	push	{r7, lr}
 800b48e:	b086      	sub	sp, #24
 800b490:	af02      	add	r7, sp, #8
 800b492:	60f8      	str	r0, [r7, #12]
 800b494:	60b9      	str	r1, [r7, #8]
 800b496:	607a      	str	r2, [r7, #4]
 800b498:	603b      	str	r3, [r7, #0]
 800b49a:	68f8      	ldr	r0, [r7, #12]
 800b49c:	8bbb      	ldrh	r3, [r7, #28]
 800b49e:	9301      	str	r3, [sp, #4]
 800b4a0:	8b3b      	ldrh	r3, [r7, #24]
 800b4a2:	9300      	str	r3, [sp, #0]
 800b4a4:	683b      	ldr	r3, [r7, #0]
 800b4a6:	687a      	ldr	r2, [r7, #4]
 800b4a8:	68b9      	ldr	r1, [r7, #8]
 800b4aa:	f7ff ffd3 	bl	800b454 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b4ae:	4a04      	ldr	r2, [pc, #16]	; (800b4c0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b4b0:	68fb      	ldr	r3, [r7, #12]
 800b4b2:	601a      	str	r2, [r3, #0]
    }
 800b4b4:	68fb      	ldr	r3, [r7, #12]
 800b4b6:	4618      	mov	r0, r3
 800b4b8:	3710      	adds	r7, #16
 800b4ba:	46bd      	mov	sp, r7
 800b4bc:	bd80      	pop	{r7, pc}
 800b4be:	bf00      	nop
 800b4c0:	0801f0d4 	.word	0x0801f0d4

0800b4c4 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800b4c4:	b480      	push	{r7}
 800b4c6:	b083      	sub	sp, #12
 800b4c8:	af00      	add	r7, sp, #0
 800b4ca:	6078      	str	r0, [r7, #4]
 800b4cc:	4a04      	ldr	r2, [pc, #16]	; (800b4e0 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	601a      	str	r2, [r3, #0]
 800b4d2:	687b      	ldr	r3, [r7, #4]
 800b4d4:	4618      	mov	r0, r3
 800b4d6:	370c      	adds	r7, #12
 800b4d8:	46bd      	mov	sp, r7
 800b4da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4de:	4770      	bx	lr
 800b4e0:	0801f0bc 	.word	0x0801f0bc

0800b4e4 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800b4e4:	b580      	push	{r7, lr}
 800b4e6:	b082      	sub	sp, #8
 800b4e8:	af00      	add	r7, sp, #0
 800b4ea:	6078      	str	r0, [r7, #4]
 800b4ec:	687b      	ldr	r3, [r7, #4]
 800b4ee:	4618      	mov	r0, r3
 800b4f0:	f7ff ffe8 	bl	800b4c4 <_ZN8touchgfx15TouchControllerC1Ev>
 800b4f4:	4a03      	ldr	r2, [pc, #12]	; (800b504 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800b4f6:	687b      	ldr	r3, [r7, #4]
 800b4f8:	601a      	str	r2, [r3, #0]
 800b4fa:	687b      	ldr	r3, [r7, #4]
 800b4fc:	4618      	mov	r0, r3
 800b4fe:	3708      	adds	r7, #8
 800b500:	46bd      	mov	sp, r7
 800b502:	bd80      	pop	{r7, pc}
 800b504:	0801f0a4 	.word	0x0801f0a4

0800b508 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800b508:	b590      	push	{r4, r7, lr}
 800b50a:	b085      	sub	sp, #20
 800b50c:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800b50e:	f7fe fb45 	bl	8009b9c <_ZN14BitmapDatabase11getInstanceEv>
 800b512:	4604      	mov	r4, r0
 800b514:	f7fe fb4c 	bl	8009bb0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800b518:	4603      	mov	r3, r0
 800b51a:	4619      	mov	r1, r3
 800b51c:	2300      	movs	r3, #0
 800b51e:	9300      	str	r3, [sp, #0]
 800b520:	2300      	movs	r3, #0
 800b522:	2200      	movs	r2, #0
 800b524:	4620      	mov	r0, r4
 800b526:	f004 fd41 	bl	800ffac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
 800b52a:	480c      	ldr	r0, [pc, #48]	; (800b55c <touchgfx_init+0x54>)
 800b52c:	f7ff fd64 	bl	800aff8 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
 800b530:	2000      	movs	r0, #0
 800b532:	f7fe fb61 	bl	8009bf8 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 800b536:	480a      	ldr	r0, [pc, #40]	; (800b560 <touchgfx_init+0x58>)
 800b538:	f004 fc86 	bl	800fe48 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
 800b53c:	f7ff fed0 	bl	800b2e0 <_ZN12FrontendHeap11getInstanceEv>
 800b540:	6078      	str	r0, [r7, #4]
  (void)heap; // we need to obtain the reference above to initialize the frontend heap.

  hal.initialize();
 800b542:	4808      	ldr	r0, [pc, #32]	; (800b564 <touchgfx_init+0x5c>)
 800b544:	f7fe fff2 	bl	800a52c <_ZN11TouchGFXHAL10initializeEv>
  hal.enableLCDControllerInterrupt();
 800b548:	4806      	ldr	r0, [pc, #24]	; (800b564 <touchgfx_init+0x5c>)
 800b54a:	f7ff f848 	bl	800a5de <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>
  hal.enableInterrupts();
 800b54e:	4805      	ldr	r0, [pc, #20]	; (800b564 <touchgfx_init+0x5c>)
 800b550:	f7ff f82d 	bl	800a5ae <_ZN11TouchGFXHAL16enableInterruptsEv>
}
 800b554:	bf00      	nop
 800b556:	370c      	adds	r7, #12
 800b558:	46bd      	mov	sp, r7
 800b55a:	bd90      	pop	{r4, r7, pc}
 800b55c:	20001718 	.word	0x20001718
 800b560:	20000020 	.word	0x20000020
 800b564:	2000171c 	.word	0x2000171c

0800b568 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800b568:	b580      	push	{r7, lr}
 800b56a:	af00      	add	r7, sp, #0
 /*
  * This function check if a VSYNC has occured.
  * If VSYNC has occured, signal TouchGFX to start a rendering
  */
  OSWrappers::waitForVSync();
 800b56c:	f7ff f8be 	bl	800a6ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
}
 800b570:	bf00      	nop
 800b572:	bd80      	pop	{r7, pc}

0800b574 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs an empty Partition.
     */
    Partition() : AbstractPartition()
 800b574:	b580      	push	{r7, lr}
 800b576:	b082      	sub	sp, #8
 800b578:	af00      	add	r7, sp, #0
 800b57a:	6078      	str	r0, [r7, #4]
 800b57c:	687b      	ldr	r3, [r7, #4]
 800b57e:	4618      	mov	r0, r3
 800b580:	f000 fc6c 	bl	800be5c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b584:	4a03      	ldr	r2, [pc, #12]	; (800b594 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b586:	687b      	ldr	r3, [r7, #4]
 800b588:	601a      	str	r2, [r3, #0]
    {
    }
 800b58a:	687b      	ldr	r3, [r7, #4]
 800b58c:	4618      	mov	r0, r3
 800b58e:	3708      	adds	r7, #8
 800b590:	46bd      	mov	sp, r7
 800b592:	bd80      	pop	{r7, pc}
 800b594:	0801f278 	.word	0x0801f278

0800b598 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    /**
     * @fn virtual Partition::~Partition()
     *
     * @brief Destructor.
     */
    virtual ~Partition()
 800b598:	b580      	push	{r7, lr}
 800b59a:	b082      	sub	sp, #8
 800b59c:	af00      	add	r7, sp, #0
 800b59e:	6078      	str	r0, [r7, #4]
    {
    }
 800b5a0:	4a05      	ldr	r2, [pc, #20]	; (800b5b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	601a      	str	r2, [r3, #0]
 800b5a6:	687b      	ldr	r3, [r7, #4]
 800b5a8:	4618      	mov	r0, r3
 800b5aa:	f000 fc55 	bl	800be58 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	4618      	mov	r0, r3
 800b5b2:	3708      	adds	r7, #8
 800b5b4:	46bd      	mov	sp, r7
 800b5b6:	bd80      	pop	{r7, pc}
 800b5b8:	0801f278 	.word	0x0801f278

0800b5bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800b5bc:	b580      	push	{r7, lr}
 800b5be:	b082      	sub	sp, #8
 800b5c0:	af00      	add	r7, sp, #0
 800b5c2:	6078      	str	r0, [r7, #4]
    }
 800b5c4:	6878      	ldr	r0, [r7, #4]
 800b5c6:	f7ff ffe7 	bl	800b598 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b5ca:	2118      	movs	r1, #24
 800b5cc:	6878      	ldr	r0, [r7, #4]
 800b5ce:	f010 f98a 	bl	801b8e6 <_ZdlPvj>
 800b5d2:	687b      	ldr	r3, [r7, #4]
 800b5d4:	4618      	mov	r0, r3
 800b5d6:	3708      	adds	r7, #8
 800b5d8:	46bd      	mov	sp, r7
 800b5da:	bd80      	pop	{r7, pc}

0800b5dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800b5dc:	b580      	push	{r7, lr}
 800b5de:	b082      	sub	sp, #8
 800b5e0:	af00      	add	r7, sp, #0
 800b5e2:	6078      	str	r0, [r7, #4]
 800b5e4:	687b      	ldr	r3, [r7, #4]
 800b5e6:	4618      	mov	r0, r3
 800b5e8:	f000 fc38 	bl	800be5c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b5ec:	4a03      	ldr	r2, [pc, #12]	; (800b5fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b5ee:	687b      	ldr	r3, [r7, #4]
 800b5f0:	601a      	str	r2, [r3, #0]
    }
 800b5f2:	687b      	ldr	r3, [r7, #4]
 800b5f4:	4618      	mov	r0, r3
 800b5f6:	3708      	adds	r7, #8
 800b5f8:	46bd      	mov	sp, r7
 800b5fa:	bd80      	pop	{r7, pc}
 800b5fc:	0801f244 	.word	0x0801f244

0800b600 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800b600:	b580      	push	{r7, lr}
 800b602:	b082      	sub	sp, #8
 800b604:	af00      	add	r7, sp, #0
 800b606:	6078      	str	r0, [r7, #4]
    }
 800b608:	4a05      	ldr	r2, [pc, #20]	; (800b620 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b60a:	687b      	ldr	r3, [r7, #4]
 800b60c:	601a      	str	r2, [r3, #0]
 800b60e:	687b      	ldr	r3, [r7, #4]
 800b610:	4618      	mov	r0, r3
 800b612:	f000 fc21 	bl	800be58 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b616:	687b      	ldr	r3, [r7, #4]
 800b618:	4618      	mov	r0, r3
 800b61a:	3708      	adds	r7, #8
 800b61c:	46bd      	mov	sp, r7
 800b61e:	bd80      	pop	{r7, pc}
 800b620:	0801f244 	.word	0x0801f244

0800b624 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800b624:	b580      	push	{r7, lr}
 800b626:	b082      	sub	sp, #8
 800b628:	af00      	add	r7, sp, #0
 800b62a:	6078      	str	r0, [r7, #4]
    }
 800b62c:	6878      	ldr	r0, [r7, #4]
 800b62e:	f7ff ffe7 	bl	800b600 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b632:	f44f 7107 	mov.w	r1, #540	; 0x21c
 800b636:	6878      	ldr	r0, [r7, #4]
 800b638:	f010 f955 	bl	801b8e6 <_ZdlPvj>
 800b63c:	687b      	ldr	r3, [r7, #4]
 800b63e:	4618      	mov	r0, r3
 800b640:	3708      	adds	r7, #8
 800b642:	46bd      	mov	sp, r7
 800b644:	bd80      	pop	{r7, pc}
	...

0800b648 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800b648:	b580      	push	{r7, lr}
 800b64a:	b082      	sub	sp, #8
 800b64c:	af00      	add	r7, sp, #0
 800b64e:	6078      	str	r0, [r7, #4]
 800b650:	687b      	ldr	r3, [r7, #4]
 800b652:	4618      	mov	r0, r3
 800b654:	f000 fc02 	bl	800be5c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b658:	4a03      	ldr	r2, [pc, #12]	; (800b668 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b65a:	687b      	ldr	r3, [r7, #4]
 800b65c:	601a      	str	r2, [r3, #0]
    }
 800b65e:	687b      	ldr	r3, [r7, #4]
 800b660:	4618      	mov	r0, r3
 800b662:	3708      	adds	r7, #8
 800b664:	46bd      	mov	sp, r7
 800b666:	bd80      	pop	{r7, pc}
 800b668:	0801f210 	.word	0x0801f210

0800b66c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800b66c:	b580      	push	{r7, lr}
 800b66e:	b082      	sub	sp, #8
 800b670:	af00      	add	r7, sp, #0
 800b672:	6078      	str	r0, [r7, #4]
    }
 800b674:	4a05      	ldr	r2, [pc, #20]	; (800b68c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b676:	687b      	ldr	r3, [r7, #4]
 800b678:	601a      	str	r2, [r3, #0]
 800b67a:	687b      	ldr	r3, [r7, #4]
 800b67c:	4618      	mov	r0, r3
 800b67e:	f000 fbeb 	bl	800be58 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b682:	687b      	ldr	r3, [r7, #4]
 800b684:	4618      	mov	r0, r3
 800b686:	3708      	adds	r7, #8
 800b688:	46bd      	mov	sp, r7
 800b68a:	bd80      	pop	{r7, pc}
 800b68c:	0801f210 	.word	0x0801f210

0800b690 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800b690:	b580      	push	{r7, lr}
 800b692:	b082      	sub	sp, #8
 800b694:	af00      	add	r7, sp, #0
 800b696:	6078      	str	r0, [r7, #4]
    }
 800b698:	6878      	ldr	r0, [r7, #4]
 800b69a:	f7ff ffe7 	bl	800b66c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b69e:	2114      	movs	r1, #20
 800b6a0:	6878      	ldr	r0, [r7, #4]
 800b6a2:	f010 f920 	bl	801b8e6 <_ZdlPvj>
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	4618      	mov	r0, r3
 800b6aa:	3708      	adds	r7, #8
 800b6ac:	46bd      	mov	sp, r7
 800b6ae:	bd80      	pop	{r7, pc}

0800b6b0 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800b6b0:	b580      	push	{r7, lr}
 800b6b2:	b082      	sub	sp, #8
 800b6b4:	af00      	add	r7, sp, #0
 800b6b6:	6078      	str	r0, [r7, #4]
 800b6b8:	4a10      	ldr	r2, [pc, #64]	; (800b6fc <_ZN12FrontendHeapD1Ev+0x4c>)
 800b6ba:	687b      	ldr	r3, [r7, #4]
 800b6bc:	601a      	str	r2, [r3, #0]
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	f503 7317 	add.w	r3, r3, #604	; 0x25c
 800b6c4:	4618      	mov	r0, r3
 800b6c6:	f7fe fb43 	bl	8009d50 <_ZN19FrontendApplicationD1Ev>
 800b6ca:	687b      	ldr	r3, [r7, #4]
 800b6cc:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800b6d0:	4618      	mov	r0, r3
 800b6d2:	f7ff ffcb 	bl	800b66c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b6d6:	687b      	ldr	r3, [r7, #4]
 800b6d8:	332c      	adds	r3, #44	; 0x2c
 800b6da:	4618      	mov	r0, r3
 800b6dc:	f7ff ff90 	bl	800b600 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b6e0:	687b      	ldr	r3, [r7, #4]
 800b6e2:	3314      	adds	r3, #20
 800b6e4:	4618      	mov	r0, r3
 800b6e6:	f7ff ff57 	bl	800b598 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b6ea:	687b      	ldr	r3, [r7, #4]
 800b6ec:	4618      	mov	r0, r3
 800b6ee:	f7ff fe25 	bl	800b33c <_ZN16FrontendHeapBaseD1Ev>
 800b6f2:	687b      	ldr	r3, [r7, #4]
 800b6f4:	4618      	mov	r0, r3
 800b6f6:	3708      	adds	r7, #8
 800b6f8:	46bd      	mov	sp, r7
 800b6fa:	bd80      	pop	{r7, pc}
 800b6fc:	0801f1fc 	.word	0x0801f1fc

0800b700 <_ZN12FrontendHeapD0Ev>:
 800b700:	b580      	push	{r7, lr}
 800b702:	b082      	sub	sp, #8
 800b704:	af00      	add	r7, sp, #0
 800b706:	6078      	str	r0, [r7, #4]
 800b708:	6878      	ldr	r0, [r7, #4]
 800b70a:	f7ff ffd1 	bl	800b6b0 <_ZN12FrontendHeapD1Ev>
 800b70e:	f44f 716c 	mov.w	r1, #944	; 0x3b0
 800b712:	6878      	ldr	r0, [r7, #4]
 800b714:	f010 f8e7 	bl	801b8e6 <_ZdlPvj>
 800b718:	687b      	ldr	r3, [r7, #4]
 800b71a:	4618      	mov	r0, r3
 800b71c:	3708      	adds	r7, #8
 800b71e:	46bd      	mov	sp, r7
 800b720:	bd80      	pop	{r7, pc}
	...

0800b724 <_Z41__static_initialization_and_destruction_0ii>:
 800b724:	b580      	push	{r7, lr}
 800b726:	b084      	sub	sp, #16
 800b728:	af02      	add	r7, sp, #8
 800b72a:	6078      	str	r0, [r7, #4]
 800b72c:	6039      	str	r1, [r7, #0]
 800b72e:	687b      	ldr	r3, [r7, #4]
 800b730:	2b01      	cmp	r3, #1
 800b732:	d118      	bne.n	800b766 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800b734:	683b      	ldr	r3, [r7, #0]
 800b736:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b73a:	4293      	cmp	r3, r2
 800b73c:	d113      	bne.n	800b766 <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800b73e:	4817      	ldr	r0, [pc, #92]	; (800b79c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b740:	f7ff fed0 	bl	800b4e4 <_ZN20STM32TouchControllerC1Ev>
static STM32F4DMA dma;
 800b744:	4816      	ldr	r0, [pc, #88]	; (800b7a0 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b746:	f7ff f951 	bl	800a9ec <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 800b74a:	4816      	ldr	r0, [pc, #88]	; (800b7a4 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b74c:	f007 fc32 	bl	8012fb4 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 800b750:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800b754:	9301      	str	r3, [sp, #4]
 800b756:	23f0      	movs	r3, #240	; 0xf0
 800b758:	9300      	str	r3, [sp, #0]
 800b75a:	4b10      	ldr	r3, [pc, #64]	; (800b79c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b75c:	4a11      	ldr	r2, [pc, #68]	; (800b7a4 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b75e:	4910      	ldr	r1, [pc, #64]	; (800b7a0 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b760:	4811      	ldr	r0, [pc, #68]	; (800b7a8 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b762:	f7ff fe93 	bl	800b48c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b766:	687b      	ldr	r3, [r7, #4]
 800b768:	2b00      	cmp	r3, #0
 800b76a:	d113      	bne.n	800b794 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b76c:	683b      	ldr	r3, [r7, #0]
 800b76e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b772:	4293      	cmp	r3, r2
 800b774:	d10e      	bne.n	800b794 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b776:	480c      	ldr	r0, [pc, #48]	; (800b7a8 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b778:	f7fe ff3e 	bl	800a5f8 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800b77c:	480b      	ldr	r0, [pc, #44]	; (800b7ac <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800b77e:	f7fc fb69 	bl	8007e54 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800b782:	4808      	ldr	r0, [pc, #32]	; (800b7a4 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b784:	f7ff fe44 	bl	800b410 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32F4DMA dma;
 800b788:	4805      	ldr	r0, [pc, #20]	; (800b7a0 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b78a:	f7ff f959 	bl	800aa40 <_ZN10STM32F4DMAD1Ev>
static STM32TouchController tc;
 800b78e:	4803      	ldr	r0, [pc, #12]	; (800b79c <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b790:	f7fe fca8 	bl	800a0e4 <_ZN20STM32TouchControllerD1Ev>
}
 800b794:	bf00      	nop
 800b796:	3708      	adds	r7, #8
 800b798:	46bd      	mov	sp, r7
 800b79a:	bd80      	pop	{r7, pc}
 800b79c:	20000a7c 	.word	0x20000a7c
 800b7a0:	20000a80 	.word	0x20000a80
 800b7a4:	200016a0 	.word	0x200016a0
 800b7a8:	2000171c 	.word	0x2000171c
 800b7ac:	20000020 	.word	0x20000020

0800b7b0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     *
     * @return An uint16_t.
     *
     * @see touchgfx::AbstractPartition::capacity()
     */
    virtual uint16_t capacity() const
 800b7b0:	b480      	push	{r7}
 800b7b2:	b083      	sub	sp, #12
 800b7b4:	af00      	add	r7, sp, #0
 800b7b6:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800b7b8:	2301      	movs	r3, #1
    }
 800b7ba:	4618      	mov	r0, r3
 800b7bc:	370c      	adds	r7, #12
 800b7be:	46bd      	mov	sp, r7
 800b7c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7c4:	4770      	bx	lr

0800b7c6 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     *
     * @return An uint32_t.
     *
     * @see touchgfx::AbstractPartition::element_size()
     */
    virtual uint32_t element_size()
 800b7c6:	b480      	push	{r7}
 800b7c8:	b083      	sub	sp, #12
 800b7ca:	af00      	add	r7, sp, #0
 800b7cc:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800b7ce:	230c      	movs	r3, #12
    }
 800b7d0:	4618      	mov	r0, r3
 800b7d2:	370c      	adds	r7, #12
 800b7d4:	46bd      	mov	sp, r7
 800b7d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7da:	4770      	bx	lr

0800b7dc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual void* element(uint16_t index)
 800b7dc:	b480      	push	{r7}
 800b7de:	b083      	sub	sp, #12
 800b7e0:	af00      	add	r7, sp, #0
 800b7e2:	6078      	str	r0, [r7, #4]
 800b7e4:	460b      	mov	r3, r1
 800b7e6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b7e8:	887a      	ldrh	r2, [r7, #2]
 800b7ea:	4613      	mov	r3, r2
 800b7ec:	005b      	lsls	r3, r3, #1
 800b7ee:	4413      	add	r3, r2
 800b7f0:	009b      	lsls	r3, r3, #2
 800b7f2:	3308      	adds	r3, #8
 800b7f4:	687a      	ldr	r2, [r7, #4]
 800b7f6:	4413      	add	r3, r2
    }
 800b7f8:	4618      	mov	r0, r3
 800b7fa:	370c      	adds	r7, #12
 800b7fc:	46bd      	mov	sp, r7
 800b7fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b802:	4770      	bx	lr

0800b804 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual const void* element(uint16_t index) const
 800b804:	b480      	push	{r7}
 800b806:	b083      	sub	sp, #12
 800b808:	af00      	add	r7, sp, #0
 800b80a:	6078      	str	r0, [r7, #4]
 800b80c:	460b      	mov	r3, r1
 800b80e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b810:	887a      	ldrh	r2, [r7, #2]
 800b812:	4613      	mov	r3, r2
 800b814:	005b      	lsls	r3, r3, #1
 800b816:	4413      	add	r3, r2
 800b818:	009b      	lsls	r3, r3, #2
 800b81a:	3308      	adds	r3, #8
 800b81c:	687a      	ldr	r2, [r7, #4]
 800b81e:	4413      	add	r3, r2
    }
 800b820:	4618      	mov	r0, r3
 800b822:	370c      	adds	r7, #12
 800b824:	46bd      	mov	sp, r7
 800b826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b82a:	4770      	bx	lr

0800b82c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b82c:	b480      	push	{r7}
 800b82e:	b083      	sub	sp, #12
 800b830:	af00      	add	r7, sp, #0
 800b832:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b834:	2301      	movs	r3, #1
    }
 800b836:	4618      	mov	r0, r3
 800b838:	370c      	adds	r7, #12
 800b83a:	46bd      	mov	sp, r7
 800b83c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b840:	4770      	bx	lr

0800b842 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b842:	b480      	push	{r7}
 800b844:	b083      	sub	sp, #12
 800b846:	af00      	add	r7, sp, #0
 800b848:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b84a:	f44f 7305 	mov.w	r3, #532	; 0x214
    }
 800b84e:	4618      	mov	r0, r3
 800b850:	370c      	adds	r7, #12
 800b852:	46bd      	mov	sp, r7
 800b854:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b858:	4770      	bx	lr

0800b85a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b85a:	b480      	push	{r7}
 800b85c:	b083      	sub	sp, #12
 800b85e:	af00      	add	r7, sp, #0
 800b860:	6078      	str	r0, [r7, #4]
 800b862:	460b      	mov	r3, r1
 800b864:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b866:	887b      	ldrh	r3, [r7, #2]
 800b868:	f44f 7205 	mov.w	r2, #532	; 0x214
 800b86c:	fb02 f303 	mul.w	r3, r2, r3
 800b870:	3308      	adds	r3, #8
 800b872:	687a      	ldr	r2, [r7, #4]
 800b874:	4413      	add	r3, r2
    }
 800b876:	4618      	mov	r0, r3
 800b878:	370c      	adds	r7, #12
 800b87a:	46bd      	mov	sp, r7
 800b87c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b880:	4770      	bx	lr

0800b882 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b882:	b480      	push	{r7}
 800b884:	b083      	sub	sp, #12
 800b886:	af00      	add	r7, sp, #0
 800b888:	6078      	str	r0, [r7, #4]
 800b88a:	460b      	mov	r3, r1
 800b88c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b88e:	887b      	ldrh	r3, [r7, #2]
 800b890:	f44f 7205 	mov.w	r2, #532	; 0x214
 800b894:	fb02 f303 	mul.w	r3, r2, r3
 800b898:	3308      	adds	r3, #8
 800b89a:	687a      	ldr	r2, [r7, #4]
 800b89c:	4413      	add	r3, r2
    }
 800b89e:	4618      	mov	r0, r3
 800b8a0:	370c      	adds	r7, #12
 800b8a2:	46bd      	mov	sp, r7
 800b8a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8a8:	4770      	bx	lr

0800b8aa <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b8aa:	b480      	push	{r7}
 800b8ac:	b083      	sub	sp, #12
 800b8ae:	af00      	add	r7, sp, #0
 800b8b0:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b8b2:	2301      	movs	r3, #1
    }
 800b8b4:	4618      	mov	r0, r3
 800b8b6:	370c      	adds	r7, #12
 800b8b8:	46bd      	mov	sp, r7
 800b8ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8be:	4770      	bx	lr

0800b8c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b8c0:	b480      	push	{r7}
 800b8c2:	b083      	sub	sp, #12
 800b8c4:	af00      	add	r7, sp, #0
 800b8c6:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b8c8:	2310      	movs	r3, #16
    }
 800b8ca:	4618      	mov	r0, r3
 800b8cc:	370c      	adds	r7, #12
 800b8ce:	46bd      	mov	sp, r7
 800b8d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8d4:	4770      	bx	lr

0800b8d6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b8d6:	b480      	push	{r7}
 800b8d8:	b083      	sub	sp, #12
 800b8da:	af00      	add	r7, sp, #0
 800b8dc:	6078      	str	r0, [r7, #4]
 800b8de:	460b      	mov	r3, r1
 800b8e0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b8e2:	887b      	ldrh	r3, [r7, #2]
 800b8e4:	011b      	lsls	r3, r3, #4
 800b8e6:	3308      	adds	r3, #8
 800b8e8:	687a      	ldr	r2, [r7, #4]
 800b8ea:	4413      	add	r3, r2
    }
 800b8ec:	4618      	mov	r0, r3
 800b8ee:	370c      	adds	r7, #12
 800b8f0:	46bd      	mov	sp, r7
 800b8f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8f6:	4770      	bx	lr

0800b8f8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b8f8:	b480      	push	{r7}
 800b8fa:	b083      	sub	sp, #12
 800b8fc:	af00      	add	r7, sp, #0
 800b8fe:	6078      	str	r0, [r7, #4]
 800b900:	460b      	mov	r3, r1
 800b902:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b904:	887b      	ldrh	r3, [r7, #2]
 800b906:	011b      	lsls	r3, r3, #4
 800b908:	3308      	adds	r3, #8
 800b90a:	687a      	ldr	r2, [r7, #4]
 800b90c:	4413      	add	r3, r2
    }
 800b90e:	4618      	mov	r0, r3
 800b910:	370c      	adds	r7, #12
 800b912:	46bd      	mov	sp, r7
 800b914:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b918:	4770      	bx	lr

0800b91a <_GLOBAL__sub_I_touchgfx_init>:
 800b91a:	b580      	push	{r7, lr}
 800b91c:	af00      	add	r7, sp, #0
 800b91e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b922:	2001      	movs	r0, #1
 800b924:	f7ff fefe 	bl	800b724 <_Z41__static_initialization_and_destruction_0ii>
 800b928:	bd80      	pop	{r7, pc}

0800b92a <_GLOBAL__sub_D_touchgfx_init>:
 800b92a:	b580      	push	{r7, lr}
 800b92c:	af00      	add	r7, sp, #0
 800b92e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b932:	2000      	movs	r0, #0
 800b934:	f7ff fef6 	bl	800b724 <_Z41__static_initialization_and_destruction_0ii>
 800b938:	bd80      	pop	{r7, pc}

0800b93a <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800b93a:	b580      	push	{r7, lr}
 800b93c:	b082      	sub	sp, #8
 800b93e:	af00      	add	r7, sp, #0
 800b940:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800b942:	687b      	ldr	r3, [r7, #4]
 800b944:	681b      	ldr	r3, [r3, #0]
 800b946:	3318      	adds	r3, #24
 800b948:	681b      	ldr	r3, [r3, #0]
 800b94a:	6878      	ldr	r0, [r7, #4]
 800b94c:	4798      	blx	r3
    }
 800b94e:	bf00      	nop
 800b950:	3708      	adds	r7, #8
 800b952:	46bd      	mov	sp, r7
 800b954:	bd80      	pop	{r7, pc}

0800b956 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>:
    void lockDMAToFrontPorch(bool enableLock)
 800b956:	b480      	push	{r7}
 800b958:	b083      	sub	sp, #12
 800b95a:	af00      	add	r7, sp, #0
 800b95c:	6078      	str	r0, [r7, #4]
 800b95e:	460b      	mov	r3, r1
 800b960:	70fb      	strb	r3, [r7, #3]
        lockDMAToPorch = enableLock;
 800b962:	687b      	ldr	r3, [r7, #4]
 800b964:	78fa      	ldrb	r2, [r7, #3]
 800b966:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
    }
 800b96a:	bf00      	nop
 800b96c:	370c      	adds	r7, #12
 800b96e:	46bd      	mov	sp, r7
 800b970:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b974:	4770      	bx	lr

0800b976 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800b976:	b480      	push	{r7}
 800b978:	b083      	sub	sp, #12
 800b97a:	af00      	add	r7, sp, #0
 800b97c:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800b97e:	687b      	ldr	r3, [r7, #4]
 800b980:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 800b984:	3301      	adds	r3, #1
 800b986:	b2da      	uxtb	r2, r3
 800b988:	687b      	ldr	r3, [r7, #4]
 800b98a:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 800b98e:	bf00      	nop
 800b990:	370c      	adds	r7, #12
 800b992:	46bd      	mov	sp, r7
 800b994:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b998:	4770      	bx	lr
	...

0800b99c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800b99c:	b580      	push	{r7, lr}
 800b99e:	b082      	sub	sp, #8
 800b9a0:	af00      	add	r7, sp, #0
 800b9a2:	6078      	str	r0, [r7, #4]
 800b9a4:	460b      	mov	r3, r1
 800b9a6:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800b9a8:	78fb      	ldrb	r3, [r7, #3]
 800b9aa:	2b00      	cmp	r3, #0
 800b9ac:	d002      	beq.n	800b9b4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800b9ae:	78fb      	ldrb	r3, [r7, #3]
 800b9b0:	2b02      	cmp	r3, #2
 800b9b2:	d105      	bne.n	800b9c0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800b9b4:	687b      	ldr	r3, [r7, #4]
 800b9b6:	78fa      	ldrb	r2, [r7, #3]
 800b9b8:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800b9bc:	2301      	movs	r3, #1
 800b9be:	e027      	b.n	800ba10 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        else if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800b9c0:	78fb      	ldrb	r3, [r7, #3]
 800b9c2:	2b01      	cmp	r3, #1
 800b9c4:	d123      	bne.n	800ba0e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800b9c6:	687b      	ldr	r3, [r7, #4]
 800b9c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b9ca:	2b00      	cmp	r3, #0
 800b9cc:	d014      	beq.n	800b9f8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b9ce:	687b      	ldr	r3, [r7, #4]
 800b9d0:	681b      	ldr	r3, [r3, #0]
 800b9d2:	3380      	adds	r3, #128	; 0x80
 800b9d4:	681b      	ldr	r3, [r3, #0]
 800b9d6:	6878      	ldr	r0, [r7, #4]
 800b9d8:	4798      	blx	r3
 800b9da:	4603      	mov	r3, r0
 800b9dc:	461a      	mov	r2, r3
 800b9de:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b9e2:	429a      	cmp	r2, r3
 800b9e4:	d008      	beq.n	800b9f8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b9e6:	4b0c      	ldr	r3, [pc, #48]	; (800ba18 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800b9e8:	781b      	ldrb	r3, [r3, #0]
 800b9ea:	f083 0301 	eor.w	r3, r3, #1
 800b9ee:	b2db      	uxtb	r3, r3
 800b9f0:	2b00      	cmp	r3, #0
 800b9f2:	d001      	beq.n	800b9f8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b9f4:	2301      	movs	r3, #1
 800b9f6:	e000      	b.n	800b9fa <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800b9f8:	2300      	movs	r3, #0
 800b9fa:	2b00      	cmp	r3, #0
 800b9fc:	d005      	beq.n	800ba0a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800b9fe:	687b      	ldr	r3, [r7, #4]
 800ba00:	78fa      	ldrb	r2, [r7, #3]
 800ba02:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800ba06:	2301      	movs	r3, #1
 800ba08:	e002      	b.n	800ba10 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800ba0a:	2300      	movs	r3, #0
 800ba0c:	e000      	b.n	800ba10 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800ba0e:	2300      	movs	r3, #0
    }
 800ba10:	4618      	mov	r0, r3
 800ba12:	3708      	adds	r7, #8
 800ba14:	46bd      	mov	sp, r7
 800ba16:	bd80      	pop	{r7, pc}
 800ba18:	200017a2 	.word	0x200017a2

0800ba1c <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void(*delayF)(uint16_t))
 800ba1c:	b480      	push	{r7}
 800ba1e:	b083      	sub	sp, #12
 800ba20:	af00      	add	r7, sp, #0
 800ba22:	6078      	str	r0, [r7, #4]
 800ba24:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 800ba26:	687b      	ldr	r3, [r7, #4]
 800ba28:	683a      	ldr	r2, [r7, #0]
 800ba2a:	639a      	str	r2, [r3, #56]	; 0x38
    }
 800ba2c:	bf00      	nop
 800ba2e:	370c      	adds	r7, #12
 800ba30:	46bd      	mov	sp, r7
 800ba32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba36:	4770      	bx	lr

0800ba38 <__NVIC_EnableIRQ>:
{
 800ba38:	b480      	push	{r7}
 800ba3a:	b083      	sub	sp, #12
 800ba3c:	af00      	add	r7, sp, #0
 800ba3e:	4603      	mov	r3, r0
 800ba40:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800ba42:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ba46:	2b00      	cmp	r3, #0
 800ba48:	db0b      	blt.n	800ba62 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800ba4a:	79fb      	ldrb	r3, [r7, #7]
 800ba4c:	f003 021f 	and.w	r2, r3, #31
 800ba50:	4907      	ldr	r1, [pc, #28]	; (800ba70 <__NVIC_EnableIRQ+0x38>)
 800ba52:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ba56:	095b      	lsrs	r3, r3, #5
 800ba58:	2001      	movs	r0, #1
 800ba5a:	fa00 f202 	lsl.w	r2, r0, r2
 800ba5e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800ba62:	bf00      	nop
 800ba64:	370c      	adds	r7, #12
 800ba66:	46bd      	mov	sp, r7
 800ba68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba6c:	4770      	bx	lr
 800ba6e:	bf00      	nop
 800ba70:	e000e100 	.word	0xe000e100

0800ba74 <__NVIC_DisableIRQ>:
{
 800ba74:	b480      	push	{r7}
 800ba76:	b083      	sub	sp, #12
 800ba78:	af00      	add	r7, sp, #0
 800ba7a:	4603      	mov	r3, r0
 800ba7c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800ba7e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ba82:	2b00      	cmp	r3, #0
 800ba84:	db12      	blt.n	800baac <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800ba86:	79fb      	ldrb	r3, [r7, #7]
 800ba88:	f003 021f 	and.w	r2, r3, #31
 800ba8c:	490a      	ldr	r1, [pc, #40]	; (800bab8 <__NVIC_DisableIRQ+0x44>)
 800ba8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ba92:	095b      	lsrs	r3, r3, #5
 800ba94:	2001      	movs	r0, #1
 800ba96:	fa00 f202 	lsl.w	r2, r0, r2
 800ba9a:	3320      	adds	r3, #32
 800ba9c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800baa0:	f3bf 8f4f 	dsb	sy
}
 800baa4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800baa6:	f3bf 8f6f 	isb	sy
}
 800baaa:	bf00      	nop
}
 800baac:	bf00      	nop
 800baae:	370c      	adds	r7, #12
 800bab0:	46bd      	mov	sp, r7
 800bab2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bab6:	4770      	bx	lr
 800bab8:	e000e100 	.word	0xe000e100

0800babc <__NVIC_SetPriority>:
{
 800babc:	b480      	push	{r7}
 800babe:	b083      	sub	sp, #12
 800bac0:	af00      	add	r7, sp, #0
 800bac2:	4603      	mov	r3, r0
 800bac4:	6039      	str	r1, [r7, #0]
 800bac6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800bac8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bacc:	2b00      	cmp	r3, #0
 800bace:	db0a      	blt.n	800bae6 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800bad0:	683b      	ldr	r3, [r7, #0]
 800bad2:	b2da      	uxtb	r2, r3
 800bad4:	490c      	ldr	r1, [pc, #48]	; (800bb08 <__NVIC_SetPriority+0x4c>)
 800bad6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bada:	0112      	lsls	r2, r2, #4
 800badc:	b2d2      	uxtb	r2, r2
 800bade:	440b      	add	r3, r1
 800bae0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800bae4:	e00a      	b.n	800bafc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800bae6:	683b      	ldr	r3, [r7, #0]
 800bae8:	b2da      	uxtb	r2, r3
 800baea:	4908      	ldr	r1, [pc, #32]	; (800bb0c <__NVIC_SetPriority+0x50>)
 800baec:	79fb      	ldrb	r3, [r7, #7]
 800baee:	f003 030f 	and.w	r3, r3, #15
 800baf2:	3b04      	subs	r3, #4
 800baf4:	0112      	lsls	r2, r2, #4
 800baf6:	b2d2      	uxtb	r2, r2
 800baf8:	440b      	add	r3, r1
 800bafa:	761a      	strb	r2, [r3, #24]
}
 800bafc:	bf00      	nop
 800bafe:	370c      	adds	r7, #12
 800bb00:	46bd      	mov	sp, r7
 800bb02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb06:	4770      	bx	lr
 800bb08:	e000e100 	.word	0xe000e100
 800bb0c:	e000ed00 	.word	0xe000ed00

0800bb10 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800bb10:	b5b0      	push	{r4, r5, r7, lr}
 800bb12:	b082      	sub	sp, #8
 800bb14:	af00      	add	r7, sp, #0
 800bb16:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800bb18:	687b      	ldr	r3, [r7, #4]
 800bb1a:	4618      	mov	r0, r3
 800bb1c:	f000 fe76 	bl	800c80c <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(touchgfx::Application::getInstance()));
 800bb20:	687d      	ldr	r5, [r7, #4]
 800bb22:	687b      	ldr	r3, [r7, #4]
 800bb24:	681b      	ldr	r3, [r3, #0]
 800bb26:	334c      	adds	r3, #76	; 0x4c
 800bb28:	681c      	ldr	r4, [r3, #0]
 800bb2a:	f002 fc8d 	bl	800e448 <_ZN8touchgfx11Application11getInstanceEv>
 800bb2e:	4603      	mov	r3, r0
 800bb30:	4619      	mov	r1, r3
 800bb32:	4628      	mov	r0, r5
 800bb34:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 800bb36:	687b      	ldr	r3, [r7, #4]
 800bb38:	490d      	ldr	r1, [pc, #52]	; (800bb70 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x60>)
 800bb3a:	4618      	mov	r0, r3
 800bb3c:	f7ff ff6e 	bl	800ba1c <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800bb40:	687b      	ldr	r3, [r7, #4]
 800bb42:	2101      	movs	r1, #1
 800bb44:	4618      	mov	r0, r3
 800bb46:	f7ff ff29 	bl	800b99c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>

    setFrameBufferStartAddresses((void*)0xd0000000, (void*)0, (void*)0);
 800bb4a:	6878      	ldr	r0, [r7, #4]
 800bb4c:	687b      	ldr	r3, [r7, #4]
 800bb4e:	681b      	ldr	r3, [r3, #0]
 800bb50:	3374      	adds	r3, #116	; 0x74
 800bb52:	681c      	ldr	r4, [r3, #0]
 800bb54:	2300      	movs	r3, #0
 800bb56:	2200      	movs	r2, #0
 800bb58:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 800bb5c:	47a0      	blx	r4
     * Set whether the DMA transfers are locked to the TFT update cycle. If
     * locked, DMA transfer will not begin until the TFT controller has finished
     * updating the display. If not locked, DMA transfers will begin as soon as
     * possible. Default is true (DMA is locked with TFT).
     */
    lockDMAToFrontPorch(true);
 800bb5e:	687b      	ldr	r3, [r7, #4]
 800bb60:	2101      	movs	r1, #1
 800bb62:	4618      	mov	r0, r3
 800bb64:	f7ff fef7 	bl	800b956 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>
}
 800bb68:	bf00      	nop
 800bb6a:	3708      	adds	r7, #8
 800bb6c:	46bd      	mov	sp, r7
 800bb6e:	bdb0      	pop	{r4, r5, r7, pc}
 800bb70:	0800a721 	.word	0x0800a721

0800bb74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800bb74:	b580      	push	{r7, lr}
 800bb76:	b082      	sub	sp, #8
 800bb78:	af00      	add	r7, sp, #0
 800bb7a:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800bb7c:	2109      	movs	r1, #9
 800bb7e:	205a      	movs	r0, #90	; 0x5a
 800bb80:	f7ff ff9c 	bl	800babc <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800bb84:	2109      	movs	r1, #9
 800bb86:	2058      	movs	r0, #88	; 0x58
 800bb88:	f7ff ff98 	bl	800babc <__NVIC_SetPriority>
}
 800bb8c:	bf00      	nop
 800bb8e:	3708      	adds	r7, #8
 800bb90:	46bd      	mov	sp, r7
 800bb92:	bd80      	pop	{r7, pc}

0800bb94 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800bb94:	b580      	push	{r7, lr}
 800bb96:	b082      	sub	sp, #8
 800bb98:	af00      	add	r7, sp, #0
 800bb9a:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800bb9c:	205a      	movs	r0, #90	; 0x5a
 800bb9e:	f7ff ff4b 	bl	800ba38 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800bba2:	2058      	movs	r0, #88	; 0x58
 800bba4:	f7ff ff48 	bl	800ba38 <__NVIC_EnableIRQ>
}
 800bba8:	bf00      	nop
 800bbaa:	3708      	adds	r7, #8
 800bbac:	46bd      	mov	sp, r7
 800bbae:	bd80      	pop	{r7, pc}

0800bbb0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800bbb0:	b580      	push	{r7, lr}
 800bbb2:	b082      	sub	sp, #8
 800bbb4:	af00      	add	r7, sp, #0
 800bbb6:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800bbb8:	205a      	movs	r0, #90	; 0x5a
 800bbba:	f7ff ff5b 	bl	800ba74 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800bbbe:	2058      	movs	r0, #88	; 0x58
 800bbc0:	f7ff ff58 	bl	800ba74 <__NVIC_DisableIRQ>
}
 800bbc4:	bf00      	nop
 800bbc6:	3708      	adds	r7, #8
 800bbc8:	46bd      	mov	sp, r7
 800bbca:	bd80      	pop	{r7, pc}

0800bbcc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800bbcc:	b480      	push	{r7}
 800bbce:	b083      	sub	sp, #12
 800bbd0:	af00      	add	r7, sp, #0
 800bbd2:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800bbd4:	4b11      	ldr	r3, [pc, #68]	; (800bc1c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bbd6:	68db      	ldr	r3, [r3, #12]
 800bbd8:	b29b      	uxth	r3, r3
 800bbda:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800bbde:	b29b      	uxth	r3, r3
 800bbe0:	3b01      	subs	r3, #1
 800bbe2:	b29a      	uxth	r2, r3
 800bbe4:	4b0e      	ldr	r3, [pc, #56]	; (800bc20 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800bbe6:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800bbe8:	4b0c      	ldr	r3, [pc, #48]	; (800bc1c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bbea:	691b      	ldr	r3, [r3, #16]
 800bbec:	b29b      	uxth	r3, r3
 800bbee:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800bbf2:	b29b      	uxth	r3, r3
 800bbf4:	3b01      	subs	r3, #1
 800bbf6:	b29a      	uxth	r2, r3
 800bbf8:	4b0a      	ldr	r3, [pc, #40]	; (800bc24 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800bbfa:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800bbfc:	4b08      	ldr	r3, [pc, #32]	; (800bc20 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800bbfe:	881a      	ldrh	r2, [r3, #0]
 800bc00:	4b06      	ldr	r3, [pc, #24]	; (800bc1c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bc02:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800bc04:	4b05      	ldr	r3, [pc, #20]	; (800bc1c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bc06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bc08:	4a04      	ldr	r2, [pc, #16]	; (800bc1c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bc0a:	f043 0301 	orr.w	r3, r3, #1
 800bc0e:	6353      	str	r3, [r2, #52]	; 0x34
}
 800bc10:	bf00      	nop
 800bc12:	370c      	adds	r7, #12
 800bc14:	46bd      	mov	sp, r7
 800bc16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc1a:	4770      	bx	lr
 800bc1c:	40016800 	.word	0x40016800
 800bc20:	20001794 	.word	0x20001794
 800bc24:	20001796 	.word	0x20001796

0800bc28 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800bc28:	b480      	push	{r7}
 800bc2a:	b083      	sub	sp, #12
 800bc2c:	af00      	add	r7, sp, #0
 800bc2e:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800bc30:	4b03      	ldr	r3, [pc, #12]	; (800bc40 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800bc32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 800bc34:	4618      	mov	r0, r3
 800bc36:	370c      	adds	r7, #12
 800bc38:	46bd      	mov	sp, r7
 800bc3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc3e:	4770      	bx	lr
 800bc40:	40016884 	.word	0x40016884

0800bc44 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800bc44:	b480      	push	{r7}
 800bc46:	b083      	sub	sp, #12
 800bc48:	af00      	add	r7, sp, #0
 800bc4a:	6078      	str	r0, [r7, #4]
 800bc4c:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800bc4e:	4a06      	ldr	r2, [pc, #24]	; (800bc68 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800bc50:	683b      	ldr	r3, [r7, #0]
 800bc52:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800bc54:	4b05      	ldr	r3, [pc, #20]	; (800bc6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800bc56:	2201      	movs	r2, #1
 800bc58:	625a      	str	r2, [r3, #36]	; 0x24
}
 800bc5a:	bf00      	nop
 800bc5c:	370c      	adds	r7, #12
 800bc5e:	46bd      	mov	sp, r7
 800bc60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc64:	4770      	bx	lr
 800bc66:	bf00      	nop
 800bc68:	40016884 	.word	0x40016884
 800bc6c:	40016800 	.word	0x40016800

0800bc70 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800bc70:	b580      	push	{r7, lr}
 800bc72:	b082      	sub	sp, #8
 800bc74:	af00      	add	r7, sp, #0
 800bc76:	6078      	str	r0, [r7, #4]
 800bc78:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800bc7a:	687b      	ldr	r3, [r7, #4]
 800bc7c:	6839      	ldr	r1, [r7, #0]
 800bc7e:	4618      	mov	r0, r3
 800bc80:	f000 fad4 	bl	800c22c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800bc84:	bf00      	nop
 800bc86:	3708      	adds	r7, #8
 800bc88:	46bd      	mov	sp, r7
 800bc8a:	bd80      	pop	{r7, pc}

0800bc8c <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 800bc8c:	b480      	push	{r7}
 800bc8e:	b085      	sub	sp, #20
 800bc90:	af00      	add	r7, sp, #0
 800bc92:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 800bc94:	4b0d      	ldr	r3, [pc, #52]	; (800bccc <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800bc96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bc98:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 800bc9a:	4b0c      	ldr	r3, [pc, #48]	; (800bccc <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800bc9c:	68db      	ldr	r3, [r3, #12]
 800bc9e:	b29b      	uxth	r3, r3
 800bca0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800bca4:	b29b      	uxth	r3, r3
 800bca6:	3301      	adds	r3, #1
 800bca8:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    if (curr < backPorchY)
 800bcaa:	89fa      	ldrh	r2, [r7, #14]
 800bcac:	89bb      	ldrh	r3, [r7, #12]
 800bcae:	429a      	cmp	r2, r3
 800bcb0:	d201      	bcs.n	800bcb6 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x2a>
    {
        return 0;
 800bcb2:	2300      	movs	r3, #0
 800bcb4:	e003      	b.n	800bcbe <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
    }
    else
    {
        return curr - backPorchY;
 800bcb6:	89fa      	ldrh	r2, [r7, #14]
 800bcb8:	89bb      	ldrh	r3, [r7, #12]
 800bcba:	1ad3      	subs	r3, r2, r3
 800bcbc:	b29b      	uxth	r3, r3
    }
}
 800bcbe:	4618      	mov	r0, r3
 800bcc0:	3714      	adds	r7, #20
 800bcc2:	46bd      	mov	sp, r7
 800bcc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcc8:	4770      	bx	lr
 800bcca:	bf00      	nop
 800bccc:	40016800 	.word	0x40016800

0800bcd0 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
 800bcd0:	b580      	push	{r7, lr}
 800bcd2:	b082      	sub	sp, #8
 800bcd4:	af00      	add	r7, sp, #0
 800bcd6:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
 800bcd8:	4b1a      	ldr	r3, [pc, #104]	; (800bd44 <HAL_LTDC_LineEventCallback+0x74>)
 800bcda:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bcdc:	4a1a      	ldr	r2, [pc, #104]	; (800bd48 <HAL_LTDC_LineEventCallback+0x78>)
 800bcde:	8812      	ldrh	r2, [r2, #0]
 800bce0:	4293      	cmp	r3, r2
 800bce2:	bf0c      	ite	eq
 800bce4:	2301      	moveq	r3, #1
 800bce6:	2300      	movne	r3, #0
 800bce8:	b2db      	uxtb	r3, r3
 800bcea:	2b00      	cmp	r3, #0
 800bcec:	d017      	beq.n	800bd1e <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800bcee:	4b17      	ldr	r3, [pc, #92]	; (800bd4c <HAL_LTDC_LineEventCallback+0x7c>)
 800bcf0:	881b      	ldrh	r3, [r3, #0]
 800bcf2:	4619      	mov	r1, r3
 800bcf4:	6878      	ldr	r0, [r7, #4]
 800bcf6:	f7f8 fb95 	bl	8004424 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800bcfa:	f7fc fca1 	bl	8008640 <_ZN8touchgfx3HAL11getInstanceEv>
 800bcfe:	4603      	mov	r3, r0
 800bd00:	4618      	mov	r0, r3
 800bd02:	f7ff fe38 	bl	800b976 <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800bd06:	f7fe fce5 	bl	800a6d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800bd0a:	f7fc fc99 	bl	8008640 <_ZN8touchgfx3HAL11getInstanceEv>
 800bd0e:	4603      	mov	r3, r0
 800bd10:	4618      	mov	r0, r3
 800bd12:	f001 f803 	bl	800cd1c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800bd16:	2000      	movs	r0, #0
 800bd18:	f7fe fa06 	bl	800a128 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 800bd1c:	e00e      	b.n	800bd3c <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800bd1e:	4b0a      	ldr	r3, [pc, #40]	; (800bd48 <HAL_LTDC_LineEventCallback+0x78>)
 800bd20:	881b      	ldrh	r3, [r3, #0]
 800bd22:	4619      	mov	r1, r3
 800bd24:	6878      	ldr	r0, [r7, #4]
 800bd26:	f7f8 fb7d 	bl	8004424 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800bd2a:	2000      	movs	r0, #0
 800bd2c:	f7fe fa07 	bl	800a13e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
 800bd30:	f7fc fc86 	bl	8008640 <_ZN8touchgfx3HAL11getInstanceEv>
 800bd34:	4603      	mov	r3, r0
 800bd36:	4618      	mov	r0, r3
 800bd38:	f7ff fdff 	bl	800b93a <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
 800bd3c:	bf00      	nop
 800bd3e:	3708      	adds	r7, #8
 800bd40:	46bd      	mov	sp, r7
 800bd42:	bd80      	pop	{r7, pc}
 800bd44:	40016800 	.word	0x40016800
 800bd48:	20001794 	.word	0x20001794
 800bd4c:	20001796 	.word	0x20001796

0800bd50 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800bd50:	8880      	ldrh	r0, [r0, #4]
 800bd52:	4770      	bx	lr

0800bd54 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800bd54:	2300      	movs	r3, #0
 800bd56:	8083      	strh	r3, [r0, #4]
 800bd58:	4770      	bx	lr
	...

0800bd5c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800bd5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bd5e:	6803      	ldr	r3, [r0, #0]
 800bd60:	4605      	mov	r5, r0
 800bd62:	460e      	mov	r6, r1
 800bd64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd66:	2100      	movs	r1, #0
 800bd68:	4798      	blx	r3
 800bd6a:	682b      	ldr	r3, [r5, #0]
 800bd6c:	4604      	mov	r4, r0
 800bd6e:	6a1b      	ldr	r3, [r3, #32]
 800bd70:	4628      	mov	r0, r5
 800bd72:	4798      	blx	r3
 800bd74:	88ab      	ldrh	r3, [r5, #4]
 800bd76:	1b34      	subs	r4, r6, r4
 800bd78:	b2a4      	uxth	r4, r4
 800bd7a:	fbb4 f4f0 	udiv	r4, r4, r0
 800bd7e:	42a3      	cmp	r3, r4
 800bd80:	d805      	bhi.n	800bd8e <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800bd82:	4b0e      	ldr	r3, [pc, #56]	; (800bdbc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800bd84:	4a0e      	ldr	r2, [pc, #56]	; (800bdc0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800bd86:	211e      	movs	r1, #30
 800bd88:	480e      	ldr	r0, [pc, #56]	; (800bdc4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800bd8a:	f00f fddb 	bl	801b944 <__assert_func>
 800bd8e:	682b      	ldr	r3, [r5, #0]
 800bd90:	2100      	movs	r1, #0
 800bd92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd94:	4628      	mov	r0, r5
 800bd96:	4798      	blx	r3
 800bd98:	682b      	ldr	r3, [r5, #0]
 800bd9a:	4607      	mov	r7, r0
 800bd9c:	6a1b      	ldr	r3, [r3, #32]
 800bd9e:	4628      	mov	r0, r5
 800bda0:	4798      	blx	r3
 800bda2:	1bf3      	subs	r3, r6, r7
 800bda4:	b29b      	uxth	r3, r3
 800bda6:	fbb3 f2f0 	udiv	r2, r3, r0
 800bdaa:	fb02 3010 	mls	r0, r2, r0, r3
 800bdae:	b118      	cbz	r0, 800bdb8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800bdb0:	4b05      	ldr	r3, [pc, #20]	; (800bdc8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800bdb2:	4a03      	ldr	r2, [pc, #12]	; (800bdc0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800bdb4:	211f      	movs	r1, #31
 800bdb6:	e7e7      	b.n	800bd88 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800bdb8:	4620      	mov	r0, r4
 800bdba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bdbc:	0801f37c 	.word	0x0801f37c
 800bdc0:	0801f4ea 	.word	0x0801f4ea
 800bdc4:	0801f391 	.word	0x0801f391
 800bdc8:	0801f3bf 	.word	0x0801f3bf

0800bdcc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800bdcc:	b538      	push	{r3, r4, r5, lr}
 800bdce:	6803      	ldr	r3, [r0, #0]
 800bdd0:	6a1b      	ldr	r3, [r3, #32]
 800bdd2:	460d      	mov	r5, r1
 800bdd4:	4604      	mov	r4, r0
 800bdd6:	4798      	blx	r3
 800bdd8:	4285      	cmp	r5, r0
 800bdda:	d905      	bls.n	800bde8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800bddc:	4b0c      	ldr	r3, [pc, #48]	; (800be10 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800bdde:	4a0d      	ldr	r2, [pc, #52]	; (800be14 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800bde0:	212f      	movs	r1, #47	; 0x2f
 800bde2:	480d      	ldr	r0, [pc, #52]	; (800be18 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800bde4:	f00f fdae 	bl	801b944 <__assert_func>
 800bde8:	6823      	ldr	r3, [r4, #0]
 800bdea:	88a5      	ldrh	r5, [r4, #4]
 800bdec:	69db      	ldr	r3, [r3, #28]
 800bdee:	4620      	mov	r0, r4
 800bdf0:	4798      	blx	r3
 800bdf2:	4285      	cmp	r5, r0
 800bdf4:	d303      	bcc.n	800bdfe <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800bdf6:	4b09      	ldr	r3, [pc, #36]	; (800be1c <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800bdf8:	4a06      	ldr	r2, [pc, #24]	; (800be14 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800bdfa:	2130      	movs	r1, #48	; 0x30
 800bdfc:	e7f1      	b.n	800bde2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800bdfe:	6823      	ldr	r3, [r4, #0]
 800be00:	88a1      	ldrh	r1, [r4, #4]
 800be02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be04:	4620      	mov	r0, r4
 800be06:	4798      	blx	r3
 800be08:	88a3      	ldrh	r3, [r4, #4]
 800be0a:	3301      	adds	r3, #1
 800be0c:	80a3      	strh	r3, [r4, #4]
 800be0e:	bd38      	pop	{r3, r4, r5, pc}
 800be10:	0801f439 	.word	0x0801f439
 800be14:	0801f52d 	.word	0x0801f52d
 800be18:	0801f391 	.word	0x0801f391
 800be1c:	0801f450 	.word	0x0801f450

0800be20 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800be20:	b570      	push	{r4, r5, r6, lr}
 800be22:	6803      	ldr	r3, [r0, #0]
 800be24:	6a1b      	ldr	r3, [r3, #32]
 800be26:	4616      	mov	r6, r2
 800be28:	4604      	mov	r4, r0
 800be2a:	460d      	mov	r5, r1
 800be2c:	4798      	blx	r3
 800be2e:	4286      	cmp	r6, r0
 800be30:	d905      	bls.n	800be3e <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800be32:	4b06      	ldr	r3, [pc, #24]	; (800be4c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800be34:	4a06      	ldr	r2, [pc, #24]	; (800be50 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800be36:	4807      	ldr	r0, [pc, #28]	; (800be54 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800be38:	2139      	movs	r1, #57	; 0x39
 800be3a:	f00f fd83 	bl	801b944 <__assert_func>
 800be3e:	6823      	ldr	r3, [r4, #0]
 800be40:	4629      	mov	r1, r5
 800be42:	4620      	mov	r0, r4
 800be44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be4a:	4718      	bx	r3
 800be4c:	0801f439 	.word	0x0801f439
 800be50:	0801f4a0 	.word	0x0801f4a0
 800be54:	0801f391 	.word	0x0801f391

0800be58 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800be58:	4770      	bx	lr
	...

0800be5c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800be5c:	4a02      	ldr	r2, [pc, #8]	; (800be68 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800be5e:	6002      	str	r2, [r0, #0]
 800be60:	2200      	movs	r2, #0
 800be62:	8082      	strh	r2, [r0, #4]
 800be64:	4770      	bx	lr
 800be66:	bf00      	nop
 800be68:	0801f474 	.word	0x0801f474

0800be6c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800be6c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800be6e:	2000      	movs	r0, #0
 800be70:	b12b      	cbz	r3, 800be7e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800be72:	b920      	cbnz	r0, 800be7e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800be74:	1a5a      	subs	r2, r3, r1
 800be76:	4250      	negs	r0, r2
 800be78:	4150      	adcs	r0, r2
 800be7a:	699b      	ldr	r3, [r3, #24]
 800be7c:	e7f8      	b.n	800be70 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800be7e:	4770      	bx	lr

0800be80 <_ZN8touchgfx9Container9removeAllEv>:
 800be80:	2200      	movs	r2, #0
 800be82:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800be84:	b123      	cbz	r3, 800be90 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800be86:	6999      	ldr	r1, [r3, #24]
 800be88:	6281      	str	r1, [r0, #40]	; 0x28
 800be8a:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800be8e:	e7f8      	b.n	800be82 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800be90:	4770      	bx	lr

0800be92 <_ZN8touchgfx9Container6unlinkEv>:
 800be92:	2300      	movs	r3, #0
 800be94:	6283      	str	r3, [r0, #40]	; 0x28
 800be96:	4770      	bx	lr

0800be98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800be98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be9c:	461f      	mov	r7, r3
 800be9e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800bea2:	460d      	mov	r5, r1
 800bea4:	4616      	mov	r6, r2
 800bea6:	b103      	cbz	r3, 800beaa <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800bea8:	6038      	str	r0, [r7, #0]
 800beaa:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800beac:	b314      	cbz	r4, 800bef4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800beae:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800beb2:	b1eb      	cbz	r3, 800bef0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800beb4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800beb8:	428d      	cmp	r5, r1
 800beba:	db19      	blt.n	800bef0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bebc:	8923      	ldrh	r3, [r4, #8]
 800bebe:	b289      	uxth	r1, r1
 800bec0:	440b      	add	r3, r1
 800bec2:	b21b      	sxth	r3, r3
 800bec4:	429d      	cmp	r5, r3
 800bec6:	da13      	bge.n	800bef0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bec8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800becc:	4296      	cmp	r6, r2
 800bece:	db0f      	blt.n	800bef0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bed0:	8963      	ldrh	r3, [r4, #10]
 800bed2:	b292      	uxth	r2, r2
 800bed4:	4413      	add	r3, r2
 800bed6:	b21b      	sxth	r3, r3
 800bed8:	429e      	cmp	r6, r3
 800beda:	da09      	bge.n	800bef0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bedc:	6823      	ldr	r3, [r4, #0]
 800bede:	1ab2      	subs	r2, r6, r2
 800bee0:	1a69      	subs	r1, r5, r1
 800bee2:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800bee6:	b212      	sxth	r2, r2
 800bee8:	463b      	mov	r3, r7
 800beea:	b209      	sxth	r1, r1
 800beec:	4620      	mov	r0, r4
 800beee:	47c0      	blx	r8
 800bef0:	69a4      	ldr	r4, [r4, #24]
 800bef2:	e7db      	b.n	800beac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800bef4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bef8 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800bef8:	2200      	movs	r2, #0
 800befa:	8002      	strh	r2, [r0, #0]
 800befc:	8042      	strh	r2, [r0, #2]
 800befe:	8082      	strh	r2, [r0, #4]
 800bf00:	80c2      	strh	r2, [r0, #6]
 800bf02:	4770      	bx	lr

0800bf04 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800bf04:	b570      	push	{r4, r5, r6, lr}
 800bf06:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bf08:	460d      	mov	r5, r1
 800bf0a:	4616      	mov	r6, r2
 800bf0c:	b13c      	cbz	r4, 800bf1e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800bf0e:	6823      	ldr	r3, [r4, #0]
 800bf10:	4620      	mov	r0, r4
 800bf12:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800bf14:	4632      	mov	r2, r6
 800bf16:	4629      	mov	r1, r5
 800bf18:	4798      	blx	r3
 800bf1a:	69a4      	ldr	r4, [r4, #24]
 800bf1c:	e7f6      	b.n	800bf0c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800bf1e:	bd70      	pop	{r4, r5, r6, pc}

0800bf20 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800bf20:	b538      	push	{r3, r4, r5, lr}
 800bf22:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bf24:	460d      	mov	r5, r1
 800bf26:	b134      	cbz	r4, 800bf36 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800bf28:	682b      	ldr	r3, [r5, #0]
 800bf2a:	4621      	mov	r1, r4
 800bf2c:	689b      	ldr	r3, [r3, #8]
 800bf2e:	4628      	mov	r0, r5
 800bf30:	4798      	blx	r3
 800bf32:	69a4      	ldr	r4, [r4, #24]
 800bf34:	e7f7      	b.n	800bf26 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800bf36:	bd38      	pop	{r3, r4, r5, pc}

0800bf38 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800bf38:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bf3a:	b19b      	cbz	r3, 800bf64 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bf3c:	428b      	cmp	r3, r1
 800bf3e:	d109      	bne.n	800bf54 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800bf40:	699a      	ldr	r2, [r3, #24]
 800bf42:	2100      	movs	r1, #0
 800bf44:	6159      	str	r1, [r3, #20]
 800bf46:	6282      	str	r2, [r0, #40]	; 0x28
 800bf48:	b902      	cbnz	r2, 800bf4c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800bf4a:	4770      	bx	lr
 800bf4c:	6199      	str	r1, [r3, #24]
 800bf4e:	4770      	bx	lr
 800bf50:	4613      	mov	r3, r2
 800bf52:	b13a      	cbz	r2, 800bf64 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bf54:	699a      	ldr	r2, [r3, #24]
 800bf56:	428a      	cmp	r2, r1
 800bf58:	d1fa      	bne.n	800bf50 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800bf5a:	698a      	ldr	r2, [r1, #24]
 800bf5c:	619a      	str	r2, [r3, #24]
 800bf5e:	2300      	movs	r3, #0
 800bf60:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800bf64:	4770      	bx	lr

0800bf66 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800bf66:	b410      	push	{r4}
 800bf68:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bf6a:	4604      	mov	r4, r0
 800bf6c:	b92b      	cbnz	r3, 800bf7a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800bf6e:	6803      	ldr	r3, [r0, #0]
 800bf70:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bf74:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800bf76:	4611      	mov	r1, r2
 800bf78:	4718      	bx	r3
 800bf7a:	b941      	cbnz	r1, 800bf8e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800bf7c:	6193      	str	r3, [r2, #24]
 800bf7e:	6282      	str	r2, [r0, #40]	; 0x28
 800bf80:	6154      	str	r4, [r2, #20]
 800bf82:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bf86:	4770      	bx	lr
 800bf88:	4603      	mov	r3, r0
 800bf8a:	2800      	cmp	r0, #0
 800bf8c:	d0f9      	beq.n	800bf82 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800bf8e:	4299      	cmp	r1, r3
 800bf90:	6998      	ldr	r0, [r3, #24]
 800bf92:	d1f9      	bne.n	800bf88 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800bf94:	6190      	str	r0, [r2, #24]
 800bf96:	618a      	str	r2, [r1, #24]
 800bf98:	e7f2      	b.n	800bf80 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800bf9c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800bf9c:	4288      	cmp	r0, r1
 800bf9e:	b508      	push	{r3, lr}
 800bfa0:	d105      	bne.n	800bfae <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800bfa2:	4b11      	ldr	r3, [pc, #68]	; (800bfe8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800bfa4:	4a11      	ldr	r2, [pc, #68]	; (800bfec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bfa6:	2123      	movs	r1, #35	; 0x23
 800bfa8:	4811      	ldr	r0, [pc, #68]	; (800bff0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800bfaa:	f00f fccb 	bl	801b944 <__assert_func>
 800bfae:	694b      	ldr	r3, [r1, #20]
 800bfb0:	b11b      	cbz	r3, 800bfba <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800bfb2:	4b10      	ldr	r3, [pc, #64]	; (800bff4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800bfb4:	4a0d      	ldr	r2, [pc, #52]	; (800bfec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bfb6:	2124      	movs	r1, #36	; 0x24
 800bfb8:	e7f6      	b.n	800bfa8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800bfba:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800bfbe:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bfc0:	b913      	cbnz	r3, 800bfc8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800bfc2:	6281      	str	r1, [r0, #40]	; 0x28
 800bfc4:	bd08      	pop	{r3, pc}
 800bfc6:	4613      	mov	r3, r2
 800bfc8:	699a      	ldr	r2, [r3, #24]
 800bfca:	b12a      	cbz	r2, 800bfd8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800bfcc:	428b      	cmp	r3, r1
 800bfce:	d1fa      	bne.n	800bfc6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800bfd0:	4b09      	ldr	r3, [pc, #36]	; (800bff8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800bfd2:	4a06      	ldr	r2, [pc, #24]	; (800bfec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bfd4:	2135      	movs	r1, #53	; 0x35
 800bfd6:	e7e7      	b.n	800bfa8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800bfd8:	428b      	cmp	r3, r1
 800bfda:	d103      	bne.n	800bfe4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800bfdc:	4b06      	ldr	r3, [pc, #24]	; (800bff8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800bfde:	4a03      	ldr	r2, [pc, #12]	; (800bfec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bfe0:	2138      	movs	r1, #56	; 0x38
 800bfe2:	e7e1      	b.n	800bfa8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800bfe4:	6199      	str	r1, [r3, #24]
 800bfe6:	e7ed      	b.n	800bfc4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800bfe8:	0801f56b 	.word	0x0801f56b
 800bfec:	0801f6c0 	.word	0x0801f6c0
 800bff0:	0801f597 	.word	0x0801f597
 800bff4:	0801f5ca 	.word	0x0801f5ca
 800bff8:	0801f600 	.word	0x0801f600

0800bffc <_ZN8touchgfx4RectaNERKS0_>:
 800bffc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c000:	888b      	ldrh	r3, [r1, #4]
 800c002:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c006:	f9b0 a000 	ldrsh.w	sl, [r0]
 800c00a:	444b      	add	r3, r9
 800c00c:	b29b      	uxth	r3, r3
 800c00e:	fa0f f883 	sxth.w	r8, r3
 800c012:	45c2      	cmp	sl, r8
 800c014:	da30      	bge.n	800c078 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c016:	8882      	ldrh	r2, [r0, #4]
 800c018:	4452      	add	r2, sl
 800c01a:	b292      	uxth	r2, r2
 800c01c:	fa0f fe82 	sxth.w	lr, r2
 800c020:	45f1      	cmp	r9, lr
 800c022:	da29      	bge.n	800c078 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c024:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c028:	88cc      	ldrh	r4, [r1, #6]
 800c02a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800c02e:	442c      	add	r4, r5
 800c030:	b224      	sxth	r4, r4
 800c032:	42a6      	cmp	r6, r4
 800c034:	da20      	bge.n	800c078 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c036:	88c7      	ldrh	r7, [r0, #6]
 800c038:	4437      	add	r7, r6
 800c03a:	b2bf      	uxth	r7, r7
 800c03c:	fa0f fc87 	sxth.w	ip, r7
 800c040:	4565      	cmp	r5, ip
 800c042:	da19      	bge.n	800c078 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c044:	45ca      	cmp	sl, r9
 800c046:	4654      	mov	r4, sl
 800c048:	bfb8      	it	lt
 800c04a:	464c      	movlt	r4, r9
 800c04c:	42b5      	cmp	r5, r6
 800c04e:	bfb8      	it	lt
 800c050:	4635      	movlt	r5, r6
 800c052:	45f0      	cmp	r8, lr
 800c054:	bfc8      	it	gt
 800c056:	4613      	movgt	r3, r2
 800c058:	1b1b      	subs	r3, r3, r4
 800c05a:	8083      	strh	r3, [r0, #4]
 800c05c:	88ca      	ldrh	r2, [r1, #6]
 800c05e:	884b      	ldrh	r3, [r1, #2]
 800c060:	8004      	strh	r4, [r0, #0]
 800c062:	4413      	add	r3, r2
 800c064:	b29b      	uxth	r3, r3
 800c066:	b21a      	sxth	r2, r3
 800c068:	4594      	cmp	ip, r2
 800c06a:	bfb8      	it	lt
 800c06c:	463b      	movlt	r3, r7
 800c06e:	1b5b      	subs	r3, r3, r5
 800c070:	80c3      	strh	r3, [r0, #6]
 800c072:	8045      	strh	r5, [r0, #2]
 800c074:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c078:	2300      	movs	r3, #0
 800c07a:	8003      	strh	r3, [r0, #0]
 800c07c:	8043      	strh	r3, [r0, #2]
 800c07e:	8083      	strh	r3, [r0, #4]
 800c080:	80c3      	strh	r3, [r0, #6]
 800c082:	e7f7      	b.n	800c074 <_ZN8touchgfx4RectaNERKS0_+0x78>

0800c084 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800c084:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c088:	b12b      	cbz	r3, 800c096 <_ZNK8touchgfx4Rect7isEmptyEv+0x12>
 800c08a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c08e:	fab0 f080 	clz	r0, r0
 800c092:	0940      	lsrs	r0, r0, #5
 800c094:	4770      	bx	lr
 800c096:	2001      	movs	r0, #1
 800c098:	4770      	bx	lr

0800c09a <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800c09a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c09e:	2300      	movs	r3, #0
 800c0a0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800c0a2:	8003      	strh	r3, [r0, #0]
 800c0a4:	4604      	mov	r4, r0
 800c0a6:	8043      	strh	r3, [r0, #2]
 800c0a8:	8083      	strh	r3, [r0, #4]
 800c0aa:	80c3      	strh	r3, [r0, #6]
 800c0ac:	2d00      	cmp	r5, #0
 800c0ae:	d040      	beq.n	800c132 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800c0b0:	1d28      	adds	r0, r5, #4
 800c0b2:	f7ff ffe7 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c0b6:	b988      	cbnz	r0, 800c0dc <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c0b8:	4620      	mov	r0, r4
 800c0ba:	f7ff ffe3 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c0be:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c0c2:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c0c6:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800c0ca:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800c0ce:	b138      	cbz	r0, 800c0e0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800c0d0:	8022      	strh	r2, [r4, #0]
 800c0d2:	8063      	strh	r3, [r4, #2]
 800c0d4:	f8a4 e004 	strh.w	lr, [r4, #4]
 800c0d8:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c0dc:	69ad      	ldr	r5, [r5, #24]
 800c0de:	e7e5      	b.n	800c0ac <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800c0e0:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c0e4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c0e8:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800c0ec:	4290      	cmp	r0, r2
 800c0ee:	4607      	mov	r7, r0
 800c0f0:	bfa8      	it	ge
 800c0f2:	4617      	movge	r7, r2
 800c0f4:	4472      	add	r2, lr
 800c0f6:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800c0fa:	8027      	strh	r7, [r4, #0]
 800c0fc:	4299      	cmp	r1, r3
 800c0fe:	460e      	mov	r6, r1
 800c100:	4440      	add	r0, r8
 800c102:	bfa8      	it	ge
 800c104:	461e      	movge	r6, r3
 800c106:	4471      	add	r1, lr
 800c108:	4463      	add	r3, ip
 800c10a:	b200      	sxth	r0, r0
 800c10c:	b212      	sxth	r2, r2
 800c10e:	b209      	sxth	r1, r1
 800c110:	b21b      	sxth	r3, r3
 800c112:	4290      	cmp	r0, r2
 800c114:	bfac      	ite	ge
 800c116:	ebc7 0200 	rsbge	r2, r7, r0
 800c11a:	ebc7 0202 	rsblt	r2, r7, r2
 800c11e:	4299      	cmp	r1, r3
 800c120:	bfac      	ite	ge
 800c122:	ebc6 0301 	rsbge	r3, r6, r1
 800c126:	ebc6 0303 	rsblt	r3, r6, r3
 800c12a:	8066      	strh	r6, [r4, #2]
 800c12c:	80a2      	strh	r2, [r4, #4]
 800c12e:	80e3      	strh	r3, [r4, #6]
 800c130:	e7d4      	b.n	800c0dc <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c132:	4620      	mov	r0, r4
 800c134:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c138 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800c138:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c13c:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c140:	b383      	cbz	r3, 800c1a4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c142:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c144:	b374      	cbz	r4, 800c1a4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c146:	f9b1 5000 	ldrsh.w	r5, [r1]
 800c14a:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800c14e:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800c152:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800c156:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c15a:	b303      	cbz	r3, 800c19e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c15c:	4668      	mov	r0, sp
 800c15e:	1d21      	adds	r1, r4, #4
 800c160:	f8ad 5000 	strh.w	r5, [sp]
 800c164:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c168:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c16c:	f8ad 8006 	strh.w	r8, [sp, #6]
 800c170:	f7ff ff44 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800c174:	4668      	mov	r0, sp
 800c176:	f7ff ff85 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c17a:	b980      	cbnz	r0, 800c19e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c17c:	f8bd 3000 	ldrh.w	r3, [sp]
 800c180:	88a2      	ldrh	r2, [r4, #4]
 800c182:	1a9b      	subs	r3, r3, r2
 800c184:	f8ad 3000 	strh.w	r3, [sp]
 800c188:	88e2      	ldrh	r2, [r4, #6]
 800c18a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c18e:	1a9b      	subs	r3, r3, r2
 800c190:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c194:	6823      	ldr	r3, [r4, #0]
 800c196:	4669      	mov	r1, sp
 800c198:	689b      	ldr	r3, [r3, #8]
 800c19a:	4620      	mov	r0, r4
 800c19c:	4798      	blx	r3
 800c19e:	69a4      	ldr	r4, [r4, #24]
 800c1a0:	2c00      	cmp	r4, #0
 800c1a2:	d1d8      	bne.n	800c156 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800c1a4:	b002      	add	sp, #8
 800c1a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c1aa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800c1aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c1ac:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c1b0:	460d      	mov	r5, r1
 800c1b2:	4616      	mov	r6, r2
 800c1b4:	b323      	cbz	r3, 800c200 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c1b6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c1b8:	b314      	cbz	r4, 800c200 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c1ba:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c1be:	b1eb      	cbz	r3, 800c1fc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c1c0:	6828      	ldr	r0, [r5, #0]
 800c1c2:	6869      	ldr	r1, [r5, #4]
 800c1c4:	466b      	mov	r3, sp
 800c1c6:	c303      	stmia	r3!, {r0, r1}
 800c1c8:	4668      	mov	r0, sp
 800c1ca:	1d21      	adds	r1, r4, #4
 800c1cc:	f7ff ff16 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800c1d0:	4668      	mov	r0, sp
 800c1d2:	f7ff ff57 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c1d6:	b988      	cbnz	r0, 800c1fc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c1d8:	f8bd 3000 	ldrh.w	r3, [sp]
 800c1dc:	88a2      	ldrh	r2, [r4, #4]
 800c1de:	1a9b      	subs	r3, r3, r2
 800c1e0:	f8ad 3000 	strh.w	r3, [sp]
 800c1e4:	88e2      	ldrh	r2, [r4, #6]
 800c1e6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c1ea:	1a9b      	subs	r3, r3, r2
 800c1ec:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c1f0:	6823      	ldr	r3, [r4, #0]
 800c1f2:	4632      	mov	r2, r6
 800c1f4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c1f6:	4669      	mov	r1, sp
 800c1f8:	4620      	mov	r0, r4
 800c1fa:	4798      	blx	r3
 800c1fc:	69a4      	ldr	r4, [r4, #24]
 800c1fe:	e7db      	b.n	800c1b8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c200:	b002      	add	sp, #8
 800c202:	bd70      	pop	{r4, r5, r6, pc}

0800c204 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800c204:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800c208:	4770      	bx	lr

0800c20a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c20a:	b513      	push	{r0, r1, r4, lr}
 800c20c:	6803      	ldr	r3, [r0, #0]
 800c20e:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800c212:	2300      	movs	r3, #0
 800c214:	e9cd 3300 	strd	r3, r3, [sp]
 800c218:	466b      	mov	r3, sp
 800c21a:	47a0      	blx	r4
 800c21c:	b002      	add	sp, #8
 800c21e:	bd10      	pop	{r4, pc}

0800c220 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c220:	2301      	movs	r3, #1
 800c222:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c226:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c22a:	4770      	bx	lr

0800c22c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c22c:	2301      	movs	r3, #1
 800c22e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c232:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c236:	4770      	bx	lr

0800c238 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c238:	6843      	ldr	r3, [r0, #4]
 800c23a:	2201      	movs	r2, #1
 800c23c:	725a      	strb	r2, [r3, #9]
 800c23e:	6840      	ldr	r0, [r0, #4]
 800c240:	6803      	ldr	r3, [r0, #0]
 800c242:	691b      	ldr	r3, [r3, #16]
 800c244:	4718      	bx	r3

0800c246 <_ZN8touchgfx3HAL8flushDMAEv>:
 800c246:	6840      	ldr	r0, [r0, #4]
 800c248:	6803      	ldr	r3, [r0, #0]
 800c24a:	689b      	ldr	r3, [r3, #8]
 800c24c:	4718      	bx	r3
	...

0800c250 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c250:	4b04      	ldr	r3, [pc, #16]	; (800c264 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c252:	781b      	ldrb	r3, [r3, #0]
 800c254:	b123      	cbz	r3, 800c260 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c256:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c25a:	f080 0001 	eor.w	r0, r0, #1
 800c25e:	4770      	bx	lr
 800c260:	2001      	movs	r0, #1
 800c262:	4770      	bx	lr
 800c264:	200017a2 	.word	0x200017a2

0800c268 <_ZN8touchgfx3HAL8endFrameEv>:
 800c268:	b510      	push	{r4, lr}
 800c26a:	4604      	mov	r4, r0
 800c26c:	6840      	ldr	r0, [r0, #4]
 800c26e:	6803      	ldr	r3, [r0, #0]
 800c270:	689b      	ldr	r3, [r3, #8]
 800c272:	4798      	blx	r3
 800c274:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800c278:	b113      	cbz	r3, 800c280 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c27a:	2301      	movs	r3, #1
 800c27c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c280:	bd10      	pop	{r4, pc}

0800c282 <_ZN8touchgfx3HAL9taskEntryEv>:
 800c282:	b508      	push	{r3, lr}
 800c284:	6803      	ldr	r3, [r0, #0]
 800c286:	4604      	mov	r4, r0
 800c288:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c28a:	4798      	blx	r3
 800c28c:	6823      	ldr	r3, [r4, #0]
 800c28e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c290:	4620      	mov	r0, r4
 800c292:	4798      	blx	r3
 800c294:	f7fe fa2a 	bl	800a6ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800c298:	6823      	ldr	r3, [r4, #0]
 800c29a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800c29c:	e7f8      	b.n	800c290 <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

0800c2a0 <_ZN8touchgfx3HAL4tickEv>:
 800c2a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c2a2:	6803      	ldr	r3, [r0, #0]
 800c2a4:	4d5c      	ldr	r5, [pc, #368]	; (800c418 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c2a6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c2aa:	4604      	mov	r4, r0
 800c2ac:	4798      	blx	r3
 800c2ae:	2800      	cmp	r0, #0
 800c2b0:	f000 8097 	beq.w	800c3e2 <_ZN8touchgfx3HAL4tickEv+0x142>
 800c2b4:	2001      	movs	r0, #1
 800c2b6:	f7fd ff37 	bl	800a128 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c2ba:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800c2be:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c2c2:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c2c6:	2600      	movs	r6, #0
 800c2c8:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800c2cc:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800c2d0:	b133      	cbz	r3, 800c2e0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800c2d2:	6823      	ldr	r3, [r4, #0]
 800c2d4:	4620      	mov	r0, r4
 800c2d6:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c2da:	4798      	blx	r3
 800c2dc:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800c2e0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800c2e4:	6862      	ldr	r2, [r4, #4]
 800c2e6:	f083 0301 	eor.w	r3, r3, #1
 800c2ea:	7253      	strb	r3, [r2, #9]
 800c2ec:	2601      	movs	r6, #1
 800c2ee:	702e      	strb	r6, [r5, #0]
 800c2f0:	f002 f8aa 	bl	800e448 <_ZN8touchgfx11Application11getInstanceEv>
 800c2f4:	6803      	ldr	r3, [r0, #0]
 800c2f6:	4631      	mov	r1, r6
 800c2f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c2fa:	4798      	blx	r3
 800c2fc:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c300:	b90b      	cbnz	r3, 800c306 <_ZN8touchgfx3HAL4tickEv+0x66>
 800c302:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800c306:	f002 f89f 	bl	800e448 <_ZN8touchgfx11Application11getInstanceEv>
 800c30a:	6803      	ldr	r3, [r0, #0]
 800c30c:	695b      	ldr	r3, [r3, #20]
 800c30e:	4798      	blx	r3
 800c310:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c312:	6803      	ldr	r3, [r0, #0]
 800c314:	691b      	ldr	r3, [r3, #16]
 800c316:	4798      	blx	r3
 800c318:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c31c:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800c320:	3b01      	subs	r3, #1
 800c322:	b2db      	uxtb	r3, r3
 800c324:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c328:	b10a      	cbz	r2, 800c32e <_ZN8touchgfx3HAL4tickEv+0x8e>
 800c32a:	2b00      	cmp	r3, #0
 800c32c:	d1eb      	bne.n	800c306 <_ZN8touchgfx3HAL4tickEv+0x66>
 800c32e:	4a3b      	ldr	r2, [pc, #236]	; (800c41c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c330:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800c334:	7813      	ldrb	r3, [r2, #0]
 800c336:	3301      	adds	r3, #1
 800c338:	b25b      	sxtb	r3, r3
 800c33a:	4299      	cmp	r1, r3
 800c33c:	7013      	strb	r3, [r2, #0]
 800c33e:	dc10      	bgt.n	800c362 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c340:	68e0      	ldr	r0, [r4, #12]
 800c342:	2300      	movs	r3, #0
 800c344:	7013      	strb	r3, [r2, #0]
 800c346:	6803      	ldr	r3, [r0, #0]
 800c348:	aa03      	add	r2, sp, #12
 800c34a:	68db      	ldr	r3, [r3, #12]
 800c34c:	a902      	add	r1, sp, #8
 800c34e:	4798      	blx	r3
 800c350:	6823      	ldr	r3, [r4, #0]
 800c352:	2800      	cmp	r0, #0
 800c354:	d051      	beq.n	800c3fa <_ZN8touchgfx3HAL4tickEv+0x15a>
 800c356:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c35a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c35e:	4620      	mov	r0, r4
 800c360:	4798      	blx	r3
 800c362:	6960      	ldr	r0, [r4, #20]
 800c364:	2300      	movs	r3, #0
 800c366:	f88d 3007 	strb.w	r3, [sp, #7]
 800c36a:	b158      	cbz	r0, 800c384 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c36c:	6803      	ldr	r3, [r0, #0]
 800c36e:	f10d 0107 	add.w	r1, sp, #7
 800c372:	68db      	ldr	r3, [r3, #12]
 800c374:	4798      	blx	r3
 800c376:	b128      	cbz	r0, 800c384 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c378:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c37a:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c37e:	6803      	ldr	r3, [r0, #0]
 800c380:	68db      	ldr	r3, [r3, #12]
 800c382:	4798      	blx	r3
 800c384:	f104 001c 	add.w	r0, r4, #28
 800c388:	f00f f9f8 	bl	801b77c <_ZN8touchgfx8Gestures4tickEv>
 800c38c:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800c390:	b30b      	cbz	r3, 800c3d6 <_ZN8touchgfx3HAL4tickEv+0x136>
 800c392:	6920      	ldr	r0, [r4, #16]
 800c394:	6803      	ldr	r3, [r0, #0]
 800c396:	691b      	ldr	r3, [r3, #16]
 800c398:	4798      	blx	r3
 800c39a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c39c:	4606      	mov	r6, r0
 800c39e:	b903      	cbnz	r3, 800c3a2 <_ZN8touchgfx3HAL4tickEv+0x102>
 800c3a0:	6720      	str	r0, [r4, #112]	; 0x70
 800c3a2:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c3a4:	4a1e      	ldr	r2, [pc, #120]	; (800c420 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800c3a6:	1af3      	subs	r3, r6, r3
 800c3a8:	4293      	cmp	r3, r2
 800c3aa:	d914      	bls.n	800c3d6 <_ZN8touchgfx3HAL4tickEv+0x136>
 800c3ac:	6920      	ldr	r0, [r4, #16]
 800c3ae:	6803      	ldr	r3, [r0, #0]
 800c3b0:	699b      	ldr	r3, [r3, #24]
 800c3b2:	4798      	blx	r3
 800c3b4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c3b6:	2264      	movs	r2, #100	; 0x64
 800c3b8:	1af3      	subs	r3, r6, r3
 800c3ba:	fbb3 f3f2 	udiv	r3, r3, r2
 800c3be:	fbb0 f0f3 	udiv	r0, r0, r3
 800c3c2:	2800      	cmp	r0, #0
 800c3c4:	dc1e      	bgt.n	800c404 <_ZN8touchgfx3HAL4tickEv+0x164>
 800c3c6:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800c3ca:	6920      	ldr	r0, [r4, #16]
 800c3cc:	6803      	ldr	r3, [r0, #0]
 800c3ce:	2100      	movs	r1, #0
 800c3d0:	69db      	ldr	r3, [r3, #28]
 800c3d2:	4798      	blx	r3
 800c3d4:	6726      	str	r6, [r4, #112]	; 0x70
 800c3d6:	f002 f837 	bl	800e448 <_ZN8touchgfx11Application11getInstanceEv>
 800c3da:	6803      	ldr	r3, [r0, #0]
 800c3dc:	2100      	movs	r1, #0
 800c3de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c3e0:	4798      	blx	r3
 800c3e2:	6823      	ldr	r3, [r4, #0]
 800c3e4:	4620      	mov	r0, r4
 800c3e6:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800c3ea:	4798      	blx	r3
 800c3ec:	2001      	movs	r0, #1
 800c3ee:	f7fd fea6 	bl	800a13e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c3f2:	2300      	movs	r3, #0
 800c3f4:	702b      	strb	r3, [r5, #0]
 800c3f6:	b004      	add	sp, #16
 800c3f8:	bd70      	pop	{r4, r5, r6, pc}
 800c3fa:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c3fe:	4620      	mov	r0, r4
 800c400:	4798      	blx	r3
 800c402:	e7ae      	b.n	800c362 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c404:	2863      	cmp	r0, #99	; 0x63
 800c406:	bfcb      	itete	gt
 800c408:	2300      	movgt	r3, #0
 800c40a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800c40e:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800c412:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800c416:	e7d8      	b.n	800c3ca <_ZN8touchgfx3HAL4tickEv+0x12a>
 800c418:	200017a8 	.word	0x200017a8
 800c41c:	200017a9 	.word	0x200017a9
 800c420:	05f5e100 	.word	0x05f5e100

0800c424 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c424:	f7fe b932 	b.w	800a68c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c428 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c428:	6581      	str	r1, [r0, #88]	; 0x58
 800c42a:	301c      	adds	r0, #28
 800c42c:	f00f b9a4 	b.w	801b778 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c430 <_ZN8touchgfx3HAL5touchEll>:
 800c430:	b530      	push	{r4, r5, lr}
 800c432:	b087      	sub	sp, #28
 800c434:	4604      	mov	r4, r0
 800c436:	a804      	add	r0, sp, #16
 800c438:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c43c:	f001 fdc2 	bl	800dfc4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c440:	9b04      	ldr	r3, [sp, #16]
 800c442:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c446:	a906      	add	r1, sp, #24
 800c448:	9b05      	ldr	r3, [sp, #20]
 800c44a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c44e:	a803      	add	r0, sp, #12
 800c450:	f001 fe06 	bl	800e060 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c454:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800c458:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c45c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c460:	f104 001c 	add.w	r0, r4, #28
 800c464:	b189      	cbz	r1, 800c48a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c466:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800c46a:	9300      	str	r3, [sp, #0]
 800c46c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800c470:	4613      	mov	r3, r2
 800c472:	462a      	mov	r2, r5
 800c474:	f00f f990 	bl	801b798 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c478:	b128      	cbz	r0, 800c486 <_ZN8touchgfx3HAL5touchEll+0x56>
 800c47a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c47e:	65e3      	str	r3, [r4, #92]	; 0x5c
 800c480:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c484:	6623      	str	r3, [r4, #96]	; 0x60
 800c486:	b007      	add	sp, #28
 800c488:	bd30      	pop	{r4, r5, pc}
 800c48a:	f00f f9c9 	bl	801b820 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c48e:	2301      	movs	r3, #1
 800c490:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c494:	e7f1      	b.n	800c47a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c496 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c496:	b570      	push	{r4, r5, r6, lr}
 800c498:	2b00      	cmp	r3, #0
 800c49a:	d050      	beq.n	800c53e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c49c:	ea81 0002 	eor.w	r0, r1, r2
 800c4a0:	07c6      	lsls	r6, r0, #31
 800c4a2:	d508      	bpl.n	800c4b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c4a4:	3a01      	subs	r2, #1
 800c4a6:	18cc      	adds	r4, r1, r3
 800c4a8:	42a1      	cmp	r1, r4
 800c4aa:	d048      	beq.n	800c53e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c4ac:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c4b0:	f801 0b01 	strb.w	r0, [r1], #1
 800c4b4:	e7f8      	b.n	800c4a8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c4b6:	07d5      	lsls	r5, r2, #31
 800c4b8:	bf42      	ittt	mi
 800c4ba:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c4be:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c4c2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c4c6:	2b01      	cmp	r3, #1
 800c4c8:	d915      	bls.n	800c4f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c4ca:	ea82 0001 	eor.w	r0, r2, r1
 800c4ce:	0784      	lsls	r4, r0, #30
 800c4d0:	d02d      	beq.n	800c52e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800c4d2:	1e94      	subs	r4, r2, #2
 800c4d4:	4608      	mov	r0, r1
 800c4d6:	18ce      	adds	r6, r1, r3
 800c4d8:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800c4dc:	f820 5b02 	strh.w	r5, [r0], #2
 800c4e0:	1a35      	subs	r5, r6, r0
 800c4e2:	2d01      	cmp	r5, #1
 800c4e4:	d8f8      	bhi.n	800c4d8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800c4e6:	1e98      	subs	r0, r3, #2
 800c4e8:	f020 0001 	bic.w	r0, r0, #1
 800c4ec:	3002      	adds	r0, #2
 800c4ee:	4401      	add	r1, r0
 800c4f0:	4402      	add	r2, r0
 800c4f2:	f003 0301 	and.w	r3, r3, #1
 800c4f6:	1f14      	subs	r4, r2, #4
 800c4f8:	4608      	mov	r0, r1
 800c4fa:	18ce      	adds	r6, r1, r3
 800c4fc:	1a35      	subs	r5, r6, r0
 800c4fe:	2d03      	cmp	r5, #3
 800c500:	d810      	bhi.n	800c524 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800c502:	089c      	lsrs	r4, r3, #2
 800c504:	00a0      	lsls	r0, r4, #2
 800c506:	4401      	add	r1, r0
 800c508:	3801      	subs	r0, #1
 800c50a:	4402      	add	r2, r0
 800c50c:	f06f 0003 	mvn.w	r0, #3
 800c510:	fb00 3404 	mla	r4, r0, r4, r3
 800c514:	440c      	add	r4, r1
 800c516:	42a1      	cmp	r1, r4
 800c518:	d011      	beq.n	800c53e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c51a:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800c51e:	f801 3b01 	strb.w	r3, [r1], #1
 800c522:	e7f8      	b.n	800c516 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800c524:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800c528:	f840 5b04 	str.w	r5, [r0], #4
 800c52c:	e7e6      	b.n	800c4fc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800c52e:	0790      	lsls	r0, r2, #30
 800c530:	d0e1      	beq.n	800c4f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c532:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c536:	f821 0b02 	strh.w	r0, [r1], #2
 800c53a:	3b02      	subs	r3, #2
 800c53c:	e7db      	b.n	800c4f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c53e:	2001      	movs	r0, #1
 800c540:	bd70      	pop	{r4, r5, r6, pc}

0800c542 <_ZN8touchgfx3HAL7noTouchEv>:
 800c542:	b510      	push	{r4, lr}
 800c544:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800c548:	4604      	mov	r4, r0
 800c54a:	b153      	cbz	r3, 800c562 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c54c:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800c550:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800c554:	2101      	movs	r1, #1
 800c556:	301c      	adds	r0, #28
 800c558:	f00f f962 	bl	801b820 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c55c:	2300      	movs	r3, #0
 800c55e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c562:	bd10      	pop	{r4, pc}

0800c564 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c564:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c568:	4605      	mov	r5, r0
 800c56a:	6980      	ldr	r0, [r0, #24]
 800c56c:	b085      	sub	sp, #20
 800c56e:	460f      	mov	r7, r1
 800c570:	4690      	mov	r8, r2
 800c572:	4699      	mov	r9, r3
 800c574:	b930      	cbnz	r0, 800c584 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800c576:	4b1f      	ldr	r3, [pc, #124]	; (800c5f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800c578:	4a1f      	ldr	r2, [pc, #124]	; (800c5f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800c57a:	f44f 7198 	mov.w	r1, #304	; 0x130
 800c57e:	481f      	ldr	r0, [pc, #124]	; (800c5fc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 800c580:	f00f f9e0 	bl	801b944 <__assert_func>
 800c584:	ac04      	add	r4, sp, #16
 800c586:	2600      	movs	r6, #0
 800c588:	f844 6d04 	str.w	r6, [r4, #-4]!
 800c58c:	6806      	ldr	r6, [r0, #0]
 800c58e:	9401      	str	r4, [sp, #4]
 800c590:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800c594:	9400      	str	r4, [sp, #0]
 800c596:	6834      	ldr	r4, [r6, #0]
 800c598:	47a0      	blx	r4
 800c59a:	4c19      	ldr	r4, [pc, #100]	; (800c600 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 800c59c:	4606      	mov	r6, r0
 800c59e:	f8a4 9000 	strh.w	r9, [r4]
 800c5a2:	f7fc f859 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800c5a6:	6803      	ldr	r3, [r0, #0]
 800c5a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c5aa:	4798      	blx	r3
 800c5ac:	280c      	cmp	r0, #12
 800c5ae:	d80f      	bhi.n	800c5d0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800c5b0:	e8df f000 	tbb	[pc, r0]
 800c5b4:	1b1b1207 	.word	0x1b1b1207
 800c5b8:	1b1b1b1b 	.word	0x1b1b1b1b
 800c5bc:	1b1b1b1b 	.word	0x1b1b1b1b
 800c5c0:	1b          	.byte	0x1b
 800c5c1:	00          	.byte	0x00
 800c5c2:	8823      	ldrh	r3, [r4, #0]
 800c5c4:	fb08 7203 	mla	r2, r8, r3, r7
 800c5c8:	9b03      	ldr	r3, [sp, #12]
 800c5ca:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c5ce:	63eb      	str	r3, [r5, #60]	; 0x3c
 800c5d0:	4630      	mov	r0, r6
 800c5d2:	b005      	add	sp, #20
 800c5d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c5d8:	8822      	ldrh	r2, [r4, #0]
 800c5da:	9b03      	ldr	r3, [sp, #12]
 800c5dc:	fb08 7202 	mla	r2, r8, r2, r7
 800c5e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c5e4:	1a9a      	subs	r2, r3, r2
 800c5e6:	63ea      	str	r2, [r5, #60]	; 0x3c
 800c5e8:	e7f2      	b.n	800c5d0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800c5ea:	4b06      	ldr	r3, [pc, #24]	; (800c604 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 800c5ec:	4a02      	ldr	r2, [pc, #8]	; (800c5f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800c5ee:	f240 114d 	movw	r1, #333	; 0x14d
 800c5f2:	e7c4      	b.n	800c57e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800c5f4:	0801f769 	.word	0x0801f769
 800c5f8:	0801fa7a 	.word	0x0801fa7a
 800c5fc:	0801f7ae 	.word	0x0801f7ae
 800c600:	2000179e 	.word	0x2000179e
 800c604:	0801f7d4 	.word	0x0801f7d4

0800c608 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800c608:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c60c:	4698      	mov	r8, r3
 800c60e:	6803      	ldr	r3, [r0, #0]
 800c610:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800c612:	4b0f      	ldr	r3, [pc, #60]	; (800c650 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800c614:	b087      	sub	sp, #28
 800c616:	f8b3 9000 	ldrh.w	r9, [r3]
 800c61a:	460e      	mov	r6, r1
 800c61c:	4617      	mov	r7, r2
 800c61e:	4604      	mov	r4, r0
 800c620:	f7fc f81a 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800c624:	6803      	ldr	r3, [r0, #0]
 800c626:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c628:	4798      	blx	r3
 800c62a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800c62e:	9302      	str	r3, [sp, #8]
 800c630:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c634:	9301      	str	r3, [sp, #4]
 800c636:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c63a:	9300      	str	r3, [sp, #0]
 800c63c:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800c640:	4643      	mov	r3, r8
 800c642:	463a      	mov	r2, r7
 800c644:	4631      	mov	r1, r6
 800c646:	4620      	mov	r0, r4
 800c648:	47a8      	blx	r5
 800c64a:	b007      	add	sp, #28
 800c64c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c650:	2000179e 	.word	0x2000179e

0800c654 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c658:	4606      	mov	r6, r0
 800c65a:	b089      	sub	sp, #36	; 0x24
 800c65c:	4610      	mov	r0, r2
 800c65e:	460c      	mov	r4, r1
 800c660:	4691      	mov	r9, r2
 800c662:	4698      	mov	r8, r3
 800c664:	f003 fbf6 	bl	800fe54 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c668:	2800      	cmp	r0, #0
 800c66a:	f000 8092 	beq.w	800c792 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x13e>
 800c66e:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800c7ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800c672:	f8df b13c 	ldr.w	fp, [pc, #316]	; 800c7b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800c676:	f8da 0000 	ldr.w	r0, [sl]
 800c67a:	4f4b      	ldr	r7, [pc, #300]	; (800c7a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800c67c:	6802      	ldr	r2, [r0, #0]
 800c67e:	6a12      	ldr	r2, [r2, #32]
 800c680:	4790      	blx	r2
 800c682:	f8da 0000 	ldr.w	r0, [sl]
 800c686:	6802      	ldr	r2, [r0, #0]
 800c688:	ad08      	add	r5, sp, #32
 800c68a:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800c68c:	4790      	blx	r2
 800c68e:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 800c692:	f8bb 3000 	ldrh.w	r3, [fp]
 800c696:	9300      	str	r3, [sp, #0]
 800c698:	4628      	mov	r0, r5
 800c69a:	883b      	ldrh	r3, [r7, #0]
 800c69c:	9301      	str	r3, [sp, #4]
 800c69e:	f003 fc99 	bl	800ffd4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c6a2:	f8ab 0000 	strh.w	r0, [fp]
 800c6a6:	4628      	mov	r0, r5
 800c6a8:	f003 fcce 	bl	8010048 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c6ac:	f8da b000 	ldr.w	fp, [sl]
 800c6b0:	8038      	strh	r0, [r7, #0]
 800c6b2:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800c6b6:	9302      	str	r3, [sp, #8]
 800c6b8:	4648      	mov	r0, r9
 800c6ba:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800c6be:	f003 fbc9 	bl	800fe54 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c6c2:	f8da 2000 	ldr.w	r2, [sl]
 800c6c6:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800c6ca:	63d0      	str	r0, [r2, #60]	; 0x3c
 800c6cc:	6822      	ldr	r2, [r4, #0]
 800c6ce:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800c6d2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800c6d4:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800c6d8:	2200      	movs	r2, #0
 800c6da:	4611      	mov	r1, r2
 800c6dc:	4620      	mov	r0, r4
 800c6de:	4798      	blx	r3
 800c6e0:	2201      	movs	r2, #1
 800c6e2:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800c6e6:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800c6ea:	f9b8 1004 	ldrsh.w	r1, [r8, #4]
 800c6ee:	1d22      	adds	r2, r4, #4
 800c6f0:	2900      	cmp	r1, #0
 800c6f2:	d051      	beq.n	800c798 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800c6f4:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800c6f8:	2900      	cmp	r1, #0
 800c6fa:	d04d      	beq.n	800c798 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800c6fc:	6810      	ldr	r0, [r2, #0]
 800c6fe:	6851      	ldr	r1, [r2, #4]
 800c700:	f10d 0c18 	add.w	ip, sp, #24
 800c704:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800c708:	4641      	mov	r1, r8
 800c70a:	a806      	add	r0, sp, #24
 800c70c:	f7ff fc76 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800c710:	4628      	mov	r0, r5
 800c712:	f003 fdeb 	bl	80102ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c716:	4680      	mov	r8, r0
 800c718:	f7fb ff9e 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800c71c:	6802      	ldr	r2, [r0, #0]
 800c71e:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800c720:	4790      	blx	r2
 800c722:	4580      	cmp	r8, r0
 800c724:	d03d      	beq.n	800c7a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x14e>
 800c726:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800c728:	b150      	cbz	r0, 800c740 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800c72a:	4628      	mov	r0, r5
 800c72c:	f003 fdde 	bl	80102ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c730:	4605      	mov	r5, r0
 800c732:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800c734:	6803      	ldr	r3, [r0, #0]
 800c736:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c738:	4798      	blx	r3
 800c73a:	1a2b      	subs	r3, r5, r0
 800c73c:	4258      	negs	r0, r3
 800c73e:	4158      	adcs	r0, r3
 800c740:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800c744:	6822      	ldr	r2, [r4, #0]
 800c746:	6963      	ldr	r3, [r4, #20]
 800c748:	9303      	str	r3, [sp, #12]
 800c74a:	2500      	movs	r5, #0
 800c74c:	6165      	str	r5, [r4, #20]
 800c74e:	4620      	mov	r0, r4
 800c750:	6892      	ldr	r2, [r2, #8]
 800c752:	a906      	add	r1, sp, #24
 800c754:	4790      	blx	r2
 800c756:	9b03      	ldr	r3, [sp, #12]
 800c758:	6163      	str	r3, [r4, #20]
 800c75a:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 800c75e:	6823      	ldr	r3, [r4, #0]
 800c760:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800c764:	4620      	mov	r0, r4
 800c766:	4c11      	ldr	r4, [pc, #68]	; (800c7ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800c768:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c76a:	4652      	mov	r2, sl
 800c76c:	4649      	mov	r1, r9
 800c76e:	4798      	blx	r3
 800c770:	6820      	ldr	r0, [r4, #0]
 800c772:	9b02      	ldr	r3, [sp, #8]
 800c774:	9a00      	ldr	r2, [sp, #0]
 800c776:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800c77a:	4b0d      	ldr	r3, [pc, #52]	; (800c7b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800c77c:	801a      	strh	r2, [r3, #0]
 800c77e:	4b0a      	ldr	r3, [pc, #40]	; (800c7a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800c780:	9a01      	ldr	r2, [sp, #4]
 800c782:	801a      	strh	r2, [r3, #0]
 800c784:	6803      	ldr	r3, [r0, #0]
 800c786:	6a1b      	ldr	r3, [r3, #32]
 800c788:	4798      	blx	r3
 800c78a:	6820      	ldr	r0, [r4, #0]
 800c78c:	6803      	ldr	r3, [r0, #0]
 800c78e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c790:	4798      	blx	r3
 800c792:	b009      	add	sp, #36	; 0x24
 800c794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c798:	6810      	ldr	r0, [r2, #0]
 800c79a:	6851      	ldr	r1, [r2, #4]
 800c79c:	ab06      	add	r3, sp, #24
 800c79e:	c303      	stmia	r3!, {r0, r1}
 800c7a0:	e7b6      	b.n	800c710 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbc>
 800c7a2:	2000      	movs	r0, #0
 800c7a4:	e7cc      	b.n	800c740 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800c7a6:	bf00      	nop
 800c7a8:	200017a0 	.word	0x200017a0
 800c7ac:	200017a4 	.word	0x200017a4
 800c7b0:	2000179e 	.word	0x2000179e

0800c7b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800c7b4:	b510      	push	{r4, lr}
 800c7b6:	4b07      	ldr	r3, [pc, #28]	; (800c7d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800c7b8:	781b      	ldrb	r3, [r3, #0]
 800c7ba:	4604      	mov	r4, r0
 800c7bc:	b13b      	cbz	r3, 800c7ce <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c7be:	6803      	ldr	r3, [r0, #0]
 800c7c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c7c2:	4798      	blx	r3
 800c7c4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c7c6:	4283      	cmp	r3, r0
 800c7c8:	d101      	bne.n	800c7ce <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c7ca:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800c7cc:	bd10      	pop	{r4, pc}
 800c7ce:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800c7d0:	e7fc      	b.n	800c7cc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800c7d2:	bf00      	nop
 800c7d4:	200017a2 	.word	0x200017a2

0800c7d8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800c7d8:	b510      	push	{r4, lr}
 800c7da:	4b0b      	ldr	r3, [pc, #44]	; (800c808 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800c7dc:	781b      	ldrb	r3, [r3, #0]
 800c7de:	4604      	mov	r4, r0
 800c7e0:	b95b      	cbnz	r3, 800c7fa <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c7e2:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800c7e6:	2b02      	cmp	r3, #2
 800c7e8:	d007      	beq.n	800c7fa <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c7ea:	6840      	ldr	r0, [r0, #4]
 800c7ec:	f000 fbc8 	bl	800cf80 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800c7f0:	b118      	cbz	r0, 800c7fa <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c7f2:	6862      	ldr	r2, [r4, #4]
 800c7f4:	7a53      	ldrb	r3, [r2, #9]
 800c7f6:	2b00      	cmp	r3, #0
 800c7f8:	d0fc      	beq.n	800c7f4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800c7fa:	f7fd ff31 	bl	800a660 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c7fe:	4620      	mov	r0, r4
 800c800:	f7ff ffd8 	bl	800c7b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c804:	bd10      	pop	{r4, pc}
 800c806:	bf00      	nop
 800c808:	200017a2 	.word	0x200017a2

0800c80c <_ZN8touchgfx3HAL10initializeEv>:
 800c80c:	b510      	push	{r4, lr}
 800c80e:	4604      	mov	r4, r0
 800c810:	f7fd ff14 	bl	800a63c <_ZN8touchgfx10OSWrappers10initializeEv>
 800c814:	6860      	ldr	r0, [r4, #4]
 800c816:	6803      	ldr	r3, [r0, #0]
 800c818:	68db      	ldr	r3, [r3, #12]
 800c81a:	4798      	blx	r3
 800c81c:	68e0      	ldr	r0, [r4, #12]
 800c81e:	6803      	ldr	r3, [r0, #0]
 800c820:	689b      	ldr	r3, [r3, #8]
 800c822:	4798      	blx	r3
 800c824:	6823      	ldr	r3, [r4, #0]
 800c826:	4620      	mov	r0, r4
 800c828:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c82a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c82e:	4718      	bx	r3

0800c830 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800c830:	b508      	push	{r3, lr}
 800c832:	290c      	cmp	r1, #12
 800c834:	d817      	bhi.n	800c866 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800c836:	e8df f001 	tbb	[pc, r1]
 800c83a:	090b      	.short	0x090b
 800c83c:	0d0d0d07 	.word	0x0d0d0d07
 800c840:	1414140d 	.word	0x1414140d
 800c844:	1414      	.short	0x1414
 800c846:	0d          	.byte	0x0d
 800c847:	00          	.byte	0x00
 800c848:	2020      	movs	r0, #32
 800c84a:	bd08      	pop	{r3, pc}
 800c84c:	2018      	movs	r0, #24
 800c84e:	e7fc      	b.n	800c84a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c850:	2010      	movs	r0, #16
 800c852:	e7fa      	b.n	800c84a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c854:	4b05      	ldr	r3, [pc, #20]	; (800c86c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800c856:	4a06      	ldr	r2, [pc, #24]	; (800c870 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800c858:	4806      	ldr	r0, [pc, #24]	; (800c874 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800c85a:	f44f 710c 	mov.w	r1, #560	; 0x230
 800c85e:	f00f f871 	bl	801b944 <__assert_func>
 800c862:	2008      	movs	r0, #8
 800c864:	e7f1      	b.n	800c84a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c866:	2000      	movs	r0, #0
 800c868:	e7ef      	b.n	800c84a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c86a:	bf00      	nop
 800c86c:	0801f8a7 	.word	0x0801f8a7
 800c870:	0801fc3c 	.word	0x0801fc3c
 800c874:	0801f7ae 	.word	0x0801f7ae

0800c878 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800c878:	b570      	push	{r4, r5, r6, lr}
 800c87a:	460d      	mov	r5, r1
 800c87c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800c880:	4616      	mov	r6, r2
 800c882:	461c      	mov	r4, r3
 800c884:	f7ff ffd4 	bl	800c830 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800c888:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800c88c:	10c0      	asrs	r0, r0, #3
 800c88e:	fb06 5101 	mla	r1, r6, r1, r5
 800c892:	fb00 4001 	mla	r0, r0, r1, r4
 800c896:	bd70      	pop	{r4, r5, r6, pc}

0800c898 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800c898:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c89c:	b08a      	sub	sp, #40	; 0x28
 800c89e:	f04f 0c00 	mov.w	ip, #0
 800c8a2:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800c8a6:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800c8aa:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800c8ae:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800c8b2:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800c8b6:	f8cd c020 	str.w	ip, [sp, #32]
 800c8ba:	f1b8 0f02 	cmp.w	r8, #2
 800c8be:	4604      	mov	r4, r0
 800c8c0:	469a      	mov	sl, r3
 800c8c2:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800c8c6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c8ca:	d030      	beq.n	800c92e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800c8cc:	2bff      	cmp	r3, #255	; 0xff
 800c8ce:	d12c      	bne.n	800c92a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800c8d0:	4560      	cmp	r0, ip
 800c8d2:	bf14      	ite	ne
 800c8d4:	2004      	movne	r0, #4
 800c8d6:	2001      	moveq	r0, #1
 800c8d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c8dc:	9204      	str	r2, [sp, #16]
 800c8de:	4620      	mov	r0, r4
 800c8e0:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800c8e4:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c8e8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c8ec:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c8f0:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c8f4:	f7ff ff5e 	bl	800c7b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c8f8:	e9cd 9700 	strd	r9, r7, [sp]
 800c8fc:	4603      	mov	r3, r0
 800c8fe:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800c902:	4651      	mov	r1, sl
 800c904:	4620      	mov	r0, r4
 800c906:	f7ff ffb7 	bl	800c878 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c90a:	f8ad 901e 	strh.w	r9, [sp, #30]
 800c90e:	9005      	str	r0, [sp, #20]
 800c910:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800c914:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800c918:	b106      	cbz	r6, 800c91c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800c91a:	b98d      	cbnz	r5, 800c940 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800c91c:	4b12      	ldr	r3, [pc, #72]	; (800c968 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800c91e:	4a13      	ldr	r2, [pc, #76]	; (800c96c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800c920:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800c924:	4812      	ldr	r0, [pc, #72]	; (800c970 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800c926:	f00f f80d 	bl	801b944 <__assert_func>
 800c92a:	2004      	movs	r0, #4
 800c92c:	e7d4      	b.n	800c8d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c92e:	2bff      	cmp	r3, #255	; 0xff
 800c930:	d104      	bne.n	800c93c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800c932:	2800      	cmp	r0, #0
 800c934:	bf14      	ite	ne
 800c936:	2040      	movne	r0, #64	; 0x40
 800c938:	2020      	moveq	r0, #32
 800c93a:	e7cd      	b.n	800c8d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c93c:	2040      	movs	r0, #64	; 0x40
 800c93e:	e7cb      	b.n	800c8d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c940:	6823      	ldr	r3, [r4, #0]
 800c942:	9d02      	ldr	r5, [sp, #8]
 800c944:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c946:	4620      	mov	r0, r4
 800c948:	4798      	blx	r3
 800c94a:	4228      	tst	r0, r5
 800c94c:	d104      	bne.n	800c958 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800c94e:	4b09      	ldr	r3, [pc, #36]	; (800c974 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800c950:	4a06      	ldr	r2, [pc, #24]	; (800c96c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800c952:	f240 11b1 	movw	r1, #433	; 0x1b1
 800c956:	e7e5      	b.n	800c924 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800c958:	6860      	ldr	r0, [r4, #4]
 800c95a:	6803      	ldr	r3, [r0, #0]
 800c95c:	a902      	add	r1, sp, #8
 800c95e:	685b      	ldr	r3, [r3, #4]
 800c960:	4798      	blx	r3
 800c962:	b00a      	add	sp, #40	; 0x28
 800c964:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c968:	0801f82a 	.word	0x0801f82a
 800c96c:	0801fade 	.word	0x0801fade
 800c970:	0801f7ae 	.word	0x0801f7ae
 800c974:	0801f862 	.word	0x0801f862

0800c978 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800c978:	b510      	push	{r4, lr}
 800c97a:	b08a      	sub	sp, #40	; 0x28
 800c97c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800c980:	9408      	str	r4, [sp, #32]
 800c982:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800c986:	9407      	str	r4, [sp, #28]
 800c988:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800c98c:	9406      	str	r4, [sp, #24]
 800c98e:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800c992:	9405      	str	r4, [sp, #20]
 800c994:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800c998:	9404      	str	r4, [sp, #16]
 800c99a:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800c99e:	9403      	str	r4, [sp, #12]
 800c9a0:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800c9a4:	9402      	str	r4, [sp, #8]
 800c9a6:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800c9aa:	e9cd 3400 	strd	r3, r4, [sp]
 800c9ae:	4613      	mov	r3, r2
 800c9b0:	2200      	movs	r2, #0
 800c9b2:	f7ff ff71 	bl	800c898 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c9b6:	b00a      	add	sp, #40	; 0x28
 800c9b8:	bd10      	pop	{r4, pc}
	...

0800c9bc <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800c9bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c9be:	b08b      	sub	sp, #44	; 0x2c
 800c9c0:	4616      	mov	r6, r2
 800c9c2:	460d      	mov	r5, r1
 800c9c4:	461f      	mov	r7, r3
 800c9c6:	4604      	mov	r4, r0
 800c9c8:	f7fb fe46 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800c9cc:	6803      	ldr	r3, [r0, #0]
 800c9ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9d0:	4798      	blx	r3
 800c9d2:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800c9d6:	4b0d      	ldr	r3, [pc, #52]	; (800ca0c <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800c9d8:	881b      	ldrh	r3, [r3, #0]
 800c9da:	9306      	str	r3, [sp, #24]
 800c9dc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c9e0:	9305      	str	r3, [sp, #20]
 800c9e2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c9e6:	9304      	str	r3, [sp, #16]
 800c9e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c9ec:	9303      	str	r3, [sp, #12]
 800c9ee:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c9f2:	9302      	str	r3, [sp, #8]
 800c9f4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c9f8:	2200      	movs	r2, #0
 800c9fa:	e9cd 7300 	strd	r7, r3, [sp]
 800c9fe:	4629      	mov	r1, r5
 800ca00:	4633      	mov	r3, r6
 800ca02:	4620      	mov	r0, r4
 800ca04:	f7ff ff48 	bl	800c898 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800ca08:	b00b      	add	sp, #44	; 0x2c
 800ca0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca0c:	2000179e 	.word	0x2000179e

0800ca10 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800ca10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca14:	461f      	mov	r7, r3
 800ca16:	4b14      	ldr	r3, [pc, #80]	; (800ca68 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800ca18:	b08a      	sub	sp, #40	; 0x28
 800ca1a:	4616      	mov	r6, r2
 800ca1c:	f8b3 8000 	ldrh.w	r8, [r3]
 800ca20:	460d      	mov	r5, r1
 800ca22:	4604      	mov	r4, r0
 800ca24:	f7fb fe18 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800ca28:	6803      	ldr	r3, [r0, #0]
 800ca2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca2c:	4798      	blx	r3
 800ca2e:	2302      	movs	r3, #2
 800ca30:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800ca34:	2301      	movs	r3, #1
 800ca36:	9305      	str	r3, [sp, #20]
 800ca38:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800ca3c:	9304      	str	r3, [sp, #16]
 800ca3e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ca42:	9303      	str	r3, [sp, #12]
 800ca44:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ca48:	9302      	str	r3, [sp, #8]
 800ca4a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ca4e:	9008      	str	r0, [sp, #32]
 800ca50:	e9cd 7300 	strd	r7, r3, [sp]
 800ca54:	2200      	movs	r2, #0
 800ca56:	4633      	mov	r3, r6
 800ca58:	4629      	mov	r1, r5
 800ca5a:	4620      	mov	r0, r4
 800ca5c:	f7ff ff1c 	bl	800c898 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800ca60:	b00a      	add	sp, #40	; 0x28
 800ca62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca66:	bf00      	nop
 800ca68:	2000179e 	.word	0x2000179e

0800ca6c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800ca6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca70:	b08b      	sub	sp, #44	; 0x2c
 800ca72:	469b      	mov	fp, r3
 800ca74:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800ca78:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800ca7c:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800ca80:	2fff      	cmp	r7, #255	; 0xff
 800ca82:	bf14      	ite	ne
 800ca84:	2308      	movne	r3, #8
 800ca86:	2302      	moveq	r3, #2
 800ca88:	2600      	movs	r6, #0
 800ca8a:	4604      	mov	r4, r0
 800ca8c:	4689      	mov	r9, r1
 800ca8e:	4692      	mov	sl, r2
 800ca90:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800ca94:	9608      	str	r6, [sp, #32]
 800ca96:	f7ff fe8d 	bl	800c7b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ca9a:	e9cd 8500 	strd	r8, r5, [sp]
 800ca9e:	4603      	mov	r3, r0
 800caa0:	465a      	mov	r2, fp
 800caa2:	4651      	mov	r1, sl
 800caa4:	4620      	mov	r0, r4
 800caa6:	f7ff fee7 	bl	800c878 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800caaa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800caae:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cab2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800cab6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800caba:	6823      	ldr	r3, [r4, #0]
 800cabc:	9005      	str	r0, [sp, #20]
 800cabe:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800cac2:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800cac6:	f8ad 601c 	strh.w	r6, [sp, #28]
 800caca:	f8ad 801e 	strh.w	r8, [sp, #30]
 800cace:	f8cd 9020 	str.w	r9, [sp, #32]
 800cad2:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800cad6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cad8:	9d02      	ldr	r5, [sp, #8]
 800cada:	4620      	mov	r0, r4
 800cadc:	4798      	blx	r3
 800cade:	4228      	tst	r0, r5
 800cae0:	d106      	bne.n	800caf0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800cae2:	4b07      	ldr	r3, [pc, #28]	; (800cb00 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800cae4:	4a07      	ldr	r2, [pc, #28]	; (800cb04 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800cae6:	4808      	ldr	r0, [pc, #32]	; (800cb08 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800cae8:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
 800caec:	f00e ff2a 	bl	801b944 <__assert_func>
 800caf0:	6860      	ldr	r0, [r4, #4]
 800caf2:	6803      	ldr	r3, [r0, #0]
 800caf4:	a902      	add	r1, sp, #8
 800caf6:	685b      	ldr	r3, [r3, #4]
 800caf8:	4798      	blx	r3
 800cafa:	b00b      	add	sp, #44	; 0x2c
 800cafc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb00:	0801f862 	.word	0x0801f862
 800cb04:	0801fba7 	.word	0x0801fba7
 800cb08:	0801f7ae 	.word	0x0801f7ae

0800cb0c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800cb0c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cb10:	461f      	mov	r7, r3
 800cb12:	4b0b      	ldr	r3, [pc, #44]	; (800cb40 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800cb14:	460d      	mov	r5, r1
 800cb16:	f8b3 8000 	ldrh.w	r8, [r3]
 800cb1a:	4616      	mov	r6, r2
 800cb1c:	4604      	mov	r4, r0
 800cb1e:	f7fb fd9b 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800cb22:	6803      	ldr	r3, [r0, #0]
 800cb24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb26:	4798      	blx	r3
 800cb28:	463b      	mov	r3, r7
 800cb2a:	e9cd 8000 	strd	r8, r0, [sp]
 800cb2e:	4632      	mov	r2, r6
 800cb30:	4629      	mov	r1, r5
 800cb32:	4620      	mov	r0, r4
 800cb34:	f7ff fea0 	bl	800c878 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800cb38:	b002      	add	sp, #8
 800cb3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cb3e:	bf00      	nop
 800cb40:	2000179e 	.word	0x2000179e

0800cb44 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800cb44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb48:	b088      	sub	sp, #32
 800cb4a:	4698      	mov	r8, r3
 800cb4c:	2300      	movs	r3, #0
 800cb4e:	9306      	str	r3, [sp, #24]
 800cb50:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800cb54:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800cb58:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800cb5c:	f8ad 6010 	strh.w	r6, [sp, #16]
 800cb60:	e9cd 3100 	strd	r3, r1, [sp]
 800cb64:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800cb68:	f8ad 3014 	strh.w	r3, [sp, #20]
 800cb6c:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800cb70:	f88d 301c 	strb.w	r3, [sp, #28]
 800cb74:	4617      	mov	r7, r2
 800cb76:	4604      	mov	r4, r0
 800cb78:	f8ad 5012 	strh.w	r5, [sp, #18]
 800cb7c:	f7ff fe1a 	bl	800c7b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cb80:	4642      	mov	r2, r8
 800cb82:	4603      	mov	r3, r0
 800cb84:	4639      	mov	r1, r7
 800cb86:	4620      	mov	r0, r4
 800cb88:	f7ff ffc0 	bl	800cb0c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cb8c:	4b16      	ldr	r3, [pc, #88]	; (800cbe8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800cb8e:	9003      	str	r0, [sp, #12]
 800cb90:	881b      	ldrh	r3, [r3, #0]
 800cb92:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cb96:	f7fb fd5f 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800cb9a:	6803      	ldr	r3, [r0, #0]
 800cb9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb9e:	4798      	blx	r3
 800cba0:	f88d 001e 	strb.w	r0, [sp, #30]
 800cba4:	f88d 001d 	strb.w	r0, [sp, #29]
 800cba8:	b106      	cbz	r6, 800cbac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800cbaa:	b935      	cbnz	r5, 800cbba <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800cbac:	4b0f      	ldr	r3, [pc, #60]	; (800cbec <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800cbae:	4a10      	ldr	r2, [pc, #64]	; (800cbf0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800cbb0:	f240 11cd 	movw	r1, #461	; 0x1cd
 800cbb4:	480f      	ldr	r0, [pc, #60]	; (800cbf4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800cbb6:	f00e fec5 	bl	801b944 <__assert_func>
 800cbba:	6823      	ldr	r3, [r4, #0]
 800cbbc:	9d00      	ldr	r5, [sp, #0]
 800cbbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cbc0:	4620      	mov	r0, r4
 800cbc2:	4798      	blx	r3
 800cbc4:	4228      	tst	r0, r5
 800cbc6:	d104      	bne.n	800cbd2 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800cbc8:	4b0b      	ldr	r3, [pc, #44]	; (800cbf8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800cbca:	4a09      	ldr	r2, [pc, #36]	; (800cbf0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800cbcc:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 800cbd0:	e7f0      	b.n	800cbb4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800cbd2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800cbd4:	6860      	ldr	r0, [r4, #4]
 800cbd6:	9306      	str	r3, [sp, #24]
 800cbd8:	6803      	ldr	r3, [r0, #0]
 800cbda:	4669      	mov	r1, sp
 800cbdc:	685b      	ldr	r3, [r3, #4]
 800cbde:	4798      	blx	r3
 800cbe0:	b008      	add	sp, #32
 800cbe2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cbe6:	bf00      	nop
 800cbe8:	2000179e 	.word	0x2000179e
 800cbec:	0801f82a 	.word	0x0801f82a
 800cbf0:	0801f990 	.word	0x0801f990
 800cbf4:	0801f7ae 	.word	0x0801f7ae
 800cbf8:	0801f862 	.word	0x0801f862

0800cbfc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800cbfc:	b570      	push	{r4, r5, r6, lr}
 800cbfe:	b08a      	sub	sp, #40	; 0x28
 800cc00:	466b      	mov	r3, sp
 800cc02:	e883 0006 	stmia.w	r3, {r1, r2}
 800cc06:	4b20      	ldr	r3, [pc, #128]	; (800cc88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800cc08:	781b      	ldrb	r3, [r3, #0]
 800cc0a:	4604      	mov	r4, r0
 800cc0c:	b933      	cbnz	r3, 800cc1c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800cc0e:	4b1f      	ldr	r3, [pc, #124]	; (800cc8c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800cc10:	4a1f      	ldr	r2, [pc, #124]	; (800cc90 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800cc12:	4820      	ldr	r0, [pc, #128]	; (800cc94 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800cc14:	f240 11f9 	movw	r1, #505	; 0x1f9
 800cc18:	f00e fe94 	bl	801b944 <__assert_func>
 800cc1c:	2300      	movs	r3, #0
 800cc1e:	9308      	str	r3, [sp, #32]
 800cc20:	2301      	movs	r3, #1
 800cc22:	9302      	str	r3, [sp, #8]
 800cc24:	6803      	ldr	r3, [r0, #0]
 800cc26:	f8bd 5000 	ldrh.w	r5, [sp]
 800cc2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cc2c:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800cc30:	4798      	blx	r3
 800cc32:	4632      	mov	r2, r6
 800cc34:	4629      	mov	r1, r5
 800cc36:	4603      	mov	r3, r0
 800cc38:	4620      	mov	r0, r4
 800cc3a:	f7ff ff67 	bl	800cb0c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cc3e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cc40:	9305      	str	r3, [sp, #20]
 800cc42:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cc46:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cc4a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cc4e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cc52:	4b11      	ldr	r3, [pc, #68]	; (800cc98 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800cc54:	9003      	str	r0, [sp, #12]
 800cc56:	881b      	ldrh	r3, [r3, #0]
 800cc58:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cc5c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cc60:	f7fb fcfa 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800cc64:	6803      	ldr	r3, [r0, #0]
 800cc66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cc68:	4798      	blx	r3
 800cc6a:	23ff      	movs	r3, #255	; 0xff
 800cc6c:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800cc70:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800cc74:	6860      	ldr	r0, [r4, #4]
 800cc76:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800cc7a:	6803      	ldr	r3, [r0, #0]
 800cc7c:	a902      	add	r1, sp, #8
 800cc7e:	685b      	ldr	r3, [r3, #4]
 800cc80:	4798      	blx	r3
 800cc82:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800cc84:	b00a      	add	sp, #40	; 0x28
 800cc86:	bd70      	pop	{r4, r5, r6, pc}
 800cc88:	200017a3 	.word	0x200017a3
 800cc8c:	0801f6fb 	.word	0x0801f6fb
 800cc90:	0801fa34 	.word	0x0801fa34
 800cc94:	0801f7ae 	.word	0x0801f7ae
 800cc98:	2000179e 	.word	0x2000179e

0800cc9c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800cc9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc9e:	b08b      	sub	sp, #44	; 0x2c
 800cca0:	466d      	mov	r5, sp
 800cca2:	e885 0006 	stmia.w	r5, {r1, r2}
 800cca6:	461d      	mov	r5, r3
 800cca8:	2300      	movs	r3, #0
 800ccaa:	9308      	str	r3, [sp, #32]
 800ccac:	2301      	movs	r3, #1
 800ccae:	9302      	str	r3, [sp, #8]
 800ccb0:	6803      	ldr	r3, [r0, #0]
 800ccb2:	f8bd 6000 	ldrh.w	r6, [sp]
 800ccb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ccb8:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800ccbc:	4604      	mov	r4, r0
 800ccbe:	4798      	blx	r3
 800ccc0:	463a      	mov	r2, r7
 800ccc2:	4631      	mov	r1, r6
 800ccc4:	4603      	mov	r3, r0
 800ccc6:	4620      	mov	r0, r4
 800ccc8:	f7ff ff20 	bl	800cb0c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cccc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ccd0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ccd4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ccd8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ccdc:	4b0e      	ldr	r3, [pc, #56]	; (800cd18 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800ccde:	9003      	str	r0, [sp, #12]
 800cce0:	881b      	ldrh	r3, [r3, #0]
 800cce2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cce6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cce8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ccec:	9505      	str	r5, [sp, #20]
 800ccee:	f7fb fcb3 	bl	8008658 <_ZN8touchgfx3HAL3lcdEv>
 800ccf2:	6803      	ldr	r3, [r0, #0]
 800ccf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ccf6:	4798      	blx	r3
 800ccf8:	23ff      	movs	r3, #255	; 0xff
 800ccfa:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800ccfe:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800cd02:	6860      	ldr	r0, [r4, #4]
 800cd04:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800cd08:	6803      	ldr	r3, [r0, #0]
 800cd0a:	a902      	add	r1, sp, #8
 800cd0c:	685b      	ldr	r3, [r3, #4]
 800cd0e:	4798      	blx	r3
 800cd10:	4628      	mov	r0, r5
 800cd12:	b00b      	add	sp, #44	; 0x2c
 800cd14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd16:	bf00      	nop
 800cd18:	2000179e 	.word	0x2000179e

0800cd1c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800cd1c:	b570      	push	{r4, r5, r6, lr}
 800cd1e:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800cd22:	4604      	mov	r4, r0
 800cd24:	b19b      	cbz	r3, 800cd4e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800cd26:	2002      	movs	r0, #2
 800cd28:	f7fd fa14 	bl	800a154 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800cd2c:	2300      	movs	r3, #0
 800cd2e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800cd32:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800cd36:	6823      	ldr	r3, [r4, #0]
 800cd38:	4620      	mov	r0, r4
 800cd3a:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800cd3e:	f7ff fd39 	bl	800c7b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cd42:	462b      	mov	r3, r5
 800cd44:	4601      	mov	r1, r0
 800cd46:	4620      	mov	r0, r4
 800cd48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd4c:	4718      	bx	r3
 800cd4e:	bd70      	pop	{r4, r5, r6, pc}

0800cd50 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800cd50:	4770      	bx	lr

0800cd52 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800cd52:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800cd56:	1a13      	subs	r3, r2, r0
 800cd58:	4258      	negs	r0, r3
 800cd5a:	4158      	adcs	r0, r3
 800cd5c:	4770      	bx	lr

0800cd5e <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800cd5e:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800cd62:	1a9b      	subs	r3, r3, r2
 800cd64:	2b00      	cmp	r3, #0
 800cd66:	bfdc      	itt	le
 800cd68:	6882      	ldrle	r2, [r0, #8]
 800cd6a:	189b      	addle	r3, r3, r2
 800cd6c:	2b01      	cmp	r3, #1
 800cd6e:	bfcc      	ite	gt
 800cd70:	2000      	movgt	r0, #0
 800cd72:	2001      	movle	r0, #1
 800cd74:	4770      	bx	lr

0800cd76 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800cd76:	6902      	ldr	r2, [r0, #16]
 800cd78:	6840      	ldr	r0, [r0, #4]
 800cd7a:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800cd7e:	4770      	bx	lr

0800cd80 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800cd80:	6803      	ldr	r3, [r0, #0]
 800cd82:	691b      	ldr	r3, [r3, #16]
 800cd84:	4718      	bx	r3

0800cd86 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800cd86:	4770      	bx	lr

0800cd88 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800cd88:	4770      	bx	lr
	...

0800cd8c <_ZN8touchgfx13DMA_Interface7executeEv>:
 800cd8c:	b570      	push	{r4, r5, r6, lr}
 800cd8e:	2301      	movs	r3, #1
 800cd90:	7203      	strb	r3, [r0, #8]
 800cd92:	4604      	mov	r4, r0
 800cd94:	6840      	ldr	r0, [r0, #4]
 800cd96:	6803      	ldr	r3, [r0, #0]
 800cd98:	699b      	ldr	r3, [r3, #24]
 800cd9a:	4798      	blx	r3
 800cd9c:	6803      	ldr	r3, [r0, #0]
 800cd9e:	2b08      	cmp	r3, #8
 800cda0:	4605      	mov	r5, r0
 800cda2:	d01e      	beq.n	800cde2 <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800cda4:	d80b      	bhi.n	800cdbe <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cda6:	2b02      	cmp	r3, #2
 800cda8:	d027      	beq.n	800cdfa <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800cdaa:	2b04      	cmp	r3, #4
 800cdac:	d011      	beq.n	800cdd2 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800cdae:	2b01      	cmp	r3, #1
 800cdb0:	d028      	beq.n	800ce04 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800cdb2:	4b17      	ldr	r3, [pc, #92]	; (800ce10 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800cdb4:	4a17      	ldr	r2, [pc, #92]	; (800ce14 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800cdb6:	4818      	ldr	r0, [pc, #96]	; (800ce18 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800cdb8:	218b      	movs	r1, #139	; 0x8b
 800cdba:	f00e fdc3 	bl	801b944 <__assert_func>
 800cdbe:	2b40      	cmp	r3, #64	; 0x40
 800cdc0:	d020      	beq.n	800ce04 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800cdc2:	d801      	bhi.n	800cdc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800cdc4:	2b20      	cmp	r3, #32
 800cdc6:	e7f3      	b.n	800cdb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800cdc8:	2b80      	cmp	r3, #128	; 0x80
 800cdca:	d01b      	beq.n	800ce04 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800cdcc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800cdd0:	e7ee      	b.n	800cdb0 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800cdd2:	6823      	ldr	r3, [r4, #0]
 800cdd4:	7f01      	ldrb	r1, [r0, #28]
 800cdd6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cdd8:	4620      	mov	r0, r4
 800cdda:	4798      	blx	r3
 800cddc:	6823      	ldr	r3, [r4, #0]
 800cdde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cde0:	e006      	b.n	800cdf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800cde2:	6823      	ldr	r3, [r4, #0]
 800cde4:	7f01      	ldrb	r1, [r0, #28]
 800cde6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cde8:	4620      	mov	r0, r4
 800cdea:	4798      	blx	r3
 800cdec:	6823      	ldr	r3, [r4, #0]
 800cdee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cdf0:	4629      	mov	r1, r5
 800cdf2:	4620      	mov	r0, r4
 800cdf4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdf8:	4718      	bx	r3
 800cdfa:	6823      	ldr	r3, [r4, #0]
 800cdfc:	4620      	mov	r0, r4
 800cdfe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ce00:	4798      	blx	r3
 800ce02:	e7f3      	b.n	800cdec <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800ce04:	6823      	ldr	r3, [r4, #0]
 800ce06:	4620      	mov	r0, r4
 800ce08:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ce0a:	4798      	blx	r3
 800ce0c:	e7e6      	b.n	800cddc <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800ce0e:	bf00      	nop
 800ce10:	0801fc85 	.word	0x0801fc85
 800ce14:	0801fd94 	.word	0x0801fd94
 800ce18:	0801fcaa 	.word	0x0801fcaa

0800ce1c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ce1c:	b570      	push	{r4, r5, r6, lr}
 800ce1e:	4604      	mov	r4, r0
 800ce20:	460e      	mov	r6, r1
 800ce22:	6860      	ldr	r0, [r4, #4]
 800ce24:	6803      	ldr	r3, [r0, #0]
 800ce26:	685b      	ldr	r3, [r3, #4]
 800ce28:	4798      	blx	r3
 800ce2a:	2800      	cmp	r0, #0
 800ce2c:	d1f9      	bne.n	800ce22 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ce2e:	4d0b      	ldr	r5, [pc, #44]	; (800ce5c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800ce30:	6828      	ldr	r0, [r5, #0]
 800ce32:	6803      	ldr	r3, [r0, #0]
 800ce34:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ce36:	4798      	blx	r3
 800ce38:	f7fd fc34 	bl	800a6a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ce3c:	6860      	ldr	r0, [r4, #4]
 800ce3e:	6803      	ldr	r3, [r0, #0]
 800ce40:	4631      	mov	r1, r6
 800ce42:	689b      	ldr	r3, [r3, #8]
 800ce44:	4798      	blx	r3
 800ce46:	6823      	ldr	r3, [r4, #0]
 800ce48:	4620      	mov	r0, r4
 800ce4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce4c:	4798      	blx	r3
 800ce4e:	6828      	ldr	r0, [r5, #0]
 800ce50:	6803      	ldr	r3, [r0, #0]
 800ce52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ce56:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ce58:	4718      	bx	r3
 800ce5a:	bf00      	nop
 800ce5c:	200017a4 	.word	0x200017a4

0800ce60 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800ce60:	b508      	push	{r3, lr}
 800ce62:	f7fd fbfd 	bl	800a660 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ce66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ce6a:	f7fd bc0f 	b.w	800a68c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ce6e <_ZN8touchgfx13DMA_Interface5startEv>:
 800ce6e:	b510      	push	{r4, lr}
 800ce70:	4604      	mov	r4, r0
 800ce72:	6840      	ldr	r0, [r0, #4]
 800ce74:	6803      	ldr	r3, [r0, #0]
 800ce76:	681b      	ldr	r3, [r3, #0]
 800ce78:	4798      	blx	r3
 800ce7a:	b948      	cbnz	r0, 800ce90 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ce7c:	7a63      	ldrb	r3, [r4, #9]
 800ce7e:	b13b      	cbz	r3, 800ce90 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ce80:	7a23      	ldrb	r3, [r4, #8]
 800ce82:	b92b      	cbnz	r3, 800ce90 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ce84:	6823      	ldr	r3, [r4, #0]
 800ce86:	4620      	mov	r0, r4
 800ce88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ce8e:	4718      	bx	r3
 800ce90:	bd10      	pop	{r4, pc}
	...

0800ce94 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800ce94:	b510      	push	{r4, lr}
 800ce96:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800ce9a:	1b12      	subs	r2, r2, r4
 800ce9c:	2a00      	cmp	r2, #0
 800ce9e:	bfdc      	itt	le
 800cea0:	6883      	ldrle	r3, [r0, #8]
 800cea2:	18d2      	addle	r2, r2, r3
 800cea4:	2a01      	cmp	r2, #1
 800cea6:	dd18      	ble.n	800ceda <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800cea8:	6843      	ldr	r3, [r0, #4]
 800ceaa:	f101 021c 	add.w	r2, r1, #28
 800ceae:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800ceb2:	f851 4b04 	ldr.w	r4, [r1], #4
 800ceb6:	f843 4b04 	str.w	r4, [r3], #4
 800ceba:	4291      	cmp	r1, r2
 800cebc:	d1f9      	bne.n	800ceb2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800cebe:	880a      	ldrh	r2, [r1, #0]
 800cec0:	801a      	strh	r2, [r3, #0]
 800cec2:	788a      	ldrb	r2, [r1, #2]
 800cec4:	709a      	strb	r2, [r3, #2]
 800cec6:	68c3      	ldr	r3, [r0, #12]
 800cec8:	6882      	ldr	r2, [r0, #8]
 800ceca:	f3bf 8f5b 	dmb	ish
 800cece:	3301      	adds	r3, #1
 800ced0:	429a      	cmp	r2, r3
 800ced2:	bfd8      	it	le
 800ced4:	1a9b      	suble	r3, r3, r2
 800ced6:	60c3      	str	r3, [r0, #12]
 800ced8:	bd10      	pop	{r4, pc}
 800ceda:	4b03      	ldr	r3, [pc, #12]	; (800cee8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800cedc:	4a03      	ldr	r2, [pc, #12]	; (800ceec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800cede:	4804      	ldr	r0, [pc, #16]	; (800cef0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800cee0:	2139      	movs	r1, #57	; 0x39
 800cee2:	f00e fd2f 	bl	801b944 <__assert_func>
 800cee6:	bf00      	nop
 800cee8:	0801fcd0 	.word	0x0801fcd0
 800ceec:	0801fdc4 	.word	0x0801fdc4
 800cef0:	0801fcaa 	.word	0x0801fcaa

0800cef4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800cef4:	b510      	push	{r4, lr}
 800cef6:	6803      	ldr	r3, [r0, #0]
 800cef8:	681b      	ldr	r3, [r3, #0]
 800cefa:	4604      	mov	r4, r0
 800cefc:	4798      	blx	r3
 800cefe:	b128      	cbz	r0, 800cf0c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800cf00:	4b07      	ldr	r3, [pc, #28]	; (800cf20 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800cf02:	4a08      	ldr	r2, [pc, #32]	; (800cf24 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800cf04:	4808      	ldr	r0, [pc, #32]	; (800cf28 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800cf06:	213f      	movs	r1, #63	; 0x3f
 800cf08:	f00e fd1c 	bl	801b944 <__assert_func>
 800cf0c:	6923      	ldr	r3, [r4, #16]
 800cf0e:	68a2      	ldr	r2, [r4, #8]
 800cf10:	f3bf 8f5b 	dmb	ish
 800cf14:	3301      	adds	r3, #1
 800cf16:	429a      	cmp	r2, r3
 800cf18:	bfd8      	it	le
 800cf1a:	1a9b      	suble	r3, r3, r2
 800cf1c:	6123      	str	r3, [r4, #16]
 800cf1e:	bd10      	pop	{r4, pc}
 800cf20:	0801fcf3 	.word	0x0801fcf3
 800cf24:	0801fe12 	.word	0x0801fe12
 800cf28:	0801fcaa 	.word	0x0801fcaa

0800cf2c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800cf2c:	b570      	push	{r4, r5, r6, lr}
 800cf2e:	4604      	mov	r4, r0
 800cf30:	6840      	ldr	r0, [r0, #4]
 800cf32:	6803      	ldr	r3, [r0, #0]
 800cf34:	681b      	ldr	r3, [r3, #0]
 800cf36:	4798      	blx	r3
 800cf38:	4605      	mov	r5, r0
 800cf3a:	b930      	cbnz	r0, 800cf4a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cf3c:	7a23      	ldrb	r3, [r4, #8]
 800cf3e:	b123      	cbz	r3, 800cf4a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cf40:	6860      	ldr	r0, [r4, #4]
 800cf42:	6803      	ldr	r3, [r0, #0]
 800cf44:	695b      	ldr	r3, [r3, #20]
 800cf46:	4798      	blx	r3
 800cf48:	7225      	strb	r5, [r4, #8]
 800cf4a:	6860      	ldr	r0, [r4, #4]
 800cf4c:	6803      	ldr	r3, [r0, #0]
 800cf4e:	681b      	ldr	r3, [r3, #0]
 800cf50:	4798      	blx	r3
 800cf52:	b928      	cbnz	r0, 800cf60 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800cf54:	6823      	ldr	r3, [r4, #0]
 800cf56:	4620      	mov	r0, r4
 800cf58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf5e:	4718      	bx	r3
 800cf60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf64:	f7fd bbaa 	b.w	800a6bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800cf68 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800cf68:	b510      	push	{r4, lr}
 800cf6a:	4c04      	ldr	r4, [pc, #16]	; (800cf7c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800cf6c:	6082      	str	r2, [r0, #8]
 800cf6e:	2200      	movs	r2, #0
 800cf70:	e9c0 4100 	strd	r4, r1, [r0]
 800cf74:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800cf78:	bd10      	pop	{r4, pc}
 800cf7a:	bf00      	nop
 800cf7c:	0801fd78 	.word	0x0801fd78

0800cf80 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800cf80:	6840      	ldr	r0, [r0, #4]
 800cf82:	6803      	ldr	r3, [r0, #0]
 800cf84:	681b      	ldr	r3, [r3, #0]
 800cf86:	4718      	bx	r3

0800cf88 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800cf88:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800cf8c:	4770      	bx	lr

0800cf8e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800cf8e:	b570      	push	{r4, r5, r6, lr}
 800cf90:	790b      	ldrb	r3, [r1, #4]
 800cf92:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800cf96:	2b00      	cmp	r3, #0
 800cf98:	bf0c      	ite	eq
 800cf9a:	2301      	moveq	r3, #1
 800cf9c:	2300      	movne	r3, #0
 800cf9e:	4604      	mov	r4, r0
 800cfa0:	460e      	mov	r6, r1
 800cfa2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800cfa6:	d110      	bne.n	800cfca <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800cfa8:	b185      	cbz	r5, 800cfcc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 800cfaa:	7933      	ldrb	r3, [r6, #4]
 800cfac:	2b01      	cmp	r3, #1
 800cfae:	d113      	bne.n	800cfd8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800cfb0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800cfb2:	b188      	cbz	r0, 800cfd8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800cfb4:	6803      	ldr	r3, [r0, #0]
 800cfb6:	68db      	ldr	r3, [r3, #12]
 800cfb8:	4798      	blx	r3
 800cfba:	b168      	cbz	r0, 800cfd8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800cfbc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800cfbe:	6803      	ldr	r3, [r0, #0]
 800cfc0:	4621      	mov	r1, r4
 800cfc2:	689b      	ldr	r3, [r3, #8]
 800cfc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cfc8:	4718      	bx	r3
 800cfca:	b12d      	cbz	r5, 800cfd8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800cfcc:	6823      	ldr	r3, [r4, #0]
 800cfce:	4620      	mov	r0, r4
 800cfd0:	695b      	ldr	r3, [r3, #20]
 800cfd2:	4798      	blx	r3
 800cfd4:	2d00      	cmp	r5, #0
 800cfd6:	d1e8      	bne.n	800cfaa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800cfd8:	bd70      	pop	{r4, r5, r6, pc}

0800cfda <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800cfda:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cfde:	b133      	cbz	r3, 800cfee <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800cfe0:	790b      	ldrb	r3, [r1, #4]
 800cfe2:	2b01      	cmp	r3, #1
 800cfe4:	bf01      	itttt	eq
 800cfe6:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800cfe8:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800cfea:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800cfec:	8603      	strheq	r3, [r0, #48]	; 0x30
 800cfee:	f7ff bfce 	b.w	800cf8e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>
	...

0800cff4 <_ZN8touchgfx12ToggleButtonC1Ev>:
 800cff4:	2200      	movs	r2, #0
 800cff6:	2101      	movs	r1, #1
 800cff8:	8082      	strh	r2, [r0, #4]
 800cffa:	80c2      	strh	r2, [r0, #6]
 800cffc:	8102      	strh	r2, [r0, #8]
 800cffe:	8142      	strh	r2, [r0, #10]
 800d000:	8182      	strh	r2, [r0, #12]
 800d002:	81c2      	strh	r2, [r0, #14]
 800d004:	8202      	strh	r2, [r0, #16]
 800d006:	8242      	strh	r2, [r0, #18]
 800d008:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d00c:	61c2      	str	r2, [r0, #28]
 800d00e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d012:	6282      	str	r2, [r0, #40]	; 0x28
 800d014:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800d018:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800d01c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d020:	4903      	ldr	r1, [pc, #12]	; (800d030 <_ZN8touchgfx12ToggleButtonC1Ev+0x3c>)
 800d022:	85c2      	strh	r2, [r0, #46]	; 0x2e
 800d024:	8602      	strh	r2, [r0, #48]	; 0x30
 800d026:	f880 2032 	strb.w	r2, [r0, #50]	; 0x32
 800d02a:	6001      	str	r1, [r0, #0]
 800d02c:	8682      	strh	r2, [r0, #52]	; 0x34
 800d02e:	4770      	bx	lr
 800d030:	0801feb8 	.word	0x0801feb8

0800d034 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800d034:	2200      	movs	r2, #0
 800d036:	8002      	strh	r2, [r0, #0]
 800d038:	8042      	strh	r2, [r0, #2]
 800d03a:	8082      	strh	r2, [r0, #4]
 800d03c:	80c2      	strh	r2, [r0, #6]
 800d03e:	4770      	bx	lr

0800d040 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800d040:	b570      	push	{r4, r5, r6, lr}
 800d042:	6803      	ldr	r3, [r0, #0]
 800d044:	4604      	mov	r4, r0
 800d046:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d048:	4615      	mov	r5, r2
 800d04a:	4798      	blx	r3
 800d04c:	6823      	ldr	r3, [r4, #0]
 800d04e:	4629      	mov	r1, r5
 800d050:	4620      	mov	r0, r4
 800d052:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800d054:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d058:	4718      	bx	r3
	...

0800d05c <_ZNK8touchgfx9TypedText7getTextEv>:
 800d05c:	b510      	push	{r4, lr}
 800d05e:	4604      	mov	r4, r0
 800d060:	f7fb f820 	bl	80080a4 <_ZNK8touchgfx9TypedText11assertValidEv>
 800d064:	4b03      	ldr	r3, [pc, #12]	; (800d074 <_ZNK8touchgfx9TypedText7getTextEv+0x18>)
 800d066:	8821      	ldrh	r1, [r4, #0]
 800d068:	6818      	ldr	r0, [r3, #0]
 800d06a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d06e:	f7fc be19 	b.w	8009ca4 <_ZNK8touchgfx5Texts7getTextEt>
 800d072:	bf00      	nop
 800d074:	20001820 	.word	0x20001820

0800d078 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800d078:	b570      	push	{r4, r5, r6, lr}
 800d07a:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800d07c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d080:	429a      	cmp	r2, r3
 800d082:	4604      	mov	r4, r0
 800d084:	d00c      	beq.n	800d0a0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x28>
 800d086:	f850 3b26 	ldr.w	r3, [r0], #38
 800d08a:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800d08c:	f7ff ffe6 	bl	800d05c <_ZNK8touchgfx9TypedText7getTextEv>
 800d090:	2300      	movs	r3, #0
 800d092:	4601      	mov	r1, r0
 800d094:	46ac      	mov	ip, r5
 800d096:	4620      	mov	r0, r4
 800d098:	461a      	mov	r2, r3
 800d09a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d09e:	4760      	bx	ip
 800d0a0:	2000      	movs	r0, #0
 800d0a2:	bd70      	pop	{r4, r5, r6, pc}

0800d0a4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800d0a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d0a6:	6803      	ldr	r3, [r0, #0]
 800d0a8:	4604      	mov	r4, r0
 800d0aa:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800d0ac:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 800d0ae:	a802      	add	r0, sp, #8
 800d0b0:	460d      	mov	r5, r1
 800d0b2:	f820 3d04 	strh.w	r3, [r0, #-4]!
 800d0b6:	f7fa ffc1 	bl	800803c <_ZNK8touchgfx9TypedText7getFontEv>
 800d0ba:	6803      	ldr	r3, [r0, #0]
 800d0bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d0be:	4798      	blx	r3
 800d0c0:	1a29      	subs	r1, r5, r0
 800d0c2:	b209      	sxth	r1, r1
 800d0c4:	4620      	mov	r0, r4
 800d0c6:	47b0      	blx	r6
 800d0c8:	b002      	add	sp, #8
 800d0ca:	bd70      	pop	{r4, r5, r6, pc}

0800d0cc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d0cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d0ce:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800d0d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d0d4:	429a      	cmp	r2, r3
 800d0d6:	d016      	beq.n	800d106 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x3a>
 800d0d8:	f100 0426 	add.w	r4, r0, #38	; 0x26
 800d0dc:	4620      	mov	r0, r4
 800d0de:	f7fa ffad 	bl	800803c <_ZNK8touchgfx9TypedText7getFontEv>
 800d0e2:	6803      	ldr	r3, [r0, #0]
 800d0e4:	4605      	mov	r5, r0
 800d0e6:	4620      	mov	r0, r4
 800d0e8:	69de      	ldr	r6, [r3, #28]
 800d0ea:	f7fa ffc3 	bl	8008074 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800d0ee:	4607      	mov	r7, r0
 800d0f0:	4620      	mov	r0, r4
 800d0f2:	f7ff ffb3 	bl	800d05c <_ZNK8touchgfx9TypedText7getTextEv>
 800d0f6:	2300      	movs	r3, #0
 800d0f8:	4602      	mov	r2, r0
 800d0fa:	9300      	str	r3, [sp, #0]
 800d0fc:	4639      	mov	r1, r7
 800d0fe:	4628      	mov	r0, r5
 800d100:	47b0      	blx	r6
 800d102:	b003      	add	sp, #12
 800d104:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d106:	2000      	movs	r0, #0
 800d108:	e7fb      	b.n	800d102 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x36>

0800d10a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d10a:	b40e      	push	{r1, r2, r3}
 800d10c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d110:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800d112:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d116:	429a      	cmp	r2, r3
 800d118:	b09b      	sub	sp, #108	; 0x6c
 800d11a:	4604      	mov	r4, r0
 800d11c:	d03f      	beq.n	800d19e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x94>
 800d11e:	f100 0726 	add.w	r7, r0, #38	; 0x26
 800d122:	ab22      	add	r3, sp, #136	; 0x88
 800d124:	4638      	mov	r0, r7
 800d126:	9303      	str	r3, [sp, #12]
 800d128:	f7fa ff88 	bl	800803c <_ZNK8touchgfx9TypedText7getFontEv>
 800d12c:	6803      	ldr	r3, [r0, #0]
 800d12e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d130:	4680      	mov	r8, r0
 800d132:	4798      	blx	r3
 800d134:	b205      	sxth	r5, r0
 800d136:	4606      	mov	r6, r0
 800d138:	a804      	add	r0, sp, #16
 800d13a:	f002 fc95 	bl	800fa68 <_ZN8touchgfx12TextProviderC1Ev>
 800d13e:	f8d8 3000 	ldr.w	r3, [r8]
 800d142:	4640      	mov	r0, r8
 800d144:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d146:	4798      	blx	r3
 800d148:	9a03      	ldr	r2, [sp, #12]
 800d14a:	9921      	ldr	r1, [sp, #132]	; 0x84
 800d14c:	4603      	mov	r3, r0
 800d14e:	a804      	add	r0, sp, #16
 800d150:	f002 fca7 	bl	800faa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d154:	4638      	mov	r0, r7
 800d156:	f7fa ff8d 	bl	8008074 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800d15a:	4680      	mov	r8, r0
 800d15c:	4638      	mov	r0, r7
 800d15e:	f7fa ff6d 	bl	800803c <_ZNK8touchgfx9TypedText7getFontEv>
 800d162:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d166:	f894 1031 	ldrb.w	r1, [r4, #49]	; 0x31
 800d16a:	9300      	str	r3, [sp, #0]
 800d16c:	4642      	mov	r2, r8
 800d16e:	4603      	mov	r3, r0
 800d170:	a804      	add	r0, sp, #16
 800d172:	f000 fd4a 	bl	800dc0a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d176:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800d17a:	18a9      	adds	r1, r5, r2
 800d17c:	2900      	cmp	r1, #0
 800d17e:	b203      	sxth	r3, r0
 800d180:	dd0b      	ble.n	800d19a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x90>
 800d182:	3b01      	subs	r3, #1
 800d184:	fb13 f302 	smulbb	r3, r3, r2
 800d188:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d18c:	b21d      	sxth	r5, r3
 800d18e:	4628      	mov	r0, r5
 800d190:	b01b      	add	sp, #108	; 0x6c
 800d192:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d196:	b003      	add	sp, #12
 800d198:	4770      	bx	lr
 800d19a:	2b00      	cmp	r3, #0
 800d19c:	dcf7      	bgt.n	800d18e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x84>
 800d19e:	2500      	movs	r5, #0
 800d1a0:	e7f5      	b.n	800d18e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x84>
	...

0800d1a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800d1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1a8:	8cc6      	ldrh	r6, [r0, #38]	; 0x26
 800d1aa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d1ae:	429e      	cmp	r6, r3
 800d1b0:	b08d      	sub	sp, #52	; 0x34
 800d1b2:	4604      	mov	r4, r0
 800d1b4:	4688      	mov	r8, r1
 800d1b6:	d04b      	beq.n	800d250 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xac>
 800d1b8:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800d1bc:	4628      	mov	r0, r5
 800d1be:	f7fa ff3d 	bl	800803c <_ZNK8touchgfx9TypedText7getFontEv>
 800d1c2:	4607      	mov	r7, r0
 800d1c4:	2800      	cmp	r0, #0
 800d1c6:	d043      	beq.n	800d250 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xac>
 800d1c8:	4628      	mov	r0, r5
 800d1ca:	f7fa ff6b 	bl	80080a4 <_ZNK8touchgfx9TypedText11assertValidEv>
 800d1ce:	4b22      	ldr	r3, [pc, #136]	; (800d258 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xb4>)
 800d1d0:	f894 902e 	ldrb.w	r9, [r4, #46]	; 0x2e
 800d1d4:	681b      	ldr	r3, [r3, #0]
 800d1d6:	f9b4 a02c 	ldrsh.w	sl, [r4, #44]	; 0x2c
 800d1da:	f894 b030 	ldrb.w	fp, [r4, #48]	; 0x30
 800d1de:	eb03 0346 	add.w	r3, r3, r6, lsl #1
 800d1e2:	4628      	mov	r0, r5
 800d1e4:	785e      	ldrb	r6, [r3, #1]
 800d1e6:	f7fa ff45 	bl	8008074 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800d1ea:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d1ec:	9309      	str	r3, [sp, #36]	; 0x24
 800d1ee:	4b1b      	ldr	r3, [pc, #108]	; (800d25c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xb8>)
 800d1f0:	f894 2031 	ldrb.w	r2, [r4, #49]	; 0x31
 800d1f4:	681b      	ldr	r3, [r3, #0]
 800d1f6:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
 800d1fa:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d1fe:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 800d202:	9707      	str	r7, [sp, #28]
 800d204:	f3c6 0601 	ubfx	r6, r6, #0, #2
 800d208:	f88d 902a 	strb.w	r9, [sp, #42]	; 0x2a
 800d20c:	f88d 6020 	strb.w	r6, [sp, #32]
 800d210:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800d214:	f88d b022 	strb.w	fp, [sp, #34]	; 0x22
 800d218:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800d21c:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 800d220:	b10a      	cbz	r2, 800d226 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800d222:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800d224:	b906      	cbnz	r6, 800d228 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x84>
 800d226:	689e      	ldr	r6, [r3, #8]
 800d228:	af05      	add	r7, sp, #20
 800d22a:	4621      	mov	r1, r4
 800d22c:	4638      	mov	r0, r7
 800d22e:	f001 fddc 	bl	800edea <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d232:	4628      	mov	r0, r5
 800d234:	f7ff ff12 	bl	800d05c <_ZNK8touchgfx9TypedText7getTextEv>
 800d238:	2300      	movs	r3, #0
 800d23a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800d23e:	ab07      	add	r3, sp, #28
 800d240:	9001      	str	r0, [sp, #4]
 800d242:	9300      	str	r3, [sp, #0]
 800d244:	e897 0006 	ldmia.w	r7, {r1, r2}
 800d248:	4643      	mov	r3, r8
 800d24a:	4630      	mov	r0, r6
 800d24c:	f000 faa8 	bl	800d7a0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d250:	b00d      	add	sp, #52	; 0x34
 800d252:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d256:	bf00      	nop
 800d258:	20001814 	.word	0x20001814
 800d25c:	200017a4 	.word	0x200017a4

0800d260 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800d260:	b570      	push	{r4, r5, r6, lr}
 800d262:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800d264:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d268:	429a      	cmp	r2, r3
 800d26a:	4604      	mov	r4, r0
 800d26c:	d021      	beq.n	800d2b2 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800d26e:	6803      	ldr	r3, [r0, #0]
 800d270:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d272:	4798      	blx	r3
 800d274:	6823      	ldr	r3, [r4, #0]
 800d276:	4605      	mov	r5, r0
 800d278:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d27a:	4620      	mov	r0, r4
 800d27c:	4798      	blx	r3
 800d27e:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800d282:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d286:	6823      	ldr	r3, [r4, #0]
 800d288:	4606      	mov	r6, r0
 800d28a:	b22d      	sxth	r5, r5
 800d28c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d28e:	d109      	bne.n	800d2a4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800d290:	4629      	mov	r1, r5
 800d292:	4620      	mov	r0, r4
 800d294:	4798      	blx	r3
 800d296:	6823      	ldr	r3, [r4, #0]
 800d298:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d29a:	4631      	mov	r1, r6
 800d29c:	4620      	mov	r0, r4
 800d29e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d2a2:	4718      	bx	r3
 800d2a4:	4601      	mov	r1, r0
 800d2a6:	4620      	mov	r0, r4
 800d2a8:	4798      	blx	r3
 800d2aa:	6823      	ldr	r3, [r4, #0]
 800d2ac:	4629      	mov	r1, r5
 800d2ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d2b0:	e7f4      	b.n	800d29c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800d2b2:	bd70      	pop	{r4, r5, r6, pc}

0800d2b4 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800d2b4:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800d2b8:	84c1      	strh	r1, [r0, #38]	; 0x26
 800d2ba:	b922      	cbnz	r2, 800d2c6 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x12>
 800d2bc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d2c0:	b90b      	cbnz	r3, 800d2c6 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x12>
 800d2c2:	f7ff bfcd 	b.w	800d260 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d2c6:	4770      	bx	lr

0800d2c8 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d2c8:	2300      	movs	r3, #0
 800d2ca:	8003      	strh	r3, [r0, #0]
 800d2cc:	8043      	strh	r3, [r0, #2]
 800d2ce:	8083      	strh	r3, [r0, #4]
 800d2d0:	80c3      	strh	r3, [r0, #6]
 800d2d2:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d2d6:	b91b      	cbnz	r3, 800d2e0 <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800d2d8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800d2dc:	2bff      	cmp	r3, #255	; 0xff
 800d2de:	d103      	bne.n	800d2e8 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800d2e0:	890b      	ldrh	r3, [r1, #8]
 800d2e2:	8083      	strh	r3, [r0, #4]
 800d2e4:	894b      	ldrh	r3, [r1, #10]
 800d2e6:	80c3      	strh	r3, [r0, #6]
 800d2e8:	4770      	bx	lr
	...

0800d2ec <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d2ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d2ee:	4604      	mov	r4, r0
 800d2f0:	6808      	ldr	r0, [r1, #0]
 800d2f2:	6849      	ldr	r1, [r1, #4]
 800d2f4:	466b      	mov	r3, sp
 800d2f6:	c303      	stmia	r3!, {r0, r1}
 800d2f8:	6823      	ldr	r3, [r4, #0]
 800d2fa:	4669      	mov	r1, sp
 800d2fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d2fe:	4620      	mov	r0, r4
 800d300:	4798      	blx	r3
 800d302:	4b08      	ldr	r3, [pc, #32]	; (800d324 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d304:	681b      	ldr	r3, [r3, #0]
 800d306:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d30a:	b10a      	cbz	r2, 800d310 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d30c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d30e:	b900      	cbnz	r0, 800d312 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d310:	6898      	ldr	r0, [r3, #8]
 800d312:	6803      	ldr	r3, [r0, #0]
 800d314:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d316:	69dd      	ldr	r5, [r3, #28]
 800d318:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d31c:	4669      	mov	r1, sp
 800d31e:	47a8      	blx	r5
 800d320:	b003      	add	sp, #12
 800d322:	bd30      	pop	{r4, r5, pc}
 800d324:	200017a4 	.word	0x200017a4

0800d328 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d328:	b538      	push	{r3, r4, r5, lr}
 800d32a:	880b      	ldrh	r3, [r1, #0]
 800d32c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d32e:	4605      	mov	r5, r0
 800d330:	8813      	ldrh	r3, [r2, #0]
 800d332:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d336:	4604      	mov	r4, r0
 800d338:	4628      	mov	r0, r5
 800d33a:	f002 fe4b 	bl	800ffd4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d33e:	8120      	strh	r0, [r4, #8]
 800d340:	4628      	mov	r0, r5
 800d342:	f002 fe81 	bl	8010048 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d346:	8160      	strh	r0, [r4, #10]
 800d348:	bd38      	pop	{r3, r4, r5, pc}

0800d34a <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d34a:	b510      	push	{r4, lr}
 800d34c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800d350:	2bff      	cmp	r3, #255	; 0xff
 800d352:	4604      	mov	r4, r0
 800d354:	d006      	beq.n	800d364 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d356:	2300      	movs	r3, #0
 800d358:	8003      	strh	r3, [r0, #0]
 800d35a:	8043      	strh	r3, [r0, #2]
 800d35c:	8083      	strh	r3, [r0, #4]
 800d35e:	80c3      	strh	r3, [r0, #6]
 800d360:	4620      	mov	r0, r4
 800d362:	bd10      	pop	{r4, pc}
 800d364:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d368:	b11b      	cbz	r3, 800d372 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d36a:	3130      	adds	r1, #48	; 0x30
 800d36c:	f002 fea6 	bl	80100bc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d370:	e7f6      	b.n	800d360 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d372:	312e      	adds	r1, #46	; 0x2e
 800d374:	e7fa      	b.n	800d36c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800d378 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d378:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d37c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d380:	b08b      	sub	sp, #44	; 0x2c
 800d382:	4604      	mov	r4, r0
 800d384:	4689      	mov	r9, r1
 800d386:	2b00      	cmp	r3, #0
 800d388:	d043      	beq.n	800d412 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9a>
 800d38a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d38c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d390:	a805      	add	r0, sp, #20
 800d392:	f002 fe1f 	bl	800ffd4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d396:	4607      	mov	r7, r0
 800d398:	fa0f f880 	sxth.w	r8, r0
 800d39c:	a805      	add	r0, sp, #20
 800d39e:	f002 fe53 	bl	8010048 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d3a2:	f9b9 6000 	ldrsh.w	r6, [r9]
 800d3a6:	f8b9 2004 	ldrh.w	r2, [r9, #4]
 800d3aa:	4432      	add	r2, r6
 800d3ac:	b292      	uxth	r2, r2
 800d3ae:	2300      	movs	r3, #0
 800d3b0:	fa0f fe82 	sxth.w	lr, r2
 800d3b4:	459e      	cmp	lr, r3
 800d3b6:	fa0f fc80 	sxth.w	ip, r0
 800d3ba:	9306      	str	r3, [sp, #24]
 800d3bc:	dd2b      	ble.n	800d416 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d3be:	45b0      	cmp	r8, r6
 800d3c0:	dd29      	ble.n	800d416 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d3c2:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 800d3c6:	f8b9 3006 	ldrh.w	r3, [r9, #6]
 800d3ca:	442b      	add	r3, r5
 800d3cc:	b29b      	uxth	r3, r3
 800d3ce:	b219      	sxth	r1, r3
 800d3d0:	2900      	cmp	r1, #0
 800d3d2:	dd20      	ble.n	800d416 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d3d4:	45ac      	cmp	ip, r5
 800d3d6:	dd1e      	ble.n	800d416 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d3d8:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800d3dc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800d3e0:	45f0      	cmp	r8, lr
 800d3e2:	bfb8      	it	lt
 800d3e4:	463a      	movlt	r2, r7
 800d3e6:	458c      	cmp	ip, r1
 800d3e8:	bfb8      	it	lt
 800d3ea:	4603      	movlt	r3, r0
 800d3ec:	1b92      	subs	r2, r2, r6
 800d3ee:	1b5b      	subs	r3, r3, r5
 800d3f0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d3f4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d3f8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d3fc:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d400:	4b1d      	ldr	r3, [pc, #116]	; (800d478 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>)
 800d402:	681b      	ldr	r3, [r3, #0]
 800d404:	b953      	cbnz	r3, 800d41c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa4>
 800d406:	4b1d      	ldr	r3, [pc, #116]	; (800d47c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x104>)
 800d408:	4a1d      	ldr	r2, [pc, #116]	; (800d480 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800d40a:	481e      	ldr	r0, [pc, #120]	; (800d484 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800d40c:	21b8      	movs	r1, #184	; 0xb8
 800d40e:	f00e fa99 	bl	801b944 <__assert_func>
 800d412:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d414:	e7ba      	b.n	800d38c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d416:	2300      	movs	r3, #0
 800d418:	9307      	str	r3, [sp, #28]
 800d41a:	e7f1      	b.n	800d400 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x88>
 800d41c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d420:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d424:	429a      	cmp	r2, r3
 800d426:	d024      	beq.n	800d472 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800d428:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d42c:	b30b      	cbz	r3, 800d472 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800d42e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d432:	b1f3      	cbz	r3, 800d472 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800d434:	2300      	movs	r3, #0
 800d436:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d43a:	6823      	ldr	r3, [r4, #0]
 800d43c:	a908      	add	r1, sp, #32
 800d43e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d440:	4620      	mov	r0, r4
 800d442:	4798      	blx	r3
 800d444:	4b10      	ldr	r3, [pc, #64]	; (800d488 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800d446:	681b      	ldr	r3, [r3, #0]
 800d448:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d44c:	b10a      	cbz	r2, 800d452 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d44e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d450:	b900      	cbnz	r0, 800d454 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xdc>
 800d452:	6898      	ldr	r0, [r3, #8]
 800d454:	6801      	ldr	r1, [r0, #0]
 800d456:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d45a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d45e:	2501      	movs	r5, #1
 800d460:	9502      	str	r5, [sp, #8]
 800d462:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d466:	9401      	str	r4, [sp, #4]
 800d468:	ac06      	add	r4, sp, #24
 800d46a:	9400      	str	r4, [sp, #0]
 800d46c:	68cc      	ldr	r4, [r1, #12]
 800d46e:	a905      	add	r1, sp, #20
 800d470:	47a0      	blx	r4
 800d472:	b00b      	add	sp, #44	; 0x2c
 800d474:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d478:	2000184c 	.word	0x2000184c
 800d47c:	08020004 	.word	0x08020004
 800d480:	080200d8 	.word	0x080200d8
 800d484:	08020040 	.word	0x08020040
 800d488:	200017a4 	.word	0x200017a4

0800d48c <_ZN8touchgfx3LCD4initEv>:
 800d48c:	4770      	bx	lr

0800d48e <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800d48e:	2000      	movs	r0, #0
 800d490:	4770      	bx	lr

0800d492 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800d492:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d496:	b091      	sub	sp, #68	; 0x44
 800d498:	4699      	mov	r9, r3
 800d49a:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800d49e:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800d4a0:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800d4a4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d4a8:	4680      	mov	r8, r0
 800d4aa:	4617      	mov	r7, r2
 800d4ac:	a80e      	add	r0, sp, #56	; 0x38
 800d4ae:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800d4b2:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800d4b6:	2500      	movs	r5, #0
 800d4b8:	910d      	str	r1, [sp, #52]	; 0x34
 800d4ba:	950e      	str	r5, [sp, #56]	; 0x38
 800d4bc:	f000 fe3e 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d4c0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800d4c2:	f8d9 6000 	ldr.w	r6, [r9]
 800d4c6:	6818      	ldr	r0, [r3, #0]
 800d4c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d4ca:	f9b4 b000 	ldrsh.w	fp, [r4]
 800d4ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d4d2:	eb02 0c06 	add.w	ip, r2, r6
 800d4d6:	1b80      	subs	r0, r0, r6
 800d4d8:	ebab 0e0c 	sub.w	lr, fp, ip
 800d4dc:	4570      	cmp	r0, lr
 800d4de:	f340 80bd 	ble.w	800d65c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d4e2:	88a1      	ldrh	r1, [r4, #4]
 800d4e4:	4459      	add	r1, fp
 800d4e6:	b209      	sxth	r1, r1
 800d4e8:	458c      	cmp	ip, r1
 800d4ea:	f300 80b7 	bgt.w	800d65c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d4ee:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800d4f2:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800d4f6:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800d4fa:	edd9 6a07 	vldr	s13, [r9, #28]
 800d4fe:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800d502:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800d506:	4283      	cmp	r3, r0
 800d508:	bfa8      	it	ge
 800d50a:	4603      	movge	r3, r0
 800d50c:	ee07 3a90 	vmov	s15, r3
 800d510:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800d514:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800d518:	ee25 4a04 	vmul.f32	s8, s10, s8
 800d51c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800d520:	ee25 5a27 	vmul.f32	s10, s10, s15
 800d524:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800d528:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800d52c:	45e3      	cmp	fp, ip
 800d52e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800d532:	ee32 1a05 	vadd.f32	s2, s4, s10
 800d536:	ee36 0a84 	vadd.f32	s0, s13, s8
 800d53a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d53e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d542:	f340 808e 	ble.w	800d662 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800d546:	fb9e f5f3 	sdiv	r5, lr, r3
 800d54a:	ee07 5a10 	vmov	s14, r5
 800d54e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d552:	2d00      	cmp	r5, #0
 800d554:	fb03 e415 	mls	r4, r3, r5, lr
 800d558:	eea7 0a04 	vfma.f32	s0, s14, s8
 800d55c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800d560:	eea7 1a05 	vfma.f32	s2, s14, s10
 800d564:	dd13      	ble.n	800d58e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800d566:	ee70 6a44 	vsub.f32	s13, s0, s8
 800d56a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800d56e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800d572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d576:	bf18      	it	ne
 800d578:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800d57c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800d580:	bf08      	it	eq
 800d582:	eeb0 7a67 	vmoveq.f32	s14, s15
 800d586:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d58a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d58e:	fb05 f703 	mul.w	r7, r5, r3
 800d592:	1bc0      	subs	r0, r0, r7
 800d594:	443e      	add	r6, r7
 800d596:	1997      	adds	r7, r2, r6
 800d598:	4407      	add	r7, r0
 800d59a:	42b9      	cmp	r1, r7
 800d59c:	bfbc      	itt	lt
 800d59e:	1a88      	sublt	r0, r1, r2
 800d5a0:	1b80      	sublt	r0, r0, r6
 800d5a2:	2800      	cmp	r0, #0
 800d5a4:	dd5a      	ble.n	800d65c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d5a6:	fb90 f1f3 	sdiv	r1, r0, r3
 800d5aa:	fb03 0211 	mls	r2, r3, r1, r0
 800d5ae:	b90a      	cbnz	r2, 800d5b4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800d5b0:	3901      	subs	r1, #1
 800d5b2:	461a      	mov	r2, r3
 800d5b4:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800d5b8:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800d5bc:	44a4      	add	ip, r4
 800d5be:	fb03 c505 	mla	r5, r3, r5, ip
 800d5c2:	2900      	cmp	r1, #0
 800d5c4:	bfcc      	ite	gt
 800d5c6:	469e      	movgt	lr, r3
 800d5c8:	4696      	movle	lr, r2
 800d5ca:	eef0 6a42 	vmov.f32	s13, s4
 800d5ce:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800d5d2:	ee21 3a23 	vmul.f32	s6, s2, s7
 800d5d6:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800d5da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d5de:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d5e2:	eeb0 7a61 	vmov.f32	s14, s3
 800d5e6:	ee17 0a90 	vmov	r0, s15
 800d5ea:	ee73 7a42 	vsub.f32	s15, s6, s4
 800d5ee:	fb90 f6f3 	sdiv	r6, r0, r3
 800d5f2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d5f6:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800d5fa:	ee17 0a90 	vmov	r0, s15
 800d5fe:	fb90 f7f3 	sdiv	r7, r0, r3
 800d602:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800d606:	900c      	str	r0, [sp, #48]	; 0x30
 800d608:	f8d0 8000 	ldr.w	r8, [r0]
 800d60c:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d60e:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800d612:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800d616:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800d61a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800d61e:	f8cd a020 	str.w	sl, [sp, #32]
 800d622:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800d626:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d628:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800d62c:	9603      	str	r6, [sp, #12]
 800d62e:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800d632:	ee16 0a90 	vmov	r0, s13
 800d636:	fb07 0704 	mla	r7, r7, r4, r0
 800d63a:	ee17 0a10 	vmov	r0, s14
 800d63e:	fb06 0604 	mla	r6, r6, r4, r0
 800d642:	e9cd 3600 	strd	r3, r6, [sp]
 800d646:	44ca      	add	sl, r9
 800d648:	f8cd a01c 	str.w	sl, [sp, #28]
 800d64c:	9506      	str	r5, [sp, #24]
 800d64e:	9702      	str	r7, [sp, #8]
 800d650:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800d654:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d656:	ebae 0304 	sub.w	r3, lr, r4
 800d65a:	47a8      	blx	r5
 800d65c:	b011      	add	sp, #68	; 0x44
 800d65e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d662:	462c      	mov	r4, r5
 800d664:	e797      	b.n	800d596 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800d666 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800d666:	b570      	push	{r4, r5, r6, lr}
 800d668:	4604      	mov	r4, r0
 800d66a:	2500      	movs	r5, #0
 800d66c:	7223      	strb	r3, [r4, #8]
 800d66e:	9804      	ldr	r0, [sp, #16]
 800d670:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d674:	8025      	strh	r5, [r4, #0]
 800d676:	6061      	str	r1, [r4, #4]
 800d678:	7263      	strb	r3, [r4, #9]
 800d67a:	60e0      	str	r0, [r4, #12]
 800d67c:	8222      	strh	r2, [r4, #16]
 800d67e:	8265      	strh	r5, [r4, #18]
 800d680:	82a5      	strh	r5, [r4, #20]
 800d682:	82e5      	strh	r5, [r4, #22]
 800d684:	8325      	strh	r5, [r4, #24]
 800d686:	8365      	strh	r5, [r4, #26]
 800d688:	83a5      	strh	r5, [r4, #28]
 800d68a:	77a5      	strb	r5, [r4, #30]
 800d68c:	6803      	ldr	r3, [r0, #0]
 800d68e:	695b      	ldr	r3, [r3, #20]
 800d690:	4798      	blx	r3
 800d692:	4606      	mov	r6, r0
 800d694:	b1f8      	cbz	r0, 800d6d6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d696:	68e0      	ldr	r0, [r4, #12]
 800d698:	6803      	ldr	r3, [r0, #0]
 800d69a:	4631      	mov	r1, r6
 800d69c:	68db      	ldr	r3, [r3, #12]
 800d69e:	4798      	blx	r3
 800d6a0:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800d6a4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d6a8:	7a83      	ldrb	r3, [r0, #10]
 800d6aa:	4313      	orrs	r3, r2
 800d6ac:	83a3      	strh	r3, [r4, #28]
 800d6ae:	7a63      	ldrb	r3, [r4, #9]
 800d6b0:	2b04      	cmp	r3, #4
 800d6b2:	4605      	mov	r5, r0
 800d6b4:	d10f      	bne.n	800d6d6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d6b6:	68e0      	ldr	r0, [r4, #12]
 800d6b8:	6803      	ldr	r3, [r0, #0]
 800d6ba:	462a      	mov	r2, r5
 800d6bc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d6be:	4631      	mov	r1, r6
 800d6c0:	4798      	blx	r3
 800d6c2:	f995 300d 	ldrsb.w	r3, [r5, #13]
 800d6c6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d6ca:	7aab      	ldrb	r3, [r5, #10]
 800d6cc:	4313      	orrs	r3, r2
 800d6ce:	4418      	add	r0, r3
 800d6d0:	8ba3      	ldrh	r3, [r4, #28]
 800d6d2:	4418      	add	r0, r3
 800d6d4:	83a0      	strh	r0, [r4, #28]
 800d6d6:	4620      	mov	r0, r4
 800d6d8:	bd70      	pop	{r4, r5, r6, pc}

0800d6da <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d6da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6de:	2400      	movs	r4, #0
 800d6e0:	b085      	sub	sp, #20
 800d6e2:	4681      	mov	r9, r0
 800d6e4:	460f      	mov	r7, r1
 800d6e6:	4692      	mov	sl, r2
 800d6e8:	469b      	mov	fp, r3
 800d6ea:	46a0      	mov	r8, r4
 800d6ec:	4626      	mov	r6, r4
 800d6ee:	4554      	cmp	r4, sl
 800d6f0:	da21      	bge.n	800d736 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800d6f2:	2300      	movs	r3, #0
 800d6f4:	9303      	str	r3, [sp, #12]
 800d6f6:	463a      	mov	r2, r7
 800d6f8:	ab03      	add	r3, sp, #12
 800d6fa:	4659      	mov	r1, fp
 800d6fc:	4648      	mov	r0, r9
 800d6fe:	f002 fb35 	bl	800fd6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d702:	4605      	mov	r5, r0
 800d704:	b1b8      	cbz	r0, 800d736 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800d706:	280a      	cmp	r0, #10
 800d708:	d015      	beq.n	800d736 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800d70a:	9a03      	ldr	r2, [sp, #12]
 800d70c:	b182      	cbz	r2, 800d730 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x56>
 800d70e:	f992 000d 	ldrsb.w	r0, [r2, #13]
 800d712:	7a93      	ldrb	r3, [r2, #10]
 800d714:	8895      	ldrh	r5, [r2, #4]
 800d716:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d71a:	4303      	orrs	r3, r0
 800d71c:	9301      	str	r3, [sp, #4]
 800d71e:	683b      	ldr	r3, [r7, #0]
 800d720:	4641      	mov	r1, r8
 800d722:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d724:	4638      	mov	r0, r7
 800d726:	4798      	blx	r3
 800d728:	9b01      	ldr	r3, [sp, #4]
 800d72a:	4418      	add	r0, r3
 800d72c:	4406      	add	r6, r0
 800d72e:	b2b6      	uxth	r6, r6
 800d730:	3401      	adds	r4, #1
 800d732:	46a8      	mov	r8, r5
 800d734:	e7db      	b.n	800d6ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x14>
 800d736:	4630      	mov	r0, r6
 800d738:	b005      	add	sp, #20
 800d73a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d73e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d73e:	2a02      	cmp	r2, #2
 800d740:	b530      	push	{r4, r5, lr}
 800d742:	d011      	beq.n	800d768 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d744:	2a03      	cmp	r2, #3
 800d746:	d01c      	beq.n	800d782 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d748:	2a01      	cmp	r2, #1
 800d74a:	d10c      	bne.n	800d766 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d74c:	888b      	ldrh	r3, [r1, #4]
 800d74e:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d752:	8801      	ldrh	r1, [r0, #0]
 800d754:	8844      	ldrh	r4, [r0, #2]
 800d756:	8004      	strh	r4, [r0, #0]
 800d758:	1a9b      	subs	r3, r3, r2
 800d75a:	1a5b      	subs	r3, r3, r1
 800d75c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d760:	8043      	strh	r3, [r0, #2]
 800d762:	8081      	strh	r1, [r0, #4]
 800d764:	80c2      	strh	r2, [r0, #6]
 800d766:	bd30      	pop	{r4, r5, pc}
 800d768:	88cb      	ldrh	r3, [r1, #6]
 800d76a:	88c2      	ldrh	r2, [r0, #6]
 800d76c:	1a9b      	subs	r3, r3, r2
 800d76e:	8842      	ldrh	r2, [r0, #2]
 800d770:	1a9b      	subs	r3, r3, r2
 800d772:	888a      	ldrh	r2, [r1, #4]
 800d774:	8881      	ldrh	r1, [r0, #4]
 800d776:	8043      	strh	r3, [r0, #2]
 800d778:	1a52      	subs	r2, r2, r1
 800d77a:	8801      	ldrh	r1, [r0, #0]
 800d77c:	1a52      	subs	r2, r2, r1
 800d77e:	8002      	strh	r2, [r0, #0]
 800d780:	e7f1      	b.n	800d766 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d782:	88cb      	ldrh	r3, [r1, #6]
 800d784:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d788:	8841      	ldrh	r1, [r0, #2]
 800d78a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d78e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d792:	8045      	strh	r5, [r0, #2]
 800d794:	1a9b      	subs	r3, r3, r2
 800d796:	1a5b      	subs	r3, r3, r1
 800d798:	8003      	strh	r3, [r0, #0]
 800d79a:	8082      	strh	r2, [r0, #4]
 800d79c:	80c4      	strh	r4, [r0, #6]
 800d79e:	e7e2      	b.n	800d766 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d7a0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
 800d7a0:	b570      	push	{r4, r5, r6, lr}
 800d7a2:	b086      	sub	sp, #24
 800d7a4:	ac02      	add	r4, sp, #8
 800d7a6:	e884 0006 	stmia.w	r4, {r1, r2}
 800d7aa:	461a      	mov	r2, r3
 800d7ac:	ab0c      	add	r3, sp, #48	; 0x30
 800d7ae:	9305      	str	r3, [sp, #20]
 800d7b0:	4b0a      	ldr	r3, [pc, #40]	; (800d7dc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz+0x3c>)
 800d7b2:	685d      	ldr	r5, [r3, #4]
 800d7b4:	1069      	asrs	r1, r5, #1
 800d7b6:	07ed      	lsls	r5, r5, #31
 800d7b8:	bf4c      	ite	mi
 800d7ba:	681b      	ldrmi	r3, [r3, #0]
 800d7bc:	681d      	ldrpl	r5, [r3, #0]
 800d7be:	eb00 0601 	add.w	r6, r0, r1
 800d7c2:	bf44      	itt	mi
 800d7c4:	5841      	ldrmi	r1, [r0, r1]
 800d7c6:	58cd      	ldrmi	r5, [r1, r3]
 800d7c8:	9b05      	ldr	r3, [sp, #20]
 800d7ca:	9301      	str	r3, [sp, #4]
 800d7cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d7ce:	9300      	str	r3, [sp, #0]
 800d7d0:	4621      	mov	r1, r4
 800d7d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d7d4:	4630      	mov	r0, r6
 800d7d6:	47a8      	blx	r5
 800d7d8:	b006      	add	sp, #24
 800d7da:	bd70      	pop	{r4, r5, r6, pc}
 800d7dc:	20000018 	.word	0x20000018

0800d7e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d7e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7e4:	b09d      	sub	sp, #116	; 0x74
 800d7e6:	9114      	str	r1, [sp, #80]	; 0x50
 800d7e8:	9315      	str	r3, [sp, #84]	; 0x54
 800d7ea:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800d7ec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800d7ee:	8809      	ldrh	r1, [r1, #0]
 800d7f0:	889b      	ldrh	r3, [r3, #4]
 800d7f2:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 800d7f4:	9210      	str	r2, [sp, #64]	; 0x40
 800d7f6:	440b      	add	r3, r1
 800d7f8:	b21b      	sxth	r3, r3
 800d7fa:	930e      	str	r3, [sp, #56]	; 0x38
 800d7fc:	6833      	ldr	r3, [r6, #0]
 800d7fe:	f89d 20b0 	ldrb.w	r2, [sp, #176]	; 0xb0
 800d802:	7a59      	ldrb	r1, [r3, #9]
 800d804:	7a1b      	ldrb	r3, [r3, #8]
 800d806:	9312      	str	r3, [sp, #72]	; 0x48
 800d808:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d80a:	900f      	str	r0, [sp, #60]	; 0x3c
 800d80c:	f89d b0a4 	ldrb.w	fp, [sp, #164]	; 0xa4
 800d810:	9113      	str	r1, [sp, #76]	; 0x4c
 800d812:	f9b3 4000 	ldrsh.w	r4, [r3]
 800d816:	2a00      	cmp	r2, #0
 800d818:	d059      	beq.n	800d8ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xee>
 800d81a:	7c33      	ldrb	r3, [r6, #16]
 800d81c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 800d81e:	2b04      	cmp	r3, #4
 800d820:	bf14      	ite	ne
 800d822:	2301      	movne	r3, #1
 800d824:	2302      	moveq	r3, #2
 800d826:	4413      	add	r3, r2
 800d828:	f04f 0800 	mov.w	r8, #0
 800d82c:	930d      	str	r3, [sp, #52]	; 0x34
 800d82e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800d832:	4645      	mov	r5, r8
 800d834:	e9dd 320c 	ldrd	r3, r2, [sp, #48]	; 0x30
 800d838:	4293      	cmp	r3, r2
 800d83a:	da75      	bge.n	800d928 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x148>
 800d83c:	2300      	movs	r3, #0
 800d83e:	931a      	str	r3, [sp, #104]	; 0x68
 800d840:	992b      	ldr	r1, [sp, #172]	; 0xac
 800d842:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d844:	6832      	ldr	r2, [r6, #0]
 800d846:	428b      	cmp	r3, r1
 800d848:	db43      	blt.n	800d8d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf2>
 800d84a:	6813      	ldr	r3, [r2, #0]
 800d84c:	4610      	mov	r0, r2
 800d84e:	695b      	ldr	r3, [r3, #20]
 800d850:	4798      	blx	r3
 800d852:	4681      	mov	r9, r0
 800d854:	6830      	ldr	r0, [r6, #0]
 800d856:	6803      	ldr	r3, [r0, #0]
 800d858:	aa1b      	add	r2, sp, #108	; 0x6c
 800d85a:	689f      	ldr	r7, [r3, #8]
 800d85c:	4649      	mov	r1, r9
 800d85e:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800d862:	47b8      	blx	r7
 800d864:	901a      	str	r0, [sp, #104]	; 0x68
 800d866:	f64f 6aff 	movw	sl, #65279	; 0xfeff
 800d86a:	45d1      	cmp	r9, sl
 800d86c:	d045      	beq.n	800d8fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d86e:	f242 070b 	movw	r7, #8203	; 0x200b
 800d872:	45b9      	cmp	r9, r7
 800d874:	d041      	beq.n	800d8fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d876:	f1b9 0f00 	cmp.w	r9, #0
 800d87a:	f000 80ef 	beq.w	800da5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800d87e:	f1b9 0f0a 	cmp.w	r9, #10
 800d882:	d057      	beq.n	800d934 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800d884:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800d886:	b383      	cbz	r3, 800d8ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10a>
 800d888:	f8b3 9004 	ldrh.w	r9, [r3, #4]
 800d88c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800d88e:	2a00      	cmp	r2, #0
 800d890:	f000 80d3 	beq.w	800da3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x25a>
 800d894:	f1bb 0f00 	cmp.w	fp, #0
 800d898:	d100      	bne.n	800d89c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xbc>
 800d89a:	4444      	add	r4, r8
 800d89c:	f992 800d 	ldrsb.w	r8, [r2, #13]
 800d8a0:	f408 7380 	and.w	r3, r8, #256	; 0x100
 800d8a4:	f892 800a 	ldrb.w	r8, [r2, #10]
 800d8a8:	f1bb 0f01 	cmp.w	fp, #1
 800d8ac:	ea48 0803 	orr.w	r8, r8, r3
 800d8b0:	d128      	bne.n	800d904 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x124>
 800d8b2:	eba4 0408 	sub.w	r4, r4, r8
 800d8b6:	2d00      	cmp	r5, #0
 800d8b8:	d143      	bne.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x162>
 800d8ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d8bc:	eb08 0304 	add.w	r3, r8, r4
 800d8c0:	4413      	add	r3, r2
 800d8c2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800d8c4:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d8c8:	4293      	cmp	r3, r2
 800d8ca:	da44      	bge.n	800d956 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d8cc:	e02b      	b.n	800d926 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x146>
 800d8ce:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800d8d0:	e7aa      	b.n	800d828 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x48>
 800d8d2:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800d8d6:	9301      	str	r3, [sp, #4]
 800d8d8:	ab1b      	add	r3, sp, #108	; 0x6c
 800d8da:	9300      	str	r3, [sp, #0]
 800d8dc:	4659      	mov	r1, fp
 800d8de:	ab1a      	add	r3, sp, #104	; 0x68
 800d8e0:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800d8e2:	f002 fa77 	bl	800fdd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d8e6:	4681      	mov	r9, r0
 800d8e8:	e7bd      	b.n	800d866 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800d8ea:	6830      	ldr	r0, [r6, #0]
 800d8ec:	6803      	ldr	r3, [r0, #0]
 800d8ee:	691b      	ldr	r3, [r3, #16]
 800d8f0:	4798      	blx	r3
 800d8f2:	4550      	cmp	r0, sl
 800d8f4:	d001      	beq.n	800d8fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d8f6:	42b8      	cmp	r0, r7
 800d8f8:	d1c8      	bne.n	800d88c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800d8fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d8fc:	3301      	adds	r3, #1
 800d8fe:	930c      	str	r3, [sp, #48]	; 0x30
 800d900:	464d      	mov	r5, r9
 800d902:	e797      	b.n	800d834 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x54>
 800d904:	2d00      	cmp	r5, #0
 800d906:	f000 80ab 	beq.w	800da60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x280>
 800d90a:	f1bb 0f00 	cmp.w	fp, #0
 800d90e:	d118      	bne.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x162>
 800d910:	6830      	ldr	r0, [r6, #0]
 800d912:	6803      	ldr	r3, [r0, #0]
 800d914:	4629      	mov	r1, r5
 800d916:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d918:	4798      	blx	r3
 800d91a:	4404      	add	r4, r0
 800d91c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d91e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d920:	1ae3      	subs	r3, r4, r3
 800d922:	4293      	cmp	r3, r2
 800d924:	dd17      	ble.n	800d956 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d926:	464d      	mov	r5, r9
 800d928:	2d00      	cmp	r5, #0
 800d92a:	f000 8097 	beq.w	800da5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800d92e:	2d0a      	cmp	r5, #10
 800d930:	f040 8085 	bne.w	800da3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x25e>
 800d934:	250a      	movs	r5, #10
 800d936:	fab5 f085 	clz	r0, r5
 800d93a:	0940      	lsrs	r0, r0, #5
 800d93c:	b01d      	add	sp, #116	; 0x74
 800d93e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d942:	6830      	ldr	r0, [r6, #0]
 800d944:	6803      	ldr	r3, [r0, #0]
 800d946:	4629      	mov	r1, r5
 800d948:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d94a:	4798      	blx	r3
 800d94c:	f1bb 0f01 	cmp.w	fp, #1
 800d950:	eba4 0400 	sub.w	r4, r4, r0
 800d954:	d0b1      	beq.n	800d8ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800d956:	981a      	ldr	r0, [sp, #104]	; 0x68
 800d958:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800d95a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d95e:	f9b3 5000 	ldrsh.w	r5, [r3]
 800d962:	7b43      	ldrb	r3, [r0, #13]
 800d964:	015b      	lsls	r3, r3, #5
 800d966:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d96a:	7983      	ldrb	r3, [r0, #6]
 800d96c:	4421      	add	r1, r4
 800d96e:	4313      	orrs	r3, r2
 800d970:	440b      	add	r3, r1
 800d972:	42ab      	cmp	r3, r5
 800d974:	dbc1      	blt.n	800d8fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d976:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d978:	4299      	cmp	r1, r3
 800d97a:	dabe      	bge.n	800d8fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d97c:	6830      	ldr	r0, [r6, #0]
 800d97e:	6803      	ldr	r3, [r0, #0]
 800d980:	42a5      	cmp	r5, r4
 800d982:	bfc8      	it	gt
 800d984:	1b2d      	subgt	r5, r5, r4
 800d986:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d988:	bfcc      	ite	gt
 800d98a:	b2ad      	uxthgt	r5, r5
 800d98c:	2500      	movle	r5, #0
 800d98e:	4798      	blx	r3
 800d990:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800d992:	4936      	ldr	r1, [pc, #216]	; (800da6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>)
 800d994:	7b5a      	ldrb	r2, [r3, #13]
 800d996:	f893 e008 	ldrb.w	lr, [r3, #8]
 800d99a:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d99e:	bf18      	it	ne
 800d9a0:	468c      	movne	ip, r1
 800d9a2:	9915      	ldr	r1, [sp, #84]	; 0x54
 800d9a4:	4408      	add	r0, r1
 800d9a6:	ea4f 01c2 	mov.w	r1, r2, lsl #3
 800d9aa:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d9ae:	bf08      	it	eq
 800d9b0:	f04f 0c00 	moveq.w	ip, #0
 800d9b4:	ea41 070e 	orr.w	r7, r1, lr
 800d9b8:	ea4c 0707 	orr.w	r7, ip, r7
 800d9bc:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800d9be:	1bc7      	subs	r7, r0, r7
 800d9c0:	b2bf      	uxth	r7, r7
 800d9c2:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d9c6:	fa0f fa87 	sxth.w	sl, r7
 800d9ca:	4551      	cmp	r1, sl
 800d9cc:	dd33      	ble.n	800da36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x256>
 800d9ce:	0112      	lsls	r2, r2, #4
 800d9d0:	79d8      	ldrb	r0, [r3, #7]
 800d9d2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d9d6:	4302      	orrs	r2, r0
 800d9d8:	4492      	add	sl, r2
 800d9da:	4551      	cmp	r1, sl
 800d9dc:	dc8d      	bgt.n	800d8fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d9de:	1bcf      	subs	r7, r1, r7
 800d9e0:	b2bf      	uxth	r7, r7
 800d9e2:	468a      	mov	sl, r1
 800d9e4:	9317      	str	r3, [sp, #92]	; 0x5c
 800d9e6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d9e8:	6830      	ldr	r0, [r6, #0]
 800d9ea:	681a      	ldr	r2, [r3, #0]
 800d9ec:	6801      	ldr	r1, [r0, #0]
 800d9ee:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800d9f0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800d9f2:	9311      	str	r3, [sp, #68]	; 0x44
 800d9f4:	9216      	str	r2, [sp, #88]	; 0x58
 800d9f6:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800d9f8:	4788      	blx	r1
 800d9fa:	79b1      	ldrb	r1, [r6, #6]
 800d9fc:	910b      	str	r1, [sp, #44]	; 0x2c
 800d9fe:	7bb1      	ldrb	r1, [r6, #14]
 800da00:	910a      	str	r1, [sp, #40]	; 0x28
 800da02:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
 800da06:	9109      	str	r1, [sp, #36]	; 0x24
 800da08:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800da0a:	68b1      	ldr	r1, [r6, #8]
 800da0c:	9305      	str	r3, [sp, #20]
 800da0e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800da10:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800da12:	9206      	str	r2, [sp, #24]
 800da14:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800da18:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800da1c:	e9cd a501 	strd	sl, r5, [sp, #4]
 800da20:	4425      	add	r5, r4
 800da22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800da24:	9914      	ldr	r1, [sp, #80]	; 0x50
 800da26:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800da28:	b22d      	sxth	r5, r5
 800da2a:	9500      	str	r5, [sp, #0]
 800da2c:	681a      	ldr	r2, [r3, #0]
 800da2e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800da30:	685b      	ldr	r3, [r3, #4]
 800da32:	47a8      	blx	r5
 800da34:	e761      	b.n	800d8fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800da36:	2700      	movs	r7, #0
 800da38:	e7d4      	b.n	800d9e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x204>
 800da3a:	4690      	mov	r8, r2
 800da3c:	e75d      	b.n	800d8fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800da3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800da40:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800da42:	3401      	adds	r4, #1
 800da44:	429c      	cmp	r4, r3
 800da46:	f6bf af76 	bge.w	800d936 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x156>
 800da4a:	4659      	mov	r1, fp
 800da4c:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800da4e:	f002 f94d 	bl	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800da52:	4605      	mov	r5, r0
 800da54:	b110      	cbz	r0, 800da5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800da56:	280a      	cmp	r0, #10
 800da58:	d1f2      	bne.n	800da40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x260>
 800da5a:	e76b      	b.n	800d934 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800da5c:	2500      	movs	r5, #0
 800da5e:	e76a      	b.n	800d936 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x156>
 800da60:	f1bb 0f00 	cmp.w	fp, #0
 800da64:	f43f af5a 	beq.w	800d91c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x13c>
 800da68:	e775      	b.n	800d956 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800da6a:	bf00      	nop
 800da6c:	fffffe00 	.word	0xfffffe00

0800da70 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800da70:	b530      	push	{r4, r5, lr}
 800da72:	8a44      	ldrh	r4, [r0, #18]
 800da74:	8ac5      	ldrh	r5, [r0, #22]
 800da76:	82c3      	strh	r3, [r0, #22]
 800da78:	442c      	add	r4, r5
 800da7a:	1ae4      	subs	r4, r4, r3
 800da7c:	8244      	strh	r4, [r0, #18]
 800da7e:	8b03      	ldrh	r3, [r0, #24]
 800da80:	8a84      	ldrh	r4, [r0, #20]
 800da82:	4422      	add	r2, r4
 800da84:	440c      	add	r4, r1
 800da86:	1a59      	subs	r1, r3, r1
 800da88:	8342      	strh	r2, [r0, #26]
 800da8a:	8284      	strh	r4, [r0, #20]
 800da8c:	8301      	strh	r1, [r0, #24]
 800da8e:	bd30      	pop	{r4, r5, pc}

0800da90 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800da90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da94:	7a45      	ldrb	r5, [r0, #9]
 800da96:	1eeb      	subs	r3, r5, #3
 800da98:	b085      	sub	sp, #20
 800da9a:	4604      	mov	r4, r0
 800da9c:	b2db      	uxtb	r3, r3
 800da9e:	4689      	mov	r9, r1
 800daa0:	b329      	cbz	r1, 800daee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x5e>
 800daa2:	2b01      	cmp	r3, #1
 800daa4:	d921      	bls.n	800daea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x5a>
 800daa6:	1e69      	subs	r1, r5, #1
 800daa8:	f1d1 0b00 	rsbs	fp, r1, #0
 800daac:	eb4b 0b01 	adc.w	fp, fp, r1
 800dab0:	1eaa      	subs	r2, r5, #2
 800dab2:	4253      	negs	r3, r2
 800dab4:	4153      	adcs	r3, r2
 800dab6:	2500      	movs	r5, #0
 800dab8:	9301      	str	r3, [sp, #4]
 800daba:	9500      	str	r5, [sp, #0]
 800dabc:	2600      	movs	r6, #0
 800dabe:	8266      	strh	r6, [r4, #18]
 800dac0:	82a6      	strh	r6, [r4, #20]
 800dac2:	f242 080b 	movw	r8, #8203	; 0x200b
 800dac6:	2300      	movs	r3, #0
 800dac8:	9303      	str	r3, [sp, #12]
 800daca:	68e2      	ldr	r2, [r4, #12]
 800dacc:	7a21      	ldrb	r1, [r4, #8]
 800dace:	6860      	ldr	r0, [r4, #4]
 800dad0:	8827      	ldrh	r7, [r4, #0]
 800dad2:	ab03      	add	r3, sp, #12
 800dad4:	f002 f94a 	bl	800fd6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dad8:	8020      	strh	r0, [r4, #0]
 800dada:	b9b0      	cbnz	r0, 800db0a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7a>
 800dadc:	8b22      	ldrh	r2, [r4, #24]
 800dade:	2300      	movs	r3, #0
 800dae0:	4611      	mov	r1, r2
 800dae2:	4620      	mov	r0, r4
 800dae4:	f7ff ffc4 	bl	800da70 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800dae8:	e062      	b.n	800dbb0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x120>
 800daea:	468b      	mov	fp, r1
 800daec:	e7e0      	b.n	800dab0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x20>
 800daee:	2b01      	cmp	r3, #1
 800daf0:	f105 35ff 	add.w	r5, r5, #4294967295
 800daf4:	bf8c      	ite	hi
 800daf6:	2300      	movhi	r3, #0
 800daf8:	2301      	movls	r3, #1
 800dafa:	2d01      	cmp	r5, #1
 800dafc:	9300      	str	r3, [sp, #0]
 800dafe:	bf8c      	ite	hi
 800db00:	2500      	movhi	r5, #0
 800db02:	2501      	movls	r5, #1
 800db04:	9101      	str	r1, [sp, #4]
 800db06:	468b      	mov	fp, r1
 800db08:	e7d8      	b.n	800dabc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x2c>
 800db0a:	8ae3      	ldrh	r3, [r4, #22]
 800db0c:	280a      	cmp	r0, #10
 800db0e:	f103 0301 	add.w	r3, r3, #1
 800db12:	82e3      	strh	r3, [r4, #22]
 800db14:	d0e2      	beq.n	800dadc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x4c>
 800db16:	9a03      	ldr	r2, [sp, #12]
 800db18:	b972      	cbnz	r2, 800db38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa8>
 800db1a:	4540      	cmp	r0, r8
 800db1c:	d1d3      	bne.n	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800db1e:	8823      	ldrh	r3, [r4, #0]
 800db20:	8b21      	ldrh	r1, [r4, #24]
 800db22:	2b20      	cmp	r3, #32
 800db24:	d001      	beq.n	800db2a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9a>
 800db26:	4543      	cmp	r3, r8
 800db28:	d11d      	bne.n	800db66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800db2a:	2f20      	cmp	r7, #32
 800db2c:	d002      	beq.n	800db34 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800db2e:	4547      	cmp	r7, r8
 800db30:	bf18      	it	ne
 800db32:	460e      	movne	r6, r1
 800db34:	2001      	movs	r0, #1
 800db36:	e017      	b.n	800db68 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd8>
 800db38:	4540      	cmp	r0, r8
 800db3a:	d012      	beq.n	800db62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd2>
 800db3c:	8893      	ldrh	r3, [r2, #4]
 800db3e:	8023      	strh	r3, [r4, #0]
 800db40:	f992 a00d 	ldrsb.w	sl, [r2, #13]
 800db44:	f40a 7080 	and.w	r0, sl, #256	; 0x100
 800db48:	f892 a00a 	ldrb.w	sl, [r2, #10]
 800db4c:	ea4a 0a00 	orr.w	sl, sl, r0
 800db50:	68e0      	ldr	r0, [r4, #12]
 800db52:	6803      	ldr	r3, [r0, #0]
 800db54:	4639      	mov	r1, r7
 800db56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800db58:	4798      	blx	r3
 800db5a:	eb0a 0200 	add.w	r2, sl, r0
 800db5e:	b292      	uxth	r2, r2
 800db60:	e7dd      	b.n	800db1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x8e>
 800db62:	2200      	movs	r2, #0
 800db64:	e7db      	b.n	800db1e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x8e>
 800db66:	2000      	movs	r0, #0
 800db68:	440a      	add	r2, r1
 800db6a:	8aa3      	ldrh	r3, [r4, #20]
 800db6c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800db70:	b292      	uxth	r2, r2
 800db72:	8322      	strh	r2, [r4, #24]
 800db74:	4413      	add	r3, r2
 800db76:	f1b9 0f00 	cmp.w	r9, #0
 800db7a:	d022      	beq.n	800dbc2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x132>
 800db7c:	f1bb 0f00 	cmp.w	fp, #0
 800db80:	d102      	bne.n	800db88 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf8>
 800db82:	9901      	ldr	r1, [sp, #4]
 800db84:	b149      	cbz	r1, 800db9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x10a>
 800db86:	b140      	cbz	r0, 800db9a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x10a>
 800db88:	8ba1      	ldrh	r1, [r4, #28]
 800db8a:	4419      	add	r1, r3
 800db8c:	458c      	cmp	ip, r1
 800db8e:	da12      	bge.n	800dbb6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x126>
 800db90:	8a61      	ldrh	r1, [r4, #18]
 800db92:	b181      	cbz	r1, 800dbb6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x126>
 800db94:	4563      	cmp	r3, ip
 800db96:	dd96      	ble.n	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800db98:	e004      	b.n	800dba4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x114>
 800db9a:	4563      	cmp	r3, ip
 800db9c:	dd93      	ble.n	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800db9e:	8a63      	ldrh	r3, [r4, #18]
 800dba0:	2b00      	cmp	r3, #0
 800dba2:	d090      	beq.n	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dba4:	2301      	movs	r3, #1
 800dba6:	77a3      	strb	r3, [r4, #30]
 800dba8:	8ba2      	ldrh	r2, [r4, #28]
 800dbaa:	8b63      	ldrh	r3, [r4, #26]
 800dbac:	4413      	add	r3, r2
 800dbae:	8363      	strh	r3, [r4, #26]
 800dbb0:	b005      	add	sp, #20
 800dbb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbb6:	2300      	movs	r3, #0
 800dbb8:	4611      	mov	r1, r2
 800dbba:	4620      	mov	r0, r4
 800dbbc:	f7ff ff58 	bl	800da70 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800dbc0:	e781      	b.n	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dbc2:	4563      	cmp	r3, ip
 800dbc4:	dd16      	ble.n	800dbf4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x164>
 800dbc6:	9b00      	ldr	r3, [sp, #0]
 800dbc8:	b113      	cbz	r3, 800dbd0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800dbca:	2301      	movs	r3, #1
 800dbcc:	460a      	mov	r2, r1
 800dbce:	e787      	b.n	800dae0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x50>
 800dbd0:	2d00      	cmp	r5, #0
 800dbd2:	f43f af78 	beq.w	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dbd6:	2800      	cmp	r0, #0
 800dbd8:	f47f af75 	bne.w	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dbdc:	2f20      	cmp	r7, #32
 800dbde:	d001      	beq.n	800dbe4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x154>
 800dbe0:	4547      	cmp	r7, r8
 800dbe2:	d102      	bne.n	800dbea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15a>
 800dbe4:	2301      	movs	r3, #1
 800dbe6:	4632      	mov	r2, r6
 800dbe8:	e77b      	b.n	800dae2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x52>
 800dbea:	8a63      	ldrh	r3, [r4, #18]
 800dbec:	2b00      	cmp	r3, #0
 800dbee:	f43f af6a 	beq.w	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dbf2:	e7dd      	b.n	800dbb0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x120>
 800dbf4:	2800      	cmp	r0, #0
 800dbf6:	f47f af66 	bne.w	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dbfa:	2f20      	cmp	r7, #32
 800dbfc:	d002      	beq.n	800dc04 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x174>
 800dbfe:	4547      	cmp	r7, r8
 800dc00:	f47f af61 	bne.w	800dac6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dc04:	2301      	movs	r3, #1
 800dc06:	4632      	mov	r2, r6
 800dc08:	e7d7      	b.n	800dbba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x12a>

0800dc0a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800dc0a:	b570      	push	{r4, r5, r6, lr}
 800dc0c:	4606      	mov	r6, r0
 800dc0e:	b08a      	sub	sp, #40	; 0x28
 800dc10:	4615      	mov	r5, r2
 800dc12:	b191      	cbz	r1, 800dc3a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x30>
 800dc14:	e9cd 3100 	strd	r3, r1, [sp]
 800dc18:	4613      	mov	r3, r2
 800dc1a:	4601      	mov	r1, r0
 800dc1c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800dc20:	a802      	add	r0, sp, #8
 800dc22:	f7ff fd20 	bl	800d666 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800dc26:	2401      	movs	r4, #1
 800dc28:	2100      	movs	r1, #0
 800dc2a:	a802      	add	r0, sp, #8
 800dc2c:	f7ff ff30 	bl	800da90 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800dc30:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800dc34:	b173      	cbz	r3, 800dc54 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800dc36:	3401      	adds	r4, #1
 800dc38:	e7f6      	b.n	800dc28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1e>
 800dc3a:	4611      	mov	r1, r2
 800dc3c:	f002 f856 	bl	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dc40:	2401      	movs	r4, #1
 800dc42:	280a      	cmp	r0, #10
 800dc44:	4629      	mov	r1, r5
 800dc46:	4630      	mov	r0, r6
 800dc48:	bf08      	it	eq
 800dc4a:	3401      	addeq	r4, #1
 800dc4c:	f002 f84e 	bl	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dc50:	2800      	cmp	r0, #0
 800dc52:	d1f6      	bne.n	800dc42 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x38>
 800dc54:	b2a0      	uxth	r0, r4
 800dc56:	b00a      	add	sp, #40	; 0x28
 800dc58:	bd70      	pop	{r4, r5, r6, pc}

0800dc5a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800dc5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc5e:	b0db      	sub	sp, #364	; 0x16c
 800dc60:	468a      	mov	sl, r1
 800dc62:	f8dd b190 	ldr.w	fp, [sp, #400]	; 0x190
 800dc66:	9009      	str	r0, [sp, #36]	; 0x24
 800dc68:	461c      	mov	r4, r3
 800dc6a:	f1bb 0f00 	cmp.w	fp, #0
 800dc6e:	f000 80c7 	beq.w	800de00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800dc72:	681b      	ldr	r3, [r3, #0]
 800dc74:	2b00      	cmp	r3, #0
 800dc76:	f000 80c3 	beq.w	800de00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800dc7a:	7ba3      	ldrb	r3, [r4, #14]
 800dc7c:	2b00      	cmp	r3, #0
 800dc7e:	f000 80bf 	beq.w	800de00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800dc82:	6810      	ldr	r0, [r2, #0]
 800dc84:	6851      	ldr	r1, [r2, #4]
 800dc86:	f9ba 2004 	ldrsh.w	r2, [sl, #4]
 800dc8a:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800dc8e:	af0c      	add	r7, sp, #48	; 0x30
 800dc90:	463b      	mov	r3, r7
 800dc92:	c303      	stmia	r3!, {r0, r1}
 800dc94:	2100      	movs	r1, #0
 800dc96:	f9ba 3006 	ldrsh.w	r3, [sl, #6]
 800dc9a:	910e      	str	r1, [sp, #56]	; 0x38
 800dc9c:	79a2      	ldrb	r2, [r4, #6]
 800dc9e:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800dca2:	a90e      	add	r1, sp, #56	; 0x38
 800dca4:	4638      	mov	r0, r7
 800dca6:	f7ff fd4a 	bl	800d73e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800dcaa:	a90e      	add	r1, sp, #56	; 0x38
 800dcac:	4608      	mov	r0, r1
 800dcae:	79a2      	ldrb	r2, [r4, #6]
 800dcb0:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 800dcb4:	f7ff fd43 	bl	800d73e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800dcb8:	4648      	mov	r0, r9
 800dcba:	f001 fed5 	bl	800fa68 <_ZN8touchgfx12TextProviderC1Ev>
 800dcbe:	6820      	ldr	r0, [r4, #0]
 800dcc0:	6803      	ldr	r3, [r0, #0]
 800dcc2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dcc4:	4798      	blx	r3
 800dcc6:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800dcc8:	4603      	mov	r3, r0
 800dcca:	4659      	mov	r1, fp
 800dccc:	4648      	mov	r0, r9
 800dcce:	f001 fee8 	bl	800faa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dcd2:	a82e      	add	r0, sp, #184	; 0xb8
 800dcd4:	f001 fec8 	bl	800fa68 <_ZN8touchgfx12TextProviderC1Ev>
 800dcd8:	f894 8004 	ldrb.w	r8, [r4, #4]
 800dcdc:	f1b8 0f00 	cmp.w	r8, #0
 800dce0:	d009      	beq.n	800dcf6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800dce2:	6820      	ldr	r0, [r4, #0]
 800dce4:	6803      	ldr	r3, [r0, #0]
 800dce6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dce8:	4798      	blx	r3
 800dcea:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800dcec:	4603      	mov	r3, r0
 800dcee:	4659      	mov	r1, fp
 800dcf0:	a82e      	add	r0, sp, #184	; 0xb8
 800dcf2:	f001 fed6 	bl	800faa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dcf6:	6820      	ldr	r0, [r4, #0]
 800dcf8:	6803      	ldr	r3, [r0, #0]
 800dcfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dcfc:	4798      	blx	r3
 800dcfe:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800dd02:	182e      	adds	r6, r5, r0
 800dd04:	2e00      	cmp	r6, #0
 800dd06:	dd45      	ble.n	800dd94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13a>
 800dd08:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dd0c:	4283      	cmp	r3, r0
 800dd0e:	db41      	blt.n	800dd94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13a>
 800dd10:	441d      	add	r5, r3
 800dd12:	fb95 f5f6 	sdiv	r5, r5, r6
 800dd16:	a844      	add	r0, sp, #272	; 0x110
 800dd18:	f001 fea6 	bl	800fa68 <_ZN8touchgfx12TextProviderC1Ev>
 800dd1c:	7c23      	ldrb	r3, [r4, #16]
 800dd1e:	b14b      	cbz	r3, 800dd34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xda>
 800dd20:	6820      	ldr	r0, [r4, #0]
 800dd22:	6803      	ldr	r3, [r0, #0]
 800dd24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd26:	4798      	blx	r3
 800dd28:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800dd2a:	4603      	mov	r3, r0
 800dd2c:	4659      	mov	r1, fp
 800dd2e:	a844      	add	r0, sp, #272	; 0x110
 800dd30:	f001 feb7 	bl	800faa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dd34:	7c21      	ldrb	r1, [r4, #16]
 800dd36:	9101      	str	r1, [sp, #4]
 800dd38:	6821      	ldr	r1, [r4, #0]
 800dd3a:	7963      	ldrb	r3, [r4, #5]
 800dd3c:	9100      	str	r1, [sp, #0]
 800dd3e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800dd42:	a944      	add	r1, sp, #272	; 0x110
 800dd44:	a810      	add	r0, sp, #64	; 0x40
 800dd46:	f7ff fc8e 	bl	800d666 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800dd4a:	7c23      	ldrb	r3, [r4, #16]
 800dd4c:	bb23      	cbnz	r3, 800dd98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13e>
 800dd4e:	fa1f fb86 	uxth.w	fp, r6
 800dd52:	2d00      	cmp	r5, #0
 800dd54:	dd57      	ble.n	800de06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ac>
 800dd56:	7961      	ldrb	r1, [r4, #5]
 800dd58:	4648      	mov	r0, r9
 800dd5a:	f001 ffc7 	bl	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dd5e:	4603      	mov	r3, r0
 800dd60:	f1b8 0f00 	cmp.w	r8, #0
 800dd64:	d005      	beq.n	800dd72 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x118>
 800dd66:	9008      	str	r0, [sp, #32]
 800dd68:	7961      	ldrb	r1, [r4, #5]
 800dd6a:	a82e      	add	r0, sp, #184	; 0xb8
 800dd6c:	f001 ffbe 	bl	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dd70:	9b08      	ldr	r3, [sp, #32]
 800dd72:	2b00      	cmp	r3, #0
 800dd74:	d044      	beq.n	800de00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800dd76:	2b0a      	cmp	r3, #10
 800dd78:	d1eb      	bne.n	800dd52 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf8>
 800dd7a:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800dd7e:	445b      	add	r3, fp
 800dd80:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800dd84:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800dd88:	eba3 030b 	sub.w	r3, r3, fp
 800dd8c:	3d01      	subs	r5, #1
 800dd8e:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800dd92:	e7de      	b.n	800dd52 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf8>
 800dd94:	2500      	movs	r5, #0
 800dd96:	e7be      	b.n	800dd16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xbc>
 800dd98:	0073      	lsls	r3, r6, #1
 800dd9a:	9308      	str	r3, [sp, #32]
 800dd9c:	2d00      	cmp	r5, #0
 800dd9e:	dd32      	ble.n	800de06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ac>
 800dda0:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800dda4:	9b08      	ldr	r3, [sp, #32]
 800dda6:	428b      	cmp	r3, r1
 800dda8:	bfd4      	ite	le
 800ddaa:	2100      	movle	r1, #0
 800ddac:	2101      	movgt	r1, #1
 800ddae:	a810      	add	r0, sp, #64	; 0x40
 800ddb0:	f7ff fe6e 	bl	800da90 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ddb4:	f8bd b052 	ldrh.w	fp, [sp, #82]	; 0x52
 800ddb8:	f10b 33ff 	add.w	r3, fp, #4294967295
 800ddbc:	fa1f fb83 	uxth.w	fp, r3
 800ddc0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ddc4:	459b      	cmp	fp, r3
 800ddc6:	d00b      	beq.n	800dde0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800ddc8:	7961      	ldrb	r1, [r4, #5]
 800ddca:	4648      	mov	r0, r9
 800ddcc:	f001 ff8e 	bl	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ddd0:	f1b8 0f00 	cmp.w	r8, #0
 800ddd4:	d0f0      	beq.n	800ddb8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15e>
 800ddd6:	7961      	ldrb	r1, [r4, #5]
 800ddd8:	a82e      	add	r0, sp, #184	; 0xb8
 800ddda:	f001 ff87 	bl	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ddde:	e7eb      	b.n	800ddb8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15e>
 800dde0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 800dde4:	b2b3      	uxth	r3, r6
 800dde6:	441a      	add	r2, r3
 800dde8:	f8ad 203a 	strh.w	r2, [sp, #58]	; 0x3a
 800ddec:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800ddf0:	1ad3      	subs	r3, r2, r3
 800ddf2:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ddf6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ddfa:	3d01      	subs	r5, #1
 800ddfc:	2b00      	cmp	r3, #0
 800ddfe:	d1cd      	bne.n	800dd9c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800de00:	b05b      	add	sp, #364	; 0x16c
 800de02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de06:	ea4f 0b46 	mov.w	fp, r6, lsl #1
 800de0a:	f10d 052e 	add.w	r5, sp, #46	; 0x2e
 800de0e:	7c23      	ldrb	r3, [r4, #16]
 800de10:	2b00      	cmp	r3, #0
 800de12:	d05f      	beq.n	800ded4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x27a>
 800de14:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800de18:	458b      	cmp	fp, r1
 800de1a:	bfd4      	ite	le
 800de1c:	2100      	movle	r1, #0
 800de1e:	2101      	movgt	r1, #1
 800de20:	a810      	add	r0, sp, #64	; 0x40
 800de22:	f7ff fe35 	bl	800da90 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800de26:	f1b8 0f00 	cmp.w	r8, #0
 800de2a:	d04c      	beq.n	800dec6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800de2c:	7c23      	ldrb	r3, [r4, #16]
 800de2e:	2b00      	cmp	r3, #0
 800de30:	d053      	beq.n	800deda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x280>
 800de32:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800de36:	7922      	ldrb	r2, [r4, #4]
 800de38:	2a01      	cmp	r2, #1
 800de3a:	d13c      	bne.n	800deb6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800de3c:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800de40:	1ac0      	subs	r0, r0, r3
 800de42:	2302      	movs	r3, #2
 800de44:	fb90 f0f3 	sdiv	r0, r0, r3
 800de48:	b200      	sxth	r0, r0
 800de4a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800de4e:	4418      	add	r0, r3
 800de50:	7c23      	ldrb	r3, [r4, #16]
 800de52:	8028      	strh	r0, [r5, #0]
 800de54:	2b00      	cmp	r3, #0
 800de56:	d03a      	beq.n	800dece <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x274>
 800de58:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800de5c:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800de60:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800de64:	f8cd 9010 	str.w	r9, [sp, #16]
 800de68:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800de6c:	2200      	movs	r2, #0
 800de6e:	e9cd 4202 	strd	r4, r2, [sp, #8]
 800de72:	e9cd 5700 	strd	r5, r7, [sp]
 800de76:	4652      	mov	r2, sl
 800de78:	2100      	movs	r1, #0
 800de7a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800de7c:	f7ff fcb0 	bl	800d7e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800de80:	2800      	cmp	r0, #0
 800de82:	d1bd      	bne.n	800de00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800de84:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800de88:	b2b2      	uxth	r2, r6
 800de8a:	4611      	mov	r1, r2
 800de8c:	4413      	add	r3, r2
 800de8e:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800de92:	1a52      	subs	r2, r2, r1
 800de94:	7c21      	ldrb	r1, [r4, #16]
 800de96:	b21b      	sxth	r3, r3
 800de98:	b212      	sxth	r2, r2
 800de9a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800de9e:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800dea2:	b109      	cbz	r1, 800dea8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800dea4:	42b2      	cmp	r2, r6
 800dea6:	dbab      	blt.n	800de00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800dea8:	887a      	ldrh	r2, [r7, #2]
 800deaa:	88f9      	ldrh	r1, [r7, #6]
 800deac:	440a      	add	r2, r1
 800deae:	b212      	sxth	r2, r2
 800deb0:	4293      	cmp	r3, r2
 800deb2:	ddac      	ble.n	800de0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b4>
 800deb4:	e7a4      	b.n	800de00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800deb6:	2a02      	cmp	r2, #2
 800deb8:	d107      	bne.n	800deca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800deba:	7be2      	ldrb	r2, [r4, #15]
 800debc:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800dec0:	1a80      	subs	r0, r0, r2
 800dec2:	1ac0      	subs	r0, r0, r3
 800dec4:	e7c0      	b.n	800de48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 800dec6:	7be0      	ldrb	r0, [r4, #15]
 800dec8:	e7bf      	b.n	800de4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1f0>
 800deca:	2000      	movs	r0, #0
 800decc:	e7bd      	b.n	800de4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1f0>
 800dece:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ded2:	e7c3      	b.n	800de5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x202>
 800ded4:	f1b8 0f00 	cmp.w	r8, #0
 800ded8:	d0f5      	beq.n	800dec6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800deda:	2300      	movs	r3, #0
 800dedc:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800dee0:	6821      	ldr	r1, [r4, #0]
 800dee2:	a82e      	add	r0, sp, #184	; 0xb8
 800dee4:	f7ff fbf9 	bl	800d6da <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800dee8:	b203      	sxth	r3, r0
 800deea:	e7a4      	b.n	800de36 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>

0800deec <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800deec:	b510      	push	{r4, lr}
 800deee:	2b02      	cmp	r3, #2
 800def0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800def4:	d00b      	beq.n	800df0e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800def6:	2b03      	cmp	r3, #3
 800def8:	d00e      	beq.n	800df18 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800defa:	2b01      	cmp	r3, #1
 800defc:	d001      	beq.n	800df02 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800defe:	1860      	adds	r0, r4, r1
 800df00:	bd10      	pop	{r4, pc}
 800df02:	8880      	ldrh	r0, [r0, #4]
 800df04:	4420      	add	r0, r4
 800df06:	b200      	sxth	r0, r0
 800df08:	1a80      	subs	r0, r0, r2
 800df0a:	3801      	subs	r0, #1
 800df0c:	e7f8      	b.n	800df00 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800df0e:	8880      	ldrh	r0, [r0, #4]
 800df10:	4420      	add	r0, r4
 800df12:	b200      	sxth	r0, r0
 800df14:	1a40      	subs	r0, r0, r1
 800df16:	e7f8      	b.n	800df0a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800df18:	18a0      	adds	r0, r4, r2
 800df1a:	e7f1      	b.n	800df00 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800df1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800df1c:	b510      	push	{r4, lr}
 800df1e:	2b02      	cmp	r3, #2
 800df20:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800df24:	d006      	beq.n	800df34 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800df26:	2b03      	cmp	r3, #3
 800df28:	d00a      	beq.n	800df40 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800df2a:	2b01      	cmp	r3, #1
 800df2c:	bf14      	ite	ne
 800df2e:	18a0      	addne	r0, r4, r2
 800df30:	1860      	addeq	r0, r4, r1
 800df32:	bd10      	pop	{r4, pc}
 800df34:	88c0      	ldrh	r0, [r0, #6]
 800df36:	4420      	add	r0, r4
 800df38:	b200      	sxth	r0, r0
 800df3a:	1a80      	subs	r0, r0, r2
 800df3c:	3801      	subs	r0, #1
 800df3e:	e7f8      	b.n	800df32 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800df40:	88c0      	ldrh	r0, [r0, #6]
 800df42:	4420      	add	r0, r4
 800df44:	b200      	sxth	r0, r0
 800df46:	1a40      	subs	r0, r0, r1
 800df48:	e7f8      	b.n	800df3c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800df4c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800df4c:	4b01      	ldr	r3, [pc, #4]	; (800df54 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800df4e:	2200      	movs	r2, #0
 800df50:	601a      	str	r2, [r3, #0]
 800df52:	4770      	bx	lr
 800df54:	200017ac 	.word	0x200017ac

0800df58 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800df58:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df5a:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800df5e:	1e05      	subs	r5, r0, #0
 800df60:	bfba      	itte	lt
 800df62:	f04f 37ff 	movlt.w	r7, #4294967295
 800df66:	426d      	neglt	r5, r5
 800df68:	2701      	movge	r7, #1
 800df6a:	f1be 0f00 	cmp.w	lr, #0
 800df6e:	bfb8      	it	lt
 800df70:	f1ce 0e00 	rsblt	lr, lr, #0
 800df74:	f04f 0601 	mov.w	r6, #1
 800df78:	fa4e f001 	asr.w	r0, lr, r1
 800df7c:	fa06 f101 	lsl.w	r1, r6, r1
 800df80:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800df84:	f101 31ff 	add.w	r1, r1, #4294967295
 800df88:	ea01 010e 	and.w	r1, r1, lr
 800df8c:	bfb8      	it	lt
 800df8e:	427f      	neglt	r7, r7
 800df90:	434d      	muls	r5, r1
 800df92:	2c00      	cmp	r4, #0
 800df94:	f8dc 1000 	ldr.w	r1, [ip]
 800df98:	bfb8      	it	lt
 800df9a:	4264      	neglt	r4, r4
 800df9c:	fb03 1300 	mla	r3, r3, r0, r1
 800dfa0:	fb95 f1f4 	sdiv	r1, r5, r4
 800dfa4:	fb04 5511 	mls	r5, r4, r1, r5
 800dfa8:	441d      	add	r5, r3
 800dfaa:	fb95 f3f4 	sdiv	r3, r5, r4
 800dfae:	fb04 5413 	mls	r4, r4, r3, r5
 800dfb2:	4419      	add	r1, r3
 800dfb4:	bfb8      	it	lt
 800dfb6:	427f      	neglt	r7, r7
 800dfb8:	fb02 1000 	mla	r0, r2, r0, r1
 800dfbc:	f8cc 4000 	str.w	r4, [ip]
 800dfc0:	4378      	muls	r0, r7
 800dfc2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800dfc4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800dfc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dfc8:	4c24      	ldr	r4, [pc, #144]	; (800e05c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800dfca:	6807      	ldr	r7, [r0, #0]
 800dfcc:	69a3      	ldr	r3, [r4, #24]
 800dfce:	b086      	sub	sp, #24
 800dfd0:	4605      	mov	r5, r0
 800dfd2:	b92b      	cbnz	r3, 800dfe0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800dfd4:	6840      	ldr	r0, [r0, #4]
 800dfd6:	e9c5 7000 	strd	r7, r0, [r5]
 800dfda:	b006      	add	sp, #24
 800dfdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dfe0:	68a2      	ldr	r2, [r4, #8]
 800dfe2:	6820      	ldr	r0, [r4, #0]
 800dfe4:	ae06      	add	r6, sp, #24
 800dfe6:	f04f 0802 	mov.w	r8, #2
 800dfea:	fb93 f1f8 	sdiv	r1, r3, r8
 800dfee:	440a      	add	r2, r1
 800dff0:	f846 2d04 	str.w	r2, [r6, #-4]!
 800dff4:	69e1      	ldr	r1, [r4, #28]
 800dff6:	9700      	str	r7, [sp, #0]
 800dff8:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800dffc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dffe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e000:	f7ff ffaa 	bl	800df58 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800e004:	69a3      	ldr	r3, [r4, #24]
 800e006:	9301      	str	r3, [sp, #4]
 800e008:	686b      	ldr	r3, [r5, #4]
 800e00a:	9300      	str	r3, [sp, #0]
 800e00c:	4607      	mov	r7, r0
 800e00e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e010:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e012:	6a21      	ldr	r1, [r4, #32]
 800e014:	9602      	str	r6, [sp, #8]
 800e016:	6860      	ldr	r0, [r4, #4]
 800e018:	f7ff ff9e 	bl	800df58 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800e01c:	6963      	ldr	r3, [r4, #20]
 800e01e:	69a2      	ldr	r2, [r4, #24]
 800e020:	fb92 f8f8 	sdiv	r8, r2, r8
 800e024:	4443      	add	r3, r8
 800e026:	9305      	str	r3, [sp, #20]
 800e028:	682b      	ldr	r3, [r5, #0]
 800e02a:	9300      	str	r3, [sp, #0]
 800e02c:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800e030:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e032:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800e034:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e036:	4407      	add	r7, r0
 800e038:	68e0      	ldr	r0, [r4, #12]
 800e03a:	f7ff ff8d 	bl	800df58 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800e03e:	69a3      	ldr	r3, [r4, #24]
 800e040:	9301      	str	r3, [sp, #4]
 800e042:	686b      	ldr	r3, [r5, #4]
 800e044:	9300      	str	r3, [sp, #0]
 800e046:	4680      	mov	r8, r0
 800e048:	9602      	str	r6, [sp, #8]
 800e04a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800e04c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e04e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800e050:	6920      	ldr	r0, [r4, #16]
 800e052:	f7ff ff81 	bl	800df58 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800e056:	4440      	add	r0, r8
 800e058:	e7bd      	b.n	800dfd6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800e05a:	bf00      	nop
 800e05c:	200017b0 	.word	0x200017b0

0800e060 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800e060:	b510      	push	{r4, lr}
 800e062:	4b07      	ldr	r3, [pc, #28]	; (800e080 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800e064:	781b      	ldrb	r3, [r3, #0]
 800e066:	2b01      	cmp	r3, #1
 800e068:	d108      	bne.n	800e07c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800e06a:	4b06      	ldr	r3, [pc, #24]	; (800e084 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800e06c:	880c      	ldrh	r4, [r1, #0]
 800e06e:	881b      	ldrh	r3, [r3, #0]
 800e070:	f9b0 2000 	ldrsh.w	r2, [r0]
 800e074:	3b01      	subs	r3, #1
 800e076:	1b1b      	subs	r3, r3, r4
 800e078:	8003      	strh	r3, [r0, #0]
 800e07a:	800a      	strh	r2, [r1, #0]
 800e07c:	bd10      	pop	{r4, pc}
 800e07e:	bf00      	nop
 800e080:	2000179c 	.word	0x2000179c
 800e084:	200017a0 	.word	0x200017a0

0800e088 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800e088:	b510      	push	{r4, lr}
 800e08a:	4b0a      	ldr	r3, [pc, #40]	; (800e0b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800e08c:	781b      	ldrb	r3, [r3, #0]
 800e08e:	2b01      	cmp	r3, #1
 800e090:	d10e      	bne.n	800e0b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800e092:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800e096:	8843      	ldrh	r3, [r0, #2]
 800e098:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e09c:	8044      	strh	r4, [r0, #2]
 800e09e:	18ca      	adds	r2, r1, r3
 800e0a0:	4b05      	ldr	r3, [pc, #20]	; (800e0b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800e0a2:	881b      	ldrh	r3, [r3, #0]
 800e0a4:	1a9b      	subs	r3, r3, r2
 800e0a6:	8003      	strh	r3, [r0, #0]
 800e0a8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e0ac:	80c3      	strh	r3, [r0, #6]
 800e0ae:	8081      	strh	r1, [r0, #4]
 800e0b0:	bd10      	pop	{r4, pc}
 800e0b2:	bf00      	nop
 800e0b4:	2000179c 	.word	0x2000179c
 800e0b8:	20001798 	.word	0x20001798

0800e0bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800e0bc:	b510      	push	{r4, lr}
 800e0be:	4b07      	ldr	r3, [pc, #28]	; (800e0dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800e0c0:	781b      	ldrb	r3, [r3, #0]
 800e0c2:	2b01      	cmp	r3, #1
 800e0c4:	d108      	bne.n	800e0d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800e0c6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e0ca:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e0ce:	8003      	strh	r3, [r0, #0]
 800e0d0:	8893      	ldrh	r3, [r2, #4]
 800e0d2:	3b01      	subs	r3, #1
 800e0d4:	1b1b      	subs	r3, r3, r4
 800e0d6:	800b      	strh	r3, [r1, #0]
 800e0d8:	bd10      	pop	{r4, pc}
 800e0da:	bf00      	nop
 800e0dc:	2000179c 	.word	0x2000179c

0800e0e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800e0e0:	b513      	push	{r0, r1, r4, lr}
 800e0e2:	4b08      	ldr	r3, [pc, #32]	; (800e104 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800e0e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e0e8:	4b07      	ldr	r3, [pc, #28]	; (800e108 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800e0ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e0ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e0f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e0f6:	2400      	movs	r4, #0
 800e0f8:	466a      	mov	r2, sp
 800e0fa:	9400      	str	r4, [sp, #0]
 800e0fc:	f7ff ffde 	bl	800e0bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800e100:	b002      	add	sp, #8
 800e102:	bd10      	pop	{r4, pc}
 800e104:	20001798 	.word	0x20001798
 800e108:	2000179a 	.word	0x2000179a

0800e10c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800e10c:	b510      	push	{r4, lr}
 800e10e:	4b0a      	ldr	r3, [pc, #40]	; (800e138 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800e110:	781b      	ldrb	r3, [r3, #0]
 800e112:	2b01      	cmp	r3, #1
 800e114:	460a      	mov	r2, r1
 800e116:	d10d      	bne.n	800e134 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800e118:	8881      	ldrh	r1, [r0, #4]
 800e11a:	8803      	ldrh	r3, [r0, #0]
 800e11c:	440b      	add	r3, r1
 800e11e:	4601      	mov	r1, r0
 800e120:	3b01      	subs	r3, #1
 800e122:	f821 3b02 	strh.w	r3, [r1], #2
 800e126:	f7ff ffc9 	bl	800e0bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800e12a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e12e:	88c2      	ldrh	r2, [r0, #6]
 800e130:	8082      	strh	r2, [r0, #4]
 800e132:	80c3      	strh	r3, [r0, #6]
 800e134:	bd10      	pop	{r4, pc}
 800e136:	bf00      	nop
 800e138:	2000179c 	.word	0x2000179c

0800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800e13c:	b507      	push	{r0, r1, r2, lr}
 800e13e:	4b09      	ldr	r3, [pc, #36]	; (800e164 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800e140:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e144:	4b08      	ldr	r3, [pc, #32]	; (800e168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800e146:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e14a:	2100      	movs	r1, #0
 800e14c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e150:	9100      	str	r1, [sp, #0]
 800e152:	4669      	mov	r1, sp
 800e154:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e158:	f7ff ffd8 	bl	800e10c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800e15c:	b003      	add	sp, #12
 800e15e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e162:	bf00      	nop
 800e164:	20001798 	.word	0x20001798
 800e168:	2000179a 	.word	0x2000179a

0800e16c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800e16c:	4b03      	ldr	r3, [pc, #12]	; (800e17c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800e16e:	6818      	ldr	r0, [r3, #0]
 800e170:	b110      	cbz	r0, 800e178 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800e172:	6803      	ldr	r3, [r0, #0]
 800e174:	699b      	ldr	r3, [r3, #24]
 800e176:	4718      	bx	r3
 800e178:	4770      	bx	lr
 800e17a:	bf00      	nop
 800e17c:	20001800 	.word	0x20001800

0800e180 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800e180:	4770      	bx	lr
	...

0800e184 <_ZN8touchgfx11Application4drawEv>:
 800e184:	b507      	push	{r0, r1, r2, lr}
 800e186:	4b09      	ldr	r3, [pc, #36]	; (800e1ac <_ZN8touchgfx11Application4drawEv+0x28>)
 800e188:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e18c:	4b08      	ldr	r3, [pc, #32]	; (800e1b0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800e18e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e192:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e196:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e19a:	6803      	ldr	r3, [r0, #0]
 800e19c:	2100      	movs	r1, #0
 800e19e:	9100      	str	r1, [sp, #0]
 800e1a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e1a2:	4669      	mov	r1, sp
 800e1a4:	4798      	blx	r3
 800e1a6:	b003      	add	sp, #12
 800e1a8:	f85d fb04 	ldr.w	pc, [sp], #4
 800e1ac:	20001798 	.word	0x20001798
 800e1b0:	2000179a 	.word	0x2000179a

0800e1b4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800e1b4:	4b03      	ldr	r3, [pc, #12]	; (800e1c4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800e1b6:	6818      	ldr	r0, [r3, #0]
 800e1b8:	b110      	cbz	r0, 800e1c0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800e1ba:	6803      	ldr	r3, [r0, #0]
 800e1bc:	69db      	ldr	r3, [r3, #28]
 800e1be:	4718      	bx	r3
 800e1c0:	4770      	bx	lr
 800e1c2:	bf00      	nop
 800e1c4:	20001800 	.word	0x20001800

0800e1c8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800e1c8:	4b03      	ldr	r3, [pc, #12]	; (800e1d8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800e1ca:	6818      	ldr	r0, [r3, #0]
 800e1cc:	b110      	cbz	r0, 800e1d4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800e1ce:	6803      	ldr	r3, [r0, #0]
 800e1d0:	6a1b      	ldr	r3, [r3, #32]
 800e1d2:	4718      	bx	r3
 800e1d4:	4770      	bx	lr
 800e1d6:	bf00      	nop
 800e1d8:	20001800 	.word	0x20001800

0800e1dc <_ZN8touchgfx11Application14handleKeyEventEh>:
 800e1dc:	4b03      	ldr	r3, [pc, #12]	; (800e1ec <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800e1de:	6818      	ldr	r0, [r3, #0]
 800e1e0:	b110      	cbz	r0, 800e1e8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800e1e2:	6803      	ldr	r3, [r0, #0]
 800e1e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e1e6:	4718      	bx	r3
 800e1e8:	4770      	bx	lr
 800e1ea:	bf00      	nop
 800e1ec:	20001800 	.word	0x20001800

0800e1f0 <_ZN8touchgfx11Application15handleTickEventEv>:
 800e1f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e1f4:	4d3a      	ldr	r5, [pc, #232]	; (800e2e0 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800e1f6:	4604      	mov	r4, r0
 800e1f8:	6828      	ldr	r0, [r5, #0]
 800e1fa:	b140      	cbz	r0, 800e20e <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800e1fc:	7a03      	ldrb	r3, [r0, #8]
 800e1fe:	b933      	cbnz	r3, 800e20e <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800e200:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800e204:	6803      	ldr	r3, [r0, #0]
 800e206:	689b      	ldr	r3, [r3, #8]
 800e208:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e20c:	4718      	bx	r3
 800e20e:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
 800e212:	b97b      	cbnz	r3, 800e234 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800e214:	b170      	cbz	r0, 800e234 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800e216:	7a03      	ldrb	r3, [r0, #8]
 800e218:	b163      	cbz	r3, 800e234 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800e21a:	4b32      	ldr	r3, [pc, #200]	; (800e2e4 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800e21c:	6818      	ldr	r0, [r3, #0]
 800e21e:	b110      	cbz	r0, 800e226 <_ZN8touchgfx11Application15handleTickEventEv+0x36>
 800e220:	6803      	ldr	r3, [r0, #0]
 800e222:	691b      	ldr	r3, [r3, #16]
 800e224:	4798      	blx	r3
 800e226:	6828      	ldr	r0, [r5, #0]
 800e228:	6803      	ldr	r3, [r0, #0]
 800e22a:	68db      	ldr	r3, [r3, #12]
 800e22c:	4798      	blx	r3
 800e22e:	2301      	movs	r3, #1
 800e230:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800e234:	2500      	movs	r5, #0
 800e236:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800e23a:	42a8      	cmp	r0, r5
 800e23c:	dd0c      	ble.n	800e258 <_ZN8touchgfx11Application15handleTickEventEv+0x68>
 800e23e:	1963      	adds	r3, r4, r5
 800e240:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800e244:	b132      	cbz	r2, 800e254 <_ZN8touchgfx11Application15handleTickEventEv+0x64>
 800e246:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800e24a:	4413      	add	r3, r2
 800e24c:	6858      	ldr	r0, [r3, #4]
 800e24e:	6803      	ldr	r3, [r0, #0]
 800e250:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e252:	4798      	blx	r3
 800e254:	3501      	adds	r5, #1
 800e256:	e7ee      	b.n	800e236 <_ZN8touchgfx11Application15handleTickEventEv+0x46>
 800e258:	f5c4 467f 	rsb	r6, r4, #65280	; 0xff00
 800e25c:	3801      	subs	r0, #1
 800e25e:	3678      	adds	r6, #120	; 0x78
 800e260:	f04f 0c00 	mov.w	ip, #0
 800e264:	1c43      	adds	r3, r0, #1
 800e266:	d033      	beq.n	800e2d0 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800e268:	1823      	adds	r3, r4, r0
 800e26a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800e26e:	bb6a      	cbnz	r2, 800e2cc <_ZN8touchgfx11Application15handleTickEventEv+0xdc>
 800e270:	b281      	uxth	r1, r0
 800e272:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800e276:	1d25      	adds	r5, r4, #4
 800e278:	f8d3 9004 	ldr.w	r9, [r3, #4]
 800e27c:	f8b4 3084 	ldrh.w	r3, [r4, #132]	; 0x84
 800e280:	4293      	cmp	r3, r2
 800e282:	dc0a      	bgt.n	800e29a <_ZN8touchgfx11Application15handleTickEventEv+0xaa>
 800e284:	f101 0288 	add.w	r2, r1, #136	; 0x88
 800e288:	4422      	add	r2, r4
 800e28a:	18b1      	adds	r1, r6, r2
 800e28c:	b289      	uxth	r1, r1
 800e28e:	428b      	cmp	r3, r1
 800e290:	d919      	bls.n	800e2c6 <_ZN8touchgfx11Application15handleTickEventEv+0xd6>
 800e292:	7851      	ldrb	r1, [r2, #1]
 800e294:	f802 1b01 	strb.w	r1, [r2], #1
 800e298:	e7f7      	b.n	800e28a <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800e29a:	682f      	ldr	r7, [r5, #0]
 800e29c:	45b9      	cmp	r9, r7
 800e29e:	f105 0804 	add.w	r8, r5, #4
 800e2a2:	d10d      	bne.n	800e2c0 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>
 800e2a4:	4696      	mov	lr, r2
 800e2a6:	f1be 0f1e 	cmp.w	lr, #30
 800e2aa:	dc06      	bgt.n	800e2ba <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800e2ac:	f10e 0e01 	add.w	lr, lr, #1
 800e2b0:	686f      	ldr	r7, [r5, #4]
 800e2b2:	f845 7b04 	str.w	r7, [r5], #4
 800e2b6:	4573      	cmp	r3, lr
 800e2b8:	dcf5      	bgt.n	800e2a6 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800e2ba:	3b01      	subs	r3, #1
 800e2bc:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800e2c0:	3201      	adds	r2, #1
 800e2c2:	4645      	mov	r5, r8
 800e2c4:	e7da      	b.n	800e27c <_ZN8touchgfx11Application15handleTickEventEv+0x8c>
 800e2c6:	4423      	add	r3, r4
 800e2c8:	f883 c088 	strb.w	ip, [r3, #136]	; 0x88
 800e2cc:	3801      	subs	r0, #1
 800e2ce:	e7c9      	b.n	800e264 <_ZN8touchgfx11Application15handleTickEventEv+0x74>
 800e2d0:	4b04      	ldr	r3, [pc, #16]	; (800e2e4 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800e2d2:	6818      	ldr	r0, [r3, #0]
 800e2d4:	b110      	cbz	r0, 800e2dc <_ZN8touchgfx11Application15handleTickEventEv+0xec>
 800e2d6:	6803      	ldr	r3, [r0, #0]
 800e2d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e2da:	e795      	b.n	800e208 <_ZN8touchgfx11Application15handleTickEventEv+0x18>
 800e2dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e2e0:	20001804 	.word	0x20001804
 800e2e4:	20001800 	.word	0x20001800

0800e2e8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800e2e8:	b570      	push	{r4, r5, r6, lr}
 800e2ea:	4606      	mov	r6, r0
 800e2ec:	460c      	mov	r4, r1
 800e2ee:	b929      	cbnz	r1, 800e2fc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800e2f0:	4b0c      	ldr	r3, [pc, #48]	; (800e324 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800e2f2:	4a0d      	ldr	r2, [pc, #52]	; (800e328 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800e2f4:	480d      	ldr	r0, [pc, #52]	; (800e32c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800e2f6:	2164      	movs	r1, #100	; 0x64
 800e2f8:	f00d fb24 	bl	801b944 <__assert_func>
 800e2fc:	4d0c      	ldr	r5, [pc, #48]	; (800e330 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800e2fe:	2300      	movs	r3, #0
 800e300:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800e304:	6828      	ldr	r0, [r5, #0]
 800e306:	b110      	cbz	r0, 800e30e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800e308:	6803      	ldr	r3, [r0, #0]
 800e30a:	695b      	ldr	r3, [r3, #20]
 800e30c:	4798      	blx	r3
 800e30e:	602c      	str	r4, [r5, #0]
 800e310:	6823      	ldr	r3, [r4, #0]
 800e312:	4620      	mov	r0, r4
 800e314:	68db      	ldr	r3, [r3, #12]
 800e316:	4798      	blx	r3
 800e318:	6833      	ldr	r3, [r6, #0]
 800e31a:	4630      	mov	r0, r6
 800e31c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e31e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e322:	4718      	bx	r3
 800e324:	0802015c 	.word	0x0802015c
 800e328:	08020224 	.word	0x08020224
 800e32c:	08020166 	.word	0x08020166
 800e330:	20001800 	.word	0x20001800

0800e334 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800e334:	b510      	push	{r4, lr}
 800e336:	f9b1 4000 	ldrsh.w	r4, [r1]
 800e33a:	888a      	ldrh	r2, [r1, #4]
 800e33c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e340:	4422      	add	r2, r4
 800e342:	b212      	sxth	r2, r2
 800e344:	4293      	cmp	r3, r2
 800e346:	da15      	bge.n	800e374 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e348:	8882      	ldrh	r2, [r0, #4]
 800e34a:	4413      	add	r3, r2
 800e34c:	b21b      	sxth	r3, r3
 800e34e:	429c      	cmp	r4, r3
 800e350:	da10      	bge.n	800e374 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e352:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e356:	88c9      	ldrh	r1, [r1, #6]
 800e358:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800e35c:	4419      	add	r1, r3
 800e35e:	b209      	sxth	r1, r1
 800e360:	428a      	cmp	r2, r1
 800e362:	da07      	bge.n	800e374 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e364:	88c0      	ldrh	r0, [r0, #6]
 800e366:	4410      	add	r0, r2
 800e368:	b200      	sxth	r0, r0
 800e36a:	4283      	cmp	r3, r0
 800e36c:	bfac      	ite	ge
 800e36e:	2000      	movge	r0, #0
 800e370:	2001      	movlt	r0, #1
 800e372:	bd10      	pop	{r4, pc}
 800e374:	2000      	movs	r0, #0
 800e376:	e7fc      	b.n	800e372 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800e378 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800e378:	b570      	push	{r4, r5, r6, lr}
 800e37a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800e37e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e382:	42ac      	cmp	r4, r5
 800e384:	db18      	blt.n	800e3b8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800e386:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800e38a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e38e:	429a      	cmp	r2, r3
 800e390:	db12      	blt.n	800e3b8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800e392:	8886      	ldrh	r6, [r0, #4]
 800e394:	4435      	add	r5, r6
 800e396:	888e      	ldrh	r6, [r1, #4]
 800e398:	4434      	add	r4, r6
 800e39a:	b22d      	sxth	r5, r5
 800e39c:	b224      	sxth	r4, r4
 800e39e:	42a5      	cmp	r5, r4
 800e3a0:	db0a      	blt.n	800e3b8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800e3a2:	88c0      	ldrh	r0, [r0, #6]
 800e3a4:	4418      	add	r0, r3
 800e3a6:	88cb      	ldrh	r3, [r1, #6]
 800e3a8:	441a      	add	r2, r3
 800e3aa:	b200      	sxth	r0, r0
 800e3ac:	b212      	sxth	r2, r2
 800e3ae:	4290      	cmp	r0, r2
 800e3b0:	bfb4      	ite	lt
 800e3b2:	2000      	movlt	r0, #0
 800e3b4:	2001      	movge	r0, #1
 800e3b6:	bd70      	pop	{r4, r5, r6, pc}
 800e3b8:	2000      	movs	r0, #0
 800e3ba:	e7fc      	b.n	800e3b6 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800e3bc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800e3bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e3be:	4604      	mov	r4, r0
 800e3c0:	4608      	mov	r0, r1
 800e3c2:	460d      	mov	r5, r1
 800e3c4:	f7fd fe5e 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e3c8:	b978      	cbnz	r0, 800e3ea <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800e3ca:	4620      	mov	r0, r4
 800e3cc:	f7fd fe5a 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e3d0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800e3d4:	b150      	cbz	r0, 800e3ec <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800e3d6:	8026      	strh	r6, [r4, #0]
 800e3d8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e3dc:	8063      	strh	r3, [r4, #2]
 800e3de:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800e3e2:	80a3      	strh	r3, [r4, #4]
 800e3e4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e3e8:	80e3      	strh	r3, [r4, #6]
 800e3ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e3ec:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e3f0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e3f4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800e3f8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800e3fc:	88ed      	ldrh	r5, [r5, #6]
 800e3fe:	42b1      	cmp	r1, r6
 800e400:	460f      	mov	r7, r1
 800e402:	bfa8      	it	ge
 800e404:	4637      	movge	r7, r6
 800e406:	4293      	cmp	r3, r2
 800e408:	4618      	mov	r0, r3
 800e40a:	4466      	add	r6, ip
 800e40c:	bfa8      	it	ge
 800e40e:	4610      	movge	r0, r2
 800e410:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e414:	8027      	strh	r7, [r4, #0]
 800e416:	442a      	add	r2, r5
 800e418:	88e5      	ldrh	r5, [r4, #6]
 800e41a:	8060      	strh	r0, [r4, #2]
 800e41c:	4461      	add	r1, ip
 800e41e:	442b      	add	r3, r5
 800e420:	b236      	sxth	r6, r6
 800e422:	b209      	sxth	r1, r1
 800e424:	b212      	sxth	r2, r2
 800e426:	b21b      	sxth	r3, r3
 800e428:	428e      	cmp	r6, r1
 800e42a:	bfac      	ite	ge
 800e42c:	ebc7 0106 	rsbge	r1, r7, r6
 800e430:	ebc7 0101 	rsblt	r1, r7, r1
 800e434:	429a      	cmp	r2, r3
 800e436:	bfac      	ite	ge
 800e438:	ebc0 0202 	rsbge	r2, r0, r2
 800e43c:	ebc0 0203 	rsblt	r2, r0, r3
 800e440:	80a1      	strh	r1, [r4, #4]
 800e442:	80e2      	strh	r2, [r4, #6]
 800e444:	e7d1      	b.n	800e3ea <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800e448 <_ZN8touchgfx11Application11getInstanceEv>:
 800e448:	4b01      	ldr	r3, [pc, #4]	; (800e450 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800e44a:	6818      	ldr	r0, [r3, #0]
 800e44c:	4770      	bx	lr
 800e44e:	bf00      	nop
 800e450:	20001810 	.word	0x20001810

0800e454 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800e454:	2300      	movs	r3, #0
 800e456:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800e45a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800e45e:	30a8      	adds	r0, #168	; 0xa8
 800e460:	f802 3b01 	strb.w	r3, [r2], #1
 800e464:	4282      	cmp	r2, r0
 800e466:	d1fb      	bne.n	800e460 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800e468:	4770      	bx	lr

0800e46a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e46a:	4603      	mov	r3, r0
 800e46c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800e470:	2200      	movs	r2, #0
 800e472:	801a      	strh	r2, [r3, #0]
 800e474:	805a      	strh	r2, [r3, #2]
 800e476:	809a      	strh	r2, [r3, #4]
 800e478:	80da      	strh	r2, [r3, #6]
 800e47a:	3308      	adds	r3, #8
 800e47c:	428b      	cmp	r3, r1
 800e47e:	d1f8      	bne.n	800e472 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e480:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e484:	4770      	bx	lr
	...

0800e488 <_ZN8touchgfx11ApplicationC1Ev>:
 800e488:	b570      	push	{r4, r5, r6, lr}
 800e48a:	4b16      	ldr	r3, [pc, #88]	; (800e4e4 <_ZN8touchgfx11ApplicationC1Ev+0x5c>)
 800e48c:	6003      	str	r3, [r0, #0]
 800e48e:	2500      	movs	r5, #0
 800e490:	4604      	mov	r4, r0
 800e492:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800e496:	30a8      	adds	r0, #168	; 0xa8
 800e498:	f7ff ffe7 	bl	800e46a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e49c:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800e4a0:	f7ff ffe3 	bl	800e46a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e4a4:	f884 512c 	strb.w	r5, [r4, #300]	; 0x12c
 800e4a8:	f884 512d 	strb.w	r5, [r4, #301]	; 0x12d
 800e4ac:	490e      	ldr	r1, [pc, #56]	; (800e4e8 <_ZN8touchgfx11ApplicationC1Ev+0x60>)
 800e4ae:	480f      	ldr	r0, [pc, #60]	; (800e4ec <_ZN8touchgfx11ApplicationC1Ev+0x64>)
 800e4b0:	4e0f      	ldr	r6, [pc, #60]	; (800e4f0 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800e4b2:	f00d f915 	bl	801b6e0 <CRC_Lock>
 800e4b6:	4b0f      	ldr	r3, [pc, #60]	; (800e4f4 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800e4b8:	b158      	cbz	r0, 800e4d2 <_ZN8touchgfx11ApplicationC1Ev+0x4a>
 800e4ba:	801d      	strh	r5, [r3, #0]
 800e4bc:	4a0e      	ldr	r2, [pc, #56]	; (800e4f8 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800e4be:	2300      	movs	r3, #0
 800e4c0:	6013      	str	r3, [r2, #0]
 800e4c2:	4a0e      	ldr	r2, [pc, #56]	; (800e4fc <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800e4c4:	6033      	str	r3, [r6, #0]
 800e4c6:	4620      	mov	r0, r4
 800e4c8:	6013      	str	r3, [r2, #0]
 800e4ca:	f7ff ffc3 	bl	800e454 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800e4ce:	4620      	mov	r0, r4
 800e4d0:	bd70      	pop	{r4, r5, r6, pc}
 800e4d2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e4d6:	2002      	movs	r0, #2
 800e4d8:	801a      	strh	r2, [r3, #0]
 800e4da:	6030      	str	r0, [r6, #0]
 800e4dc:	f000 ff1e 	bl	800f31c <_ZN8touchgfx6Screen4drawEv>
 800e4e0:	e7ec      	b.n	800e4bc <_ZN8touchgfx11ApplicationC1Ev+0x34>
 800e4e2:	bf00      	nop
 800e4e4:	080201f0 	.word	0x080201f0
 800e4e8:	b5e8b5cd 	.word	0xb5e8b5cd
 800e4ec:	f407a5c2 	.word	0xf407a5c2
 800e4f0:	20001800 	.word	0x20001800
 800e4f4:	20000024 	.word	0x20000024
 800e4f8:	20001810 	.word	0x20001810
 800e4fc:	20001804 	.word	0x20001804

0800e500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e500:	2300      	movs	r3, #0
 800e502:	8003      	strh	r3, [r0, #0]
 800e504:	8043      	strh	r3, [r0, #2]
 800e506:	8083      	strh	r3, [r0, #4]
 800e508:	80c3      	strh	r3, [r0, #6]
 800e50a:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800e50e:	4293      	cmp	r3, r2
 800e510:	b530      	push	{r4, r5, lr}
 800e512:	d912      	bls.n	800e53a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800e514:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800e518:	3b01      	subs	r3, #1
 800e51a:	6825      	ldr	r5, [r4, #0]
 800e51c:	6005      	str	r5, [r0, #0]
 800e51e:	b29b      	uxth	r3, r3
 800e520:	6865      	ldr	r5, [r4, #4]
 800e522:	6045      	str	r5, [r0, #4]
 800e524:	4293      	cmp	r3, r2
 800e526:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800e52a:	d906      	bls.n	800e53a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800e52c:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800e530:	681d      	ldr	r5, [r3, #0]
 800e532:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800e536:	685d      	ldr	r5, [r3, #4]
 800e538:	6065      	str	r5, [r4, #4]
 800e53a:	bd30      	pop	{r4, r5, pc}

0800e53c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800e53c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e53e:	466b      	mov	r3, sp
 800e540:	e883 0006 	stmia.w	r3, {r1, r2}
 800e544:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800e548:	2a07      	cmp	r2, #7
 800e54a:	4604      	mov	r4, r0
 800e54c:	d906      	bls.n	800e55c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800e54e:	4b09      	ldr	r3, [pc, #36]	; (800e574 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800e550:	4a09      	ldr	r2, [pc, #36]	; (800e578 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800e552:	480a      	ldr	r0, [pc, #40]	; (800e57c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800e554:	f44f 7102 	mov.w	r1, #520	; 0x208
 800e558:	f00d f9f4 	bl	801b944 <__assert_func>
 800e55c:	1c51      	adds	r1, r2, #1
 800e55e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e562:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800e566:	cb03      	ldmia	r3!, {r0, r1}
 800e568:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800e56c:	6069      	str	r1, [r5, #4]
 800e56e:	b003      	add	sp, #12
 800e570:	bd30      	pop	{r4, r5, pc}
 800e572:	bf00      	nop
 800e574:	08020190 	.word	0x08020190
 800e578:	08020268 	.word	0x08020268
 800e57c:	080201bf 	.word	0x080201bf

0800e580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e580:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e584:	b089      	sub	sp, #36	; 0x24
 800e586:	466c      	mov	r4, sp
 800e588:	4606      	mov	r6, r0
 800e58a:	4620      	mov	r0, r4
 800e58c:	e884 0006 	stmia.w	r4, {r1, r2}
 800e590:	f7fd fd78 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e594:	bbb0      	cbnz	r0, 800e604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800e596:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800e59a:	b1fd      	cbz	r5, 800e5dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800e59c:	3d01      	subs	r5, #1
 800e59e:	af04      	add	r7, sp, #16
 800e5a0:	f04f 090a 	mov.w	r9, #10
 800e5a4:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800e5a8:	ab02      	add	r3, sp, #8
 800e5aa:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e5ae:	6851      	ldr	r1, [r2, #4]
 800e5b0:	c303      	stmia	r3!, {r0, r1}
 800e5b2:	4621      	mov	r1, r4
 800e5b4:	a802      	add	r0, sp, #8
 800e5b6:	fa1f f885 	uxth.w	r8, r5
 800e5ba:	f7ff fedd 	bl	800e378 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e5be:	bb08      	cbnz	r0, 800e604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800e5c0:	a902      	add	r1, sp, #8
 800e5c2:	4620      	mov	r0, r4
 800e5c4:	f7ff fed8 	bl	800e378 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e5c8:	b1f8      	cbz	r0, 800e60a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800e5ca:	4642      	mov	r2, r8
 800e5cc:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e5d0:	a806      	add	r0, sp, #24
 800e5d2:	f7ff ff95 	bl	800e500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e5d6:	f115 35ff 	adds.w	r5, r5, #4294967295
 800e5da:	d2e3      	bcs.n	800e5a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800e5dc:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800e5e0:	2b08      	cmp	r3, #8
 800e5e2:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800e5e6:	d108      	bne.n	800e5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800e5e8:	4629      	mov	r1, r5
 800e5ea:	a806      	add	r0, sp, #24
 800e5ec:	2207      	movs	r2, #7
 800e5ee:	f7ff ff87 	bl	800e500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e5f2:	a906      	add	r1, sp, #24
 800e5f4:	4620      	mov	r0, r4
 800e5f6:	f7ff fee1 	bl	800e3bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e5fa:	e894 0006 	ldmia.w	r4, {r1, r2}
 800e5fe:	4628      	mov	r0, r5
 800e600:	f7ff ff9c 	bl	800e53c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e604:	b009      	add	sp, #36	; 0x24
 800e606:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e60a:	4621      	mov	r1, r4
 800e60c:	a802      	add	r0, sp, #8
 800e60e:	f7ff fe91 	bl	800e334 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e612:	b150      	cbz	r0, 800e62a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800e614:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e618:	a806      	add	r0, sp, #24
 800e61a:	4642      	mov	r2, r8
 800e61c:	f7ff ff70 	bl	800e500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e620:	a902      	add	r1, sp, #8
 800e622:	4620      	mov	r0, r4
 800e624:	f7ff feca 	bl	800e3bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e628:	e7d5      	b.n	800e5d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e62a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800e62e:	e887 0003 	stmia.w	r7, {r0, r1}
 800e632:	a902      	add	r1, sp, #8
 800e634:	4638      	mov	r0, r7
 800e636:	f7ff fec1 	bl	800e3bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e63a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e63e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e642:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800e646:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e64a:	fb13 f302 	smulbb	r3, r3, r2
 800e64e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e652:	fb11 f102 	smulbb	r1, r1, r2
 800e656:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800e65a:	fb12 1100 	smlabb	r1, r2, r0, r1
 800e65e:	220b      	movs	r2, #11
 800e660:	fb09 f303 	mul.w	r3, r9, r3
 800e664:	434a      	muls	r2, r1
 800e666:	4293      	cmp	r3, r2
 800e668:	dab5      	bge.n	800e5d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e66a:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e66e:	a806      	add	r0, sp, #24
 800e670:	4642      	mov	r2, r8
 800e672:	f7ff ff45 	bl	800e500 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e676:	e897 0003 	ldmia.w	r7, {r0, r1}
 800e67a:	e884 0003 	stmia.w	r4, {r0, r1}
 800e67e:	e7aa      	b.n	800e5d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800e680 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800e680:	b530      	push	{r4, r5, lr}
 800e682:	4b1d      	ldr	r3, [pc, #116]	; (800e6f8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800e684:	b085      	sub	sp, #20
 800e686:	460c      	mov	r4, r1
 800e688:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e68c:	4b1b      	ldr	r3, [pc, #108]	; (800e6fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800e68e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e692:	2100      	movs	r1, #0
 800e694:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e698:	9100      	str	r1, [sp, #0]
 800e69a:	4605      	mov	r5, r0
 800e69c:	6861      	ldr	r1, [r4, #4]
 800e69e:	6820      	ldr	r0, [r4, #0]
 800e6a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e6a4:	ab02      	add	r3, sp, #8
 800e6a6:	c303      	stmia	r3!, {r0, r1}
 800e6a8:	4669      	mov	r1, sp
 800e6aa:	a802      	add	r0, sp, #8
 800e6ac:	f7fd fca6 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800e6b0:	ab02      	add	r3, sp, #8
 800e6b2:	cb03      	ldmia	r3!, {r0, r1}
 800e6b4:	4b12      	ldr	r3, [pc, #72]	; (800e700 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800e6b6:	6020      	str	r0, [r4, #0]
 800e6b8:	6818      	ldr	r0, [r3, #0]
 800e6ba:	6061      	str	r1, [r4, #4]
 800e6bc:	b138      	cbz	r0, 800e6ce <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e6be:	f895 312c 	ldrb.w	r3, [r5, #300]	; 0x12c
 800e6c2:	b133      	cbz	r3, 800e6d2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800e6c4:	6821      	ldr	r1, [r4, #0]
 800e6c6:	6862      	ldr	r2, [r4, #4]
 800e6c8:	4628      	mov	r0, r5
 800e6ca:	f7ff ff59 	bl	800e580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e6ce:	b005      	add	sp, #20
 800e6d0:	bd30      	pop	{r4, r5, pc}
 800e6d2:	6803      	ldr	r3, [r0, #0]
 800e6d4:	4621      	mov	r1, r4
 800e6d6:	689b      	ldr	r3, [r3, #8]
 800e6d8:	4798      	blx	r3
 800e6da:	4b0a      	ldr	r3, [pc, #40]	; (800e704 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800e6dc:	6818      	ldr	r0, [r3, #0]
 800e6de:	b118      	cbz	r0, 800e6e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800e6e0:	6803      	ldr	r3, [r0, #0]
 800e6e2:	4621      	mov	r1, r4
 800e6e4:	689b      	ldr	r3, [r3, #8]
 800e6e6:	4798      	blx	r3
 800e6e8:	4b07      	ldr	r3, [pc, #28]	; (800e708 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800e6ea:	6818      	ldr	r0, [r3, #0]
 800e6ec:	6803      	ldr	r3, [r0, #0]
 800e6ee:	4621      	mov	r1, r4
 800e6f0:	695b      	ldr	r3, [r3, #20]
 800e6f2:	4798      	blx	r3
 800e6f4:	e7eb      	b.n	800e6ce <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e6f6:	bf00      	nop
 800e6f8:	20001798 	.word	0x20001798
 800e6fc:	2000179a 	.word	0x2000179a
 800e700:	20001800 	.word	0x20001800
 800e704:	200017fc 	.word	0x200017fc
 800e708:	200017a4 	.word	0x200017a4

0800e70c <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800e70c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e710:	4604      	mov	r4, r0
 800e712:	b09b      	sub	sp, #108	; 0x6c
 800e714:	f880 112c 	strb.w	r1, [r0, #300]	; 0x12c
 800e718:	b129      	cbz	r1, 800e726 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800e71a:	2300      	movs	r3, #0
 800e71c:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800e720:	b01b      	add	sp, #108	; 0x6c
 800e722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e726:	4baf      	ldr	r3, [pc, #700]	; (800e9e4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800e728:	681b      	ldr	r3, [r3, #0]
 800e72a:	b33b      	cbz	r3, 800e77c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800e72c:	4dae      	ldr	r5, [pc, #696]	; (800e9e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800e72e:	4628      	mov	r0, r5
 800e730:	f7fd fca8 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e734:	4606      	mov	r6, r0
 800e736:	bb08      	cbnz	r0, 800e77c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800e738:	4628      	mov	r0, r5
 800e73a:	f7ff fca5 	bl	800e088 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e73e:	6829      	ldr	r1, [r5, #0]
 800e740:	686a      	ldr	r2, [r5, #4]
 800e742:	4620      	mov	r0, r4
 800e744:	f7ff ff1c 	bl	800e580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e748:	802e      	strh	r6, [r5, #0]
 800e74a:	806e      	strh	r6, [r5, #2]
 800e74c:	80ae      	strh	r6, [r5, #4]
 800e74e:	80ee      	strh	r6, [r5, #6]
 800e750:	4fa6      	ldr	r7, [pc, #664]	; (800e9ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800e752:	a809      	add	r0, sp, #36	; 0x24
 800e754:	f7ff fe89 	bl	800e46a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e758:	883d      	ldrh	r5, [r7, #0]
 800e75a:	462e      	mov	r6, r5
 800e75c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e760:	42b3      	cmp	r3, r6
 800e762:	d910      	bls.n	800e786 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7a>
 800e764:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e768:	a809      	add	r0, sp, #36	; 0x24
 800e76a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800e76e:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800e772:	3601      	adds	r6, #1
 800e774:	f7ff fee2 	bl	800e53c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e778:	b2b6      	uxth	r6, r6
 800e77a:	e7ef      	b.n	800e75c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x50>
 800e77c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e780:	2b00      	cmp	r3, #0
 800e782:	d1e5      	bne.n	800e750 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x44>
 800e784:	e7cc      	b.n	800e720 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e786:	462e      	mov	r6, r5
 800e788:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800e78c:	42b3      	cmp	r3, r6
 800e78e:	d90b      	bls.n	800e7a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800e790:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e794:	4620      	mov	r0, r4
 800e796:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800e79a:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800e79e:	3601      	adds	r6, #1
 800e7a0:	f7ff feee 	bl	800e580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e7a4:	b2b6      	uxth	r6, r6
 800e7a6:	e7ef      	b.n	800e788 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7c>
 800e7a8:	4e91      	ldr	r6, [pc, #580]	; (800e9f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800e7aa:	6833      	ldr	r3, [r6, #0]
 800e7ac:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800e7b0:	2b01      	cmp	r3, #1
 800e7b2:	f040 8092 	bne.w	800e8da <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ce>
 800e7b6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800e7ba:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800e7be:	33aa      	adds	r3, #170	; 0xaa
 800e7c0:	f04f 0900 	mov.w	r9, #0
 800e7c4:	42a8      	cmp	r0, r5
 800e7c6:	f103 0308 	add.w	r3, r3, #8
 800e7ca:	dd0a      	ble.n	800e7e2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xd6>
 800e7cc:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800e7d0:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800e7d4:	440a      	add	r2, r1
 800e7d6:	b212      	sxth	r2, r2
 800e7d8:	4591      	cmp	r9, r2
 800e7da:	bfb8      	it	lt
 800e7dc:	4691      	movlt	r9, r2
 800e7de:	3501      	adds	r5, #1
 800e7e0:	e7f0      	b.n	800e7c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xb8>
 800e7e2:	4b84      	ldr	r3, [pc, #528]	; (800e9f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800e7e4:	f8df 8214 	ldr.w	r8, [pc, #532]	; 800e9fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>
 800e7e8:	881d      	ldrh	r5, [r3, #0]
 800e7ea:	2300      	movs	r3, #0
 800e7ec:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e7f0:	2d0f      	cmp	r5, #15
 800e7f2:	bf8c      	ite	hi
 800e7f4:	08ed      	lsrhi	r5, r5, #3
 800e7f6:	2501      	movls	r5, #1
 800e7f8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e7fc:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800e800:	6830      	ldr	r0, [r6, #0]
 800e802:	440b      	add	r3, r1
 800e804:	b21b      	sxth	r3, r3
 800e806:	4599      	cmp	r9, r3
 800e808:	6802      	ldr	r2, [r0, #0]
 800e80a:	dd49      	ble.n	800e8a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x194>
 800e80c:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800e810:	4798      	blx	r3
 800e812:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e816:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e81a:	4413      	add	r3, r2
 800e81c:	b21b      	sxth	r3, r3
 800e81e:	195a      	adds	r2, r3, r5
 800e820:	4290      	cmp	r0, r2
 800e822:	da07      	bge.n	800e834 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800e824:	4581      	cmp	r9, r0
 800e826:	dd05      	ble.n	800e834 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800e828:	4298      	cmp	r0, r3
 800e82a:	da33      	bge.n	800e894 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800e82c:	2b00      	cmp	r3, #0
 800e82e:	dd31      	ble.n	800e894 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800e830:	4648      	mov	r0, r9
 800e832:	e004      	b.n	800e83e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x132>
 800e834:	4298      	cmp	r0, r3
 800e836:	dbfb      	blt.n	800e830 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x124>
 800e838:	4548      	cmp	r0, r9
 800e83a:	bfa8      	it	ge
 800e83c:	4648      	movge	r0, r9
 800e83e:	f9b8 2000 	ldrsh.w	r2, [r8]
 800e842:	f8b7 a000 	ldrh.w	sl, [r7]
 800e846:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e84a:	2100      	movs	r1, #0
 800e84c:	1ac0      	subs	r0, r0, r3
 800e84e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e852:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e856:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e85a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e85e:	4553      	cmp	r3, sl
 800e860:	d9ca      	bls.n	800e7f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800e862:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800e866:	ab07      	add	r3, sp, #28
 800e868:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e86c:	6851      	ldr	r1, [r2, #4]
 800e86e:	c303      	stmia	r3!, {r0, r1}
 800e870:	a807      	add	r0, sp, #28
 800e872:	a905      	add	r1, sp, #20
 800e874:	f7fd fbc2 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800e878:	a807      	add	r0, sp, #28
 800e87a:	f7fd fc03 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e87e:	b920      	cbnz	r0, 800e88a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x17e>
 800e880:	6823      	ldr	r3, [r4, #0]
 800e882:	a907      	add	r1, sp, #28
 800e884:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e886:	4620      	mov	r0, r4
 800e888:	4798      	blx	r3
 800e88a:	f10a 0a01 	add.w	sl, sl, #1
 800e88e:	fa1f fa8a 	uxth.w	sl, sl
 800e892:	e7e2      	b.n	800e85a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14e>
 800e894:	6830      	ldr	r0, [r6, #0]
 800e896:	6803      	ldr	r3, [r0, #0]
 800e898:	2101      	movs	r1, #1
 800e89a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e89c:	4798      	blx	r3
 800e89e:	e7ab      	b.n	800e7f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800e8a0:	69d3      	ldr	r3, [r2, #28]
 800e8a2:	4798      	blx	r3
 800e8a4:	4b54      	ldr	r3, [pc, #336]	; (800e9f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800e8a6:	781b      	ldrb	r3, [r3, #0]
 800e8a8:	2b00      	cmp	r3, #0
 800e8aa:	f43f af39 	beq.w	800e720 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e8ae:	2300      	movs	r3, #0
 800e8b0:	883d      	ldrh	r5, [r7, #0]
 800e8b2:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800e8b6:	34ea      	adds	r4, #234	; 0xea
 800e8b8:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800e8bc:	42ab      	cmp	r3, r5
 800e8be:	f67f af2f 	bls.w	800e720 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e8c2:	ab1a      	add	r3, sp, #104	; 0x68
 800e8c4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e8c8:	3b44      	subs	r3, #68	; 0x44
 800e8ca:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e8ce:	4620      	mov	r0, r4
 800e8d0:	3501      	adds	r5, #1
 800e8d2:	f7ff fe33 	bl	800e53c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e8d6:	b2ad      	uxth	r5, r5
 800e8d8:	e7ee      	b.n	800e8b8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ac>
 800e8da:	2b02      	cmp	r3, #2
 800e8dc:	d16a      	bne.n	800e9b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800e8de:	f8df a120 	ldr.w	sl, [pc, #288]	; 800ea00 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800e8e2:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e8e6:	42ab      	cmp	r3, r5
 800e8e8:	d9dc      	bls.n	800e8a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800e8ea:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800e8ee:	ab03      	add	r3, sp, #12
 800e8f0:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e8f4:	6851      	ldr	r1, [r2, #4]
 800e8f6:	c303      	stmia	r3!, {r0, r1}
 800e8f8:	f89a 3000 	ldrb.w	r3, [sl]
 800e8fc:	2b01      	cmp	r3, #1
 800e8fe:	d102      	bne.n	800e906 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1fa>
 800e900:	a803      	add	r0, sp, #12
 800e902:	f7ff fc1b 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800e906:	a803      	add	r0, sp, #12
 800e908:	f7fd fbbc 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e90c:	2800      	cmp	r0, #0
 800e90e:	d14a      	bne.n	800e9a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29a>
 800e910:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800e914:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e918:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800e91c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e920:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e924:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e928:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e92c:	f10d 0914 	add.w	r9, sp, #20
 800e930:	f10d 081c 	add.w	r8, sp, #28
 800e934:	f8bd b012 	ldrh.w	fp, [sp, #18]
 800e938:	f8bd c00e 	ldrh.w	ip, [sp, #14]
 800e93c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e940:	6830      	ldr	r0, [r6, #0]
 800e942:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e946:	f8d0 e000 	ldr.w	lr, [r0]
 800e94a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800e94e:	44dc      	add	ip, fp
 800e950:	ebac 0c02 	sub.w	ip, ip, r2
 800e954:	fa1f fc8c 	uxth.w	ip, ip
 800e958:	f8cd c000 	str.w	ip, [sp]
 800e95c:	f8de b078 	ldr.w	fp, [lr, #120]	; 0x78
 800e960:	47d8      	blx	fp
 800e962:	f89a 3000 	ldrb.w	r3, [sl]
 800e966:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e96a:	2b01      	cmp	r3, #1
 800e96c:	d11e      	bne.n	800e9ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>
 800e96e:	e899 0003 	ldmia.w	r9, {r0, r1}
 800e972:	e888 0003 	stmia.w	r8, {r0, r1}
 800e976:	4640      	mov	r0, r8
 800e978:	f7ff fb86 	bl	800e088 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e97c:	6823      	ldr	r3, [r4, #0]
 800e97e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e980:	4641      	mov	r1, r8
 800e982:	4620      	mov	r0, r4
 800e984:	4798      	blx	r3
 800e986:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e98a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e98e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800e992:	4413      	add	r3, r2
 800e994:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e998:	440a      	add	r2, r1
 800e99a:	b21b      	sxth	r3, r3
 800e99c:	b212      	sxth	r2, r2
 800e99e:	4293      	cmp	r3, r2
 800e9a0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e9a4:	dbc6      	blt.n	800e934 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800e9a6:	3501      	adds	r5, #1
 800e9a8:	b2ad      	uxth	r5, r5
 800e9aa:	e79a      	b.n	800e8e2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d6>
 800e9ac:	6823      	ldr	r3, [r4, #0]
 800e9ae:	4649      	mov	r1, r9
 800e9b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9b2:	e7e6      	b.n	800e982 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800e9b4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e9b8:	42ab      	cmp	r3, r5
 800e9ba:	f67f af73 	bls.w	800e8a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800e9be:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800e9c2:	ab07      	add	r3, sp, #28
 800e9c4:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e9c8:	6851      	ldr	r1, [r2, #4]
 800e9ca:	c303      	stmia	r3!, {r0, r1}
 800e9cc:	a807      	add	r0, sp, #28
 800e9ce:	f7fd fb59 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e9d2:	b920      	cbnz	r0, 800e9de <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d2>
 800e9d4:	6823      	ldr	r3, [r4, #0]
 800e9d6:	a907      	add	r1, sp, #28
 800e9d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9da:	4620      	mov	r0, r4
 800e9dc:	4798      	blx	r3
 800e9de:	3501      	adds	r5, #1
 800e9e0:	b2ad      	uxth	r5, r5
 800e9e2:	e7e7      	b.n	800e9b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800e9e4:	200017fc 	.word	0x200017fc
 800e9e8:	20001808 	.word	0x20001808
 800e9ec:	20000024 	.word	0x20000024
 800e9f0:	200017a4 	.word	0x200017a4
 800e9f4:	2000179a 	.word	0x2000179a
 800e9f8:	200017a2 	.word	0x200017a2
 800e9fc:	20001798 	.word	0x20001798
 800ea00:	2000179c 	.word	0x2000179c

0800ea04 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ea04:	4b03      	ldr	r3, [pc, #12]	; (800ea14 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ea06:	2200      	movs	r2, #0
 800ea08:	801a      	strh	r2, [r3, #0]
 800ea0a:	805a      	strh	r2, [r3, #2]
 800ea0c:	809a      	strh	r2, [r3, #4]
 800ea0e:	80da      	strh	r2, [r3, #6]
 800ea10:	4770      	bx	lr
 800ea12:	bf00      	nop
 800ea14:	20001808 	.word	0x20001808

0800ea18 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
 800ea18:	2000      	movs	r0, #0
 800ea1a:	4770      	bx	lr

0800ea1c <_ZNK8touchgfx4Font12getGSUBTableEv>:
 800ea1c:	2000      	movs	r0, #0
 800ea1e:	4770      	bx	lr

0800ea20 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ea20:	b508      	push	{r3, lr}
 800ea22:	6803      	ldr	r3, [r0, #0]
 800ea24:	68db      	ldr	r3, [r3, #12]
 800ea26:	4798      	blx	r3
 800ea28:	b128      	cbz	r0, 800ea36 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ea2a:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800ea2e:	7a80      	ldrb	r0, [r0, #10]
 800ea30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ea34:	4318      	orrs	r0, r3
 800ea36:	bd08      	pop	{r3, pc}

0800ea38 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
 800ea38:	b40e      	push	{r1, r2, r3}
 800ea3a:	b533      	push	{r0, r1, r4, r5, lr}
 800ea3c:	ab05      	add	r3, sp, #20
 800ea3e:	f853 2b04 	ldr.w	r2, [r3], #4
 800ea42:	9301      	str	r3, [sp, #4]
 800ea44:	4b09      	ldr	r3, [pc, #36]	; (800ea6c <_ZNK8touchgfx4Font14getStringWidthEPKtz+0x34>)
 800ea46:	685c      	ldr	r4, [r3, #4]
 800ea48:	1061      	asrs	r1, r4, #1
 800ea4a:	07e4      	lsls	r4, r4, #31
 800ea4c:	eb00 0501 	add.w	r5, r0, r1
 800ea50:	bf45      	ittet	mi
 800ea52:	681b      	ldrmi	r3, [r3, #0]
 800ea54:	5841      	ldrmi	r1, [r0, r1]
 800ea56:	681c      	ldrpl	r4, [r3, #0]
 800ea58:	58cc      	ldrmi	r4, [r1, r3]
 800ea5a:	9b01      	ldr	r3, [sp, #4]
 800ea5c:	2100      	movs	r1, #0
 800ea5e:	4628      	mov	r0, r5
 800ea60:	47a0      	blx	r4
 800ea62:	b002      	add	sp, #8
 800ea64:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ea68:	b003      	add	sp, #12
 800ea6a:	4770      	bx	lr
 800ea6c:	20000010 	.word	0x20000010

0800ea70 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:
 800ea70:	b40c      	push	{r2, r3}
 800ea72:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ea74:	ab06      	add	r3, sp, #24
 800ea76:	f853 2b04 	ldr.w	r2, [r3], #4
 800ea7a:	9301      	str	r3, [sp, #4]
 800ea7c:	4b09      	ldr	r3, [pc, #36]	; (800eaa4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz+0x34>)
 800ea7e:	685d      	ldr	r5, [r3, #4]
 800ea80:	106c      	asrs	r4, r5, #1
 800ea82:	07ed      	lsls	r5, r5, #31
 800ea84:	eb00 0604 	add.w	r6, r0, r4
 800ea88:	bf45      	ittet	mi
 800ea8a:	681b      	ldrmi	r3, [r3, #0]
 800ea8c:	5900      	ldrmi	r0, [r0, r4]
 800ea8e:	681c      	ldrpl	r4, [r3, #0]
 800ea90:	58c4      	ldrmi	r4, [r0, r3]
 800ea92:	9b01      	ldr	r3, [sp, #4]
 800ea94:	4630      	mov	r0, r6
 800ea96:	47a0      	blx	r4
 800ea98:	b002      	add	sp, #8
 800ea9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ea9e:	b002      	add	sp, #8
 800eaa0:	4770      	bx	lr
 800eaa2:	bf00      	nop
 800eaa4:	20000010 	.word	0x20000010

0800eaa8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800eaa8:	b40e      	push	{r1, r2, r3}
 800eaaa:	b530      	push	{r4, r5, lr}
 800eaac:	b098      	sub	sp, #96	; 0x60
 800eaae:	ab1b      	add	r3, sp, #108	; 0x6c
 800eab0:	4604      	mov	r4, r0
 800eab2:	f853 5b04 	ldr.w	r5, [r3], #4
 800eab6:	9301      	str	r3, [sp, #4]
 800eab8:	a802      	add	r0, sp, #8
 800eaba:	f000 ffd5 	bl	800fa68 <_ZN8touchgfx12TextProviderC1Ev>
 800eabe:	6823      	ldr	r3, [r4, #0]
 800eac0:	4620      	mov	r0, r4
 800eac2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eac4:	4798      	blx	r3
 800eac6:	9a01      	ldr	r2, [sp, #4]
 800eac8:	4603      	mov	r3, r0
 800eaca:	4629      	mov	r1, r5
 800eacc:	a802      	add	r0, sp, #8
 800eace:	f000 ffe8 	bl	800faa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ead2:	a802      	add	r0, sp, #8
 800ead4:	f001 f81e 	bl	800fb14 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ead8:	2401      	movs	r4, #1
 800eada:	b2a3      	uxth	r3, r4
 800eadc:	b140      	cbz	r0, 800eaf0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800eade:	280a      	cmp	r0, #10
 800eae0:	bf08      	it	eq
 800eae2:	3301      	addeq	r3, #1
 800eae4:	a802      	add	r0, sp, #8
 800eae6:	bf08      	it	eq
 800eae8:	b21c      	sxtheq	r4, r3
 800eaea:	f001 f813 	bl	800fb14 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eaee:	e7f4      	b.n	800eada <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800eaf0:	4618      	mov	r0, r3
 800eaf2:	b018      	add	sp, #96	; 0x60
 800eaf4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800eaf8:	b003      	add	sp, #12
 800eafa:	4770      	bx	lr

0800eafc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800eafc:	b40e      	push	{r1, r2, r3}
 800eafe:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb00:	b098      	sub	sp, #96	; 0x60
 800eb02:	ab1d      	add	r3, sp, #116	; 0x74
 800eb04:	4605      	mov	r5, r0
 800eb06:	f853 4b04 	ldr.w	r4, [r3], #4
 800eb0a:	9300      	str	r3, [sp, #0]
 800eb0c:	a802      	add	r0, sp, #8
 800eb0e:	f000 ffab 	bl	800fa68 <_ZN8touchgfx12TextProviderC1Ev>
 800eb12:	682b      	ldr	r3, [r5, #0]
 800eb14:	4f21      	ldr	r7, [pc, #132]	; (800eb9c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0xa0>)
 800eb16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eb18:	4628      	mov	r0, r5
 800eb1a:	4798      	blx	r3
 800eb1c:	ae18      	add	r6, sp, #96	; 0x60
 800eb1e:	4603      	mov	r3, r0
 800eb20:	4621      	mov	r1, r4
 800eb22:	9a00      	ldr	r2, [sp, #0]
 800eb24:	a802      	add	r0, sp, #8
 800eb26:	2400      	movs	r4, #0
 800eb28:	f000 ffbb 	bl	800faa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800eb2c:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800eb30:	462a      	mov	r2, r5
 800eb32:	4633      	mov	r3, r6
 800eb34:	4621      	mov	r1, r4
 800eb36:	a802      	add	r0, sp, #8
 800eb38:	f001 f918 	bl	800fd6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eb3c:	b338      	cbz	r0, 800eb8e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x92>
 800eb3e:	280a      	cmp	r0, #10
 800eb40:	d01e      	beq.n	800eb80 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800eb42:	9901      	ldr	r1, [sp, #4]
 800eb44:	b1e1      	cbz	r1, 800eb80 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800eb46:	7b4b      	ldrb	r3, [r1, #13]
 800eb48:	f891 c008 	ldrb.w	ip, [r1, #8]
 800eb4c:	79c9      	ldrb	r1, [r1, #7]
 800eb4e:	88aa      	ldrh	r2, [r5, #4]
 800eb50:	f013 0f40 	tst.w	r3, #64	; 0x40
 800eb54:	ea4f 1e03 	mov.w	lr, r3, lsl #4
 800eb58:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800eb5c:	f40e 7e80 	and.w	lr, lr, #256	; 0x100
 800eb60:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800eb64:	bf14      	ite	ne
 800eb66:	4638      	movne	r0, r7
 800eb68:	2000      	moveq	r0, #0
 800eb6a:	ea41 010e 	orr.w	r1, r1, lr
 800eb6e:	ea43 030c 	orr.w	r3, r3, ip
 800eb72:	440a      	add	r2, r1
 800eb74:	4303      	orrs	r3, r0
 800eb76:	1ad3      	subs	r3, r2, r3
 800eb78:	b29b      	uxth	r3, r3
 800eb7a:	42a3      	cmp	r3, r4
 800eb7c:	bfc8      	it	gt
 800eb7e:	b21c      	sxthgt	r4, r3
 800eb80:	4633      	mov	r3, r6
 800eb82:	462a      	mov	r2, r5
 800eb84:	2100      	movs	r1, #0
 800eb86:	a802      	add	r0, sp, #8
 800eb88:	f001 f8f0 	bl	800fd6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eb8c:	e7d6      	b.n	800eb3c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x40>
 800eb8e:	b2a0      	uxth	r0, r4
 800eb90:	b018      	add	sp, #96	; 0x60
 800eb92:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800eb96:	b003      	add	sp, #12
 800eb98:	4770      	bx	lr
 800eb9a:	bf00      	nop
 800eb9c:	fffffe00 	.word	0xfffffe00

0800eba0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800eba0:	b40e      	push	{r1, r2, r3}
 800eba2:	b570      	push	{r4, r5, r6, lr}
 800eba4:	b099      	sub	sp, #100	; 0x64
 800eba6:	ab1d      	add	r3, sp, #116	; 0x74
 800eba8:	4604      	mov	r4, r0
 800ebaa:	f853 5b04 	ldr.w	r5, [r3], #4
 800ebae:	9300      	str	r3, [sp, #0]
 800ebb0:	a802      	add	r0, sp, #8
 800ebb2:	f000 ff59 	bl	800fa68 <_ZN8touchgfx12TextProviderC1Ev>
 800ebb6:	6823      	ldr	r3, [r4, #0]
 800ebb8:	4620      	mov	r0, r4
 800ebba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ebbc:	4798      	blx	r3
 800ebbe:	4629      	mov	r1, r5
 800ebc0:	4603      	mov	r3, r0
 800ebc2:	9a00      	ldr	r2, [sp, #0]
 800ebc4:	a802      	add	r0, sp, #8
 800ebc6:	ad18      	add	r5, sp, #96	; 0x60
 800ebc8:	f000 ff6b 	bl	800faa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ebcc:	2100      	movs	r1, #0
 800ebce:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800ebd2:	4622      	mov	r2, r4
 800ebd4:	462b      	mov	r3, r5
 800ebd6:	a802      	add	r0, sp, #8
 800ebd8:	f001 f8c8 	bl	800fd6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ebdc:	26ff      	movs	r6, #255	; 0xff
 800ebde:	b190      	cbz	r0, 800ec06 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x66>
 800ebe0:	280a      	cmp	r0, #10
 800ebe2:	d009      	beq.n	800ebf8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800ebe4:	9a01      	ldr	r2, [sp, #4]
 800ebe6:	b13a      	cbz	r2, 800ebf8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800ebe8:	7923      	ldrb	r3, [r4, #4]
 800ebea:	7a12      	ldrb	r2, [r2, #8]
 800ebec:	1a9b      	subs	r3, r3, r2
 800ebee:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 800ebf2:	429e      	cmp	r6, r3
 800ebf4:	bf28      	it	cs
 800ebf6:	461e      	movcs	r6, r3
 800ebf8:	462b      	mov	r3, r5
 800ebfa:	4622      	mov	r2, r4
 800ebfc:	2100      	movs	r1, #0
 800ebfe:	a802      	add	r0, sp, #8
 800ec00:	f001 f8b4 	bl	800fd6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ec04:	e7eb      	b.n	800ebde <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800ec06:	4630      	mov	r0, r6
 800ec08:	b019      	add	sp, #100	; 0x64
 800ec0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec0e:	b003      	add	sp, #12
 800ec10:	4770      	bx	lr

0800ec12 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ec12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec16:	4606      	mov	r6, r0
 800ec18:	b099      	sub	sp, #100	; 0x64
 800ec1a:	a802      	add	r0, sp, #8
 800ec1c:	4614      	mov	r4, r2
 800ec1e:	4688      	mov	r8, r1
 800ec20:	461d      	mov	r5, r3
 800ec22:	f000 ff21 	bl	800fa68 <_ZN8touchgfx12TextProviderC1Ev>
 800ec26:	6833      	ldr	r3, [r6, #0]
 800ec28:	4630      	mov	r0, r6
 800ec2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ec2c:	4798      	blx	r3
 800ec2e:	462a      	mov	r2, r5
 800ec30:	4603      	mov	r3, r0
 800ec32:	4621      	mov	r1, r4
 800ec34:	a802      	add	r0, sp, #8
 800ec36:	f000 ff34 	bl	800faa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ec3a:	f04f 0b00 	mov.w	fp, #0
 800ec3e:	465f      	mov	r7, fp
 800ec40:	46da      	mov	sl, fp
 800ec42:	46d9      	mov	r9, fp
 800ec44:	ab01      	add	r3, sp, #4
 800ec46:	4632      	mov	r2, r6
 800ec48:	4641      	mov	r1, r8
 800ec4a:	a802      	add	r0, sp, #8
 800ec4c:	f8cd 9004 	str.w	r9, [sp, #4]
 800ec50:	f001 f88c 	bl	800fd6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ec54:	4605      	mov	r5, r0
 800ec56:	b108      	cbz	r0, 800ec5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x4a>
 800ec58:	280a      	cmp	r0, #10
 800ec5a:	d10b      	bne.n	800ec74 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x62>
 800ec5c:	4557      	cmp	r7, sl
 800ec5e:	bf38      	it	cc
 800ec60:	4657      	movcc	r7, sl
 800ec62:	f04f 0a00 	mov.w	sl, #0
 800ec66:	b91d      	cbnz	r5, 800ec70 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800ec68:	4638      	mov	r0, r7
 800ec6a:	b019      	add	sp, #100	; 0x64
 800ec6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec70:	46ab      	mov	fp, r5
 800ec72:	e7e7      	b.n	800ec44 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x32>
 800ec74:	9a01      	ldr	r2, [sp, #4]
 800ec76:	2a00      	cmp	r2, #0
 800ec78:	d0fa      	beq.n	800ec70 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800ec7a:	f992 400d 	ldrsb.w	r4, [r2, #13]
 800ec7e:	6833      	ldr	r3, [r6, #0]
 800ec80:	8895      	ldrh	r5, [r2, #4]
 800ec82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ec84:	f404 7080 	and.w	r0, r4, #256	; 0x100
 800ec88:	7a94      	ldrb	r4, [r2, #10]
 800ec8a:	4659      	mov	r1, fp
 800ec8c:	4304      	orrs	r4, r0
 800ec8e:	4630      	mov	r0, r6
 800ec90:	4798      	blx	r3
 800ec92:	4420      	add	r0, r4
 800ec94:	4450      	add	r0, sl
 800ec96:	fa1f fa80 	uxth.w	sl, r0
 800ec9a:	e7e4      	b.n	800ec66 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x54>

0800ec9c <_ZNK8touchgfx8Drawable10invalidateEv>:
 800ec9c:	b513      	push	{r0, r1, r4, lr}
 800ec9e:	1d01      	adds	r1, r0, #4
 800eca0:	4603      	mov	r3, r0
 800eca2:	c903      	ldmia	r1, {r0, r1}
 800eca4:	466a      	mov	r2, sp
 800eca6:	e882 0003 	stmia.w	r2, {r0, r1}
 800ecaa:	2100      	movs	r1, #0
 800ecac:	9100      	str	r1, [sp, #0]
 800ecae:	6819      	ldr	r1, [r3, #0]
 800ecb0:	4618      	mov	r0, r3
 800ecb2:	690c      	ldr	r4, [r1, #16]
 800ecb4:	4611      	mov	r1, r2
 800ecb6:	47a0      	blx	r4
 800ecb8:	b002      	add	sp, #8
 800ecba:	bd10      	pop	{r4, pc}

0800ecbc <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800ecbc:	b538      	push	{r3, r4, r5, lr}
 800ecbe:	680b      	ldr	r3, [r1, #0]
 800ecc0:	460c      	mov	r4, r1
 800ecc2:	68db      	ldr	r3, [r3, #12]
 800ecc4:	4605      	mov	r5, r0
 800ecc6:	4798      	blx	r3
 800ecc8:	6823      	ldr	r3, [r4, #0]
 800ecca:	4620      	mov	r0, r4
 800eccc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ecce:	4629      	mov	r1, r5
 800ecd0:	4798      	blx	r3
 800ecd2:	4628      	mov	r0, r5
 800ecd4:	bd38      	pop	{r3, r4, r5, pc}

0800ecd6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800ecd6:	b410      	push	{r4}
 800ecd8:	880a      	ldrh	r2, [r1, #0]
 800ecda:	8884      	ldrh	r4, [r0, #4]
 800ecdc:	4422      	add	r2, r4
 800ecde:	800a      	strh	r2, [r1, #0]
 800ece0:	88c4      	ldrh	r4, [r0, #6]
 800ece2:	884a      	ldrh	r2, [r1, #2]
 800ece4:	4422      	add	r2, r4
 800ece6:	804a      	strh	r2, [r1, #2]
 800ece8:	6940      	ldr	r0, [r0, #20]
 800ecea:	b120      	cbz	r0, 800ecf6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800ecec:	6803      	ldr	r3, [r0, #0]
 800ecee:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ecf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ecf4:	4718      	bx	r3
 800ecf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ecfa:	4770      	bx	lr

0800ecfc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800ecfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ecfe:	460b      	mov	r3, r1
 800ed00:	b085      	sub	sp, #20
 800ed02:	4604      	mov	r4, r0
 800ed04:	b901      	cbnz	r1, 800ed08 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ed06:	b1fa      	cbz	r2, 800ed48 <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800ed08:	1d27      	adds	r7, r4, #4
 800ed0a:	e897 0003 	ldmia.w	r7, {r0, r1}
 800ed0e:	466e      	mov	r6, sp
 800ed10:	e886 0003 	stmia.w	r6, {r0, r1}
 800ed14:	88e1      	ldrh	r1, [r4, #6]
 800ed16:	440a      	add	r2, r1
 800ed18:	88a1      	ldrh	r1, [r4, #4]
 800ed1a:	4419      	add	r1, r3
 800ed1c:	6823      	ldr	r3, [r4, #0]
 800ed1e:	b209      	sxth	r1, r1
 800ed20:	4620      	mov	r0, r4
 800ed22:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ed24:	b212      	sxth	r2, r2
 800ed26:	4798      	blx	r3
 800ed28:	e897 0003 	ldmia.w	r7, {r0, r1}
 800ed2c:	ad02      	add	r5, sp, #8
 800ed2e:	e885 0003 	stmia.w	r5, {r0, r1}
 800ed32:	6960      	ldr	r0, [r4, #20]
 800ed34:	b150      	cbz	r0, 800ed4c <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800ed36:	6803      	ldr	r3, [r0, #0]
 800ed38:	4631      	mov	r1, r6
 800ed3a:	691b      	ldr	r3, [r3, #16]
 800ed3c:	4798      	blx	r3
 800ed3e:	6960      	ldr	r0, [r4, #20]
 800ed40:	6803      	ldr	r3, [r0, #0]
 800ed42:	691b      	ldr	r3, [r3, #16]
 800ed44:	4629      	mov	r1, r5
 800ed46:	4798      	blx	r3
 800ed48:	b005      	add	sp, #20
 800ed4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed4c:	f7ff fb7c 	bl	800e448 <_ZN8touchgfx11Application11getInstanceEv>
 800ed50:	6803      	ldr	r3, [r0, #0]
 800ed52:	4631      	mov	r1, r6
 800ed54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed56:	4798      	blx	r3
 800ed58:	f7ff fb76 	bl	800e448 <_ZN8touchgfx11Application11getInstanceEv>
 800ed5c:	6803      	ldr	r3, [r0, #0]
 800ed5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed60:	e7f0      	b.n	800ed44 <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800ed62 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800ed62:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ed64:	8882      	ldrh	r2, [r0, #4]
 800ed66:	880b      	ldrh	r3, [r1, #0]
 800ed68:	4413      	add	r3, r2
 800ed6a:	800b      	strh	r3, [r1, #0]
 800ed6c:	88c2      	ldrh	r2, [r0, #6]
 800ed6e:	884b      	ldrh	r3, [r1, #2]
 800ed70:	4413      	add	r3, r2
 800ed72:	4602      	mov	r2, r0
 800ed74:	804b      	strh	r3, [r1, #2]
 800ed76:	4605      	mov	r5, r0
 800ed78:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ed7c:	460c      	mov	r4, r1
 800ed7e:	6851      	ldr	r1, [r2, #4]
 800ed80:	466b      	mov	r3, sp
 800ed82:	c303      	stmia	r3!, {r0, r1}
 800ed84:	4621      	mov	r1, r4
 800ed86:	4668      	mov	r0, sp
 800ed88:	f7fd f938 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800ed8c:	466b      	mov	r3, sp
 800ed8e:	cb03      	ldmia	r3!, {r0, r1}
 800ed90:	6020      	str	r0, [r4, #0]
 800ed92:	6061      	str	r1, [r4, #4]
 800ed94:	6968      	ldr	r0, [r5, #20]
 800ed96:	b128      	cbz	r0, 800eda4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800ed98:	6803      	ldr	r3, [r0, #0]
 800ed9a:	691b      	ldr	r3, [r3, #16]
 800ed9c:	4621      	mov	r1, r4
 800ed9e:	4798      	blx	r3
 800eda0:	b003      	add	sp, #12
 800eda2:	bd30      	pop	{r4, r5, pc}
 800eda4:	f7ff fb50 	bl	800e448 <_ZN8touchgfx11Application11getInstanceEv>
 800eda8:	6803      	ldr	r3, [r0, #0]
 800edaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800edac:	e7f6      	b.n	800ed9c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800edae <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800edae:	b570      	push	{r4, r5, r6, lr}
 800edb0:	8882      	ldrh	r2, [r0, #4]
 800edb2:	880b      	ldrh	r3, [r1, #0]
 800edb4:	4413      	add	r3, r2
 800edb6:	800b      	strh	r3, [r1, #0]
 800edb8:	88c2      	ldrh	r2, [r0, #6]
 800edba:	884b      	ldrh	r3, [r1, #2]
 800edbc:	460c      	mov	r4, r1
 800edbe:	4413      	add	r3, r2
 800edc0:	804b      	strh	r3, [r1, #2]
 800edc2:	4605      	mov	r5, r0
 800edc4:	1d01      	adds	r1, r0, #4
 800edc6:	4620      	mov	r0, r4
 800edc8:	f7fd f918 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800edcc:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800edd0:	b153      	cbz	r3, 800ede8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800edd2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800edd6:	b13b      	cbz	r3, 800ede8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800edd8:	6968      	ldr	r0, [r5, #20]
 800edda:	b128      	cbz	r0, 800ede8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800eddc:	6803      	ldr	r3, [r0, #0]
 800edde:	4621      	mov	r1, r4
 800ede0:	6a1b      	ldr	r3, [r3, #32]
 800ede2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ede6:	4718      	bx	r3
 800ede8:	bd70      	pop	{r4, r5, r6, pc}

0800edea <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800edea:	b510      	push	{r4, lr}
 800edec:	4604      	mov	r4, r0
 800edee:	4608      	mov	r0, r1
 800edf0:	2300      	movs	r3, #0
 800edf2:	8023      	strh	r3, [r4, #0]
 800edf4:	8063      	strh	r3, [r4, #2]
 800edf6:	6803      	ldr	r3, [r0, #0]
 800edf8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800edfc:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800ee00:	80a1      	strh	r1, [r4, #4]
 800ee02:	80e2      	strh	r2, [r4, #6]
 800ee04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ee06:	4621      	mov	r1, r4
 800ee08:	4798      	blx	r3
 800ee0a:	4620      	mov	r0, r4
 800ee0c:	bd10      	pop	{r4, pc}
	...

0800ee10 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800ee10:	b530      	push	{r4, r5, lr}
 800ee12:	8083      	strh	r3, [r0, #4]
 800ee14:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ee18:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800ee1c:	7183      	strb	r3, [r0, #6]
 800ee1e:	79c3      	ldrb	r3, [r0, #7]
 800ee20:	6101      	str	r1, [r0, #16]
 800ee22:	f365 0306 	bfi	r3, r5, #0, #7
 800ee26:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800ee2a:	8282      	strh	r2, [r0, #20]
 800ee2c:	f365 13c7 	bfi	r3, r5, #7, #1
 800ee30:	71c3      	strb	r3, [r0, #7]
 800ee32:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800ee36:	7203      	strb	r3, [r0, #8]
 800ee38:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800ee3c:	7243      	strb	r3, [r0, #9]
 800ee3e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ee42:	8143      	strh	r3, [r0, #10]
 800ee44:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800ee48:	8183      	strh	r3, [r0, #12]
 800ee4a:	4b01      	ldr	r3, [pc, #4]	; (800ee50 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800ee4c:	6003      	str	r3, [r0, #0]
 800ee4e:	bd30      	pop	{r4, r5, pc}
 800ee50:	08020390 	.word	0x08020390

0800ee54 <_ZNK8touchgfx9ConstFont4findEt>:
 800ee54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee56:	8a84      	ldrh	r4, [r0, #20]
 800ee58:	2500      	movs	r5, #0
 800ee5a:	3c01      	subs	r4, #1
 800ee5c:	260e      	movs	r6, #14
 800ee5e:	42a5      	cmp	r5, r4
 800ee60:	dc0c      	bgt.n	800ee7c <_ZNK8touchgfx9ConstFont4findEt+0x28>
 800ee62:	192a      	adds	r2, r5, r4
 800ee64:	6903      	ldr	r3, [r0, #16]
 800ee66:	1052      	asrs	r2, r2, #1
 800ee68:	fb06 3302 	mla	r3, r6, r2, r3
 800ee6c:	889f      	ldrh	r7, [r3, #4]
 800ee6e:	428f      	cmp	r7, r1
 800ee70:	d901      	bls.n	800ee76 <_ZNK8touchgfx9ConstFont4findEt+0x22>
 800ee72:	1e54      	subs	r4, r2, #1
 800ee74:	e7f3      	b.n	800ee5e <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800ee76:	d202      	bcs.n	800ee7e <_ZNK8touchgfx9ConstFont4findEt+0x2a>
 800ee78:	1c55      	adds	r5, r2, #1
 800ee7a:	e7f0      	b.n	800ee5e <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800ee7c:	2300      	movs	r3, #0
 800ee7e:	4618      	mov	r0, r3
 800ee80:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ee82 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800ee82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee84:	4605      	mov	r5, r0
 800ee86:	4617      	mov	r7, r2
 800ee88:	461e      	mov	r6, r3
 800ee8a:	f7ff ffe3 	bl	800ee54 <_ZNK8touchgfx9ConstFont4findEt>
 800ee8e:	b9e0      	cbnz	r0, 800eeca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x48>
 800ee90:	b911      	cbnz	r1, 800ee98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x16>
 800ee92:	2400      	movs	r4, #0
 800ee94:	4620      	mov	r0, r4
 800ee96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee98:	290a      	cmp	r1, #10
 800ee9a:	d0fa      	beq.n	800ee92 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800ee9c:	682b      	ldr	r3, [r5, #0]
 800ee9e:	4628      	mov	r0, r5
 800eea0:	691b      	ldr	r3, [r3, #16]
 800eea2:	4798      	blx	r3
 800eea4:	4601      	mov	r1, r0
 800eea6:	4628      	mov	r0, r5
 800eea8:	f7ff ffd4 	bl	800ee54 <_ZNK8touchgfx9ConstFont4findEt>
 800eeac:	4604      	mov	r4, r0
 800eeae:	2800      	cmp	r0, #0
 800eeb0:	d0ef      	beq.n	800ee92 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800eeb2:	682b      	ldr	r3, [r5, #0]
 800eeb4:	4621      	mov	r1, r4
 800eeb6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eeb8:	4628      	mov	r0, r5
 800eeba:	4798      	blx	r3
 800eebc:	6038      	str	r0, [r7, #0]
 800eebe:	682b      	ldr	r3, [r5, #0]
 800eec0:	4628      	mov	r0, r5
 800eec2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eec4:	4798      	blx	r3
 800eec6:	7030      	strb	r0, [r6, #0]
 800eec8:	e7e4      	b.n	800ee94 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x12>
 800eeca:	4604      	mov	r4, r0
 800eecc:	e7f1      	b.n	800eeb2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x30>

0800eece <_ZN8touchgfx10ClickEventD1Ev>:
 800eece:	4770      	bx	lr

0800eed0 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800eed0:	2000      	movs	r0, #0
 800eed2:	4770      	bx	lr

0800eed4 <_ZN8touchgfx9DragEventD1Ev>:
 800eed4:	4770      	bx	lr

0800eed6 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800eed6:	2001      	movs	r0, #1
 800eed8:	4770      	bx	lr

0800eeda <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800eeda:	2002      	movs	r0, #2
 800eedc:	4770      	bx	lr

0800eede <_ZN8touchgfx12GestureEventD1Ev>:
 800eede:	4770      	bx	lr

0800eee0 <_ZN8touchgfx10ClickEventD0Ev>:
 800eee0:	b510      	push	{r4, lr}
 800eee2:	210c      	movs	r1, #12
 800eee4:	4604      	mov	r4, r0
 800eee6:	f00c fcfe 	bl	801b8e6 <_ZdlPvj>
 800eeea:	4620      	mov	r0, r4
 800eeec:	bd10      	pop	{r4, pc}

0800eeee <_ZN8touchgfx9DragEventD0Ev>:
 800eeee:	b510      	push	{r4, lr}
 800eef0:	2110      	movs	r1, #16
 800eef2:	4604      	mov	r4, r0
 800eef4:	f00c fcf7 	bl	801b8e6 <_ZdlPvj>
 800eef8:	4620      	mov	r0, r4
 800eefa:	bd10      	pop	{r4, pc}

0800eefc <_ZN8touchgfx12GestureEventD0Ev>:
 800eefc:	b510      	push	{r4, lr}
 800eefe:	210c      	movs	r1, #12
 800ef00:	4604      	mov	r4, r0
 800ef02:	f00c fcf0 	bl	801b8e6 <_ZdlPvj>
 800ef06:	4620      	mov	r0, r4
 800ef08:	bd10      	pop	{r4, pc}
	...

0800ef0c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800ef0c:	b530      	push	{r4, r5, lr}
 800ef0e:	460d      	mov	r5, r1
 800ef10:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800ef12:	b087      	sub	sp, #28
 800ef14:	4604      	mov	r4, r0
 800ef16:	b301      	cbz	r1, 800ef5a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800ef18:	a801      	add	r0, sp, #4
 800ef1a:	f7ff ff66 	bl	800edea <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef1e:	892a      	ldrh	r2, [r5, #8]
 800ef20:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ef24:	7928      	ldrb	r0, [r5, #4]
 800ef26:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ef2a:	f88d 0010 	strb.w	r0, [sp, #16]
 800ef2e:	1ad2      	subs	r2, r2, r3
 800ef30:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ef32:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ef34:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ef38:	441a      	add	r2, r3
 800ef3a:	896b      	ldrh	r3, [r5, #10]
 800ef3c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800ef40:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ef44:	1b5b      	subs	r3, r3, r5
 800ef46:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800ef48:	442b      	add	r3, r5
 800ef4a:	4d05      	ldr	r5, [pc, #20]	; (800ef60 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800ef4c:	9503      	str	r5, [sp, #12]
 800ef4e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ef52:	6803      	ldr	r3, [r0, #0]
 800ef54:	a903      	add	r1, sp, #12
 800ef56:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ef58:	4798      	blx	r3
 800ef5a:	b007      	add	sp, #28
 800ef5c:	bd30      	pop	{r4, r5, pc}
 800ef5e:	bf00      	nop
 800ef60:	0802040c 	.word	0x0802040c

0800ef64 <_ZNK8touchgfx4Rect9intersectEss>:
 800ef64:	b510      	push	{r4, lr}
 800ef66:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ef6a:	428b      	cmp	r3, r1
 800ef6c:	dc10      	bgt.n	800ef90 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800ef6e:	8884      	ldrh	r4, [r0, #4]
 800ef70:	4423      	add	r3, r4
 800ef72:	b21b      	sxth	r3, r3
 800ef74:	4299      	cmp	r1, r3
 800ef76:	da0b      	bge.n	800ef90 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800ef78:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ef7c:	4293      	cmp	r3, r2
 800ef7e:	dc07      	bgt.n	800ef90 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800ef80:	88c0      	ldrh	r0, [r0, #6]
 800ef82:	4418      	add	r0, r3
 800ef84:	b200      	sxth	r0, r0
 800ef86:	4282      	cmp	r2, r0
 800ef88:	bfac      	ite	ge
 800ef8a:	2000      	movge	r0, #0
 800ef8c:	2001      	movlt	r0, #1
 800ef8e:	bd10      	pop	{r4, pc}
 800ef90:	2000      	movs	r0, #0
 800ef92:	e7fc      	b.n	800ef8e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800ef94 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800ef94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef96:	460c      	mov	r4, r1
 800ef98:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800ef9a:	b089      	sub	sp, #36	; 0x24
 800ef9c:	4605      	mov	r5, r0
 800ef9e:	2900      	cmp	r1, #0
 800efa0:	d054      	beq.n	800f04c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800efa2:	4668      	mov	r0, sp
 800efa4:	f7ff ff21 	bl	800edea <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800efa8:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800efaa:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800efac:	8922      	ldrh	r2, [r4, #8]
 800efae:	88e1      	ldrh	r1, [r4, #6]
 800efb0:	443a      	add	r2, r7
 800efb2:	4431      	add	r1, r6
 800efb4:	b212      	sxth	r2, r2
 800efb6:	b209      	sxth	r1, r1
 800efb8:	4668      	mov	r0, sp
 800efba:	f7ff ffd3 	bl	800ef64 <_ZNK8touchgfx4Rect9intersectEss>
 800efbe:	b1d0      	cbz	r0, 800eff6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800efc0:	89a2      	ldrh	r2, [r4, #12]
 800efc2:	8961      	ldrh	r1, [r4, #10]
 800efc4:	443a      	add	r2, r7
 800efc6:	4431      	add	r1, r6
 800efc8:	b212      	sxth	r2, r2
 800efca:	b209      	sxth	r1, r1
 800efcc:	4668      	mov	r0, sp
 800efce:	f7ff ffc9 	bl	800ef64 <_ZNK8touchgfx4Rect9intersectEss>
 800efd2:	4603      	mov	r3, r0
 800efd4:	b978      	cbnz	r0, 800eff6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800efd6:	4a1e      	ldr	r2, [pc, #120]	; (800f050 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800efd8:	9204      	str	r2, [sp, #16]
 800efda:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800efdc:	f8ad 3016 	strh.w	r3, [sp, #22]
 800efe0:	2202      	movs	r2, #2
 800efe2:	f88d 2014 	strb.w	r2, [sp, #20]
 800efe6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800efea:	f8ad 301a 	strh.w	r3, [sp, #26]
 800efee:	6803      	ldr	r3, [r0, #0]
 800eff0:	a904      	add	r1, sp, #16
 800eff2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eff4:	4798      	blx	r3
 800eff6:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800eff8:	a802      	add	r0, sp, #8
 800effa:	f7ff fef6 	bl	800edea <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800effe:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f002:	88e0      	ldrh	r0, [r4, #6]
 800f004:	8961      	ldrh	r1, [r4, #10]
 800f006:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800f00a:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800f00e:	8923      	ldrh	r3, [r4, #8]
 800f010:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800f012:	7927      	ldrb	r7, [r4, #4]
 800f014:	f88d 7014 	strb.w	r7, [sp, #20]
 800f018:	1a80      	subs	r0, r0, r2
 800f01a:	1a89      	subs	r1, r1, r2
 800f01c:	89a2      	ldrh	r2, [r4, #12]
 800f01e:	4c0d      	ldr	r4, [pc, #52]	; (800f054 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800f020:	9404      	str	r4, [sp, #16]
 800f022:	4460      	add	r0, ip
 800f024:	eba3 030e 	sub.w	r3, r3, lr
 800f028:	eba2 020e 	sub.w	r2, r2, lr
 800f02c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f030:	4433      	add	r3, r6
 800f032:	4461      	add	r1, ip
 800f034:	4432      	add	r2, r6
 800f036:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f038:	f8ad 101a 	strh.w	r1, [sp, #26]
 800f03c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f040:	f8ad 201c 	strh.w	r2, [sp, #28]
 800f044:	6803      	ldr	r3, [r0, #0]
 800f046:	a904      	add	r1, sp, #16
 800f048:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f04a:	4798      	blx	r3
 800f04c:	b009      	add	sp, #36	; 0x24
 800f04e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f050:	080203e4 	.word	0x080203e4
 800f054:	080203f8 	.word	0x080203f8

0800f058 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f05c:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800f060:	790b      	ldrb	r3, [r1, #4]
 800f062:	b0a1      	sub	sp, #132	; 0x84
 800f064:	4604      	mov	r4, r0
 800f066:	460d      	mov	r5, r1
 800f068:	f1b9 0f00 	cmp.w	r9, #0
 800f06c:	d00f      	beq.n	800f08e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800f06e:	2b00      	cmp	r3, #0
 800f070:	f040 80a0 	bne.w	800f1b4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800f074:	b021      	add	sp, #132	; 0x84
 800f076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f07a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800f07e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f082:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f086:	1d20      	adds	r0, r4, #4
 800f088:	f7fc ff06 	bl	800be98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f08c:	e092      	b.n	800f1b4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800f08e:	2b00      	cmp	r3, #0
 800f090:	d1f0      	bne.n	800f074 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f092:	4b5e      	ldr	r3, [pc, #376]	; (800f20c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800f094:	681b      	ldr	r3, [r3, #0]
 800f096:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800f09a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800f09e:	f1ba 0f03 	cmp.w	sl, #3
 800f0a2:	ddea      	ble.n	800f07a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800f0a4:	f1ba 0f0c 	cmp.w	sl, #12
 800f0a8:	f04f 0303 	mov.w	r3, #3
 800f0ac:	bfdc      	itt	le
 800f0ae:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800f0b2:	fb92 f3f3 	sdivle	r3, r2, r3
 800f0b6:	9301      	str	r3, [sp, #4]
 800f0b8:	4b55      	ldr	r3, [pc, #340]	; (800f210 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800f0ba:	4956      	ldr	r1, [pc, #344]	; (800f214 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800f0bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f0c0:	4b55      	ldr	r3, [pc, #340]	; (800f218 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800f0c2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800f0c6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f0ca:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f0ce:	ab0e      	add	r3, sp, #56	; 0x38
 800f0d0:	2248      	movs	r2, #72	; 0x48
 800f0d2:	2600      	movs	r6, #0
 800f0d4:	4618      	mov	r0, r3
 800f0d6:	960a      	str	r6, [sp, #40]	; 0x28
 800f0d8:	f00c fcb6 	bl	801ba48 <memcpy>
 800f0dc:	f04f 32ff 	mov.w	r2, #4294967295
 800f0e0:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800f0e4:	f8cd a008 	str.w	sl, [sp, #8]
 800f0e8:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f0ec:	fb93 f3f2 	sdiv	r3, r3, r2
 800f0f0:	b29b      	uxth	r3, r3
 800f0f2:	46b3      	mov	fp, r6
 800f0f4:	9303      	str	r3, [sp, #12]
 800f0f6:	2300      	movs	r3, #0
 800f0f8:	9309      	str	r3, [sp, #36]	; 0x24
 800f0fa:	9b07      	ldr	r3, [sp, #28]
 800f0fc:	9a03      	ldr	r2, [sp, #12]
 800f0fe:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800f102:	88ef      	ldrh	r7, [r5, #6]
 800f104:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800f108:	fb13 f302 	smulbb	r3, r3, r2
 800f10c:	b29b      	uxth	r3, r3
 800f10e:	9304      	str	r3, [sp, #16]
 800f110:	9b07      	ldr	r3, [sp, #28]
 800f112:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800f116:	a80a      	add	r0, sp, #40	; 0x28
 800f118:	685b      	ldr	r3, [r3, #4]
 800f11a:	fb13 f302 	smulbb	r3, r3, r2
 800f11e:	b29b      	uxth	r3, r3
 800f120:	9305      	str	r3, [sp, #20]
 800f122:	9b04      	ldr	r3, [sp, #16]
 800f124:	441f      	add	r7, r3
 800f126:	9b05      	ldr	r3, [sp, #20]
 800f128:	4498      	add	r8, r3
 800f12a:	b23f      	sxth	r7, r7
 800f12c:	fa0f f888 	sxth.w	r8, r8
 800f130:	4642      	mov	r2, r8
 800f132:	4639      	mov	r1, r7
 800f134:	f7ff ff16 	bl	800ef64 <_ZNK8touchgfx4Rect9intersectEss>
 800f138:	b380      	cbz	r0, 800f19c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f13a:	4639      	mov	r1, r7
 800f13c:	ab09      	add	r3, sp, #36	; 0x24
 800f13e:	4642      	mov	r2, r8
 800f140:	1d20      	adds	r0, r4, #4
 800f142:	f7fc fea9 	bl	800be98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f146:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f148:	b341      	cbz	r1, 800f19c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f14a:	4549      	cmp	r1, r9
 800f14c:	d026      	beq.n	800f19c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f14e:	a80c      	add	r0, sp, #48	; 0x30
 800f150:	f7ff fe4b 	bl	800edea <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f154:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800f158:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f15c:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800f160:	2002      	movs	r0, #2
 800f162:	fb92 f2f0 	sdiv	r2, r2, r0
 800f166:	440a      	add	r2, r1
 800f168:	1a99      	subs	r1, r3, r2
 800f16a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800f16e:	fb93 f3f0 	sdiv	r3, r3, r0
 800f172:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800f176:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f17a:	4403      	add	r3, r0
 800f17c:	1ad3      	subs	r3, r2, r3
 800f17e:	435b      	muls	r3, r3
 800f180:	9a06      	ldr	r2, [sp, #24]
 800f182:	fb01 3301 	mla	r3, r1, r1, r3
 800f186:	4293      	cmp	r3, r2
 800f188:	d208      	bcs.n	800f19c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f18a:	9a04      	ldr	r2, [sp, #16]
 800f18c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800f190:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f192:	9a05      	ldr	r2, [sp, #20]
 800f194:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800f198:	86e2      	strh	r2, [r4, #54]	; 0x36
 800f19a:	9306      	str	r3, [sp, #24]
 800f19c:	f10b 0b02 	add.w	fp, fp, #2
 800f1a0:	f1bb 0f08 	cmp.w	fp, #8
 800f1a4:	dda7      	ble.n	800f0f6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f1a6:	9b02      	ldr	r3, [sp, #8]
 800f1a8:	4453      	add	r3, sl
 800f1aa:	9302      	str	r3, [sp, #8]
 800f1ac:	9b01      	ldr	r3, [sp, #4]
 800f1ae:	3601      	adds	r6, #1
 800f1b0:	42b3      	cmp	r3, r6
 800f1b2:	d199      	bne.n	800f0e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800f1b4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f1b6:	2900      	cmp	r1, #0
 800f1b8:	f43f af5c 	beq.w	800f074 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f1bc:	a80c      	add	r0, sp, #48	; 0x30
 800f1be:	f7ff fe14 	bl	800edea <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f1c2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800f1c6:	88ea      	ldrh	r2, [r5, #6]
 800f1c8:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800f1cc:	7929      	ldrb	r1, [r5, #4]
 800f1ce:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800f1d2:	1ad2      	subs	r2, r2, r3
 800f1d4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f1d6:	441a      	add	r2, r3
 800f1d8:	892b      	ldrh	r3, [r5, #8]
 800f1da:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800f1de:	1a1b      	subs	r3, r3, r0
 800f1e0:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800f1e2:	4403      	add	r3, r0
 800f1e4:	480d      	ldr	r0, [pc, #52]	; (800f21c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800f1e6:	900e      	str	r0, [sp, #56]	; 0x38
 800f1e8:	2600      	movs	r6, #0
 800f1ea:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f1ec:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800f1f0:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800f1f4:	6803      	ldr	r3, [r0, #0]
 800f1f6:	a90e      	add	r1, sp, #56	; 0x38
 800f1f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f1fa:	4798      	blx	r3
 800f1fc:	792b      	ldrb	r3, [r5, #4]
 800f1fe:	2b00      	cmp	r3, #0
 800f200:	f43f af38 	beq.w	800f074 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f204:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800f208:	e734      	b.n	800f074 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f20a:	bf00      	nop
 800f20c:	200017a4 	.word	0x200017a4
 800f210:	20001798 	.word	0x20001798
 800f214:	0801ecec 	.word	0x0801ecec
 800f218:	2000179a 	.word	0x2000179a
 800f21c:	080203e4 	.word	0x080203e4

0800f220 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f220:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f222:	4604      	mov	r4, r0
 800f224:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f228:	3201      	adds	r2, #1
 800f22a:	d112      	bne.n	800f252 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f22c:	6803      	ldr	r3, [r0, #0]
 800f22e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f232:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f236:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f23a:	2500      	movs	r5, #0
 800f23c:	9500      	str	r5, [sp, #0]
 800f23e:	466d      	mov	r5, sp
 800f240:	4629      	mov	r1, r5
 800f242:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f246:	6a1b      	ldr	r3, [r3, #32]
 800f248:	4798      	blx	r3
 800f24a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f24e:	e884 0003 	stmia.w	r4, {r0, r1}
 800f252:	4620      	mov	r0, r4
 800f254:	b003      	add	sp, #12
 800f256:	bd30      	pop	{r4, r5, pc}

0800f258 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f258:	b513      	push	{r0, r1, r4, lr}
 800f25a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f25e:	3301      	adds	r3, #1
 800f260:	4604      	mov	r4, r0
 800f262:	d109      	bne.n	800f278 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f264:	4601      	mov	r1, r0
 800f266:	4668      	mov	r0, sp
 800f268:	f7ff fdbf 	bl	800edea <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f26c:	f8bd 3000 	ldrh.w	r3, [sp]
 800f270:	8423      	strh	r3, [r4, #32]
 800f272:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f276:	8463      	strh	r3, [r4, #34]	; 0x22
 800f278:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f27c:	b002      	add	sp, #8
 800f27e:	bd10      	pop	{r4, pc}

0800f280 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f280:	b513      	push	{r0, r1, r4, lr}
 800f282:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800f286:	3301      	adds	r3, #1
 800f288:	4604      	mov	r4, r0
 800f28a:	d109      	bne.n	800f2a0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f28c:	4601      	mov	r1, r0
 800f28e:	4668      	mov	r0, sp
 800f290:	f7ff fdab 	bl	800edea <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f294:	f8bd 3000 	ldrh.w	r3, [sp]
 800f298:	8423      	strh	r3, [r4, #32]
 800f29a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f29e:	8463      	strh	r3, [r4, #34]	; 0x22
 800f2a0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800f2a4:	b002      	add	sp, #8
 800f2a6:	bd10      	pop	{r4, pc}

0800f2a8 <_ZN8touchgfx6ScreenC1Ev>:
 800f2a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f2aa:	4605      	mov	r5, r0
 800f2ac:	4b17      	ldr	r3, [pc, #92]	; (800f30c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f2ae:	f845 3b04 	str.w	r3, [r5], #4
 800f2b2:	2301      	movs	r3, #1
 800f2b4:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800f2b8:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800f2bc:	4b14      	ldr	r3, [pc, #80]	; (800f310 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f2be:	4915      	ldr	r1, [pc, #84]	; (800f314 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f2c0:	f9b3 7000 	ldrsh.w	r7, [r3]
 800f2c4:	4b14      	ldr	r3, [pc, #80]	; (800f318 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800f2c6:	6041      	str	r1, [r0, #4]
 800f2c8:	2200      	movs	r2, #0
 800f2ca:	8102      	strh	r2, [r0, #8]
 800f2cc:	8142      	strh	r2, [r0, #10]
 800f2ce:	8182      	strh	r2, [r0, #12]
 800f2d0:	81c2      	strh	r2, [r0, #14]
 800f2d2:	8202      	strh	r2, [r0, #16]
 800f2d4:	8242      	strh	r2, [r0, #18]
 800f2d6:	8282      	strh	r2, [r0, #20]
 800f2d8:	82c2      	strh	r2, [r0, #22]
 800f2da:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800f2de:	6202      	str	r2, [r0, #32]
 800f2e0:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800f2e4:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800f2e8:	6342      	str	r2, [r0, #52]	; 0x34
 800f2ea:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f2ee:	4611      	mov	r1, r2
 800f2f0:	4604      	mov	r4, r0
 800f2f2:	4628      	mov	r0, r5
 800f2f4:	f7f9 feaf 	bl	8009056 <_ZN8touchgfx8Drawable5setXYEss>
 800f2f8:	4639      	mov	r1, r7
 800f2fa:	4628      	mov	r0, r5
 800f2fc:	f7f9 fec9 	bl	8009092 <_ZN8touchgfx8Drawable8setWidthEs>
 800f300:	4628      	mov	r0, r5
 800f302:	4631      	mov	r1, r6
 800f304:	f7f9 fed4 	bl	80090b0 <_ZN8touchgfx8Drawable9setHeightEs>
 800f308:	4620      	mov	r0, r4
 800f30a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f30c:	08020420 	.word	0x08020420
 800f310:	20001798 	.word	0x20001798
 800f314:	0801f63c 	.word	0x0801f63c
 800f318:	2000179a 	.word	0x2000179a

0800f31c <_ZN8touchgfx6Screen4drawEv>:
 800f31c:	b507      	push	{r0, r1, r2, lr}
 800f31e:	4b09      	ldr	r3, [pc, #36]	; (800f344 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f320:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f324:	4b08      	ldr	r3, [pc, #32]	; (800f348 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f326:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f32a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f32e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f332:	6803      	ldr	r3, [r0, #0]
 800f334:	2100      	movs	r1, #0
 800f336:	9100      	str	r1, [sp, #0]
 800f338:	689b      	ldr	r3, [r3, #8]
 800f33a:	4669      	mov	r1, sp
 800f33c:	4798      	blx	r3
 800f33e:	b003      	add	sp, #12
 800f340:	f85d fb04 	ldr.w	pc, [sp], #4
 800f344:	20001798 	.word	0x20001798
 800f348:	2000179a 	.word	0x2000179a

0800f34c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f34c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f350:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f354:	b089      	sub	sp, #36	; 0x24
 800f356:	4680      	mov	r8, r0
 800f358:	460c      	mov	r4, r1
 800f35a:	4615      	mov	r5, r2
 800f35c:	b16b      	cbz	r3, 800f37a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f35e:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f362:	b153      	cbz	r3, 800f37a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f364:	4628      	mov	r0, r5
 800f366:	f7ff ff5b 	bl	800f220 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f36a:	4621      	mov	r1, r4
 800f36c:	f7fe ffe2 	bl	800e334 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f370:	69eb      	ldr	r3, [r5, #28]
 800f372:	b928      	cbnz	r0, 800f380 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x34>
 800f374:	461d      	mov	r5, r3
 800f376:	2b00      	cmp	r3, #0
 800f378:	d1f4      	bne.n	800f364 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18>
 800f37a:	b009      	add	sp, #36	; 0x24
 800f37c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f380:	ae04      	add	r6, sp, #16
 800f382:	2b00      	cmp	r3, #0
 800f384:	d051      	beq.n	800f42a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800f386:	682b      	ldr	r3, [r5, #0]
 800f388:	4629      	mov	r1, r5
 800f38a:	68db      	ldr	r3, [r3, #12]
 800f38c:	a802      	add	r0, sp, #8
 800f38e:	4798      	blx	r3
 800f390:	4628      	mov	r0, r5
 800f392:	f7ff ff61 	bl	800f258 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f396:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f39a:	4407      	add	r7, r0
 800f39c:	4628      	mov	r0, r5
 800f39e:	f7ff ff6f 	bl	800f280 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f3a2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f3a6:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f3aa:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f3ae:	4418      	add	r0, r3
 800f3b0:	4621      	mov	r1, r4
 800f3b2:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f3b6:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f3ba:	b23f      	sxth	r7, r7
 800f3bc:	4630      	mov	r0, r6
 800f3be:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f3c2:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f3c6:	f7fc fe19 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800f3ca:	4628      	mov	r0, r5
 800f3cc:	f7ff ff28 	bl	800f220 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f3d0:	4602      	mov	r2, r0
 800f3d2:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f3d6:	ab06      	add	r3, sp, #24
 800f3d8:	e883 0003 	stmia.w	r3, {r0, r1}
 800f3dc:	4611      	mov	r1, r2
 800f3de:	4618      	mov	r0, r3
 800f3e0:	f7fc fe0c 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800f3e4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f3e8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f3ec:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f3f0:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f3f4:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f3f8:	4299      	cmp	r1, r3
 800f3fa:	d10b      	bne.n	800f414 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800f3fc:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f400:	4552      	cmp	r2, sl
 800f402:	d107      	bne.n	800f414 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800f404:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f408:	455a      	cmp	r2, fp
 800f40a:	d103      	bne.n	800f414 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800f40c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f410:	454a      	cmp	r2, r9
 800f412:	d00a      	beq.n	800f42a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800f414:	f1bb 0f00 	cmp.w	fp, #0
 800f418:	d002      	beq.n	800f420 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800f41a:	f1b9 0f00 	cmp.w	r9, #0
 800f41e:	d12e      	bne.n	800f47e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x132>
 800f420:	69ea      	ldr	r2, [r5, #28]
 800f422:	4621      	mov	r1, r4
 800f424:	4640      	mov	r0, r8
 800f426:	f7ff ff91 	bl	800f34c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f42a:	4628      	mov	r0, r5
 800f42c:	f7ff fef8 	bl	800f220 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f430:	6861      	ldr	r1, [r4, #4]
 800f432:	4602      	mov	r2, r0
 800f434:	6820      	ldr	r0, [r4, #0]
 800f436:	4633      	mov	r3, r6
 800f438:	c303      	stmia	r3!, {r0, r1}
 800f43a:	4611      	mov	r1, r2
 800f43c:	4630      	mov	r0, r6
 800f43e:	f7fc fddd 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800f442:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f446:	2b00      	cmp	r3, #0
 800f448:	d097      	beq.n	800f37a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f44a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f44e:	2b00      	cmp	r3, #0
 800f450:	d093      	beq.n	800f37a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f452:	4628      	mov	r0, r5
 800f454:	f7ff ff00 	bl	800f258 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f458:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f45c:	1a18      	subs	r0, r3, r0
 800f45e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f462:	4628      	mov	r0, r5
 800f464:	f7ff ff0c 	bl	800f280 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f468:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f46c:	1a18      	subs	r0, r3, r0
 800f46e:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f472:	682b      	ldr	r3, [r5, #0]
 800f474:	4631      	mov	r1, r6
 800f476:	689b      	ldr	r3, [r3, #8]
 800f478:	4628      	mov	r0, r5
 800f47a:	4798      	blx	r3
 800f47c:	e77d      	b.n	800f37a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f47e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f482:	fa1f f08a 	uxth.w	r0, sl
 800f486:	4552      	cmp	r2, sl
 800f488:	9000      	str	r0, [sp, #0]
 800f48a:	da12      	bge.n	800f4b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x166>
 800f48c:	9301      	str	r3, [sp, #4]
 800f48e:	9b00      	ldr	r3, [sp, #0]
 800f490:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f494:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f498:	1a9a      	subs	r2, r3, r2
 800f49a:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f49e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f4a2:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f4a6:	69ea      	ldr	r2, [r5, #28]
 800f4a8:	4631      	mov	r1, r6
 800f4aa:	4640      	mov	r0, r8
 800f4ac:	f7ff ff4e 	bl	800f34c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f4b0:	9b01      	ldr	r3, [sp, #4]
 800f4b2:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f4b6:	429a      	cmp	r2, r3
 800f4b8:	b29f      	uxth	r7, r3
 800f4ba:	da0d      	bge.n	800f4d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18c>
 800f4bc:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f4c0:	1aba      	subs	r2, r7, r2
 800f4c2:	f8ad a012 	strh.w	sl, [sp, #18]
 800f4c6:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f4ca:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f4ce:	69ea      	ldr	r2, [r5, #28]
 800f4d0:	4631      	mov	r1, r6
 800f4d2:	4640      	mov	r0, r8
 800f4d4:	f7ff ff3a 	bl	800f34c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f4d8:	8822      	ldrh	r2, [r4, #0]
 800f4da:	88a3      	ldrh	r3, [r4, #4]
 800f4dc:	445f      	add	r7, fp
 800f4de:	4413      	add	r3, r2
 800f4e0:	b29b      	uxth	r3, r3
 800f4e2:	b2bf      	uxth	r7, r7
 800f4e4:	b23a      	sxth	r2, r7
 800f4e6:	b219      	sxth	r1, r3
 800f4e8:	4291      	cmp	r1, r2
 800f4ea:	dd0d      	ble.n	800f508 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1bc>
 800f4ec:	1bdb      	subs	r3, r3, r7
 800f4ee:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f4f2:	f8ad a012 	strh.w	sl, [sp, #18]
 800f4f6:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f4fa:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f4fe:	69ea      	ldr	r2, [r5, #28]
 800f500:	4631      	mov	r1, r6
 800f502:	4640      	mov	r0, r8
 800f504:	f7ff ff22 	bl	800f34c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f508:	88e2      	ldrh	r2, [r4, #6]
 800f50a:	8863      	ldrh	r3, [r4, #2]
 800f50c:	4413      	add	r3, r2
 800f50e:	9a00      	ldr	r2, [sp, #0]
 800f510:	444a      	add	r2, r9
 800f512:	b29b      	uxth	r3, r3
 800f514:	fa1f f982 	uxth.w	r9, r2
 800f518:	fa0f f289 	sxth.w	r2, r9
 800f51c:	b219      	sxth	r1, r3
 800f51e:	428a      	cmp	r2, r1
 800f520:	da83      	bge.n	800f42a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800f522:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f526:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f52a:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f52e:	eba3 0309 	sub.w	r3, r3, r9
 800f532:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f536:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f53a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f53e:	69ea      	ldr	r2, [r5, #28]
 800f540:	4631      	mov	r1, r6
 800f542:	e76f      	b.n	800f424 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>

0800f544 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f544:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f546:	aa02      	add	r2, sp, #8
 800f548:	2300      	movs	r3, #0
 800f54a:	f842 3d04 	str.w	r3, [r2, #-4]!
 800f54e:	4604      	mov	r4, r0
 800f550:	3004      	adds	r0, #4
 800f552:	460d      	mov	r5, r1
 800f554:	f7fc fe29 	bl	800c1aa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f558:	9a01      	ldr	r2, [sp, #4]
 800f55a:	b11a      	cbz	r2, 800f564 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800f55c:	4629      	mov	r1, r5
 800f55e:	4620      	mov	r0, r4
 800f560:	f7ff fef4 	bl	800f34c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f564:	b003      	add	sp, #12
 800f566:	bd30      	pop	{r4, r5, pc}

0800f568 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f568:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f56a:	4602      	mov	r2, r0
 800f56c:	4604      	mov	r4, r0
 800f56e:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f572:	460d      	mov	r5, r1
 800f574:	6851      	ldr	r1, [r2, #4]
 800f576:	466b      	mov	r3, sp
 800f578:	c303      	stmia	r3!, {r0, r1}
 800f57a:	4629      	mov	r1, r5
 800f57c:	4668      	mov	r0, sp
 800f57e:	f7fc fd3d 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 800f582:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f586:	4669      	mov	r1, sp
 800f588:	b123      	cbz	r3, 800f594 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800f58a:	4620      	mov	r0, r4
 800f58c:	f7ff ffda 	bl	800f544 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f590:	b003      	add	sp, #12
 800f592:	bd30      	pop	{r4, r5, pc}
 800f594:	1d20      	adds	r0, r4, #4
 800f596:	f7fc fdcf 	bl	800c138 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f59a:	e7f9      	b.n	800f590 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800f59c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f59c:	680a      	ldr	r2, [r1, #0]
 800f59e:	460b      	mov	r3, r1
 800f5a0:	6952      	ldr	r2, [r2, #20]
 800f5a2:	1d01      	adds	r1, r0, #4
 800f5a4:	4618      	mov	r0, r3
 800f5a6:	4710      	bx	r2

0800f5a8 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>:
 800f5a8:	f011 0f40 	tst.w	r1, #64	; 0x40
 800f5ac:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 800f5b0:	4b03      	ldr	r3, [pc, #12]	; (800f5c0 <_ZNK8touchgfx9GlyphNode3topEv.isra.2+0x18>)
 800f5b2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800f5b6:	bf08      	it	eq
 800f5b8:	2300      	moveq	r3, #0
 800f5ba:	4308      	orrs	r0, r1
 800f5bc:	4318      	orrs	r0, r3
 800f5be:	4770      	bx	lr
 800f5c0:	fffffe00 	.word	0xfffffe00

0800f5c4 <_ZN8touchgfx9GlyphNode6setTopEs>:
 800f5c4:	7b43      	ldrb	r3, [r0, #13]
 800f5c6:	7201      	strb	r1, [r0, #8]
 800f5c8:	b289      	uxth	r1, r1
 800f5ca:	f003 039f 	and.w	r3, r3, #159	; 0x9f
 800f5ce:	05ca      	lsls	r2, r1, #23
 800f5d0:	bf48      	it	mi
 800f5d2:	f043 0320 	orrmi.w	r3, r3, #32
 800f5d6:	7343      	strb	r3, [r0, #13]
 800f5d8:	058b      	lsls	r3, r1, #22
 800f5da:	bf42      	ittt	mi
 800f5dc:	7b43      	ldrbmi	r3, [r0, #13]
 800f5de:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 800f5e2:	7343      	strbmi	r3, [r0, #13]
 800f5e4:	4770      	bx	lr

0800f5e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f5e6:	b530      	push	{r4, r5, lr}
 800f5e8:	2500      	movs	r5, #0
 800f5ea:	2401      	movs	r4, #1
 800f5ec:	6843      	ldr	r3, [r0, #4]
 800f5ee:	b913      	cbnz	r3, 800f5f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f5f0:	6803      	ldr	r3, [r0, #0]
 800f5f2:	b1f3      	cbz	r3, 800f632 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800f5f4:	6043      	str	r3, [r0, #4]
 800f5f6:	7c03      	ldrb	r3, [r0, #16]
 800f5f8:	b143      	cbz	r3, 800f60c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f5fa:	68c3      	ldr	r3, [r0, #12]
 800f5fc:	b12b      	cbz	r3, 800f60a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f5fe:	881a      	ldrh	r2, [r3, #0]
 800f600:	b11a      	cbz	r2, 800f60a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f602:	1c9a      	adds	r2, r3, #2
 800f604:	60c2      	str	r2, [r0, #12]
 800f606:	8818      	ldrh	r0, [r3, #0]
 800f608:	bd30      	pop	{r4, r5, pc}
 800f60a:	7405      	strb	r5, [r0, #16]
 800f60c:	6843      	ldr	r3, [r0, #4]
 800f60e:	8819      	ldrh	r1, [r3, #0]
 800f610:	b179      	cbz	r1, 800f632 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800f612:	1c9a      	adds	r2, r3, #2
 800f614:	2902      	cmp	r1, #2
 800f616:	6042      	str	r2, [r0, #4]
 800f618:	d1f5      	bne.n	800f606 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f61a:	6883      	ldr	r3, [r0, #8]
 800f61c:	1d1a      	adds	r2, r3, #4
 800f61e:	6082      	str	r2, [r0, #8]
 800f620:	681b      	ldr	r3, [r3, #0]
 800f622:	60c3      	str	r3, [r0, #12]
 800f624:	2b00      	cmp	r3, #0
 800f626:	d0e1      	beq.n	800f5ec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f628:	881b      	ldrh	r3, [r3, #0]
 800f62a:	2b00      	cmp	r3, #0
 800f62c:	d0de      	beq.n	800f5ec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f62e:	7404      	strb	r4, [r0, #16]
 800f630:	e7dc      	b.n	800f5ec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f632:	2000      	movs	r0, #0
 800f634:	e7e8      	b.n	800f608 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f636 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f636:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f638:	4605      	mov	r5, r0
 800f63a:	4608      	mov	r0, r1
 800f63c:	b1e9      	cbz	r1, 800f67a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f63e:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800f642:	460b      	mov	r3, r1
 800f644:	f101 0708 	add.w	r7, r1, #8
 800f648:	4622      	mov	r2, r4
 800f64a:	6818      	ldr	r0, [r3, #0]
 800f64c:	6859      	ldr	r1, [r3, #4]
 800f64e:	4626      	mov	r6, r4
 800f650:	c603      	stmia	r6!, {r0, r1}
 800f652:	3308      	adds	r3, #8
 800f654:	42bb      	cmp	r3, r7
 800f656:	4634      	mov	r4, r6
 800f658:	d1f7      	bne.n	800f64a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f65a:	6818      	ldr	r0, [r3, #0]
 800f65c:	6030      	str	r0, [r6, #0]
 800f65e:	889b      	ldrh	r3, [r3, #4]
 800f660:	80b3      	strh	r3, [r6, #4]
 800f662:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800f666:	015b      	lsls	r3, r3, #5
 800f668:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800f66c:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800f670:	430b      	orrs	r3, r1
 800f672:	425b      	negs	r3, r3
 800f674:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800f678:	4610      	mov	r0, r2
 800f67a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f67c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f67c:	b538      	push	{r3, r4, r5, lr}
 800f67e:	460c      	mov	r4, r1
 800f680:	6811      	ldr	r1, [r2, #0]
 800f682:	4610      	mov	r0, r2
 800f684:	68cd      	ldr	r5, [r1, #12]
 800f686:	4619      	mov	r1, r3
 800f688:	47a8      	blx	r5
 800f68a:	2800      	cmp	r0, #0
 800f68c:	bf08      	it	eq
 800f68e:	4620      	moveq	r0, r4
 800f690:	bd38      	pop	{r3, r4, r5, pc}

0800f692 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f692:	b570      	push	{r4, r5, r6, lr}
 800f694:	8810      	ldrh	r0, [r2, #0]
 800f696:	4298      	cmp	r0, r3
 800f698:	d817      	bhi.n	800f6ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f69a:	1e48      	subs	r0, r1, #1
 800f69c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f6a0:	4298      	cmp	r0, r3
 800f6a2:	d312      	bcc.n	800f6ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f6a4:	2400      	movs	r4, #0
 800f6a6:	428c      	cmp	r4, r1
 800f6a8:	d20f      	bcs.n	800f6ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f6aa:	1860      	adds	r0, r4, r1
 800f6ac:	1040      	asrs	r0, r0, #1
 800f6ae:	0085      	lsls	r5, r0, #2
 800f6b0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f6b4:	42b3      	cmp	r3, r6
 800f6b6:	d902      	bls.n	800f6be <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f6b8:	3001      	adds	r0, #1
 800f6ba:	b284      	uxth	r4, r0
 800f6bc:	e7f3      	b.n	800f6a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f6be:	d102      	bne.n	800f6c6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x34>
 800f6c0:	442a      	add	r2, r5
 800f6c2:	8850      	ldrh	r0, [r2, #2]
 800f6c4:	bd70      	pop	{r4, r5, r6, pc}
 800f6c6:	b281      	uxth	r1, r0
 800f6c8:	e7ed      	b.n	800f6a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f6ca:	2000      	movs	r0, #0
 800f6cc:	e7fa      	b.n	800f6c4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
	...

0800f6d0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>:
 800f6d0:	b510      	push	{r4, lr}
 800f6d2:	8ac3      	ldrh	r3, [r0, #22]
 800f6d4:	428b      	cmp	r3, r1
 800f6d6:	d805      	bhi.n	800f6e4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x14>
 800f6d8:	4b07      	ldr	r3, [pc, #28]	; (800f6f8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x28>)
 800f6da:	4a08      	ldr	r2, [pc, #32]	; (800f6fc <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x2c>)
 800f6dc:	4808      	ldr	r0, [pc, #32]	; (800f700 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x30>)
 800f6de:	21fd      	movs	r1, #253	; 0xfd
 800f6e0:	f00c f930 	bl	801b944 <__assert_func>
 800f6e4:	8a83      	ldrh	r3, [r0, #20]
 800f6e6:	240a      	movs	r4, #10
 800f6e8:	4419      	add	r1, r3
 800f6ea:	fbb1 f3f4 	udiv	r3, r1, r4
 800f6ee:	fb04 1113 	mls	r1, r4, r3, r1
 800f6f2:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800f6f6:	bd10      	pop	{r4, pc}
 800f6f8:	0802046d 	.word	0x0802046d
 800f6fc:	0802089c 	.word	0x0802089c
 800f700:	0802047b 	.word	0x0802047b

0800f704 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>:
 800f704:	b508      	push	{r3, lr}
 800f706:	8ac3      	ldrh	r3, [r0, #22]
 800f708:	428b      	cmp	r3, r1
 800f70a:	d805      	bhi.n	800f718 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x14>
 800f70c:	4b07      	ldr	r3, [pc, #28]	; (800f72c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x28>)
 800f70e:	4a08      	ldr	r2, [pc, #32]	; (800f730 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x2c>)
 800f710:	4808      	ldr	r0, [pc, #32]	; (800f734 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x30>)
 800f712:	21d3      	movs	r1, #211	; 0xd3
 800f714:	f00c f916 	bl	801b944 <__assert_func>
 800f718:	8a83      	ldrh	r3, [r0, #20]
 800f71a:	220a      	movs	r2, #10
 800f71c:	4419      	add	r1, r3
 800f71e:	fbb1 f3f2 	udiv	r3, r1, r2
 800f722:	fb02 1113 	mls	r1, r2, r3, r1
 800f726:	f830 0011 	ldrh.w	r0, [r0, r1, lsl #1]
 800f72a:	bd08      	pop	{r3, pc}
 800f72c:	0802046d 	.word	0x0802046d
 800f730:	080205ec 	.word	0x080205ec
 800f734:	0802047b 	.word	0x0802047b

0800f738 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f738:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f73c:	4604      	mov	r4, r0
 800f73e:	4688      	mov	r8, r1
 800f740:	4615      	mov	r5, r2
 800f742:	b94a      	cbnz	r2, 800f758 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20>
 800f744:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800f748:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800f74c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800f750:	4691      	mov	r9, r2
 800f752:	4648      	mov	r0, r9
 800f754:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f758:	f100 0640 	add.w	r6, r0, #64	; 0x40
 800f75c:	8892      	ldrh	r2, [r2, #4]
 800f75e:	462b      	mov	r3, r5
 800f760:	f105 0c08 	add.w	ip, r5, #8
 800f764:	46b3      	mov	fp, r6
 800f766:	6818      	ldr	r0, [r3, #0]
 800f768:	6859      	ldr	r1, [r3, #4]
 800f76a:	4637      	mov	r7, r6
 800f76c:	c703      	stmia	r7!, {r0, r1}
 800f76e:	3308      	adds	r3, #8
 800f770:	4563      	cmp	r3, ip
 800f772:	463e      	mov	r6, r7
 800f774:	d1f7      	bne.n	800f766 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x2e>
 800f776:	6818      	ldr	r0, [r3, #0]
 800f778:	6038      	str	r0, [r7, #0]
 800f77a:	889b      	ldrh	r3, [r3, #4]
 800f77c:	80bb      	strh	r3, [r7, #4]
 800f77e:	f894 704d 	ldrb.w	r7, [r4, #77]	; 0x4d
 800f782:	f46f 6363 	mvn.w	r3, #3632	; 0xe30
 800f786:	ea4f 1a07 	mov.w	sl, r7, lsl #4
 800f78a:	f40a 7180 	and.w	r1, sl, #256	; 0x100
 800f78e:	18d3      	adds	r3, r2, r3
 800f790:	f894 a047 	ldrb.w	sl, [r4, #71]	; 0x47
 800f794:	b298      	uxth	r0, r3
 800f796:	ea4a 0a01 	orr.w	sl, sl, r1
 800f79a:	281d      	cmp	r0, #29
 800f79c:	fa1f f68a 	uxth.w	r6, sl
 800f7a0:	46d9      	mov	r9, fp
 800f7a2:	d842      	bhi.n	800f82a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf2>
 800f7a4:	2301      	movs	r3, #1
 800f7a6:	4950      	ldr	r1, [pc, #320]	; (800f8e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b0>)
 800f7a8:	4083      	lsls	r3, r0
 800f7aa:	420b      	tst	r3, r1
 800f7ac:	ea4f 0aea 	mov.w	sl, sl, asr #3
 800f7b0:	d114      	bne.n	800f7dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800f7b2:	f413 7f60 	tst.w	r3, #896	; 0x380
 800f7b6:	d03c      	beq.n	800f832 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xfa>
 800f7b8:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800f7bc:	fa1f fa8a 	uxth.w	sl, sl
 800f7c0:	eba1 010a 	sub.w	r1, r1, sl
 800f7c4:	4658      	mov	r0, fp
 800f7c6:	b209      	sxth	r1, r1
 800f7c8:	f7ff fefc 	bl	800f5c4 <_ZN8touchgfx9GlyphNode6setTopEs>
 800f7cc:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 800f7d0:	1b86      	subs	r6, r0, r6
 800f7d2:	eba6 0a0a 	sub.w	sl, r6, sl
 800f7d6:	f8a4 a050 	strh.w	sl, [r4, #80]	; 0x50
 800f7da:	e7ba      	b.n	800f752 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f7dc:	2100      	movs	r1, #0
 800f7de:	f104 001a 	add.w	r0, r4, #26
 800f7e2:	f7ff ff8f 	bl	800f704 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f7e6:	f640 6333 	movw	r3, #3635	; 0xe33
 800f7ea:	4298      	cmp	r0, r3
 800f7ec:	4601      	mov	r1, r0
 800f7ee:	d10a      	bne.n	800f806 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xce>
 800f7f0:	f8d8 3000 	ldr.w	r3, [r8]
 800f7f4:	4640      	mov	r0, r8
 800f7f6:	68db      	ldr	r3, [r3, #12]
 800f7f8:	4798      	blx	r3
 800f7fa:	7b41      	ldrb	r1, [r0, #13]
 800f7fc:	7a00      	ldrb	r0, [r0, #8]
 800f7fe:	f7ff fed3 	bl	800f5a8 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f802:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800f806:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800f80a:	4431      	add	r1, r6
 800f80c:	4451      	add	r1, sl
 800f80e:	b209      	sxth	r1, r1
 800f810:	f8a4 104e 	strh.w	r1, [r4, #78]	; 0x4e
 800f814:	4658      	mov	r0, fp
 800f816:	f7ff fed5 	bl	800f5c4 <_ZN8touchgfx9GlyphNode6setTopEs>
 800f81a:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800f81e:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800f822:	1a9b      	subs	r3, r3, r2
 800f824:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800f828:	e793      	b.n	800f752 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f82a:	f640 631b 	movw	r3, #3611	; 0xe1b
 800f82e:	429a      	cmp	r2, r3
 800f830:	d005      	beq.n	800f83e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x106>
 800f832:	f022 0302 	bic.w	r3, r2, #2
 800f836:	f640 611d 	movw	r1, #3613	; 0xe1d
 800f83a:	428b      	cmp	r3, r1
 800f83c:	d119      	bne.n	800f872 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 800f83e:	1e53      	subs	r3, r2, #1
 800f840:	b29b      	uxth	r3, r3
 800f842:	4642      	mov	r2, r8
 800f844:	4629      	mov	r1, r5
 800f846:	4620      	mov	r0, r4
 800f848:	f7ff ff18 	bl	800f67c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f84c:	7b41      	ldrb	r1, [r0, #13]
 800f84e:	7a00      	ldrb	r0, [r0, #8]
 800f850:	f7ff feaa 	bl	800f5a8 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f854:	f994 304d 	ldrsb.w	r3, [r4, #77]	; 0x4d
 800f858:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800f85c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f860:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800f864:	4313      	orrs	r3, r2
 800f866:	115a      	asrs	r2, r3, #5
 800f868:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f86c:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f870:	e02d      	b.n	800f8ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x196>
 800f872:	4639      	mov	r1, r7
 800f874:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800f878:	f7ff fe96 	bl	800f5a8 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f87c:	f640 6109 	movw	r1, #3593	; 0xe09
 800f880:	f022 0310 	bic.w	r3, r2, #16
 800f884:	428b      	cmp	r3, r1
 800f886:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800f88a:	d003      	beq.n	800f894 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15c>
 800f88c:	f640 6313 	movw	r3, #3603	; 0xe13
 800f890:	429a      	cmp	r2, r3
 800f892:	d126      	bne.n	800f8e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1aa>
 800f894:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800f898:	b27f      	sxtb	r7, r7
 800f89a:	f407 7780 	and.w	r7, r7, #256	; 0x100
 800f89e:	431f      	orrs	r7, r3
 800f8a0:	f640 6313 	movw	r3, #3603	; 0xe13
 800f8a4:	429a      	cmp	r2, r3
 800f8a6:	bf1a      	itte	ne
 800f8a8:	f102 33ff 	addne.w	r3, r2, #4294967295
 800f8ac:	b29b      	uxthne	r3, r3
 800f8ae:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800f8b2:	4642      	mov	r2, r8
 800f8b4:	4629      	mov	r1, r5
 800f8b6:	4620      	mov	r0, r4
 800f8b8:	f7ff fee0 	bl	800f67c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f8bc:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800f8c0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f8c4:	7a83      	ldrb	r3, [r0, #10]
 800f8c6:	4313      	orrs	r3, r2
 800f8c8:	1aff      	subs	r7, r7, r3
 800f8ca:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
 800f8ce:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800f8d2:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800f8d6:	f7ff fe67 	bl	800f5a8 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f8da:	1b80      	subs	r0, r0, r6
 800f8dc:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 800f8e0:	e737      	b.n	800f752 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f8e2:	2300      	movs	r3, #0
 800f8e4:	e7c2      	b.n	800f86c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x134>
 800f8e6:	bf00      	nop
 800f8e8:	3fc00079 	.word	0x3fc00079

0800f8ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f8ec:	3a01      	subs	r2, #1
 800f8ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f8f2:	b292      	uxth	r2, r2
 800f8f4:	460c      	mov	r4, r1
 800f8f6:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800f8fa:	42b2      	cmp	r2, r6
 800f8fc:	d018      	beq.n	800f930 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x44>
 800f8fe:	8b01      	ldrh	r1, [r0, #24]
 800f900:	f834 5b02 	ldrh.w	r5, [r4], #2
 800f904:	4291      	cmp	r1, r2
 800f906:	d805      	bhi.n	800f914 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x28>
 800f908:	4b14      	ldr	r3, [pc, #80]	; (800f95c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x70>)
 800f90a:	4a15      	ldr	r2, [pc, #84]	; (800f960 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x74>)
 800f90c:	4815      	ldr	r0, [pc, #84]	; (800f964 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x78>)
 800f90e:	21d3      	movs	r1, #211	; 0xd3
 800f910:	f00c f818 	bl	801b944 <__assert_func>
 800f914:	8ac1      	ldrh	r1, [r0, #22]
 800f916:	4411      	add	r1, r2
 800f918:	f001 0101 	and.w	r1, r1, #1
 800f91c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f920:	3a01      	subs	r2, #1
 800f922:	8a49      	ldrh	r1, [r1, #18]
 800f924:	428d      	cmp	r5, r1
 800f926:	b292      	uxth	r2, r2
 800f928:	d0e7      	beq.n	800f8fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xe>
 800f92a:	2000      	movs	r0, #0
 800f92c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f930:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800f934:	2600      	movs	r6, #0
 800f936:	441f      	add	r7, r3
 800f938:	f100 051a 	add.w	r5, r0, #26
 800f93c:	b2b1      	uxth	r1, r6
 800f93e:	42b9      	cmp	r1, r7
 800f940:	da09      	bge.n	800f956 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x6a>
 800f942:	4628      	mov	r0, r5
 800f944:	f7ff fede 	bl	800f704 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f948:	f834 8016 	ldrh.w	r8, [r4, r6, lsl #1]
 800f94c:	4540      	cmp	r0, r8
 800f94e:	f106 0601 	add.w	r6, r6, #1
 800f952:	d0f3      	beq.n	800f93c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x50>
 800f954:	e7e9      	b.n	800f92a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800f956:	2001      	movs	r0, #1
 800f958:	e7e8      	b.n	800f92c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800f95a:	bf00      	nop
 800f95c:	0802046d 	.word	0x0802046d
 800f960:	080209fc 	.word	0x080209fc
 800f964:	0802047b 	.word	0x0802047b

0800f968 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>:
 800f968:	b538      	push	{r3, r4, r5, lr}
 800f96a:	8ac3      	ldrh	r3, [r0, #22]
 800f96c:	428b      	cmp	r3, r1
 800f96e:	d205      	bcs.n	800f97c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x14>
 800f970:	4b08      	ldr	r3, [pc, #32]	; (800f994 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x2c>)
 800f972:	4a09      	ldr	r2, [pc, #36]	; (800f998 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x30>)
 800f974:	4809      	ldr	r0, [pc, #36]	; (800f99c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x34>)
 800f976:	21d8      	movs	r1, #216	; 0xd8
 800f978:	f00b ffe4 	bl	801b944 <__assert_func>
 800f97c:	8a82      	ldrh	r2, [r0, #20]
 800f97e:	250a      	movs	r5, #10
 800f980:	440a      	add	r2, r1
 800f982:	1a5b      	subs	r3, r3, r1
 800f984:	fbb2 f4f5 	udiv	r4, r2, r5
 800f988:	fb05 2214 	mls	r2, r5, r4, r2
 800f98c:	8282      	strh	r2, [r0, #20]
 800f98e:	82c3      	strh	r3, [r0, #22]
 800f990:	bd38      	pop	{r3, r4, r5, pc}
 800f992:	bf00      	nop
 800f994:	08020461 	.word	0x08020461
 800f998:	08020818 	.word	0x08020818
 800f99c:	0802047b 	.word	0x0802047b

0800f9a0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>:
 800f9a0:	b538      	push	{r3, r4, r5, lr}
 800f9a2:	8ac3      	ldrh	r3, [r0, #22]
 800f9a4:	2b09      	cmp	r3, #9
 800f9a6:	d905      	bls.n	800f9b4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x14>
 800f9a8:	4b08      	ldr	r3, [pc, #32]	; (800f9cc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x2c>)
 800f9aa:	4a09      	ldr	r2, [pc, #36]	; (800f9d0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x30>)
 800f9ac:	4809      	ldr	r0, [pc, #36]	; (800f9d4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x34>)
 800f9ae:	21f7      	movs	r1, #247	; 0xf7
 800f9b0:	f00b ffc8 	bl	801b944 <__assert_func>
 800f9b4:	8a82      	ldrh	r2, [r0, #20]
 800f9b6:	250a      	movs	r5, #10
 800f9b8:	441a      	add	r2, r3
 800f9ba:	fbb2 f4f5 	udiv	r4, r2, r5
 800f9be:	fb05 2214 	mls	r2, r5, r4, r2
 800f9c2:	3301      	adds	r3, #1
 800f9c4:	f820 1012 	strh.w	r1, [r0, r2, lsl #1]
 800f9c8:	82c3      	strh	r3, [r0, #22]
 800f9ca:	bd38      	pop	{r3, r4, r5, pc}
 800f9cc:	08020455 	.word	0x08020455
 800f9d0:	08020769 	.word	0x08020769
 800f9d4:	0802047b 	.word	0x0802047b

0800f9d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f9d8:	b538      	push	{r3, r4, r5, lr}
 800f9da:	4604      	mov	r4, r0
 800f9dc:	f100 051a 	add.w	r5, r0, #26
 800f9e0:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f9e2:	2b0a      	cmp	r3, #10
 800f9e4:	d01c      	beq.n	800fa20 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800f9e6:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f9e8:	b962      	cbnz	r2, 800fa04 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800f9ea:	f104 051a 	add.w	r5, r4, #26
 800f9ee:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f9f0:	2b0a      	cmp	r3, #10
 800f9f2:	d015      	beq.n	800fa20 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800f9f4:	4620      	mov	r0, r4
 800f9f6:	f7ff fdf6 	bl	800f5e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f9fa:	4601      	mov	r1, r0
 800f9fc:	4628      	mov	r0, r5
 800f9fe:	f7ff ffcf 	bl	800f9a0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800fa02:	e7f4      	b.n	800f9ee <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x16>
 800fa04:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800fa06:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800fa0a:	3301      	adds	r3, #1
 800fa0c:	f003 0301 	and.w	r3, r3, #1
 800fa10:	3a01      	subs	r2, #1
 800fa12:	8e49      	ldrh	r1, [r1, #50]	; 0x32
 800fa14:	86e3      	strh	r3, [r4, #54]	; 0x36
 800fa16:	8722      	strh	r2, [r4, #56]	; 0x38
 800fa18:	4628      	mov	r0, r5
 800fa1a:	f7ff ffc1 	bl	800f9a0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800fa1e:	e7df      	b.n	800f9e0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8>
 800fa20:	bd38      	pop	{r3, r4, r5, pc}
	...

0800fa24 <_ZN8touchgfx12TextProvider18initializeInternalEv>:
 800fa24:	2300      	movs	r3, #0
 800fa26:	b510      	push	{r4, lr}
 800fa28:	6043      	str	r3, [r0, #4]
 800fa2a:	60c3      	str	r3, [r0, #12]
 800fa2c:	7403      	strb	r3, [r0, #16]
 800fa2e:	8603      	strh	r3, [r0, #48]	; 0x30
 800fa30:	8303      	strh	r3, [r0, #24]
 800fa32:	8703      	strh	r3, [r0, #56]	; 0x38
 800fa34:	4604      	mov	r4, r0
 800fa36:	f7ff ffcf 	bl	800f9d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800fa3a:	4a0a      	ldr	r2, [pc, #40]	; (800fa64 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x40>)
 800fa3c:	6813      	ldr	r3, [r2, #0]
 800fa3e:	4611      	mov	r1, r2
 800fa40:	b913      	cbnz	r3, 800fa48 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x24>
 800fa42:	6852      	ldr	r2, [r2, #4]
 800fa44:	07d0      	lsls	r0, r2, #31
 800fa46:	d50b      	bpl.n	800fa60 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x3c>
 800fa48:	6849      	ldr	r1, [r1, #4]
 800fa4a:	104a      	asrs	r2, r1, #1
 800fa4c:	07c9      	lsls	r1, r1, #31
 800fa4e:	eb04 0002 	add.w	r0, r4, r2
 800fa52:	bf48      	it	mi
 800fa54:	58a2      	ldrmi	r2, [r4, r2]
 800fa56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fa5a:	bf48      	it	mi
 800fa5c:	58d3      	ldrmi	r3, [r2, r3]
 800fa5e:	4718      	bx	r3
 800fa60:	bd10      	pop	{r4, pc}
 800fa62:	bf00      	nop
 800fa64:	20000694 	.word	0x20000694

0800fa68 <_ZN8touchgfx12TextProviderC1Ev>:
 800fa68:	b510      	push	{r4, lr}
 800fa6a:	2300      	movs	r3, #0
 800fa6c:	2201      	movs	r2, #1
 800fa6e:	4604      	mov	r4, r0
 800fa70:	e9c0 3300 	strd	r3, r3, [r0]
 800fa74:	60c3      	str	r3, [r0, #12]
 800fa76:	7403      	strb	r3, [r0, #16]
 800fa78:	82c3      	strh	r3, [r0, #22]
 800fa7a:	8303      	strh	r3, [r0, #24]
 800fa7c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800fa7e:	8603      	strh	r3, [r0, #48]	; 0x30
 800fa80:	86c3      	strh	r3, [r0, #54]	; 0x36
 800fa82:	8703      	strh	r3, [r0, #56]	; 0x38
 800fa84:	63c3      	str	r3, [r0, #60]	; 0x3c
 800fa86:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800fa8a:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800fa8e:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800fa92:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800fa96:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800fa9a:	f7ff ffc3 	bl	800fa24 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800fa9e:	4620      	mov	r0, r4
 800faa0:	bd10      	pop	{r4, pc}

0800faa2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800faa2:	b410      	push	{r4}
 800faa4:	6082      	str	r2, [r0, #8]
 800faa6:	6001      	str	r1, [r0, #0]
 800faa8:	63c3      	str	r3, [r0, #60]	; 0x3c
 800faaa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800faae:	f7ff bfb9 	b.w	800fa24 <_ZN8touchgfx12TextProvider18initializeInternalEv>
	...

0800fab4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>:
 800fab4:	b508      	push	{r3, lr}
 800fab6:	88c2      	ldrh	r2, [r0, #6]
 800fab8:	440a      	add	r2, r1
 800faba:	2a02      	cmp	r2, #2
 800fabc:	dd05      	ble.n	800faca <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x16>
 800fabe:	4b06      	ldr	r3, [pc, #24]	; (800fad8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x24>)
 800fac0:	4a06      	ldr	r2, [pc, #24]	; (800fadc <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x28>)
 800fac2:	4807      	ldr	r0, [pc, #28]	; (800fae0 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x2c>)
 800fac4:	21ec      	movs	r1, #236	; 0xec
 800fac6:	f00b ff3d 	bl	801b944 <__assert_func>
 800faca:	8883      	ldrh	r3, [r0, #4]
 800facc:	80c2      	strh	r2, [r0, #6]
 800face:	1a59      	subs	r1, r3, r1
 800fad0:	f001 0101 	and.w	r1, r1, #1
 800fad4:	8081      	strh	r1, [r0, #4]
 800fad6:	bd08      	pop	{r3, pc}
 800fad8:	080204a7 	.word	0x080204a7
 800fadc:	08020975 	.word	0x08020975
 800fae0:	0802047b 	.word	0x0802047b

0800fae4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>:
 800fae4:	b508      	push	{r3, lr}
 800fae6:	88c3      	ldrh	r3, [r0, #6]
 800fae8:	428b      	cmp	r3, r1
 800faea:	d805      	bhi.n	800faf8 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x14>
 800faec:	4b06      	ldr	r3, [pc, #24]	; (800fb08 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x24>)
 800faee:	4a07      	ldr	r2, [pc, #28]	; (800fb0c <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x28>)
 800faf0:	4807      	ldr	r0, [pc, #28]	; (800fb10 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x2c>)
 800faf2:	21fd      	movs	r1, #253	; 0xfd
 800faf4:	f00b ff26 	bl	801b944 <__assert_func>
 800faf8:	8883      	ldrh	r3, [r0, #4]
 800fafa:	4419      	add	r1, r3
 800fafc:	f001 0101 	and.w	r1, r1, #1
 800fb00:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800fb04:	bd08      	pop	{r3, pc}
 800fb06:	bf00      	nop
 800fb08:	0802046d 	.word	0x0802046d
 800fb0c:	08020acd 	.word	0x08020acd
 800fb10:	0802047b 	.word	0x0802047b

0800fb14 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800fb14:	b570      	push	{r4, r5, r6, lr}
 800fb16:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800fb18:	4604      	mov	r4, r0
 800fb1a:	b92a      	cbnz	r2, 800fb28 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800fb1c:	4b12      	ldr	r3, [pc, #72]	; (800fb68 <_ZN8touchgfx12TextProvider11getNextCharEv+0x54>)
 800fb1e:	4a13      	ldr	r2, [pc, #76]	; (800fb6c <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800fb20:	4813      	ldr	r0, [pc, #76]	; (800fb70 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800fb22:	21de      	movs	r1, #222	; 0xde
 800fb24:	f00b ff0e 	bl	801b944 <__assert_func>
 800fb28:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800fb2a:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800fb2e:	260a      	movs	r6, #10
 800fb30:	3301      	adds	r3, #1
 800fb32:	8b4d      	ldrh	r5, [r1, #26]
 800fb34:	fbb3 f1f6 	udiv	r1, r3, r6
 800fb38:	3a01      	subs	r2, #1
 800fb3a:	fb06 3311 	mls	r3, r6, r1, r3
 800fb3e:	8602      	strh	r2, [r0, #48]	; 0x30
 800fb40:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800fb42:	f7ff ff49 	bl	800f9d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800fb46:	8b23      	ldrh	r3, [r4, #24]
 800fb48:	2b02      	cmp	r3, #2
 800fb4a:	bf04      	itt	eq
 800fb4c:	2301      	moveq	r3, #1
 800fb4e:	8323      	strheq	r3, [r4, #24]
 800fb50:	3412      	adds	r4, #18
 800fb52:	4620      	mov	r0, r4
 800fb54:	2101      	movs	r1, #1
 800fb56:	f7ff ffad 	bl	800fab4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800fb5a:	4620      	mov	r0, r4
 800fb5c:	462a      	mov	r2, r5
 800fb5e:	2100      	movs	r1, #0
 800fb60:	f7ff ffc0 	bl	800fae4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800fb64:	4628      	mov	r0, r5
 800fb66:	bd70      	pop	{r4, r5, r6, pc}
 800fb68:	0802044c 	.word	0x0802044c
 800fb6c:	080206be 	.word	0x080206be
 800fb70:	0802047b 	.word	0x0802047b

0800fb74 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800fb74:	428a      	cmp	r2, r1
 800fb76:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb7a:	4604      	mov	r4, r0
 800fb7c:	460e      	mov	r6, r1
 800fb7e:	4615      	mov	r5, r2
 800fb80:	469a      	mov	sl, r3
 800fb82:	d92b      	bls.n	800fbdc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x68>
 800fb84:	1a57      	subs	r7, r2, r1
 800fb86:	b2bf      	uxth	r7, r7
 800fb88:	f04f 0800 	mov.w	r8, #0
 800fb8c:	f100 0932 	add.w	r9, r0, #50	; 0x32
 800fb90:	f04f 0b0a 	mov.w	fp, #10
 800fb94:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fb96:	b92b      	cbnz	r3, 800fba4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x30>
 800fb98:	4b24      	ldr	r3, [pc, #144]	; (800fc2c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xb8>)
 800fb9a:	4a25      	ldr	r2, [pc, #148]	; (800fc30 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xbc>)
 800fb9c:	21e6      	movs	r1, #230	; 0xe6
 800fb9e:	4825      	ldr	r0, [pc, #148]	; (800fc34 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc0>)
 800fba0:	f00b fed0 	bl	801b944 <__assert_func>
 800fba4:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800fba6:	3b01      	subs	r3, #1
 800fba8:	b29b      	uxth	r3, r3
 800fbaa:	441a      	add	r2, r3
 800fbac:	8623      	strh	r3, [r4, #48]	; 0x30
 800fbae:	fbb2 f3fb 	udiv	r3, r2, fp
 800fbb2:	fb0b 2313 	mls	r3, fp, r3, r2
 800fbb6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fbba:	2101      	movs	r1, #1
 800fbbc:	8b5a      	ldrh	r2, [r3, #26]
 800fbbe:	9201      	str	r2, [sp, #4]
 800fbc0:	4648      	mov	r0, r9
 800fbc2:	f7ff ff77 	bl	800fab4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800fbc6:	f108 0801 	add.w	r8, r8, #1
 800fbca:	9a01      	ldr	r2, [sp, #4]
 800fbcc:	2100      	movs	r1, #0
 800fbce:	4648      	mov	r0, r9
 800fbd0:	f7ff ff88 	bl	800fae4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800fbd4:	fa1f f388 	uxth.w	r3, r8
 800fbd8:	429f      	cmp	r7, r3
 800fbda:	d8db      	bhi.n	800fb94 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x20>
 800fbdc:	f104 071a 	add.w	r7, r4, #26
 800fbe0:	4631      	mov	r1, r6
 800fbe2:	4638      	mov	r0, r7
 800fbe4:	f7ff fec0 	bl	800f968 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>
 800fbe8:	260a      	movs	r6, #10
 800fbea:	b1c5      	cbz	r5, 800fc1e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 800fbec:	3d01      	subs	r5, #1
 800fbee:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fbf0:	b2ad      	uxth	r5, r5
 800fbf2:	2b09      	cmp	r3, #9
 800fbf4:	f83a 2015 	ldrh.w	r2, [sl, r5, lsl #1]
 800fbf8:	d903      	bls.n	800fc02 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8e>
 800fbfa:	4b0f      	ldr	r3, [pc, #60]	; (800fc38 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc4>)
 800fbfc:	4a0f      	ldr	r2, [pc, #60]	; (800fc3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc8>)
 800fbfe:	21ec      	movs	r1, #236	; 0xec
 800fc00:	e7cd      	b.n	800fb9e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2a>
 800fc02:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800fc04:	3109      	adds	r1, #9
 800fc06:	3301      	adds	r3, #1
 800fc08:	fbb1 f0f6 	udiv	r0, r1, r6
 800fc0c:	fb06 1110 	mls	r1, r6, r0, r1
 800fc10:	85e1      	strh	r1, [r4, #46]	; 0x2e
 800fc12:	8623      	strh	r3, [r4, #48]	; 0x30
 800fc14:	2100      	movs	r1, #0
 800fc16:	4638      	mov	r0, r7
 800fc18:	f7ff fd5a 	bl	800f6d0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800fc1c:	e7e5      	b.n	800fbea <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x76>
 800fc1e:	4620      	mov	r0, r4
 800fc20:	b003      	add	sp, #12
 800fc22:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc26:	f7ff bed7 	b.w	800f9d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800fc2a:	bf00      	nop
 800fc2c:	0802044c 	.word	0x0802044c
 800fc30:	08020542 	.word	0x08020542
 800fc34:	0802047b 	.word	0x0802047b
 800fc38:	080204a7 	.word	0x080204a7
 800fc3c:	080204ba 	.word	0x080204ba

0800fc40 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800fc40:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc44:	4605      	mov	r5, r0
 800fc46:	4616      	mov	r6, r2
 800fc48:	1c8c      	adds	r4, r1, #2
 800fc4a:	8809      	ldrh	r1, [r1, #0]
 800fc4c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800fc50:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800fc54:	42b3      	cmp	r3, r6
 800fc56:	d124      	bne.n	800fca2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800fc58:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800fc5c:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800fc60:	f001 070f 	and.w	r7, r1, #15
 800fc64:	f8cd 8000 	str.w	r8, [sp]
 800fc68:	464b      	mov	r3, r9
 800fc6a:	4652      	mov	r2, sl
 800fc6c:	4621      	mov	r1, r4
 800fc6e:	4628      	mov	r0, r5
 800fc70:	f7ff fe3c 	bl	800f8ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800fc74:	4683      	mov	fp, r0
 800fc76:	b168      	cbz	r0, 800fc94 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800fc78:	eb0a 0109 	add.w	r1, sl, r9
 800fc7c:	4441      	add	r1, r8
 800fc7e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800fc82:	463a      	mov	r2, r7
 800fc84:	4649      	mov	r1, r9
 800fc86:	4628      	mov	r0, r5
 800fc88:	f7ff ff74 	bl	800fb74 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800fc8c:	4658      	mov	r0, fp
 800fc8e:	b003      	add	sp, #12
 800fc90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc94:	eb07 010a 	add.w	r1, r7, sl
 800fc98:	4449      	add	r1, r9
 800fc9a:	4441      	add	r1, r8
 800fc9c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800fca0:	e7d2      	b.n	800fc48 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800fca2:	f04f 0b00 	mov.w	fp, #0
 800fca6:	e7f1      	b.n	800fc8c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800fca8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800fca8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fcac:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800fcae:	886f      	ldrh	r7, [r5, #2]
 800fcb0:	4604      	mov	r4, r0
 800fcb2:	087f      	lsrs	r7, r7, #1
 800fcb4:	260b      	movs	r6, #11
 800fcb6:	f100 091a 	add.w	r9, r0, #26
 800fcba:	3e01      	subs	r6, #1
 800fcbc:	d013      	beq.n	800fce6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800fcbe:	2100      	movs	r1, #0
 800fcc0:	4648      	mov	r0, r9
 800fcc2:	f7ff fd1f 	bl	800f704 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800fcc6:	462a      	mov	r2, r5
 800fcc8:	4680      	mov	r8, r0
 800fcca:	4603      	mov	r3, r0
 800fccc:	4639      	mov	r1, r7
 800fcce:	4620      	mov	r0, r4
 800fcd0:	f7ff fcdf 	bl	800f692 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800fcd4:	b138      	cbz	r0, 800fce6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800fcd6:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800fcda:	4642      	mov	r2, r8
 800fcdc:	4620      	mov	r0, r4
 800fcde:	f7ff ffaf 	bl	800fc40 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800fce2:	2800      	cmp	r0, #0
 800fce4:	d1e9      	bne.n	800fcba <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x12>
 800fce6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>:
 800fcec:	b570      	push	{r4, r5, r6, lr}
 800fcee:	4b1e      	ldr	r3, [pc, #120]	; (800fd68 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800fcf0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fcf4:	4604      	mov	r4, r0
 800fcf6:	f003 0501 	and.w	r5, r3, #1
 800fcfa:	b902      	cbnz	r2, 800fcfe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
 800fcfc:	b165      	cbz	r5, 800fd18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2c>
 800fcfe:	105b      	asrs	r3, r3, #1
 800fd00:	f104 061a 	add.w	r6, r4, #26
 800fd04:	18e0      	adds	r0, r4, r3
 800fd06:	b10d      	cbz	r5, 800fd0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
 800fd08:	58e3      	ldr	r3, [r4, r3]
 800fd0a:	589a      	ldr	r2, [r3, r2]
 800fd0c:	4790      	blx	r2
 800fd0e:	2100      	movs	r1, #0
 800fd10:	4602      	mov	r2, r0
 800fd12:	4630      	mov	r0, r6
 800fd14:	f7ff fcdc 	bl	800f6d0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800fd18:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fd1a:	b303      	cbz	r3, 800fd5e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800fd1c:	f104 051a 	add.w	r5, r4, #26
 800fd20:	2100      	movs	r1, #0
 800fd22:	4628      	mov	r0, r5
 800fd24:	f7ff fcee 	bl	800f704 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800fd28:	b1c8      	cbz	r0, 800fd5e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800fd2a:	4620      	mov	r0, r4
 800fd2c:	f7ff ffbc 	bl	800fca8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 800fd30:	2101      	movs	r1, #1
 800fd32:	4628      	mov	r0, r5
 800fd34:	f7ff fce6 	bl	800f704 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800fd38:	f640 133f 	movw	r3, #2367	; 0x93f
 800fd3c:	4298      	cmp	r0, r3
 800fd3e:	4606      	mov	r6, r0
 800fd40:	d10d      	bne.n	800fd5e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800fd42:	2100      	movs	r1, #0
 800fd44:	4628      	mov	r0, r5
 800fd46:	f7ff fcdd 	bl	800f704 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800fd4a:	2101      	movs	r1, #1
 800fd4c:	4602      	mov	r2, r0
 800fd4e:	4628      	mov	r0, r5
 800fd50:	f7ff fcbe 	bl	800f6d0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800fd54:	4632      	mov	r2, r6
 800fd56:	2100      	movs	r1, #0
 800fd58:	4628      	mov	r0, r5
 800fd5a:	f7ff fcb9 	bl	800f6d0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800fd5e:	4620      	mov	r0, r4
 800fd60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fd64:	f7ff bed6 	b.w	800fb14 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fd68:	2000069c 	.word	0x2000069c

0800fd6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800fd6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fd6e:	4617      	mov	r7, r2
 800fd70:	461e      	mov	r6, r3
 800fd72:	4605      	mov	r5, r0
 800fd74:	f7ff ffba 	bl	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fd78:	683b      	ldr	r3, [r7, #0]
 800fd7a:	4604      	mov	r4, r0
 800fd7c:	68db      	ldr	r3, [r3, #12]
 800fd7e:	4601      	mov	r1, r0
 800fd80:	4638      	mov	r0, r7
 800fd82:	4798      	blx	r3
 800fd84:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800fd88:	b29b      	uxth	r3, r3
 800fd8a:	2b7f      	cmp	r3, #127	; 0x7f
 800fd8c:	4602      	mov	r2, r0
 800fd8e:	6030      	str	r0, [r6, #0]
 800fd90:	d813      	bhi.n	800fdba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x4e>
 800fd92:	4639      	mov	r1, r7
 800fd94:	4628      	mov	r0, r5
 800fd96:	f7ff fccf 	bl	800f738 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fd9a:	6030      	str	r0, [r6, #0]
 800fd9c:	6833      	ldr	r3, [r6, #0]
 800fd9e:	b143      	cbz	r3, 800fdb2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800fda0:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800fda4:	7a9b      	ldrb	r3, [r3, #10]
 800fda6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fdaa:	4313      	orrs	r3, r2
 800fdac:	bf0c      	ite	eq
 800fdae:	2301      	moveq	r3, #1
 800fdb0:	2300      	movne	r3, #0
 800fdb2:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800fdb6:	4620      	mov	r0, r4
 800fdb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fdba:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800fdbe:	2b00      	cmp	r3, #0
 800fdc0:	d0ec      	beq.n	800fd9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800fdc2:	f640 1302 	movw	r3, #2306	; 0x902
 800fdc6:	429c      	cmp	r4, r3
 800fdc8:	d1e8      	bne.n	800fd9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800fdca:	4601      	mov	r1, r0
 800fdcc:	4628      	mov	r0, r5
 800fdce:	f7ff fc32 	bl	800f636 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800fdd2:	e7e2      	b.n	800fd9a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>

0800fdd4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800fdd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fdd8:	4617      	mov	r7, r2
 800fdda:	461e      	mov	r6, r3
 800fddc:	4605      	mov	r5, r0
 800fdde:	f7ff ff85 	bl	800fcec <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fde2:	683b      	ldr	r3, [r7, #0]
 800fde4:	4604      	mov	r4, r0
 800fde6:	f8d3 8008 	ldr.w	r8, [r3, #8]
 800fdea:	4601      	mov	r1, r0
 800fdec:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800fdf0:	4638      	mov	r0, r7
 800fdf2:	47c0      	blx	r8
 800fdf4:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800fdf8:	b29b      	uxth	r3, r3
 800fdfa:	2b7f      	cmp	r3, #127	; 0x7f
 800fdfc:	4602      	mov	r2, r0
 800fdfe:	6030      	str	r0, [r6, #0]
 800fe00:	d814      	bhi.n	800fe2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x58>
 800fe02:	4639      	mov	r1, r7
 800fe04:	4628      	mov	r0, r5
 800fe06:	f7ff fc97 	bl	800f738 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fe0a:	6030      	str	r0, [r6, #0]
 800fe0c:	6833      	ldr	r3, [r6, #0]
 800fe0e:	b143      	cbz	r3, 800fe22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800fe10:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800fe14:	7a9b      	ldrb	r3, [r3, #10]
 800fe16:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fe1a:	4313      	orrs	r3, r2
 800fe1c:	bf0c      	ite	eq
 800fe1e:	2301      	moveq	r3, #1
 800fe20:	2300      	movne	r3, #0
 800fe22:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800fe26:	4620      	mov	r0, r4
 800fe28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fe2c:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800fe30:	2b00      	cmp	r3, #0
 800fe32:	d0eb      	beq.n	800fe0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x38>
 800fe34:	f640 1302 	movw	r3, #2306	; 0x902
 800fe38:	429c      	cmp	r4, r3
 800fe3a:	d1e7      	bne.n	800fe0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x38>
 800fe3c:	4601      	mov	r1, r0
 800fe3e:	4628      	mov	r0, r5
 800fe40:	f7ff fbf9 	bl	800f636 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800fe44:	e7e1      	b.n	800fe0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x36>
	...

0800fe48 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fe48:	4b01      	ldr	r3, [pc, #4]	; (800fe50 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fe4a:	6018      	str	r0, [r3, #0]
 800fe4c:	4770      	bx	lr
 800fe4e:	bf00      	nop
 800fe50:	20001824 	.word	0x20001824

0800fe54 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fe54:	4b07      	ldr	r3, [pc, #28]	; (800fe74 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800fe56:	881a      	ldrh	r2, [r3, #0]
 800fe58:	4282      	cmp	r2, r0
 800fe5a:	d809      	bhi.n	800fe70 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800fe5c:	4b06      	ldr	r3, [pc, #24]	; (800fe78 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800fe5e:	881b      	ldrh	r3, [r3, #0]
 800fe60:	4413      	add	r3, r2
 800fe62:	4298      	cmp	r0, r3
 800fe64:	da04      	bge.n	800fe70 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800fe66:	4b05      	ldr	r3, [pc, #20]	; (800fe7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800fe68:	681b      	ldr	r3, [r3, #0]
 800fe6a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800fe6e:	4770      	bx	lr
 800fe70:	2000      	movs	r0, #0
 800fe72:	4770      	bx	lr
 800fe74:	20001844 	.word	0x20001844
 800fe78:	20001848 	.word	0x20001848
 800fe7c:	20001828 	.word	0x20001828

0800fe80 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800fe80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe84:	4d26      	ldr	r5, [pc, #152]	; (800ff20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800fe86:	682b      	ldr	r3, [r5, #0]
 800fe88:	2b00      	cmp	r3, #0
 800fe8a:	d046      	beq.n	800ff1a <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800fe8c:	4a25      	ldr	r2, [pc, #148]	; (800ff24 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fe8e:	4f26      	ldr	r7, [pc, #152]	; (800ff28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fe90:	8810      	ldrh	r0, [r2, #0]
 800fe92:	883c      	ldrh	r4, [r7, #0]
 800fe94:	4e25      	ldr	r6, [pc, #148]	; (800ff2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800fe96:	4420      	add	r0, r4
 800fe98:	1c42      	adds	r2, r0, #1
 800fe9a:	f022 0201 	bic.w	r2, r2, #1
 800fe9e:	0412      	lsls	r2, r2, #16
 800fea0:	0c12      	lsrs	r2, r2, #16
 800fea2:	0051      	lsls	r1, r2, #1
 800fea4:	220e      	movs	r2, #14
 800fea6:	fb02 fc04 	mul.w	ip, r2, r4
 800feaa:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800feae:	4c20      	ldr	r4, [pc, #128]	; (800ff30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800feb0:	eb03 0208 	add.w	r2, r3, r8
 800feb4:	eb08 0e01 	add.w	lr, r8, r1
 800feb8:	6022      	str	r2, [r4, #0]
 800feba:	eb03 020e 	add.w	r2, r3, lr
 800febe:	6032      	str	r2, [r6, #0]
 800fec0:	44e6      	add	lr, ip
 800fec2:	4a1c      	ldr	r2, [pc, #112]	; (800ff34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800fec4:	4473      	add	r3, lr
 800fec6:	6013      	str	r3, [r2, #0]
 800fec8:	4a1b      	ldr	r2, [pc, #108]	; (800ff38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800feca:	2300      	movs	r3, #0
 800fecc:	8013      	strh	r3, [r2, #0]
 800fece:	4a1b      	ldr	r2, [pc, #108]	; (800ff3c <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800fed0:	6812      	ldr	r2, [r2, #0]
 800fed2:	eba2 0208 	sub.w	r2, r2, r8
 800fed6:	1a52      	subs	r2, r2, r1
 800fed8:	4919      	ldr	r1, [pc, #100]	; (800ff40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800feda:	eba2 020c 	sub.w	r2, r2, ip
 800fede:	600a      	str	r2, [r1, #0]
 800fee0:	4a18      	ldr	r2, [pc, #96]	; (800ff44 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800fee2:	469c      	mov	ip, r3
 800fee4:	8013      	strh	r3, [r2, #0]
 800fee6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800feea:	4283      	cmp	r3, r0
 800feec:	d10d      	bne.n	800ff0a <_ZN8touchgfx6Bitmap10clearCacheEv+0x8a>
 800feee:	883d      	ldrh	r5, [r7, #0]
 800fef0:	6830      	ldr	r0, [r6, #0]
 800fef2:	2300      	movs	r3, #0
 800fef4:	240e      	movs	r4, #14
 800fef6:	429d      	cmp	r5, r3
 800fef8:	d90f      	bls.n	800ff1a <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800fefa:	fb04 0203 	mla	r2, r4, r3, r0
 800fefe:	3301      	adds	r3, #1
 800ff00:	7b11      	ldrb	r1, [r2, #12]
 800ff02:	f36f 1145 	bfc	r1, #5, #1
 800ff06:	7311      	strb	r1, [r2, #12]
 800ff08:	e7f5      	b.n	800fef6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x76>
 800ff0a:	682a      	ldr	r2, [r5, #0]
 800ff0c:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800ff10:	6822      	ldr	r2, [r4, #0]
 800ff12:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800ff16:	3301      	adds	r3, #1
 800ff18:	e7e7      	b.n	800feea <_ZN8touchgfx6Bitmap10clearCacheEv+0x6a>
 800ff1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ff1e:	bf00      	nop
 800ff20:	20001828 	.word	0x20001828
 800ff24:	20001844 	.word	0x20001844
 800ff28:	20001848 	.word	0x20001848
 800ff2c:	2000182c 	.word	0x2000182c
 800ff30:	2000183c 	.word	0x2000183c
 800ff34:	20001834 	.word	0x20001834
 800ff38:	20001846 	.word	0x20001846
 800ff3c:	20001830 	.word	0x20001830
 800ff40:	20001840 	.word	0x20001840
 800ff44:	20001838 	.word	0x20001838

0800ff48 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800ff48:	b510      	push	{r4, lr}
 800ff4a:	4b10      	ldr	r3, [pc, #64]	; (800ff8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800ff4c:	681b      	ldr	r3, [r3, #0]
 800ff4e:	b9db      	cbnz	r3, 800ff88 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800ff50:	b1d1      	cbz	r1, 800ff88 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800ff52:	4b0f      	ldr	r3, [pc, #60]	; (800ff90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800ff54:	801a      	strh	r2, [r3, #0]
 800ff56:	4b0f      	ldr	r3, [pc, #60]	; (800ff94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800ff58:	881b      	ldrh	r3, [r3, #0]
 800ff5a:	b292      	uxth	r2, r2
 800ff5c:	240e      	movs	r4, #14
 800ff5e:	4413      	add	r3, r2
 800ff60:	4362      	muls	r2, r4
 800ff62:	2406      	movs	r4, #6
 800ff64:	fb04 2203 	mla	r2, r4, r3, r2
 800ff68:	428a      	cmp	r2, r1
 800ff6a:	d305      	bcc.n	800ff78 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800ff6c:	4b0a      	ldr	r3, [pc, #40]	; (800ff98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800ff6e:	4a0b      	ldr	r2, [pc, #44]	; (800ff9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800ff70:	480b      	ldr	r0, [pc, #44]	; (800ffa0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800ff72:	2137      	movs	r1, #55	; 0x37
 800ff74:	f00b fce6 	bl	801b944 <__assert_func>
 800ff78:	4b0a      	ldr	r3, [pc, #40]	; (800ffa4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800ff7a:	6019      	str	r1, [r3, #0]
 800ff7c:	4b0a      	ldr	r3, [pc, #40]	; (800ffa8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800ff7e:	6018      	str	r0, [r3, #0]
 800ff80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ff84:	f7ff bf7c 	b.w	800fe80 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ff88:	bd10      	pop	{r4, pc}
 800ff8a:	bf00      	nop
 800ff8c:	20001834 	.word	0x20001834
 800ff90:	20001848 	.word	0x20001848
 800ff94:	20001844 	.word	0x20001844
 800ff98:	08020c02 	.word	0x08020c02
 800ff9c:	08020c5b 	.word	0x08020c5b
 800ffa0:	08020bdd 	.word	0x08020bdd
 800ffa4:	20001830 	.word	0x20001830
 800ffa8:	20001828 	.word	0x20001828

0800ffac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800ffac:	b470      	push	{r4, r5, r6}
 800ffae:	4c07      	ldr	r4, [pc, #28]	; (800ffcc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800ffb0:	6826      	ldr	r6, [r4, #0]
 800ffb2:	4605      	mov	r5, r0
 800ffb4:	4610      	mov	r0, r2
 800ffb6:	9a03      	ldr	r2, [sp, #12]
 800ffb8:	b936      	cbnz	r6, 800ffc8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800ffba:	6025      	str	r5, [r4, #0]
 800ffbc:	4c04      	ldr	r4, [pc, #16]	; (800ffd0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800ffbe:	8021      	strh	r1, [r4, #0]
 800ffc0:	bc70      	pop	{r4, r5, r6}
 800ffc2:	4619      	mov	r1, r3
 800ffc4:	f7ff bfc0 	b.w	800ff48 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800ffc8:	bc70      	pop	{r4, r5, r6}
 800ffca:	4770      	bx	lr
 800ffcc:	2000184c 	.word	0x2000184c
 800ffd0:	20001844 	.word	0x20001844

0800ffd4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800ffd4:	b508      	push	{r3, lr}
 800ffd6:	4b14      	ldr	r3, [pc, #80]	; (8010028 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800ffd8:	6819      	ldr	r1, [r3, #0]
 800ffda:	b931      	cbnz	r1, 800ffea <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800ffdc:	4b13      	ldr	r3, [pc, #76]	; (801002c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800ffde:	4a14      	ldr	r2, [pc, #80]	; (8010030 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800ffe0:	4814      	ldr	r0, [pc, #80]	; (8010034 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800ffe2:	f240 21e6 	movw	r1, #742	; 0x2e6
 800ffe6:	f00b fcad 	bl	801b944 <__assert_func>
 800ffea:	4a13      	ldr	r2, [pc, #76]	; (8010038 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800ffec:	8803      	ldrh	r3, [r0, #0]
 800ffee:	8812      	ldrh	r2, [r2, #0]
 800fff0:	4293      	cmp	r3, r2
 800fff2:	d204      	bcs.n	800fffe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800fff4:	2214      	movs	r2, #20
 800fff6:	fb02 1303 	mla	r3, r2, r3, r1
 800fffa:	8918      	ldrh	r0, [r3, #8]
 800fffc:	bd08      	pop	{r3, pc}
 800fffe:	490f      	ldr	r1, [pc, #60]	; (801003c <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8010000:	8809      	ldrh	r1, [r1, #0]
 8010002:	4411      	add	r1, r2
 8010004:	428b      	cmp	r3, r1
 8010006:	da06      	bge.n	8010016 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8010008:	1a9b      	subs	r3, r3, r2
 801000a:	4a0d      	ldr	r2, [pc, #52]	; (8010040 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 801000c:	6812      	ldr	r2, [r2, #0]
 801000e:	210e      	movs	r1, #14
 8010010:	fb01 2303 	mla	r3, r1, r3, r2
 8010014:	e7f1      	b.n	800fffa <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8010016:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801001a:	4293      	cmp	r3, r2
 801001c:	bf0a      	itet	eq
 801001e:	4b09      	ldreq	r3, [pc, #36]	; (8010044 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 8010020:	2000      	movne	r0, #0
 8010022:	8818      	ldrheq	r0, [r3, #0]
 8010024:	e7ea      	b.n	800fffc <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8010026:	bf00      	nop
 8010028:	2000184c 	.word	0x2000184c
 801002c:	08020004 	.word	0x08020004
 8010030:	08020d08 	.word	0x08020d08
 8010034:	08020bdd 	.word	0x08020bdd
 8010038:	20001844 	.word	0x20001844
 801003c:	20001848 	.word	0x20001848
 8010040:	2000182c 	.word	0x2000182c
 8010044:	20001798 	.word	0x20001798

08010048 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010048:	b508      	push	{r3, lr}
 801004a:	4b14      	ldr	r3, [pc, #80]	; (801009c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801004c:	6819      	ldr	r1, [r3, #0]
 801004e:	b931      	cbnz	r1, 801005e <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8010050:	4b13      	ldr	r3, [pc, #76]	; (80100a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8010052:	4a14      	ldr	r2, [pc, #80]	; (80100a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8010054:	4814      	ldr	r0, [pc, #80]	; (80100a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8010056:	f240 21fa 	movw	r1, #762	; 0x2fa
 801005a:	f00b fc73 	bl	801b944 <__assert_func>
 801005e:	4a13      	ldr	r2, [pc, #76]	; (80100ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010060:	8803      	ldrh	r3, [r0, #0]
 8010062:	8812      	ldrh	r2, [r2, #0]
 8010064:	4293      	cmp	r3, r2
 8010066:	d204      	bcs.n	8010072 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8010068:	2214      	movs	r2, #20
 801006a:	fb02 1303 	mla	r3, r2, r3, r1
 801006e:	8958      	ldrh	r0, [r3, #10]
 8010070:	bd08      	pop	{r3, pc}
 8010072:	490f      	ldr	r1, [pc, #60]	; (80100b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8010074:	8809      	ldrh	r1, [r1, #0]
 8010076:	4411      	add	r1, r2
 8010078:	428b      	cmp	r3, r1
 801007a:	da06      	bge.n	801008a <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 801007c:	1a9b      	subs	r3, r3, r2
 801007e:	4a0d      	ldr	r2, [pc, #52]	; (80100b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8010080:	6812      	ldr	r2, [r2, #0]
 8010082:	210e      	movs	r1, #14
 8010084:	fb01 2303 	mla	r3, r1, r3, r2
 8010088:	e7f1      	b.n	801006e <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 801008a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801008e:	4293      	cmp	r3, r2
 8010090:	bf0a      	itet	eq
 8010092:	4b09      	ldreq	r3, [pc, #36]	; (80100b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8010094:	2000      	movne	r0, #0
 8010096:	8818      	ldrheq	r0, [r3, #0]
 8010098:	e7ea      	b.n	8010070 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 801009a:	bf00      	nop
 801009c:	2000184c 	.word	0x2000184c
 80100a0:	08020004 	.word	0x08020004
 80100a4:	08020d34 	.word	0x08020d34
 80100a8:	08020bdd 	.word	0x08020bdd
 80100ac:	20001844 	.word	0x20001844
 80100b0:	20001848 	.word	0x20001848
 80100b4:	2000182c 	.word	0x2000182c
 80100b8:	2000179a 	.word	0x2000179a

080100bc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80100bc:	b510      	push	{r4, lr}
 80100be:	4b23      	ldr	r3, [pc, #140]	; (801014c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80100c0:	681c      	ldr	r4, [r3, #0]
 80100c2:	b934      	cbnz	r4, 80100d2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 80100c4:	4b22      	ldr	r3, [pc, #136]	; (8010150 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80100c6:	4a23      	ldr	r2, [pc, #140]	; (8010154 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 80100c8:	4823      	ldr	r0, [pc, #140]	; (8010158 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80100ca:	f240 310e 	movw	r1, #782	; 0x30e
 80100ce:	f00b fc39 	bl	801b944 <__assert_func>
 80100d2:	4a22      	ldr	r2, [pc, #136]	; (801015c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80100d4:	880b      	ldrh	r3, [r1, #0]
 80100d6:	8812      	ldrh	r2, [r2, #0]
 80100d8:	4293      	cmp	r3, r2
 80100da:	d211      	bcs.n	8010100 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 80100dc:	2214      	movs	r2, #20
 80100de:	fb02 4303 	mla	r3, r2, r3, r4
 80100e2:	8a1a      	ldrh	r2, [r3, #16]
 80100e4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80100e8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80100ec:	8a5b      	ldrh	r3, [r3, #18]
 80100ee:	8004      	strh	r4, [r0, #0]
 80100f0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80100f4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80100f8:	8041      	strh	r1, [r0, #2]
 80100fa:	8082      	strh	r2, [r0, #4]
 80100fc:	80c3      	strh	r3, [r0, #6]
 80100fe:	e00e      	b.n	801011e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010100:	4917      	ldr	r1, [pc, #92]	; (8010160 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 8010102:	8809      	ldrh	r1, [r1, #0]
 8010104:	4411      	add	r1, r2
 8010106:	428b      	cmp	r3, r1
 8010108:	da0a      	bge.n	8010120 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 801010a:	1a9b      	subs	r3, r3, r2
 801010c:	4a15      	ldr	r2, [pc, #84]	; (8010164 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801010e:	6812      	ldr	r2, [r2, #0]
 8010110:	210e      	movs	r1, #14
 8010112:	fb01 2303 	mla	r3, r1, r3, r2
 8010116:	681a      	ldr	r2, [r3, #0]
 8010118:	6002      	str	r2, [r0, #0]
 801011a:	685a      	ldr	r2, [r3, #4]
 801011c:	6042      	str	r2, [r0, #4]
 801011e:	bd10      	pop	{r4, pc}
 8010120:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010124:	4293      	cmp	r3, r2
 8010126:	d10b      	bne.n	8010140 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8010128:	4b0f      	ldr	r3, [pc, #60]	; (8010168 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 801012a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801012e:	4b0f      	ldr	r3, [pc, #60]	; (801016c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8010130:	8081      	strh	r1, [r0, #4]
 8010132:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010136:	80c2      	strh	r2, [r0, #6]
 8010138:	2300      	movs	r3, #0
 801013a:	8003      	strh	r3, [r0, #0]
 801013c:	8043      	strh	r3, [r0, #2]
 801013e:	e7ee      	b.n	801011e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010140:	2300      	movs	r3, #0
 8010142:	8003      	strh	r3, [r0, #0]
 8010144:	8043      	strh	r3, [r0, #2]
 8010146:	8083      	strh	r3, [r0, #4]
 8010148:	e7d8      	b.n	80100fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 801014a:	bf00      	nop
 801014c:	2000184c 	.word	0x2000184c
 8010150:	08020004 	.word	0x08020004
 8010154:	08020ca1 	.word	0x08020ca1
 8010158:	08020bdd 	.word	0x08020bdd
 801015c:	20001844 	.word	0x20001844
 8010160:	20001848 	.word	0x20001848
 8010164:	2000182c 	.word	0x2000182c
 8010168:	20001798 	.word	0x20001798
 801016c:	2000179a 	.word	0x2000179a

08010170 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8010170:	4b18      	ldr	r3, [pc, #96]	; (80101d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8010172:	681b      	ldr	r3, [r3, #0]
 8010174:	b34b      	cbz	r3, 80101ca <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8010176:	4a18      	ldr	r2, [pc, #96]	; (80101d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8010178:	8800      	ldrh	r0, [r0, #0]
 801017a:	8812      	ldrh	r2, [r2, #0]
 801017c:	4290      	cmp	r0, r2
 801017e:	d211      	bcs.n	80101a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8010180:	2214      	movs	r2, #20
 8010182:	fb02 3300 	mla	r3, r2, r0, r3
 8010186:	8a1a      	ldrh	r2, [r3, #16]
 8010188:	8919      	ldrh	r1, [r3, #8]
 801018a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801018e:	428a      	cmp	r2, r1
 8010190:	db1d      	blt.n	80101ce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8010192:	8a58      	ldrh	r0, [r3, #18]
 8010194:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010198:	895b      	ldrh	r3, [r3, #10]
 801019a:	4298      	cmp	r0, r3
 801019c:	bfac      	ite	ge
 801019e:	2000      	movge	r0, #0
 80101a0:	2001      	movlt	r0, #1
 80101a2:	4770      	bx	lr
 80101a4:	4b0d      	ldr	r3, [pc, #52]	; (80101dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80101a6:	881b      	ldrh	r3, [r3, #0]
 80101a8:	4413      	add	r3, r2
 80101aa:	4298      	cmp	r0, r3
 80101ac:	da0d      	bge.n	80101ca <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 80101ae:	4b0c      	ldr	r3, [pc, #48]	; (80101e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 80101b0:	681b      	ldr	r3, [r3, #0]
 80101b2:	1a80      	subs	r0, r0, r2
 80101b4:	220e      	movs	r2, #14
 80101b6:	fb02 3300 	mla	r3, r2, r0, r3
 80101ba:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80101be:	891a      	ldrh	r2, [r3, #8]
 80101c0:	4291      	cmp	r1, r2
 80101c2:	db04      	blt.n	80101ce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 80101c4:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80101c8:	e7e6      	b.n	8010198 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 80101ca:	2000      	movs	r0, #0
 80101cc:	4770      	bx	lr
 80101ce:	2001      	movs	r0, #1
 80101d0:	4770      	bx	lr
 80101d2:	bf00      	nop
 80101d4:	2000184c 	.word	0x2000184c
 80101d8:	20001844 	.word	0x20001844
 80101dc:	20001848 	.word	0x20001848
 80101e0:	2000182c 	.word	0x2000182c

080101e4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80101e4:	b508      	push	{r3, lr}
 80101e6:	4b12      	ldr	r3, [pc, #72]	; (8010230 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80101e8:	6819      	ldr	r1, [r3, #0]
 80101ea:	b931      	cbnz	r1, 80101fa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80101ec:	4b11      	ldr	r3, [pc, #68]	; (8010234 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80101ee:	4a12      	ldr	r2, [pc, #72]	; (8010238 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80101f0:	4812      	ldr	r0, [pc, #72]	; (801023c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80101f2:	f240 3132 	movw	r1, #818	; 0x332
 80101f6:	f00b fba5 	bl	801b944 <__assert_func>
 80101fa:	8803      	ldrh	r3, [r0, #0]
 80101fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010200:	4293      	cmp	r3, r2
 8010202:	d012      	beq.n	801022a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8010204:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010208:	4293      	cmp	r3, r2
 801020a:	d103      	bne.n	8010214 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 801020c:	4b0c      	ldr	r3, [pc, #48]	; (8010240 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801020e:	681b      	ldr	r3, [r3, #0]
 8010210:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8010212:	bd08      	pop	{r3, pc}
 8010214:	4a0b      	ldr	r2, [pc, #44]	; (8010244 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8010216:	6812      	ldr	r2, [r2, #0]
 8010218:	b11a      	cbz	r2, 8010222 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 801021a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801021e:	2800      	cmp	r0, #0
 8010220:	d1f7      	bne.n	8010212 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010222:	2214      	movs	r2, #20
 8010224:	4353      	muls	r3, r2
 8010226:	58c8      	ldr	r0, [r1, r3]
 8010228:	e7f3      	b.n	8010212 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801022a:	2000      	movs	r0, #0
 801022c:	e7f1      	b.n	8010212 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801022e:	bf00      	nop
 8010230:	2000184c 	.word	0x2000184c
 8010234:	08020004 	.word	0x08020004
 8010238:	08020cd7 	.word	0x08020cd7
 801023c:	08020bdd 	.word	0x08020bdd
 8010240:	200017a4 	.word	0x200017a4
 8010244:	20001828 	.word	0x20001828

08010248 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010248:	8802      	ldrh	r2, [r0, #0]
 801024a:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 801024e:	429a      	cmp	r2, r3
 8010250:	d840      	bhi.n	80102d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 8010252:	4b21      	ldr	r3, [pc, #132]	; (80102d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 8010254:	881b      	ldrh	r3, [r3, #0]
 8010256:	429a      	cmp	r2, r3
 8010258:	d220      	bcs.n	801029c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 801025a:	4b20      	ldr	r3, [pc, #128]	; (80102dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801025c:	6819      	ldr	r1, [r3, #0]
 801025e:	2314      	movs	r3, #20
 8010260:	fb03 1302 	mla	r3, r3, r2, r1
 8010264:	6858      	ldr	r0, [r3, #4]
 8010266:	2800      	cmp	r0, #0
 8010268:	d035      	beq.n	80102d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801026a:	491d      	ldr	r1, [pc, #116]	; (80102e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801026c:	6809      	ldr	r1, [r1, #0]
 801026e:	2900      	cmp	r1, #0
 8010270:	d031      	beq.n	80102d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010272:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8010276:	b371      	cbz	r1, 80102d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010278:	895a      	ldrh	r2, [r3, #10]
 801027a:	8918      	ldrh	r0, [r3, #8]
 801027c:	4350      	muls	r0, r2
 801027e:	7c5a      	ldrb	r2, [r3, #17]
 8010280:	7cdb      	ldrb	r3, [r3, #19]
 8010282:	0952      	lsrs	r2, r2, #5
 8010284:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8010288:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801028c:	2b0b      	cmp	r3, #11
 801028e:	bf18      	it	ne
 8010290:	0040      	lslne	r0, r0, #1
 8010292:	3003      	adds	r0, #3
 8010294:	f020 0003 	bic.w	r0, r0, #3
 8010298:	4408      	add	r0, r1
 801029a:	4770      	bx	lr
 801029c:	4911      	ldr	r1, [pc, #68]	; (80102e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801029e:	8809      	ldrh	r1, [r1, #0]
 80102a0:	4419      	add	r1, r3
 80102a2:	428a      	cmp	r2, r1
 80102a4:	da16      	bge.n	80102d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 80102a6:	4910      	ldr	r1, [pc, #64]	; (80102e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80102a8:	6809      	ldr	r1, [r1, #0]
 80102aa:	1ad3      	subs	r3, r2, r3
 80102ac:	200e      	movs	r0, #14
 80102ae:	fb00 1303 	mla	r3, r0, r3, r1
 80102b2:	7b19      	ldrb	r1, [r3, #12]
 80102b4:	f001 011f 	and.w	r1, r1, #31
 80102b8:	290b      	cmp	r1, #11
 80102ba:	d10b      	bne.n	80102d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 80102bc:	8919      	ldrh	r1, [r3, #8]
 80102be:	8958      	ldrh	r0, [r3, #10]
 80102c0:	4b07      	ldr	r3, [pc, #28]	; (80102e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80102c2:	4348      	muls	r0, r1
 80102c4:	6819      	ldr	r1, [r3, #0]
 80102c6:	3003      	adds	r0, #3
 80102c8:	f020 0303 	bic.w	r3, r0, #3
 80102cc:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80102d0:	4418      	add	r0, r3
 80102d2:	4770      	bx	lr
 80102d4:	2000      	movs	r0, #0
 80102d6:	4770      	bx	lr
 80102d8:	20001844 	.word	0x20001844
 80102dc:	2000184c 	.word	0x2000184c
 80102e0:	20001828 	.word	0x20001828
 80102e4:	20001848 	.word	0x20001848
 80102e8:	2000182c 	.word	0x2000182c

080102ec <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80102ec:	4b19      	ldr	r3, [pc, #100]	; (8010354 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80102ee:	6819      	ldr	r1, [r3, #0]
 80102f0:	8803      	ldrh	r3, [r0, #0]
 80102f2:	b1e9      	cbz	r1, 8010330 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80102f4:	4a18      	ldr	r2, [pc, #96]	; (8010358 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80102f6:	8812      	ldrh	r2, [r2, #0]
 80102f8:	429a      	cmp	r2, r3
 80102fa:	d90a      	bls.n	8010312 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80102fc:	2214      	movs	r2, #20
 80102fe:	fb02 1303 	mla	r3, r2, r3, r1
 8010302:	7c58      	ldrb	r0, [r3, #17]
 8010304:	0942      	lsrs	r2, r0, #5
 8010306:	7cd8      	ldrb	r0, [r3, #19]
 8010308:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801030c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010310:	4770      	bx	lr
 8010312:	4912      	ldr	r1, [pc, #72]	; (801035c <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 8010314:	8809      	ldrh	r1, [r1, #0]
 8010316:	4411      	add	r1, r2
 8010318:	428b      	cmp	r3, r1
 801031a:	da09      	bge.n	8010330 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801031c:	1a9b      	subs	r3, r3, r2
 801031e:	4a10      	ldr	r2, [pc, #64]	; (8010360 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 8010320:	6812      	ldr	r2, [r2, #0]
 8010322:	210e      	movs	r1, #14
 8010324:	fb01 2303 	mla	r3, r1, r3, r2
 8010328:	7b18      	ldrb	r0, [r3, #12]
 801032a:	f000 001f 	and.w	r0, r0, #31
 801032e:	4770      	bx	lr
 8010330:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010334:	4293      	cmp	r3, r2
 8010336:	d10a      	bne.n	801034e <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 8010338:	4b0a      	ldr	r3, [pc, #40]	; (8010364 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 801033a:	681b      	ldr	r3, [r3, #0]
 801033c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8010340:	b10a      	cbz	r2, 8010346 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8010342:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010344:	b900      	cbnz	r0, 8010348 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8010346:	6898      	ldr	r0, [r3, #8]
 8010348:	6803      	ldr	r3, [r0, #0]
 801034a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801034c:	4718      	bx	r3
 801034e:	2000      	movs	r0, #0
 8010350:	4770      	bx	lr
 8010352:	bf00      	nop
 8010354:	2000184c 	.word	0x2000184c
 8010358:	20001844 	.word	0x20001844
 801035c:	20001848 	.word	0x20001848
 8010360:	2000182c 	.word	0x2000182c
 8010364:	200017a4 	.word	0x200017a4

08010368 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8010368:	2010      	movs	r0, #16
 801036a:	4770      	bx	lr

0801036c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801036c:	2000      	movs	r0, #0
 801036e:	4770      	bx	lr

08010370 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 8010370:	00d2      	lsls	r2, r2, #3
 8010372:	0209      	lsls	r1, r1, #8
 8010374:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010378:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 801037c:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8010380:	4310      	orrs	r0, r2
 8010382:	4770      	bx	lr

08010384 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 8010384:	1209      	asrs	r1, r1, #8
 8010386:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 801038a:	4770      	bx	lr

0801038c <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 801038c:	f3c1 01cc 	ubfx	r1, r1, #3, #13
 8010390:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 8010394:	4770      	bx	lr

08010396 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 8010396:	00c9      	lsls	r1, r1, #3
 8010398:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 801039c:	4770      	bx	lr

0801039e <_ZN8touchgfx8LCD16bpp4initEv>:
 801039e:	4770      	bx	lr

080103a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80103a0:	2bff      	cmp	r3, #255	; 0xff
 80103a2:	d050      	beq.n	8010446 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80103a4:	2a0b      	cmp	r2, #11
 80103a6:	d04a      	beq.n	801043e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80103a8:	d80e      	bhi.n	80103c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80103aa:	2a03      	cmp	r2, #3
 80103ac:	d03f      	beq.n	801042e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80103ae:	d804      	bhi.n	80103ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80103b0:	2a01      	cmp	r2, #1
 80103b2:	d03e      	beq.n	8010432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80103b4:	d93f      	bls.n	8010436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80103b6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80103b8:	4770      	bx	lr
 80103ba:	2a09      	cmp	r2, #9
 80103bc:	d03f      	beq.n	801043e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80103be:	d83c      	bhi.n	801043a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80103c0:	2a08      	cmp	r2, #8
 80103c2:	d03a      	beq.n	801043a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80103c4:	2000      	movs	r0, #0
 80103c6:	4770      	bx	lr
 80103c8:	2a2f      	cmp	r2, #47	; 0x2f
 80103ca:	d024      	beq.n	8010416 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80103cc:	d80d      	bhi.n	80103ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80103ce:	2a2d      	cmp	r2, #45	; 0x2d
 80103d0:	d014      	beq.n	80103fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80103d2:	d826      	bhi.n	8010422 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80103d4:	2a2c      	cmp	r2, #44	; 0x2c
 80103d6:	d1f5      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80103d8:	684b      	ldr	r3, [r1, #4]
 80103da:	781b      	ldrb	r3, [r3, #0]
 80103dc:	2b01      	cmp	r3, #1
 80103de:	d018      	beq.n	8010412 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80103e0:	d323      	bcc.n	801042a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80103e2:	2b02      	cmp	r3, #2
 80103e4:	d1ee      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80103e6:	6880      	ldr	r0, [r0, #8]
 80103e8:	4770      	bx	lr
 80103ea:	2a31      	cmp	r2, #49	; 0x31
 80103ec:	d004      	beq.n	80103f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80103ee:	d328      	bcc.n	8010442 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80103f0:	2a32      	cmp	r2, #50	; 0x32
 80103f2:	d026      	beq.n	8010442 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80103f4:	2a33      	cmp	r2, #51	; 0x33
 80103f6:	d1e5      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80103f8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80103fa:	4770      	bx	lr
 80103fc:	684b      	ldr	r3, [r1, #4]
 80103fe:	781b      	ldrb	r3, [r3, #0]
 8010400:	2b01      	cmp	r3, #1
 8010402:	d004      	beq.n	801040e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8010404:	d30b      	bcc.n	801041e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8010406:	2b02      	cmp	r3, #2
 8010408:	d1dc      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801040a:	6900      	ldr	r0, [r0, #16]
 801040c:	4770      	bx	lr
 801040e:	6a00      	ldr	r0, [r0, #32]
 8010410:	4770      	bx	lr
 8010412:	6980      	ldr	r0, [r0, #24]
 8010414:	4770      	bx	lr
 8010416:	684b      	ldr	r3, [r1, #4]
 8010418:	781b      	ldrb	r3, [r3, #0]
 801041a:	2b00      	cmp	r3, #0
 801041c:	d1d2      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801041e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010420:	4770      	bx	lr
 8010422:	684b      	ldr	r3, [r1, #4]
 8010424:	781b      	ldrb	r3, [r3, #0]
 8010426:	2b00      	cmp	r3, #0
 8010428:	d1cc      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801042a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801042c:	4770      	bx	lr
 801042e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010430:	4770      	bx	lr
 8010432:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8010434:	4770      	bx	lr
 8010436:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8010438:	4770      	bx	lr
 801043a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801043c:	4770      	bx	lr
 801043e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010440:	4770      	bx	lr
 8010442:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8010444:	4770      	bx	lr
 8010446:	2a0b      	cmp	r2, #11
 8010448:	d049      	beq.n	80104de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801044a:	d80e      	bhi.n	801046a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801044c:	2a03      	cmp	r2, #3
 801044e:	d040      	beq.n	80104d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8010450:	d804      	bhi.n	801045c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8010452:	2a01      	cmp	r2, #1
 8010454:	d03f      	beq.n	80104d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8010456:	d940      	bls.n	80104da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8010458:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801045a:	4770      	bx	lr
 801045c:	2a09      	cmp	r2, #9
 801045e:	d03e      	beq.n	80104de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010460:	d801      	bhi.n	8010466 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8010462:	2a08      	cmp	r2, #8
 8010464:	d1ae      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010466:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8010468:	4770      	bx	lr
 801046a:	2a2f      	cmp	r2, #47	; 0x2f
 801046c:	d024      	beq.n	80104b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801046e:	d80d      	bhi.n	801048c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8010470:	2a2d      	cmp	r2, #45	; 0x2d
 8010472:	d014      	beq.n	801049e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8010474:	d826      	bhi.n	80104c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8010476:	2a2c      	cmp	r2, #44	; 0x2c
 8010478:	d1a4      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801047a:	684b      	ldr	r3, [r1, #4]
 801047c:	781b      	ldrb	r3, [r3, #0]
 801047e:	2b01      	cmp	r3, #1
 8010480:	d018      	beq.n	80104b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8010482:	d324      	bcc.n	80104ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8010484:	2b02      	cmp	r3, #2
 8010486:	d19d      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010488:	68c0      	ldr	r0, [r0, #12]
 801048a:	4770      	bx	lr
 801048c:	2a31      	cmp	r2, #49	; 0x31
 801048e:	d004      	beq.n	801049a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8010490:	d327      	bcc.n	80104e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010492:	2a32      	cmp	r2, #50	; 0x32
 8010494:	d025      	beq.n	80104e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8010496:	2a33      	cmp	r2, #51	; 0x33
 8010498:	d194      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801049a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801049c:	4770      	bx	lr
 801049e:	684b      	ldr	r3, [r1, #4]
 80104a0:	781b      	ldrb	r3, [r3, #0]
 80104a2:	2b01      	cmp	r3, #1
 80104a4:	d004      	beq.n	80104b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80104a6:	d30b      	bcc.n	80104c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80104a8:	2b02      	cmp	r3, #2
 80104aa:	d18b      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104ac:	6940      	ldr	r0, [r0, #20]
 80104ae:	4770      	bx	lr
 80104b0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80104b2:	4770      	bx	lr
 80104b4:	69c0      	ldr	r0, [r0, #28]
 80104b6:	4770      	bx	lr
 80104b8:	684b      	ldr	r3, [r1, #4]
 80104ba:	781b      	ldrb	r3, [r3, #0]
 80104bc:	2b00      	cmp	r3, #0
 80104be:	d181      	bne.n	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104c0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80104c2:	4770      	bx	lr
 80104c4:	684b      	ldr	r3, [r1, #4]
 80104c6:	781b      	ldrb	r3, [r3, #0]
 80104c8:	2b00      	cmp	r3, #0
 80104ca:	f47f af7b 	bne.w	80103c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104ce:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80104d0:	4770      	bx	lr
 80104d2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80104d4:	4770      	bx	lr
 80104d6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80104d8:	4770      	bx	lr
 80104da:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80104dc:	4770      	bx	lr
 80104de:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80104e0:	4770      	bx	lr
 80104e2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80104e4:	4770      	bx	lr

080104e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80104e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104ea:	b087      	sub	sp, #28
 80104ec:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80104ee:	9205      	str	r2, [sp, #20]
 80104f0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80104f4:	9202      	str	r2, [sp, #8]
 80104f6:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80104fa:	9101      	str	r1, [sp, #4]
 80104fc:	6871      	ldr	r1, [r6, #4]
 80104fe:	981a      	ldr	r0, [sp, #104]	; 0x68
 8010500:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 8010504:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010508:	fb01 2505 	mla	r5, r1, r5, r2
 801050c:	6832      	ldr	r2, [r6, #0]
 801050e:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8010512:	6802      	ldr	r2, [r0, #0]
 8010514:	9203      	str	r2, [sp, #12]
 8010516:	6842      	ldr	r2, [r0, #4]
 8010518:	fa1f fe84 	uxth.w	lr, r4
 801051c:	3204      	adds	r2, #4
 801051e:	43e4      	mvns	r4, r4
 8010520:	9204      	str	r2, [sp, #16]
 8010522:	b2e4      	uxtb	r4, r4
 8010524:	9a01      	ldr	r2, [sp, #4]
 8010526:	2a00      	cmp	r2, #0
 8010528:	dc03      	bgt.n	8010532 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 801052a:	9a05      	ldr	r2, [sp, #20]
 801052c:	2a00      	cmp	r2, #0
 801052e:	f340 8119 	ble.w	8010764 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 8010532:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010534:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010538:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801053a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801053e:	2b00      	cmp	r3, #0
 8010540:	dd0f      	ble.n	8010562 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 8010542:	1408      	asrs	r0, r1, #16
 8010544:	d406      	bmi.n	8010554 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010546:	4540      	cmp	r0, r8
 8010548:	da04      	bge.n	8010554 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801054a:	1410      	asrs	r0, r2, #16
 801054c:	d402      	bmi.n	8010554 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801054e:	9e02      	ldr	r6, [sp, #8]
 8010550:	42b0      	cmp	r0, r6
 8010552:	db07      	blt.n	8010564 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010554:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010556:	4401      	add	r1, r0
 8010558:	9814      	ldr	r0, [sp, #80]	; 0x50
 801055a:	3b01      	subs	r3, #1
 801055c:	4402      	add	r2, r0
 801055e:	3502      	adds	r5, #2
 8010560:	e7ed      	b.n	801053e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 8010562:	d00f      	beq.n	8010584 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8010564:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010566:	1e58      	subs	r0, r3, #1
 8010568:	fb06 1600 	mla	r6, r6, r0, r1
 801056c:	1436      	asrs	r6, r6, #16
 801056e:	d547      	bpl.n	8010600 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 8010570:	469b      	mov	fp, r3
 8010572:	46aa      	mov	sl, r5
 8010574:	f1bb 0f00 	cmp.w	fp, #0
 8010578:	f300 809e 	bgt.w	80106b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801057c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010580:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010584:	9b01      	ldr	r3, [sp, #4]
 8010586:	2b00      	cmp	r3, #0
 8010588:	f340 80ec 	ble.w	8010764 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 801058c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010590:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010594:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010598:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801059a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801059e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80105a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80105a6:	eef0 6a62 	vmov.f32	s13, s5
 80105aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80105ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80105b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80105b6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80105ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80105be:	eef0 6a43 	vmov.f32	s13, s6
 80105c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80105c6:	ee12 2a90 	vmov	r2, s5
 80105ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80105ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80105d2:	ee13 2a10 	vmov	r2, s6
 80105d6:	9313      	str	r3, [sp, #76]	; 0x4c
 80105d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105da:	fb92 f3f3 	sdiv	r3, r2, r3
 80105de:	9314      	str	r3, [sp, #80]	; 0x50
 80105e0:	9b01      	ldr	r3, [sp, #4]
 80105e2:	9a05      	ldr	r2, [sp, #20]
 80105e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80105e8:	3b01      	subs	r3, #1
 80105ea:	9301      	str	r3, [sp, #4]
 80105ec:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80105f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105f2:	eeb0 3a67 	vmov.f32	s6, s15
 80105f6:	bf08      	it	eq
 80105f8:	4613      	moveq	r3, r2
 80105fa:	eef0 2a47 	vmov.f32	s5, s14
 80105fe:	e791      	b.n	8010524 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010600:	4546      	cmp	r6, r8
 8010602:	dab5      	bge.n	8010570 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010604:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010606:	fb06 2000 	mla	r0, r6, r0, r2
 801060a:	1400      	asrs	r0, r0, #16
 801060c:	d4b0      	bmi.n	8010570 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 801060e:	9e02      	ldr	r6, [sp, #8]
 8010610:	42b0      	cmp	r0, r6
 8010612:	daad      	bge.n	8010570 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010614:	469a      	mov	sl, r3
 8010616:	46ab      	mov	fp, r5
 8010618:	f1ba 0f00 	cmp.w	sl, #0
 801061c:	ddae      	ble.n	801057c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801061e:	9f03      	ldr	r7, [sp, #12]
 8010620:	1410      	asrs	r0, r2, #16
 8010622:	140e      	asrs	r6, r1, #16
 8010624:	fb08 7000 	mla	r0, r8, r0, r7
 8010628:	f10a 3aff 	add.w	sl, sl, #4294967295
 801062c:	5d80      	ldrb	r0, [r0, r6]
 801062e:	9e04      	ldr	r6, [sp, #16]
 8010630:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010634:	f8bb 6000 	ldrh.w	r6, [fp]
 8010638:	1237      	asrs	r7, r6, #8
 801063a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801063e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010642:	fb17 f704 	smulbb	r7, r7, r4
 8010646:	ea4f 09e6 	mov.w	r9, r6, asr #3
 801064a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801064e:	00f6      	lsls	r6, r6, #3
 8010650:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010654:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010658:	10c7      	asrs	r7, r0, #3
 801065a:	b2f6      	uxtb	r6, r6
 801065c:	00c0      	lsls	r0, r0, #3
 801065e:	fb19 f904 	smulbb	r9, r9, r4
 8010662:	fb16 f604 	smulbb	r6, r6, r4
 8010666:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801066a:	b2c0      	uxtb	r0, r0
 801066c:	fa1f fc8c 	uxth.w	ip, ip
 8010670:	fb07 970e 	mla	r7, r7, lr, r9
 8010674:	fb00 600e 	mla	r0, r0, lr, r6
 8010678:	b280      	uxth	r0, r0
 801067a:	b2bf      	uxth	r7, r7
 801067c:	f10c 0601 	add.w	r6, ip, #1
 8010680:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010684:	f107 0901 	add.w	r9, r7, #1
 8010688:	1c46      	adds	r6, r0, #1
 801068a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801068e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010692:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010694:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010698:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801069c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80106a0:	ea4c 0c06 	orr.w	ip, ip, r6
 80106a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80106a8:	4401      	add	r1, r0
 80106aa:	9814      	ldr	r0, [sp, #80]	; 0x50
 80106ac:	ea4c 0c09 	orr.w	ip, ip, r9
 80106b0:	f82b cb02 	strh.w	ip, [fp], #2
 80106b4:	4402      	add	r2, r0
 80106b6:	e7af      	b.n	8010618 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 80106b8:	140e      	asrs	r6, r1, #16
 80106ba:	d44a      	bmi.n	8010752 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 80106bc:	4546      	cmp	r6, r8
 80106be:	da48      	bge.n	8010752 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 80106c0:	1410      	asrs	r0, r2, #16
 80106c2:	d446      	bmi.n	8010752 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 80106c4:	9f02      	ldr	r7, [sp, #8]
 80106c6:	42b8      	cmp	r0, r7
 80106c8:	da43      	bge.n	8010752 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 80106ca:	9f03      	ldr	r7, [sp, #12]
 80106cc:	fb08 7000 	mla	r0, r8, r0, r7
 80106d0:	5d80      	ldrb	r0, [r0, r6]
 80106d2:	9e04      	ldr	r6, [sp, #16]
 80106d4:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 80106d8:	f8ba 6000 	ldrh.w	r6, [sl]
 80106dc:	1237      	asrs	r7, r6, #8
 80106de:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80106e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80106e6:	fb17 f704 	smulbb	r7, r7, r4
 80106ea:	ea4f 09e6 	mov.w	r9, r6, asr #3
 80106ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80106f2:	00f6      	lsls	r6, r6, #3
 80106f4:	fb0c 7c0e 	mla	ip, ip, lr, r7
 80106f8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80106fc:	10c7      	asrs	r7, r0, #3
 80106fe:	b2f6      	uxtb	r6, r6
 8010700:	00c0      	lsls	r0, r0, #3
 8010702:	fb19 f904 	smulbb	r9, r9, r4
 8010706:	fb16 f604 	smulbb	r6, r6, r4
 801070a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801070e:	b2c0      	uxtb	r0, r0
 8010710:	fa1f fc8c 	uxth.w	ip, ip
 8010714:	fb07 970e 	mla	r7, r7, lr, r9
 8010718:	fb00 600e 	mla	r0, r0, lr, r6
 801071c:	b2bf      	uxth	r7, r7
 801071e:	b280      	uxth	r0, r0
 8010720:	f10c 0601 	add.w	r6, ip, #1
 8010724:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010728:	f107 0901 	add.w	r9, r7, #1
 801072c:	1c46      	adds	r6, r0, #1
 801072e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8010732:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010736:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801073a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801073e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010742:	ea4c 0c06 	orr.w	ip, ip, r6
 8010746:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801074a:	ea4c 0c09 	orr.w	ip, ip, r9
 801074e:	f8aa c000 	strh.w	ip, [sl]
 8010752:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010754:	4401      	add	r1, r0
 8010756:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010758:	f10a 0a02 	add.w	sl, sl, #2
 801075c:	4402      	add	r2, r0
 801075e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8010762:	e707      	b.n	8010574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8010764:	b007      	add	sp, #28
 8010766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801076a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801076a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801076e:	b085      	sub	sp, #20
 8010770:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 8010774:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010776:	9203      	str	r2, [sp, #12]
 8010778:	6842      	ldr	r2, [r0, #4]
 801077a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801077c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801077e:	6800      	ldr	r0, [r0, #0]
 8010780:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 8010784:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 8010788:	4696      	mov	lr, r2
 801078a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801078c:	fb0e 2505 	mla	r5, lr, r5, r2
 8010790:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010794:	6860      	ldr	r0, [r4, #4]
 8010796:	6822      	ldr	r2, [r4, #0]
 8010798:	9201      	str	r2, [sp, #4]
 801079a:	1d02      	adds	r2, r0, #4
 801079c:	9202      	str	r2, [sp, #8]
 801079e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80107a2:	2900      	cmp	r1, #0
 80107a4:	dc03      	bgt.n	80107ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 80107a6:	9a03      	ldr	r2, [sp, #12]
 80107a8:	2a00      	cmp	r2, #0
 80107aa:	f340 809b 	ble.w	80108e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 80107ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80107b0:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80107b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80107b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80107ba:	2b00      	cmp	r3, #0
 80107bc:	dd0e      	ble.n	80107dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80107be:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80107c2:	d406      	bmi.n	80107d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80107c4:	45e6      	cmp	lr, ip
 80107c6:	da04      	bge.n	80107d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80107c8:	ea5f 4e20 	movs.w	lr, r0, asr #16
 80107cc:	d401      	bmi.n	80107d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80107ce:	45c6      	cmp	lr, r8
 80107d0:	db05      	blt.n	80107de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80107d2:	443c      	add	r4, r7
 80107d4:	4430      	add	r0, r6
 80107d6:	3b01      	subs	r3, #1
 80107d8:	3502      	adds	r5, #2
 80107da:	e7ee      	b.n	80107ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 80107dc:	d010      	beq.n	8010800 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80107de:	f103 3eff 	add.w	lr, r3, #4294967295
 80107e2:	fb07 490e 	mla	r9, r7, lr, r4
 80107e6:	ea5f 4929 	movs.w	r9, r9, asr #16
 80107ea:	d53d      	bpl.n	8010868 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80107ec:	469e      	mov	lr, r3
 80107ee:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 80107f2:	f1be 0f00 	cmp.w	lr, #0
 80107f6:	dc58      	bgt.n	80108aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 80107f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80107fc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010800:	2900      	cmp	r1, #0
 8010802:	dd6f      	ble.n	80108e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 8010804:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010808:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801080c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010810:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010812:	3901      	subs	r1, #1
 8010814:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010818:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801081c:	eeb0 6a62 	vmov.f32	s12, s5
 8010820:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010824:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010828:	ee77 2a62 	vsub.f32	s5, s14, s5
 801082c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010830:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010834:	eeb0 6a43 	vmov.f32	s12, s6
 8010838:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801083c:	ee12 2a90 	vmov	r2, s5
 8010840:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010844:	fb92 f7f3 	sdiv	r7, r2, r3
 8010848:	ee13 2a10 	vmov	r2, s6
 801084c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010850:	fb92 f6f3 	sdiv	r6, r2, r3
 8010854:	9a03      	ldr	r2, [sp, #12]
 8010856:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801085a:	bf08      	it	eq
 801085c:	4613      	moveq	r3, r2
 801085e:	eeb0 3a67 	vmov.f32	s6, s15
 8010862:	eef0 2a47 	vmov.f32	s5, s14
 8010866:	e79c      	b.n	80107a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 8010868:	45e1      	cmp	r9, ip
 801086a:	dabf      	bge.n	80107ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 801086c:	fb06 0e0e 	mla	lr, r6, lr, r0
 8010870:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010874:	d4ba      	bmi.n	80107ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 8010876:	45c6      	cmp	lr, r8
 8010878:	dab8      	bge.n	80107ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 801087a:	469e      	mov	lr, r3
 801087c:	46aa      	mov	sl, r5
 801087e:	f1be 0f00 	cmp.w	lr, #0
 8010882:	ddb9      	ble.n	80107f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8010884:	9a01      	ldr	r2, [sp, #4]
 8010886:	ea4f 4920 	mov.w	r9, r0, asr #16
 801088a:	ea4f 4b24 	mov.w	fp, r4, asr #16
 801088e:	fb0c 2909 	mla	r9, ip, r9, r2
 8010892:	9a02      	ldr	r2, [sp, #8]
 8010894:	f819 900b 	ldrb.w	r9, [r9, fp]
 8010898:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 801089c:	f82a 9b02 	strh.w	r9, [sl], #2
 80108a0:	443c      	add	r4, r7
 80108a2:	4430      	add	r0, r6
 80108a4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80108a8:	e7e9      	b.n	801087e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 80108aa:	ea5f 4a24 	movs.w	sl, r4, asr #16
 80108ae:	d414      	bmi.n	80108da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80108b0:	45e2      	cmp	sl, ip
 80108b2:	da12      	bge.n	80108da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80108b4:	ea5f 4920 	movs.w	r9, r0, asr #16
 80108b8:	d40f      	bmi.n	80108da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80108ba:	45c1      	cmp	r9, r8
 80108bc:	da0d      	bge.n	80108da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80108be:	9a01      	ldr	r2, [sp, #4]
 80108c0:	fb0c 2909 	mla	r9, ip, r9, r2
 80108c4:	9a02      	ldr	r2, [sp, #8]
 80108c6:	f819 900a 	ldrb.w	r9, [r9, sl]
 80108ca:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 80108ce:	f06f 0201 	mvn.w	r2, #1
 80108d2:	fb02 f90e 	mul.w	r9, r2, lr
 80108d6:	f82b a009 	strh.w	sl, [fp, r9]
 80108da:	443c      	add	r4, r7
 80108dc:	4430      	add	r0, r6
 80108de:	f10e 3eff 	add.w	lr, lr, #4294967295
 80108e2:	e786      	b.n	80107f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 80108e4:	b005      	add	sp, #20
 80108e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080108ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80108ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108ee:	b087      	sub	sp, #28
 80108f0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80108f2:	9205      	str	r2, [sp, #20]
 80108f4:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80108f8:	9202      	str	r2, [sp, #8]
 80108fa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80108fe:	9101      	str	r1, [sp, #4]
 8010900:	6871      	ldr	r1, [r6, #4]
 8010902:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8010904:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 8010908:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 801090c:	fb01 2404 	mla	r4, r1, r4, r2
 8010910:	6832      	ldr	r2, [r6, #0]
 8010912:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010916:	682a      	ldr	r2, [r5, #0]
 8010918:	9203      	str	r2, [sp, #12]
 801091a:	686a      	ldr	r2, [r5, #4]
 801091c:	fa1f fc80 	uxth.w	ip, r0
 8010920:	3204      	adds	r2, #4
 8010922:	43c0      	mvns	r0, r0
 8010924:	9200      	str	r2, [sp, #0]
 8010926:	b2c0      	uxtb	r0, r0
 8010928:	9a01      	ldr	r2, [sp, #4]
 801092a:	2a00      	cmp	r2, #0
 801092c:	dc03      	bgt.n	8010936 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 801092e:	9a05      	ldr	r2, [sp, #20]
 8010930:	2a00      	cmp	r2, #0
 8010932:	f340 811b 	ble.w	8010b6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 8010936:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010938:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801093c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801093e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010942:	2b00      	cmp	r3, #0
 8010944:	dd0f      	ble.n	8010966 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 8010946:	140d      	asrs	r5, r1, #16
 8010948:	d406      	bmi.n	8010958 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801094a:	4575      	cmp	r5, lr
 801094c:	da04      	bge.n	8010958 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801094e:	1415      	asrs	r5, r2, #16
 8010950:	d402      	bmi.n	8010958 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010952:	9e02      	ldr	r6, [sp, #8]
 8010954:	42b5      	cmp	r5, r6
 8010956:	db07      	blt.n	8010968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010958:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801095a:	4429      	add	r1, r5
 801095c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801095e:	3b01      	subs	r3, #1
 8010960:	442a      	add	r2, r5
 8010962:	3402      	adds	r4, #2
 8010964:	e7ed      	b.n	8010942 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 8010966:	d00f      	beq.n	8010988 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8010968:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801096a:	1e5d      	subs	r5, r3, #1
 801096c:	fb06 1605 	mla	r6, r6, r5, r1
 8010970:	1436      	asrs	r6, r6, #16
 8010972:	d547      	bpl.n	8010a04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 8010974:	469a      	mov	sl, r3
 8010976:	46a1      	mov	r9, r4
 8010978:	f1ba 0f00 	cmp.w	sl, #0
 801097c:	f300 809f 	bgt.w	8010abe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 8010980:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010984:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010988:	9b01      	ldr	r3, [sp, #4]
 801098a:	2b00      	cmp	r3, #0
 801098c:	f340 80ee 	ble.w	8010b6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 8010990:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010994:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010998:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801099c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801099e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80109a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80109a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80109aa:	eef0 6a62 	vmov.f32	s13, s5
 80109ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80109b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80109b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80109ba:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80109be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80109c2:	eef0 6a43 	vmov.f32	s13, s6
 80109c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80109ca:	ee12 2a90 	vmov	r2, s5
 80109ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80109d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80109d6:	ee13 2a10 	vmov	r2, s6
 80109da:	9313      	str	r3, [sp, #76]	; 0x4c
 80109dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80109de:	fb92 f3f3 	sdiv	r3, r2, r3
 80109e2:	9314      	str	r3, [sp, #80]	; 0x50
 80109e4:	9b01      	ldr	r3, [sp, #4]
 80109e6:	9a05      	ldr	r2, [sp, #20]
 80109e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80109ec:	3b01      	subs	r3, #1
 80109ee:	9301      	str	r3, [sp, #4]
 80109f0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80109f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80109f6:	eeb0 3a67 	vmov.f32	s6, s15
 80109fa:	bf08      	it	eq
 80109fc:	4613      	moveq	r3, r2
 80109fe:	eef0 2a47 	vmov.f32	s5, s14
 8010a02:	e791      	b.n	8010928 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010a04:	4576      	cmp	r6, lr
 8010a06:	dab5      	bge.n	8010974 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010a08:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010a0a:	fb06 2505 	mla	r5, r6, r5, r2
 8010a0e:	142d      	asrs	r5, r5, #16
 8010a10:	d4b0      	bmi.n	8010974 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010a12:	9e02      	ldr	r6, [sp, #8]
 8010a14:	42b5      	cmp	r5, r6
 8010a16:	daad      	bge.n	8010974 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010a18:	4699      	mov	r9, r3
 8010a1a:	46a2      	mov	sl, r4
 8010a1c:	f1b9 0f00 	cmp.w	r9, #0
 8010a20:	ddae      	ble.n	8010980 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010a22:	9f03      	ldr	r7, [sp, #12]
 8010a24:	1415      	asrs	r5, r2, #16
 8010a26:	140e      	asrs	r6, r1, #16
 8010a28:	fb0e 7505 	mla	r5, lr, r5, r7
 8010a2c:	f109 39ff 	add.w	r9, r9, #4294967295
 8010a30:	f815 8006 	ldrb.w	r8, [r5, r6]
 8010a34:	9d00      	ldr	r5, [sp, #0]
 8010a36:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010a3a:	eb05 0b08 	add.w	fp, r5, r8
 8010a3e:	f8ba 5000 	ldrh.w	r5, [sl]
 8010a42:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010a46:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010a4a:	122f      	asrs	r7, r5, #8
 8010a4c:	fb16 f60c 	smulbb	r6, r6, ip
 8010a50:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010a54:	fb07 6700 	mla	r7, r7, r0, r6
 8010a58:	10ee      	asrs	r6, r5, #3
 8010a5a:	fb1b fb0c 	smulbb	fp, fp, ip
 8010a5e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010a62:	fb06 b600 	mla	r6, r6, r0, fp
 8010a66:	b2b6      	uxth	r6, r6
 8010a68:	9604      	str	r6, [sp, #16]
 8010a6a:	9e00      	ldr	r6, [sp, #0]
 8010a6c:	00ed      	lsls	r5, r5, #3
 8010a6e:	f816 8008 	ldrb.w	r8, [r6, r8]
 8010a72:	b2ed      	uxtb	r5, r5
 8010a74:	fb15 f500 	smulbb	r5, r5, r0
 8010a78:	b2bf      	uxth	r7, r7
 8010a7a:	fb08 580c 	mla	r8, r8, ip, r5
 8010a7e:	fa1f f888 	uxth.w	r8, r8
 8010a82:	1c7d      	adds	r5, r7, #1
 8010a84:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010a88:	f108 0501 	add.w	r5, r8, #1
 8010a8c:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8010a90:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010a94:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010a98:	432f      	orrs	r7, r5
 8010a9a:	9d04      	ldr	r5, [sp, #16]
 8010a9c:	f105 0b01 	add.w	fp, r5, #1
 8010aa0:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010aa4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010aa6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010aaa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010aae:	4429      	add	r1, r5
 8010ab0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010ab2:	ea47 070b 	orr.w	r7, r7, fp
 8010ab6:	f82a 7b02 	strh.w	r7, [sl], #2
 8010aba:	442a      	add	r2, r5
 8010abc:	e7ae      	b.n	8010a1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 8010abe:	140e      	asrs	r6, r1, #16
 8010ac0:	d44b      	bmi.n	8010b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010ac2:	4576      	cmp	r6, lr
 8010ac4:	da49      	bge.n	8010b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010ac6:	1415      	asrs	r5, r2, #16
 8010ac8:	d447      	bmi.n	8010b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010aca:	9f02      	ldr	r7, [sp, #8]
 8010acc:	42bd      	cmp	r5, r7
 8010ace:	da44      	bge.n	8010b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010ad0:	9f03      	ldr	r7, [sp, #12]
 8010ad2:	fb0e 7505 	mla	r5, lr, r5, r7
 8010ad6:	f815 8006 	ldrb.w	r8, [r5, r6]
 8010ada:	9d00      	ldr	r5, [sp, #0]
 8010adc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010ae0:	eb05 0b08 	add.w	fp, r5, r8
 8010ae4:	f8b9 5000 	ldrh.w	r5, [r9]
 8010ae8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010aec:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010af0:	122f      	asrs	r7, r5, #8
 8010af2:	fb16 f60c 	smulbb	r6, r6, ip
 8010af6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010afa:	fb07 6700 	mla	r7, r7, r0, r6
 8010afe:	10ee      	asrs	r6, r5, #3
 8010b00:	fb1b fb0c 	smulbb	fp, fp, ip
 8010b04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010b08:	fb06 b600 	mla	r6, r6, r0, fp
 8010b0c:	b2b6      	uxth	r6, r6
 8010b0e:	9604      	str	r6, [sp, #16]
 8010b10:	9e00      	ldr	r6, [sp, #0]
 8010b12:	00ed      	lsls	r5, r5, #3
 8010b14:	f816 8008 	ldrb.w	r8, [r6, r8]
 8010b18:	b2ed      	uxtb	r5, r5
 8010b1a:	fb15 f500 	smulbb	r5, r5, r0
 8010b1e:	b2bf      	uxth	r7, r7
 8010b20:	fb08 580c 	mla	r8, r8, ip, r5
 8010b24:	fa1f f888 	uxth.w	r8, r8
 8010b28:	1c7d      	adds	r5, r7, #1
 8010b2a:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010b2e:	f108 0501 	add.w	r5, r8, #1
 8010b32:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8010b36:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010b3a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010b3e:	432f      	orrs	r7, r5
 8010b40:	9d04      	ldr	r5, [sp, #16]
 8010b42:	f105 0b01 	add.w	fp, r5, #1
 8010b46:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010b4a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010b4e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010b52:	ea47 070b 	orr.w	r7, r7, fp
 8010b56:	f8a9 7000 	strh.w	r7, [r9]
 8010b5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010b5c:	4429      	add	r1, r5
 8010b5e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010b60:	f109 0902 	add.w	r9, r9, #2
 8010b64:	442a      	add	r2, r5
 8010b66:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010b6a:	e705      	b.n	8010978 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8010b6c:	b007      	add	sp, #28
 8010b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010b74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b78:	b085      	sub	sp, #20
 8010b7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010b7e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010b80:	9203      	str	r2, [sp, #12]
 8010b82:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010b86:	6870      	ldr	r0, [r6, #4]
 8010b88:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8010b8a:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 8010b8e:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 8010b92:	9101      	str	r1, [sp, #4]
 8010b94:	fb00 2404 	mla	r4, r0, r4, r2
 8010b98:	6832      	ldr	r2, [r6, #0]
 8010b9a:	686e      	ldr	r6, [r5, #4]
 8010b9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010ba0:	682a      	ldr	r2, [r5, #0]
 8010ba2:	9202      	str	r2, [sp, #8]
 8010ba4:	3604      	adds	r6, #4
 8010ba6:	9a01      	ldr	r2, [sp, #4]
 8010ba8:	2a00      	cmp	r2, #0
 8010baa:	dc03      	bgt.n	8010bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 8010bac:	9a03      	ldr	r2, [sp, #12]
 8010bae:	2a00      	cmp	r2, #0
 8010bb0:	f340 80c7 	ble.w	8010d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 8010bb4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010bb6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010bba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010bbc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010bc0:	2b00      	cmp	r3, #0
 8010bc2:	dd0e      	ble.n	8010be2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010bc4:	1405      	asrs	r5, r0, #16
 8010bc6:	d405      	bmi.n	8010bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010bc8:	42bd      	cmp	r5, r7
 8010bca:	da03      	bge.n	8010bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010bcc:	1415      	asrs	r5, r2, #16
 8010bce:	d401      	bmi.n	8010bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010bd0:	4545      	cmp	r5, r8
 8010bd2:	db07      	blt.n	8010be4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010bd4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010bd6:	4428      	add	r0, r5
 8010bd8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010bda:	3b01      	subs	r3, #1
 8010bdc:	442a      	add	r2, r5
 8010bde:	3402      	adds	r4, #2
 8010be0:	e7ee      	b.n	8010bc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8010be2:	d010      	beq.n	8010c06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010be4:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010be6:	1e5d      	subs	r5, r3, #1
 8010be8:	fb01 0c05 	mla	ip, r1, r5, r0
 8010bec:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 8010bf0:	d545      	bpl.n	8010c7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8010bf2:	469e      	mov	lr, r3
 8010bf4:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 8010bf8:	f1be 0f00 	cmp.w	lr, #0
 8010bfc:	dc72      	bgt.n	8010ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 8010bfe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010c02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010c06:	9b01      	ldr	r3, [sp, #4]
 8010c08:	2b00      	cmp	r3, #0
 8010c0a:	f340 809a 	ble.w	8010d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 8010c0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010c12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010c16:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010c1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c1c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010c20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010c24:	eeb0 6a62 	vmov.f32	s12, s5
 8010c28:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010c2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c30:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010c34:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010c38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010c3c:	eeb0 6a43 	vmov.f32	s12, s6
 8010c40:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010c44:	ee12 2a90 	vmov	r2, s5
 8010c48:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010c4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c50:	ee13 2a10 	vmov	r2, s6
 8010c54:	9311      	str	r3, [sp, #68]	; 0x44
 8010c56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c58:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c5c:	9312      	str	r3, [sp, #72]	; 0x48
 8010c5e:	9b01      	ldr	r3, [sp, #4]
 8010c60:	9a03      	ldr	r2, [sp, #12]
 8010c62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c66:	3b01      	subs	r3, #1
 8010c68:	9301      	str	r3, [sp, #4]
 8010c6a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010c6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c70:	eeb0 3a67 	vmov.f32	s6, s15
 8010c74:	bf08      	it	eq
 8010c76:	4613      	moveq	r3, r2
 8010c78:	eef0 2a47 	vmov.f32	s5, s14
 8010c7c:	e793      	b.n	8010ba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 8010c7e:	45bc      	cmp	ip, r7
 8010c80:	dab7      	bge.n	8010bf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010c82:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010c84:	fb01 2505 	mla	r5, r1, r5, r2
 8010c88:	142d      	asrs	r5, r5, #16
 8010c8a:	d4b2      	bmi.n	8010bf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010c8c:	4545      	cmp	r5, r8
 8010c8e:	dab0      	bge.n	8010bf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010c90:	469e      	mov	lr, r3
 8010c92:	46a2      	mov	sl, r4
 8010c94:	f1be 0f00 	cmp.w	lr, #0
 8010c98:	ddb1      	ble.n	8010bfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010c9a:	9902      	ldr	r1, [sp, #8]
 8010c9c:	1415      	asrs	r5, r2, #16
 8010c9e:	fb07 1505 	mla	r5, r7, r5, r1
 8010ca2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8010ca6:	4928      	ldr	r1, [pc, #160]	; (8010d48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 8010ca8:	f815 c00c 	ldrb.w	ip, [r5, ip]
 8010cac:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8010cb0:	eb06 0b0c 	add.w	fp, r6, ip
 8010cb4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010cb8:	f89b 5001 	ldrb.w	r5, [fp, #1]
 8010cbc:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010cc0:	00ed      	lsls	r5, r5, #3
 8010cc2:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010cc6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010cca:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010ccc:	ea49 0505 	orr.w	r5, r9, r5
 8010cd0:	f816 900c 	ldrb.w	r9, [r6, ip]
 8010cd4:	4408      	add	r0, r1
 8010cd6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010cd8:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 8010cdc:	f82a 5b02 	strh.w	r5, [sl], #2
 8010ce0:	440a      	add	r2, r1
 8010ce2:	e7d7      	b.n	8010c94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 8010ce4:	ea5f 4c20 	movs.w	ip, r0, asr #16
 8010ce8:	d424      	bmi.n	8010d34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010cea:	45bc      	cmp	ip, r7
 8010cec:	da22      	bge.n	8010d34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010cee:	1415      	asrs	r5, r2, #16
 8010cf0:	d420      	bmi.n	8010d34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010cf2:	4545      	cmp	r5, r8
 8010cf4:	da1e      	bge.n	8010d34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010cf6:	9902      	ldr	r1, [sp, #8]
 8010cf8:	fb07 1505 	mla	r5, r7, r5, r1
 8010cfc:	f06f 0101 	mvn.w	r1, #1
 8010d00:	f815 c00c 	ldrb.w	ip, [r5, ip]
 8010d04:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8010d08:	eb06 050c 	add.w	r5, r6, ip
 8010d0c:	fb01 f90e 	mul.w	r9, r1, lr
 8010d10:	f895 a002 	ldrb.w	sl, [r5, #2]
 8010d14:	786d      	ldrb	r5, [r5, #1]
 8010d16:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8010d1a:	00ed      	lsls	r5, r5, #3
 8010d1c:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 8010d20:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010d24:	ea4a 0505 	orr.w	r5, sl, r5
 8010d28:	f816 a00c 	ldrb.w	sl, [r6, ip]
 8010d2c:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 8010d30:	f82b 5009 	strh.w	r5, [fp, r9]
 8010d34:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010d36:	4408      	add	r0, r1
 8010d38:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010d3a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010d3e:	440a      	add	r2, r1
 8010d40:	e75a      	b.n	8010bf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8010d42:	b005      	add	sp, #20
 8010d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d48:	fffff800 	.word	0xfffff800

08010d4c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d50:	b087      	sub	sp, #28
 8010d52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d56:	9204      	str	r2, [sp, #16]
 8010d58:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010d5c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010d5e:	9201      	str	r2, [sp, #4]
 8010d60:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010d64:	9205      	str	r2, [sp, #20]
 8010d66:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010d6a:	9100      	str	r1, [sp, #0]
 8010d6c:	6869      	ldr	r1, [r5, #4]
 8010d6e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8010d70:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 8010d74:	fb01 2404 	mla	r4, r1, r4, r2
 8010d78:	682a      	ldr	r2, [r5, #0]
 8010d7a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010d7e:	6802      	ldr	r2, [r0, #0]
 8010d80:	9202      	str	r2, [sp, #8]
 8010d82:	6842      	ldr	r2, [r0, #4]
 8010d84:	3204      	adds	r2, #4
 8010d86:	9203      	str	r2, [sp, #12]
 8010d88:	9a00      	ldr	r2, [sp, #0]
 8010d8a:	2a00      	cmp	r2, #0
 8010d8c:	dc03      	bgt.n	8010d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8010d8e:	9a04      	ldr	r2, [sp, #16]
 8010d90:	2a00      	cmp	r2, #0
 8010d92:	f340 812c 	ble.w	8010fee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8010d96:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010d98:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010d9c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010d9e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010da2:	2b00      	cmp	r3, #0
 8010da4:	dd0f      	ble.n	8010dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8010da6:	1402      	asrs	r2, r0, #16
 8010da8:	d406      	bmi.n	8010db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8010daa:	4572      	cmp	r2, lr
 8010dac:	da04      	bge.n	8010db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8010dae:	140a      	asrs	r2, r1, #16
 8010db0:	d402      	bmi.n	8010db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8010db2:	9d01      	ldr	r5, [sp, #4]
 8010db4:	42aa      	cmp	r2, r5
 8010db6:	db07      	blt.n	8010dc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 8010db8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010dba:	4410      	add	r0, r2
 8010dbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010dbe:	3b01      	subs	r3, #1
 8010dc0:	4411      	add	r1, r2
 8010dc2:	3402      	adds	r4, #2
 8010dc4:	e7ed      	b.n	8010da2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 8010dc6:	d00f      	beq.n	8010de8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010dc8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010dca:	1e5a      	subs	r2, r3, #1
 8010dcc:	fb05 0502 	mla	r5, r5, r2, r0
 8010dd0:	142d      	asrs	r5, r5, #16
 8010dd2:	d545      	bpl.n	8010e60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 8010dd4:	4699      	mov	r9, r3
 8010dd6:	46a0      	mov	r8, r4
 8010dd8:	f1b9 0f00 	cmp.w	r9, #0
 8010ddc:	f300 80a7 	bgt.w	8010f2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010de0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010de4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010de8:	9b00      	ldr	r3, [sp, #0]
 8010dea:	2b00      	cmp	r3, #0
 8010dec:	f340 80ff 	ble.w	8010fee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8010df0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010df4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010df8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010dfc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010dfe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010e02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010e06:	eeb0 6a62 	vmov.f32	s12, s5
 8010e0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010e0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010e16:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010e1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010e1e:	eeb0 6a43 	vmov.f32	s12, s6
 8010e22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010e26:	ee12 2a90 	vmov	r2, s5
 8010e2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010e2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e32:	ee13 2a10 	vmov	r2, s6
 8010e36:	9313      	str	r3, [sp, #76]	; 0x4c
 8010e38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e3e:	9314      	str	r3, [sp, #80]	; 0x50
 8010e40:	9b00      	ldr	r3, [sp, #0]
 8010e42:	9a04      	ldr	r2, [sp, #16]
 8010e44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e48:	3b01      	subs	r3, #1
 8010e4a:	9300      	str	r3, [sp, #0]
 8010e4c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010e50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e52:	eeb0 3a67 	vmov.f32	s6, s15
 8010e56:	bf08      	it	eq
 8010e58:	4613      	moveq	r3, r2
 8010e5a:	eef0 2a47 	vmov.f32	s5, s14
 8010e5e:	e793      	b.n	8010d88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 8010e60:	4575      	cmp	r5, lr
 8010e62:	dab7      	bge.n	8010dd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010e64:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010e66:	fb05 1202 	mla	r2, r5, r2, r1
 8010e6a:	1412      	asrs	r2, r2, #16
 8010e6c:	d4b2      	bmi.n	8010dd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010e6e:	9d01      	ldr	r5, [sp, #4]
 8010e70:	42aa      	cmp	r2, r5
 8010e72:	daaf      	bge.n	8010dd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010e74:	f04f 0800 	mov.w	r8, #0
 8010e78:	eba3 0208 	sub.w	r2, r3, r8
 8010e7c:	2a00      	cmp	r2, #0
 8010e7e:	ddaf      	ble.n	8010de0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8010e80:	9e02      	ldr	r6, [sp, #8]
 8010e82:	140a      	asrs	r2, r1, #16
 8010e84:	1405      	asrs	r5, r0, #16
 8010e86:	fb0e 6202 	mla	r2, lr, r2, r6
 8010e8a:	5d52      	ldrb	r2, [r2, r5]
 8010e8c:	9d03      	ldr	r5, [sp, #12]
 8010e8e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010e92:	0e2e      	lsrs	r6, r5, #24
 8010e94:	d044      	beq.n	8010f20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 8010e96:	9a05      	ldr	r2, [sp, #20]
 8010e98:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010e9c:	4356      	muls	r6, r2
 8010e9e:	1c72      	adds	r2, r6, #1
 8010ea0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010ea4:	1212      	asrs	r2, r2, #8
 8010ea6:	fa1f f982 	uxth.w	r9, r2
 8010eaa:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010eae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010eb2:	43d2      	mvns	r2, r2
 8010eb4:	b2d2      	uxtb	r2, r2
 8010eb6:	fb16 f609 	smulbb	r6, r6, r9
 8010eba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010ebe:	fb07 6702 	mla	r7, r7, r2, r6
 8010ec2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010ec6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010eca:	b2ed      	uxtb	r5, r5
 8010ecc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010ed0:	fa5f fc8c 	uxtb.w	ip, ip
 8010ed4:	fb15 f509 	smulbb	r5, r5, r9
 8010ed8:	fb0c 5502 	mla	r5, ip, r2, r5
 8010edc:	b2bf      	uxth	r7, r7
 8010ede:	fb1a fa09 	smulbb	sl, sl, r9
 8010ee2:	b2ad      	uxth	r5, r5
 8010ee4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010ee8:	fb06 a602 	mla	r6, r6, r2, sl
 8010eec:	1c7a      	adds	r2, r7, #1
 8010eee:	f105 0a01 	add.w	sl, r5, #1
 8010ef2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010ef6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010efa:	b2b6      	uxth	r6, r6
 8010efc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f00:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010f04:	ea47 070a 	orr.w	r7, r7, sl
 8010f08:	f106 0a01 	add.w	sl, r6, #1
 8010f0c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010f10:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f14:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010f18:	ea47 070a 	orr.w	r7, r7, sl
 8010f1c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010f20:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010f22:	4410      	add	r0, r2
 8010f24:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010f26:	f108 0801 	add.w	r8, r8, #1
 8010f2a:	4411      	add	r1, r2
 8010f2c:	e7a4      	b.n	8010e78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 8010f2e:	1405      	asrs	r5, r0, #16
 8010f30:	d454      	bmi.n	8010fdc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f32:	4575      	cmp	r5, lr
 8010f34:	da52      	bge.n	8010fdc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f36:	140a      	asrs	r2, r1, #16
 8010f38:	d450      	bmi.n	8010fdc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f3a:	9e01      	ldr	r6, [sp, #4]
 8010f3c:	42b2      	cmp	r2, r6
 8010f3e:	da4d      	bge.n	8010fdc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f40:	9e02      	ldr	r6, [sp, #8]
 8010f42:	fb0e 6202 	mla	r2, lr, r2, r6
 8010f46:	5d52      	ldrb	r2, [r2, r5]
 8010f48:	9d03      	ldr	r5, [sp, #12]
 8010f4a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010f4e:	0e2e      	lsrs	r6, r5, #24
 8010f50:	d044      	beq.n	8010fdc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f52:	9a05      	ldr	r2, [sp, #20]
 8010f54:	f8b8 c000 	ldrh.w	ip, [r8]
 8010f58:	4356      	muls	r6, r2
 8010f5a:	1c72      	adds	r2, r6, #1
 8010f5c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010f60:	1212      	asrs	r2, r2, #8
 8010f62:	fa1f fa82 	uxth.w	sl, r2
 8010f66:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010f6a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010f6e:	43d2      	mvns	r2, r2
 8010f70:	b2d2      	uxtb	r2, r2
 8010f72:	fb16 f60a 	smulbb	r6, r6, sl
 8010f76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010f7a:	fb07 6702 	mla	r7, r7, r2, r6
 8010f7e:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 8010f82:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010f86:	b2ed      	uxtb	r5, r5
 8010f88:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010f8c:	fa5f fc8c 	uxtb.w	ip, ip
 8010f90:	fb15 f50a 	smulbb	r5, r5, sl
 8010f94:	fb0c 5502 	mla	r5, ip, r2, r5
 8010f98:	b2bf      	uxth	r7, r7
 8010f9a:	fb1b fb0a 	smulbb	fp, fp, sl
 8010f9e:	b2ad      	uxth	r5, r5
 8010fa0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010fa4:	fb06 b602 	mla	r6, r6, r2, fp
 8010fa8:	1c7a      	adds	r2, r7, #1
 8010faa:	f105 0b01 	add.w	fp, r5, #1
 8010fae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010fb2:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010fb6:	b2b6      	uxth	r6, r6
 8010fb8:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8010fbc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010fc0:	ea47 070b 	orr.w	r7, r7, fp
 8010fc4:	f106 0b01 	add.w	fp, r6, #1
 8010fc8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010fcc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010fd0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010fd4:	ea47 070b 	orr.w	r7, r7, fp
 8010fd8:	f8a8 7000 	strh.w	r7, [r8]
 8010fdc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010fde:	4410      	add	r0, r2
 8010fe0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010fe2:	f108 0802 	add.w	r8, r8, #2
 8010fe6:	4411      	add	r1, r2
 8010fe8:	f109 39ff 	add.w	r9, r9, #4294967295
 8010fec:	e6f4      	b.n	8010dd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010fee:	b007      	add	sp, #28
 8010ff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010ff4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010ff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ff8:	b087      	sub	sp, #28
 8010ffa:	468b      	mov	fp, r1
 8010ffc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010ffe:	9205      	str	r2, [sp, #20]
 8011000:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011004:	9201      	str	r2, [sp, #4]
 8011006:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801100a:	6869      	ldr	r1, [r5, #4]
 801100c:	981a      	ldr	r0, [sp, #104]	; 0x68
 801100e:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8011012:	fb01 2404 	mla	r4, r1, r4, r2
 8011016:	682a      	ldr	r2, [r5, #0]
 8011018:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801101c:	6802      	ldr	r2, [r0, #0]
 801101e:	9203      	str	r2, [sp, #12]
 8011020:	6842      	ldr	r2, [r0, #4]
 8011022:	3204      	adds	r2, #4
 8011024:	9204      	str	r2, [sp, #16]
 8011026:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801102a:	f1bb 0f00 	cmp.w	fp, #0
 801102e:	dc03      	bgt.n	8011038 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8011030:	9a05      	ldr	r2, [sp, #20]
 8011032:	2a00      	cmp	r2, #0
 8011034:	f340 814a 	ble.w	80112cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8011038:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801103a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801103e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011040:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011044:	2b00      	cmp	r3, #0
 8011046:	dd0f      	ble.n	8011068 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011048:	1408      	asrs	r0, r1, #16
 801104a:	d406      	bmi.n	801105a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 801104c:	4540      	cmp	r0, r8
 801104e:	da04      	bge.n	801105a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011050:	1410      	asrs	r0, r2, #16
 8011052:	d402      	bmi.n	801105a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011054:	9d01      	ldr	r5, [sp, #4]
 8011056:	42a8      	cmp	r0, r5
 8011058:	db07      	blt.n	801106a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801105a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801105c:	4401      	add	r1, r0
 801105e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011060:	3b01      	subs	r3, #1
 8011062:	4402      	add	r2, r0
 8011064:	3402      	adds	r4, #2
 8011066:	e7ed      	b.n	8011044 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8011068:	d018      	beq.n	801109c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 801106a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801106c:	1e58      	subs	r0, r3, #1
 801106e:	fb05 1500 	mla	r5, r5, r0, r1
 8011072:	142d      	asrs	r5, r5, #16
 8011074:	d40a      	bmi.n	801108c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011076:	4545      	cmp	r5, r8
 8011078:	da08      	bge.n	801108c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801107a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801107c:	fb05 2000 	mla	r0, r5, r0, r2
 8011080:	1400      	asrs	r0, r0, #16
 8011082:	d403      	bmi.n	801108c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011084:	9d01      	ldr	r5, [sp, #4]
 8011086:	42a8      	cmp	r0, r5
 8011088:	f2c0 80b7 	blt.w	80111fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 801108c:	2600      	movs	r6, #0
 801108e:	1998      	adds	r0, r3, r6
 8011090:	2800      	cmp	r0, #0
 8011092:	dc3e      	bgt.n	8011112 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 8011094:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011098:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801109c:	f1bb 0f00 	cmp.w	fp, #0
 80110a0:	f340 8114 	ble.w	80112cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 80110a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80110a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80110ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80110b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110b2:	f1bb 0b01 	subs.w	fp, fp, #1
 80110b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80110ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80110be:	eeb0 6a62 	vmov.f32	s12, s5
 80110c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80110c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80110ce:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80110d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80110d6:	eeb0 6a43 	vmov.f32	s12, s6
 80110da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80110de:	ee12 2a90 	vmov	r2, s5
 80110e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80110e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80110ea:	ee13 2a10 	vmov	r2, s6
 80110ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110f2:	9313      	str	r3, [sp, #76]	; 0x4c
 80110f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80110fa:	9a05      	ldr	r2, [sp, #20]
 80110fc:	9314      	str	r3, [sp, #80]	; 0x50
 80110fe:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011102:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011104:	eeb0 3a67 	vmov.f32	s6, s15
 8011108:	bf08      	it	eq
 801110a:	4613      	moveq	r3, r2
 801110c:	eef0 2a47 	vmov.f32	s5, s14
 8011110:	e78b      	b.n	801102a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8011112:	140d      	asrs	r5, r1, #16
 8011114:	d459      	bmi.n	80111ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011116:	4545      	cmp	r5, r8
 8011118:	da57      	bge.n	80111ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801111a:	1410      	asrs	r0, r2, #16
 801111c:	d455      	bmi.n	80111ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801111e:	9f01      	ldr	r7, [sp, #4]
 8011120:	42b8      	cmp	r0, r7
 8011122:	da52      	bge.n	80111ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011124:	9f03      	ldr	r7, [sp, #12]
 8011126:	fb08 7000 	mla	r0, r8, r0, r7
 801112a:	5d40      	ldrb	r0, [r0, r5]
 801112c:	9d04      	ldr	r5, [sp, #16]
 801112e:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011132:	0e07      	lsrs	r7, r0, #24
 8011134:	2fff      	cmp	r7, #255	; 0xff
 8011136:	d04e      	beq.n	80111d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8011138:	b2fd      	uxtb	r5, r7
 801113a:	2f00      	cmp	r7, #0
 801113c:	d045      	beq.n	80111ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801113e:	f06f 0701 	mvn.w	r7, #1
 8011142:	4377      	muls	r7, r6
 8011144:	fa1f f985 	uxth.w	r9, r5
 8011148:	f834 e007 	ldrh.w	lr, [r4, r7]
 801114c:	9702      	str	r7, [sp, #8]
 801114e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011152:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011156:	43ed      	mvns	r5, r5
 8011158:	b2ed      	uxtb	r5, r5
 801115a:	fb17 f709 	smulbb	r7, r7, r9
 801115e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011162:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011166:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801116a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801116e:	b2c0      	uxtb	r0, r0
 8011170:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011174:	fa5f fe8e 	uxtb.w	lr, lr
 8011178:	fb10 f009 	smulbb	r0, r0, r9
 801117c:	fb0e 0005 	mla	r0, lr, r5, r0
 8011180:	b280      	uxth	r0, r0
 8011182:	fa1f fc8c 	uxth.w	ip, ip
 8011186:	fb1a fa09 	smulbb	sl, sl, r9
 801118a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801118e:	fb07 a705 	mla	r7, r7, r5, sl
 8011192:	f100 0a01 	add.w	sl, r0, #1
 8011196:	f10c 0501 	add.w	r5, ip, #1
 801119a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801119e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80111a2:	b2bf      	uxth	r7, r7
 80111a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80111a8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80111ac:	ea4c 0c0a 	orr.w	ip, ip, sl
 80111b0:	f107 0a01 	add.w	sl, r7, #1
 80111b4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80111b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80111bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80111c0:	9802      	ldr	r0, [sp, #8]
 80111c2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80111c6:	f824 c000 	strh.w	ip, [r4, r0]
 80111ca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80111cc:	4401      	add	r1, r0
 80111ce:	9814      	ldr	r0, [sp, #80]	; 0x50
 80111d0:	3e01      	subs	r6, #1
 80111d2:	4402      	add	r2, r0
 80111d4:	e75b      	b.n	801108e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80111d6:	f06f 0501 	mvn.w	r5, #1
 80111da:	fb05 f706 	mul.w	r7, r5, r6
 80111de:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80111e2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80111e6:	0945      	lsrs	r5, r0, #5
 80111e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80111ec:	ea4c 0505 	orr.w	r5, ip, r5
 80111f0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80111f4:	4305      	orrs	r5, r0
 80111f6:	53e5      	strh	r5, [r4, r7]
 80111f8:	e7e7      	b.n	80111ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80111fa:	f04f 0e00 	mov.w	lr, #0
 80111fe:	eba3 000e 	sub.w	r0, r3, lr
 8011202:	2800      	cmp	r0, #0
 8011204:	f77f af46 	ble.w	8011094 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 8011208:	9e03      	ldr	r6, [sp, #12]
 801120a:	1410      	asrs	r0, r2, #16
 801120c:	140d      	asrs	r5, r1, #16
 801120e:	fb08 6000 	mla	r0, r8, r0, r6
 8011212:	5d40      	ldrb	r0, [r0, r5]
 8011214:	9d04      	ldr	r5, [sp, #16]
 8011216:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801121a:	0e06      	lsrs	r6, r0, #24
 801121c:	2eff      	cmp	r6, #255	; 0xff
 801121e:	d048      	beq.n	80112b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8011220:	b2f5      	uxtb	r5, r6
 8011222:	2e00      	cmp	r6, #0
 8011224:	d03e      	beq.n	80112a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011226:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801122a:	fa1f f985 	uxth.w	r9, r5
 801122e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011232:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8011236:	43ed      	mvns	r5, r5
 8011238:	b2ed      	uxtb	r5, r5
 801123a:	fb16 f609 	smulbb	r6, r6, r9
 801123e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011242:	fb07 6705 	mla	r7, r7, r5, r6
 8011246:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801124a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801124e:	b2c0      	uxtb	r0, r0
 8011250:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011254:	fa5f fc8c 	uxtb.w	ip, ip
 8011258:	fb10 f009 	smulbb	r0, r0, r9
 801125c:	fb0c 0005 	mla	r0, ip, r5, r0
 8011260:	b2bf      	uxth	r7, r7
 8011262:	fb1a fa09 	smulbb	sl, sl, r9
 8011266:	b280      	uxth	r0, r0
 8011268:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801126c:	fb06 a605 	mla	r6, r6, r5, sl
 8011270:	1c7d      	adds	r5, r7, #1
 8011272:	f100 0a01 	add.w	sl, r0, #1
 8011276:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 801127a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801127e:	b2b6      	uxth	r6, r6
 8011280:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011284:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011288:	ea47 070a 	orr.w	r7, r7, sl
 801128c:	f106 0a01 	add.w	sl, r6, #1
 8011290:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011294:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011298:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801129c:	ea47 070a 	orr.w	r7, r7, sl
 80112a0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80112a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80112a6:	4401      	add	r1, r0
 80112a8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80112aa:	f10e 0e01 	add.w	lr, lr, #1
 80112ae:	4402      	add	r2, r0
 80112b0:	e7a5      	b.n	80111fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 80112b2:	4d08      	ldr	r5, [pc, #32]	; (80112d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 80112b4:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 80112b8:	0945      	lsrs	r5, r0, #5
 80112ba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80112be:	4335      	orrs	r5, r6
 80112c0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80112c4:	4305      	orrs	r5, r0
 80112c6:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 80112ca:	e7eb      	b.n	80112a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80112cc:	b007      	add	sp, #28
 80112ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112d2:	bf00      	nop
 80112d4:	fffff800 	.word	0xfffff800

080112d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80112d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112dc:	b087      	sub	sp, #28
 80112de:	468b      	mov	fp, r1
 80112e0:	9204      	str	r2, [sp, #16]
 80112e2:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80112e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80112e8:	9201      	str	r2, [sp, #4]
 80112ea:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 80112ee:	9205      	str	r2, [sp, #20]
 80112f0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80112f4:	6869      	ldr	r1, [r5, #4]
 80112f6:	981a      	ldr	r0, [sp, #104]	; 0x68
 80112f8:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 80112fc:	fb01 2404 	mla	r4, r1, r4, r2
 8011300:	682a      	ldr	r2, [r5, #0]
 8011302:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011306:	6802      	ldr	r2, [r0, #0]
 8011308:	9202      	str	r2, [sp, #8]
 801130a:	6842      	ldr	r2, [r0, #4]
 801130c:	9203      	str	r2, [sp, #12]
 801130e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011312:	f1bb 0f00 	cmp.w	fp, #0
 8011316:	dc03      	bgt.n	8011320 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8011318:	9a04      	ldr	r2, [sp, #16]
 801131a:	2a00      	cmp	r2, #0
 801131c:	f340 8136 	ble.w	801158c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8011320:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011322:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011326:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011328:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801132c:	2b00      	cmp	r3, #0
 801132e:	dd0f      	ble.n	8011350 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011330:	1408      	asrs	r0, r1, #16
 8011332:	d406      	bmi.n	8011342 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011334:	4540      	cmp	r0, r8
 8011336:	da04      	bge.n	8011342 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011338:	1410      	asrs	r0, r2, #16
 801133a:	d402      	bmi.n	8011342 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801133c:	9d01      	ldr	r5, [sp, #4]
 801133e:	42a8      	cmp	r0, r5
 8011340:	db07      	blt.n	8011352 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8011342:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011344:	4401      	add	r1, r0
 8011346:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011348:	3b01      	subs	r3, #1
 801134a:	4402      	add	r2, r0
 801134c:	3402      	adds	r4, #2
 801134e:	e7ed      	b.n	801132c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8011350:	d00f      	beq.n	8011372 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8011352:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011354:	1e58      	subs	r0, r3, #1
 8011356:	fb05 1500 	mla	r5, r5, r0, r1
 801135a:	142d      	asrs	r5, r5, #16
 801135c:	d544      	bpl.n	80113e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 801135e:	9300      	str	r3, [sp, #0]
 8011360:	46a2      	mov	sl, r4
 8011362:	9800      	ldr	r0, [sp, #0]
 8011364:	2800      	cmp	r0, #0
 8011366:	f300 80ab 	bgt.w	80114c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 801136a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801136e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011372:	f1bb 0f00 	cmp.w	fp, #0
 8011376:	f340 8109 	ble.w	801158c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801137a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801137e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011382:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011386:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011388:	f1bb 0b01 	subs.w	fp, fp, #1
 801138c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011390:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011394:	eeb0 6a62 	vmov.f32	s12, s5
 8011398:	ee61 7a27 	vmul.f32	s15, s2, s15
 801139c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113a4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80113a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80113ac:	eeb0 6a43 	vmov.f32	s12, s6
 80113b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80113b4:	ee12 2a90 	vmov	r2, s5
 80113b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80113bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80113c0:	ee13 2a10 	vmov	r2, s6
 80113c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80113ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80113cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80113d0:	9a04      	ldr	r2, [sp, #16]
 80113d2:	9314      	str	r3, [sp, #80]	; 0x50
 80113d4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80113d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80113da:	eeb0 3a67 	vmov.f32	s6, s15
 80113de:	bf08      	it	eq
 80113e0:	4613      	moveq	r3, r2
 80113e2:	eef0 2a47 	vmov.f32	s5, s14
 80113e6:	e794      	b.n	8011312 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 80113e8:	4545      	cmp	r5, r8
 80113ea:	dab8      	bge.n	801135e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 80113ec:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80113ee:	fb05 2000 	mla	r0, r5, r0, r2
 80113f2:	1400      	asrs	r0, r0, #16
 80113f4:	d4b3      	bmi.n	801135e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 80113f6:	9d01      	ldr	r5, [sp, #4]
 80113f8:	42a8      	cmp	r0, r5
 80113fa:	dab0      	bge.n	801135e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 80113fc:	f04f 0900 	mov.w	r9, #0
 8011400:	eba3 0009 	sub.w	r0, r3, r9
 8011404:	2800      	cmp	r0, #0
 8011406:	ddb0      	ble.n	801136a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011408:	140d      	asrs	r5, r1, #16
 801140a:	1410      	asrs	r0, r2, #16
 801140c:	fb08 5000 	mla	r0, r8, r0, r5
 8011410:	9d03      	ldr	r5, [sp, #12]
 8011412:	5c2e      	ldrb	r6, [r5, r0]
 8011414:	2e00      	cmp	r6, #0
 8011416:	d04c      	beq.n	80114b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 8011418:	9d02      	ldr	r5, [sp, #8]
 801141a:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 801141e:	9805      	ldr	r0, [sp, #20]
 8011420:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 8011424:	4346      	muls	r6, r0
 8011426:	1c70      	adds	r0, r6, #1
 8011428:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 801142c:	1200      	asrs	r0, r0, #8
 801142e:	b287      	uxth	r7, r0
 8011430:	122e      	asrs	r6, r5, #8
 8011432:	43c0      	mvns	r0, r0
 8011434:	b2c0      	uxtb	r0, r0
 8011436:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801143a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801143e:	fb16 f600 	smulbb	r6, r6, r0
 8011442:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011446:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801144a:	00ed      	lsls	r5, r5, #3
 801144c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011450:	b2ed      	uxtb	r5, r5
 8011452:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011456:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801145a:	fb15 f500 	smulbb	r5, r5, r0
 801145e:	fa5f fe8e 	uxtb.w	lr, lr
 8011462:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011466:	fb0e 5507 	mla	r5, lr, r7, r5
 801146a:	fb1a fa00 	smulbb	sl, sl, r0
 801146e:	fa1f fc8c 	uxth.w	ip, ip
 8011472:	b2ad      	uxth	r5, r5
 8011474:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011478:	fb06 a607 	mla	r6, r6, r7, sl
 801147c:	f10c 0001 	add.w	r0, ip, #1
 8011480:	f105 0a01 	add.w	sl, r5, #1
 8011484:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8011488:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801148c:	b2b6      	uxth	r6, r6
 801148e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011492:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011496:	ea4c 0c0a 	orr.w	ip, ip, sl
 801149a:	f106 0a01 	add.w	sl, r6, #1
 801149e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80114a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80114a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80114aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80114ae:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 80114b2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80114b4:	4401      	add	r1, r0
 80114b6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80114b8:	f109 0901 	add.w	r9, r9, #1
 80114bc:	4402      	add	r2, r0
 80114be:	e79f      	b.n	8011400 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 80114c0:	1408      	asrs	r0, r1, #16
 80114c2:	d459      	bmi.n	8011578 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80114c4:	4540      	cmp	r0, r8
 80114c6:	da57      	bge.n	8011578 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80114c8:	1415      	asrs	r5, r2, #16
 80114ca:	d455      	bmi.n	8011578 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80114cc:	9e01      	ldr	r6, [sp, #4]
 80114ce:	42b5      	cmp	r5, r6
 80114d0:	da52      	bge.n	8011578 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80114d2:	fb08 0005 	mla	r0, r8, r5, r0
 80114d6:	9d03      	ldr	r5, [sp, #12]
 80114d8:	5c2e      	ldrb	r6, [r5, r0]
 80114da:	2e00      	cmp	r6, #0
 80114dc:	d04c      	beq.n	8011578 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80114de:	9d02      	ldr	r5, [sp, #8]
 80114e0:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 80114e4:	9805      	ldr	r0, [sp, #20]
 80114e6:	f8ba 5000 	ldrh.w	r5, [sl]
 80114ea:	4346      	muls	r6, r0
 80114ec:	1c70      	adds	r0, r6, #1
 80114ee:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 80114f2:	1200      	asrs	r0, r0, #8
 80114f4:	b287      	uxth	r7, r0
 80114f6:	122e      	asrs	r6, r5, #8
 80114f8:	43c0      	mvns	r0, r0
 80114fa:	b2c0      	uxtb	r0, r0
 80114fc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011500:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011504:	fb16 f600 	smulbb	r6, r6, r0
 8011508:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801150c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011510:	00ed      	lsls	r5, r5, #3
 8011512:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011516:	b2ed      	uxtb	r5, r5
 8011518:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801151c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011520:	fb15 f500 	smulbb	r5, r5, r0
 8011524:	fa5f fe8e 	uxtb.w	lr, lr
 8011528:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801152c:	fb0e 5507 	mla	r5, lr, r7, r5
 8011530:	fb19 f900 	smulbb	r9, r9, r0
 8011534:	fa1f fc8c 	uxth.w	ip, ip
 8011538:	b2ad      	uxth	r5, r5
 801153a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801153e:	fb06 9607 	mla	r6, r6, r7, r9
 8011542:	f10c 0001 	add.w	r0, ip, #1
 8011546:	f105 0901 	add.w	r9, r5, #1
 801154a:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 801154e:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 8011552:	b2b6      	uxth	r6, r6
 8011554:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8011558:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801155c:	ea4c 0c09 	orr.w	ip, ip, r9
 8011560:	f106 0901 	add.w	r9, r6, #1
 8011564:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8011568:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801156c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011570:	ea4c 0c09 	orr.w	ip, ip, r9
 8011574:	f8aa c000 	strh.w	ip, [sl]
 8011578:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801157a:	4401      	add	r1, r0
 801157c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801157e:	4402      	add	r2, r0
 8011580:	9800      	ldr	r0, [sp, #0]
 8011582:	3801      	subs	r0, #1
 8011584:	f10a 0a02 	add.w	sl, sl, #2
 8011588:	9000      	str	r0, [sp, #0]
 801158a:	e6ea      	b.n	8011362 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 801158c:	b007      	add	sp, #28
 801158e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011592 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011592:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011596:	b087      	sub	sp, #28
 8011598:	468b      	mov	fp, r1
 801159a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801159c:	9205      	str	r2, [sp, #20]
 801159e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80115a2:	9202      	str	r2, [sp, #8]
 80115a4:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80115a8:	6869      	ldr	r1, [r5, #4]
 80115aa:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 80115ac:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 80115b0:	fb01 2000 	mla	r0, r1, r0, r2
 80115b4:	682a      	ldr	r2, [r5, #0]
 80115b6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80115ba:	6822      	ldr	r2, [r4, #0]
 80115bc:	9201      	str	r2, [sp, #4]
 80115be:	6862      	ldr	r2, [r4, #4]
 80115c0:	9204      	str	r2, [sp, #16]
 80115c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80115c6:	f1bb 0f00 	cmp.w	fp, #0
 80115ca:	dc03      	bgt.n	80115d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 80115cc:	9a05      	ldr	r2, [sp, #20]
 80115ce:	2a00      	cmp	r2, #0
 80115d0:	f340 813d 	ble.w	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 80115d4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80115d6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80115da:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80115dc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80115e0:	2b00      	cmp	r3, #0
 80115e2:	dd0f      	ble.n	8011604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80115e4:	140c      	asrs	r4, r1, #16
 80115e6:	d406      	bmi.n	80115f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80115e8:	454c      	cmp	r4, r9
 80115ea:	da04      	bge.n	80115f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80115ec:	1414      	asrs	r4, r2, #16
 80115ee:	d402      	bmi.n	80115f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80115f0:	9d02      	ldr	r5, [sp, #8]
 80115f2:	42ac      	cmp	r4, r5
 80115f4:	db07      	blt.n	8011606 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80115f6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80115f8:	4421      	add	r1, r4
 80115fa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80115fc:	3b01      	subs	r3, #1
 80115fe:	4422      	add	r2, r4
 8011600:	3002      	adds	r0, #2
 8011602:	e7ed      	b.n	80115e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 8011604:	d018      	beq.n	8011638 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 8011606:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011608:	1e5c      	subs	r4, r3, #1
 801160a:	fb05 1504 	mla	r5, r5, r4, r1
 801160e:	142d      	asrs	r5, r5, #16
 8011610:	d40a      	bmi.n	8011628 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8011612:	454d      	cmp	r5, r9
 8011614:	da08      	bge.n	8011628 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8011616:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011618:	fb05 2404 	mla	r4, r5, r4, r2
 801161c:	1424      	asrs	r4, r4, #16
 801161e:	d403      	bmi.n	8011628 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8011620:	9d02      	ldr	r5, [sp, #8]
 8011622:	42ac      	cmp	r4, r5
 8011624:	f2c0 80ae 	blt.w	8011784 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 8011628:	2600      	movs	r6, #0
 801162a:	199c      	adds	r4, r3, r6
 801162c:	2c00      	cmp	r4, #0
 801162e:	dc3e      	bgt.n	80116ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8011630:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011634:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011638:	f1bb 0f00 	cmp.w	fp, #0
 801163c:	f340 8107 	ble.w	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8011640:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011644:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011648:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801164c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801164e:	f1bb 0b01 	subs.w	fp, fp, #1
 8011652:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011656:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801165a:	eeb0 6a62 	vmov.f32	s12, s5
 801165e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011662:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011666:	ee77 2a62 	vsub.f32	s5, s14, s5
 801166a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801166e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011672:	eeb0 6a43 	vmov.f32	s12, s6
 8011676:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801167a:	ee12 2a90 	vmov	r2, s5
 801167e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011682:	fb92 f3f3 	sdiv	r3, r2, r3
 8011686:	ee13 2a10 	vmov	r2, s6
 801168a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801168e:	9313      	str	r3, [sp, #76]	; 0x4c
 8011690:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011692:	fb92 f3f3 	sdiv	r3, r2, r3
 8011696:	9a05      	ldr	r2, [sp, #20]
 8011698:	9314      	str	r3, [sp, #80]	; 0x50
 801169a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801169e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80116a0:	eeb0 3a67 	vmov.f32	s6, s15
 80116a4:	bf08      	it	eq
 80116a6:	4613      	moveq	r3, r2
 80116a8:	eef0 2a47 	vmov.f32	s5, s14
 80116ac:	e78b      	b.n	80115c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 80116ae:	140c      	asrs	r4, r1, #16
 80116b0:	d45a      	bmi.n	8011768 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80116b2:	454c      	cmp	r4, r9
 80116b4:	da58      	bge.n	8011768 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80116b6:	1415      	asrs	r5, r2, #16
 80116b8:	d456      	bmi.n	8011768 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80116ba:	9f02      	ldr	r7, [sp, #8]
 80116bc:	42bd      	cmp	r5, r7
 80116be:	da53      	bge.n	8011768 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80116c0:	fb09 4505 	mla	r5, r9, r5, r4
 80116c4:	9c04      	ldr	r4, [sp, #16]
 80116c6:	5d64      	ldrb	r4, [r4, r5]
 80116c8:	2cff      	cmp	r4, #255	; 0xff
 80116ca:	d053      	beq.n	8011774 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 80116cc:	2c00      	cmp	r4, #0
 80116ce:	d04b      	beq.n	8011768 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80116d0:	9f01      	ldr	r7, [sp, #4]
 80116d2:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 80116d6:	f06f 0501 	mvn.w	r5, #1
 80116da:	4375      	muls	r5, r6
 80116dc:	9503      	str	r5, [sp, #12]
 80116de:	5b45      	ldrh	r5, [r0, r5]
 80116e0:	fa1f fc84 	uxth.w	ip, r4
 80116e4:	122f      	asrs	r7, r5, #8
 80116e6:	43e4      	mvns	r4, r4
 80116e8:	b2e4      	uxtb	r4, r4
 80116ea:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80116ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80116f2:	fb17 f704 	smulbb	r7, r7, r4
 80116f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80116fa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80116fe:	00ed      	lsls	r5, r5, #3
 8011700:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8011704:	b2ed      	uxtb	r5, r5
 8011706:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801170a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801170e:	fb15 f504 	smulbb	r5, r5, r4
 8011712:	fa5f f888 	uxtb.w	r8, r8
 8011716:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801171a:	fb08 550c 	mla	r5, r8, ip, r5
 801171e:	fb1a fa04 	smulbb	sl, sl, r4
 8011722:	fa1f fe8e 	uxth.w	lr, lr
 8011726:	b2ad      	uxth	r5, r5
 8011728:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801172c:	fb07 a70c 	mla	r7, r7, ip, sl
 8011730:	f10e 0401 	add.w	r4, lr, #1
 8011734:	f105 0a01 	add.w	sl, r5, #1
 8011738:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801173c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011740:	b2bf      	uxth	r7, r7
 8011742:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011746:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801174a:	ea4e 0e0a 	orr.w	lr, lr, sl
 801174e:	f107 0a01 	add.w	sl, r7, #1
 8011752:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011756:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801175a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801175e:	9c03      	ldr	r4, [sp, #12]
 8011760:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011764:	f820 e004 	strh.w	lr, [r0, r4]
 8011768:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801176a:	4421      	add	r1, r4
 801176c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801176e:	3e01      	subs	r6, #1
 8011770:	4422      	add	r2, r4
 8011772:	e75a      	b.n	801162a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011774:	9c01      	ldr	r4, [sp, #4]
 8011776:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801177a:	f06f 0401 	mvn.w	r4, #1
 801177e:	4374      	muls	r4, r6
 8011780:	5305      	strh	r5, [r0, r4]
 8011782:	e7f1      	b.n	8011768 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011784:	f04f 0800 	mov.w	r8, #0
 8011788:	eba3 0408 	sub.w	r4, r3, r8
 801178c:	2c00      	cmp	r4, #0
 801178e:	f77f af4f 	ble.w	8011630 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8011792:	140c      	asrs	r4, r1, #16
 8011794:	1415      	asrs	r5, r2, #16
 8011796:	fb09 4505 	mla	r5, r9, r5, r4
 801179a:	9c04      	ldr	r4, [sp, #16]
 801179c:	5d64      	ldrb	r4, [r4, r5]
 801179e:	2cff      	cmp	r4, #255	; 0xff
 80117a0:	d04f      	beq.n	8011842 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80117a2:	2c00      	cmp	r4, #0
 80117a4:	d046      	beq.n	8011834 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80117a6:	9e01      	ldr	r6, [sp, #4]
 80117a8:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80117ac:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 80117b0:	b2a7      	uxth	r7, r4
 80117b2:	122e      	asrs	r6, r5, #8
 80117b4:	43e4      	mvns	r4, r4
 80117b6:	b2e4      	uxtb	r4, r4
 80117b8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80117bc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80117c0:	fb16 f604 	smulbb	r6, r6, r4
 80117c4:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80117c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80117cc:	00ed      	lsls	r5, r5, #3
 80117ce:	fb0c 6c07 	mla	ip, ip, r7, r6
 80117d2:	b2ed      	uxtb	r5, r5
 80117d4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80117d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80117dc:	fb15 f504 	smulbb	r5, r5, r4
 80117e0:	fa5f fe8e 	uxtb.w	lr, lr
 80117e4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80117e8:	fb0e 5507 	mla	r5, lr, r7, r5
 80117ec:	fb1a fa04 	smulbb	sl, sl, r4
 80117f0:	fa1f fc8c 	uxth.w	ip, ip
 80117f4:	b2ad      	uxth	r5, r5
 80117f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80117fa:	fb06 a607 	mla	r6, r6, r7, sl
 80117fe:	f10c 0401 	add.w	r4, ip, #1
 8011802:	f105 0a01 	add.w	sl, r5, #1
 8011806:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801180a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801180e:	b2b6      	uxth	r6, r6
 8011810:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011814:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011818:	ea4c 0c0a 	orr.w	ip, ip, sl
 801181c:	f106 0a01 	add.w	sl, r6, #1
 8011820:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011824:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011828:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801182c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011830:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 8011834:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011836:	4421      	add	r1, r4
 8011838:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801183a:	f108 0801 	add.w	r8, r8, #1
 801183e:	4422      	add	r2, r4
 8011840:	e7a2      	b.n	8011788 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011842:	9c01      	ldr	r4, [sp, #4]
 8011844:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8011848:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 801184c:	e7f2      	b.n	8011834 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 801184e:	b007      	add	sp, #28
 8011850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011854 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011858:	b085      	sub	sp, #20
 801185a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801185c:	9203      	str	r2, [sp, #12]
 801185e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8011862:	9201      	str	r2, [sp, #4]
 8011864:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011868:	9100      	str	r1, [sp, #0]
 801186a:	6841      	ldr	r1, [r0, #4]
 801186c:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 8011870:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 8011874:	fb01 2404 	mla	r4, r1, r4, r2
 8011878:	6802      	ldr	r2, [r0, #0]
 801187a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801187e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8011880:	fa1f fe85 	uxth.w	lr, r5
 8011884:	6812      	ldr	r2, [r2, #0]
 8011886:	9202      	str	r2, [sp, #8]
 8011888:	43ed      	mvns	r5, r5
 801188a:	b2ed      	uxtb	r5, r5
 801188c:	9a00      	ldr	r2, [sp, #0]
 801188e:	2a00      	cmp	r2, #0
 8011890:	dc03      	bgt.n	801189a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8011892:	9a03      	ldr	r2, [sp, #12]
 8011894:	2a00      	cmp	r2, #0
 8011896:	f340 8117 	ble.w	8011ac8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 801189a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801189c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80118a0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80118a2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80118a6:	2b00      	cmp	r3, #0
 80118a8:	dd0f      	ble.n	80118ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80118aa:	1408      	asrs	r0, r1, #16
 80118ac:	d406      	bmi.n	80118bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80118ae:	4540      	cmp	r0, r8
 80118b0:	da04      	bge.n	80118bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80118b2:	1410      	asrs	r0, r2, #16
 80118b4:	d402      	bmi.n	80118bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80118b6:	9e01      	ldr	r6, [sp, #4]
 80118b8:	42b0      	cmp	r0, r6
 80118ba:	db07      	blt.n	80118cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80118bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80118be:	4401      	add	r1, r0
 80118c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80118c2:	3b01      	subs	r3, #1
 80118c4:	4402      	add	r2, r0
 80118c6:	3402      	adds	r4, #2
 80118c8:	e7ed      	b.n	80118a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 80118ca:	d069      	beq.n	80119a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 80118cc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80118ce:	1e58      	subs	r0, r3, #1
 80118d0:	fb06 1600 	mla	r6, r6, r0, r1
 80118d4:	1436      	asrs	r6, r6, #16
 80118d6:	d459      	bmi.n	801198c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80118d8:	4546      	cmp	r6, r8
 80118da:	da57      	bge.n	801198c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80118dc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80118de:	fb06 2000 	mla	r0, r6, r0, r2
 80118e2:	1400      	asrs	r0, r0, #16
 80118e4:	d452      	bmi.n	801198c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80118e6:	9e01      	ldr	r6, [sp, #4]
 80118e8:	42b0      	cmp	r0, r6
 80118ea:	da4f      	bge.n	801198c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 80118ec:	469a      	mov	sl, r3
 80118ee:	46a3      	mov	fp, r4
 80118f0:	f1ba 0f00 	cmp.w	sl, #0
 80118f4:	dd50      	ble.n	8011998 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 80118f6:	140e      	asrs	r6, r1, #16
 80118f8:	1410      	asrs	r0, r2, #16
 80118fa:	fb08 6000 	mla	r0, r8, r0, r6
 80118fe:	9e02      	ldr	r6, [sp, #8]
 8011900:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8011904:	f8bb 6000 	ldrh.w	r6, [fp]
 8011908:	1237      	asrs	r7, r6, #8
 801190a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801190e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011912:	fb17 f705 	smulbb	r7, r7, r5
 8011916:	ea4f 09e6 	mov.w	r9, r6, asr #3
 801191a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801191e:	00f6      	lsls	r6, r6, #3
 8011920:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8011924:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011928:	10c7      	asrs	r7, r0, #3
 801192a:	b2f6      	uxtb	r6, r6
 801192c:	00c0      	lsls	r0, r0, #3
 801192e:	fb19 f905 	smulbb	r9, r9, r5
 8011932:	fb16 f605 	smulbb	r6, r6, r5
 8011936:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801193a:	b2c0      	uxtb	r0, r0
 801193c:	fa1f fc8c 	uxth.w	ip, ip
 8011940:	fb07 970e 	mla	r7, r7, lr, r9
 8011944:	fb00 600e 	mla	r0, r0, lr, r6
 8011948:	b280      	uxth	r0, r0
 801194a:	b2bf      	uxth	r7, r7
 801194c:	f10c 0601 	add.w	r6, ip, #1
 8011950:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8011954:	f107 0901 	add.w	r9, r7, #1
 8011958:	1c46      	adds	r6, r0, #1
 801195a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801195e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011962:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011964:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011968:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801196c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011970:	ea4c 0c06 	orr.w	ip, ip, r6
 8011974:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011978:	4401      	add	r1, r0
 801197a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801197c:	ea4c 0c09 	orr.w	ip, ip, r9
 8011980:	f82b cb02 	strh.w	ip, [fp], #2
 8011984:	4402      	add	r2, r0
 8011986:	f10a 3aff 	add.w	sl, sl, #4294967295
 801198a:	e7b1      	b.n	80118f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801198c:	f04f 0900 	mov.w	r9, #0
 8011990:	eb03 0009 	add.w	r0, r3, r9
 8011994:	2800      	cmp	r0, #0
 8011996:	dc41      	bgt.n	8011a1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 8011998:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801199c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80119a0:	9b00      	ldr	r3, [sp, #0]
 80119a2:	2b00      	cmp	r3, #0
 80119a4:	f340 8090 	ble.w	8011ac8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80119a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80119ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80119b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80119b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80119b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80119ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80119be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80119c2:	eef0 6a62 	vmov.f32	s13, s5
 80119c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80119ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80119ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80119d2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80119d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80119da:	eef0 6a43 	vmov.f32	s13, s6
 80119de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80119e2:	ee12 2a90 	vmov	r2, s5
 80119e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80119ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80119ee:	ee13 2a10 	vmov	r2, s6
 80119f2:	9311      	str	r3, [sp, #68]	; 0x44
 80119f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80119f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80119fa:	9312      	str	r3, [sp, #72]	; 0x48
 80119fc:	9b00      	ldr	r3, [sp, #0]
 80119fe:	9a03      	ldr	r2, [sp, #12]
 8011a00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011a04:	3b01      	subs	r3, #1
 8011a06:	9300      	str	r3, [sp, #0]
 8011a08:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8011a0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a0e:	eeb0 3a67 	vmov.f32	s6, s15
 8011a12:	bf08      	it	eq
 8011a14:	4613      	moveq	r3, r2
 8011a16:	eef0 2a47 	vmov.f32	s5, s14
 8011a1a:	e737      	b.n	801188c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 8011a1c:	140e      	asrs	r6, r1, #16
 8011a1e:	d44c      	bmi.n	8011aba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011a20:	4546      	cmp	r6, r8
 8011a22:	da4a      	bge.n	8011aba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011a24:	1410      	asrs	r0, r2, #16
 8011a26:	d448      	bmi.n	8011aba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011a28:	9f01      	ldr	r7, [sp, #4]
 8011a2a:	42b8      	cmp	r0, r7
 8011a2c:	da45      	bge.n	8011aba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011a2e:	fb08 6000 	mla	r0, r8, r0, r6
 8011a32:	9e02      	ldr	r6, [sp, #8]
 8011a34:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8011a38:	f06f 0601 	mvn.w	r6, #1
 8011a3c:	fb06 fb09 	mul.w	fp, r6, r9
 8011a40:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011a44:	f834 600b 	ldrh.w	r6, [r4, fp]
 8011a48:	1237      	asrs	r7, r6, #8
 8011a4a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011a4e:	fb17 f705 	smulbb	r7, r7, r5
 8011a52:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 8011a56:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011a5a:	00f6      	lsls	r6, r6, #3
 8011a5c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8011a60:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011a64:	10c7      	asrs	r7, r0, #3
 8011a66:	b2f6      	uxtb	r6, r6
 8011a68:	00c0      	lsls	r0, r0, #3
 8011a6a:	fb1a fa05 	smulbb	sl, sl, r5
 8011a6e:	fb16 f605 	smulbb	r6, r6, r5
 8011a72:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011a76:	b2c0      	uxtb	r0, r0
 8011a78:	fa1f fc8c 	uxth.w	ip, ip
 8011a7c:	fb07 a70e 	mla	r7, r7, lr, sl
 8011a80:	fb00 600e 	mla	r0, r0, lr, r6
 8011a84:	b2bf      	uxth	r7, r7
 8011a86:	b280      	uxth	r0, r0
 8011a88:	f10c 0601 	add.w	r6, ip, #1
 8011a8c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8011a90:	f107 0a01 	add.w	sl, r7, #1
 8011a94:	1c46      	adds	r6, r0, #1
 8011a96:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8011a9a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011a9e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011aa2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011aa6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011aaa:	ea4c 0c06 	orr.w	ip, ip, r6
 8011aae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011ab2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011ab6:	f824 c00b 	strh.w	ip, [r4, fp]
 8011aba:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011abc:	4401      	add	r1, r0
 8011abe:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011ac0:	f109 39ff 	add.w	r9, r9, #4294967295
 8011ac4:	4402      	add	r2, r0
 8011ac6:	e763      	b.n	8011990 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 8011ac8:	b005      	add	sp, #20
 8011aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011ace <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011ace:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ad2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011ad4:	9201      	str	r2, [sp, #4]
 8011ad6:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 8011ada:	6844      	ldr	r4, [r0, #4]
 8011adc:	6800      	ldr	r0, [r0, #0]
 8011ade:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 8011ae2:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 8011ae6:	fb04 2505 	mla	r5, r4, r5, r2
 8011aea:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011aee:	9816      	ldr	r0, [sp, #88]	; 0x58
 8011af0:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 8011af4:	6802      	ldr	r2, [r0, #0]
 8011af6:	9200      	str	r2, [sp, #0]
 8011af8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011afc:	2900      	cmp	r1, #0
 8011afe:	dc03      	bgt.n	8011b08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8011b00:	9a01      	ldr	r2, [sp, #4]
 8011b02:	2a00      	cmp	r2, #0
 8011b04:	f340 8095 	ble.w	8011c32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8011b08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011b0a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8011b0e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011b10:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011b14:	2b00      	cmp	r3, #0
 8011b16:	dd0e      	ble.n	8011b36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8011b18:	ea5f 4824 	movs.w	r8, r4, asr #16
 8011b1c:	d406      	bmi.n	8011b2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8011b1e:	45e0      	cmp	r8, ip
 8011b20:	da04      	bge.n	8011b2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8011b22:	ea5f 4820 	movs.w	r8, r0, asr #16
 8011b26:	d401      	bmi.n	8011b2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8011b28:	45f0      	cmp	r8, lr
 8011b2a:	db05      	blt.n	8011b38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011b2c:	443c      	add	r4, r7
 8011b2e:	4430      	add	r0, r6
 8011b30:	3b01      	subs	r3, #1
 8011b32:	3502      	adds	r5, #2
 8011b34:	e7ee      	b.n	8011b14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8011b36:	d010      	beq.n	8011b5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8011b38:	f103 38ff 	add.w	r8, r3, #4294967295
 8011b3c:	fb07 4908 	mla	r9, r7, r8, r4
 8011b40:	ea5f 4929 	movs.w	r9, r9, asr #16
 8011b44:	d53d      	bpl.n	8011bc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8011b46:	4698      	mov	r8, r3
 8011b48:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 8011b4c:	f1b8 0f00 	cmp.w	r8, #0
 8011b50:	dc55      	bgt.n	8011bfe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 8011b52:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011b56:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011b5a:	2900      	cmp	r1, #0
 8011b5c:	dd69      	ble.n	8011c32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8011b5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011b62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011b66:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011b6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011b6c:	3901      	subs	r1, #1
 8011b6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011b72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011b76:	eeb0 6a62 	vmov.f32	s12, s5
 8011b7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011b7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011b86:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8011b8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011b8e:	eeb0 6a43 	vmov.f32	s12, s6
 8011b92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011b96:	ee12 2a90 	vmov	r2, s5
 8011b9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011b9e:	fb92 f7f3 	sdiv	r7, r2, r3
 8011ba2:	ee13 2a10 	vmov	r2, s6
 8011ba6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011baa:	fb92 f6f3 	sdiv	r6, r2, r3
 8011bae:	9a01      	ldr	r2, [sp, #4]
 8011bb0:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8011bb4:	bf08      	it	eq
 8011bb6:	4613      	moveq	r3, r2
 8011bb8:	eeb0 3a67 	vmov.f32	s6, s15
 8011bbc:	eef0 2a47 	vmov.f32	s5, s14
 8011bc0:	e79c      	b.n	8011afc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 8011bc2:	45e1      	cmp	r9, ip
 8011bc4:	dabf      	bge.n	8011b46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011bc6:	fb06 0808 	mla	r8, r6, r8, r0
 8011bca:	ea5f 4828 	movs.w	r8, r8, asr #16
 8011bce:	d4ba      	bmi.n	8011b46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011bd0:	45f0      	cmp	r8, lr
 8011bd2:	dab8      	bge.n	8011b46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011bd4:	4698      	mov	r8, r3
 8011bd6:	46aa      	mov	sl, r5
 8011bd8:	f1b8 0f00 	cmp.w	r8, #0
 8011bdc:	ddb9      	ble.n	8011b52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8011bde:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011be2:	ea4f 4b24 	mov.w	fp, r4, asr #16
 8011be6:	fb0c b909 	mla	r9, ip, r9, fp
 8011bea:	9a00      	ldr	r2, [sp, #0]
 8011bec:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 8011bf0:	f82a 9b02 	strh.w	r9, [sl], #2
 8011bf4:	443c      	add	r4, r7
 8011bf6:	4430      	add	r0, r6
 8011bf8:	f108 38ff 	add.w	r8, r8, #4294967295
 8011bfc:	e7ec      	b.n	8011bd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8011bfe:	ea5f 4a24 	movs.w	sl, r4, asr #16
 8011c02:	d411      	bmi.n	8011c28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011c04:	45e2      	cmp	sl, ip
 8011c06:	da0f      	bge.n	8011c28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011c08:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011c0c:	d40c      	bmi.n	8011c28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011c0e:	45f1      	cmp	r9, lr
 8011c10:	da0a      	bge.n	8011c28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011c12:	fb0c a909 	mla	r9, ip, r9, sl
 8011c16:	9a00      	ldr	r2, [sp, #0]
 8011c18:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 8011c1c:	f06f 0201 	mvn.w	r2, #1
 8011c20:	fb02 f908 	mul.w	r9, r2, r8
 8011c24:	f82b a009 	strh.w	sl, [fp, r9]
 8011c28:	443c      	add	r4, r7
 8011c2a:	4430      	add	r0, r6
 8011c2c:	f108 38ff 	add.w	r8, r8, #4294967295
 8011c30:	e78c      	b.n	8011b4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8011c32:	b003      	add	sp, #12
 8011c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011c38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c3c:	b087      	sub	sp, #28
 8011c3e:	468b      	mov	fp, r1
 8011c40:	9204      	str	r2, [sp, #16]
 8011c42:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011c46:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011c48:	9201      	str	r2, [sp, #4]
 8011c4a:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8011c4e:	9205      	str	r2, [sp, #20]
 8011c50:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011c54:	6841      	ldr	r1, [r0, #4]
 8011c56:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8011c5a:	fb01 2404 	mla	r4, r1, r4, r2
 8011c5e:	6802      	ldr	r2, [r0, #0]
 8011c60:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c64:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011c66:	6812      	ldr	r2, [r2, #0]
 8011c68:	9203      	str	r2, [sp, #12]
 8011c6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011c6e:	f1bb 0f00 	cmp.w	fp, #0
 8011c72:	dc03      	bgt.n	8011c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8011c74:	9a04      	ldr	r2, [sp, #16]
 8011c76:	2a00      	cmp	r2, #0
 8011c78:	f340 812c 	ble.w	8011ed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8011c7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011c7e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011c82:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011c84:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011c88:	2b00      	cmp	r3, #0
 8011c8a:	dd0f      	ble.n	8011cac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011c8c:	1402      	asrs	r2, r0, #16
 8011c8e:	d406      	bmi.n	8011c9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011c90:	4542      	cmp	r2, r8
 8011c92:	da04      	bge.n	8011c9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011c94:	140a      	asrs	r2, r1, #16
 8011c96:	d402      	bmi.n	8011c9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011c98:	9d01      	ldr	r5, [sp, #4]
 8011c9a:	42aa      	cmp	r2, r5
 8011c9c:	db07      	blt.n	8011cae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8011c9e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ca0:	4410      	add	r0, r2
 8011ca2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ca4:	3b01      	subs	r3, #1
 8011ca6:	4411      	add	r1, r2
 8011ca8:	3402      	adds	r4, #2
 8011caa:	e7ed      	b.n	8011c88 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8011cac:	d01a      	beq.n	8011ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8011cae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011cb0:	1e5a      	subs	r2, r3, #1
 8011cb2:	fb05 0502 	mla	r5, r5, r2, r0
 8011cb6:	142d      	asrs	r5, r5, #16
 8011cb8:	d40a      	bmi.n	8011cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011cba:	4545      	cmp	r5, r8
 8011cbc:	da08      	bge.n	8011cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011cbe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011cc0:	fb05 1202 	mla	r2, r5, r2, r1
 8011cc4:	1412      	asrs	r2, r2, #16
 8011cc6:	d403      	bmi.n	8011cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011cc8:	9d01      	ldr	r5, [sp, #4]
 8011cca:	42aa      	cmp	r2, r5
 8011ccc:	f2c0 80a6 	blt.w	8011e1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8011cd0:	f04f 0c00 	mov.w	ip, #0
 8011cd4:	eb03 020c 	add.w	r2, r3, ip
 8011cd8:	2a00      	cmp	r2, #0
 8011cda:	dc3e      	bgt.n	8011d5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 8011cdc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011ce0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011ce4:	f1bb 0f00 	cmp.w	fp, #0
 8011ce8:	f340 80f4 	ble.w	8011ed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8011cec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011cf0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011cf4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011cf8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011cfa:	f1bb 0b01 	subs.w	fp, fp, #1
 8011cfe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d06:	eeb0 6a62 	vmov.f32	s12, s5
 8011d0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d16:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011d1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d1e:	eeb0 6a43 	vmov.f32	s12, s6
 8011d22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d26:	ee12 2a90 	vmov	r2, s5
 8011d2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d32:	ee13 2a10 	vmov	r2, s6
 8011d36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d3a:	9313      	str	r3, [sp, #76]	; 0x4c
 8011d3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d42:	9a04      	ldr	r2, [sp, #16]
 8011d44:	9314      	str	r3, [sp, #80]	; 0x50
 8011d46:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011d4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d4c:	eeb0 3a67 	vmov.f32	s6, s15
 8011d50:	bf08      	it	eq
 8011d52:	4613      	moveq	r3, r2
 8011d54:	eef0 2a47 	vmov.f32	s5, s14
 8011d58:	e789      	b.n	8011c6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8011d5a:	1405      	asrs	r5, r0, #16
 8011d5c:	d457      	bmi.n	8011e0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011d5e:	4545      	cmp	r5, r8
 8011d60:	da55      	bge.n	8011e0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011d62:	140a      	asrs	r2, r1, #16
 8011d64:	d453      	bmi.n	8011e0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011d66:	9e01      	ldr	r6, [sp, #4]
 8011d68:	42b2      	cmp	r2, r6
 8011d6a:	da50      	bge.n	8011e0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011d6c:	fb08 5202 	mla	r2, r8, r2, r5
 8011d70:	9d03      	ldr	r5, [sp, #12]
 8011d72:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011d76:	0e2e      	lsrs	r6, r5, #24
 8011d78:	d049      	beq.n	8011e0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011d7a:	f06f 0201 	mvn.w	r2, #1
 8011d7e:	fb02 f20c 	mul.w	r2, r2, ip
 8011d82:	9202      	str	r2, [sp, #8]
 8011d84:	f834 e002 	ldrh.w	lr, [r4, r2]
 8011d88:	9a05      	ldr	r2, [sp, #20]
 8011d8a:	4356      	muls	r6, r2
 8011d8c:	1c72      	adds	r2, r6, #1
 8011d8e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011d92:	1212      	asrs	r2, r2, #8
 8011d94:	fa1f f982 	uxth.w	r9, r2
 8011d98:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011d9c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011da0:	43d2      	mvns	r2, r2
 8011da2:	b2d2      	uxtb	r2, r2
 8011da4:	fb16 f609 	smulbb	r6, r6, r9
 8011da8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011dac:	fb07 6702 	mla	r7, r7, r2, r6
 8011db0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011db4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011db8:	b2ed      	uxtb	r5, r5
 8011dba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011dbe:	fa5f fe8e 	uxtb.w	lr, lr
 8011dc2:	fb15 f509 	smulbb	r5, r5, r9
 8011dc6:	fb0e 5502 	mla	r5, lr, r2, r5
 8011dca:	b2bf      	uxth	r7, r7
 8011dcc:	fb1a fa09 	smulbb	sl, sl, r9
 8011dd0:	b2ad      	uxth	r5, r5
 8011dd2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011dd6:	fb06 a602 	mla	r6, r6, r2, sl
 8011dda:	1c7a      	adds	r2, r7, #1
 8011ddc:	f105 0a01 	add.w	sl, r5, #1
 8011de0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011de4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011de8:	b2b6      	uxth	r6, r6
 8011dea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011dee:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011df2:	ea47 070a 	orr.w	r7, r7, sl
 8011df6:	f106 0a01 	add.w	sl, r6, #1
 8011dfa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011dfe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011e02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011e06:	9a02      	ldr	r2, [sp, #8]
 8011e08:	ea47 070a 	orr.w	r7, r7, sl
 8011e0c:	52a7      	strh	r7, [r4, r2]
 8011e0e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e10:	4410      	add	r0, r2
 8011e12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011e14:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011e18:	4411      	add	r1, r2
 8011e1a:	e75b      	b.n	8011cd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011e1c:	f04f 0e00 	mov.w	lr, #0
 8011e20:	eba3 020e 	sub.w	r2, r3, lr
 8011e24:	2a00      	cmp	r2, #0
 8011e26:	f77f af59 	ble.w	8011cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011e2a:	1405      	asrs	r5, r0, #16
 8011e2c:	140a      	asrs	r2, r1, #16
 8011e2e:	fb08 5202 	mla	r2, r8, r2, r5
 8011e32:	9d03      	ldr	r5, [sp, #12]
 8011e34:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011e38:	0e2e      	lsrs	r6, r5, #24
 8011e3a:	d044      	beq.n	8011ec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 8011e3c:	9a05      	ldr	r2, [sp, #20]
 8011e3e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011e42:	4356      	muls	r6, r2
 8011e44:	1c72      	adds	r2, r6, #1
 8011e46:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011e4a:	1212      	asrs	r2, r2, #8
 8011e4c:	fa1f f982 	uxth.w	r9, r2
 8011e50:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011e54:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011e58:	43d2      	mvns	r2, r2
 8011e5a:	b2d2      	uxtb	r2, r2
 8011e5c:	fb16 f609 	smulbb	r6, r6, r9
 8011e60:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011e64:	fb07 6702 	mla	r7, r7, r2, r6
 8011e68:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011e6c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011e70:	b2ed      	uxtb	r5, r5
 8011e72:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011e76:	fa5f fc8c 	uxtb.w	ip, ip
 8011e7a:	fb15 f509 	smulbb	r5, r5, r9
 8011e7e:	fb0c 5502 	mla	r5, ip, r2, r5
 8011e82:	b2bf      	uxth	r7, r7
 8011e84:	fb1a fa09 	smulbb	sl, sl, r9
 8011e88:	b2ad      	uxth	r5, r5
 8011e8a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011e8e:	fb06 a602 	mla	r6, r6, r2, sl
 8011e92:	1c7a      	adds	r2, r7, #1
 8011e94:	f105 0a01 	add.w	sl, r5, #1
 8011e98:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011e9c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011ea0:	b2b6      	uxth	r6, r6
 8011ea2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011ea6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011eaa:	ea47 070a 	orr.w	r7, r7, sl
 8011eae:	f106 0a01 	add.w	sl, r6, #1
 8011eb2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011eb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011eba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011ebe:	ea47 070a 	orr.w	r7, r7, sl
 8011ec2:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011ec6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ec8:	4410      	add	r0, r2
 8011eca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ecc:	f10e 0e01 	add.w	lr, lr, #1
 8011ed0:	4411      	add	r1, r2
 8011ed2:	e7a5      	b.n	8011e20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8011ed4:	b007      	add	sp, #28
 8011ed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011edc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ee0:	b087      	sub	sp, #28
 8011ee2:	468b      	mov	fp, r1
 8011ee4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011ee6:	9205      	str	r2, [sp, #20]
 8011ee8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011eec:	9201      	str	r2, [sp, #4]
 8011eee:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8011ef2:	6861      	ldr	r1, [r4, #4]
 8011ef4:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8011ef8:	fb01 2000 	mla	r0, r1, r0, r2
 8011efc:	6822      	ldr	r2, [r4, #0]
 8011efe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011f02:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011f04:	6812      	ldr	r2, [r2, #0]
 8011f06:	9203      	str	r2, [sp, #12]
 8011f08:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f0c:	f1bb 0f00 	cmp.w	fp, #0
 8011f10:	dc03      	bgt.n	8011f1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8011f12:	9a05      	ldr	r2, [sp, #20]
 8011f14:	2a00      	cmp	r2, #0
 8011f16:	f340 814b 	ble.w	80121b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8011f1a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011f1c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011f20:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011f22:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011f26:	2b00      	cmp	r3, #0
 8011f28:	dd0f      	ble.n	8011f4a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8011f2a:	140c      	asrs	r4, r1, #16
 8011f2c:	d406      	bmi.n	8011f3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011f2e:	454c      	cmp	r4, r9
 8011f30:	da04      	bge.n	8011f3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011f32:	1414      	asrs	r4, r2, #16
 8011f34:	d402      	bmi.n	8011f3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011f36:	9d01      	ldr	r5, [sp, #4]
 8011f38:	42ac      	cmp	r4, r5
 8011f3a:	db07      	blt.n	8011f4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8011f3c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011f3e:	4421      	add	r1, r4
 8011f40:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011f42:	3b01      	subs	r3, #1
 8011f44:	4422      	add	r2, r4
 8011f46:	3002      	adds	r0, #2
 8011f48:	e7ed      	b.n	8011f26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8011f4a:	d018      	beq.n	8011f7e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 8011f4c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011f4e:	1e5c      	subs	r4, r3, #1
 8011f50:	fb05 1504 	mla	r5, r5, r4, r1
 8011f54:	142d      	asrs	r5, r5, #16
 8011f56:	d40a      	bmi.n	8011f6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011f58:	454d      	cmp	r5, r9
 8011f5a:	da08      	bge.n	8011f6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011f5c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011f5e:	fb05 2404 	mla	r4, r5, r4, r2
 8011f62:	1424      	asrs	r4, r4, #16
 8011f64:	d403      	bmi.n	8011f6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011f66:	9d01      	ldr	r5, [sp, #4]
 8011f68:	42ac      	cmp	r4, r5
 8011f6a:	f2c0 80bb 	blt.w	80120e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 8011f6e:	2700      	movs	r7, #0
 8011f70:	19dc      	adds	r4, r3, r7
 8011f72:	2c00      	cmp	r4, #0
 8011f74:	dc3e      	bgt.n	8011ff4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 8011f76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011f7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011f7e:	f1bb 0f00 	cmp.w	fp, #0
 8011f82:	f340 8115 	ble.w	80121b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8011f86:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011f8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011f8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011f92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011f94:	f1bb 0b01 	subs.w	fp, fp, #1
 8011f98:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011f9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011fa0:	eeb0 6a62 	vmov.f32	s12, s5
 8011fa4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011fa8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011fac:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011fb0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011fb4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011fb8:	eeb0 6a43 	vmov.f32	s12, s6
 8011fbc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011fc0:	ee12 2a90 	vmov	r2, s5
 8011fc4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011fc8:	fb92 f3f3 	sdiv	r3, r2, r3
 8011fcc:	ee13 2a10 	vmov	r2, s6
 8011fd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011fd4:	9313      	str	r3, [sp, #76]	; 0x4c
 8011fd6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fd8:	fb92 f3f3 	sdiv	r3, r2, r3
 8011fdc:	9a05      	ldr	r2, [sp, #20]
 8011fde:	9314      	str	r3, [sp, #80]	; 0x50
 8011fe0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011fe4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fe6:	eeb0 3a67 	vmov.f32	s6, s15
 8011fea:	bf08      	it	eq
 8011fec:	4613      	moveq	r3, r2
 8011fee:	eef0 2a47 	vmov.f32	s5, s14
 8011ff2:	e78b      	b.n	8011f0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 8011ff4:	140d      	asrs	r5, r1, #16
 8011ff6:	d45c      	bmi.n	80120b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011ff8:	454d      	cmp	r5, r9
 8011ffa:	da5a      	bge.n	80120b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011ffc:	1414      	asrs	r4, r2, #16
 8011ffe:	d458      	bmi.n	80120b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012000:	9e01      	ldr	r6, [sp, #4]
 8012002:	42b4      	cmp	r4, r6
 8012004:	da55      	bge.n	80120b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012006:	fb09 5404 	mla	r4, r9, r4, r5
 801200a:	9d03      	ldr	r5, [sp, #12]
 801200c:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8012010:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8012014:	d04d      	beq.n	80120b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012016:	0a26      	lsrs	r6, r4, #8
 8012018:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801201c:	fa5f f58e 	uxtb.w	r5, lr
 8012020:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8012024:	9604      	str	r6, [sp, #16]
 8012026:	d04a      	beq.n	80120be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8012028:	f06f 0601 	mvn.w	r6, #1
 801202c:	437e      	muls	r6, r7
 801202e:	fa1f fa85 	uxth.w	sl, r5
 8012032:	f830 8006 	ldrh.w	r8, [r0, r6]
 8012036:	9602      	str	r6, [sp, #8]
 8012038:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801203c:	43ed      	mvns	r5, r5
 801203e:	fa5f fc8c 	uxtb.w	ip, ip
 8012042:	b2ed      	uxtb	r5, r5
 8012044:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012048:	fb1c fc0a 	smulbb	ip, ip, sl
 801204c:	fb0e cc05 	mla	ip, lr, r5, ip
 8012050:	b2e4      	uxtb	r4, r4
 8012052:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8012056:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801205a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801205e:	fa5f f888 	uxtb.w	r8, r8
 8012062:	fb14 f40a 	smulbb	r4, r4, sl
 8012066:	fb08 4405 	mla	r4, r8, r5, r4
 801206a:	b2a4      	uxth	r4, r4
 801206c:	fa1f fc8c 	uxth.w	ip, ip
 8012070:	fb16 f60a 	smulbb	r6, r6, sl
 8012074:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012078:	fb0e 6e05 	mla	lr, lr, r5, r6
 801207c:	1c66      	adds	r6, r4, #1
 801207e:	f10c 0501 	add.w	r5, ip, #1
 8012082:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012086:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801208a:	fa1f fe8e 	uxth.w	lr, lr
 801208e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012092:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012096:	ea4c 0c06 	orr.w	ip, ip, r6
 801209a:	f10e 0601 	add.w	r6, lr, #1
 801209e:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 80120a2:	0976      	lsrs	r6, r6, #5
 80120a4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80120a8:	9c02      	ldr	r4, [sp, #8]
 80120aa:	ea4c 0c06 	orr.w	ip, ip, r6
 80120ae:	f820 c004 	strh.w	ip, [r0, r4]
 80120b2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80120b4:	4421      	add	r1, r4
 80120b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80120b8:	3f01      	subs	r7, #1
 80120ba:	4422      	add	r2, r4
 80120bc:	e758      	b.n	8011f70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80120be:	4e3e      	ldr	r6, [pc, #248]	; (80121b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 80120c0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80120c4:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 80120c8:	ea4c 0c04 	orr.w	ip, ip, r4
 80120cc:	9c04      	ldr	r4, [sp, #16]
 80120ce:	f06f 0501 	mvn.w	r5, #1
 80120d2:	00e6      	lsls	r6, r4, #3
 80120d4:	437d      	muls	r5, r7
 80120d6:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80120da:	ea4c 0c04 	orr.w	ip, ip, r4
 80120de:	f820 c005 	strh.w	ip, [r0, r5]
 80120e2:	e7e6      	b.n	80120b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80120e4:	f04f 0800 	mov.w	r8, #0
 80120e8:	eba3 0408 	sub.w	r4, r3, r8
 80120ec:	2c00      	cmp	r4, #0
 80120ee:	f77f af42 	ble.w	8011f76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80120f2:	140d      	asrs	r5, r1, #16
 80120f4:	1414      	asrs	r4, r2, #16
 80120f6:	fb09 5404 	mla	r4, r9, r4, r5
 80120fa:	9d03      	ldr	r5, [sp, #12]
 80120fc:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8012100:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8012104:	d042      	beq.n	801218c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8012106:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801210a:	fa5f f58c 	uxtb.w	r5, ip
 801210e:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8012112:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8012116:	d040      	beq.n	801219a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8012118:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 801211c:	fa1f fa85 	uxth.w	sl, r5
 8012120:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012124:	43ed      	mvns	r5, r5
 8012126:	b2ff      	uxtb	r7, r7
 8012128:	b2ed      	uxtb	r5, r5
 801212a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801212e:	fb17 f70a 	smulbb	r7, r7, sl
 8012132:	fb0c 7705 	mla	r7, ip, r5, r7
 8012136:	b2e4      	uxtb	r4, r4
 8012138:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801213c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012140:	fa5f fe8e 	uxtb.w	lr, lr
 8012144:	fb14 f40a 	smulbb	r4, r4, sl
 8012148:	fb0e 4405 	mla	r4, lr, r5, r4
 801214c:	b2f6      	uxtb	r6, r6
 801214e:	b2bf      	uxth	r7, r7
 8012150:	fb16 f60a 	smulbb	r6, r6, sl
 8012154:	b2a4      	uxth	r4, r4
 8012156:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801215a:	fb0c 6c05 	mla	ip, ip, r5, r6
 801215e:	1c7d      	adds	r5, r7, #1
 8012160:	1c66      	adds	r6, r4, #1
 8012162:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8012166:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801216a:	fa1f fc8c 	uxth.w	ip, ip
 801216e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012172:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012176:	4337      	orrs	r7, r6
 8012178:	f10c 0601 	add.w	r6, ip, #1
 801217c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012180:	0976      	lsrs	r6, r6, #5
 8012182:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012186:	4337      	orrs	r7, r6
 8012188:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 801218c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801218e:	4421      	add	r1, r4
 8012190:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012192:	f108 0801 	add.w	r8, r8, #1
 8012196:	4422      	add	r2, r4
 8012198:	e7a6      	b.n	80120e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 801219a:	4d07      	ldr	r5, [pc, #28]	; (80121b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 801219c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80121a0:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 80121a4:	00f6      	lsls	r6, r6, #3
 80121a6:	4327      	orrs	r7, r4
 80121a8:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80121ac:	4327      	orrs	r7, r4
 80121ae:	e7eb      	b.n	8012188 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 80121b0:	b007      	add	sp, #28
 80121b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80121b6:	bf00      	nop
 80121b8:	fffff800 	.word	0xfffff800

080121bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80121bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121c0:	b089      	sub	sp, #36	; 0x24
 80121c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80121c6:	9206      	str	r2, [sp, #24]
 80121c8:	f9bd 2068 	ldrsh.w	r2, [sp, #104]	; 0x68
 80121cc:	9202      	str	r2, [sp, #8]
 80121ce:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	; 0x6c
 80121d2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80121d4:	9203      	str	r2, [sp, #12]
 80121d6:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 80121da:	9207      	str	r2, [sp, #28]
 80121dc:	e9dd 2518 	ldrd	r2, r5, [sp, #96]	; 0x60
 80121e0:	6860      	ldr	r0, [r4, #4]
 80121e2:	9101      	str	r1, [sp, #4]
 80121e4:	fb00 2505 	mla	r5, r0, r5, r2
 80121e8:	6822      	ldr	r2, [r4, #0]
 80121ea:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80121ee:	9a02      	ldr	r2, [sp, #8]
 80121f0:	3201      	adds	r2, #1
 80121f2:	f022 0201 	bic.w	r2, r2, #1
 80121f6:	9204      	str	r2, [sp, #16]
 80121f8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80121fa:	6812      	ldr	r2, [r2, #0]
 80121fc:	9205      	str	r2, [sp, #20]
 80121fe:	9a01      	ldr	r2, [sp, #4]
 8012200:	2a00      	cmp	r2, #0
 8012202:	dc03      	bgt.n	801220c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8012204:	9a06      	ldr	r2, [sp, #24]
 8012206:	2a00      	cmp	r2, #0
 8012208:	f340 8153 	ble.w	80124b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 801220c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801220e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8012212:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012214:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012218:	2b00      	cmp	r3, #0
 801221a:	dd10      	ble.n	801223e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 801221c:	1422      	asrs	r2, r4, #16
 801221e:	d407      	bmi.n	8012230 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8012220:	9e02      	ldr	r6, [sp, #8]
 8012222:	4296      	cmp	r6, r2
 8012224:	dd04      	ble.n	8012230 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8012226:	1402      	asrs	r2, r0, #16
 8012228:	d402      	bmi.n	8012230 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801222a:	9e03      	ldr	r6, [sp, #12]
 801222c:	42b2      	cmp	r2, r6
 801222e:	db07      	blt.n	8012240 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8012230:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8012232:	4414      	add	r4, r2
 8012234:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8012236:	3b01      	subs	r3, #1
 8012238:	4410      	add	r0, r2
 801223a:	3502      	adds	r5, #2
 801223c:	e7ec      	b.n	8012218 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5c>
 801223e:	d00f      	beq.n	8012260 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8012240:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8012242:	1e5a      	subs	r2, r3, #1
 8012244:	fb06 4602 	mla	r6, r6, r2, r4
 8012248:	1436      	asrs	r6, r6, #16
 801224a:	d545      	bpl.n	80122d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 801224c:	469a      	mov	sl, r3
 801224e:	46a9      	mov	r9, r5
 8012250:	f1ba 0f00 	cmp.w	sl, #0
 8012254:	f300 80ba 	bgt.w	80123cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x210>
 8012258:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801225c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012260:	9b01      	ldr	r3, [sp, #4]
 8012262:	2b00      	cmp	r3, #0
 8012264:	f340 8125 	ble.w	80124b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8012268:	ee30 0a04 	vadd.f32	s0, s0, s8
 801226c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012270:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012274:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012276:	ee31 1a05 	vadd.f32	s2, s2, s10
 801227a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801227e:	eeb0 6a62 	vmov.f32	s12, s5
 8012282:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012286:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801228a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801228e:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 8012292:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012296:	eeb0 6a43 	vmov.f32	s12, s6
 801229a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801229e:	ee12 2a90 	vmov	r2, s5
 80122a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80122a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80122aa:	ee13 2a10 	vmov	r2, s6
 80122ae:	9315      	str	r3, [sp, #84]	; 0x54
 80122b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80122b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80122b6:	9316      	str	r3, [sp, #88]	; 0x58
 80122b8:	9b01      	ldr	r3, [sp, #4]
 80122ba:	9a06      	ldr	r2, [sp, #24]
 80122bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80122c0:	3b01      	subs	r3, #1
 80122c2:	9301      	str	r3, [sp, #4]
 80122c4:	ed8d 6a14 	vstr	s12, [sp, #80]	; 0x50
 80122c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80122ca:	eeb0 3a67 	vmov.f32	s6, s15
 80122ce:	bf08      	it	eq
 80122d0:	4613      	moveq	r3, r2
 80122d2:	eef0 2a47 	vmov.f32	s5, s14
 80122d6:	e792      	b.n	80121fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 80122d8:	9f02      	ldr	r7, [sp, #8]
 80122da:	42b7      	cmp	r7, r6
 80122dc:	ddb6      	ble.n	801224c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80122de:	9e16      	ldr	r6, [sp, #88]	; 0x58
 80122e0:	fb06 0202 	mla	r2, r6, r2, r0
 80122e4:	1412      	asrs	r2, r2, #16
 80122e6:	d4b1      	bmi.n	801224c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80122e8:	9e03      	ldr	r6, [sp, #12]
 80122ea:	42b2      	cmp	r2, r6
 80122ec:	daae      	bge.n	801224c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80122ee:	f04f 0800 	mov.w	r8, #0
 80122f2:	eba3 0208 	sub.w	r2, r3, r8
 80122f6:	2a00      	cmp	r2, #0
 80122f8:	ddae      	ble.n	8012258 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80122fa:	9904      	ldr	r1, [sp, #16]
 80122fc:	1422      	asrs	r2, r4, #16
 80122fe:	1406      	asrs	r6, r0, #16
 8012300:	fb01 2606 	mla	r6, r1, r6, r2
 8012304:	0872      	lsrs	r2, r6, #1
 8012306:	9905      	ldr	r1, [sp, #20]
 8012308:	5c8a      	ldrb	r2, [r1, r2]
 801230a:	07f1      	lsls	r1, r6, #31
 801230c:	bf54      	ite	pl
 801230e:	f002 020f 	andpl.w	r2, r2, #15
 8012312:	1112      	asrmi	r2, r2, #4
 8012314:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012318:	b2d2      	uxtb	r2, r2
 801231a:	2a00      	cmp	r2, #0
 801231c:	d04f      	beq.n	80123be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 801231e:	4966      	ldr	r1, [pc, #408]	; (80124b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8012320:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8012324:	680e      	ldr	r6, [r1, #0]
 8012326:	9907      	ldr	r1, [sp, #28]
 8012328:	434a      	muls	r2, r1
 801232a:	1c57      	adds	r7, r2, #1
 801232c:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8012330:	1212      	asrs	r2, r2, #8
 8012332:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8012336:	fa1f fa82 	uxth.w	sl, r2
 801233a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801233e:	43d2      	mvns	r2, r2
 8012340:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012344:	b2d2      	uxtb	r2, r2
 8012346:	fb1c fc0a 	smulbb	ip, ip, sl
 801234a:	f3c6 09cc 	ubfx	r9, r6, #3, #13
 801234e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012352:	495a      	ldr	r1, [pc, #360]	; (80124bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 8012354:	fb07 c702 	mla	r7, r7, r2, ip
 8012358:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801235c:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8012360:	fb19 f90a 	smulbb	r9, r9, sl
 8012364:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012368:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 801236c:	fb0c 9c02 	mla	ip, ip, r2, r9
 8012370:	b2f6      	uxtb	r6, r6
 8012372:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012376:	fa1f fc8c 	uxth.w	ip, ip
 801237a:	fa5f fe8e 	uxtb.w	lr, lr
 801237e:	fb16 f60a 	smulbb	r6, r6, sl
 8012382:	b2bf      	uxth	r7, r7
 8012384:	fb0e 6602 	mla	r6, lr, r2, r6
 8012388:	f10c 0901 	add.w	r9, ip, #1
 801238c:	b2b6      	uxth	r6, r6
 801238e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012392:	f107 0b01 	add.w	fp, r7, #1
 8012396:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801239a:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 801239e:	f106 0e01 	add.w	lr, r6, #1
 80123a2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80123a6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80123aa:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80123ae:	ea4c 0c07 	orr.w	ip, ip, r7
 80123b2:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80123b6:	ea4c 0c0e 	orr.w	ip, ip, lr
 80123ba:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80123be:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80123c0:	4414      	add	r4, r2
 80123c2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80123c4:	f108 0801 	add.w	r8, r8, #1
 80123c8:	4410      	add	r0, r2
 80123ca:	e792      	b.n	80122f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x136>
 80123cc:	1422      	asrs	r2, r4, #16
 80123ce:	d467      	bmi.n	80124a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80123d0:	9e02      	ldr	r6, [sp, #8]
 80123d2:	4296      	cmp	r6, r2
 80123d4:	dd64      	ble.n	80124a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80123d6:	1406      	asrs	r6, r0, #16
 80123d8:	d462      	bmi.n	80124a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80123da:	9f03      	ldr	r7, [sp, #12]
 80123dc:	42be      	cmp	r6, r7
 80123de:	da5f      	bge.n	80124a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80123e0:	9f04      	ldr	r7, [sp, #16]
 80123e2:	fb06 2607 	mla	r6, r6, r7, r2
 80123e6:	0872      	lsrs	r2, r6, #1
 80123e8:	9f05      	ldr	r7, [sp, #20]
 80123ea:	5cba      	ldrb	r2, [r7, r2]
 80123ec:	07f6      	lsls	r6, r6, #31
 80123ee:	bf54      	ite	pl
 80123f0:	f002 020f 	andpl.w	r2, r2, #15
 80123f4:	1112      	asrmi	r2, r2, #4
 80123f6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80123fa:	b2d2      	uxtb	r2, r2
 80123fc:	2a00      	cmp	r2, #0
 80123fe:	d04f      	beq.n	80124a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8012400:	9f07      	ldr	r7, [sp, #28]
 8012402:	4e2d      	ldr	r6, [pc, #180]	; (80124b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8012404:	f8b9 e000 	ldrh.w	lr, [r9]
 8012408:	6836      	ldr	r6, [r6, #0]
 801240a:	492c      	ldr	r1, [pc, #176]	; (80124bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 801240c:	437a      	muls	r2, r7
 801240e:	1c57      	adds	r7, r2, #1
 8012410:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8012414:	1212      	asrs	r2, r2, #8
 8012416:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801241a:	fa1f fb82 	uxth.w	fp, r2
 801241e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012422:	43d2      	mvns	r2, r2
 8012424:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012428:	b2d2      	uxtb	r2, r2
 801242a:	fb1c fc0b 	smulbb	ip, ip, fp
 801242e:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8012432:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012436:	fb07 c702 	mla	r7, r7, r2, ip
 801243a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801243e:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8012442:	fb18 f80b 	smulbb	r8, r8, fp
 8012446:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801244a:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 801244e:	fb0c 8c02 	mla	ip, ip, r2, r8
 8012452:	b2f6      	uxtb	r6, r6
 8012454:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012458:	fa1f fc8c 	uxth.w	ip, ip
 801245c:	fa5f fe8e 	uxtb.w	lr, lr
 8012460:	fb16 f60b 	smulbb	r6, r6, fp
 8012464:	b2bf      	uxth	r7, r7
 8012466:	fb0e 6602 	mla	r6, lr, r2, r6
 801246a:	f10c 0801 	add.w	r8, ip, #1
 801246e:	b2b6      	uxth	r6, r6
 8012470:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8012474:	f107 0801 	add.w	r8, r7, #1
 8012478:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801247c:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8012480:	f106 0e01 	add.w	lr, r6, #1
 8012484:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8012488:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801248c:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8012490:	ea4c 0c07 	orr.w	ip, ip, r7
 8012494:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8012498:	ea4c 0c0e 	orr.w	ip, ip, lr
 801249c:	f8a9 c000 	strh.w	ip, [r9]
 80124a0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80124a2:	4414      	add	r4, r2
 80124a4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80124a6:	f109 0902 	add.w	r9, r9, #2
 80124aa:	4410      	add	r0, r2
 80124ac:	f10a 3aff 	add.w	sl, sl, #4294967295
 80124b0:	e6ce      	b.n	8012250 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80124b2:	b009      	add	sp, #36	; 0x24
 80124b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124b8:	200017ac 	.word	0x200017ac
 80124bc:	0007fff8 	.word	0x0007fff8

080124c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80124c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124c4:	b087      	sub	sp, #28
 80124c6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80124ca:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80124cc:	9205      	str	r2, [sp, #20]
 80124ce:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80124d2:	9201      	str	r2, [sp, #4]
 80124d4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80124d8:	6860      	ldr	r0, [r4, #4]
 80124da:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 80124de:	9100      	str	r1, [sp, #0]
 80124e0:	fb00 2505 	mla	r5, r0, r5, r2
 80124e4:	6822      	ldr	r2, [r4, #0]
 80124e6:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80124ea:	f10b 0201 	add.w	r2, fp, #1
 80124ee:	f022 0201 	bic.w	r2, r2, #1
 80124f2:	9203      	str	r2, [sp, #12]
 80124f4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80124f6:	6812      	ldr	r2, [r2, #0]
 80124f8:	9204      	str	r2, [sp, #16]
 80124fa:	9a00      	ldr	r2, [sp, #0]
 80124fc:	2a00      	cmp	r2, #0
 80124fe:	dc03      	bgt.n	8012508 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8012500:	9a05      	ldr	r2, [sp, #20]
 8012502:	2a00      	cmp	r2, #0
 8012504:	f340 815c 	ble.w	80127c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8012508:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801250a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801250e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012510:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012514:	2b00      	cmp	r3, #0
 8012516:	dd0f      	ble.n	8012538 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012518:	1422      	asrs	r2, r4, #16
 801251a:	d406      	bmi.n	801252a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801251c:	4593      	cmp	fp, r2
 801251e:	dd04      	ble.n	801252a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012520:	1402      	asrs	r2, r0, #16
 8012522:	d402      	bmi.n	801252a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012524:	9e01      	ldr	r6, [sp, #4]
 8012526:	42b2      	cmp	r2, r6
 8012528:	db07      	blt.n	801253a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 801252a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801252c:	4414      	add	r4, r2
 801252e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012530:	3b01      	subs	r3, #1
 8012532:	4410      	add	r0, r2
 8012534:	3502      	adds	r5, #2
 8012536:	e7ed      	b.n	8012514 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8012538:	d018      	beq.n	801256c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 801253a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801253c:	1e5a      	subs	r2, r3, #1
 801253e:	fb06 4602 	mla	r6, r6, r2, r4
 8012542:	1436      	asrs	r6, r6, #16
 8012544:	d40a      	bmi.n	801255c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8012546:	45b3      	cmp	fp, r6
 8012548:	dd08      	ble.n	801255c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801254a:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801254c:	fb06 0202 	mla	r2, r6, r2, r0
 8012550:	1412      	asrs	r2, r2, #16
 8012552:	d403      	bmi.n	801255c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8012554:	9e01      	ldr	r6, [sp, #4]
 8012556:	42b2      	cmp	r2, r6
 8012558:	f2c0 80bf 	blt.w	80126da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 801255c:	2700      	movs	r7, #0
 801255e:	19da      	adds	r2, r3, r7
 8012560:	2a00      	cmp	r2, #0
 8012562:	dc3f      	bgt.n	80125e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 8012564:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012568:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801256c:	9b00      	ldr	r3, [sp, #0]
 801256e:	2b00      	cmp	r3, #0
 8012570:	f340 8126 	ble.w	80127c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8012574:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012578:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801257c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012580:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012582:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012586:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801258a:	eeb0 6a62 	vmov.f32	s12, s5
 801258e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012592:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012596:	ee77 2a62 	vsub.f32	s5, s14, s5
 801259a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801259e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80125a2:	eeb0 6a43 	vmov.f32	s12, s6
 80125a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80125aa:	ee12 2a90 	vmov	r2, s5
 80125ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80125b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80125b6:	ee13 2a10 	vmov	r2, s6
 80125ba:	9313      	str	r3, [sp, #76]	; 0x4c
 80125bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125be:	fb92 f3f3 	sdiv	r3, r2, r3
 80125c2:	9314      	str	r3, [sp, #80]	; 0x50
 80125c4:	9b00      	ldr	r3, [sp, #0]
 80125c6:	9a05      	ldr	r2, [sp, #20]
 80125c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80125cc:	3b01      	subs	r3, #1
 80125ce:	9300      	str	r3, [sp, #0]
 80125d0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80125d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125d6:	eeb0 3a67 	vmov.f32	s6, s15
 80125da:	bf08      	it	eq
 80125dc:	4613      	moveq	r3, r2
 80125de:	eef0 2a47 	vmov.f32	s5, s14
 80125e2:	e78a      	b.n	80124fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 80125e4:	1422      	asrs	r2, r4, #16
 80125e6:	d466      	bmi.n	80126b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80125e8:	4593      	cmp	fp, r2
 80125ea:	dd64      	ble.n	80126b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80125ec:	1406      	asrs	r6, r0, #16
 80125ee:	d462      	bmi.n	80126b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80125f0:	9901      	ldr	r1, [sp, #4]
 80125f2:	428e      	cmp	r6, r1
 80125f4:	da5f      	bge.n	80126b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80125f6:	9903      	ldr	r1, [sp, #12]
 80125f8:	fb06 2601 	mla	r6, r6, r1, r2
 80125fc:	0872      	lsrs	r2, r6, #1
 80125fe:	9904      	ldr	r1, [sp, #16]
 8012600:	5c8a      	ldrb	r2, [r1, r2]
 8012602:	07f6      	lsls	r6, r6, #31
 8012604:	bf54      	ite	pl
 8012606:	f002 020f 	andpl.w	r2, r2, #15
 801260a:	1112      	asrmi	r2, r2, #4
 801260c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012610:	b2d2      	uxtb	r2, r2
 8012612:	2a00      	cmp	r2, #0
 8012614:	d04f      	beq.n	80126b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012616:	496c      	ldr	r1, [pc, #432]	; (80127c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 8012618:	680e      	ldr	r6, [r1, #0]
 801261a:	496c      	ldr	r1, [pc, #432]	; (80127cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 801261c:	ea4f 2926 	mov.w	r9, r6, asr #8
 8012620:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8012624:	2aff      	cmp	r2, #255	; 0xff
 8012626:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 801262a:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801262e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8012632:	b2f6      	uxtb	r6, r6
 8012634:	d045      	beq.n	80126c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8012636:	f06f 0101 	mvn.w	r1, #1
 801263a:	4379      	muls	r1, r7
 801263c:	fa1f fa82 	uxth.w	sl, r2
 8012640:	f835 e001 	ldrh.w	lr, [r5, r1]
 8012644:	9102      	str	r1, [sp, #8]
 8012646:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801264a:	43d2      	mvns	r2, r2
 801264c:	b2d2      	uxtb	r2, r2
 801264e:	fb19 f90a 	smulbb	r9, r9, sl
 8012652:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012656:	fb0c 9c02 	mla	ip, ip, r2, r9
 801265a:	ea4f 09ee 	mov.w	r9, lr, asr #3
 801265e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012662:	fb18 f80a 	smulbb	r8, r8, sl
 8012666:	fb09 8802 	mla	r8, r9, r2, r8
 801266a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801266e:	fa1f f888 	uxth.w	r8, r8
 8012672:	fa5f fe8e 	uxtb.w	lr, lr
 8012676:	fb16 f60a 	smulbb	r6, r6, sl
 801267a:	fa1f fc8c 	uxth.w	ip, ip
 801267e:	fb0e 6602 	mla	r6, lr, r2, r6
 8012682:	f108 0901 	add.w	r9, r8, #1
 8012686:	b2b6      	uxth	r6, r6
 8012688:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 801268c:	f10c 0901 	add.w	r9, ip, #1
 8012690:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012694:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012698:	1c72      	adds	r2, r6, #1
 801269a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801269e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80126a2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80126a6:	ea48 080c 	orr.w	r8, r8, ip
 80126aa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80126ae:	ea48 0806 	orr.w	r8, r8, r6
 80126b2:	f825 8001 	strh.w	r8, [r5, r1]
 80126b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80126b8:	4414      	add	r4, r2
 80126ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80126bc:	3f01      	subs	r7, #1
 80126be:	4410      	add	r0, r2
 80126c0:	e74d      	b.n	801255e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80126c2:	f06f 0201 	mvn.w	r2, #1
 80126c6:	08f6      	lsrs	r6, r6, #3
 80126c8:	fb02 fe07 	mul.w	lr, r2, r7
 80126cc:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80126d0:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 80126d4:	f825 600e 	strh.w	r6, [r5, lr]
 80126d8:	e7ed      	b.n	80126b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80126da:	f04f 0e00 	mov.w	lr, #0
 80126de:	eba3 020e 	sub.w	r2, r3, lr
 80126e2:	2a00      	cmp	r2, #0
 80126e4:	f77f af3e 	ble.w	8012564 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 80126e8:	9903      	ldr	r1, [sp, #12]
 80126ea:	1422      	asrs	r2, r4, #16
 80126ec:	1406      	asrs	r6, r0, #16
 80126ee:	fb01 2606 	mla	r6, r1, r6, r2
 80126f2:	0872      	lsrs	r2, r6, #1
 80126f4:	9904      	ldr	r1, [sp, #16]
 80126f6:	5c8a      	ldrb	r2, [r1, r2]
 80126f8:	07f1      	lsls	r1, r6, #31
 80126fa:	bf54      	ite	pl
 80126fc:	f002 020f 	andpl.w	r2, r2, #15
 8012700:	1112      	asrmi	r2, r2, #4
 8012702:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012706:	b2d2      	uxtb	r2, r2
 8012708:	2a00      	cmp	r2, #0
 801270a:	d04a      	beq.n	80127a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 801270c:	492e      	ldr	r1, [pc, #184]	; (80127c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 801270e:	680e      	ldr	r6, [r1, #0]
 8012710:	492e      	ldr	r1, [pc, #184]	; (80127cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 8012712:	ea4f 2926 	mov.w	r9, r6, asr #8
 8012716:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 801271a:	2aff      	cmp	r2, #255	; 0xff
 801271c:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8012720:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012724:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8012728:	b2f6      	uxtb	r6, r6
 801272a:	d041      	beq.n	80127b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f0>
 801272c:	f835 c01e 	ldrh.w	ip, [r5, lr, lsl #1]
 8012730:	fa1f fa82 	uxth.w	sl, r2
 8012734:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012738:	43d2      	mvns	r2, r2
 801273a:	b2d2      	uxtb	r2, r2
 801273c:	fb19 f90a 	smulbb	r9, r9, sl
 8012740:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012744:	fb07 9702 	mla	r7, r7, r2, r9
 8012748:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801274c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012750:	fb18 f80a 	smulbb	r8, r8, sl
 8012754:	fb09 8802 	mla	r8, r9, r2, r8
 8012758:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801275c:	fa1f f888 	uxth.w	r8, r8
 8012760:	fa5f fc8c 	uxtb.w	ip, ip
 8012764:	fb16 f60a 	smulbb	r6, r6, sl
 8012768:	b2bf      	uxth	r7, r7
 801276a:	fb0c 6602 	mla	r6, ip, r2, r6
 801276e:	f108 0901 	add.w	r9, r8, #1
 8012772:	b2b6      	uxth	r6, r6
 8012774:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8012778:	f107 0901 	add.w	r9, r7, #1
 801277c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012780:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8012784:	1c72      	adds	r2, r6, #1
 8012786:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801278a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801278e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8012792:	ea48 0807 	orr.w	r8, r8, r7
 8012796:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801279a:	ea48 0806 	orr.w	r8, r8, r6
 801279e:	f825 801e 	strh.w	r8, [r5, lr, lsl #1]
 80127a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80127a4:	4414      	add	r4, r2
 80127a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80127a8:	f10e 0e01 	add.w	lr, lr, #1
 80127ac:	4410      	add	r0, r2
 80127ae:	e796      	b.n	80126de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 80127b0:	08f6      	lsrs	r6, r6, #3
 80127b2:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80127b6:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 80127ba:	f825 601e 	strh.w	r6, [r5, lr, lsl #1]
 80127be:	e7f0      	b.n	80127a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 80127c0:	b007      	add	sp, #28
 80127c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80127c6:	bf00      	nop
 80127c8:	200017ac 	.word	0x200017ac
 80127cc:	0007fff8 	.word	0x0007fff8

080127d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80127d0:	4770      	bx	lr

080127d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80127d2:	4770      	bx	lr

080127d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80127d4:	4770      	bx	lr

080127d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80127d6:	4770      	bx	lr

080127d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80127d8:	4770      	bx	lr

080127da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80127da:	4770      	bx	lr

080127dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80127dc:	4770      	bx	lr

080127de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80127de:	4770      	bx	lr

080127e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80127e0:	4770      	bx	lr

080127e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80127e2:	4770      	bx	lr

080127e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80127e4:	4770      	bx	lr

080127e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80127e6:	4770      	bx	lr

080127e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80127e8:	4770      	bx	lr

080127ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80127ea:	4770      	bx	lr

080127ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80127ec:	4770      	bx	lr

080127ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80127ee:	4770      	bx	lr

080127f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80127f0:	4770      	bx	lr

080127f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80127f2:	4770      	bx	lr

080127f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80127f4:	4770      	bx	lr

080127f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80127f6:	4770      	bx	lr

080127f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80127f8:	4770      	bx	lr

080127fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80127fa:	4770      	bx	lr

080127fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80127fc:	4770      	bx	lr

080127fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80127fe:	4770      	bx	lr

08012800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012800:	4770      	bx	lr

08012802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012802:	4770      	bx	lr

08012804 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012804:	4770      	bx	lr

08012806 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012806:	4770      	bx	lr

08012808 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012808:	b508      	push	{r3, lr}
 801280a:	4b06      	ldr	r3, [pc, #24]	; (8012824 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 801280c:	8818      	ldrh	r0, [r3, #0]
 801280e:	b928      	cbnz	r0, 801281c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8012810:	4b05      	ldr	r3, [pc, #20]	; (8012828 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8012812:	4a06      	ldr	r2, [pc, #24]	; (801282c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8012814:	4806      	ldr	r0, [pc, #24]	; (8012830 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8012816:	21d7      	movs	r1, #215	; 0xd7
 8012818:	f009 f894 	bl	801b944 <__assert_func>
 801281c:	0040      	lsls	r0, r0, #1
 801281e:	b280      	uxth	r0, r0
 8012820:	bd08      	pop	{r3, pc}
 8012822:	bf00      	nop
 8012824:	2000179e 	.word	0x2000179e
 8012828:	08021101 	.word	0x08021101
 801282c:	08021687 	.word	0x08021687
 8012830:	08021143 	.word	0x08021143

08012834 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012838:	b08d      	sub	sp, #52	; 0x34
 801283a:	460f      	mov	r7, r1
 801283c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8012840:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8012844:	4616      	mov	r6, r2
 8012846:	f1b9 0f00 	cmp.w	r9, #0
 801284a:	d046      	beq.n	80128da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 801284c:	6810      	ldr	r0, [r2, #0]
 801284e:	6851      	ldr	r1, [r2, #4]
 8012850:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8012a18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 8012854:	ad08      	add	r5, sp, #32
 8012856:	c503      	stmia	r5!, {r0, r1}
 8012858:	6818      	ldr	r0, [r3, #0]
 801285a:	6859      	ldr	r1, [r3, #4]
 801285c:	ad0a      	add	r5, sp, #40	; 0x28
 801285e:	c503      	stmia	r5!, {r0, r1}
 8012860:	a808      	add	r0, sp, #32
 8012862:	f7fb fc6b 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012866:	4631      	mov	r1, r6
 8012868:	a80a      	add	r0, sp, #40	; 0x28
 801286a:	f7fb fc4f 	bl	800e10c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801286e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012872:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012876:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801287a:	f8d8 0000 	ldr.w	r0, [r8]
 801287e:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 8012882:	fb16 2103 	smlabb	r1, r6, r3, r2
 8012886:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801288a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801288e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8012892:	440a      	add	r2, r1
 8012894:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012898:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801289c:	4413      	add	r3, r2
 801289e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80128a2:	6803      	ldr	r3, [r0, #0]
 80128a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80128a6:	4798      	blx	r3
 80128a8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80128ac:	d018      	beq.n	80128e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80128ae:	f010 0f04 	tst.w	r0, #4
 80128b2:	d019      	beq.n	80128e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80128b4:	f8d8 0000 	ldr.w	r0, [r8]
 80128b8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80128bc:	6801      	ldr	r1, [r0, #0]
 80128be:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80128c2:	e9cd 9403 	strd	r9, r4, [sp, #12]
 80128c6:	b2bf      	uxth	r7, r7
 80128c8:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80128cc:	9402      	str	r4, [sp, #8]
 80128ce:	b2ad      	uxth	r5, r5
 80128d0:	9701      	str	r7, [sp, #4]
 80128d2:	9500      	str	r5, [sp, #0]
 80128d4:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 80128d6:	4631      	mov	r1, r6
 80128d8:	47a0      	blx	r4
 80128da:	b00d      	add	sp, #52	; 0x34
 80128dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128e0:	b914      	cbnz	r4, 80128e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80128e2:	f010 0f01 	tst.w	r0, #1
 80128e6:	e7e4      	b.n	80128b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80128e8:	f8d8 0000 	ldr.w	r0, [r8]
 80128ec:	6803      	ldr	r3, [r0, #0]
 80128ee:	6a1b      	ldr	r3, [r3, #32]
 80128f0:	4798      	blx	r3
 80128f2:	4a48      	ldr	r2, [pc, #288]	; (8012a14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 80128f4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80128f8:	8814      	ldrh	r4, [r2, #0]
 80128fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80128fe:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012902:	fb01 3404 	mla	r4, r1, r4, r3
 8012906:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801290a:	4692      	mov	sl, r2
 801290c:	d118      	bne.n	8012940 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 801290e:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 8012912:	f04f 0900 	mov.w	r9, #0
 8012916:	f8d8 0000 	ldr.w	r0, [r8]
 801291a:	45b9      	cmp	r9, r7
 801291c:	6803      	ldr	r3, [r0, #0]
 801291e:	da73      	bge.n	8012a08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8012920:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8012922:	4632      	mov	r2, r6
 8012924:	465b      	mov	r3, fp
 8012926:	4621      	mov	r1, r4
 8012928:	47a8      	blx	r5
 801292a:	f8ba 3000 	ldrh.w	r3, [sl]
 801292e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012932:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012936:	f109 0901 	add.w	r9, r9, #1
 801293a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801293e:	e7ea      	b.n	8012916 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 8012940:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 8012944:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8012948:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 801294c:	f04f 0b00 	mov.w	fp, #0
 8012950:	fa1f f389 	uxth.w	r3, r9
 8012954:	fa1f f888 	uxth.w	r8, r8
 8012958:	9207      	str	r2, [sp, #28]
 801295a:	45bb      	cmp	fp, r7
 801295c:	da54      	bge.n	8012a08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 801295e:	f04f 0e00 	mov.w	lr, #0
 8012962:	45ae      	cmp	lr, r5
 8012964:	da41      	bge.n	80129ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 8012966:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 801296a:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 801296e:	1208      	asrs	r0, r1, #8
 8012970:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8012974:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012978:	fb10 f008 	smulbb	r0, r0, r8
 801297c:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8012980:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012984:	00c9      	lsls	r1, r1, #3
 8012986:	fb0c 0c03 	mla	ip, ip, r3, r0
 801298a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801298e:	10d0      	asrs	r0, r2, #3
 8012990:	b2c9      	uxtb	r1, r1
 8012992:	00d2      	lsls	r2, r2, #3
 8012994:	fa1f fc8c 	uxth.w	ip, ip
 8012998:	fb19 f908 	smulbb	r9, r9, r8
 801299c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80129a0:	b2d2      	uxtb	r2, r2
 80129a2:	fb11 f108 	smulbb	r1, r1, r8
 80129a6:	fb00 9003 	mla	r0, r0, r3, r9
 80129aa:	fb02 1203 	mla	r2, r2, r3, r1
 80129ae:	f10c 0901 	add.w	r9, ip, #1
 80129b2:	b292      	uxth	r2, r2
 80129b4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80129b8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80129bc:	f102 0c01 	add.w	ip, r2, #1
 80129c0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80129c4:	b280      	uxth	r0, r0
 80129c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80129ca:	ea49 0c02 	orr.w	ip, r9, r2
 80129ce:	f100 0901 	add.w	r9, r0, #1
 80129d2:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 80129d6:	0940      	lsrs	r0, r0, #5
 80129d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80129dc:	ea4c 0c00 	orr.w	ip, ip, r0
 80129e0:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 80129e4:	f10e 0e01 	add.w	lr, lr, #1
 80129e8:	e7bb      	b.n	8012962 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 80129ea:	9a07      	ldr	r2, [sp, #28]
 80129ec:	8812      	ldrh	r2, [r2, #0]
 80129ee:	1b52      	subs	r2, r2, r5
 80129f0:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 80129f4:	4414      	add	r4, r2
 80129f6:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 80129fa:	1b52      	subs	r2, r2, r5
 80129fc:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8012a00:	4416      	add	r6, r2
 8012a02:	f10b 0b01 	add.w	fp, fp, #1
 8012a06:	e7a8      	b.n	801295a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 8012a08:	4b03      	ldr	r3, [pc, #12]	; (8012a18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 8012a0a:	6818      	ldr	r0, [r3, #0]
 8012a0c:	6803      	ldr	r3, [r0, #0]
 8012a0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012a10:	4798      	blx	r3
 8012a12:	e762      	b.n	80128da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012a14:	2000179e 	.word	0x2000179e
 8012a18:	200017a4 	.word	0x200017a4

08012a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012a1c:	b510      	push	{r4, lr}
 8012a1e:	2104      	movs	r1, #4
 8012a20:	4604      	mov	r4, r0
 8012a22:	f008 ff60 	bl	801b8e6 <_ZdlPvj>
 8012a26:	4620      	mov	r0, r4
 8012a28:	bd10      	pop	{r4, pc}

08012a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012a2a:	b510      	push	{r4, lr}
 8012a2c:	2104      	movs	r1, #4
 8012a2e:	4604      	mov	r4, r0
 8012a30:	f008 ff59 	bl	801b8e6 <_ZdlPvj>
 8012a34:	4620      	mov	r0, r4
 8012a36:	bd10      	pop	{r4, pc}

08012a38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012a38:	b510      	push	{r4, lr}
 8012a3a:	2104      	movs	r1, #4
 8012a3c:	4604      	mov	r4, r0
 8012a3e:	f008 ff52 	bl	801b8e6 <_ZdlPvj>
 8012a42:	4620      	mov	r0, r4
 8012a44:	bd10      	pop	{r4, pc}

08012a46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012a46:	b510      	push	{r4, lr}
 8012a48:	2104      	movs	r1, #4
 8012a4a:	4604      	mov	r4, r0
 8012a4c:	f008 ff4b 	bl	801b8e6 <_ZdlPvj>
 8012a50:	4620      	mov	r0, r4
 8012a52:	bd10      	pop	{r4, pc}

08012a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012a54:	b510      	push	{r4, lr}
 8012a56:	2104      	movs	r1, #4
 8012a58:	4604      	mov	r4, r0
 8012a5a:	f008 ff44 	bl	801b8e6 <_ZdlPvj>
 8012a5e:	4620      	mov	r0, r4
 8012a60:	bd10      	pop	{r4, pc}

08012a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012a62:	b510      	push	{r4, lr}
 8012a64:	2104      	movs	r1, #4
 8012a66:	4604      	mov	r4, r0
 8012a68:	f008 ff3d 	bl	801b8e6 <_ZdlPvj>
 8012a6c:	4620      	mov	r0, r4
 8012a6e:	bd10      	pop	{r4, pc}

08012a70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012a70:	b510      	push	{r4, lr}
 8012a72:	2104      	movs	r1, #4
 8012a74:	4604      	mov	r4, r0
 8012a76:	f008 ff36 	bl	801b8e6 <_ZdlPvj>
 8012a7a:	4620      	mov	r0, r4
 8012a7c:	bd10      	pop	{r4, pc}

08012a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012a7e:	b510      	push	{r4, lr}
 8012a80:	2104      	movs	r1, #4
 8012a82:	4604      	mov	r4, r0
 8012a84:	f008 ff2f 	bl	801b8e6 <_ZdlPvj>
 8012a88:	4620      	mov	r0, r4
 8012a8a:	bd10      	pop	{r4, pc}

08012a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012a8c:	b510      	push	{r4, lr}
 8012a8e:	2104      	movs	r1, #4
 8012a90:	4604      	mov	r4, r0
 8012a92:	f008 ff28 	bl	801b8e6 <_ZdlPvj>
 8012a96:	4620      	mov	r0, r4
 8012a98:	bd10      	pop	{r4, pc}

08012a9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012a9a:	b510      	push	{r4, lr}
 8012a9c:	2104      	movs	r1, #4
 8012a9e:	4604      	mov	r4, r0
 8012aa0:	f008 ff21 	bl	801b8e6 <_ZdlPvj>
 8012aa4:	4620      	mov	r0, r4
 8012aa6:	bd10      	pop	{r4, pc}

08012aa8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012aa8:	b510      	push	{r4, lr}
 8012aaa:	2104      	movs	r1, #4
 8012aac:	4604      	mov	r4, r0
 8012aae:	f008 ff1a 	bl	801b8e6 <_ZdlPvj>
 8012ab2:	4620      	mov	r0, r4
 8012ab4:	bd10      	pop	{r4, pc}

08012ab6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012ab6:	b510      	push	{r4, lr}
 8012ab8:	2104      	movs	r1, #4
 8012aba:	4604      	mov	r4, r0
 8012abc:	f008 ff13 	bl	801b8e6 <_ZdlPvj>
 8012ac0:	4620      	mov	r0, r4
 8012ac2:	bd10      	pop	{r4, pc}

08012ac4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012ac4:	b510      	push	{r4, lr}
 8012ac6:	2104      	movs	r1, #4
 8012ac8:	4604      	mov	r4, r0
 8012aca:	f008 ff0c 	bl	801b8e6 <_ZdlPvj>
 8012ace:	4620      	mov	r0, r4
 8012ad0:	bd10      	pop	{r4, pc}

08012ad2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012ad2:	b510      	push	{r4, lr}
 8012ad4:	2104      	movs	r1, #4
 8012ad6:	4604      	mov	r4, r0
 8012ad8:	f008 ff05 	bl	801b8e6 <_ZdlPvj>
 8012adc:	4620      	mov	r0, r4
 8012ade:	bd10      	pop	{r4, pc}

08012ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012ae0:	b510      	push	{r4, lr}
 8012ae2:	2104      	movs	r1, #4
 8012ae4:	4604      	mov	r4, r0
 8012ae6:	f008 fefe 	bl	801b8e6 <_ZdlPvj>
 8012aea:	4620      	mov	r0, r4
 8012aec:	bd10      	pop	{r4, pc}

08012aee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012aee:	b510      	push	{r4, lr}
 8012af0:	2104      	movs	r1, #4
 8012af2:	4604      	mov	r4, r0
 8012af4:	f008 fef7 	bl	801b8e6 <_ZdlPvj>
 8012af8:	4620      	mov	r0, r4
 8012afa:	bd10      	pop	{r4, pc}

08012afc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012afc:	b510      	push	{r4, lr}
 8012afe:	2104      	movs	r1, #4
 8012b00:	4604      	mov	r4, r0
 8012b02:	f008 fef0 	bl	801b8e6 <_ZdlPvj>
 8012b06:	4620      	mov	r0, r4
 8012b08:	bd10      	pop	{r4, pc}

08012b0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012b0a:	b510      	push	{r4, lr}
 8012b0c:	2104      	movs	r1, #4
 8012b0e:	4604      	mov	r4, r0
 8012b10:	f008 fee9 	bl	801b8e6 <_ZdlPvj>
 8012b14:	4620      	mov	r0, r4
 8012b16:	bd10      	pop	{r4, pc}

08012b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012b18:	b510      	push	{r4, lr}
 8012b1a:	2104      	movs	r1, #4
 8012b1c:	4604      	mov	r4, r0
 8012b1e:	f008 fee2 	bl	801b8e6 <_ZdlPvj>
 8012b22:	4620      	mov	r0, r4
 8012b24:	bd10      	pop	{r4, pc}

08012b26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012b26:	b510      	push	{r4, lr}
 8012b28:	2104      	movs	r1, #4
 8012b2a:	4604      	mov	r4, r0
 8012b2c:	f008 fedb 	bl	801b8e6 <_ZdlPvj>
 8012b30:	4620      	mov	r0, r4
 8012b32:	bd10      	pop	{r4, pc}

08012b34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012b34:	b510      	push	{r4, lr}
 8012b36:	2104      	movs	r1, #4
 8012b38:	4604      	mov	r4, r0
 8012b3a:	f008 fed4 	bl	801b8e6 <_ZdlPvj>
 8012b3e:	4620      	mov	r0, r4
 8012b40:	bd10      	pop	{r4, pc}

08012b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012b42:	b510      	push	{r4, lr}
 8012b44:	2104      	movs	r1, #4
 8012b46:	4604      	mov	r4, r0
 8012b48:	f008 fecd 	bl	801b8e6 <_ZdlPvj>
 8012b4c:	4620      	mov	r0, r4
 8012b4e:	bd10      	pop	{r4, pc}

08012b50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012b50:	b510      	push	{r4, lr}
 8012b52:	2104      	movs	r1, #4
 8012b54:	4604      	mov	r4, r0
 8012b56:	f008 fec6 	bl	801b8e6 <_ZdlPvj>
 8012b5a:	4620      	mov	r0, r4
 8012b5c:	bd10      	pop	{r4, pc}

08012b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012b5e:	b510      	push	{r4, lr}
 8012b60:	2104      	movs	r1, #4
 8012b62:	4604      	mov	r4, r0
 8012b64:	f008 febf 	bl	801b8e6 <_ZdlPvj>
 8012b68:	4620      	mov	r0, r4
 8012b6a:	bd10      	pop	{r4, pc}

08012b6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012b6c:	b510      	push	{r4, lr}
 8012b6e:	2104      	movs	r1, #4
 8012b70:	4604      	mov	r4, r0
 8012b72:	f008 feb8 	bl	801b8e6 <_ZdlPvj>
 8012b76:	4620      	mov	r0, r4
 8012b78:	bd10      	pop	{r4, pc}

08012b7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8012b7a:	b510      	push	{r4, lr}
 8012b7c:	2104      	movs	r1, #4
 8012b7e:	4604      	mov	r4, r0
 8012b80:	f008 feb1 	bl	801b8e6 <_ZdlPvj>
 8012b84:	4620      	mov	r0, r4
 8012b86:	bd10      	pop	{r4, pc}

08012b88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8012b88:	b510      	push	{r4, lr}
 8012b8a:	2104      	movs	r1, #4
 8012b8c:	4604      	mov	r4, r0
 8012b8e:	f008 feaa 	bl	801b8e6 <_ZdlPvj>
 8012b92:	4620      	mov	r0, r4
 8012b94:	bd10      	pop	{r4, pc}

08012b96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012b96:	b510      	push	{r4, lr}
 8012b98:	2104      	movs	r1, #4
 8012b9a:	4604      	mov	r4, r0
 8012b9c:	f008 fea3 	bl	801b8e6 <_ZdlPvj>
 8012ba0:	4620      	mov	r0, r4
 8012ba2:	bd10      	pop	{r4, pc}

08012ba4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ba8:	460e      	mov	r6, r1
 8012baa:	b08b      	sub	sp, #44	; 0x2c
 8012bac:	4615      	mov	r5, r2
 8012bae:	461c      	mov	r4, r3
 8012bb0:	b323      	cbz	r3, 8012bfc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8012bb2:	4608      	mov	r0, r1
 8012bb4:	f7f9 fa66 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012bb8:	bb00      	cbnz	r0, 8012bfc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8012bba:	6830      	ldr	r0, [r6, #0]
 8012bbc:	6871      	ldr	r1, [r6, #4]
 8012bbe:	4e55      	ldr	r6, [pc, #340]	; (8012d14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8012bc0:	ab08      	add	r3, sp, #32
 8012bc2:	c303      	stmia	r3!, {r0, r1}
 8012bc4:	a808      	add	r0, sp, #32
 8012bc6:	f7fb fab9 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012bca:	6830      	ldr	r0, [r6, #0]
 8012bcc:	6803      	ldr	r3, [r0, #0]
 8012bce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012bd0:	4798      	blx	r3
 8012bd2:	2cff      	cmp	r4, #255	; 0xff
 8012bd4:	d015      	beq.n	8012c02 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 8012bd6:	f010 0f08 	tst.w	r0, #8
 8012bda:	d015      	beq.n	8012c08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 8012bdc:	6830      	ldr	r0, [r6, #0]
 8012bde:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012be2:	6801      	ldr	r1, [r0, #0]
 8012be4:	9402      	str	r4, [sp, #8]
 8012be6:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8012bea:	9401      	str	r4, [sp, #4]
 8012bec:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8012bf0:	9400      	str	r4, [sp, #0]
 8012bf2:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 8012bf4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012bf8:	4629      	mov	r1, r5
 8012bfa:	47a0      	blx	r4
 8012bfc:	b00b      	add	sp, #44	; 0x2c
 8012bfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c02:	f010 0f02 	tst.w	r0, #2
 8012c06:	e7e8      	b.n	8012bda <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012c08:	6830      	ldr	r0, [r6, #0]
 8012c0a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8012c0e:	6803      	ldr	r3, [r0, #0]
 8012c10:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8012c14:	6a1b      	ldr	r3, [r3, #32]
 8012c16:	4798      	blx	r3
 8012c18:	4a3f      	ldr	r2, [pc, #252]	; (8012d18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 8012c1a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012c1e:	8816      	ldrh	r6, [r2, #0]
 8012c20:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012c24:	2cff      	cmp	r4, #255	; 0xff
 8012c26:	fb06 1303 	mla	r3, r6, r3, r1
 8012c2a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012c2e:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8012c32:	4616      	mov	r6, r2
 8012c34:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8012c38:	d10a      	bne.n	8012c50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8012c3a:	0049      	lsls	r1, r1, #1
 8012c3c:	2200      	movs	r2, #0
 8012c3e:	454a      	cmp	r2, r9
 8012c40:	da62      	bge.n	8012d08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8012c42:	2300      	movs	r3, #0
 8012c44:	4543      	cmp	r3, r8
 8012c46:	da58      	bge.n	8012cfa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x156>
 8012c48:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8012c4c:	3301      	adds	r3, #1
 8012c4e:	e7f9      	b.n	8012c44 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8012c50:	122b      	asrs	r3, r5, #8
 8012c52:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 8012c56:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012c5a:	b2a4      	uxth	r4, r4
 8012c5c:	4363      	muls	r3, r4
 8012c5e:	9305      	str	r3, [sp, #20]
 8012c60:	f3c5 06cc 	ubfx	r6, r5, #3, #13
 8012c64:	00eb      	lsls	r3, r5, #3
 8012c66:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012c6a:	b2db      	uxtb	r3, r3
 8012c6c:	0049      	lsls	r1, r1, #1
 8012c6e:	4366      	muls	r6, r4
 8012c70:	4363      	muls	r3, r4
 8012c72:	9106      	str	r1, [sp, #24]
 8012c74:	f04f 0c00 	mov.w	ip, #0
 8012c78:	b2bf      	uxth	r7, r7
 8012c7a:	9207      	str	r2, [sp, #28]
 8012c7c:	45cc      	cmp	ip, r9
 8012c7e:	da43      	bge.n	8012d08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8012c80:	4682      	mov	sl, r0
 8012c82:	f04f 0e00 	mov.w	lr, #0
 8012c86:	45c6      	cmp	lr, r8
 8012c88:	da2d      	bge.n	8012ce6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x142>
 8012c8a:	f8ba 2000 	ldrh.w	r2, [sl]
 8012c8e:	9905      	ldr	r1, [sp, #20]
 8012c90:	1214      	asrs	r4, r2, #8
 8012c92:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012c96:	fb14 f407 	smulbb	r4, r4, r7
 8012c9a:	440c      	add	r4, r1
 8012c9c:	10d1      	asrs	r1, r2, #3
 8012c9e:	00d2      	lsls	r2, r2, #3
 8012ca0:	b2d2      	uxtb	r2, r2
 8012ca2:	fb12 f207 	smulbb	r2, r2, r7
 8012ca6:	b2a4      	uxth	r4, r4
 8012ca8:	441a      	add	r2, r3
 8012caa:	b292      	uxth	r2, r2
 8012cac:	1c65      	adds	r5, r4, #1
 8012cae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012cb2:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8012cb6:	fb11 f107 	smulbb	r1, r1, r7
 8012cba:	1c55      	adds	r5, r2, #1
 8012cbc:	4431      	add	r1, r6
 8012cbe:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8012cc2:	b289      	uxth	r1, r1
 8012cc4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012cc8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8012ccc:	4314      	orrs	r4, r2
 8012cce:	1c4a      	adds	r2, r1, #1
 8012cd0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8012cd4:	0949      	lsrs	r1, r1, #5
 8012cd6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012cda:	430c      	orrs	r4, r1
 8012cdc:	f82a 4b02 	strh.w	r4, [sl], #2
 8012ce0:	f10e 0e01 	add.w	lr, lr, #1
 8012ce4:	e7cf      	b.n	8012c86 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe2>
 8012ce6:	9a07      	ldr	r2, [sp, #28]
 8012ce8:	9906      	ldr	r1, [sp, #24]
 8012cea:	8812      	ldrh	r2, [r2, #0]
 8012cec:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 8012cf0:	440a      	add	r2, r1
 8012cf2:	4410      	add	r0, r2
 8012cf4:	f10c 0c01 	add.w	ip, ip, #1
 8012cf8:	e7c0      	b.n	8012c7c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd8>
 8012cfa:	8833      	ldrh	r3, [r6, #0]
 8012cfc:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 8012d00:	440b      	add	r3, r1
 8012d02:	4418      	add	r0, r3
 8012d04:	3201      	adds	r2, #1
 8012d06:	e79a      	b.n	8012c3e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 8012d08:	4b02      	ldr	r3, [pc, #8]	; (8012d14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8012d0a:	6818      	ldr	r0, [r3, #0]
 8012d0c:	6803      	ldr	r3, [r0, #0]
 8012d0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012d10:	4798      	blx	r3
 8012d12:	e773      	b.n	8012bfc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8012d14:	200017a4 	.word	0x200017a4
 8012d18:	2000179e 	.word	0x2000179e

08012d1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8012d1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d20:	4d9b      	ldr	r5, [pc, #620]	; (8012f90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8012d22:	4690      	mov	r8, r2
 8012d24:	682a      	ldr	r2, [r5, #0]
 8012d26:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8012d2a:	2a02      	cmp	r2, #2
 8012d2c:	b08f      	sub	sp, #60	; 0x3c
 8012d2e:	4604      	mov	r4, r0
 8012d30:	4689      	mov	r9, r1
 8012d32:	d106      	bne.n	8012d42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8012d34:	4b97      	ldr	r3, [pc, #604]	; (8012f94 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8012d36:	4a98      	ldr	r2, [pc, #608]	; (8012f98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012d38:	f240 21c2 	movw	r1, #706	; 0x2c2
 8012d3c:	4897      	ldr	r0, [pc, #604]	; (8012f9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8012d3e:	f008 fe01 	bl	801b944 <__assert_func>
 8012d42:	ae0e      	add	r6, sp, #56	; 0x38
 8012d44:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8012d48:	4630      	mov	r0, r6
 8012d4a:	f7fd facf 	bl	80102ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012d4e:	6823      	ldr	r3, [r4, #0]
 8012d50:	4607      	mov	r7, r0
 8012d52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012d54:	4620      	mov	r0, r4
 8012d56:	4798      	blx	r3
 8012d58:	4287      	cmp	r7, r0
 8012d5a:	d004      	beq.n	8012d66 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8012d5c:	4b90      	ldr	r3, [pc, #576]	; (8012fa0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8012d5e:	4a8e      	ldr	r2, [pc, #568]	; (8012f98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012d60:	f44f 7131 	mov.w	r1, #708	; 0x2c4
 8012d64:	e7ea      	b.n	8012d3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012d66:	4630      	mov	r0, r6
 8012d68:	f7fd fa3c 	bl	80101e4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8012d6c:	4607      	mov	r7, r0
 8012d6e:	b920      	cbnz	r0, 8012d7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8012d70:	4b8c      	ldr	r3, [pc, #560]	; (8012fa4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 8012d72:	4a89      	ldr	r2, [pc, #548]	; (8012f98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012d74:	f240 21c6 	movw	r1, #710	; 0x2c6
 8012d78:	e7e0      	b.n	8012d3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012d7a:	f8d8 0000 	ldr.w	r0, [r8]
 8012d7e:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8012d82:	f9b8 a000 	ldrsh.w	sl, [r8]
 8012d86:	ab06      	add	r3, sp, #24
 8012d88:	c303      	stmia	r3!, {r0, r1}
 8012d8a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8012d8e:	f8d9 0000 	ldr.w	r0, [r9]
 8012d92:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 8012d96:	ab08      	add	r3, sp, #32
 8012d98:	c303      	stmia	r3!, {r0, r1}
 8012d9a:	4630      	mov	r0, r6
 8012d9c:	f7fd f91a 	bl	800ffd4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012da0:	4680      	mov	r8, r0
 8012da2:	4630      	mov	r0, r6
 8012da4:	f7fd f950 	bl	8010048 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012da8:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012dac:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8012db0:	f10d 0920 	add.w	r9, sp, #32
 8012db4:	a806      	add	r0, sp, #24
 8012db6:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8012dba:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8012dbe:	f7fb f9bd 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012dc2:	4648      	mov	r0, r9
 8012dc4:	f7fb f9ba 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012dc8:	a80a      	add	r0, sp, #40	; 0x28
 8012dca:	f7fb f9b7 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012dce:	4e76      	ldr	r6, [pc, #472]	; (8012fa8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8012dd0:	4b76      	ldr	r3, [pc, #472]	; (8012fac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8012dd2:	f9b6 2000 	ldrsh.w	r2, [r6]
 8012dd6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012dda:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012dde:	2100      	movs	r1, #0
 8012de0:	910c      	str	r1, [sp, #48]	; 0x30
 8012de2:	4648      	mov	r0, r9
 8012de4:	a90c      	add	r1, sp, #48	; 0x30
 8012de6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012dea:	f7f9 f907 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 8012dee:	4648      	mov	r0, r9
 8012df0:	f7f9 f948 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012df4:	2800      	cmp	r0, #0
 8012df6:	f040 80bd 	bne.w	8012f74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012dfa:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8012dfe:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8012e02:	4288      	cmp	r0, r1
 8012e04:	db37      	blt.n	8012e76 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012e06:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8012e0a:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012e0e:	429a      	cmp	r2, r3
 8012e10:	db31      	blt.n	8012e76 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012e12:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8012e16:	4460      	add	r0, ip
 8012e18:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 8012e1c:	4461      	add	r1, ip
 8012e1e:	b200      	sxth	r0, r0
 8012e20:	b209      	sxth	r1, r1
 8012e22:	4288      	cmp	r0, r1
 8012e24:	dc27      	bgt.n	8012e76 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012e26:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8012e2a:	440a      	add	r2, r1
 8012e2c:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8012e30:	440b      	add	r3, r1
 8012e32:	b212      	sxth	r2, r2
 8012e34:	b21b      	sxth	r3, r3
 8012e36:	429a      	cmp	r2, r3
 8012e38:	dc1d      	bgt.n	8012e76 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012e3a:	6823      	ldr	r3, [r4, #0]
 8012e3c:	4620      	mov	r0, r4
 8012e3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e40:	4798      	blx	r3
 8012e42:	4682      	mov	sl, r0
 8012e44:	6828      	ldr	r0, [r5, #0]
 8012e46:	6803      	ldr	r3, [r0, #0]
 8012e48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e4a:	4798      	blx	r3
 8012e4c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012e50:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012e54:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8012e58:	1a9b      	subs	r3, r3, r2
 8012e5a:	b29b      	uxth	r3, r3
 8012e5c:	b21c      	sxth	r4, r3
 8012e5e:	2c00      	cmp	r4, #0
 8012e60:	dc0e      	bgt.n	8012e80 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 8012e62:	bf1f      	itttt	ne
 8012e64:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8012e68:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 8012e6c:	189b      	addne	r3, r3, r2
 8012e6e:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8012e72:	463c      	mov	r4, r7
 8012e74:	e00a      	b.n	8012e8c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 8012e76:	4b4e      	ldr	r3, [pc, #312]	; (8012fb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8012e78:	4a47      	ldr	r2, [pc, #284]	; (8012f98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012e7a:	f44f 7135 	mov.w	r1, #724	; 0x2d4
 8012e7e:	e75d      	b.n	8012d3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012e80:	ebab 0303 	sub.w	r3, fp, r3
 8012e84:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8012e88:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8012e8c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8012e90:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012e94:	1a5b      	subs	r3, r3, r1
 8012e96:	b29b      	uxth	r3, r3
 8012e98:	b21a      	sxth	r2, r3
 8012e9a:	2a00      	cmp	r2, #0
 8012e9c:	dd4a      	ble.n	8012f34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8012e9e:	fb02 f20b 	mul.w	r2, r2, fp
 8012ea2:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8012ea6:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8012eaa:	1ad3      	subs	r3, r2, r3
 8012eac:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012eb0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8012eb4:	2b00      	cmp	r3, #0
 8012eb6:	dd5d      	ble.n	8012f74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012eb8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8012ebc:	f1bc 0f00 	cmp.w	ip, #0
 8012ec0:	dd58      	ble.n	8012f74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012ec2:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8012ec6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012eca:	fb0a f801 	mul.w	r8, sl, r1
 8012ece:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8012ed2:	4480      	add	r8, r0
 8012ed4:	8830      	ldrh	r0, [r6, #0]
 8012ed6:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8012eda:	42b3      	cmp	r3, r6
 8012edc:	bfa8      	it	ge
 8012ede:	4633      	movge	r3, r6
 8012ee0:	1a82      	subs	r2, r0, r2
 8012ee2:	4293      	cmp	r3, r2
 8012ee4:	bfa8      	it	ge
 8012ee6:	4613      	movge	r3, r2
 8012ee8:	4a30      	ldr	r2, [pc, #192]	; (8012fac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8012eea:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8012eee:	8812      	ldrh	r2, [r2, #0]
 8012ef0:	4566      	cmp	r6, ip
 8012ef2:	eba2 0101 	sub.w	r1, r2, r1
 8012ef6:	bfa8      	it	ge
 8012ef8:	4666      	movge	r6, ip
 8012efa:	428e      	cmp	r6, r1
 8012efc:	4632      	mov	r2, r6
 8012efe:	bfa8      	it	ge
 8012f00:	460a      	movge	r2, r1
 8012f02:	4298      	cmp	r0, r3
 8012f04:	9202      	str	r2, [sp, #8]
 8012f06:	d01e      	beq.n	8012f46 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8012f08:	005b      	lsls	r3, r3, #1
 8012f0a:	9303      	str	r3, [sp, #12]
 8012f0c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8012f10:	f04f 0900 	mov.w	r9, #0
 8012f14:	9b02      	ldr	r3, [sp, #8]
 8012f16:	454b      	cmp	r3, r9
 8012f18:	dd2c      	ble.n	8012f74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012f1a:	6828      	ldr	r0, [r5, #0]
 8012f1c:	6803      	ldr	r3, [r0, #0]
 8012f1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f20:	4642      	mov	r2, r8
 8012f22:	461e      	mov	r6, r3
 8012f24:	4621      	mov	r1, r4
 8012f26:	9b03      	ldr	r3, [sp, #12]
 8012f28:	47b0      	blx	r6
 8012f2a:	44d0      	add	r8, sl
 8012f2c:	445c      	add	r4, fp
 8012f2e:	f109 0901 	add.w	r9, r9, #1
 8012f32:	e7ef      	b.n	8012f14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8012f34:	bf1f      	itttt	ne
 8012f36:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 8012f3a:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 8012f3e:	189b      	addne	r3, r3, r2
 8012f40:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8012f44:	e7b4      	b.n	8012eb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8012f46:	4558      	cmp	r0, fp
 8012f48:	d1de      	bne.n	8012f08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 8012f4a:	6828      	ldr	r0, [r5, #0]
 8012f4c:	6803      	ldr	r3, [r0, #0]
 8012f4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012f50:	4798      	blx	r3
 8012f52:	07c3      	lsls	r3, r0, #31
 8012f54:	d512      	bpl.n	8012f7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8012f56:	6828      	ldr	r0, [r5, #0]
 8012f58:	9b02      	ldr	r3, [sp, #8]
 8012f5a:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8012f5e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012f62:	6803      	ldr	r3, [r0, #0]
 8012f64:	f8cd b000 	str.w	fp, [sp]
 8012f68:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8012f6a:	e899 0006 	ldmia.w	r9, {r1, r2}
 8012f6e:	4623      	mov	r3, r4
 8012f70:	47a8      	blx	r5
 8012f72:	4607      	mov	r7, r0
 8012f74:	4638      	mov	r0, r7
 8012f76:	b00f      	add	sp, #60	; 0x3c
 8012f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f7c:	6828      	ldr	r0, [r5, #0]
 8012f7e:	6803      	ldr	r3, [r0, #0]
 8012f80:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8012f82:	9b02      	ldr	r3, [sp, #8]
 8012f84:	4642      	mov	r2, r8
 8012f86:	fb03 f30a 	mul.w	r3, r3, sl
 8012f8a:	4621      	mov	r1, r4
 8012f8c:	47a8      	blx	r5
 8012f8e:	e7f1      	b.n	8012f74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012f90:	200017a4 	.word	0x200017a4
 8012f94:	08020ef3 	.word	0x08020ef3
 8012f98:	08021737 	.word	0x08021737
 8012f9c:	08020fa7 	.word	0x08020fa7
 8012fa0:	08020fd9 	.word	0x08020fd9
 8012fa4:	0802102e 	.word	0x0802102e
 8012fa8:	2000179e 	.word	0x2000179e
 8012fac:	200017a0 	.word	0x200017a0
 8012fb0:	0802106c 	.word	0x0802106c

08012fb4 <_ZN8touchgfx8LCD16bppC1Ev>:
 8012fb4:	2200      	movs	r2, #0
 8012fb6:	4910      	ldr	r1, [pc, #64]	; (8012ff8 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012fb8:	6042      	str	r2, [r0, #4]
 8012fba:	6001      	str	r1, [r0, #0]
 8012fbc:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012fc0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012fc4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012fc8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012fcc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012fd0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012fd4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012fd8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012fdc:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012fe0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012fe4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012fe8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012fec:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012ff0:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012ff4:	4770      	bx	lr
 8012ff6:	bf00      	nop
 8012ff8:	080213b0 	.word	0x080213b0

08012ffc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012ffc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013000:	460c      	mov	r4, r1
 8013002:	b08d      	sub	sp, #52	; 0x34
 8013004:	4682      	mov	sl, r0
 8013006:	6808      	ldr	r0, [r1, #0]
 8013008:	6849      	ldr	r1, [r1, #4]
 801300a:	469b      	mov	fp, r3
 801300c:	ab08      	add	r3, sp, #32
 801300e:	c303      	stmia	r3!, {r0, r1}
 8013010:	6810      	ldr	r0, [r2, #0]
 8013012:	6851      	ldr	r1, [r2, #4]
 8013014:	ab0a      	add	r3, sp, #40	; 0x28
 8013016:	c303      	stmia	r3!, {r0, r1}
 8013018:	a808      	add	r0, sp, #32
 801301a:	f7fb f88f 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801301e:	4621      	mov	r1, r4
 8013020:	a80a      	add	r0, sp, #40	; 0x28
 8013022:	f7fb f873 	bl	800e10c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013026:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801302a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801302e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8013032:	4c60      	ldr	r4, [pc, #384]	; (80131b4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8013034:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8013038:	6820      	ldr	r0, [r4, #0]
 801303a:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 801303e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013042:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 8013046:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801304a:	440a      	add	r2, r1
 801304c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013050:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8013054:	4413      	add	r3, r2
 8013056:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801305a:	6803      	ldr	r3, [r0, #0]
 801305c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801305e:	4798      	blx	r3
 8013060:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013064:	d119      	bne.n	801309a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8013066:	f010 0f20 	tst.w	r0, #32
 801306a:	6820      	ldr	r0, [r4, #0]
 801306c:	d018      	beq.n	80130a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801306e:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8013072:	6801      	ldr	r1, [r0, #0]
 8013074:	9402      	str	r4, [sp, #8]
 8013076:	fa1f f489 	uxth.w	r4, r9
 801307a:	9401      	str	r4, [sp, #4]
 801307c:	fa1f f488 	uxth.w	r4, r8
 8013080:	f8cd b00c 	str.w	fp, [sp, #12]
 8013084:	9400      	str	r4, [sp, #0]
 8013086:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8013088:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801308c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8013090:	4651      	mov	r1, sl
 8013092:	47a0      	blx	r4
 8013094:	b00d      	add	sp, #52	; 0x34
 8013096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801309a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801309e:	e7e4      	b.n	801306a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80130a0:	6803      	ldr	r3, [r0, #0]
 80130a2:	6a1b      	ldr	r3, [r3, #32]
 80130a4:	4798      	blx	r3
 80130a6:	4a44      	ldr	r2, [pc, #272]	; (80131b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 80130a8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80130ac:	8813      	ldrh	r3, [r2, #0]
 80130ae:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80130b2:	9207      	str	r2, [sp, #28]
 80130b4:	fb04 1303 	mla	r3, r4, r3, r1
 80130b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80130bc:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 80130c0:	0099      	lsls	r1, r3, #2
 80130c2:	005b      	lsls	r3, r3, #1
 80130c4:	9106      	str	r1, [sp, #24]
 80130c6:	9305      	str	r3, [sp, #20]
 80130c8:	f04f 0c00 	mov.w	ip, #0
 80130cc:	45cc      	cmp	ip, r9
 80130ce:	da6b      	bge.n	80131a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 80130d0:	2300      	movs	r3, #0
 80130d2:	4543      	cmp	r3, r8
 80130d4:	da55      	bge.n	8013182 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 80130d6:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 80130da:	0e25      	lsrs	r5, r4, #24
 80130dc:	d013      	beq.n	8013106 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80130de:	2dff      	cmp	r5, #255	; 0xff
 80130e0:	ea4f 2714 	mov.w	r7, r4, lsr #8
 80130e4:	d111      	bne.n	801310a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 80130e6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80130ea:	d10e      	bne.n	801310a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 80130ec:	0962      	lsrs	r2, r4, #5
 80130ee:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80130f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80130f6:	f027 0707 	bic.w	r7, r7, #7
 80130fa:	4317      	orrs	r7, r2
 80130fc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013100:	433c      	orrs	r4, r7
 8013102:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8013106:	3301      	adds	r3, #1
 8013108:	e7e3      	b.n	80130d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 801310a:	fb0b f505 	mul.w	r5, fp, r5
 801310e:	1c6a      	adds	r2, r5, #1
 8013110:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8013114:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8013118:	1212      	asrs	r2, r2, #8
 801311a:	fa1f fe82 	uxth.w	lr, r2
 801311e:	120e      	asrs	r6, r1, #8
 8013120:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8013124:	43d2      	mvns	r2, r2
 8013126:	b2d2      	uxtb	r2, r2
 8013128:	fb15 f50e 	smulbb	r5, r5, lr
 801312c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013130:	fb06 5602 	mla	r6, r6, r2, r5
 8013134:	b2e4      	uxtb	r4, r4
 8013136:	10cd      	asrs	r5, r1, #3
 8013138:	00c9      	lsls	r1, r1, #3
 801313a:	b2c9      	uxtb	r1, r1
 801313c:	fb14 f40e 	smulbb	r4, r4, lr
 8013140:	fb01 4402 	mla	r4, r1, r2, r4
 8013144:	b2ff      	uxtb	r7, r7
 8013146:	b2b6      	uxth	r6, r6
 8013148:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801314c:	b2a4      	uxth	r4, r4
 801314e:	fb17 f70e 	smulbb	r7, r7, lr
 8013152:	fb05 7702 	mla	r7, r5, r2, r7
 8013156:	1c72      	adds	r2, r6, #1
 8013158:	1c65      	adds	r5, r4, #1
 801315a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801315e:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8013162:	b2bf      	uxth	r7, r7
 8013164:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013168:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801316c:	432e      	orrs	r6, r5
 801316e:	1c7d      	adds	r5, r7, #1
 8013170:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8013174:	097f      	lsrs	r7, r7, #5
 8013176:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801317a:	433e      	orrs	r6, r7
 801317c:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8013180:	e7c1      	b.n	8013106 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8013182:	9b07      	ldr	r3, [sp, #28]
 8013184:	9a05      	ldr	r2, [sp, #20]
 8013186:	881b      	ldrh	r3, [r3, #0]
 8013188:	eba3 0308 	sub.w	r3, r3, r8
 801318c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013190:	4418      	add	r0, r3
 8013192:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013196:	9a06      	ldr	r2, [sp, #24]
 8013198:	eba3 0308 	sub.w	r3, r3, r8
 801319c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80131a0:	449a      	add	sl, r3
 80131a2:	f10c 0c01 	add.w	ip, ip, #1
 80131a6:	e791      	b.n	80130cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 80131a8:	4b02      	ldr	r3, [pc, #8]	; (80131b4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 80131aa:	6818      	ldr	r0, [r3, #0]
 80131ac:	6803      	ldr	r3, [r0, #0]
 80131ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80131b0:	4798      	blx	r3
 80131b2:	e76f      	b.n	8013094 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80131b4:	200017a4 	.word	0x200017a4
 80131b8:	2000179e 	.word	0x2000179e

080131bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80131bc:	b570      	push	{r4, r5, r6, lr}
 80131be:	9d04      	ldr	r5, [sp, #16]
 80131c0:	f89d 6018 	ldrb.w	r6, [sp, #24]
 80131c4:	460c      	mov	r4, r1
 80131c6:	4619      	mov	r1, r3
 80131c8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80131cc:	2a0c      	cmp	r2, #12
 80131ce:	d820      	bhi.n	8013212 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 80131d0:	e8df f002 	tbb	[pc, r2]
 80131d4:	18121807 	.word	0x18121807
 80131d8:	18181818 	.word	0x18181818
 80131dc:	18181818 	.word	0x18181818
 80131e0:	18          	.byte	0x18
 80131e1:	00          	.byte	0x00
 80131e2:	6802      	ldr	r2, [r0, #0]
 80131e4:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80131e8:	6916      	ldr	r6, [r2, #16]
 80131ea:	462b      	mov	r3, r5
 80131ec:	460a      	mov	r2, r1
 80131ee:	46b4      	mov	ip, r6
 80131f0:	4621      	mov	r1, r4
 80131f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131f6:	4760      	bx	ip
 80131f8:	462a      	mov	r2, r5
 80131fa:	4620      	mov	r0, r4
 80131fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013200:	f7ff befc 	b.w	8012ffc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013204:	4b03      	ldr	r3, [pc, #12]	; (8013214 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8013206:	4a04      	ldr	r2, [pc, #16]	; (8013218 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8013208:	4804      	ldr	r0, [pc, #16]	; (801321c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 801320a:	f240 21bb 	movw	r1, #699	; 0x2bb
 801320e:	f008 fb99 	bl	801b944 <__assert_func>
 8013212:	bd70      	pop	{r4, r5, r6, pc}
 8013214:	080210cc 	.word	0x080210cc
 8013218:	080217bd 	.word	0x080217bd
 801321c:	08020fa7 	.word	0x08020fa7

08013220 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8013220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013224:	b093      	sub	sp, #76	; 0x4c
 8013226:	880f      	ldrh	r7, [r1, #0]
 8013228:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801322c:	4681      	mov	r9, r0
 801322e:	4688      	mov	r8, r1
 8013230:	4615      	mov	r5, r2
 8013232:	b12f      	cbz	r7, 8013240 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8013234:	4b71      	ldr	r3, [pc, #452]	; (80133fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8013236:	4a72      	ldr	r2, [pc, #456]	; (8013400 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8013238:	4872      	ldr	r0, [pc, #456]	; (8013404 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801323a:	21ec      	movs	r1, #236	; 0xec
 801323c:	f008 fb82 	bl	801b944 <__assert_func>
 8013240:	6810      	ldr	r0, [r2, #0]
 8013242:	6851      	ldr	r1, [r2, #4]
 8013244:	ac0e      	add	r4, sp, #56	; 0x38
 8013246:	c403      	stmia	r4!, {r0, r1}
 8013248:	6818      	ldr	r0, [r3, #0]
 801324a:	6859      	ldr	r1, [r3, #4]
 801324c:	ac10      	add	r4, sp, #64	; 0x40
 801324e:	c403      	stmia	r4!, {r0, r1}
 8013250:	a80e      	add	r0, sp, #56	; 0x38
 8013252:	f7fa ff73 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013256:	4629      	mov	r1, r5
 8013258:	a810      	add	r0, sp, #64	; 0x40
 801325a:	f7fa ff57 	bl	800e10c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801325e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013262:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8013266:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801326a:	4d67      	ldr	r5, [pc, #412]	; (8013408 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 801326c:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8013270:	6828      	ldr	r0, [r5, #0]
 8013272:	4c66      	ldr	r4, [pc, #408]	; (801340c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8013274:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013278:	4489      	add	r9, r1
 801327a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801327e:	440a      	add	r2, r1
 8013280:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013284:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013288:	4413      	add	r3, r2
 801328a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801328e:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8013292:	930a      	str	r3, [sp, #40]	; 0x28
 8013294:	6803      	ldr	r3, [r0, #0]
 8013296:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801329a:	4798      	blx	r3
 801329c:	2801      	cmp	r0, #1
 801329e:	d11d      	bne.n	80132dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 80132a0:	220b      	movs	r2, #11
 80132a2:	9708      	str	r7, [sp, #32]
 80132a4:	9207      	str	r2, [sp, #28]
 80132a6:	8822      	ldrh	r2, [r4, #0]
 80132a8:	f8cd a010 	str.w	sl, [sp, #16]
 80132ac:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80132b0:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80132b4:	9203      	str	r2, [sp, #12]
 80132b6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80132ba:	9202      	str	r2, [sp, #8]
 80132bc:	fa1f f28b 	uxth.w	r2, fp
 80132c0:	9201      	str	r2, [sp, #4]
 80132c2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80132c6:	9200      	str	r2, [sp, #0]
 80132c8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80132cc:	6828      	ldr	r0, [r5, #0]
 80132ce:	4642      	mov	r2, r8
 80132d0:	4649      	mov	r1, r9
 80132d2:	f7f9 fae1 	bl	800c898 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80132d6:	b013      	add	sp, #76	; 0x4c
 80132d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80132dc:	6828      	ldr	r0, [r5, #0]
 80132de:	6803      	ldr	r3, [r0, #0]
 80132e0:	6a1b      	ldr	r3, [r3, #32]
 80132e2:	4798      	blx	r3
 80132e4:	8823      	ldrh	r3, [r4, #0]
 80132e6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80132ea:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80132ee:	fb01 2303 	mla	r3, r1, r3, r2
 80132f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80132f6:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 80132fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80132fc:	005b      	lsls	r3, r3, #1
 80132fe:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8013302:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013304:	429f      	cmp	r7, r3
 8013306:	da72      	bge.n	80133ee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8013308:	2100      	movs	r1, #0
 801330a:	4559      	cmp	r1, fp
 801330c:	da5e      	bge.n	80133cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801330e:	f819 3001 	ldrb.w	r3, [r9, r1]
 8013312:	2204      	movs	r2, #4
 8013314:	fb12 2303 	smlabb	r3, r2, r3, r2
 8013318:	f858 2003 	ldr.w	r2, [r8, r3]
 801331c:	0e15      	lsrs	r5, r2, #24
 801331e:	d013      	beq.n	8013348 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8013320:	2dff      	cmp	r5, #255	; 0xff
 8013322:	ea4f 2412 	mov.w	r4, r2, lsr #8
 8013326:	d111      	bne.n	801334c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8013328:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801332c:	d10e      	bne.n	801334c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801332e:	0953      	lsrs	r3, r2, #5
 8013330:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8013334:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013338:	f024 0407 	bic.w	r4, r4, #7
 801333c:	431c      	orrs	r4, r3
 801333e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013342:	4314      	orrs	r4, r2
 8013344:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8013348:	3101      	adds	r1, #1
 801334a:	e7de      	b.n	801330a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 801334c:	fb0a f505 	mul.w	r5, sl, r5
 8013350:	1c6b      	adds	r3, r5, #1
 8013352:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8013356:	eb03 2325 	add.w	r3, r3, r5, asr #8
 801335a:	121b      	asrs	r3, r3, #8
 801335c:	fa1f fe83 	uxth.w	lr, r3
 8013360:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013364:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8013368:	43db      	mvns	r3, r3
 801336a:	b2db      	uxtb	r3, r3
 801336c:	fb15 f50e 	smulbb	r5, r5, lr
 8013370:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013374:	fb06 5603 	mla	r6, r6, r3, r5
 8013378:	b2d2      	uxtb	r2, r2
 801337a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801337e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013382:	fa5f fc8c 	uxtb.w	ip, ip
 8013386:	fb12 f20e 	smulbb	r2, r2, lr
 801338a:	fb0c 2203 	mla	r2, ip, r3, r2
 801338e:	b2e4      	uxtb	r4, r4
 8013390:	b2b6      	uxth	r6, r6
 8013392:	fb14 f40e 	smulbb	r4, r4, lr
 8013396:	b292      	uxth	r2, r2
 8013398:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801339c:	fb05 4503 	mla	r5, r5, r3, r4
 80133a0:	1c73      	adds	r3, r6, #1
 80133a2:	1c54      	adds	r4, r2, #1
 80133a4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80133a8:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80133ac:	b2ad      	uxth	r5, r5
 80133ae:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80133b2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80133b6:	4326      	orrs	r6, r4
 80133b8:	1c6c      	adds	r4, r5, #1
 80133ba:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 80133be:	0964      	lsrs	r4, r4, #5
 80133c0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80133c4:	4326      	orrs	r6, r4
 80133c6:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 80133ca:	e7bd      	b.n	8013348 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80133cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80133ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80133d0:	881b      	ldrh	r3, [r3, #0]
 80133d2:	eba3 030b 	sub.w	r3, r3, fp
 80133d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80133da:	4418      	add	r0, r3
 80133dc:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80133e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80133e2:	eba3 030b 	sub.w	r3, r3, fp
 80133e6:	4413      	add	r3, r2
 80133e8:	4499      	add	r9, r3
 80133ea:	3701      	adds	r7, #1
 80133ec:	e789      	b.n	8013302 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80133ee:	4b06      	ldr	r3, [pc, #24]	; (8013408 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 80133f0:	6818      	ldr	r0, [r3, #0]
 80133f2:	6803      	ldr	r3, [r0, #0]
 80133f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80133f6:	4798      	blx	r3
 80133f8:	e76d      	b.n	80132d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 80133fa:	bf00      	nop
 80133fc:	08020ea3 	.word	0x08020ea3
 8013400:	0802158e 	.word	0x0802158e
 8013404:	08020fa7 	.word	0x08020fa7
 8013408:	200017a4 	.word	0x200017a4
 801340c:	2000179e 	.word	0x2000179e

08013410 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8013410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013414:	4614      	mov	r4, r2
 8013416:	880a      	ldrh	r2, [r1, #0]
 8013418:	b093      	sub	sp, #76	; 0x4c
 801341a:	2a02      	cmp	r2, #2
 801341c:	4606      	mov	r6, r0
 801341e:	4689      	mov	r9, r1
 8013420:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8013424:	d006      	beq.n	8013434 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8013426:	4b7a      	ldr	r3, [pc, #488]	; (8013610 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8013428:	4a7a      	ldr	r2, [pc, #488]	; (8013614 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 801342a:	487b      	ldr	r0, [pc, #492]	; (8013618 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 801342c:	f44f 71a3 	mov.w	r1, #326	; 0x146
 8013430:	f008 fa88 	bl	801b944 <__assert_func>
 8013434:	2f00      	cmp	r7, #0
 8013436:	d04b      	beq.n	80134d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8013438:	6820      	ldr	r0, [r4, #0]
 801343a:	6861      	ldr	r1, [r4, #4]
 801343c:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8013620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8013440:	ad0e      	add	r5, sp, #56	; 0x38
 8013442:	c503      	stmia	r5!, {r0, r1}
 8013444:	6818      	ldr	r0, [r3, #0]
 8013446:	6859      	ldr	r1, [r3, #4]
 8013448:	ad10      	add	r5, sp, #64	; 0x40
 801344a:	c503      	stmia	r5!, {r0, r1}
 801344c:	a80e      	add	r0, sp, #56	; 0x38
 801344e:	f7fa fe75 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013452:	4621      	mov	r1, r4
 8013454:	a810      	add	r0, sp, #64	; 0x40
 8013456:	f7fa fe59 	bl	800e10c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801345a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801345e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8013462:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8013466:	f8da 0000 	ldr.w	r0, [sl]
 801346a:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 801346e:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 8013472:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013476:	1874      	adds	r4, r6, r1
 8013478:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801347c:	4e67      	ldr	r6, [pc, #412]	; (801361c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 801347e:	440a      	add	r2, r1
 8013480:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013484:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013488:	4413      	add	r3, r2
 801348a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801348e:	6803      	ldr	r3, [r0, #0]
 8013490:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013494:	4798      	blx	r3
 8013496:	2801      	cmp	r0, #1
 8013498:	d11d      	bne.n	80134d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 801349a:	2200      	movs	r2, #0
 801349c:	210b      	movs	r1, #11
 801349e:	e9cd 1207 	strd	r1, r2, [sp, #28]
 80134a2:	8831      	ldrh	r1, [r6, #0]
 80134a4:	9704      	str	r7, [sp, #16]
 80134a6:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80134aa:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80134ae:	9203      	str	r2, [sp, #12]
 80134b0:	fa1f f288 	uxth.w	r2, r8
 80134b4:	9202      	str	r2, [sp, #8]
 80134b6:	b2ad      	uxth	r5, r5
 80134b8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80134bc:	9200      	str	r2, [sp, #0]
 80134be:	9501      	str	r5, [sp, #4]
 80134c0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80134c4:	f8da 0000 	ldr.w	r0, [sl]
 80134c8:	464a      	mov	r2, r9
 80134ca:	4621      	mov	r1, r4
 80134cc:	f7f9 f9e4 	bl	800c898 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80134d0:	b013      	add	sp, #76	; 0x4c
 80134d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134d6:	f8da 0000 	ldr.w	r0, [sl]
 80134da:	6803      	ldr	r3, [r0, #0]
 80134dc:	6a1b      	ldr	r3, [r3, #32]
 80134de:	4798      	blx	r3
 80134e0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80134e4:	8833      	ldrh	r3, [r6, #0]
 80134e6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80134ea:	fb01 2303 	mla	r3, r1, r3, r2
 80134ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80134f2:	2fff      	cmp	r7, #255	; 0xff
 80134f4:	f109 0304 	add.w	r3, r9, #4
 80134f8:	930a      	str	r3, [sp, #40]	; 0x28
 80134fa:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 80134fe:	d111      	bne.n	8013524 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8013500:	b212      	sxth	r2, r2
 8013502:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 8013506:	2100      	movs	r1, #0
 8013508:	4541      	cmp	r1, r8
 801350a:	da7a      	bge.n	8013602 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 801350c:	2300      	movs	r3, #0
 801350e:	42ab      	cmp	r3, r5
 8013510:	da6b      	bge.n	80135ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 8013512:	f814 c003 	ldrb.w	ip, [r4, r3]
 8013516:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013518:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 801351c:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8013520:	3301      	adds	r3, #1
 8013522:	e7f4      	b.n	801350e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 8013524:	b213      	sxth	r3, r2
 8013526:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801352a:	930b      	str	r3, [sp, #44]	; 0x2c
 801352c:	005b      	lsls	r3, r3, #1
 801352e:	930c      	str	r3, [sp, #48]	; 0x30
 8013530:	f04f 0900 	mov.w	r9, #0
 8013534:	b2ba      	uxth	r2, r7
 8013536:	fa1f fc8c 	uxth.w	ip, ip
 801353a:	960d      	str	r6, [sp, #52]	; 0x34
 801353c:	45c1      	cmp	r9, r8
 801353e:	da60      	bge.n	8013602 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8013540:	46a3      	mov	fp, r4
 8013542:	4682      	mov	sl, r0
 8013544:	ebab 0304 	sub.w	r3, fp, r4
 8013548:	429d      	cmp	r5, r3
 801354a:	dd3e      	ble.n	80135ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 801354c:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8013550:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013552:	f8ba 1000 	ldrh.w	r1, [sl]
 8013556:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801355a:	120e      	asrs	r6, r1, #8
 801355c:	121f      	asrs	r7, r3, #8
 801355e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013562:	fb16 f60c 	smulbb	r6, r6, ip
 8013566:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 801356a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801356e:	00c9      	lsls	r1, r1, #3
 8013570:	fb07 6702 	mla	r7, r7, r2, r6
 8013574:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013578:	10de      	asrs	r6, r3, #3
 801357a:	b2c9      	uxtb	r1, r1
 801357c:	00db      	lsls	r3, r3, #3
 801357e:	fb1e fe0c 	smulbb	lr, lr, ip
 8013582:	fb11 f10c 	smulbb	r1, r1, ip
 8013586:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801358a:	b2db      	uxtb	r3, r3
 801358c:	b2bf      	uxth	r7, r7
 801358e:	fb06 e602 	mla	r6, r6, r2, lr
 8013592:	fb03 1302 	mla	r3, r3, r2, r1
 8013596:	b2b6      	uxth	r6, r6
 8013598:	b29b      	uxth	r3, r3
 801359a:	1c79      	adds	r1, r7, #1
 801359c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80135a0:	f106 0e01 	add.w	lr, r6, #1
 80135a4:	1c59      	adds	r1, r3, #1
 80135a6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80135aa:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80135ae:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80135b2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80135b6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80135ba:	430f      	orrs	r7, r1
 80135bc:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80135c0:	ea47 070e 	orr.w	r7, r7, lr
 80135c4:	f82a 7b02 	strh.w	r7, [sl], #2
 80135c8:	e7bc      	b.n	8013544 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 80135ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80135cc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80135ce:	881b      	ldrh	r3, [r3, #0]
 80135d0:	1b5b      	subs	r3, r3, r5
 80135d2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80135d6:	4418      	add	r0, r3
 80135d8:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80135dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80135de:	1b5b      	subs	r3, r3, r5
 80135e0:	440b      	add	r3, r1
 80135e2:	441c      	add	r4, r3
 80135e4:	f109 0901 	add.w	r9, r9, #1
 80135e8:	e7a8      	b.n	801353c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 80135ea:	8833      	ldrh	r3, [r6, #0]
 80135ec:	1b5b      	subs	r3, r3, r5
 80135ee:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 80135f2:	4418      	add	r0, r3
 80135f4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80135f8:	1b5b      	subs	r3, r3, r5
 80135fa:	4413      	add	r3, r2
 80135fc:	441c      	add	r4, r3
 80135fe:	3101      	adds	r1, #1
 8013600:	e782      	b.n	8013508 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 8013602:	4b07      	ldr	r3, [pc, #28]	; (8013620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 8013604:	6818      	ldr	r0, [r3, #0]
 8013606:	6803      	ldr	r3, [r0, #0]
 8013608:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801360a:	4798      	blx	r3
 801360c:	e760      	b.n	80134d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801360e:	bf00      	nop
 8013610:	08020d61 	.word	0x08020d61
 8013614:	080213f8 	.word	0x080213f8
 8013618:	08020fa7 	.word	0x08020fa7
 801361c:	2000179e 	.word	0x2000179e
 8013620:	200017a4 	.word	0x200017a4

08013624 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8013624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013628:	4616      	mov	r6, r2
 801362a:	880a      	ldrh	r2, [r1, #0]
 801362c:	b093      	sub	sp, #76	; 0x4c
 801362e:	2a01      	cmp	r2, #1
 8013630:	4681      	mov	r9, r0
 8013632:	4688      	mov	r8, r1
 8013634:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8013638:	d006      	beq.n	8013648 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 801363a:	4b6c      	ldr	r3, [pc, #432]	; (80137ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801363c:	4a6c      	ldr	r2, [pc, #432]	; (80137f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 801363e:	486d      	ldr	r0, [pc, #436]	; (80137f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 8013640:	f240 11a1 	movw	r1, #417	; 0x1a1
 8013644:	f008 f97e 	bl	801b944 <__assert_func>
 8013648:	f1ba 0f00 	cmp.w	sl, #0
 801364c:	d04a      	beq.n	80136e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 801364e:	6830      	ldr	r0, [r6, #0]
 8013650:	6871      	ldr	r1, [r6, #4]
 8013652:	4d69      	ldr	r5, [pc, #420]	; (80137f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8013654:	ac0e      	add	r4, sp, #56	; 0x38
 8013656:	c403      	stmia	r4!, {r0, r1}
 8013658:	6818      	ldr	r0, [r3, #0]
 801365a:	6859      	ldr	r1, [r3, #4]
 801365c:	ac10      	add	r4, sp, #64	; 0x40
 801365e:	c403      	stmia	r4!, {r0, r1}
 8013660:	a80e      	add	r0, sp, #56	; 0x38
 8013662:	f7fa fd6b 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013666:	4631      	mov	r1, r6
 8013668:	a810      	add	r0, sp, #64	; 0x40
 801366a:	f7fa fd4f 	bl	800e10c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801366e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013672:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8013676:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801367a:	6828      	ldr	r0, [r5, #0]
 801367c:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8013680:	4c5e      	ldr	r4, [pc, #376]	; (80137fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8013682:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013686:	4489      	add	r9, r1
 8013688:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801368c:	440a      	add	r2, r1
 801368e:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013692:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013696:	4413      	add	r3, r2
 8013698:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801369c:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 80136a0:	930a      	str	r3, [sp, #40]	; 0x28
 80136a2:	6803      	ldr	r3, [r0, #0]
 80136a4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80136a8:	4798      	blx	r3
 80136aa:	2801      	cmp	r0, #1
 80136ac:	d11d      	bne.n	80136ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 80136ae:	220b      	movs	r2, #11
 80136b0:	2100      	movs	r1, #0
 80136b2:	e9cd 2107 	strd	r2, r1, [sp, #28]
 80136b6:	8822      	ldrh	r2, [r4, #0]
 80136b8:	f8cd a010 	str.w	sl, [sp, #16]
 80136bc:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80136c0:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80136c4:	9203      	str	r2, [sp, #12]
 80136c6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80136ca:	9202      	str	r2, [sp, #8]
 80136cc:	b2b6      	uxth	r6, r6
 80136ce:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80136d2:	9200      	str	r2, [sp, #0]
 80136d4:	9601      	str	r6, [sp, #4]
 80136d6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80136da:	6828      	ldr	r0, [r5, #0]
 80136dc:	4642      	mov	r2, r8
 80136de:	4649      	mov	r1, r9
 80136e0:	f7f9 f8da 	bl	800c898 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80136e4:	b013      	add	sp, #76	; 0x4c
 80136e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136ea:	6828      	ldr	r0, [r5, #0]
 80136ec:	6803      	ldr	r3, [r0, #0]
 80136ee:	6a1b      	ldr	r3, [r3, #32]
 80136f0:	4798      	blx	r3
 80136f2:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80136f6:	8823      	ldrh	r3, [r4, #0]
 80136f8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80136fc:	940d      	str	r4, [sp, #52]	; 0x34
 80136fe:	fb01 2303 	mla	r3, r1, r3, r2
 8013702:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013706:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 801370a:	930b      	str	r3, [sp, #44]	; 0x2c
 801370c:	ea6f 010a 	mvn.w	r1, sl
 8013710:	005b      	lsls	r3, r3, #1
 8013712:	930c      	str	r3, [sp, #48]	; 0x30
 8013714:	f04f 0e00 	mov.w	lr, #0
 8013718:	b2c9      	uxtb	r1, r1
 801371a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801371c:	459e      	cmp	lr, r3
 801371e:	da5f      	bge.n	80137e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8013720:	2700      	movs	r7, #0
 8013722:	fa1f fb8a 	uxth.w	fp, sl
 8013726:	42b7      	cmp	r7, r6
 8013728:	da4a      	bge.n	80137c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 801372a:	f819 3007 	ldrb.w	r3, [r9, r7]
 801372e:	2203      	movs	r2, #3
 8013730:	2404      	movs	r4, #4
 8013732:	fb12 4303 	smlabb	r3, r2, r3, r4
 8013736:	eb08 0403 	add.w	r4, r8, r3
 801373a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801373e:	78a2      	ldrb	r2, [r4, #2]
 8013740:	7865      	ldrb	r5, [r4, #1]
 8013742:	f818 c003 	ldrb.w	ip, [r8, r3]
 8013746:	d10c      	bne.n	8013762 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8013748:	4b2d      	ldr	r3, [pc, #180]	; (8013800 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801374a:	00ed      	lsls	r5, r5, #3
 801374c:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8013750:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013754:	432a      	orrs	r2, r5
 8013756:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 801375a:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 801375e:	3701      	adds	r7, #1
 8013760:	e7e1      	b.n	8013726 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 8013762:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 8013766:	121c      	asrs	r4, r3, #8
 8013768:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801376c:	fb12 f20b 	smulbb	r2, r2, fp
 8013770:	fb04 2201 	mla	r2, r4, r1, r2
 8013774:	10dc      	asrs	r4, r3, #3
 8013776:	00db      	lsls	r3, r3, #3
 8013778:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801377c:	b2db      	uxtb	r3, r3
 801377e:	fb15 f50b 	smulbb	r5, r5, fp
 8013782:	fb1c fc0b 	smulbb	ip, ip, fp
 8013786:	b292      	uxth	r2, r2
 8013788:	fb04 5501 	mla	r5, r4, r1, r5
 801378c:	fb03 cc01 	mla	ip, r3, r1, ip
 8013790:	b2ad      	uxth	r5, r5
 8013792:	fa1f fc8c 	uxth.w	ip, ip
 8013796:	1c53      	adds	r3, r2, #1
 8013798:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801379c:	1c6c      	adds	r4, r5, #1
 801379e:	f10c 0301 	add.w	r3, ip, #1
 80137a2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80137a6:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 80137aa:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80137ae:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80137b2:	096d      	lsrs	r5, r5, #5
 80137b4:	ea42 020c 	orr.w	r2, r2, ip
 80137b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80137bc:	432a      	orrs	r2, r5
 80137be:	e7cc      	b.n	801375a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 80137c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80137c2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80137c4:	881b      	ldrh	r3, [r3, #0]
 80137c6:	1b9b      	subs	r3, r3, r6
 80137c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80137cc:	4418      	add	r0, r3
 80137ce:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80137d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80137d4:	1b9b      	subs	r3, r3, r6
 80137d6:	4413      	add	r3, r2
 80137d8:	4499      	add	r9, r3
 80137da:	f10e 0e01 	add.w	lr, lr, #1
 80137de:	e79c      	b.n	801371a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 80137e0:	4b05      	ldr	r3, [pc, #20]	; (80137f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80137e2:	6818      	ldr	r0, [r3, #0]
 80137e4:	6803      	ldr	r3, [r0, #0]
 80137e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80137e8:	4798      	blx	r3
 80137ea:	e77b      	b.n	80136e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80137ec:	08020daf 	.word	0x08020daf
 80137f0:	08021481 	.word	0x08021481
 80137f4:	08020fa7 	.word	0x08020fa7
 80137f8:	200017a4 	.word	0x200017a4
 80137fc:	2000179e 	.word	0x2000179e
 8013800:	fffff800 	.word	0xfffff800

08013804 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8013804:	b430      	push	{r4, r5}
 8013806:	780d      	ldrb	r5, [r1, #0]
 8013808:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801380c:	2d01      	cmp	r5, #1
 801380e:	d00a      	beq.n	8013826 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8013810:	d305      	bcc.n	801381e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8013812:	2d02      	cmp	r5, #2
 8013814:	d10b      	bne.n	801382e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8013816:	9402      	str	r4, [sp, #8]
 8013818:	bc30      	pop	{r4, r5}
 801381a:	f7ff bdf9 	b.w	8013410 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801381e:	9402      	str	r4, [sp, #8]
 8013820:	bc30      	pop	{r4, r5}
 8013822:	f7ff bcfd 	b.w	8013220 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8013826:	9402      	str	r4, [sp, #8]
 8013828:	bc30      	pop	{r4, r5}
 801382a:	f7ff befb 	b.w	8013624 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801382e:	bc30      	pop	{r4, r5}
 8013830:	4770      	bx	lr
	...

08013834 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013838:	4605      	mov	r5, r0
 801383a:	b089      	sub	sp, #36	; 0x24
 801383c:	6810      	ldr	r0, [r2, #0]
 801383e:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 8013842:	460c      	mov	r4, r1
 8013844:	6851      	ldr	r1, [r2, #4]
 8013846:	ae04      	add	r6, sp, #16
 8013848:	c603      	stmia	r6!, {r0, r1}
 801384a:	6818      	ldr	r0, [r3, #0]
 801384c:	6859      	ldr	r1, [r3, #4]
 801384e:	ae06      	add	r6, sp, #24
 8013850:	4617      	mov	r7, r2
 8013852:	c603      	stmia	r6!, {r0, r1}
 8013854:	a804      	add	r0, sp, #16
 8013856:	f7fa fc71 	bl	800e13c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801385a:	4639      	mov	r1, r7
 801385c:	a806      	add	r0, sp, #24
 801385e:	f7fa fc55 	bl	800e10c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013862:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8013866:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801386a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801386e:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 8013872:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013876:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 801387a:	440c      	add	r4, r1
 801387c:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8013880:	440a      	add	r2, r1
 8013882:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013886:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801388a:	4413      	add	r3, r2
 801388c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013890:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013894:	9300      	str	r3, [sp, #0]
 8013896:	4b80      	ldr	r3, [pc, #512]	; (8013a98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8013898:	6818      	ldr	r0, [r3, #0]
 801389a:	6803      	ldr	r3, [r0, #0]
 801389c:	6a1b      	ldr	r3, [r3, #32]
 801389e:	4798      	blx	r3
 80138a0:	4b7e      	ldr	r3, [pc, #504]	; (8013a9c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 80138a2:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 80138a6:	881a      	ldrh	r2, [r3, #0]
 80138a8:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80138ac:	fb06 1202 	mla	r2, r6, r2, r1
 80138b0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80138b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80138b8:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 80138bc:	b212      	sxth	r2, r2
 80138be:	d117      	bne.n	80138f0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 80138c0:	9201      	str	r2, [sp, #4]
 80138c2:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80138c6:	f04f 0a00 	mov.w	sl, #0
 80138ca:	9302      	str	r3, [sp, #8]
 80138cc:	9b00      	ldr	r3, [sp, #0]
 80138ce:	459a      	cmp	sl, r3
 80138d0:	f280 80d9 	bge.w	8013a86 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80138d4:	2100      	movs	r1, #0
 80138d6:	4541      	cmp	r1, r8
 80138d8:	f280 80c1 	bge.w	8013a5e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 80138dc:	5c63      	ldrb	r3, [r4, r1]
 80138de:	b12b      	cbz	r3, 80138ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 80138e0:	2bff      	cmp	r3, #255	; 0xff
 80138e2:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 80138e6:	d176      	bne.n	80139d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 80138e8:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 80138ec:	3101      	adds	r1, #1
 80138ee:	e7f2      	b.n	80138d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 80138f0:	9202      	str	r2, [sp, #8]
 80138f2:	0052      	lsls	r2, r2, #1
 80138f4:	9201      	str	r2, [sp, #4]
 80138f6:	f04f 0b00 	mov.w	fp, #0
 80138fa:	9303      	str	r3, [sp, #12]
 80138fc:	9b00      	ldr	r3, [sp, #0]
 80138fe:	459b      	cmp	fp, r3
 8013900:	f280 80c1 	bge.w	8013a86 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8013904:	f04f 0c00 	mov.w	ip, #0
 8013908:	45c4      	cmp	ip, r8
 801390a:	da4f      	bge.n	80139ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 801390c:	f814 300c 	ldrb.w	r3, [r4, ip]
 8013910:	2b00      	cmp	r3, #0
 8013912:	d048      	beq.n	80139a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8013914:	fb09 f303 	mul.w	r3, r9, r3
 8013918:	1c5a      	adds	r2, r3, #1
 801391a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801391e:	121b      	asrs	r3, r3, #8
 8013920:	d041      	beq.n	80139a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8013922:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 8013926:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 801392a:	b29e      	uxth	r6, r3
 801392c:	1211      	asrs	r1, r2, #8
 801392e:	43db      	mvns	r3, r3
 8013930:	b2db      	uxtb	r3, r3
 8013932:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013936:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801393a:	fb11 f103 	smulbb	r1, r1, r3
 801393e:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8013942:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013946:	00d2      	lsls	r2, r2, #3
 8013948:	fb07 1706 	mla	r7, r7, r6, r1
 801394c:	b2d2      	uxtb	r2, r2
 801394e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8013952:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013956:	fb12 f203 	smulbb	r2, r2, r3
 801395a:	fa5f fe8e 	uxtb.w	lr, lr
 801395e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8013962:	fb0e 2206 	mla	r2, lr, r6, r2
 8013966:	fb1a fa03 	smulbb	sl, sl, r3
 801396a:	b2bf      	uxth	r7, r7
 801396c:	b292      	uxth	r2, r2
 801396e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013972:	fb01 a106 	mla	r1, r1, r6, sl
 8013976:	1c7b      	adds	r3, r7, #1
 8013978:	f102 0a01 	add.w	sl, r2, #1
 801397c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8013980:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 8013984:	b289      	uxth	r1, r1
 8013986:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801398a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801398e:	ea47 070a 	orr.w	r7, r7, sl
 8013992:	f101 0a01 	add.w	sl, r1, #1
 8013996:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 801399a:	0949      	lsrs	r1, r1, #5
 801399c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80139a0:	430f      	orrs	r7, r1
 80139a2:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 80139a6:	f10c 0c01 	add.w	ip, ip, #1
 80139aa:	e7ad      	b.n	8013908 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 80139ac:	9b03      	ldr	r3, [sp, #12]
 80139ae:	9a01      	ldr	r2, [sp, #4]
 80139b0:	881b      	ldrh	r3, [r3, #0]
 80139b2:	eba3 0308 	sub.w	r3, r3, r8
 80139b6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80139ba:	4418      	add	r0, r3
 80139bc:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80139c0:	eba3 0308 	sub.w	r3, r3, r8
 80139c4:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80139c8:	4415      	add	r5, r2
 80139ca:	9a02      	ldr	r2, [sp, #8]
 80139cc:	4413      	add	r3, r2
 80139ce:	441c      	add	r4, r3
 80139d0:	f10b 0b01 	add.w	fp, fp, #1
 80139d4:	e792      	b.n	80138fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 80139d6:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 80139da:	b29f      	uxth	r7, r3
 80139dc:	1216      	asrs	r6, r2, #8
 80139de:	43db      	mvns	r3, r3
 80139e0:	b2db      	uxtb	r3, r3
 80139e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80139e6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80139ea:	fb16 f603 	smulbb	r6, r6, r3
 80139ee:	ea4f 09e2 	mov.w	r9, r2, asr #3
 80139f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80139f6:	00d2      	lsls	r2, r2, #3
 80139f8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80139fc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013a00:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013a04:	b2d2      	uxtb	r2, r2
 8013a06:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013a0a:	fa1f fc8c 	uxth.w	ip, ip
 8013a0e:	fb19 f903 	smulbb	r9, r9, r3
 8013a12:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013a16:	fa5f fe8e 	uxtb.w	lr, lr
 8013a1a:	fb12 f203 	smulbb	r2, r2, r3
 8013a1e:	fb06 9607 	mla	r6, r6, r7, r9
 8013a22:	fb0e 2207 	mla	r2, lr, r7, r2
 8013a26:	f10c 0901 	add.w	r9, ip, #1
 8013a2a:	b292      	uxth	r2, r2
 8013a2c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8013a30:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8013a34:	f102 0c01 	add.w	ip, r2, #1
 8013a38:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8013a3c:	b2b6      	uxth	r6, r6
 8013a3e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013a42:	ea49 0c02 	orr.w	ip, r9, r2
 8013a46:	f106 0901 	add.w	r9, r6, #1
 8013a4a:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8013a4e:	0976      	lsrs	r6, r6, #5
 8013a50:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013a54:	ea4c 0c06 	orr.w	ip, ip, r6
 8013a58:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8013a5c:	e746      	b.n	80138ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8013a5e:	9b02      	ldr	r3, [sp, #8]
 8013a60:	881b      	ldrh	r3, [r3, #0]
 8013a62:	eba3 0308 	sub.w	r3, r3, r8
 8013a66:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8013a6a:	4418      	add	r0, r3
 8013a6c:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8013a70:	eba3 0308 	sub.w	r3, r3, r8
 8013a74:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8013a78:	4415      	add	r5, r2
 8013a7a:	9a01      	ldr	r2, [sp, #4]
 8013a7c:	4413      	add	r3, r2
 8013a7e:	441c      	add	r4, r3
 8013a80:	f10a 0a01 	add.w	sl, sl, #1
 8013a84:	e722      	b.n	80138cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 8013a86:	4b04      	ldr	r3, [pc, #16]	; (8013a98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8013a88:	6818      	ldr	r0, [r3, #0]
 8013a8a:	6803      	ldr	r3, [r0, #0]
 8013a8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013a8e:	4798      	blx	r3
 8013a90:	b009      	add	sp, #36	; 0x24
 8013a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a96:	bf00      	nop
 8013a98:	200017a4 	.word	0x200017a4
 8013a9c:	2000179e 	.word	0x2000179e

08013aa0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013aa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013aa4:	b089      	sub	sp, #36	; 0x24
 8013aa6:	4682      	mov	sl, r0
 8013aa8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013aac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013aae:	460d      	mov	r5, r1
 8013ab0:	4691      	mov	r9, r2
 8013ab2:	4698      	mov	r8, r3
 8013ab4:	b3ae      	cbz	r6, 8013b22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013ab6:	4608      	mov	r0, r1
 8013ab8:	f7fc fa8c 	bl	800ffd4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013abc:	4607      	mov	r7, r0
 8013abe:	4628      	mov	r0, r5
 8013ac0:	f7fc fac2 	bl	8010048 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ac4:	f8ad 000e 	strh.w	r0, [sp, #14]
 8013ac8:	4628      	mov	r0, r5
 8013aca:	f8ad 9008 	strh.w	r9, [sp, #8]
 8013ace:	f8ad 800a 	strh.w	r8, [sp, #10]
 8013ad2:	f8ad 700c 	strh.w	r7, [sp, #12]
 8013ad6:	f7fc fc09 	bl	80102ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013ada:	b178      	cbz	r0, 8013afc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013adc:	4628      	mov	r0, r5
 8013ade:	f7fc fc05 	bl	80102ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013ae2:	2802      	cmp	r0, #2
 8013ae4:	d00a      	beq.n	8013afc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013ae6:	4628      	mov	r0, r5
 8013ae8:	f7fc fc00 	bl	80102ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013aec:	280b      	cmp	r0, #11
 8013aee:	d005      	beq.n	8013afc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013af0:	4b69      	ldr	r3, [pc, #420]	; (8013c98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8013af2:	4a6a      	ldr	r2, [pc, #424]	; (8013c9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8013af4:	486a      	ldr	r0, [pc, #424]	; (8013ca0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8013af6:	214f      	movs	r1, #79	; 0x4f
 8013af8:	f007 ff24 	bl	801b944 <__assert_func>
 8013afc:	4628      	mov	r0, r5
 8013afe:	f7fc fb71 	bl	80101e4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013b02:	4607      	mov	r7, r0
 8013b04:	4628      	mov	r0, r5
 8013b06:	f7fc fb9f 	bl	8010248 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013b0a:	4681      	mov	r9, r0
 8013b0c:	4628      	mov	r0, r5
 8013b0e:	f7fc fbed 	bl	80102ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b12:	2802      	cmp	r0, #2
 8013b14:	d108      	bne.n	8013b28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8013b16:	4633      	mov	r3, r6
 8013b18:	4622      	mov	r2, r4
 8013b1a:	a902      	add	r1, sp, #8
 8013b1c:	4638      	mov	r0, r7
 8013b1e:	f7ff fa6d 	bl	8012ffc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013b22:	b009      	add	sp, #36	; 0x24
 8013b24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b28:	4628      	mov	r0, r5
 8013b2a:	f7fc fbdf 	bl	80102ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b2e:	280b      	cmp	r0, #11
 8013b30:	d107      	bne.n	8013b42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8013b32:	9600      	str	r6, [sp, #0]
 8013b34:	4623      	mov	r3, r4
 8013b36:	aa02      	add	r2, sp, #8
 8013b38:	4649      	mov	r1, r9
 8013b3a:	4638      	mov	r0, r7
 8013b3c:	f7ff fe62 	bl	8013804 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013b40:	e7ef      	b.n	8013b22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013b42:	4628      	mov	r0, r5
 8013b44:	f7fc fb14 	bl	8010170 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013b48:	b950      	cbnz	r0, 8013b60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013b4a:	e9cd 6000 	strd	r6, r0, [sp]
 8013b4e:	f8da 3000 	ldr.w	r3, [sl]
 8013b52:	aa02      	add	r2, sp, #8
 8013b54:	691d      	ldr	r5, [r3, #16]
 8013b56:	4639      	mov	r1, r7
 8013b58:	4623      	mov	r3, r4
 8013b5a:	4650      	mov	r0, sl
 8013b5c:	47a8      	blx	r5
 8013b5e:	e7e0      	b.n	8013b22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013b60:	f10d 0818 	add.w	r8, sp, #24
 8013b64:	4629      	mov	r1, r5
 8013b66:	4640      	mov	r0, r8
 8013b68:	f7fc faa8 	bl	80100bc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013b6c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013b70:	ad04      	add	r5, sp, #16
 8013b72:	e885 0003 	stmia.w	r5, {r0, r1}
 8013b76:	4628      	mov	r0, r5
 8013b78:	4621      	mov	r1, r4
 8013b7a:	f7f8 fa3f 	bl	800bffc <_ZN8touchgfx4RectaNERKS0_>
 8013b7e:	4628      	mov	r0, r5
 8013b80:	f7f8 fa80 	bl	800c084 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013b84:	b138      	cbz	r0, 8013b96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8013b86:	9600      	str	r6, [sp, #0]
 8013b88:	4623      	mov	r3, r4
 8013b8a:	aa02      	add	r2, sp, #8
 8013b8c:	4649      	mov	r1, r9
 8013b8e:	4638      	mov	r0, r7
 8013b90:	f7ff fe50 	bl	8013834 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013b94:	e7c5      	b.n	8013b22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013b96:	e9cd 6000 	strd	r6, r0, [sp]
 8013b9a:	f8da 3000 	ldr.w	r3, [sl]
 8013b9e:	aa02      	add	r2, sp, #8
 8013ba0:	f8d3 b010 	ldr.w	fp, [r3, #16]
 8013ba4:	4639      	mov	r1, r7
 8013ba6:	462b      	mov	r3, r5
 8013ba8:	4650      	mov	r0, sl
 8013baa:	47d8      	blx	fp
 8013bac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013bb0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013bb4:	4293      	cmp	r3, r2
 8013bb6:	dd13      	ble.n	8013be0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8013bb8:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013bbc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013bc0:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013bc4:	1a9b      	subs	r3, r3, r2
 8013bc6:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013bca:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013bce:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013bd2:	9600      	str	r6, [sp, #0]
 8013bd4:	4643      	mov	r3, r8
 8013bd6:	aa02      	add	r2, sp, #8
 8013bd8:	4649      	mov	r1, r9
 8013bda:	4638      	mov	r0, r7
 8013bdc:	f7ff fe2a 	bl	8013834 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013be0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013be4:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013be8:	4293      	cmp	r3, r2
 8013bea:	dd13      	ble.n	8013c14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8013bec:	1a9b      	subs	r3, r3, r2
 8013bee:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013bf2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013bf6:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013bfa:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013bfe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c02:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013c06:	9600      	str	r6, [sp, #0]
 8013c08:	4643      	mov	r3, r8
 8013c0a:	aa02      	add	r2, sp, #8
 8013c0c:	4649      	mov	r1, r9
 8013c0e:	4638      	mov	r0, r7
 8013c10:	f7ff fe10 	bl	8013834 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013c14:	88a2      	ldrh	r2, [r4, #4]
 8013c16:	8823      	ldrh	r3, [r4, #0]
 8013c18:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013c1c:	4413      	add	r3, r2
 8013c1e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013c22:	440a      	add	r2, r1
 8013c24:	b29b      	uxth	r3, r3
 8013c26:	b292      	uxth	r2, r2
 8013c28:	b211      	sxth	r1, r2
 8013c2a:	b218      	sxth	r0, r3
 8013c2c:	4288      	cmp	r0, r1
 8013c2e:	dd13      	ble.n	8013c58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8013c30:	1a9b      	subs	r3, r3, r2
 8013c32:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013c36:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8013c3a:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013c3e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c42:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013c46:	9600      	str	r6, [sp, #0]
 8013c48:	4643      	mov	r3, r8
 8013c4a:	aa02      	add	r2, sp, #8
 8013c4c:	4649      	mov	r1, r9
 8013c4e:	4638      	mov	r0, r7
 8013c50:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013c54:	f7ff fdee 	bl	8013834 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013c58:	88e2      	ldrh	r2, [r4, #6]
 8013c5a:	8863      	ldrh	r3, [r4, #2]
 8013c5c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013c60:	4413      	add	r3, r2
 8013c62:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013c66:	440a      	add	r2, r1
 8013c68:	b29b      	uxth	r3, r3
 8013c6a:	b292      	uxth	r2, r2
 8013c6c:	b211      	sxth	r1, r2
 8013c6e:	b218      	sxth	r0, r3
 8013c70:	4288      	cmp	r0, r1
 8013c72:	f77f af56 	ble.w	8013b22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013c76:	f9b4 5000 	ldrsh.w	r5, [r4]
 8013c7a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013c7e:	f8ad 5018 	strh.w	r5, [sp, #24]
 8013c82:	1a9b      	subs	r3, r3, r2
 8013c84:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013c88:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013c8c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013c90:	9600      	str	r6, [sp, #0]
 8013c92:	4643      	mov	r3, r8
 8013c94:	e779      	b.n	8013b8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8013c96:	bf00      	nop
 8013c98:	08020dfd 	.word	0x08020dfd
 8013c9c:	0802150a 	.word	0x0802150a
 8013ca0:	08020fa7 	.word	0x08020fa7

08013ca4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013ca4:	b508      	push	{r3, lr}
 8013ca6:	b180      	cbz	r0, 8013cca <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8013ca8:	2902      	cmp	r1, #2
 8013caa:	d014      	beq.n	8013cd6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013cac:	2903      	cmp	r1, #3
 8013cae:	d01d      	beq.n	8013cec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013cb0:	2901      	cmp	r1, #1
 8013cb2:	d101      	bne.n	8013cb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013cb4:	2001      	movs	r0, #1
 8013cb6:	bd08      	pop	{r3, pc}
 8013cb8:	4b0e      	ldr	r3, [pc, #56]	; (8013cf4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013cba:	8818      	ldrh	r0, [r3, #0]
 8013cbc:	b990      	cbnz	r0, 8013ce4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013cbe:	4b0e      	ldr	r3, [pc, #56]	; (8013cf8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013cc0:	4a0e      	ldr	r2, [pc, #56]	; (8013cfc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013cc2:	480f      	ldr	r0, [pc, #60]	; (8013d00 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013cc4:	21d7      	movs	r1, #215	; 0xd7
 8013cc6:	f007 fe3d 	bl	801b944 <__assert_func>
 8013cca:	2902      	cmp	r1, #2
 8013ccc:	d00e      	beq.n	8013cec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013cce:	2903      	cmp	r1, #3
 8013cd0:	d0f2      	beq.n	8013cb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013cd2:	2901      	cmp	r1, #1
 8013cd4:	d1ee      	bne.n	8013cb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013cd6:	4b07      	ldr	r3, [pc, #28]	; (8013cf4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013cd8:	8818      	ldrh	r0, [r3, #0]
 8013cda:	2800      	cmp	r0, #0
 8013cdc:	d0ef      	beq.n	8013cbe <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8013cde:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013ce2:	e7e8      	b.n	8013cb6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013ce4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013ce8:	4240      	negs	r0, r0
 8013cea:	e7e4      	b.n	8013cb6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013cec:	f04f 30ff 	mov.w	r0, #4294967295
 8013cf0:	e7e1      	b.n	8013cb6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013cf2:	bf00      	nop
 8013cf4:	2000179e 	.word	0x2000179e
 8013cf8:	08021101 	.word	0x08021101
 8013cfc:	08021687 	.word	0x08021687
 8013d00:	08021143 	.word	0x08021143

08013d04 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013d04:	b508      	push	{r3, lr}
 8013d06:	b180      	cbz	r0, 8013d2a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8013d08:	2902      	cmp	r1, #2
 8013d0a:	d014      	beq.n	8013d36 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8013d0c:	2903      	cmp	r1, #3
 8013d0e:	d018      	beq.n	8013d42 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013d10:	2901      	cmp	r1, #1
 8013d12:	d001      	beq.n	8013d18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013d14:	2001      	movs	r0, #1
 8013d16:	e013      	b.n	8013d40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013d18:	4b0e      	ldr	r3, [pc, #56]	; (8013d54 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013d1a:	8818      	ldrh	r0, [r3, #0]
 8013d1c:	b970      	cbnz	r0, 8013d3c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8013d1e:	4b0e      	ldr	r3, [pc, #56]	; (8013d58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8013d20:	4a0e      	ldr	r2, [pc, #56]	; (8013d5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8013d22:	480f      	ldr	r0, [pc, #60]	; (8013d60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013d24:	21d7      	movs	r1, #215	; 0xd7
 8013d26:	f007 fe0d 	bl	801b944 <__assert_func>
 8013d2a:	2902      	cmp	r1, #2
 8013d2c:	d009      	beq.n	8013d42 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013d2e:	2903      	cmp	r1, #3
 8013d30:	d0f0      	beq.n	8013d14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013d32:	2901      	cmp	r1, #1
 8013d34:	d1f0      	bne.n	8013d18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013d36:	f04f 30ff 	mov.w	r0, #4294967295
 8013d3a:	e001      	b.n	8013d40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013d3c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013d40:	bd08      	pop	{r3, pc}
 8013d42:	4b04      	ldr	r3, [pc, #16]	; (8013d54 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013d44:	8818      	ldrh	r0, [r3, #0]
 8013d46:	2800      	cmp	r0, #0
 8013d48:	d0e9      	beq.n	8013d1e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8013d4a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013d4e:	4240      	negs	r0, r0
 8013d50:	e7f6      	b.n	8013d40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013d52:	bf00      	nop
 8013d54:	2000179e 	.word	0x2000179e
 8013d58:	08021101 	.word	0x08021101
 8013d5c:	08021687 	.word	0x08021687
 8013d60:	08021143 	.word	0x08021143

08013d64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d68:	b097      	sub	sp, #92	; 0x5c
 8013d6a:	9109      	str	r1, [sp, #36]	; 0x24
 8013d6c:	a912      	add	r1, sp, #72	; 0x48
 8013d6e:	e881 000c 	stmia.w	r1, {r2, r3}
 8013d72:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8013d76:	9306      	str	r3, [sp, #24]
 8013d78:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8013d7c:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8013d80:	930e      	str	r3, [sp, #56]	; 0x38
 8013d82:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8013d86:	930a      	str	r3, [sp, #40]	; 0x28
 8013d88:	7b4b      	ldrb	r3, [r1, #13]
 8013d8a:	798f      	ldrb	r7, [r1, #6]
 8013d8c:	f9bd 4080 	ldrsh.w	r4, [sp, #128]	; 0x80
 8013d90:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 8013d94:	f8bd 508c 	ldrh.w	r5, [sp, #140]	; 0x8c
 8013d98:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8013d9c:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8013da0:	0158      	lsls	r0, r3, #5
 8013da2:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013da6:	4338      	orrs	r0, r7
 8013da8:	9008      	str	r0, [sp, #32]
 8013daa:	f000 8149 	beq.w	8014040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013dae:	011b      	lsls	r3, r3, #4
 8013db0:	79c8      	ldrb	r0, [r1, #7]
 8013db2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013db6:	4303      	orrs	r3, r0
 8013db8:	9307      	str	r3, [sp, #28]
 8013dba:	f000 8141 	beq.w	8014040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013dbe:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013dc2:	b29b      	uxth	r3, r3
 8013dc4:	2e00      	cmp	r6, #0
 8013dc6:	f000 80e5 	beq.w	8013f94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x230>
 8013dca:	1af6      	subs	r6, r6, r3
 8013dcc:	b2b6      	uxth	r6, r6
 8013dce:	0433      	lsls	r3, r6, #16
 8013dd0:	d502      	bpl.n	8013dd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8013dd2:	1ba4      	subs	r4, r4, r6
 8013dd4:	b224      	sxth	r4, r4
 8013dd6:	2600      	movs	r6, #0
 8013dd8:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013ddc:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8013de0:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 8013de4:	428c      	cmp	r4, r1
 8013de6:	b28b      	uxth	r3, r1
 8013de8:	bfbf      	itttt	lt
 8013dea:	18f6      	addlt	r6, r6, r3
 8013dec:	1b34      	sublt	r4, r6, r4
 8013dee:	b2a6      	uxthlt	r6, r4
 8013df0:	460c      	movlt	r4, r1
 8013df2:	8891      	ldrh	r1, [r2, #4]
 8013df4:	440b      	add	r3, r1
 8013df6:	b21b      	sxth	r3, r3
 8013df8:	930d      	str	r3, [sp, #52]	; 0x34
 8013dfa:	88d3      	ldrh	r3, [r2, #6]
 8013dfc:	9a06      	ldr	r2, [sp, #24]
 8013dfe:	449a      	add	sl, r3
 8013e00:	fa0f f38a 	sxth.w	r3, sl
 8013e04:	930c      	str	r3, [sp, #48]	; 0x30
 8013e06:	4bb5      	ldr	r3, [pc, #724]	; (80140dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8013e08:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 8013e0c:	f893 9000 	ldrb.w	r9, [r3]
 8013e10:	f109 3cff 	add.w	ip, r9, #4294967295
 8013e14:	f1dc 0300 	rsbs	r3, ip, #0
 8013e18:	eb43 030c 	adc.w	r3, r3, ip
 8013e1c:	930b      	str	r3, [sp, #44]	; 0x2c
 8013e1e:	4621      	mov	r1, r4
 8013e20:	465b      	mov	r3, fp
 8013e22:	a812      	add	r0, sp, #72	; 0x48
 8013e24:	f7fa f862 	bl	800deec <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013e28:	4621      	mov	r1, r4
 8013e2a:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8013e2e:	465b      	mov	r3, fp
 8013e30:	9a06      	ldr	r2, [sp, #24]
 8013e32:	a812      	add	r0, sp, #72	; 0x48
 8013e34:	f7fa f872 	bl	800df1c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013e38:	a916      	add	r1, sp, #88	; 0x58
 8013e3a:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8013e3e:	a815      	add	r0, sp, #84	; 0x54
 8013e40:	f7fa f94e 	bl	800e0e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013e44:	f1bb 0f00 	cmp.w	fp, #0
 8013e48:	f040 80a7 	bne.w	8013f9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x236>
 8013e4c:	f1b9 0f01 	cmp.w	r9, #1
 8013e50:	f040 80ab 	bne.w	8013faa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
 8013e54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e56:	2b00      	cmp	r3, #0
 8013e58:	f040 80f7 	bne.w	801404a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e6>
 8013e5c:	4ba0      	ldr	r3, [pc, #640]	; (80140e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8013e5e:	6818      	ldr	r0, [r3, #0]
 8013e60:	6803      	ldr	r3, [r0, #0]
 8013e62:	6a1b      	ldr	r3, [r3, #32]
 8013e64:	4798      	blx	r3
 8013e66:	4a9f      	ldr	r2, [pc, #636]	; (80140e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8013e68:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8013e6c:	8811      	ldrh	r1, [r2, #0]
 8013e6e:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8013e72:	fb01 2303 	mla	r3, r1, r3, r2
 8013e76:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013e7a:	f04f 0901 	mov.w	r9, #1
 8013e7e:	9307      	str	r3, [sp, #28]
 8013e80:	fa09 f308 	lsl.w	r3, r9, r8
 8013e84:	3b01      	subs	r3, #1
 8013e86:	b2db      	uxtb	r3, r3
 8013e88:	45c8      	cmp	r8, r9
 8013e8a:	930f      	str	r3, [sp, #60]	; 0x3c
 8013e8c:	f000 80df 	beq.w	801404e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
 8013e90:	f1b8 0f02 	cmp.w	r8, #2
 8013e94:	f000 8153 	beq.w	801413e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3da>
 8013e98:	f1b8 0f04 	cmp.w	r8, #4
 8013e9c:	f000 8146 	beq.w	801412c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c8>
 8013ea0:	b906      	cbnz	r6, 8013ea4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 8013ea2:	b175      	cbz	r5, 8013ec2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8013ea4:	fb17 6305 	smlabb	r3, r7, r5, r6
 8013ea8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8013eaa:	fb13 f308 	smulbb	r3, r3, r8
 8013eae:	b29b      	uxth	r3, r3
 8013eb0:	ebaa 0a05 	sub.w	sl, sl, r5
 8013eb4:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8013eb8:	9226      	str	r2, [sp, #152]	; 0x98
 8013eba:	fa1f fa8a 	uxth.w	sl, sl
 8013ebe:	f003 0507 	and.w	r5, r3, #7
 8013ec2:	4659      	mov	r1, fp
 8013ec4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013ec6:	f7ff feed 	bl	8013ca4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8013eca:	4659      	mov	r1, fp
 8013ecc:	9010      	str	r0, [sp, #64]	; 0x40
 8013ece:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013ed0:	f7ff ff18 	bl	8013d04 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013ed4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013ed6:	9a06      	ldr	r2, [sp, #24]
 8013ed8:	1a9a      	subs	r2, r3, r2
 8013eda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013edc:	1ba4      	subs	r4, r4, r6
 8013ede:	1b1c      	subs	r4, r3, r4
 8013ee0:	9b08      	ldr	r3, [sp, #32]
 8013ee2:	4592      	cmp	sl, r2
 8013ee4:	bfa8      	it	ge
 8013ee6:	4692      	movge	sl, r2
 8013ee8:	429c      	cmp	r4, r3
 8013eea:	bfd4      	ite	le
 8013eec:	ebc6 0604 	rsble	r6, r6, r4
 8013ef0:	ebc6 0603 	rsbgt	r6, r6, r3
 8013ef4:	1bbf      	subs	r7, r7, r6
 8013ef6:	fb08 f307 	mul.w	r3, r8, r7
 8013efa:	930b      	str	r3, [sp, #44]	; 0x2c
 8013efc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013efe:	781a      	ldrb	r2, [r3, #0]
 8013f00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f02:	1219      	asrs	r1, r3, #8
 8013f04:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8013f08:	930c      	str	r3, [sp, #48]	; 0x30
 8013f0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f0c:	f3c3 01cc 	ubfx	r1, r3, #3, #13
 8013f10:	f001 03fc 	and.w	r3, r1, #252	; 0xfc
 8013f14:	930d      	str	r3, [sp, #52]	; 0x34
 8013f16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f18:	00d9      	lsls	r1, r3, #3
 8013f1a:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8013f1e:	930e      	str	r3, [sp, #56]	; 0x38
 8013f20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f22:	0059      	lsls	r1, r3, #1
 8013f24:	fb03 0016 	mls	r0, r3, r6, r0
 8013f28:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8013f2c:	434b      	muls	r3, r1
 8013f2e:	9106      	str	r1, [sp, #24]
 8013f30:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013f32:	412a      	asrs	r2, r5
 8013f34:	b289      	uxth	r1, r1
 8013f36:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8013f3a:	b2d2      	uxtb	r2, r2
 8013f3c:	9110      	str	r1, [sp, #64]	; 0x40
 8013f3e:	9311      	str	r3, [sp, #68]	; 0x44
 8013f40:	f1ba 0f00 	cmp.w	sl, #0
 8013f44:	f340 80e4 	ble.w	8014110 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8013f48:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8013f4c:	46b6      	mov	lr, r6
 8013f4e:	f1be 0f00 	cmp.w	lr, #0
 8013f52:	f340 80c9 	ble.w	80140e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>
 8013f56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013f58:	4013      	ands	r3, r2
 8013f5a:	d009      	beq.n	8013f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20c>
 8013f5c:	fb13 f309 	smulbb	r3, r3, r9
 8013f60:	2bfe      	cmp	r3, #254	; 0xfe
 8013f62:	dd77      	ble.n	8014054 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8013f64:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013f66:	29ff      	cmp	r1, #255	; 0xff
 8013f68:	d174      	bne.n	8014054 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8013f6a:	9810      	ldr	r0, [sp, #64]	; 0x40
 8013f6c:	f8ac 0000 	strh.w	r0, [ip]
 8013f70:	4445      	add	r5, r8
 8013f72:	b2ad      	uxth	r5, r5
 8013f74:	2d07      	cmp	r5, #7
 8013f76:	bf81      	itttt	hi
 8013f78:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8013f7a:	785a      	ldrbhi	r2, [r3, #1]
 8013f7c:	3301      	addhi	r3, #1
 8013f7e:	9326      	strhi	r3, [sp, #152]	; 0x98
 8013f80:	9b06      	ldr	r3, [sp, #24]
 8013f82:	bf9a      	itte	ls
 8013f84:	fa42 f208 	asrls.w	r2, r2, r8
 8013f88:	b2d2      	uxtbls	r2, r2
 8013f8a:	2500      	movhi	r5, #0
 8013f8c:	449c      	add	ip, r3
 8013f8e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013f92:	e7dc      	b.n	8013f4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
 8013f94:	441c      	add	r4, r3
 8013f96:	b224      	sxth	r4, r4
 8013f98:	e71e      	b.n	8013dd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8013f9a:	f1bb 0f01 	cmp.w	fp, #1
 8013f9e:	f47f af59 	bne.w	8013e54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013fa2:	f1b9 0f01 	cmp.w	r9, #1
 8013fa6:	f47f af55 	bne.w	8013e54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013faa:	f8df 9134 	ldr.w	r9, [pc, #308]	; 80140e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8013fae:	f8d9 0000 	ldr.w	r0, [r9]
 8013fb2:	6803      	ldr	r3, [r0, #0]
 8013fb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013fb6:	4798      	blx	r3
 8013fb8:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8013fbc:	464a      	mov	r2, r9
 8013fbe:	d006      	beq.n	8013fce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8013fc0:	f1b8 0f04 	cmp.w	r8, #4
 8013fc4:	d13f      	bne.n	8014046 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8013fc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fc8:	3300      	adds	r3, #0
 8013fca:	bf18      	it	ne
 8013fcc:	2301      	movne	r3, #1
 8013fce:	05c0      	lsls	r0, r0, #23
 8013fd0:	f140 80a7 	bpl.w	8014122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8013fd4:	f1b8 0f08 	cmp.w	r8, #8
 8013fd8:	f040 80a3 	bne.w	8014122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8013fdc:	2b00      	cmp	r3, #0
 8013fde:	bf0c      	ite	eq
 8013fe0:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8013fe4:	2180      	movne	r1, #128	; 0x80
 8013fe6:	2e00      	cmp	r6, #0
 8013fe8:	f47f af34 	bne.w	8013e54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013fec:	2d00      	cmp	r5, #0
 8013fee:	f47f af31 	bne.w	8013e54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013ff2:	9b08      	ldr	r3, [sp, #32]
 8013ff4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013ff6:	18e3      	adds	r3, r4, r3
 8013ff8:	4283      	cmp	r3, r0
 8013ffa:	f73f af2b 	bgt.w	8013e54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013ffe:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
 8014002:	4403      	add	r3, r0
 8014004:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014006:	4283      	cmp	r3, r0
 8014008:	f73f af24 	bgt.w	8013e54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801400c:	6810      	ldr	r0, [r2, #0]
 801400e:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8014012:	6804      	ldr	r4, [r0, #0]
 8014014:	9105      	str	r1, [sp, #20]
 8014016:	f1b8 0f08 	cmp.w	r8, #8
 801401a:	bf18      	it	ne
 801401c:	3701      	addne	r7, #1
 801401e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014020:	9104      	str	r1, [sp, #16]
 8014022:	bf18      	it	ne
 8014024:	f027 0701 	bicne.w	r7, r7, #1
 8014028:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801402a:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 801402e:	bf18      	it	ne
 8014030:	b2bf      	uxthne	r7, r7
 8014032:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8014036:	e9cd 7a00 	strd	r7, sl, [sp]
 801403a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801403c:	6c24      	ldr	r4, [r4, #64]	; 0x40
 801403e:	47a0      	blx	r4
 8014040:	b017      	add	sp, #92	; 0x5c
 8014042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014046:	2300      	movs	r3, #0
 8014048:	e7c1      	b.n	8013fce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 801404a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801404c:	e70b      	b.n	8013e66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 801404e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8014052:	e725      	b.n	8013ea0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8014054:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014056:	f8bc 4000 	ldrh.w	r4, [ip]
 801405a:	fb11 f303 	smulbb	r3, r1, r3
 801405e:	b29b      	uxth	r3, r3
 8014060:	1c59      	adds	r1, r3, #1
 8014062:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8014066:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801406a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801406c:	b29f      	uxth	r7, r3
 801406e:	1220      	asrs	r0, r4, #8
 8014070:	43db      	mvns	r3, r3
 8014072:	b2db      	uxtb	r3, r3
 8014074:	fb11 f107 	smulbb	r1, r1, r7
 8014078:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801407c:	fb00 1003 	mla	r0, r0, r3, r1
 8014080:	b281      	uxth	r1, r0
 8014082:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014084:	9108      	str	r1, [sp, #32]
 8014086:	fb17 fb00 	smulbb	fp, r7, r0
 801408a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801408c:	10e1      	asrs	r1, r4, #3
 801408e:	00e4      	lsls	r4, r4, #3
 8014090:	fb17 f700 	smulbb	r7, r7, r0
 8014094:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014098:	b2e4      	uxtb	r4, r4
 801409a:	fb01 b103 	mla	r1, r1, r3, fp
 801409e:	fb04 7703 	mla	r7, r4, r3, r7
 80140a2:	9b08      	ldr	r3, [sp, #32]
 80140a4:	9808      	ldr	r0, [sp, #32]
 80140a6:	b2bf      	uxth	r7, r7
 80140a8:	3301      	adds	r3, #1
 80140aa:	f107 0b01 	add.w	fp, r7, #1
 80140ae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80140b2:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 80140b6:	b289      	uxth	r1, r1
 80140b8:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80140bc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80140c0:	ea40 000b 	orr.w	r0, r0, fp
 80140c4:	f101 0b01 	add.w	fp, r1, #1
 80140c8:	eb0b 2b11 	add.w	fp, fp, r1, lsr #8
 80140cc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80140d0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80140d4:	ea40 000b 	orr.w	r0, r0, fp
 80140d8:	e748      	b.n	8013f6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 80140da:	bf00      	nop
 80140dc:	2000179c 	.word	0x2000179c
 80140e0:	200017a4 	.word	0x200017a4
 80140e4:	2000179e 	.word	0x2000179e
 80140e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80140ea:	b153      	cbz	r3, 8014102 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 80140ec:	441d      	add	r5, r3
 80140ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80140f0:	b2ad      	uxth	r5, r5
 80140f2:	eb03 03d5 	add.w	r3, r3, r5, lsr #3
 80140f6:	f005 0507 	and.w	r5, r5, #7
 80140fa:	781a      	ldrb	r2, [r3, #0]
 80140fc:	9326      	str	r3, [sp, #152]	; 0x98
 80140fe:	412a      	asrs	r2, r5
 8014100:	b2d2      	uxtb	r2, r2
 8014102:	9b07      	ldr	r3, [sp, #28]
 8014104:	9911      	ldr	r1, [sp, #68]	; 0x44
 8014106:	440b      	add	r3, r1
 8014108:	9307      	str	r3, [sp, #28]
 801410a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801410e:	e717      	b.n	8013f40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1dc>
 8014110:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014112:	2b00      	cmp	r3, #0
 8014114:	d194      	bne.n	8014040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8014116:	4b0b      	ldr	r3, [pc, #44]	; (8014144 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>)
 8014118:	6818      	ldr	r0, [r3, #0]
 801411a:	6803      	ldr	r3, [r0, #0]
 801411c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801411e:	4798      	blx	r3
 8014120:	e78e      	b.n	8014040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8014122:	2b00      	cmp	r3, #0
 8014124:	f43f ae96 	beq.w	8013e54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014128:	2180      	movs	r1, #128	; 0x80
 801412a:	e75c      	b.n	8013fe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x282>
 801412c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801412e:	b11b      	cbz	r3, 8014138 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8014130:	07fb      	lsls	r3, r7, #31
 8014132:	d501      	bpl.n	8014138 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8014134:	3701      	adds	r7, #1
 8014136:	b2bf      	uxth	r7, r7
 8014138:	f04f 0911 	mov.w	r9, #17
 801413c:	e6b0      	b.n	8013ea0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801413e:	f04f 0955 	mov.w	r9, #85	; 0x55
 8014142:	e6ad      	b.n	8013ea0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8014144:	200017a4 	.word	0x200017a4

08014148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8014148:	b538      	push	{r3, r4, r5, lr}
 801414a:	4c15      	ldr	r4, [pc, #84]	; (80141a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801414c:	7823      	ldrb	r3, [r4, #0]
 801414e:	f3bf 8f5b 	dmb	ish
 8014152:	07da      	lsls	r2, r3, #31
 8014154:	4605      	mov	r5, r0
 8014156:	d40b      	bmi.n	8014170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014158:	4620      	mov	r0, r4
 801415a:	f007 fbc6 	bl	801b8ea <__cxa_guard_acquire>
 801415e:	b138      	cbz	r0, 8014170 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014160:	4620      	mov	r0, r4
 8014162:	f007 fbce 	bl	801b902 <__cxa_guard_release>
 8014166:	4a0f      	ldr	r2, [pc, #60]	; (80141a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014168:	490f      	ldr	r1, [pc, #60]	; (80141a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801416a:	4810      	ldr	r0, [pc, #64]	; (80141ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801416c:	f007 fbb6 	bl	801b8dc <__aeabi_atexit>
 8014170:	4c0f      	ldr	r4, [pc, #60]	; (80141b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8014172:	7823      	ldrb	r3, [r4, #0]
 8014174:	f3bf 8f5b 	dmb	ish
 8014178:	07db      	lsls	r3, r3, #31
 801417a:	d40b      	bmi.n	8014194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801417c:	4620      	mov	r0, r4
 801417e:	f007 fbb4 	bl	801b8ea <__cxa_guard_acquire>
 8014182:	b138      	cbz	r0, 8014194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014184:	4620      	mov	r0, r4
 8014186:	f007 fbbc 	bl	801b902 <__cxa_guard_release>
 801418a:	4a06      	ldr	r2, [pc, #24]	; (80141a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801418c:	4909      	ldr	r1, [pc, #36]	; (80141b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801418e:	480a      	ldr	r0, [pc, #40]	; (80141b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8014190:	f007 fba4 	bl	801b8dc <__aeabi_atexit>
 8014194:	4b05      	ldr	r3, [pc, #20]	; (80141ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8014196:	612b      	str	r3, [r5, #16]
 8014198:	4b07      	ldr	r3, [pc, #28]	; (80141b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801419a:	616b      	str	r3, [r5, #20]
 801419c:	bd38      	pop	{r3, r4, r5, pc}
 801419e:	bf00      	nop
 80141a0:	20001890 	.word	0x20001890
 80141a4:	20000000 	.word	0x20000000
 80141a8:	08012803 	.word	0x08012803
 80141ac:	20000068 	.word	0x20000068
 80141b0:	20001894 	.word	0x20001894
 80141b4:	08012801 	.word	0x08012801
 80141b8:	2000006c 	.word	0x2000006c

080141bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80141bc:	b538      	push	{r3, r4, r5, lr}
 80141be:	4c15      	ldr	r4, [pc, #84]	; (8014214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80141c0:	7823      	ldrb	r3, [r4, #0]
 80141c2:	f3bf 8f5b 	dmb	ish
 80141c6:	07da      	lsls	r2, r3, #31
 80141c8:	4605      	mov	r5, r0
 80141ca:	d40b      	bmi.n	80141e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80141cc:	4620      	mov	r0, r4
 80141ce:	f007 fb8c 	bl	801b8ea <__cxa_guard_acquire>
 80141d2:	b138      	cbz	r0, 80141e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80141d4:	4620      	mov	r0, r4
 80141d6:	f007 fb94 	bl	801b902 <__cxa_guard_release>
 80141da:	4a0f      	ldr	r2, [pc, #60]	; (8014218 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80141dc:	490f      	ldr	r1, [pc, #60]	; (801421c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80141de:	4810      	ldr	r0, [pc, #64]	; (8014220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80141e0:	f007 fb7c 	bl	801b8dc <__aeabi_atexit>
 80141e4:	4c0f      	ldr	r4, [pc, #60]	; (8014224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80141e6:	7823      	ldrb	r3, [r4, #0]
 80141e8:	f3bf 8f5b 	dmb	ish
 80141ec:	07db      	lsls	r3, r3, #31
 80141ee:	d40b      	bmi.n	8014208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80141f0:	4620      	mov	r0, r4
 80141f2:	f007 fb7a 	bl	801b8ea <__cxa_guard_acquire>
 80141f6:	b138      	cbz	r0, 8014208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80141f8:	4620      	mov	r0, r4
 80141fa:	f007 fb82 	bl	801b902 <__cxa_guard_release>
 80141fe:	4a06      	ldr	r2, [pc, #24]	; (8014218 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014200:	4909      	ldr	r1, [pc, #36]	; (8014228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8014202:	480a      	ldr	r0, [pc, #40]	; (801422c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014204:	f007 fb6a 	bl	801b8dc <__aeabi_atexit>
 8014208:	4b05      	ldr	r3, [pc, #20]	; (8014220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801420a:	60ab      	str	r3, [r5, #8]
 801420c:	4b07      	ldr	r3, [pc, #28]	; (801422c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801420e:	60eb      	str	r3, [r5, #12]
 8014210:	bd38      	pop	{r3, r4, r5, pc}
 8014212:	bf00      	nop
 8014214:	20001868 	.word	0x20001868
 8014218:	20000000 	.word	0x20000000
 801421c:	08012807 	.word	0x08012807
 8014220:	20000040 	.word	0x20000040
 8014224:	2000186c 	.word	0x2000186c
 8014228:	08012805 	.word	0x08012805
 801422c:	20000044 	.word	0x20000044

08014230 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8014230:	b510      	push	{r4, lr}
 8014232:	4604      	mov	r4, r0
 8014234:	f7ff ff88 	bl	8014148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8014238:	4620      	mov	r0, r4
 801423a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801423e:	f7ff bfbd 	b.w	80141bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08014244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8014244:	b538      	push	{r3, r4, r5, lr}
 8014246:	4c15      	ldr	r4, [pc, #84]	; (801429c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014248:	7823      	ldrb	r3, [r4, #0]
 801424a:	f3bf 8f5b 	dmb	ish
 801424e:	07da      	lsls	r2, r3, #31
 8014250:	4605      	mov	r5, r0
 8014252:	d40b      	bmi.n	801426c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014254:	4620      	mov	r0, r4
 8014256:	f007 fb48 	bl	801b8ea <__cxa_guard_acquire>
 801425a:	b138      	cbz	r0, 801426c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801425c:	4620      	mov	r0, r4
 801425e:	f007 fb50 	bl	801b902 <__cxa_guard_release>
 8014262:	4a0f      	ldr	r2, [pc, #60]	; (80142a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014264:	490f      	ldr	r1, [pc, #60]	; (80142a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8014266:	4810      	ldr	r0, [pc, #64]	; (80142a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014268:	f007 fb38 	bl	801b8dc <__aeabi_atexit>
 801426c:	4c0f      	ldr	r4, [pc, #60]	; (80142ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801426e:	7823      	ldrb	r3, [r4, #0]
 8014270:	f3bf 8f5b 	dmb	ish
 8014274:	07db      	lsls	r3, r3, #31
 8014276:	d40b      	bmi.n	8014290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014278:	4620      	mov	r0, r4
 801427a:	f007 fb36 	bl	801b8ea <__cxa_guard_acquire>
 801427e:	b138      	cbz	r0, 8014290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014280:	4620      	mov	r0, r4
 8014282:	f007 fb3e 	bl	801b902 <__cxa_guard_release>
 8014286:	4a06      	ldr	r2, [pc, #24]	; (80142a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014288:	4909      	ldr	r1, [pc, #36]	; (80142b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801428a:	480a      	ldr	r0, [pc, #40]	; (80142b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801428c:	f007 fb26 	bl	801b8dc <__aeabi_atexit>
 8014290:	4b05      	ldr	r3, [pc, #20]	; (80142a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014292:	622b      	str	r3, [r5, #32]
 8014294:	4b07      	ldr	r3, [pc, #28]	; (80142b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014296:	626b      	str	r3, [r5, #36]	; 0x24
 8014298:	bd38      	pop	{r3, r4, r5, pc}
 801429a:	bf00      	nop
 801429c:	20001898 	.word	0x20001898
 80142a0:	20000000 	.word	0x20000000
 80142a4:	080127fb 	.word	0x080127fb
 80142a8:	20000070 	.word	0x20000070
 80142ac:	2000189c 	.word	0x2000189c
 80142b0:	080127f9 	.word	0x080127f9
 80142b4:	20000074 	.word	0x20000074

080142b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80142b8:	b538      	push	{r3, r4, r5, lr}
 80142ba:	4c15      	ldr	r4, [pc, #84]	; (8014310 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80142bc:	7823      	ldrb	r3, [r4, #0]
 80142be:	f3bf 8f5b 	dmb	ish
 80142c2:	07da      	lsls	r2, r3, #31
 80142c4:	4605      	mov	r5, r0
 80142c6:	d40b      	bmi.n	80142e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80142c8:	4620      	mov	r0, r4
 80142ca:	f007 fb0e 	bl	801b8ea <__cxa_guard_acquire>
 80142ce:	b138      	cbz	r0, 80142e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80142d0:	4620      	mov	r0, r4
 80142d2:	f007 fb16 	bl	801b902 <__cxa_guard_release>
 80142d6:	4a0f      	ldr	r2, [pc, #60]	; (8014314 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80142d8:	490f      	ldr	r1, [pc, #60]	; (8014318 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80142da:	4810      	ldr	r0, [pc, #64]	; (801431c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80142dc:	f007 fafe 	bl	801b8dc <__aeabi_atexit>
 80142e0:	4c0f      	ldr	r4, [pc, #60]	; (8014320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80142e2:	7823      	ldrb	r3, [r4, #0]
 80142e4:	f3bf 8f5b 	dmb	ish
 80142e8:	07db      	lsls	r3, r3, #31
 80142ea:	d40b      	bmi.n	8014304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80142ec:	4620      	mov	r0, r4
 80142ee:	f007 fafc 	bl	801b8ea <__cxa_guard_acquire>
 80142f2:	b138      	cbz	r0, 8014304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80142f4:	4620      	mov	r0, r4
 80142f6:	f007 fb04 	bl	801b902 <__cxa_guard_release>
 80142fa:	4a06      	ldr	r2, [pc, #24]	; (8014314 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80142fc:	4909      	ldr	r1, [pc, #36]	; (8014324 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80142fe:	480a      	ldr	r0, [pc, #40]	; (8014328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014300:	f007 faec 	bl	801b8dc <__aeabi_atexit>
 8014304:	4b05      	ldr	r3, [pc, #20]	; (801431c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014306:	61ab      	str	r3, [r5, #24]
 8014308:	4b07      	ldr	r3, [pc, #28]	; (8014328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801430a:	61eb      	str	r3, [r5, #28]
 801430c:	bd38      	pop	{r3, r4, r5, pc}
 801430e:	bf00      	nop
 8014310:	20001870 	.word	0x20001870
 8014314:	20000000 	.word	0x20000000
 8014318:	080127ff 	.word	0x080127ff
 801431c:	20000048 	.word	0x20000048
 8014320:	20001874 	.word	0x20001874
 8014324:	080127fd 	.word	0x080127fd
 8014328:	2000004c 	.word	0x2000004c

0801432c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801432c:	b510      	push	{r4, lr}
 801432e:	4604      	mov	r4, r0
 8014330:	f7ff ff88 	bl	8014244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8014334:	4620      	mov	r0, r4
 8014336:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801433a:	f7ff bfbd 	b.w	80142b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08014340 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8014340:	b538      	push	{r3, r4, r5, lr}
 8014342:	4c15      	ldr	r4, [pc, #84]	; (8014398 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8014344:	7823      	ldrb	r3, [r4, #0]
 8014346:	f3bf 8f5b 	dmb	ish
 801434a:	07da      	lsls	r2, r3, #31
 801434c:	4605      	mov	r5, r0
 801434e:	d40b      	bmi.n	8014368 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014350:	4620      	mov	r0, r4
 8014352:	f007 faca 	bl	801b8ea <__cxa_guard_acquire>
 8014356:	b138      	cbz	r0, 8014368 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014358:	4620      	mov	r0, r4
 801435a:	f007 fad2 	bl	801b902 <__cxa_guard_release>
 801435e:	4a0f      	ldr	r2, [pc, #60]	; (801439c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014360:	490f      	ldr	r1, [pc, #60]	; (80143a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8014362:	4810      	ldr	r0, [pc, #64]	; (80143a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014364:	f007 faba 	bl	801b8dc <__aeabi_atexit>
 8014368:	4c0f      	ldr	r4, [pc, #60]	; (80143a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801436a:	7823      	ldrb	r3, [r4, #0]
 801436c:	f3bf 8f5b 	dmb	ish
 8014370:	07db      	lsls	r3, r3, #31
 8014372:	d40b      	bmi.n	801438c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014374:	4620      	mov	r0, r4
 8014376:	f007 fab8 	bl	801b8ea <__cxa_guard_acquire>
 801437a:	b138      	cbz	r0, 801438c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801437c:	4620      	mov	r0, r4
 801437e:	f007 fac0 	bl	801b902 <__cxa_guard_release>
 8014382:	4a06      	ldr	r2, [pc, #24]	; (801439c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014384:	4909      	ldr	r1, [pc, #36]	; (80143ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8014386:	480a      	ldr	r0, [pc, #40]	; (80143b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014388:	f007 faa8 	bl	801b8dc <__aeabi_atexit>
 801438c:	4b05      	ldr	r3, [pc, #20]	; (80143a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801438e:	632b      	str	r3, [r5, #48]	; 0x30
 8014390:	4b07      	ldr	r3, [pc, #28]	; (80143b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014392:	636b      	str	r3, [r5, #52]	; 0x34
 8014394:	bd38      	pop	{r3, r4, r5, pc}
 8014396:	bf00      	nop
 8014398:	200018a8 	.word	0x200018a8
 801439c:	20000000 	.word	0x20000000
 80143a0:	080127f3 	.word	0x080127f3
 80143a4:	20000080 	.word	0x20000080
 80143a8:	200018ac 	.word	0x200018ac
 80143ac:	080127f1 	.word	0x080127f1
 80143b0:	20000084 	.word	0x20000084

080143b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80143b4:	b538      	push	{r3, r4, r5, lr}
 80143b6:	4c15      	ldr	r4, [pc, #84]	; (801440c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80143b8:	7823      	ldrb	r3, [r4, #0]
 80143ba:	f3bf 8f5b 	dmb	ish
 80143be:	07da      	lsls	r2, r3, #31
 80143c0:	4605      	mov	r5, r0
 80143c2:	d40b      	bmi.n	80143dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80143c4:	4620      	mov	r0, r4
 80143c6:	f007 fa90 	bl	801b8ea <__cxa_guard_acquire>
 80143ca:	b138      	cbz	r0, 80143dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80143cc:	4620      	mov	r0, r4
 80143ce:	f007 fa98 	bl	801b902 <__cxa_guard_release>
 80143d2:	4a0f      	ldr	r2, [pc, #60]	; (8014410 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80143d4:	490f      	ldr	r1, [pc, #60]	; (8014414 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80143d6:	4810      	ldr	r0, [pc, #64]	; (8014418 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80143d8:	f007 fa80 	bl	801b8dc <__aeabi_atexit>
 80143dc:	4c0f      	ldr	r4, [pc, #60]	; (801441c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80143de:	7823      	ldrb	r3, [r4, #0]
 80143e0:	f3bf 8f5b 	dmb	ish
 80143e4:	07db      	lsls	r3, r3, #31
 80143e6:	d40b      	bmi.n	8014400 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80143e8:	4620      	mov	r0, r4
 80143ea:	f007 fa7e 	bl	801b8ea <__cxa_guard_acquire>
 80143ee:	b138      	cbz	r0, 8014400 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80143f0:	4620      	mov	r0, r4
 80143f2:	f007 fa86 	bl	801b902 <__cxa_guard_release>
 80143f6:	4a06      	ldr	r2, [pc, #24]	; (8014410 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80143f8:	4909      	ldr	r1, [pc, #36]	; (8014420 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80143fa:	480a      	ldr	r0, [pc, #40]	; (8014424 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80143fc:	f007 fa6e 	bl	801b8dc <__aeabi_atexit>
 8014400:	4b05      	ldr	r3, [pc, #20]	; (8014418 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014402:	62ab      	str	r3, [r5, #40]	; 0x28
 8014404:	4b07      	ldr	r3, [pc, #28]	; (8014424 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014406:	62eb      	str	r3, [r5, #44]	; 0x2c
 8014408:	bd38      	pop	{r3, r4, r5, pc}
 801440a:	bf00      	nop
 801440c:	20001878 	.word	0x20001878
 8014410:	20000000 	.word	0x20000000
 8014414:	080127f7 	.word	0x080127f7
 8014418:	20000050 	.word	0x20000050
 801441c:	2000187c 	.word	0x2000187c
 8014420:	080127f5 	.word	0x080127f5
 8014424:	20000054 	.word	0x20000054

08014428 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8014428:	b510      	push	{r4, lr}
 801442a:	4604      	mov	r4, r0
 801442c:	f7ff ff88 	bl	8014340 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8014430:	4620      	mov	r0, r4
 8014432:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014436:	f7ff bfbd 	b.w	80143b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801443c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801443c:	b538      	push	{r3, r4, r5, lr}
 801443e:	4c15      	ldr	r4, [pc, #84]	; (8014494 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8014440:	7823      	ldrb	r3, [r4, #0]
 8014442:	f3bf 8f5b 	dmb	ish
 8014446:	07da      	lsls	r2, r3, #31
 8014448:	4605      	mov	r5, r0
 801444a:	d40b      	bmi.n	8014464 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801444c:	4620      	mov	r0, r4
 801444e:	f007 fa4c 	bl	801b8ea <__cxa_guard_acquire>
 8014452:	b138      	cbz	r0, 8014464 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014454:	4620      	mov	r0, r4
 8014456:	f007 fa54 	bl	801b902 <__cxa_guard_release>
 801445a:	4a0f      	ldr	r2, [pc, #60]	; (8014498 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801445c:	490f      	ldr	r1, [pc, #60]	; (801449c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801445e:	4810      	ldr	r0, [pc, #64]	; (80144a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014460:	f007 fa3c 	bl	801b8dc <__aeabi_atexit>
 8014464:	4c0f      	ldr	r4, [pc, #60]	; (80144a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8014466:	7823      	ldrb	r3, [r4, #0]
 8014468:	f3bf 8f5b 	dmb	ish
 801446c:	07db      	lsls	r3, r3, #31
 801446e:	d40b      	bmi.n	8014488 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8014470:	4620      	mov	r0, r4
 8014472:	f007 fa3a 	bl	801b8ea <__cxa_guard_acquire>
 8014476:	b138      	cbz	r0, 8014488 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8014478:	4620      	mov	r0, r4
 801447a:	f007 fa42 	bl	801b902 <__cxa_guard_release>
 801447e:	4a06      	ldr	r2, [pc, #24]	; (8014498 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8014480:	4909      	ldr	r1, [pc, #36]	; (80144a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8014482:	480a      	ldr	r0, [pc, #40]	; (80144ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8014484:	f007 fa2a 	bl	801b8dc <__aeabi_atexit>
 8014488:	4b05      	ldr	r3, [pc, #20]	; (80144a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801448a:	652b      	str	r3, [r5, #80]	; 0x50
 801448c:	4b07      	ldr	r3, [pc, #28]	; (80144ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801448e:	656b      	str	r3, [r5, #84]	; 0x54
 8014490:	bd38      	pop	{r3, r4, r5, pc}
 8014492:	bf00      	nop
 8014494:	200018b0 	.word	0x200018b0
 8014498:	20000000 	.word	0x20000000
 801449c:	080127e3 	.word	0x080127e3
 80144a0:	20000088 	.word	0x20000088
 80144a4:	200018b4 	.word	0x200018b4
 80144a8:	080127e1 	.word	0x080127e1
 80144ac:	2000008c 	.word	0x2000008c

080144b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80144b0:	b538      	push	{r3, r4, r5, lr}
 80144b2:	4c15      	ldr	r4, [pc, #84]	; (8014508 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80144b4:	7823      	ldrb	r3, [r4, #0]
 80144b6:	f3bf 8f5b 	dmb	ish
 80144ba:	07da      	lsls	r2, r3, #31
 80144bc:	4605      	mov	r5, r0
 80144be:	d40b      	bmi.n	80144d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80144c0:	4620      	mov	r0, r4
 80144c2:	f007 fa12 	bl	801b8ea <__cxa_guard_acquire>
 80144c6:	b138      	cbz	r0, 80144d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80144c8:	4620      	mov	r0, r4
 80144ca:	f007 fa1a 	bl	801b902 <__cxa_guard_release>
 80144ce:	4a0f      	ldr	r2, [pc, #60]	; (801450c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80144d0:	490f      	ldr	r1, [pc, #60]	; (8014510 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80144d2:	4810      	ldr	r0, [pc, #64]	; (8014514 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80144d4:	f007 fa02 	bl	801b8dc <__aeabi_atexit>
 80144d8:	4c0f      	ldr	r4, [pc, #60]	; (8014518 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80144da:	7823      	ldrb	r3, [r4, #0]
 80144dc:	f3bf 8f5b 	dmb	ish
 80144e0:	07db      	lsls	r3, r3, #31
 80144e2:	d40b      	bmi.n	80144fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80144e4:	4620      	mov	r0, r4
 80144e6:	f007 fa00 	bl	801b8ea <__cxa_guard_acquire>
 80144ea:	b138      	cbz	r0, 80144fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80144ec:	4620      	mov	r0, r4
 80144ee:	f007 fa08 	bl	801b902 <__cxa_guard_release>
 80144f2:	4a06      	ldr	r2, [pc, #24]	; (801450c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80144f4:	4909      	ldr	r1, [pc, #36]	; (801451c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80144f6:	480a      	ldr	r0, [pc, #40]	; (8014520 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80144f8:	f007 f9f0 	bl	801b8dc <__aeabi_atexit>
 80144fc:	4b05      	ldr	r3, [pc, #20]	; (8014514 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80144fe:	64ab      	str	r3, [r5, #72]	; 0x48
 8014500:	4b07      	ldr	r3, [pc, #28]	; (8014520 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014502:	64eb      	str	r3, [r5, #76]	; 0x4c
 8014504:	bd38      	pop	{r3, r4, r5, pc}
 8014506:	bf00      	nop
 8014508:	200018b8 	.word	0x200018b8
 801450c:	20000000 	.word	0x20000000
 8014510:	080127e7 	.word	0x080127e7
 8014514:	20000090 	.word	0x20000090
 8014518:	200018bc 	.word	0x200018bc
 801451c:	080127e5 	.word	0x080127e5
 8014520:	20000094 	.word	0x20000094

08014524 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8014524:	b538      	push	{r3, r4, r5, lr}
 8014526:	4c15      	ldr	r4, [pc, #84]	; (801457c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8014528:	7823      	ldrb	r3, [r4, #0]
 801452a:	f3bf 8f5b 	dmb	ish
 801452e:	07da      	lsls	r2, r3, #31
 8014530:	4605      	mov	r5, r0
 8014532:	d40b      	bmi.n	801454c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014534:	4620      	mov	r0, r4
 8014536:	f007 f9d8 	bl	801b8ea <__cxa_guard_acquire>
 801453a:	b138      	cbz	r0, 801454c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801453c:	4620      	mov	r0, r4
 801453e:	f007 f9e0 	bl	801b902 <__cxa_guard_release>
 8014542:	4a0f      	ldr	r2, [pc, #60]	; (8014580 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014544:	490f      	ldr	r1, [pc, #60]	; (8014584 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8014546:	4810      	ldr	r0, [pc, #64]	; (8014588 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014548:	f007 f9c8 	bl	801b8dc <__aeabi_atexit>
 801454c:	4c0f      	ldr	r4, [pc, #60]	; (801458c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801454e:	7823      	ldrb	r3, [r4, #0]
 8014550:	f3bf 8f5b 	dmb	ish
 8014554:	07db      	lsls	r3, r3, #31
 8014556:	d40b      	bmi.n	8014570 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014558:	4620      	mov	r0, r4
 801455a:	f007 f9c6 	bl	801b8ea <__cxa_guard_acquire>
 801455e:	b138      	cbz	r0, 8014570 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014560:	4620      	mov	r0, r4
 8014562:	f007 f9ce 	bl	801b902 <__cxa_guard_release>
 8014566:	4a06      	ldr	r2, [pc, #24]	; (8014580 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014568:	4909      	ldr	r1, [pc, #36]	; (8014590 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801456a:	480a      	ldr	r0, [pc, #40]	; (8014594 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801456c:	f007 f9b6 	bl	801b8dc <__aeabi_atexit>
 8014570:	4b05      	ldr	r3, [pc, #20]	; (8014588 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014572:	642b      	str	r3, [r5, #64]	; 0x40
 8014574:	4b07      	ldr	r3, [pc, #28]	; (8014594 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014576:	646b      	str	r3, [r5, #68]	; 0x44
 8014578:	bd38      	pop	{r3, r4, r5, pc}
 801457a:	bf00      	nop
 801457c:	20001880 	.word	0x20001880
 8014580:	20000000 	.word	0x20000000
 8014584:	080127eb 	.word	0x080127eb
 8014588:	20000058 	.word	0x20000058
 801458c:	20001884 	.word	0x20001884
 8014590:	080127e9 	.word	0x080127e9
 8014594:	2000005c 	.word	0x2000005c

08014598 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8014598:	b538      	push	{r3, r4, r5, lr}
 801459a:	4c15      	ldr	r4, [pc, #84]	; (80145f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801459c:	7823      	ldrb	r3, [r4, #0]
 801459e:	f3bf 8f5b 	dmb	ish
 80145a2:	07da      	lsls	r2, r3, #31
 80145a4:	4605      	mov	r5, r0
 80145a6:	d40b      	bmi.n	80145c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80145a8:	4620      	mov	r0, r4
 80145aa:	f007 f99e 	bl	801b8ea <__cxa_guard_acquire>
 80145ae:	b138      	cbz	r0, 80145c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80145b0:	4620      	mov	r0, r4
 80145b2:	f007 f9a6 	bl	801b902 <__cxa_guard_release>
 80145b6:	4a0f      	ldr	r2, [pc, #60]	; (80145f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80145b8:	490f      	ldr	r1, [pc, #60]	; (80145f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80145ba:	4810      	ldr	r0, [pc, #64]	; (80145fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80145bc:	f007 f98e 	bl	801b8dc <__aeabi_atexit>
 80145c0:	4c0f      	ldr	r4, [pc, #60]	; (8014600 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80145c2:	7823      	ldrb	r3, [r4, #0]
 80145c4:	f3bf 8f5b 	dmb	ish
 80145c8:	07db      	lsls	r3, r3, #31
 80145ca:	d40b      	bmi.n	80145e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80145cc:	4620      	mov	r0, r4
 80145ce:	f007 f98c 	bl	801b8ea <__cxa_guard_acquire>
 80145d2:	b138      	cbz	r0, 80145e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80145d4:	4620      	mov	r0, r4
 80145d6:	f007 f994 	bl	801b902 <__cxa_guard_release>
 80145da:	4a06      	ldr	r2, [pc, #24]	; (80145f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80145dc:	4909      	ldr	r1, [pc, #36]	; (8014604 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80145de:	480a      	ldr	r0, [pc, #40]	; (8014608 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80145e0:	f007 f97c 	bl	801b8dc <__aeabi_atexit>
 80145e4:	4b05      	ldr	r3, [pc, #20]	; (80145fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80145e6:	63ab      	str	r3, [r5, #56]	; 0x38
 80145e8:	4b07      	ldr	r3, [pc, #28]	; (8014608 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80145ea:	63eb      	str	r3, [r5, #60]	; 0x3c
 80145ec:	bd38      	pop	{r3, r4, r5, pc}
 80145ee:	bf00      	nop
 80145f0:	200018a0 	.word	0x200018a0
 80145f4:	20000000 	.word	0x20000000
 80145f8:	080127ef 	.word	0x080127ef
 80145fc:	20000078 	.word	0x20000078
 8014600:	200018a4 	.word	0x200018a4
 8014604:	080127ed 	.word	0x080127ed
 8014608:	2000007c 	.word	0x2000007c

0801460c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801460c:	b510      	push	{r4, lr}
 801460e:	4604      	mov	r4, r0
 8014610:	f7ff ff14 	bl	801443c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8014614:	4620      	mov	r0, r4
 8014616:	f7ff ff85 	bl	8014524 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801461a:	4620      	mov	r0, r4
 801461c:	f7ff ff48 	bl	80144b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014620:	4620      	mov	r0, r4
 8014622:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014626:	f7ff bfb7 	b.w	8014598 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801462c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801462c:	b538      	push	{r3, r4, r5, lr}
 801462e:	4c15      	ldr	r4, [pc, #84]	; (8014684 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014630:	7823      	ldrb	r3, [r4, #0]
 8014632:	f3bf 8f5b 	dmb	ish
 8014636:	07da      	lsls	r2, r3, #31
 8014638:	4605      	mov	r5, r0
 801463a:	d40b      	bmi.n	8014654 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801463c:	4620      	mov	r0, r4
 801463e:	f007 f954 	bl	801b8ea <__cxa_guard_acquire>
 8014642:	b138      	cbz	r0, 8014654 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014644:	4620      	mov	r0, r4
 8014646:	f007 f95c 	bl	801b902 <__cxa_guard_release>
 801464a:	4a0f      	ldr	r2, [pc, #60]	; (8014688 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801464c:	490f      	ldr	r1, [pc, #60]	; (801468c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801464e:	4810      	ldr	r0, [pc, #64]	; (8014690 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014650:	f007 f944 	bl	801b8dc <__aeabi_atexit>
 8014654:	4c0f      	ldr	r4, [pc, #60]	; (8014694 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8014656:	7823      	ldrb	r3, [r4, #0]
 8014658:	f3bf 8f5b 	dmb	ish
 801465c:	07db      	lsls	r3, r3, #31
 801465e:	d40b      	bmi.n	8014678 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014660:	4620      	mov	r0, r4
 8014662:	f007 f942 	bl	801b8ea <__cxa_guard_acquire>
 8014666:	b138      	cbz	r0, 8014678 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014668:	4620      	mov	r0, r4
 801466a:	f007 f94a 	bl	801b902 <__cxa_guard_release>
 801466e:	4a06      	ldr	r2, [pc, #24]	; (8014688 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014670:	4909      	ldr	r1, [pc, #36]	; (8014698 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8014672:	480a      	ldr	r0, [pc, #40]	; (801469c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014674:	f007 f932 	bl	801b8dc <__aeabi_atexit>
 8014678:	4b05      	ldr	r3, [pc, #20]	; (8014690 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801467a:	662b      	str	r3, [r5, #96]	; 0x60
 801467c:	4b07      	ldr	r3, [pc, #28]	; (801469c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801467e:	666b      	str	r3, [r5, #100]	; 0x64
 8014680:	bd38      	pop	{r3, r4, r5, pc}
 8014682:	bf00      	nop
 8014684:	20001888 	.word	0x20001888
 8014688:	20000000 	.word	0x20000000
 801468c:	080127db 	.word	0x080127db
 8014690:	20000060 	.word	0x20000060
 8014694:	2000188c 	.word	0x2000188c
 8014698:	080127d9 	.word	0x080127d9
 801469c:	20000064 	.word	0x20000064

080146a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80146a0:	b538      	push	{r3, r4, r5, lr}
 80146a2:	4c15      	ldr	r4, [pc, #84]	; (80146f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80146a4:	7823      	ldrb	r3, [r4, #0]
 80146a6:	f3bf 8f5b 	dmb	ish
 80146aa:	07da      	lsls	r2, r3, #31
 80146ac:	4605      	mov	r5, r0
 80146ae:	d40b      	bmi.n	80146c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80146b0:	4620      	mov	r0, r4
 80146b2:	f007 f91a 	bl	801b8ea <__cxa_guard_acquire>
 80146b6:	b138      	cbz	r0, 80146c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80146b8:	4620      	mov	r0, r4
 80146ba:	f007 f922 	bl	801b902 <__cxa_guard_release>
 80146be:	4a0f      	ldr	r2, [pc, #60]	; (80146fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80146c0:	490f      	ldr	r1, [pc, #60]	; (8014700 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80146c2:	4810      	ldr	r0, [pc, #64]	; (8014704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80146c4:	f007 f90a 	bl	801b8dc <__aeabi_atexit>
 80146c8:	4c0f      	ldr	r4, [pc, #60]	; (8014708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80146ca:	7823      	ldrb	r3, [r4, #0]
 80146cc:	f3bf 8f5b 	dmb	ish
 80146d0:	07db      	lsls	r3, r3, #31
 80146d2:	d40b      	bmi.n	80146ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80146d4:	4620      	mov	r0, r4
 80146d6:	f007 f908 	bl	801b8ea <__cxa_guard_acquire>
 80146da:	b138      	cbz	r0, 80146ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80146dc:	4620      	mov	r0, r4
 80146de:	f007 f910 	bl	801b902 <__cxa_guard_release>
 80146e2:	4a06      	ldr	r2, [pc, #24]	; (80146fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80146e4:	4909      	ldr	r1, [pc, #36]	; (801470c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80146e6:	480a      	ldr	r0, [pc, #40]	; (8014710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80146e8:	f007 f8f8 	bl	801b8dc <__aeabi_atexit>
 80146ec:	4b05      	ldr	r3, [pc, #20]	; (8014704 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80146ee:	65ab      	str	r3, [r5, #88]	; 0x58
 80146f0:	4b07      	ldr	r3, [pc, #28]	; (8014710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80146f2:	65eb      	str	r3, [r5, #92]	; 0x5c
 80146f4:	bd38      	pop	{r3, r4, r5, pc}
 80146f6:	bf00      	nop
 80146f8:	20001860 	.word	0x20001860
 80146fc:	20000000 	.word	0x20000000
 8014700:	080127df 	.word	0x080127df
 8014704:	20000038 	.word	0x20000038
 8014708:	20001864 	.word	0x20001864
 801470c:	080127dd 	.word	0x080127dd
 8014710:	2000003c 	.word	0x2000003c

08014714 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8014714:	b510      	push	{r4, lr}
 8014716:	4604      	mov	r4, r0
 8014718:	f7ff ff88 	bl	801462c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801471c:	4620      	mov	r0, r4
 801471e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014722:	f7ff bfbd 	b.w	80146a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014728 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014728:	b538      	push	{r3, r4, r5, lr}
 801472a:	4c15      	ldr	r4, [pc, #84]	; (8014780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801472c:	7823      	ldrb	r3, [r4, #0]
 801472e:	f3bf 8f5b 	dmb	ish
 8014732:	07da      	lsls	r2, r3, #31
 8014734:	4605      	mov	r5, r0
 8014736:	d40b      	bmi.n	8014750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014738:	4620      	mov	r0, r4
 801473a:	f007 f8d6 	bl	801b8ea <__cxa_guard_acquire>
 801473e:	b138      	cbz	r0, 8014750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014740:	4620      	mov	r0, r4
 8014742:	f007 f8de 	bl	801b902 <__cxa_guard_release>
 8014746:	4a0f      	ldr	r2, [pc, #60]	; (8014784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014748:	490f      	ldr	r1, [pc, #60]	; (8014788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801474a:	4810      	ldr	r0, [pc, #64]	; (801478c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801474c:	f007 f8c6 	bl	801b8dc <__aeabi_atexit>
 8014750:	4c0f      	ldr	r4, [pc, #60]	; (8014790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8014752:	7823      	ldrb	r3, [r4, #0]
 8014754:	f3bf 8f5b 	dmb	ish
 8014758:	07db      	lsls	r3, r3, #31
 801475a:	d40b      	bmi.n	8014774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801475c:	4620      	mov	r0, r4
 801475e:	f007 f8c4 	bl	801b8ea <__cxa_guard_acquire>
 8014762:	b138      	cbz	r0, 8014774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014764:	4620      	mov	r0, r4
 8014766:	f007 f8cc 	bl	801b902 <__cxa_guard_release>
 801476a:	4a06      	ldr	r2, [pc, #24]	; (8014784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801476c:	4909      	ldr	r1, [pc, #36]	; (8014794 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801476e:	480a      	ldr	r0, [pc, #40]	; (8014798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014770:	f007 f8b4 	bl	801b8dc <__aeabi_atexit>
 8014774:	4b05      	ldr	r3, [pc, #20]	; (801478c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014776:	672b      	str	r3, [r5, #112]	; 0x70
 8014778:	4b07      	ldr	r3, [pc, #28]	; (8014798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801477a:	676b      	str	r3, [r5, #116]	; 0x74
 801477c:	bd38      	pop	{r3, r4, r5, pc}
 801477e:	bf00      	nop
 8014780:	20001858 	.word	0x20001858
 8014784:	20000000 	.word	0x20000000
 8014788:	080127d3 	.word	0x080127d3
 801478c:	20000030 	.word	0x20000030
 8014790:	2000185c 	.word	0x2000185c
 8014794:	080127d1 	.word	0x080127d1
 8014798:	20000034 	.word	0x20000034

0801479c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801479c:	b538      	push	{r3, r4, r5, lr}
 801479e:	4c15      	ldr	r4, [pc, #84]	; (80147f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80147a0:	7823      	ldrb	r3, [r4, #0]
 80147a2:	f3bf 8f5b 	dmb	ish
 80147a6:	07da      	lsls	r2, r3, #31
 80147a8:	4605      	mov	r5, r0
 80147aa:	d40b      	bmi.n	80147c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80147ac:	4620      	mov	r0, r4
 80147ae:	f007 f89c 	bl	801b8ea <__cxa_guard_acquire>
 80147b2:	b138      	cbz	r0, 80147c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80147b4:	4620      	mov	r0, r4
 80147b6:	f007 f8a4 	bl	801b902 <__cxa_guard_release>
 80147ba:	4a0f      	ldr	r2, [pc, #60]	; (80147f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80147bc:	490f      	ldr	r1, [pc, #60]	; (80147fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80147be:	4810      	ldr	r0, [pc, #64]	; (8014800 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80147c0:	f007 f88c 	bl	801b8dc <__aeabi_atexit>
 80147c4:	4c0f      	ldr	r4, [pc, #60]	; (8014804 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80147c6:	7823      	ldrb	r3, [r4, #0]
 80147c8:	f3bf 8f5b 	dmb	ish
 80147cc:	07db      	lsls	r3, r3, #31
 80147ce:	d40b      	bmi.n	80147e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80147d0:	4620      	mov	r0, r4
 80147d2:	f007 f88a 	bl	801b8ea <__cxa_guard_acquire>
 80147d6:	b138      	cbz	r0, 80147e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80147d8:	4620      	mov	r0, r4
 80147da:	f007 f892 	bl	801b902 <__cxa_guard_release>
 80147de:	4a06      	ldr	r2, [pc, #24]	; (80147f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80147e0:	4909      	ldr	r1, [pc, #36]	; (8014808 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80147e2:	480a      	ldr	r0, [pc, #40]	; (801480c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80147e4:	f007 f87a 	bl	801b8dc <__aeabi_atexit>
 80147e8:	4b05      	ldr	r3, [pc, #20]	; (8014800 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80147ea:	66ab      	str	r3, [r5, #104]	; 0x68
 80147ec:	4b07      	ldr	r3, [pc, #28]	; (801480c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80147ee:	66eb      	str	r3, [r5, #108]	; 0x6c
 80147f0:	bd38      	pop	{r3, r4, r5, pc}
 80147f2:	bf00      	nop
 80147f4:	20001850 	.word	0x20001850
 80147f8:	20000000 	.word	0x20000000
 80147fc:	080127d7 	.word	0x080127d7
 8014800:	20000028 	.word	0x20000028
 8014804:	20001854 	.word	0x20001854
 8014808:	080127d5 	.word	0x080127d5
 801480c:	2000002c 	.word	0x2000002c

08014810 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014810:	b510      	push	{r4, lr}
 8014812:	4604      	mov	r4, r0
 8014814:	f7ff ff88 	bl	8014728 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014818:	4620      	mov	r0, r4
 801481a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801481e:	f7ff bfbd 	b.w	801479c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014822 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014822:	b510      	push	{r4, lr}
 8014824:	4604      	mov	r4, r0
 8014826:	f7ff fff3 	bl	8014810 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801482a:	4620      	mov	r0, r4
 801482c:	f7ff ff72 	bl	8014714 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014830:	4620      	mov	r0, r4
 8014832:	f7ff fdf9 	bl	8014428 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014836:	4620      	mov	r0, r4
 8014838:	f7ff fcfa 	bl	8014230 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801483c:	4620      	mov	r0, r4
 801483e:	f7ff fd75 	bl	801432c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8014842:	4620      	mov	r0, r4
 8014844:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014848:	f7ff bee0 	b.w	801460c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801484c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801484c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014850:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8014854:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014858:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801485c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014860:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8014864:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014868:	8808      	ldrh	r0, [r1, #0]
 801486a:	fb0e 4708 	mla	r7, lr, r8, r4
 801486e:	f1be 0f00 	cmp.w	lr, #0
 8014872:	eb02 0a07 	add.w	sl, r2, r7
 8014876:	db37      	blt.n	80148e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8014878:	45f3      	cmp	fp, lr
 801487a:	dd35      	ble.n	80148e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801487c:	2c00      	cmp	r4, #0
 801487e:	db31      	blt.n	80148e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8014880:	45a0      	cmp	r8, r4
 8014882:	dd2f      	ble.n	80148e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8014884:	5dd2      	ldrb	r2, [r2, r7]
 8014886:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 801488a:	1c62      	adds	r2, r4, #1
 801488c:	d42f      	bmi.n	80148ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801488e:	4590      	cmp	r8, r2
 8014890:	dd2d      	ble.n	80148ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014892:	b366      	cbz	r6, 80148ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014894:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014898:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801489c:	f11e 0e01 	adds.w	lr, lr, #1
 80148a0:	d429      	bmi.n	80148f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80148a2:	45f3      	cmp	fp, lr
 80148a4:	dd27      	ble.n	80148f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80148a6:	f1bc 0f00 	cmp.w	ip, #0
 80148aa:	f000 80a0 	beq.w	80149ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80148ae:	2c00      	cmp	r4, #0
 80148b0:	db1f      	blt.n	80148f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80148b2:	45a0      	cmp	r8, r4
 80148b4:	dd1d      	ble.n	80148f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80148b6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80148ba:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80148be:	3401      	adds	r4, #1
 80148c0:	d41c      	bmi.n	80148fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80148c2:	45a0      	cmp	r8, r4
 80148c4:	dd1a      	ble.n	80148fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80148c6:	b1de      	cbz	r6, 8014900 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80148c8:	44d0      	add	r8, sl
 80148ca:	f898 2001 	ldrb.w	r2, [r8, #1]
 80148ce:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80148d2:	2e0f      	cmp	r6, #15
 80148d4:	d915      	bls.n	8014902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80148d6:	4b49      	ldr	r3, [pc, #292]	; (80149fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80148d8:	4a49      	ldr	r2, [pc, #292]	; (8014a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80148da:	484a      	ldr	r0, [pc, #296]	; (8014a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80148dc:	f240 3155 	movw	r1, #853	; 0x355
 80148e0:	f007 f830 	bl	801b944 <__assert_func>
 80148e4:	4681      	mov	r9, r0
 80148e6:	e7d0      	b.n	801488a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80148e8:	4607      	mov	r7, r0
 80148ea:	4681      	mov	r9, r0
 80148ec:	e7d6      	b.n	801489c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80148ee:	4607      	mov	r7, r0
 80148f0:	e7d4      	b.n	801489c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80148f2:	4686      	mov	lr, r0
 80148f4:	e7e3      	b.n	80148be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80148f6:	4603      	mov	r3, r0
 80148f8:	4686      	mov	lr, r0
 80148fa:	e7ea      	b.n	80148d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80148fc:	4603      	mov	r3, r0
 80148fe:	e7e8      	b.n	80148d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014900:	4603      	mov	r3, r0
 8014902:	f1bc 0f0f 	cmp.w	ip, #15
 8014906:	d8e6      	bhi.n	80148d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014908:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801490c:	fb16 f80c 	smulbb	r8, r6, ip
 8014910:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014914:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014918:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801491c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014920:	ea44 0909 	orr.w	r9, r4, r9
 8014924:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014928:	f1cc 0410 	rsb	r4, ip, #16
 801492c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014930:	1ba4      	subs	r4, r4, r6
 8014932:	041a      	lsls	r2, r3, #16
 8014934:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014938:	ea4a 0707 	orr.w	r7, sl, r7
 801493c:	4377      	muls	r7, r6
 801493e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014942:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014946:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801494a:	fb04 7409 	mla	r4, r4, r9, r7
 801494e:	4313      	orrs	r3, r2
 8014950:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8014954:	fb08 4303 	mla	r3, r8, r3, r4
 8014958:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801495c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014960:	4322      	orrs	r2, r4
 8014962:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014966:	fb0c 3202 	mla	r2, ip, r2, r3
 801496a:	0d53      	lsrs	r3, r2, #21
 801496c:	0952      	lsrs	r2, r2, #5
 801496e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014972:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014976:	431a      	orrs	r2, r3
 8014978:	b293      	uxth	r3, r2
 801497a:	b2af      	uxth	r7, r5
 801497c:	1202      	asrs	r2, r0, #8
 801497e:	43ed      	mvns	r5, r5
 8014980:	b2ed      	uxtb	r5, r5
 8014982:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014986:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801498a:	fb12 f205 	smulbb	r2, r2, r5
 801498e:	10c6      	asrs	r6, r0, #3
 8014990:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014994:	fb0c 2c07 	mla	ip, ip, r7, r2
 8014998:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801499c:	10da      	asrs	r2, r3, #3
 801499e:	fb16 f605 	smulbb	r6, r6, r5
 80149a2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80149a6:	fb02 6207 	mla	r2, r2, r7, r6
 80149aa:	b296      	uxth	r6, r2
 80149ac:	00c2      	lsls	r2, r0, #3
 80149ae:	00dc      	lsls	r4, r3, #3
 80149b0:	b2d2      	uxtb	r2, r2
 80149b2:	b2e4      	uxtb	r4, r4
 80149b4:	fb12 f205 	smulbb	r2, r2, r5
 80149b8:	fb04 2207 	mla	r2, r4, r7, r2
 80149bc:	fa1f fc8c 	uxth.w	ip, ip
 80149c0:	b292      	uxth	r2, r2
 80149c2:	f10c 0301 	add.w	r3, ip, #1
 80149c6:	1c50      	adds	r0, r2, #1
 80149c8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80149cc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80149d0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80149d4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80149d8:	4313      	orrs	r3, r2
 80149da:	1c72      	adds	r2, r6, #1
 80149dc:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80149e0:	0952      	lsrs	r2, r2, #5
 80149e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80149e6:	4313      	orrs	r3, r2
 80149e8:	800b      	strh	r3, [r1, #0]
 80149ea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149ee:	2e0f      	cmp	r6, #15
 80149f0:	f63f af71 	bhi.w	80148d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80149f4:	4603      	mov	r3, r0
 80149f6:	4686      	mov	lr, r0
 80149f8:	e786      	b.n	8014908 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80149fa:	bf00      	nop
 80149fc:	080210bb 	.word	0x080210bb
 8014a00:	080216c2 	.word	0x080216c2
 8014a04:	08021143 	.word	0x08021143

08014a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a0c:	ed2d 8b08 	vpush	{d8-d11}
 8014a10:	b09b      	sub	sp, #108	; 0x6c
 8014a12:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8014a16:	9309      	str	r3, [sp, #36]	; 0x24
 8014a18:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8014a1c:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8014a1e:	930a      	str	r3, [sp, #40]	; 0x28
 8014a20:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8014a24:	930e      	str	r3, [sp, #56]	; 0x38
 8014a26:	910d      	str	r1, [sp, #52]	; 0x34
 8014a28:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8014a2c:	9018      	str	r0, [sp, #96]	; 0x60
 8014a2e:	6870      	ldr	r0, [r6, #4]
 8014a30:	9217      	str	r2, [sp, #92]	; 0x5c
 8014a32:	fb00 1303 	mla	r3, r0, r3, r1
 8014a36:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8014a38:	6831      	ldr	r1, [r6, #0]
 8014a3a:	6856      	ldr	r6, [r2, #4]
 8014a3c:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8014a40:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8014a44:	6813      	ldr	r3, [r2, #0]
 8014a46:	930c      	str	r3, [sp, #48]	; 0x30
 8014a48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a4a:	43db      	mvns	r3, r3
 8014a4c:	b2db      	uxtb	r3, r3
 8014a4e:	eeb0 aa40 	vmov.f32	s20, s0
 8014a52:	eef0 9a60 	vmov.f32	s19, s1
 8014a56:	eeb0 9a41 	vmov.f32	s18, s2
 8014a5a:	eeb0 8a62 	vmov.f32	s16, s5
 8014a5e:	eef0 8a43 	vmov.f32	s17, s6
 8014a62:	eef0 ba44 	vmov.f32	s23, s8
 8014a66:	eeb0 ba64 	vmov.f32	s22, s9
 8014a6a:	eef0 aa45 	vmov.f32	s21, s10
 8014a6e:	3604      	adds	r6, #4
 8014a70:	930b      	str	r3, [sp, #44]	; 0x2c
 8014a72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014a74:	2b00      	cmp	r3, #0
 8014a76:	dc03      	bgt.n	8014a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014a78:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8014a7a:	2b00      	cmp	r3, #0
 8014a7c:	f340 8215 	ble.w	8014eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8014a80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a82:	2b00      	cmp	r3, #0
 8014a84:	f340 8102 	ble.w	8014c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8014a88:	ea5f 4229 	movs.w	r2, r9, asr #16
 8014a8c:	ea4f 4328 	mov.w	r3, r8, asr #16
 8014a90:	d42c      	bmi.n	8014aec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8014a92:	1c51      	adds	r1, r2, #1
 8014a94:	428c      	cmp	r4, r1
 8014a96:	dd2c      	ble.n	8014af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014a98:	2b00      	cmp	r3, #0
 8014a9a:	db2a      	blt.n	8014af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014a9c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8014a9e:	1c59      	adds	r1, r3, #1
 8014aa0:	4288      	cmp	r0, r1
 8014aa2:	dd26      	ble.n	8014af2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014aa4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014aa6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014aa8:	3b01      	subs	r3, #1
 8014aaa:	fb02 9203 	mla	r2, r2, r3, r9
 8014aae:	1412      	asrs	r2, r2, #16
 8014ab0:	d429      	bmi.n	8014b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014ab2:	3201      	adds	r2, #1
 8014ab4:	4294      	cmp	r4, r2
 8014ab6:	dd26      	ble.n	8014b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014ab8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8014aba:	fb02 8303 	mla	r3, r2, r3, r8
 8014abe:	141b      	asrs	r3, r3, #16
 8014ac0:	d421      	bmi.n	8014b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014ac2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014ac4:	3301      	adds	r3, #1
 8014ac6:	429a      	cmp	r2, r3
 8014ac8:	dd1d      	ble.n	8014b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014aca:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014ace:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014ad2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8014ad6:	9312      	str	r3, [sp, #72]	; 0x48
 8014ad8:	f1be 0f00 	cmp.w	lr, #0
 8014adc:	f300 8138 	bgt.w	8014d50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 8014ae0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ae2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014ae6:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8014aea:	e0d1      	b.n	8014c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8014aec:	1c51      	adds	r1, r2, #1
 8014aee:	f040 80c3 	bne.w	8014c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014af2:	42a2      	cmp	r2, r4
 8014af4:	f280 80c0 	bge.w	8014c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014af8:	1c5f      	adds	r7, r3, #1
 8014afa:	f2c0 80bd 	blt.w	8014c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014afe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014b00:	4293      	cmp	r3, r2
 8014b02:	f280 80b9 	bge.w	8014c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014b06:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014b0a:	4657      	mov	r7, sl
 8014b0c:	f1bb 0f00 	cmp.w	fp, #0
 8014b10:	dde6      	ble.n	8014ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8014b12:	ea5f 4229 	movs.w	r2, r9, asr #16
 8014b16:	ea4f 4328 	mov.w	r3, r8, asr #16
 8014b1a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8014b1e:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8014b22:	f100 80fc 	bmi.w	8014d1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8014b26:	f102 0c01 	add.w	ip, r2, #1
 8014b2a:	4564      	cmp	r4, ip
 8014b2c:	f340 80f9 	ble.w	8014d22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8014b30:	2b00      	cmp	r3, #0
 8014b32:	f2c0 80f6 	blt.w	8014d22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8014b36:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8014b38:	f103 0c01 	add.w	ip, r3, #1
 8014b3c:	4565      	cmp	r5, ip
 8014b3e:	f340 80f0 	ble.w	8014d22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8014b42:	fb03 2304 	mla	r3, r3, r4, r2
 8014b46:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014b48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014b4a:	441a      	add	r2, r3
 8014b4c:	5ceb      	ldrb	r3, [r5, r3]
 8014b4e:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 8014b52:	2800      	cmp	r0, #0
 8014b54:	f000 80db 	beq.w	8014d0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8014b58:	7853      	ldrb	r3, [r2, #1]
 8014b5a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014b5e:	9313      	str	r3, [sp, #76]	; 0x4c
 8014b60:	b141      	cbz	r1, 8014b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014b62:	1913      	adds	r3, r2, r4
 8014b64:	5d12      	ldrb	r2, [r2, r4]
 8014b66:	785b      	ldrb	r3, [r3, #1]
 8014b68:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014b6c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014b70:	9210      	str	r2, [sp, #64]	; 0x40
 8014b72:	9314      	str	r3, [sp, #80]	; 0x50
 8014b74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014b76:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014b78:	fb10 f201 	smulbb	r2, r0, r1
 8014b7c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014b80:	10d2      	asrs	r2, r2, #3
 8014b82:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014b86:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014b8a:	ea4c 0c03 	orr.w	ip, ip, r3
 8014b8e:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8014b92:	930f      	str	r3, [sp, #60]	; 0x3c
 8014b94:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014b96:	041b      	lsls	r3, r3, #16
 8014b98:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014b9c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014ba0:	432b      	orrs	r3, r5
 8014ba2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8014ba4:	4353      	muls	r3, r2
 8014ba6:	fb05 330c 	mla	r3, r5, ip, r3
 8014baa:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014bae:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014bb2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014bb6:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014bba:	f1c1 0c10 	rsb	ip, r1, #16
 8014bbe:	ebac 0c00 	sub.w	ip, ip, r0
 8014bc2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014bc6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014bca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014bcc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014bce:	0418      	lsls	r0, r3, #16
 8014bd0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014bd4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014bd8:	4318      	orrs	r0, r3
 8014bda:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014bde:	fb02 c200 	mla	r2, r2, r0, ip
 8014be2:	0d53      	lsrs	r3, r2, #21
 8014be4:	0952      	lsrs	r2, r2, #5
 8014be6:	f8b7 c000 	ldrh.w	ip, [r7]
 8014bea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014bee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014bf2:	431a      	orrs	r2, r3
 8014bf4:	b292      	uxth	r2, r2
 8014bf6:	ea4f 212c 	mov.w	r1, ip, asr #8
 8014bfa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014bfe:	1210      	asrs	r0, r2, #8
 8014c00:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014c04:	fb11 f105 	smulbb	r1, r1, r5
 8014c08:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8014c0c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014c10:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014c14:	fb00 1003 	mla	r0, r0, r3, r1
 8014c18:	fa5f fc8c 	uxtb.w	ip, ip
 8014c1c:	10d1      	asrs	r1, r2, #3
 8014c1e:	00d2      	lsls	r2, r2, #3
 8014c20:	fb1c fc05 	smulbb	ip, ip, r5
 8014c24:	b2d2      	uxtb	r2, r2
 8014c26:	fb02 c203 	mla	r2, r2, r3, ip
 8014c2a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014c2e:	b280      	uxth	r0, r0
 8014c30:	b292      	uxth	r2, r2
 8014c32:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014c36:	fb1e fe05 	smulbb	lr, lr, r5
 8014c3a:	fb01 e103 	mla	r1, r1, r3, lr
 8014c3e:	f102 0c01 	add.w	ip, r2, #1
 8014c42:	1c43      	adds	r3, r0, #1
 8014c44:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014c48:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8014c4c:	b289      	uxth	r1, r1
 8014c4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014c52:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014c56:	4313      	orrs	r3, r2
 8014c58:	1c4a      	adds	r2, r1, #1
 8014c5a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014c5e:	0949      	lsrs	r1, r1, #5
 8014c60:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014c64:	430b      	orrs	r3, r1
 8014c66:	803b      	strh	r3, [r7, #0]
 8014c68:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014c6a:	4499      	add	r9, r3
 8014c6c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014c6e:	3702      	adds	r7, #2
 8014c70:	4498      	add	r8, r3
 8014c72:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014c76:	e749      	b.n	8014b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8014c78:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014c7a:	4499      	add	r9, r3
 8014c7c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014c7e:	4498      	add	r8, r3
 8014c80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c82:	3b01      	subs	r3, #1
 8014c84:	9309      	str	r3, [sp, #36]	; 0x24
 8014c86:	f10a 0a02 	add.w	sl, sl, #2
 8014c8a:	e6f9      	b.n	8014a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014c8c:	f47f af0a 	bne.w	8014aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8014c90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c92:	2b00      	cmp	r3, #0
 8014c94:	f340 8109 	ble.w	8014eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8014c98:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014c9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014ca0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014ca4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014ca6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014caa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014cae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014cb2:	eef0 6a48 	vmov.f32	s13, s16
 8014cb6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014cba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cbe:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014cc2:	ee16 9a90 	vmov	r9, s13
 8014cc6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014cca:	eef0 6a68 	vmov.f32	s13, s17
 8014cce:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014cd2:	ee18 2a10 	vmov	r2, s16
 8014cd6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014cda:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cde:	ee18 2a90 	vmov	r2, s17
 8014ce2:	932f      	str	r3, [sp, #188]	; 0xbc
 8014ce4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014ce6:	fb92 f3f3 	sdiv	r3, r2, r3
 8014cea:	9330      	str	r3, [sp, #192]	; 0xc0
 8014cec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014cee:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8014cf0:	3b01      	subs	r3, #1
 8014cf2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014cf6:	930d      	str	r3, [sp, #52]	; 0x34
 8014cf8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014cfa:	bf08      	it	eq
 8014cfc:	4613      	moveq	r3, r2
 8014cfe:	ee16 8a90 	vmov	r8, s13
 8014d02:	9309      	str	r3, [sp, #36]	; 0x24
 8014d04:	eef0 8a67 	vmov.f32	s17, s15
 8014d08:	eeb0 8a47 	vmov.f32	s16, s14
 8014d0c:	e6b1      	b.n	8014a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8014d0e:	2900      	cmp	r1, #0
 8014d10:	f43f af30 	beq.w	8014b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014d14:	5d13      	ldrb	r3, [r2, r4]
 8014d16:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d1a:	9310      	str	r3, [sp, #64]	; 0x40
 8014d1c:	e72a      	b.n	8014b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014d1e:	1c55      	adds	r5, r2, #1
 8014d20:	d1a2      	bne.n	8014c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d22:	4294      	cmp	r4, r2
 8014d24:	dda0      	ble.n	8014c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d26:	1c5d      	adds	r5, r3, #1
 8014d28:	db9e      	blt.n	8014c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d2a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8014d2c:	429d      	cmp	r5, r3
 8014d2e:	dd9b      	ble.n	8014c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d30:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8014d34:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014d36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014d38:	9202      	str	r2, [sp, #8]
 8014d3a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8014d3e:	e9cd 4300 	strd	r4, r3, [sp]
 8014d42:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014d44:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014d46:	4633      	mov	r3, r6
 8014d48:	4639      	mov	r1, r7
 8014d4a:	f7ff fd7f 	bl	801484c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8014d4e:	e78b      	b.n	8014c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d50:	ea4f 4329 	mov.w	r3, r9, asr #16
 8014d54:	ea4f 4228 	mov.w	r2, r8, asr #16
 8014d58:	fb04 3202 	mla	r2, r4, r2, r3
 8014d5c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014d5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014d60:	4413      	add	r3, r2
 8014d62:	5c8a      	ldrb	r2, [r1, r2]
 8014d64:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8014d68:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8014d6c:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 8014d70:	f1bc 0f00 	cmp.w	ip, #0
 8014d74:	f000 8091 	beq.w	8014e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8014d78:	785a      	ldrb	r2, [r3, #1]
 8014d7a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014d7e:	9215      	str	r2, [sp, #84]	; 0x54
 8014d80:	b140      	cbz	r0, 8014d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8014d82:	191a      	adds	r2, r3, r4
 8014d84:	5d1b      	ldrb	r3, [r3, r4]
 8014d86:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d8a:	9311      	str	r3, [sp, #68]	; 0x44
 8014d8c:	7853      	ldrb	r3, [r2, #1]
 8014d8e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d92:	9316      	str	r3, [sp, #88]	; 0x58
 8014d94:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014d96:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014d98:	fb1c f200 	smulbb	r2, ip, r0
 8014d9c:	041f      	lsls	r7, r3, #16
 8014d9e:	10d2      	asrs	r2, r2, #3
 8014da0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014da4:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014da8:	431f      	orrs	r7, r3
 8014daa:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014dae:	9319      	str	r3, [sp, #100]	; 0x64
 8014db0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014db2:	041b      	lsls	r3, r3, #16
 8014db4:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014db8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014dbc:	ea43 030b 	orr.w	r3, r3, fp
 8014dc0:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8014dc2:	4353      	muls	r3, r2
 8014dc4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014dc8:	fb05 3707 	mla	r7, r5, r7, r3
 8014dcc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014dd0:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014dd4:	ea43 0b01 	orr.w	fp, r3, r1
 8014dd8:	f1c0 0110 	rsb	r1, r0, #16
 8014ddc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014dde:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014de0:	eba1 0c0c 	sub.w	ip, r1, ip
 8014de4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014de8:	fb0c 770b 	mla	r7, ip, fp, r7
 8014dec:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014df0:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014df4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014df8:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014dfc:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014e00:	fb02 770c 	mla	r7, r2, ip, r7
 8014e04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014e06:	0d79      	lsrs	r1, r7, #21
 8014e08:	8812      	ldrh	r2, [r2, #0]
 8014e0a:	097f      	lsrs	r7, r7, #5
 8014e0c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014e10:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014e14:	430f      	orrs	r7, r1
 8014e16:	1211      	asrs	r1, r2, #8
 8014e18:	b2bb      	uxth	r3, r7
 8014e1a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014e1e:	fb11 f105 	smulbb	r1, r1, r5
 8014e22:	1218      	asrs	r0, r3, #8
 8014e24:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014e26:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014e2a:	fb00 1005 	mla	r0, r0, r5, r1
 8014e2e:	10d7      	asrs	r7, r2, #3
 8014e30:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014e32:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014e36:	fb17 f705 	smulbb	r7, r7, r5
 8014e3a:	10d9      	asrs	r1, r3, #3
 8014e3c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014e3e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014e42:	fb01 7105 	mla	r1, r1, r5, r7
 8014e46:	00d2      	lsls	r2, r2, #3
 8014e48:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014e4a:	b2d2      	uxtb	r2, r2
 8014e4c:	fb12 f205 	smulbb	r2, r2, r5
 8014e50:	00db      	lsls	r3, r3, #3
 8014e52:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014e54:	b2db      	uxtb	r3, r3
 8014e56:	b280      	uxth	r0, r0
 8014e58:	fb03 2305 	mla	r3, r3, r5, r2
 8014e5c:	b29b      	uxth	r3, r3
 8014e5e:	b289      	uxth	r1, r1
 8014e60:	1c42      	adds	r2, r0, #1
 8014e62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014e66:	1c4f      	adds	r7, r1, #1
 8014e68:	1c5a      	adds	r2, r3, #1
 8014e6a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8014e6e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8014e72:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014e76:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014e7a:	0949      	lsrs	r1, r1, #5
 8014e7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014e7e:	4310      	orrs	r0, r2
 8014e80:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014e84:	4308      	orrs	r0, r1
 8014e86:	f823 0b02 	strh.w	r0, [r3], #2
 8014e8a:	930f      	str	r3, [sp, #60]	; 0x3c
 8014e8c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014e8e:	4499      	add	r9, r3
 8014e90:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014e92:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014e96:	4498      	add	r8, r3
 8014e98:	e61e      	b.n	8014ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8014e9a:	2800      	cmp	r0, #0
 8014e9c:	f43f af7a 	beq.w	8014d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8014ea0:	5d1b      	ldrb	r3, [r3, r4]
 8014ea2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014ea6:	9311      	str	r3, [sp, #68]	; 0x44
 8014ea8:	e774      	b.n	8014d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8014eaa:	b01b      	add	sp, #108	; 0x6c
 8014eac:	ecbd 8b08 	vpop	{d8-d11}
 8014eb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8014eb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014eb8:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8014ebc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014ec0:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8014ec4:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8014ec8:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8014ecc:	8808      	ldrh	r0, [r1, #0]
 8014ece:	fb06 570e 	mla	r7, r6, lr, r5
 8014ed2:	2e00      	cmp	r6, #0
 8014ed4:	eb02 0807 	add.w	r8, r2, r7
 8014ed8:	db38      	blt.n	8014f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014eda:	45b1      	cmp	r9, r6
 8014edc:	dd36      	ble.n	8014f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014ede:	2d00      	cmp	r5, #0
 8014ee0:	db32      	blt.n	8014f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014ee2:	45ae      	cmp	lr, r5
 8014ee4:	dd30      	ble.n	8014f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014ee6:	5dd2      	ldrb	r2, [r2, r7]
 8014ee8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014eec:	1c6a      	adds	r2, r5, #1
 8014eee:	d430      	bmi.n	8014f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014ef0:	4596      	cmp	lr, r2
 8014ef2:	dd2e      	ble.n	8014f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014ef4:	b36c      	cbz	r4, 8014f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014ef6:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014efa:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014efe:	3601      	adds	r6, #1
 8014f00:	d42b      	bmi.n	8014f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014f02:	45b1      	cmp	r9, r6
 8014f04:	dd29      	ble.n	8014f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014f06:	f1bc 0f00 	cmp.w	ip, #0
 8014f0a:	d028      	beq.n	8014f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014f0c:	2d00      	cmp	r5, #0
 8014f0e:	db22      	blt.n	8014f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014f10:	45ae      	cmp	lr, r5
 8014f12:	dd20      	ble.n	8014f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014f14:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014f18:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014f1c:	3501      	adds	r5, #1
 8014f1e:	d407      	bmi.n	8014f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014f20:	45ae      	cmp	lr, r5
 8014f22:	dd05      	ble.n	8014f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014f24:	b134      	cbz	r4, 8014f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014f26:	44c6      	add	lr, r8
 8014f28:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014f2c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014f30:	2c0f      	cmp	r4, #15
 8014f32:	d802      	bhi.n	8014f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014f34:	f1bc 0f0f 	cmp.w	ip, #15
 8014f38:	d914      	bls.n	8014f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014f3a:	4b26      	ldr	r3, [pc, #152]	; (8014fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014f3c:	4a26      	ldr	r2, [pc, #152]	; (8014fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8014f3e:	4827      	ldr	r0, [pc, #156]	; (8014fdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8014f40:	f240 3155 	movw	r1, #853	; 0x355
 8014f44:	f006 fcfe 	bl	801b944 <__assert_func>
 8014f48:	4607      	mov	r7, r0
 8014f4a:	e7cf      	b.n	8014eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014f4c:	4602      	mov	r2, r0
 8014f4e:	4607      	mov	r7, r0
 8014f50:	e7d5      	b.n	8014efe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014f52:	4602      	mov	r2, r0
 8014f54:	e7d3      	b.n	8014efe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014f56:	4606      	mov	r6, r0
 8014f58:	e7e0      	b.n	8014f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8014f5a:	4606      	mov	r6, r0
 8014f5c:	e7e8      	b.n	8014f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014f5e:	2c0f      	cmp	r4, #15
 8014f60:	d8eb      	bhi.n	8014f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014f62:	4606      	mov	r6, r0
 8014f64:	043d      	lsls	r5, r7, #16
 8014f66:	fb14 f30c 	smulbb	r3, r4, ip
 8014f6a:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8014f6e:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014f72:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014f76:	10db      	asrs	r3, r3, #3
 8014f78:	432f      	orrs	r7, r5
 8014f7a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014f7e:	f1cc 0510 	rsb	r5, ip, #16
 8014f82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014f86:	1b2d      	subs	r5, r5, r4
 8014f88:	ea4e 0202 	orr.w	r2, lr, r2
 8014f8c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8014f90:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8014f94:	4354      	muls	r4, r2
 8014f96:	fb05 4507 	mla	r5, r5, r7, r4
 8014f9a:	0404      	lsls	r4, r0, #16
 8014f9c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014fa0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014fa4:	4320      	orrs	r0, r4
 8014fa6:	fb03 5400 	mla	r4, r3, r0, r5
 8014faa:	0430      	lsls	r0, r6, #16
 8014fac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014fb0:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014fb4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8014fb8:	4330      	orrs	r0, r6
 8014fba:	fb03 4000 	mla	r0, r3, r0, r4
 8014fbe:	0d43      	lsrs	r3, r0, #21
 8014fc0:	0940      	lsrs	r0, r0, #5
 8014fc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014fc6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014fca:	4318      	orrs	r0, r3
 8014fcc:	8008      	strh	r0, [r1, #0]
 8014fce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014fd2:	bf00      	nop
 8014fd4:	080210bb 	.word	0x080210bb
 8014fd8:	080216c2 	.word	0x080216c2
 8014fdc:	08021143 	.word	0x08021143

08014fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fe4:	ed2d 8b0a 	vpush	{d8-d12}
 8014fe8:	b095      	sub	sp, #84	; 0x54
 8014fea:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 8014fee:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8014ff0:	9306      	str	r3, [sp, #24]
 8014ff2:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014ff6:	9109      	str	r1, [sp, #36]	; 0x24
 8014ff8:	9307      	str	r3, [sp, #28]
 8014ffa:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8014ffe:	9012      	str	r0, [sp, #72]	; 0x48
 8015000:	6878      	ldr	r0, [r7, #4]
 8015002:	9211      	str	r2, [sp, #68]	; 0x44
 8015004:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015006:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 801500a:	fb00 1303 	mla	r3, r0, r3, r1
 801500e:	6839      	ldr	r1, [r7, #0]
 8015010:	6857      	ldr	r7, [r2, #4]
 8015012:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8015016:	6813      	ldr	r3, [r2, #0]
 8015018:	9308      	str	r3, [sp, #32]
 801501a:	eeb0 aa40 	vmov.f32	s20, s0
 801501e:	eef0 9a60 	vmov.f32	s19, s1
 8015022:	eeb0 9a41 	vmov.f32	s18, s2
 8015026:	eeb0 8a62 	vmov.f32	s16, s5
 801502a:	eef0 8a43 	vmov.f32	s17, s6
 801502e:	eeb0 ca44 	vmov.f32	s24, s8
 8015032:	eef0 ba64 	vmov.f32	s23, s9
 8015036:	eeb0 ba45 	vmov.f32	s22, s10
 801503a:	3704      	adds	r7, #4
 801503c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015040:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015042:	2b00      	cmp	r3, #0
 8015044:	dc03      	bgt.n	801504e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8015046:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015048:	2b00      	cmp	r3, #0
 801504a:	f340 819a 	ble.w	8015382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 801504e:	9b06      	ldr	r3, [sp, #24]
 8015050:	2b00      	cmp	r3, #0
 8015052:	f340 80c4 	ble.w	80151de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015056:	ea5f 4229 	movs.w	r2, r9, asr #16
 801505a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801505e:	d429      	bmi.n	80150b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8015060:	1c51      	adds	r1, r2, #1
 8015062:	428c      	cmp	r4, r1
 8015064:	dd29      	ble.n	80150ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8015066:	2b00      	cmp	r3, #0
 8015068:	db27      	blt.n	80150ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 801506a:	9807      	ldr	r0, [sp, #28]
 801506c:	1c59      	adds	r1, r3, #1
 801506e:	4288      	cmp	r0, r1
 8015070:	dd23      	ble.n	80150ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8015072:	9b06      	ldr	r3, [sp, #24]
 8015074:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015076:	3b01      	subs	r3, #1
 8015078:	fb02 9203 	mla	r2, r2, r3, r9
 801507c:	1412      	asrs	r2, r2, #16
 801507e:	d425      	bmi.n	80150cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8015080:	3201      	adds	r2, #1
 8015082:	4294      	cmp	r4, r2
 8015084:	dd22      	ble.n	80150cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8015086:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015088:	fb02 6303 	mla	r3, r2, r3, r6
 801508c:	141b      	asrs	r3, r3, #16
 801508e:	d41d      	bmi.n	80150cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8015090:	9a07      	ldr	r2, [sp, #28]
 8015092:	3301      	adds	r3, #1
 8015094:	429a      	cmp	r2, r3
 8015096:	dd19      	ble.n	80150cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8015098:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801509c:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80150a0:	f1b8 0f00 	cmp.w	r8, #0
 80150a4:	f300 80f8 	bgt.w	8015298 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 80150a8:	9b06      	ldr	r3, [sp, #24]
 80150aa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80150ae:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80150b2:	e096      	b.n	80151e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80150b4:	1c51      	adds	r1, r2, #1
 80150b6:	f040 8088 	bne.w	80151ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80150ba:	42a2      	cmp	r2, r4
 80150bc:	f280 8085 	bge.w	80151ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80150c0:	1c5a      	adds	r2, r3, #1
 80150c2:	f2c0 8082 	blt.w	80151ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80150c6:	9a07      	ldr	r2, [sp, #28]
 80150c8:	4293      	cmp	r3, r2
 80150ca:	da7e      	bge.n	80151ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80150cc:	f8dd b018 	ldr.w	fp, [sp, #24]
 80150d0:	46d0      	mov	r8, sl
 80150d2:	f1bb 0f00 	cmp.w	fp, #0
 80150d6:	dde7      	ble.n	80150a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80150d8:	ea5f 4229 	movs.w	r2, r9, asr #16
 80150dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80150e0:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80150e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80150e8:	f100 80c0 	bmi.w	801526c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 80150ec:	f102 0c01 	add.w	ip, r2, #1
 80150f0:	4564      	cmp	r4, ip
 80150f2:	f340 80bd 	ble.w	8015270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80150f6:	2b00      	cmp	r3, #0
 80150f8:	f2c0 80ba 	blt.w	8015270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80150fc:	9d07      	ldr	r5, [sp, #28]
 80150fe:	f103 0c01 	add.w	ip, r3, #1
 8015102:	4565      	cmp	r5, ip
 8015104:	f340 80b4 	ble.w	8015270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8015108:	fb03 2304 	mla	r3, r3, r4, r2
 801510c:	9d08      	ldr	r5, [sp, #32]
 801510e:	9a08      	ldr	r2, [sp, #32]
 8015110:	441a      	add	r2, r3
 8015112:	5ceb      	ldrb	r3, [r5, r3]
 8015114:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8015118:	2800      	cmp	r0, #0
 801511a:	f000 809f 	beq.w	801525c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 801511e:	7853      	ldrb	r3, [r2, #1]
 8015120:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015124:	930d      	str	r3, [sp, #52]	; 0x34
 8015126:	b141      	cbz	r1, 801513a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8015128:	1913      	adds	r3, r2, r4
 801512a:	5d12      	ldrb	r2, [r2, r4]
 801512c:	785b      	ldrb	r3, [r3, #1]
 801512e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8015132:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015136:	920a      	str	r2, [sp, #40]	; 0x28
 8015138:	930e      	str	r3, [sp, #56]	; 0x38
 801513a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801513c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801513e:	fb10 f201 	smulbb	r2, r0, r1
 8015142:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015146:	10d2      	asrs	r2, r2, #3
 8015148:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801514c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015150:	ea4c 0c03 	orr.w	ip, ip, r3
 8015154:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8015158:	930c      	str	r3, [sp, #48]	; 0x30
 801515a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801515c:	041b      	lsls	r3, r3, #16
 801515e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015162:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015166:	432b      	orrs	r3, r5
 8015168:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801516a:	4353      	muls	r3, r2
 801516c:	fb05 330c 	mla	r3, r5, ip, r3
 8015170:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015174:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015178:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801517c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015180:	f1c1 0c10 	rsb	ip, r1, #16
 8015184:	ebac 0c00 	sub.w	ip, ip, r0
 8015188:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801518c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015190:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015192:	0418      	lsls	r0, r3, #16
 8015194:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015198:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801519c:	4318      	orrs	r0, r3
 801519e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80151a2:	fb02 c200 	mla	r2, r2, r0, ip
 80151a6:	0d53      	lsrs	r3, r2, #21
 80151a8:	0952      	lsrs	r2, r2, #5
 80151aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80151ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80151b2:	431a      	orrs	r2, r3
 80151b4:	f8a8 2000 	strh.w	r2, [r8]
 80151b8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80151ba:	4499      	add	r9, r3
 80151bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80151be:	f108 0802 	add.w	r8, r8, #2
 80151c2:	441e      	add	r6, r3
 80151c4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80151c8:	e783      	b.n	80150d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80151ca:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80151cc:	4499      	add	r9, r3
 80151ce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80151d0:	441e      	add	r6, r3
 80151d2:	9b06      	ldr	r3, [sp, #24]
 80151d4:	3b01      	subs	r3, #1
 80151d6:	9306      	str	r3, [sp, #24]
 80151d8:	f10a 0a02 	add.w	sl, sl, #2
 80151dc:	e737      	b.n	801504e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80151de:	f47f af48 	bne.w	8015072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80151e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80151e4:	2b00      	cmp	r3, #0
 80151e6:	f340 80cc 	ble.w	8015382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 80151ea:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80151ee:	ee79 9aab 	vadd.f32	s19, s19, s23
 80151f2:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80151f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80151f8:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80151fc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015200:	eef0 6a48 	vmov.f32	s13, s16
 8015204:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015208:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801520c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015210:	ee16 9a90 	vmov	r9, s13
 8015214:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015218:	eef0 6a68 	vmov.f32	s13, s17
 801521c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015220:	ee18 2a10 	vmov	r2, s16
 8015224:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015228:	fb92 f3f3 	sdiv	r3, r2, r3
 801522c:	ee18 2a90 	vmov	r2, s17
 8015230:	932b      	str	r3, [sp, #172]	; 0xac
 8015232:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015234:	fb92 f3f3 	sdiv	r3, r2, r3
 8015238:	932c      	str	r3, [sp, #176]	; 0xb0
 801523a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801523c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801523e:	3b01      	subs	r3, #1
 8015240:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015244:	9309      	str	r3, [sp, #36]	; 0x24
 8015246:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015248:	bf08      	it	eq
 801524a:	4613      	moveq	r3, r2
 801524c:	ee16 6a90 	vmov	r6, s13
 8015250:	9306      	str	r3, [sp, #24]
 8015252:	eef0 8a67 	vmov.f32	s17, s15
 8015256:	eeb0 8a47 	vmov.f32	s16, s14
 801525a:	e6f1      	b.n	8015040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801525c:	2900      	cmp	r1, #0
 801525e:	f43f af6c 	beq.w	801513a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8015262:	5d13      	ldrb	r3, [r2, r4]
 8015264:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015268:	930a      	str	r3, [sp, #40]	; 0x28
 801526a:	e766      	b.n	801513a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801526c:	1c55      	adds	r5, r2, #1
 801526e:	d1a3      	bne.n	80151b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8015270:	4294      	cmp	r4, r2
 8015272:	dda1      	ble.n	80151b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8015274:	1c5d      	adds	r5, r3, #1
 8015276:	db9f      	blt.n	80151b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8015278:	9d07      	ldr	r5, [sp, #28]
 801527a:	429d      	cmp	r5, r3
 801527c:	dd9c      	ble.n	80151b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 801527e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8015282:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8015286:	e9cd 4500 	strd	r4, r5, [sp]
 801528a:	463b      	mov	r3, r7
 801528c:	9a08      	ldr	r2, [sp, #32]
 801528e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015290:	4641      	mov	r1, r8
 8015292:	f7ff fe0f 	bl	8014eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8015296:	e78f      	b.n	80151b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8015298:	ea4f 4329 	mov.w	r3, r9, asr #16
 801529c:	1432      	asrs	r2, r6, #16
 801529e:	fb04 3202 	mla	r2, r4, r2, r3
 80152a2:	9908      	ldr	r1, [sp, #32]
 80152a4:	9b08      	ldr	r3, [sp, #32]
 80152a6:	4413      	add	r3, r2
 80152a8:	5c8a      	ldrb	r2, [r1, r2]
 80152aa:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 80152ae:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80152b2:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 80152b6:	f1be 0f00 	cmp.w	lr, #0
 80152ba:	d05b      	beq.n	8015374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 80152bc:	785a      	ldrb	r2, [r3, #1]
 80152be:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80152c2:	920f      	str	r2, [sp, #60]	; 0x3c
 80152c4:	b140      	cbz	r0, 80152d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80152c6:	191a      	adds	r2, r3, r4
 80152c8:	5d1b      	ldrb	r3, [r3, r4]
 80152ca:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80152d0:	7853      	ldrb	r3, [r2, #1]
 80152d2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152d6:	9310      	str	r3, [sp, #64]	; 0x40
 80152d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80152da:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80152dc:	fb1e f200 	smulbb	r2, lr, r0
 80152e0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80152e4:	10d2      	asrs	r2, r2, #3
 80152e6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80152ea:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80152ee:	ea4c 0c03 	orr.w	ip, ip, r3
 80152f2:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80152f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80152f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80152fa:	041b      	lsls	r3, r3, #16
 80152fc:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8015300:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015304:	ea43 030b 	orr.w	r3, r3, fp
 8015308:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801530a:	4353      	muls	r3, r2
 801530c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015310:	fb05 3c0c 	mla	ip, r5, ip, r3
 8015314:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015318:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801531c:	ea43 0b01 	orr.w	fp, r3, r1
 8015320:	f1c0 0110 	rsb	r1, r0, #16
 8015324:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015326:	eba1 0e0e 	sub.w	lr, r1, lr
 801532a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801532e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8015332:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8015336:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801533a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801533e:	ea4b 0e0e 	orr.w	lr, fp, lr
 8015342:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8015346:	fb02 cc0e 	mla	ip, r2, lr, ip
 801534a:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801534e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8015352:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015356:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801535a:	ea43 0c0c 	orr.w	ip, r3, ip
 801535e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015360:	f823 cb02 	strh.w	ip, [r3], #2
 8015364:	930c      	str	r3, [sp, #48]	; 0x30
 8015366:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015368:	4499      	add	r9, r3
 801536a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801536c:	f108 38ff 	add.w	r8, r8, #4294967295
 8015370:	441e      	add	r6, r3
 8015372:	e695      	b.n	80150a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8015374:	2800      	cmp	r0, #0
 8015376:	d0af      	beq.n	80152d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8015378:	5d1b      	ldrb	r3, [r3, r4]
 801537a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801537e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015380:	e7aa      	b.n	80152d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8015382:	b015      	add	sp, #84	; 0x54
 8015384:	ecbd 8b0a 	vpop	{d8-d12}
 8015388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801538c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801538c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015390:	468b      	mov	fp, r1
 8015392:	8809      	ldrh	r1, [r1, #0]
 8015394:	b089      	sub	sp, #36	; 0x24
 8015396:	10cd      	asrs	r5, r1, #3
 8015398:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 801539c:	ea4f 2921 	mov.w	r9, r1, asr #8
 80153a0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80153a4:	00c9      	lsls	r1, r1, #3
 80153a6:	9500      	str	r5, [sp, #0]
 80153a8:	b2c9      	uxtb	r1, r1
 80153aa:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 80153ae:	9101      	str	r1, [sp, #4]
 80153b0:	9900      	ldr	r1, [sp, #0]
 80153b2:	9202      	str	r2, [sp, #8]
 80153b4:	fb04 650e 	mla	r5, r4, lr, r6
 80153b8:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80153bc:	eb02 0805 	add.w	r8, r2, r5
 80153c0:	0209      	lsls	r1, r1, #8
 80153c2:	9a01      	ldr	r2, [sp, #4]
 80153c4:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80153c8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80153cc:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80153d0:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80153d4:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80153d8:	4311      	orrs	r1, r2
 80153da:	2c00      	cmp	r4, #0
 80153dc:	9107      	str	r1, [sp, #28]
 80153de:	db43      	blt.n	8015468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80153e0:	45a2      	cmp	sl, r4
 80153e2:	dd41      	ble.n	8015468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80153e4:	2e00      	cmp	r6, #0
 80153e6:	db3d      	blt.n	8015464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80153e8:	45b6      	cmp	lr, r6
 80153ea:	dd3b      	ble.n	8015464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80153ec:	9a02      	ldr	r2, [sp, #8]
 80153ee:	5d55      	ldrb	r5, [r2, r5]
 80153f0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80153f4:	441d      	add	r5, r3
 80153f6:	1c72      	adds	r2, r6, #1
 80153f8:	d439      	bmi.n	801546e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80153fa:	4596      	cmp	lr, r2
 80153fc:	dd37      	ble.n	801546e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80153fe:	2f00      	cmp	r7, #0
 8015400:	d035      	beq.n	801546e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015402:	f898 1001 	ldrb.w	r1, [r8, #1]
 8015406:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801540a:	4419      	add	r1, r3
 801540c:	3401      	adds	r4, #1
 801540e:	d432      	bmi.n	8015476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015410:	45a2      	cmp	sl, r4
 8015412:	dd30      	ble.n	8015476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015414:	b378      	cbz	r0, 8015476 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015416:	2e00      	cmp	r6, #0
 8015418:	db2b      	blt.n	8015472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801541a:	45b6      	cmp	lr, r6
 801541c:	dd29      	ble.n	8015472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801541e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8015422:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015426:	441c      	add	r4, r3
 8015428:	3601      	adds	r6, #1
 801542a:	d427      	bmi.n	801547c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801542c:	45b6      	cmp	lr, r6
 801542e:	dd25      	ble.n	801547c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015430:	b327      	cbz	r7, 801547c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015432:	44c6      	add	lr, r8
 8015434:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8015438:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801543c:	4413      	add	r3, r2
 801543e:	782a      	ldrb	r2, [r5, #0]
 8015440:	9202      	str	r2, [sp, #8]
 8015442:	780a      	ldrb	r2, [r1, #0]
 8015444:	9203      	str	r2, [sp, #12]
 8015446:	7822      	ldrb	r2, [r4, #0]
 8015448:	9204      	str	r2, [sp, #16]
 801544a:	2f0f      	cmp	r7, #15
 801544c:	781a      	ldrb	r2, [r3, #0]
 801544e:	9205      	str	r2, [sp, #20]
 8015450:	d801      	bhi.n	8015456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8015452:	280f      	cmp	r0, #15
 8015454:	d914      	bls.n	8015480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8015456:	4b3f      	ldr	r3, [pc, #252]	; (8015554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8015458:	4a3f      	ldr	r2, [pc, #252]	; (8015558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801545a:	4840      	ldr	r0, [pc, #256]	; (801555c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 801545c:	f240 3173 	movw	r1, #883	; 0x373
 8015460:	f006 fa70 	bl	801b944 <__assert_func>
 8015464:	ad07      	add	r5, sp, #28
 8015466:	e7c6      	b.n	80153f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8015468:	a907      	add	r1, sp, #28
 801546a:	460d      	mov	r5, r1
 801546c:	e7ce      	b.n	801540c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801546e:	a907      	add	r1, sp, #28
 8015470:	e7cc      	b.n	801540c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8015472:	ac07      	add	r4, sp, #28
 8015474:	e7d8      	b.n	8015428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8015476:	ab07      	add	r3, sp, #28
 8015478:	461c      	mov	r4, r3
 801547a:	e7e0      	b.n	801543e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801547c:	ab07      	add	r3, sp, #28
 801547e:	e7de      	b.n	801543e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8015480:	b2ba      	uxth	r2, r7
 8015482:	b280      	uxth	r0, r0
 8015484:	fb02 fa00 	mul.w	sl, r2, r0
 8015488:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801548c:	0112      	lsls	r2, r2, #4
 801548e:	b280      	uxth	r0, r0
 8015490:	f891 8002 	ldrb.w	r8, [r1, #2]
 8015494:	7849      	ldrb	r1, [r1, #1]
 8015496:	78ae      	ldrb	r6, [r5, #2]
 8015498:	786d      	ldrb	r5, [r5, #1]
 801549a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801549e:	eba2 020a 	sub.w	r2, r2, sl
 80154a2:	b292      	uxth	r2, r2
 80154a4:	ebae 0e00 	sub.w	lr, lr, r0
 80154a8:	fa1f fe8e 	uxth.w	lr, lr
 80154ac:	4351      	muls	r1, r2
 80154ae:	fb02 f808 	mul.w	r8, r2, r8
 80154b2:	fb0e 8806 	mla	r8, lr, r6, r8
 80154b6:	fb0e 1505 	mla	r5, lr, r5, r1
 80154ba:	78a6      	ldrb	r6, [r4, #2]
 80154bc:	7861      	ldrb	r1, [r4, #1]
 80154be:	fa1f f78c 	uxth.w	r7, ip
 80154c2:	fb00 8806 	mla	r8, r0, r6, r8
 80154c6:	fb00 5501 	mla	r5, r0, r1, r5
 80154ca:	789e      	ldrb	r6, [r3, #2]
 80154cc:	7859      	ldrb	r1, [r3, #1]
 80154ce:	9b00      	ldr	r3, [sp, #0]
 80154d0:	ea6f 0c0c 	mvn.w	ip, ip
 80154d4:	fa5f fc8c 	uxtb.w	ip, ip
 80154d8:	fb0a 5101 	mla	r1, sl, r1, r5
 80154dc:	fb13 f50c 	smulbb	r5, r3, ip
 80154e0:	9b03      	ldr	r3, [sp, #12]
 80154e2:	435a      	muls	r2, r3
 80154e4:	9b02      	ldr	r3, [sp, #8]
 80154e6:	fb0e 2203 	mla	r2, lr, r3, r2
 80154ea:	9b04      	ldr	r3, [sp, #16]
 80154ec:	fb00 2003 	mla	r0, r0, r3, r2
 80154f0:	9b05      	ldr	r3, [sp, #20]
 80154f2:	fb0a 8606 	mla	r6, sl, r6, r8
 80154f6:	fb0a 0a03 	mla	sl, sl, r3, r0
 80154fa:	9b01      	ldr	r3, [sp, #4]
 80154fc:	fb19 f90c 	smulbb	r9, r9, ip
 8015500:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8015504:	fb13 fc0c 	smulbb	ip, r3, ip
 8015508:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801550c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015510:	fb06 9607 	mla	r6, r6, r7, r9
 8015514:	fb01 5107 	mla	r1, r1, r7, r5
 8015518:	fb0a c707 	mla	r7, sl, r7, ip
 801551c:	b2b6      	uxth	r6, r6
 801551e:	b289      	uxth	r1, r1
 8015520:	b2bf      	uxth	r7, r7
 8015522:	f106 0901 	add.w	r9, r6, #1
 8015526:	f107 0c01 	add.w	ip, r7, #1
 801552a:	1c4d      	adds	r5, r1, #1
 801552c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8015530:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8015534:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8015538:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801553c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015540:	0949      	lsrs	r1, r1, #5
 8015542:	433e      	orrs	r6, r7
 8015544:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015548:	430e      	orrs	r6, r1
 801554a:	f8ab 6000 	strh.w	r6, [fp]
 801554e:	b009      	add	sp, #36	; 0x24
 8015550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015554:	080210bb 	.word	0x080210bb
 8015558:	08021619 	.word	0x08021619
 801555c:	08021143 	.word	0x08021143

08015560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015564:	ed2d 8b08 	vpush	{d8-d11}
 8015568:	b097      	sub	sp, #92	; 0x5c
 801556a:	eeb0 aa40 	vmov.f32	s20, s0
 801556e:	9309      	str	r3, [sp, #36]	; 0x24
 8015570:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8015574:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015576:	930b      	str	r3, [sp, #44]	; 0x2c
 8015578:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 801557c:	9310      	str	r3, [sp, #64]	; 0x40
 801557e:	910f      	str	r1, [sp, #60]	; 0x3c
 8015580:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8015584:	9015      	str	r0, [sp, #84]	; 0x54
 8015586:	6860      	ldr	r0, [r4, #4]
 8015588:	9213      	str	r2, [sp, #76]	; 0x4c
 801558a:	fb00 1303 	mla	r3, r0, r3, r1
 801558e:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015590:	6821      	ldr	r1, [r4, #0]
 8015592:	6854      	ldr	r4, [r2, #4]
 8015594:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8015598:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801559c:	930a      	str	r3, [sp, #40]	; 0x28
 801559e:	6813      	ldr	r3, [r2, #0]
 80155a0:	930e      	str	r3, [sp, #56]	; 0x38
 80155a2:	1d23      	adds	r3, r4, #4
 80155a4:	9308      	str	r3, [sp, #32]
 80155a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80155a8:	43db      	mvns	r3, r3
 80155aa:	b2db      	uxtb	r3, r3
 80155ac:	eef0 9a60 	vmov.f32	s19, s1
 80155b0:	eeb0 9a41 	vmov.f32	s18, s2
 80155b4:	eeb0 8a62 	vmov.f32	s16, s5
 80155b8:	eef0 8a43 	vmov.f32	s17, s6
 80155bc:	eef0 ba44 	vmov.f32	s23, s8
 80155c0:	eeb0 ba64 	vmov.f32	s22, s9
 80155c4:	eef0 aa45 	vmov.f32	s21, s10
 80155c8:	930c      	str	r3, [sp, #48]	; 0x30
 80155ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80155cc:	2b00      	cmp	r3, #0
 80155ce:	dc03      	bgt.n	80155d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80155d0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80155d2:	2b00      	cmp	r3, #0
 80155d4:	f340 825c 	ble.w	8015a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 80155d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155da:	2b00      	cmp	r3, #0
 80155dc:	f340 8127 	ble.w	801582e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 80155e0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80155e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80155e4:	1412      	asrs	r2, r2, #16
 80155e6:	ea4f 4323 	mov.w	r3, r3, asr #16
 80155ea:	d430      	bmi.n	801564e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80155ec:	1c51      	adds	r1, r2, #1
 80155ee:	428d      	cmp	r5, r1
 80155f0:	dd30      	ble.n	8015654 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80155f2:	2b00      	cmp	r3, #0
 80155f4:	db2e      	blt.n	8015654 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80155f6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80155f8:	1c59      	adds	r1, r3, #1
 80155fa:	4288      	cmp	r0, r1
 80155fc:	dd2a      	ble.n	8015654 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80155fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015600:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015602:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015604:	3b01      	subs	r3, #1
 8015606:	fb02 1203 	mla	r2, r2, r3, r1
 801560a:	1412      	asrs	r2, r2, #16
 801560c:	d42c      	bmi.n	8015668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801560e:	3201      	adds	r2, #1
 8015610:	4295      	cmp	r5, r2
 8015612:	dd29      	ble.n	8015668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015614:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015616:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015618:	fb02 1303 	mla	r3, r2, r3, r1
 801561c:	141b      	asrs	r3, r3, #16
 801561e:	d423      	bmi.n	8015668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015620:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015622:	3301      	adds	r3, #1
 8015624:	429a      	cmp	r2, r3
 8015626:	dd1f      	ble.n	8015668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015628:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801562a:	9311      	str	r3, [sp, #68]	; 0x44
 801562c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801562e:	930d      	str	r3, [sp, #52]	; 0x34
 8015630:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8015634:	9312      	str	r3, [sp, #72]	; 0x48
 8015636:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015638:	2b00      	cmp	r3, #0
 801563a:	f300 8161 	bgt.w	8015900 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 801563e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015640:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015642:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015646:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801564a:	930a      	str	r3, [sp, #40]	; 0x28
 801564c:	e0f1      	b.n	8015832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 801564e:	1c51      	adds	r1, r2, #1
 8015650:	f040 80de 	bne.w	8015810 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8015654:	42aa      	cmp	r2, r5
 8015656:	f280 80db 	bge.w	8015810 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801565a:	1c5f      	adds	r7, r3, #1
 801565c:	f2c0 80d8 	blt.w	8015810 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8015660:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015662:	4293      	cmp	r3, r2
 8015664:	f280 80d4 	bge.w	8015810 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8015668:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801566a:	9311      	str	r3, [sp, #68]	; 0x44
 801566c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801566e:	930d      	str	r3, [sp, #52]	; 0x34
 8015670:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015672:	2b00      	cmp	r3, #0
 8015674:	dde3      	ble.n	801563e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015676:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015678:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801567a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801567c:	141a      	asrs	r2, r3, #16
 801567e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015680:	1400      	asrs	r0, r0, #16
 8015682:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015686:	f3c1 3103 	ubfx	r1, r1, #12, #4
 801568a:	f100 8120 	bmi.w	80158ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 801568e:	1c46      	adds	r6, r0, #1
 8015690:	42b5      	cmp	r5, r6
 8015692:	f340 811e 	ble.w	80158d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8015696:	2a00      	cmp	r2, #0
 8015698:	f2c0 811b 	blt.w	80158d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 801569c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801569e:	1c56      	adds	r6, r2, #1
 80156a0:	42b7      	cmp	r7, r6
 80156a2:	f340 8116 	ble.w	80158d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80156a6:	fb02 0005 	mla	r0, r2, r5, r0
 80156aa:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80156ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80156ae:	9c08      	ldr	r4, [sp, #32]
 80156b0:	4402      	add	r2, r0
 80156b2:	5c30      	ldrb	r0, [r6, r0]
 80156b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80156b8:	9014      	str	r0, [sp, #80]	; 0x50
 80156ba:	1826      	adds	r6, r4, r0
 80156bc:	2b00      	cmp	r3, #0
 80156be:	f000 80f7 	beq.w	80158b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 80156c2:	f892 e001 	ldrb.w	lr, [r2, #1]
 80156c6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80156ca:	44a6      	add	lr, r4
 80156cc:	2900      	cmp	r1, #0
 80156ce:	f000 80f8 	beq.w	80158c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 80156d2:	1950      	adds	r0, r2, r5
 80156d4:	5d52      	ldrb	r2, [r2, r5]
 80156d6:	7840      	ldrb	r0, [r0, #1]
 80156d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80156dc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80156e0:	4422      	add	r2, r4
 80156e2:	4420      	add	r0, r4
 80156e4:	b29b      	uxth	r3, r3
 80156e6:	b289      	uxth	r1, r1
 80156e8:	fb03 fa01 	mul.w	sl, r3, r1
 80156ec:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 80156f0:	011b      	lsls	r3, r3, #4
 80156f2:	b289      	uxth	r1, r1
 80156f4:	f89e c002 	ldrb.w	ip, [lr, #2]
 80156f8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80156fc:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80156fe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015700:	f8b7 8000 	ldrh.w	r8, [r7]
 8015704:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8015708:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 801570c:	eba3 030a 	sub.w	r3, r3, sl
 8015710:	b29b      	uxth	r3, r3
 8015712:	eba9 0901 	sub.w	r9, r9, r1
 8015716:	fa1f f989 	uxth.w	r9, r9
 801571a:	fb03 fc0c 	mul.w	ip, r3, ip
 801571e:	fb09 cc0b 	mla	ip, r9, fp, ip
 8015722:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015726:	fb01 cc0b 	mla	ip, r1, fp, ip
 801572a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801572e:	fb0a cc0b 	mla	ip, sl, fp, ip
 8015732:	ea4f 2b28 	mov.w	fp, r8, asr #8
 8015736:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801573a:	fb1b fb04 	smulbb	fp, fp, r4
 801573e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015742:	fb0c bc07 	mla	ip, ip, r7, fp
 8015746:	f896 b001 	ldrb.w	fp, [r6, #1]
 801574a:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801574e:	f89e e000 	ldrb.w	lr, [lr]
 8015752:	435e      	muls	r6, r3
 8015754:	fb09 660b 	mla	r6, r9, fp, r6
 8015758:	f892 b001 	ldrb.w	fp, [r2, #1]
 801575c:	fb01 660b 	mla	r6, r1, fp, r6
 8015760:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015764:	fb0a 660b 	mla	r6, sl, fp, r6
 8015768:	ea4f 0be8 	mov.w	fp, r8, asr #3
 801576c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015770:	fb1b fb04 	smulbb	fp, fp, r4
 8015774:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015778:	fb06 b607 	mla	r6, r6, r7, fp
 801577c:	b2b4      	uxth	r4, r6
 801577e:	9412      	str	r4, [sp, #72]	; 0x48
 8015780:	9e08      	ldr	r6, [sp, #32]
 8015782:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015784:	f816 b004 	ldrb.w	fp, [r6, r4]
 8015788:	fb03 f30e 	mul.w	r3, r3, lr
 801578c:	f892 e000 	ldrb.w	lr, [r2]
 8015790:	fb09 330b 	mla	r3, r9, fp, r3
 8015794:	fb01 330e 	mla	r3, r1, lr, r3
 8015798:	f890 e000 	ldrb.w	lr, [r0]
 801579c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80157a0:	fb0a 3e0e 	mla	lr, sl, lr, r3
 80157a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80157a6:	fa5f f888 	uxtb.w	r8, r8
 80157aa:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80157ae:	fb18 f803 	smulbb	r8, r8, r3
 80157b2:	fb0e 8807 	mla	r8, lr, r7, r8
 80157b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80157b8:	fa1f fc8c 	uxth.w	ip, ip
 80157bc:	fa1f f888 	uxth.w	r8, r8
 80157c0:	f103 0b01 	add.w	fp, r3, #1
 80157c4:	f10c 0201 	add.w	r2, ip, #1
 80157c8:	f108 0e01 	add.w	lr, r8, #1
 80157cc:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 80157d0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80157d4:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 80157d8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80157dc:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 80157e0:	0976      	lsrs	r6, r6, #5
 80157e2:	ea4c 0c08 	orr.w	ip, ip, r8
 80157e6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80157ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80157ec:	ea4c 0606 	orr.w	r6, ip, r6
 80157f0:	801e      	strh	r6, [r3, #0]
 80157f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80157f4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80157f6:	3302      	adds	r3, #2
 80157f8:	930d      	str	r3, [sp, #52]	; 0x34
 80157fa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80157fc:	4413      	add	r3, r2
 80157fe:	9329      	str	r3, [sp, #164]	; 0xa4
 8015800:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015802:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015804:	4413      	add	r3, r2
 8015806:	932a      	str	r3, [sp, #168]	; 0xa8
 8015808:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801580a:	3b01      	subs	r3, #1
 801580c:	9311      	str	r3, [sp, #68]	; 0x44
 801580e:	e72f      	b.n	8015670 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8015810:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015812:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015814:	4413      	add	r3, r2
 8015816:	9329      	str	r3, [sp, #164]	; 0xa4
 8015818:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801581a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801581c:	4413      	add	r3, r2
 801581e:	932a      	str	r3, [sp, #168]	; 0xa8
 8015820:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015822:	3b01      	subs	r3, #1
 8015824:	9309      	str	r3, [sp, #36]	; 0x24
 8015826:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015828:	3302      	adds	r3, #2
 801582a:	930a      	str	r3, [sp, #40]	; 0x28
 801582c:	e6d4      	b.n	80155d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801582e:	f47f aee6 	bne.w	80155fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8015832:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015834:	2b00      	cmp	r3, #0
 8015836:	f340 812b 	ble.w	8015a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801583a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801583e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015842:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015846:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015848:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801584c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015850:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015854:	eef0 6a48 	vmov.f32	s13, s16
 8015858:	ee69 7a27 	vmul.f32	s15, s18, s15
 801585c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015860:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015864:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8015868:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801586c:	eef0 6a68 	vmov.f32	s13, s17
 8015870:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015874:	ee18 2a10 	vmov	r2, s16
 8015878:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801587c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015880:	ee18 2a90 	vmov	r2, s17
 8015884:	932b      	str	r3, [sp, #172]	; 0xac
 8015886:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015888:	fb92 f3f3 	sdiv	r3, r2, r3
 801588c:	932c      	str	r3, [sp, #176]	; 0xb0
 801588e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015890:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015892:	3b01      	subs	r3, #1
 8015894:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015898:	930f      	str	r3, [sp, #60]	; 0x3c
 801589a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801589c:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80158a0:	bf08      	it	eq
 80158a2:	4613      	moveq	r3, r2
 80158a4:	9309      	str	r3, [sp, #36]	; 0x24
 80158a6:	eef0 8a67 	vmov.f32	s17, s15
 80158aa:	eeb0 8a47 	vmov.f32	s16, s14
 80158ae:	e68c      	b.n	80155ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80158b0:	b151      	cbz	r1, 80158c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80158b2:	5d52      	ldrb	r2, [r2, r5]
 80158b4:	9808      	ldr	r0, [sp, #32]
 80158b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80158ba:	4402      	add	r2, r0
 80158bc:	4630      	mov	r0, r6
 80158be:	46b6      	mov	lr, r6
 80158c0:	e710      	b.n	80156e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80158c2:	4630      	mov	r0, r6
 80158c4:	4632      	mov	r2, r6
 80158c6:	e70d      	b.n	80156e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80158c8:	4630      	mov	r0, r6
 80158ca:	4632      	mov	r2, r6
 80158cc:	e7f7      	b.n	80158be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 80158ce:	1c46      	adds	r6, r0, #1
 80158d0:	d18f      	bne.n	80157f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80158d2:	4285      	cmp	r5, r0
 80158d4:	dd8d      	ble.n	80157f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80158d6:	1c54      	adds	r4, r2, #1
 80158d8:	db8b      	blt.n	80157f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80158da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80158dc:	4294      	cmp	r4, r2
 80158de:	dd88      	ble.n	80157f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80158e0:	e9cd 2303 	strd	r2, r3, [sp, #12]
 80158e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80158e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80158e8:	9002      	str	r0, [sp, #8]
 80158ea:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80158ee:	e9cd 5300 	strd	r5, r3, [sp]
 80158f2:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 80158f6:	9b08      	ldr	r3, [sp, #32]
 80158f8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80158fa:	f7ff fd47 	bl	801538c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80158fe:	e778      	b.n	80157f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015900:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015902:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015904:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015906:	1410      	asrs	r0, r2, #16
 8015908:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801590c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801590e:	1412      	asrs	r2, r2, #16
 8015910:	fb05 2000 	mla	r0, r5, r0, r2
 8015914:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015916:	f814 a000 	ldrb.w	sl, [r4, r0]
 801591a:	4402      	add	r2, r0
 801591c:	9808      	ldr	r0, [sp, #32]
 801591e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8015922:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015926:	eb00 060a 	add.w	r6, r0, sl
 801592a:	2b00      	cmp	r3, #0
 801592c:	f000 80a1 	beq.w	8015a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8015930:	f892 c001 	ldrb.w	ip, [r2, #1]
 8015934:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015938:	4484      	add	ip, r0
 801593a:	2900      	cmp	r1, #0
 801593c:	f000 80a2 	beq.w	8015a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8015940:	1950      	adds	r0, r2, r5
 8015942:	5d52      	ldrb	r2, [r2, r5]
 8015944:	7840      	ldrb	r0, [r0, #1]
 8015946:	9c08      	ldr	r4, [sp, #32]
 8015948:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801594c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015950:	4422      	add	r2, r4
 8015952:	4420      	add	r0, r4
 8015954:	b29b      	uxth	r3, r3
 8015956:	b289      	uxth	r1, r1
 8015958:	fb03 f901 	mul.w	r9, r3, r1
 801595c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015960:	011b      	lsls	r3, r3, #4
 8015962:	b289      	uxth	r1, r1
 8015964:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8015968:	f896 b002 	ldrb.w	fp, [r6, #2]
 801596c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801596e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015972:	eba3 0309 	sub.w	r3, r3, r9
 8015976:	b29b      	uxth	r3, r3
 8015978:	eba8 0801 	sub.w	r8, r8, r1
 801597c:	fa1f f888 	uxth.w	r8, r8
 8015980:	435f      	muls	r7, r3
 8015982:	fb08 770b 	mla	r7, r8, fp, r7
 8015986:	f892 b002 	ldrb.w	fp, [r2, #2]
 801598a:	f8b4 e000 	ldrh.w	lr, [r4]
 801598e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015990:	fb01 770b 	mla	r7, r1, fp, r7
 8015994:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015998:	fb09 770b 	mla	r7, r9, fp, r7
 801599c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80159a0:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80159a4:	fb1b fb04 	smulbb	fp, fp, r4
 80159a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80159aa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80159ae:	fb07 b704 	mla	r7, r7, r4, fp
 80159b2:	f896 b001 	ldrb.w	fp, [r6, #1]
 80159b6:	f89c 6001 	ldrb.w	r6, [ip, #1]
 80159ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80159bc:	f89c c000 	ldrb.w	ip, [ip]
 80159c0:	435e      	muls	r6, r3
 80159c2:	fb08 660b 	mla	r6, r8, fp, r6
 80159c6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80159ca:	fb01 660b 	mla	r6, r1, fp, r6
 80159ce:	f890 b001 	ldrb.w	fp, [r0, #1]
 80159d2:	fb09 660b 	mla	r6, r9, fp, r6
 80159d6:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80159da:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80159de:	fb1b fb04 	smulbb	fp, fp, r4
 80159e2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80159e4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80159e8:	fb06 b604 	mla	r6, r6, r4, fp
 80159ec:	9c08      	ldr	r4, [sp, #32]
 80159ee:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80159f2:	fb03 f30c 	mul.w	r3, r3, ip
 80159f6:	f892 c000 	ldrb.w	ip, [r2]
 80159fa:	fb08 330a 	mla	r3, r8, sl, r3
 80159fe:	fb01 330c 	mla	r3, r1, ip, r3
 8015a02:	f890 c000 	ldrb.w	ip, [r0]
 8015a06:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015a0a:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015a0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015a10:	fa5f fe8e 	uxtb.w	lr, lr
 8015a14:	fb1e fe03 	smulbb	lr, lr, r3
 8015a18:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015a1a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015a1e:	fb0c ec03 	mla	ip, ip, r3, lr
 8015a22:	b2bf      	uxth	r7, r7
 8015a24:	b2b6      	uxth	r6, r6
 8015a26:	fa1f fc8c 	uxth.w	ip, ip
 8015a2a:	1c7b      	adds	r3, r7, #1
 8015a2c:	f10c 0201 	add.w	r2, ip, #1
 8015a30:	f106 0b01 	add.w	fp, r6, #1
 8015a34:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015a38:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8015a3c:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8015a40:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015a44:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015a48:	0976      	lsrs	r6, r6, #5
 8015a4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015a4c:	4317      	orrs	r7, r2
 8015a4e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015a52:	4337      	orrs	r7, r6
 8015a54:	f823 7b02 	strh.w	r7, [r3], #2
 8015a58:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015a5a:	930d      	str	r3, [sp, #52]	; 0x34
 8015a5c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a5e:	4413      	add	r3, r2
 8015a60:	9329      	str	r3, [sp, #164]	; 0xa4
 8015a62:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015a64:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015a66:	4413      	add	r3, r2
 8015a68:	932a      	str	r3, [sp, #168]	; 0xa8
 8015a6a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015a6c:	3b01      	subs	r3, #1
 8015a6e:	9311      	str	r3, [sp, #68]	; 0x44
 8015a70:	e5e1      	b.n	8015636 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8015a72:	b151      	cbz	r1, 8015a8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8015a74:	5d52      	ldrb	r2, [r2, r5]
 8015a76:	9808      	ldr	r0, [sp, #32]
 8015a78:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015a7c:	4402      	add	r2, r0
 8015a7e:	4630      	mov	r0, r6
 8015a80:	46b4      	mov	ip, r6
 8015a82:	e767      	b.n	8015954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8015a84:	4630      	mov	r0, r6
 8015a86:	4632      	mov	r2, r6
 8015a88:	e764      	b.n	8015954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8015a8a:	4630      	mov	r0, r6
 8015a8c:	4632      	mov	r2, r6
 8015a8e:	e7f7      	b.n	8015a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 8015a90:	b017      	add	sp, #92	; 0x5c
 8015a92:	ecbd 8b08 	vpop	{d8-d11}
 8015a96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8015a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015aa0:	880e      	ldrh	r6, [r1, #0]
 8015aa2:	b085      	sub	sp, #20
 8015aa4:	0230      	lsls	r0, r6, #8
 8015aa6:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015aaa:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8015aae:	0170      	lsls	r0, r6, #5
 8015ab0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015ab4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015ab8:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015abc:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015ac0:	00f6      	lsls	r6, r6, #3
 8015ac2:	ea4b 0000 	orr.w	r0, fp, r0
 8015ac6:	b2f6      	uxtb	r6, r6
 8015ac8:	4691      	mov	r9, r2
 8015aca:	fb05 7a0c 	mla	sl, r5, ip, r7
 8015ace:	4306      	orrs	r6, r0
 8015ad0:	2d00      	cmp	r5, #0
 8015ad2:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015ad6:	9603      	str	r6, [sp, #12]
 8015ad8:	eb09 0e0a 	add.w	lr, r9, sl
 8015adc:	db42      	blt.n	8015b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8015ade:	45a8      	cmp	r8, r5
 8015ae0:	dd40      	ble.n	8015b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8015ae2:	2f00      	cmp	r7, #0
 8015ae4:	db3c      	blt.n	8015b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8015ae6:	45bc      	cmp	ip, r7
 8015ae8:	dd3a      	ble.n	8015b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8015aea:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015aee:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015af2:	441e      	add	r6, r3
 8015af4:	1c78      	adds	r0, r7, #1
 8015af6:	d438      	bmi.n	8015b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015af8:	4584      	cmp	ip, r0
 8015afa:	dd36      	ble.n	8015b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015afc:	b3aa      	cbz	r2, 8015b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015afe:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015b02:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015b06:	4418      	add	r0, r3
 8015b08:	3501      	adds	r5, #1
 8015b0a:	d432      	bmi.n	8015b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015b0c:	45a8      	cmp	r8, r5
 8015b0e:	dd30      	ble.n	8015b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015b10:	b37c      	cbz	r4, 8015b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015b12:	2f00      	cmp	r7, #0
 8015b14:	db2b      	blt.n	8015b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8015b16:	45bc      	cmp	ip, r7
 8015b18:	dd29      	ble.n	8015b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8015b1a:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015b1e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015b22:	441d      	add	r5, r3
 8015b24:	3701      	adds	r7, #1
 8015b26:	d427      	bmi.n	8015b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015b28:	45bc      	cmp	ip, r7
 8015b2a:	dd25      	ble.n	8015b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015b2c:	b322      	cbz	r2, 8015b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015b2e:	44f4      	add	ip, lr
 8015b30:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015b34:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015b38:	443b      	add	r3, r7
 8015b3a:	781f      	ldrb	r7, [r3, #0]
 8015b3c:	f896 a000 	ldrb.w	sl, [r6]
 8015b40:	f890 b000 	ldrb.w	fp, [r0]
 8015b44:	f895 9000 	ldrb.w	r9, [r5]
 8015b48:	9700      	str	r7, [sp, #0]
 8015b4a:	2a0f      	cmp	r2, #15
 8015b4c:	d801      	bhi.n	8015b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8015b4e:	2c0f      	cmp	r4, #15
 8015b50:	d914      	bls.n	8015b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8015b52:	4b2c      	ldr	r3, [pc, #176]	; (8015c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8015b54:	4a2c      	ldr	r2, [pc, #176]	; (8015c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8015b56:	482d      	ldr	r0, [pc, #180]	; (8015c0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015b58:	f240 3173 	movw	r1, #883	; 0x373
 8015b5c:	f005 fef2 	bl	801b944 <__assert_func>
 8015b60:	ae03      	add	r6, sp, #12
 8015b62:	e7c7      	b.n	8015af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8015b64:	a803      	add	r0, sp, #12
 8015b66:	4606      	mov	r6, r0
 8015b68:	e7ce      	b.n	8015b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8015b6a:	a803      	add	r0, sp, #12
 8015b6c:	e7cc      	b.n	8015b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8015b6e:	ad03      	add	r5, sp, #12
 8015b70:	e7d8      	b.n	8015b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8015b72:	ab03      	add	r3, sp, #12
 8015b74:	461d      	mov	r5, r3
 8015b76:	e7e0      	b.n	8015b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8015b78:	ab03      	add	r3, sp, #12
 8015b7a:	e7de      	b.n	8015b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8015b7c:	b292      	uxth	r2, r2
 8015b7e:	b2a4      	uxth	r4, r4
 8015b80:	fb02 f804 	mul.w	r8, r2, r4
 8015b84:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8015b88:	0112      	lsls	r2, r2, #4
 8015b8a:	b2a4      	uxth	r4, r4
 8015b8c:	f890 e002 	ldrb.w	lr, [r0, #2]
 8015b90:	78b7      	ldrb	r7, [r6, #2]
 8015b92:	7840      	ldrb	r0, [r0, #1]
 8015b94:	7876      	ldrb	r6, [r6, #1]
 8015b96:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8015b9a:	eba2 0208 	sub.w	r2, r2, r8
 8015b9e:	b292      	uxth	r2, r2
 8015ba0:	ebac 0c04 	sub.w	ip, ip, r4
 8015ba4:	fa1f fc8c 	uxth.w	ip, ip
 8015ba8:	fb02 fe0e 	mul.w	lr, r2, lr
 8015bac:	fb0c ee07 	mla	lr, ip, r7, lr
 8015bb0:	78af      	ldrb	r7, [r5, #2]
 8015bb2:	fb04 ee07 	mla	lr, r4, r7, lr
 8015bb6:	789f      	ldrb	r7, [r3, #2]
 8015bb8:	785b      	ldrb	r3, [r3, #1]
 8015bba:	fb08 e707 	mla	r7, r8, r7, lr
 8015bbe:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015bc2:	fb02 fe0b 	mul.w	lr, r2, fp
 8015bc6:	4342      	muls	r2, r0
 8015bc8:	7868      	ldrb	r0, [r5, #1]
 8015bca:	9701      	str	r7, [sp, #4]
 8015bcc:	fb0c ee0a 	mla	lr, ip, sl, lr
 8015bd0:	9f00      	ldr	r7, [sp, #0]
 8015bd2:	fb0c 2206 	mla	r2, ip, r6, r2
 8015bd6:	fb04 ee09 	mla	lr, r4, r9, lr
 8015bda:	fb04 2400 	mla	r4, r4, r0, r2
 8015bde:	fb08 ee07 	mla	lr, r8, r7, lr
 8015be2:	9f01      	ldr	r7, [sp, #4]
 8015be4:	fb08 4803 	mla	r8, r8, r3, r4
 8015be8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015bec:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015bf0:	ea47 070e 	orr.w	r7, r7, lr
 8015bf4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015bf8:	ea47 0708 	orr.w	r7, r7, r8
 8015bfc:	800f      	strh	r7, [r1, #0]
 8015bfe:	b005      	add	sp, #20
 8015c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c04:	080210bb 	.word	0x080210bb
 8015c08:	08021619 	.word	0x08021619
 8015c0c:	08021143 	.word	0x08021143

08015c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c14:	ed2d 8b0a 	vpush	{d8-d12}
 8015c18:	b091      	sub	sp, #68	; 0x44
 8015c1a:	eeb0 aa40 	vmov.f32	s20, s0
 8015c1e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8015c20:	9307      	str	r3, [sp, #28]
 8015c22:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8015c26:	910c      	str	r1, [sp, #48]	; 0x30
 8015c28:	9309      	str	r3, [sp, #36]	; 0x24
 8015c2a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8015c2e:	900f      	str	r0, [sp, #60]	; 0x3c
 8015c30:	6860      	ldr	r0, [r4, #4]
 8015c32:	920e      	str	r2, [sp, #56]	; 0x38
 8015c34:	fb00 1303 	mla	r3, r0, r3, r1
 8015c38:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015c3a:	6821      	ldr	r1, [r4, #0]
 8015c3c:	6854      	ldr	r4, [r2, #4]
 8015c3e:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 8015c42:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8015c46:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015c4a:	9308      	str	r3, [sp, #32]
 8015c4c:	6813      	ldr	r3, [r2, #0]
 8015c4e:	930a      	str	r3, [sp, #40]	; 0x28
 8015c50:	eef0 9a60 	vmov.f32	s19, s1
 8015c54:	eeb0 9a41 	vmov.f32	s18, s2
 8015c58:	eeb0 8a62 	vmov.f32	s16, s5
 8015c5c:	eef0 8a43 	vmov.f32	s17, s6
 8015c60:	eeb0 ca44 	vmov.f32	s24, s8
 8015c64:	eef0 ba64 	vmov.f32	s23, s9
 8015c68:	eeb0 ba45 	vmov.f32	s22, s10
 8015c6c:	3404      	adds	r4, #4
 8015c6e:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015c72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015c74:	2b00      	cmp	r3, #0
 8015c76:	dc03      	bgt.n	8015c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015c78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015c7a:	2b00      	cmp	r3, #0
 8015c7c:	f340 81cb 	ble.w	8016016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8015c80:	9b07      	ldr	r3, [sp, #28]
 8015c82:	2b00      	cmp	r3, #0
 8015c84:	f340 80dd 	ble.w	8015e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8015c88:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015c8a:	1412      	asrs	r2, r2, #16
 8015c8c:	ea4f 432b 	mov.w	r3, fp, asr #16
 8015c90:	d42c      	bmi.n	8015cec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8015c92:	1c51      	adds	r1, r2, #1
 8015c94:	428d      	cmp	r5, r1
 8015c96:	dd2c      	ble.n	8015cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8015c98:	2b00      	cmp	r3, #0
 8015c9a:	db2a      	blt.n	8015cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8015c9c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015c9e:	1c59      	adds	r1, r3, #1
 8015ca0:	4288      	cmp	r0, r1
 8015ca2:	dd26      	ble.n	8015cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8015ca4:	9b07      	ldr	r3, [sp, #28]
 8015ca6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015ca8:	9925      	ldr	r1, [sp, #148]	; 0x94
 8015caa:	3b01      	subs	r3, #1
 8015cac:	fb02 1203 	mla	r2, r2, r3, r1
 8015cb0:	1412      	asrs	r2, r2, #16
 8015cb2:	d428      	bmi.n	8015d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015cb4:	3201      	adds	r2, #1
 8015cb6:	4295      	cmp	r5, r2
 8015cb8:	dd25      	ble.n	8015d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015cba:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015cbc:	fb02 b303 	mla	r3, r2, r3, fp
 8015cc0:	141b      	asrs	r3, r3, #16
 8015cc2:	d420      	bmi.n	8015d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015cc4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015cc6:	3301      	adds	r3, #1
 8015cc8:	429a      	cmp	r2, r3
 8015cca:	dd1c      	ble.n	8015d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015ccc:	9b07      	ldr	r3, [sp, #28]
 8015cce:	930b      	str	r3, [sp, #44]	; 0x2c
 8015cd0:	9b08      	ldr	r3, [sp, #32]
 8015cd2:	930d      	str	r3, [sp, #52]	; 0x34
 8015cd4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015cd6:	2b00      	cmp	r3, #0
 8015cd8:	f300 8116 	bgt.w	8015f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8015cdc:	9b07      	ldr	r3, [sp, #28]
 8015cde:	9a08      	ldr	r2, [sp, #32]
 8015ce0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ce4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015ce8:	9308      	str	r3, [sp, #32]
 8015cea:	e0ac      	b.n	8015e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8015cec:	1c51      	adds	r1, r2, #1
 8015cee:	f040 809b 	bne.w	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015cf2:	42aa      	cmp	r2, r5
 8015cf4:	f280 8098 	bge.w	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015cf8:	1c5a      	adds	r2, r3, #1
 8015cfa:	f2c0 8095 	blt.w	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015cfe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015d00:	4293      	cmp	r3, r2
 8015d02:	f280 8091 	bge.w	8015e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015d06:	9b07      	ldr	r3, [sp, #28]
 8015d08:	930d      	str	r3, [sp, #52]	; 0x34
 8015d0a:	9b08      	ldr	r3, [sp, #32]
 8015d0c:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015d10:	2b00      	cmp	r3, #0
 8015d12:	dde3      	ble.n	8015cdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8015d14:	9825      	ldr	r0, [sp, #148]	; 0x94
 8015d16:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015d18:	1400      	asrs	r0, r0, #16
 8015d1a:	ea4f 422b 	mov.w	r2, fp, asr #16
 8015d1e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015d22:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8015d26:	f100 80d9 	bmi.w	8015edc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8015d2a:	1c46      	adds	r6, r0, #1
 8015d2c:	42b5      	cmp	r5, r6
 8015d2e:	f340 80d7 	ble.w	8015ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8015d32:	2a00      	cmp	r2, #0
 8015d34:	f2c0 80d4 	blt.w	8015ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8015d38:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015d3a:	1c56      	adds	r6, r2, #1
 8015d3c:	42b7      	cmp	r7, r6
 8015d3e:	f340 80cf 	ble.w	8015ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8015d42:	fb02 0005 	mla	r0, r2, r5, r0
 8015d46:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015d48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015d4a:	4402      	add	r2, r0
 8015d4c:	5c30      	ldrb	r0, [r6, r0]
 8015d4e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015d52:	eb04 0c08 	add.w	ip, r4, r8
 8015d56:	2b00      	cmp	r3, #0
 8015d58:	f000 80b2 	beq.w	8015ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8015d5c:	7856      	ldrb	r6, [r2, #1]
 8015d5e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015d62:	4426      	add	r6, r4
 8015d64:	2900      	cmp	r1, #0
 8015d66:	f000 80b3 	beq.w	8015ed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8015d6a:	1950      	adds	r0, r2, r5
 8015d6c:	5d52      	ldrb	r2, [r2, r5]
 8015d6e:	7840      	ldrb	r0, [r0, #1]
 8015d70:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015d74:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015d78:	4422      	add	r2, r4
 8015d7a:	4420      	add	r0, r4
 8015d7c:	b29b      	uxth	r3, r3
 8015d7e:	b289      	uxth	r1, r1
 8015d80:	fb03 f901 	mul.w	r9, r3, r1
 8015d84:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015d88:	011b      	lsls	r3, r3, #4
 8015d8a:	b289      	uxth	r1, r1
 8015d8c:	78b7      	ldrb	r7, [r6, #2]
 8015d8e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015d92:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015d96:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015d9a:	eba3 0309 	sub.w	r3, r3, r9
 8015d9e:	b29b      	uxth	r3, r3
 8015da0:	ebae 0e01 	sub.w	lr, lr, r1
 8015da4:	fa1f fe8e 	uxth.w	lr, lr
 8015da8:	435f      	muls	r7, r3
 8015daa:	fb0e 770a 	mla	r7, lr, sl, r7
 8015dae:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015db2:	fb01 770a 	mla	r7, r1, sl, r7
 8015db6:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015dba:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015dbe:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015dc2:	f896 8000 	ldrb.w	r8, [r6]
 8015dc6:	7876      	ldrb	r6, [r6, #1]
 8015dc8:	fb03 f808 	mul.w	r8, r3, r8
 8015dcc:	fb0e 8807 	mla	r8, lr, r7, r8
 8015dd0:	7817      	ldrb	r7, [r2, #0]
 8015dd2:	fb01 8807 	mla	r8, r1, r7, r8
 8015dd6:	7807      	ldrb	r7, [r0, #0]
 8015dd8:	fb09 8707 	mla	r7, r9, r7, r8
 8015ddc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015de0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015de4:	ea4a 0707 	orr.w	r7, sl, r7
 8015de8:	4373      	muls	r3, r6
 8015dea:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015dee:	fb0e 330c 	mla	r3, lr, ip, r3
 8015df2:	fb01 310a 	mla	r1, r1, sl, r3
 8015df6:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015dfa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015dfc:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015e00:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015e04:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015e08:	ea47 070a 	orr.w	r7, r7, sl
 8015e0c:	801f      	strh	r7, [r3, #0]
 8015e0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e10:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015e12:	3302      	adds	r3, #2
 8015e14:	930b      	str	r3, [sp, #44]	; 0x2c
 8015e16:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015e18:	4413      	add	r3, r2
 8015e1a:	9325      	str	r3, [sp, #148]	; 0x94
 8015e1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e1e:	449b      	add	fp, r3
 8015e20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015e22:	3b01      	subs	r3, #1
 8015e24:	930d      	str	r3, [sp, #52]	; 0x34
 8015e26:	e772      	b.n	8015d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015e28:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015e2a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015e2c:	4413      	add	r3, r2
 8015e2e:	9325      	str	r3, [sp, #148]	; 0x94
 8015e30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e32:	449b      	add	fp, r3
 8015e34:	9b07      	ldr	r3, [sp, #28]
 8015e36:	3b01      	subs	r3, #1
 8015e38:	9307      	str	r3, [sp, #28]
 8015e3a:	9b08      	ldr	r3, [sp, #32]
 8015e3c:	3302      	adds	r3, #2
 8015e3e:	9308      	str	r3, [sp, #32]
 8015e40:	e71e      	b.n	8015c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015e42:	f47f af2f 	bne.w	8015ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8015e46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e48:	2b00      	cmp	r3, #0
 8015e4a:	f340 80e4 	ble.w	8016016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8015e4e:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8015e52:	ee79 9aab 	vadd.f32	s19, s19, s23
 8015e56:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8015e5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015e5c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8015e60:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015e64:	eef0 6a48 	vmov.f32	s13, s16
 8015e68:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015e6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015e70:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015e74:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8015e78:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015e7c:	eef0 6a68 	vmov.f32	s13, s17
 8015e80:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015e84:	ee18 2a10 	vmov	r2, s16
 8015e88:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015e8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e90:	ee18 2a90 	vmov	r2, s17
 8015e94:	9327      	str	r3, [sp, #156]	; 0x9c
 8015e96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015e98:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e9c:	9328      	str	r3, [sp, #160]	; 0xa0
 8015e9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015ea0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015ea2:	3b01      	subs	r3, #1
 8015ea4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ea8:	930c      	str	r3, [sp, #48]	; 0x30
 8015eaa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015eac:	bf08      	it	eq
 8015eae:	4613      	moveq	r3, r2
 8015eb0:	ee16 ba90 	vmov	fp, s13
 8015eb4:	9307      	str	r3, [sp, #28]
 8015eb6:	eef0 8a67 	vmov.f32	s17, s15
 8015eba:	eeb0 8a47 	vmov.f32	s16, s14
 8015ebe:	e6d8      	b.n	8015c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8015ec0:	b149      	cbz	r1, 8015ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 8015ec2:	5d52      	ldrb	r2, [r2, r5]
 8015ec4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015ec8:	4422      	add	r2, r4
 8015eca:	4660      	mov	r0, ip
 8015ecc:	4666      	mov	r6, ip
 8015ece:	e755      	b.n	8015d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8015ed0:	4660      	mov	r0, ip
 8015ed2:	4662      	mov	r2, ip
 8015ed4:	e752      	b.n	8015d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8015ed6:	4660      	mov	r0, ip
 8015ed8:	4662      	mov	r2, ip
 8015eda:	e7f7      	b.n	8015ecc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8015edc:	1c47      	adds	r7, r0, #1
 8015ede:	d196      	bne.n	8015e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015ee0:	4285      	cmp	r5, r0
 8015ee2:	dd94      	ble.n	8015e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015ee4:	1c56      	adds	r6, r2, #1
 8015ee6:	db92      	blt.n	8015e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015ee8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8015eea:	4296      	cmp	r6, r2
 8015eec:	dd8f      	ble.n	8015e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015eee:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015ef2:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8015ef6:	e9cd 5600 	strd	r5, r6, [sp]
 8015efa:	4623      	mov	r3, r4
 8015efc:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 8015f00:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015f02:	f7ff fdcb 	bl	8015a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015f06:	e782      	b.n	8015e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015f08:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015f0a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015f0c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015f0e:	1412      	asrs	r2, r2, #16
 8015f10:	ea4f 402b 	mov.w	r0, fp, asr #16
 8015f14:	fb05 2000 	mla	r0, r5, r0, r2
 8015f18:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015f1a:	f816 8000 	ldrb.w	r8, [r6, r0]
 8015f1e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015f22:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015f26:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8015f2a:	4402      	add	r2, r0
 8015f2c:	eb04 0c08 	add.w	ip, r4, r8
 8015f30:	2b00      	cmp	r3, #0
 8015f32:	d062      	beq.n	8015ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8015f34:	7856      	ldrb	r6, [r2, #1]
 8015f36:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015f3a:	4426      	add	r6, r4
 8015f3c:	2900      	cmp	r1, #0
 8015f3e:	d064      	beq.n	801600a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 8015f40:	1950      	adds	r0, r2, r5
 8015f42:	5d52      	ldrb	r2, [r2, r5]
 8015f44:	7840      	ldrb	r0, [r0, #1]
 8015f46:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015f4a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015f4e:	4422      	add	r2, r4
 8015f50:	4420      	add	r0, r4
 8015f52:	b29b      	uxth	r3, r3
 8015f54:	b289      	uxth	r1, r1
 8015f56:	fb03 f901 	mul.w	r9, r3, r1
 8015f5a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015f5e:	011b      	lsls	r3, r3, #4
 8015f60:	b289      	uxth	r1, r1
 8015f62:	78b7      	ldrb	r7, [r6, #2]
 8015f64:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015f68:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015f6c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015f70:	eba3 0309 	sub.w	r3, r3, r9
 8015f74:	b29b      	uxth	r3, r3
 8015f76:	ebae 0e01 	sub.w	lr, lr, r1
 8015f7a:	fa1f fe8e 	uxth.w	lr, lr
 8015f7e:	435f      	muls	r7, r3
 8015f80:	fb0e 770a 	mla	r7, lr, sl, r7
 8015f84:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015f88:	fb01 770a 	mla	r7, r1, sl, r7
 8015f8c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015f90:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015f94:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015f98:	f896 8000 	ldrb.w	r8, [r6]
 8015f9c:	7876      	ldrb	r6, [r6, #1]
 8015f9e:	fb03 f808 	mul.w	r8, r3, r8
 8015fa2:	fb0e 8807 	mla	r8, lr, r7, r8
 8015fa6:	7817      	ldrb	r7, [r2, #0]
 8015fa8:	fb01 8807 	mla	r8, r1, r7, r8
 8015fac:	7807      	ldrb	r7, [r0, #0]
 8015fae:	fb09 8707 	mla	r7, r9, r7, r8
 8015fb2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015fb6:	4373      	muls	r3, r6
 8015fb8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015fbc:	7856      	ldrb	r6, [r2, #1]
 8015fbe:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015fc0:	ea4a 0707 	orr.w	r7, sl, r7
 8015fc4:	fb0e 330c 	mla	r3, lr, ip, r3
 8015fc8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015fcc:	fb01 3306 	mla	r3, r1, r6, r3
 8015fd0:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015fd4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015fd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015fda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015fde:	ea47 070a 	orr.w	r7, r7, sl
 8015fe2:	f823 7b02 	strh.w	r7, [r3], #2
 8015fe6:	930d      	str	r3, [sp, #52]	; 0x34
 8015fe8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015fea:	4413      	add	r3, r2
 8015fec:	9325      	str	r3, [sp, #148]	; 0x94
 8015fee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015ff0:	449b      	add	fp, r3
 8015ff2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015ff4:	3b01      	subs	r3, #1
 8015ff6:	930b      	str	r3, [sp, #44]	; 0x2c
 8015ff8:	e66c      	b.n	8015cd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8015ffa:	b149      	cbz	r1, 8016010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 8015ffc:	5d52      	ldrb	r2, [r2, r5]
 8015ffe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016002:	4422      	add	r2, r4
 8016004:	4660      	mov	r0, ip
 8016006:	4666      	mov	r6, ip
 8016008:	e7a3      	b.n	8015f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 801600a:	4660      	mov	r0, ip
 801600c:	4662      	mov	r2, ip
 801600e:	e7a0      	b.n	8015f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8016010:	4660      	mov	r0, ip
 8016012:	4662      	mov	r2, ip
 8016014:	e7f7      	b.n	8016006 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8016016:	b011      	add	sp, #68	; 0x44
 8016018:	ecbd 8b0a 	vpop	{d8-d12}
 801601c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016020 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8016020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016024:	8808      	ldrh	r0, [r1, #0]
 8016026:	b085      	sub	sp, #20
 8016028:	1206      	asrs	r6, r0, #8
 801602a:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801602e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016032:	9600      	str	r6, [sp, #0]
 8016034:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016038:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801603c:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016040:	10c6      	asrs	r6, r0, #3
 8016042:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016046:	9601      	str	r6, [sp, #4]
 8016048:	00c0      	lsls	r0, r0, #3
 801604a:	fb04 560c 	mla	r6, r4, ip, r5
 801604e:	b2c0      	uxtb	r0, r0
 8016050:	4692      	mov	sl, r2
 8016052:	eb02 0e06 	add.w	lr, r2, r6
 8016056:	9a00      	ldr	r2, [sp, #0]
 8016058:	9002      	str	r0, [sp, #8]
 801605a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801605e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8016062:	9a01      	ldr	r2, [sp, #4]
 8016064:	2c00      	cmp	r4, #0
 8016066:	4698      	mov	r8, r3
 8016068:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801606c:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8016070:	db3e      	blt.n	80160f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8016072:	45a1      	cmp	r9, r4
 8016074:	dd3c      	ble.n	80160f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8016076:	2d00      	cmp	r5, #0
 8016078:	db38      	blt.n	80160ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801607a:	45ac      	cmp	ip, r5
 801607c:	dd36      	ble.n	80160ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801607e:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8016082:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8016086:	1c6e      	adds	r6, r5, #1
 8016088:	d435      	bmi.n	80160f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 801608a:	45b4      	cmp	ip, r6
 801608c:	dd33      	ble.n	80160f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 801608e:	b393      	cbz	r3, 80160f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 8016090:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8016094:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8016098:	3401      	adds	r4, #1
 801609a:	d430      	bmi.n	80160fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 801609c:	45a1      	cmp	r9, r4
 801609e:	dd2e      	ble.n	80160fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80160a0:	b36f      	cbz	r7, 80160fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80160a2:	2d00      	cmp	r5, #0
 80160a4:	db29      	blt.n	80160fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80160a6:	45ac      	cmp	ip, r5
 80160a8:	dd27      	ble.n	80160fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80160aa:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80160ae:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 80160b2:	3501      	adds	r5, #1
 80160b4:	d407      	bmi.n	80160c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80160b6:	45ac      	cmp	ip, r5
 80160b8:	dd05      	ble.n	80160c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80160ba:	b123      	cbz	r3, 80160c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80160bc:	44f4      	add	ip, lr
 80160be:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80160c2:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 80160c6:	2b0f      	cmp	r3, #15
 80160c8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80160cc:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80160d0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80160d4:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80160d8:	d801      	bhi.n	80160de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80160da:	2f0f      	cmp	r7, #15
 80160dc:	d911      	bls.n	8016102 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 80160de:	4b7f      	ldr	r3, [pc, #508]	; (80162dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 80160e0:	4a7f      	ldr	r2, [pc, #508]	; (80162e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 80160e2:	4880      	ldr	r0, [pc, #512]	; (80162e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 80160e4:	f240 3173 	movw	r1, #883	; 0x373
 80160e8:	f005 fc2c 	bl	801b944 <__assert_func>
 80160ec:	4602      	mov	r2, r0
 80160ee:	e7ca      	b.n	8016086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 80160f0:	4606      	mov	r6, r0
 80160f2:	4602      	mov	r2, r0
 80160f4:	e7d0      	b.n	8016098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 80160f6:	4606      	mov	r6, r0
 80160f8:	e7ce      	b.n	8016098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 80160fa:	4604      	mov	r4, r0
 80160fc:	e7d9      	b.n	80160b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 80160fe:	4604      	mov	r4, r0
 8016100:	e7e1      	b.n	80160c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8016102:	b29b      	uxth	r3, r3
 8016104:	b2bf      	uxth	r7, r7
 8016106:	fb03 fe07 	mul.w	lr, r3, r7
 801610a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801610e:	011b      	lsls	r3, r3, #4
 8016110:	eba3 0c0e 	sub.w	ip, r3, lr
 8016114:	b2bf      	uxth	r7, r7
 8016116:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 801611a:	fa1f fc8c 	uxth.w	ip, ip
 801611e:	1bed      	subs	r5, r5, r7
 8016120:	b2ad      	uxth	r5, r5
 8016122:	fb0c f30a 	mul.w	r3, ip, sl
 8016126:	fb05 330b 	mla	r3, r5, fp, r3
 801612a:	fb07 3309 	mla	r3, r7, r9, r3
 801612e:	fb0e 3308 	mla	r3, lr, r8, r3
 8016132:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016136:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801613a:	9303      	str	r3, [sp, #12]
 801613c:	d018      	beq.n	8016170 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 801613e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016142:	fb0b f303 	mul.w	r3, fp, r3
 8016146:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801614a:	fb0b fb02 	mul.w	fp, fp, r2
 801614e:	0a1a      	lsrs	r2, r3, #8
 8016150:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016154:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8016158:	441a      	add	r2, r3
 801615a:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801615e:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8016162:	0a12      	lsrs	r2, r2, #8
 8016164:	0a1b      	lsrs	r3, r3, #8
 8016166:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801616a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801616e:	431a      	orrs	r2, r3
 8016170:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016174:	d019      	beq.n	80161aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8016176:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801617a:	fb0a fb0b 	mul.w	fp, sl, fp
 801617e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016182:	fb0a fa06 	mul.w	sl, sl, r6
 8016186:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801618a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801618e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016192:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8016196:	445e      	add	r6, fp
 8016198:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801619c:	0a36      	lsrs	r6, r6, #8
 801619e:	0a1b      	lsrs	r3, r3, #8
 80161a0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80161a4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161a8:	431e      	orrs	r6, r3
 80161aa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80161ae:	d019      	beq.n	80161e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 80161b0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80161b4:	fb09 fa0a 	mul.w	sl, r9, sl
 80161b8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80161bc:	fb09 f904 	mul.w	r9, r9, r4
 80161c0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80161c4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80161c8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80161cc:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80161d0:	4454      	add	r4, sl
 80161d2:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80161d6:	0a24      	lsrs	r4, r4, #8
 80161d8:	0a1b      	lsrs	r3, r3, #8
 80161da:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80161de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161e2:	431c      	orrs	r4, r3
 80161e4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80161e8:	d019      	beq.n	801621e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 80161ea:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80161ee:	fb08 f909 	mul.w	r9, r8, r9
 80161f2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80161f6:	fb08 f800 	mul.w	r8, r8, r0
 80161fa:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80161fe:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016202:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016206:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801620a:	4448      	add	r0, r9
 801620c:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016210:	0a00      	lsrs	r0, r0, #8
 8016212:	0a1b      	lsrs	r3, r3, #8
 8016214:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016218:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801621c:	4318      	orrs	r0, r3
 801621e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016222:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016226:	fb0c f808 	mul.w	r8, ip, r8
 801622a:	fb05 8803 	mla	r8, r5, r3, r8
 801622e:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8016232:	fb07 8803 	mla	r8, r7, r3, r8
 8016236:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801623a:	fb0e 8303 	mla	r3, lr, r3, r8
 801623e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016242:	fb0c f606 	mul.w	r6, ip, r6
 8016246:	0a1b      	lsrs	r3, r3, #8
 8016248:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801624c:	fb05 6202 	mla	r2, r5, r2, r6
 8016250:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8016254:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8016258:	fb07 2703 	mla	r7, r7, r3, r2
 801625c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8016260:	b295      	uxth	r5, r2
 8016262:	9a03      	ldr	r2, [sp, #12]
 8016264:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8016268:	436a      	muls	r2, r5
 801626a:	fb0e 7303 	mla	r3, lr, r3, r7
 801626e:	1c50      	adds	r0, r2, #1
 8016270:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016274:	0a1b      	lsrs	r3, r3, #8
 8016276:	9a00      	ldr	r2, [sp, #0]
 8016278:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801627c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016280:	ea48 0303 	orr.w	r3, r8, r3
 8016284:	b2c0      	uxtb	r0, r0
 8016286:	fb12 f200 	smulbb	r2, r2, r0
 801628a:	0c1e      	lsrs	r6, r3, #16
 801628c:	fb06 2605 	mla	r6, r6, r5, r2
 8016290:	9a01      	ldr	r2, [sp, #4]
 8016292:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8016296:	fb12 f200 	smulbb	r2, r2, r0
 801629a:	fb04 2205 	mla	r2, r4, r5, r2
 801629e:	b294      	uxth	r4, r2
 80162a0:	9a02      	ldr	r2, [sp, #8]
 80162a2:	b2db      	uxtb	r3, r3
 80162a4:	fb12 f200 	smulbb	r2, r2, r0
 80162a8:	fb03 2205 	mla	r2, r3, r5, r2
 80162ac:	b2b6      	uxth	r6, r6
 80162ae:	b292      	uxth	r2, r2
 80162b0:	1c73      	adds	r3, r6, #1
 80162b2:	1c50      	adds	r0, r2, #1
 80162b4:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80162b8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80162bc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80162c0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80162c4:	4313      	orrs	r3, r2
 80162c6:	1c62      	adds	r2, r4, #1
 80162c8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80162cc:	0952      	lsrs	r2, r2, #5
 80162ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80162d2:	4313      	orrs	r3, r2
 80162d4:	800b      	strh	r3, [r1, #0]
 80162d6:	b005      	add	sp, #20
 80162d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80162dc:	080210bb 	.word	0x080210bb
 80162e0:	08021619 	.word	0x08021619
 80162e4:	08021143 	.word	0x08021143

080162e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80162e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162ec:	ed2d 8b08 	vpush	{d8-d11}
 80162f0:	b09b      	sub	sp, #108	; 0x6c
 80162f2:	eeb0 aa40 	vmov.f32	s20, s0
 80162f6:	9309      	str	r3, [sp, #36]	; 0x24
 80162f8:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 80162fc:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 80162fe:	9311      	str	r3, [sp, #68]	; 0x44
 8016300:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8016304:	9114      	str	r1, [sp, #80]	; 0x50
 8016306:	9317      	str	r3, [sp, #92]	; 0x5c
 8016308:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801630c:	9019      	str	r0, [sp, #100]	; 0x64
 801630e:	6868      	ldr	r0, [r5, #4]
 8016310:	9218      	str	r2, [sp, #96]	; 0x60
 8016312:	fb00 1303 	mla	r3, r0, r3, r1
 8016316:	6829      	ldr	r1, [r5, #0]
 8016318:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801631a:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 801631e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016322:	930c      	str	r3, [sp, #48]	; 0x30
 8016324:	6813      	ldr	r3, [r2, #0]
 8016326:	9313      	str	r3, [sp, #76]	; 0x4c
 8016328:	6853      	ldr	r3, [r2, #4]
 801632a:	3304      	adds	r3, #4
 801632c:	eef0 9a60 	vmov.f32	s19, s1
 8016330:	eeb0 9a41 	vmov.f32	s18, s2
 8016334:	eeb0 8a62 	vmov.f32	s16, s5
 8016338:	eef0 8a43 	vmov.f32	s17, s6
 801633c:	eef0 ba44 	vmov.f32	s23, s8
 8016340:	eeb0 ba64 	vmov.f32	s22, s9
 8016344:	eef0 aa45 	vmov.f32	s21, s10
 8016348:	9308      	str	r3, [sp, #32]
 801634a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801634c:	2b00      	cmp	r3, #0
 801634e:	dc03      	bgt.n	8016358 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8016350:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016352:	2b00      	cmp	r3, #0
 8016354:	f340 8363 	ble.w	8016a1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8016358:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801635a:	2b00      	cmp	r3, #0
 801635c:	f340 81ad 	ble.w	80166ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8016360:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016362:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016364:	1412      	asrs	r2, r2, #16
 8016366:	ea4f 4323 	mov.w	r3, r3, asr #16
 801636a:	d42f      	bmi.n	80163cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801636c:	1c51      	adds	r1, r2, #1
 801636e:	428c      	cmp	r4, r1
 8016370:	dd2f      	ble.n	80163d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8016372:	2b00      	cmp	r3, #0
 8016374:	db2d      	blt.n	80163d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8016376:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016378:	1c59      	adds	r1, r3, #1
 801637a:	4288      	cmp	r0, r1
 801637c:	dd29      	ble.n	80163d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801637e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016380:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8016382:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8016384:	3b01      	subs	r3, #1
 8016386:	fb02 1203 	mla	r2, r2, r3, r1
 801638a:	1412      	asrs	r2, r2, #16
 801638c:	d42b      	bmi.n	80163e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801638e:	3201      	adds	r2, #1
 8016390:	4294      	cmp	r4, r2
 8016392:	dd28      	ble.n	80163e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8016394:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8016396:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8016398:	fb02 1303 	mla	r3, r2, r3, r1
 801639c:	141b      	asrs	r3, r3, #16
 801639e:	d422      	bmi.n	80163e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80163a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80163a2:	3301      	adds	r3, #1
 80163a4:	429a      	cmp	r2, r3
 80163a6:	dd1e      	ble.n	80163e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80163a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80163aa:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80163ae:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 80163b2:	9312      	str	r3, [sp, #72]	; 0x48
 80163b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80163b6:	2b00      	cmp	r3, #0
 80163b8:	f300 81ea 	bgt.w	8016790 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 80163bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80163be:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80163c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80163c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80163c8:	930c      	str	r3, [sp, #48]	; 0x30
 80163ca:	e178      	b.n	80166be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 80163cc:	1c51      	adds	r1, r2, #1
 80163ce:	f040 8165 	bne.w	801669c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80163d2:	42a2      	cmp	r2, r4
 80163d4:	f280 8162 	bge.w	801669c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80163d8:	1c5f      	adds	r7, r3, #1
 80163da:	f2c0 815f 	blt.w	801669c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80163de:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80163e0:	4293      	cmp	r3, r2
 80163e2:	f280 815b 	bge.w	801669c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80163e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80163e8:	9316      	str	r3, [sp, #88]	; 0x58
 80163ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80163ec:	9312      	str	r3, [sp, #72]	; 0x48
 80163ee:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 80163f2:	9315      	str	r3, [sp, #84]	; 0x54
 80163f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80163f6:	2b00      	cmp	r3, #0
 80163f8:	dde0      	ble.n	80163bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80163fa:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80163fc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80163fe:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8016402:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016404:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016408:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801640a:	1412      	asrs	r2, r2, #16
 801640c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016410:	f100 81a5 	bmi.w	801675e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8016414:	1c55      	adds	r5, r2, #1
 8016416:	42ac      	cmp	r4, r5
 8016418:	f340 81a3 	ble.w	8016762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801641c:	2b00      	cmp	r3, #0
 801641e:	f2c0 81a0 	blt.w	8016762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8016422:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8016424:	1c5d      	adds	r5, r3, #1
 8016426:	42af      	cmp	r7, r5
 8016428:	f340 819b 	ble.w	8016762 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801642c:	fb03 2304 	mla	r3, r3, r4, r2
 8016430:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016432:	18d5      	adds	r5, r2, r3
 8016434:	5cd3      	ldrb	r3, [r2, r3]
 8016436:	9a08      	ldr	r2, [sp, #32]
 8016438:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801643c:	0e1f      	lsrs	r7, r3, #24
 801643e:	2800      	cmp	r0, #0
 8016440:	f000 817c 	beq.w	801673c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8016444:	786a      	ldrb	r2, [r5, #1]
 8016446:	9e08      	ldr	r6, [sp, #32]
 8016448:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 801644c:	920d      	str	r2, [sp, #52]	; 0x34
 801644e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8016452:	2900      	cmp	r1, #0
 8016454:	f000 817d 	beq.w	8016752 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8016458:	192a      	adds	r2, r5, r4
 801645a:	5d2d      	ldrb	r5, [r5, r4]
 801645c:	7852      	ldrb	r2, [r2, #1]
 801645e:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8016462:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8016466:	950a      	str	r5, [sp, #40]	; 0x28
 8016468:	ea4f 6915 	mov.w	r9, r5, lsr #24
 801646c:	920e      	str	r2, [sp, #56]	; 0x38
 801646e:	0e15      	lsrs	r5, r2, #24
 8016470:	b280      	uxth	r0, r0
 8016472:	b289      	uxth	r1, r1
 8016474:	fb00 fa01 	mul.w	sl, r0, r1
 8016478:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 801647c:	0100      	lsls	r0, r0, #4
 801647e:	eba0 080a 	sub.w	r8, r0, sl
 8016482:	b289      	uxth	r1, r1
 8016484:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8016488:	fa1f f888 	uxth.w	r8, r8
 801648c:	1a52      	subs	r2, r2, r1
 801648e:	b292      	uxth	r2, r2
 8016490:	fb08 f00e 	mul.w	r0, r8, lr
 8016494:	fb02 0007 	mla	r0, r2, r7, r0
 8016498:	fb01 0009 	mla	r0, r1, r9, r0
 801649c:	fb0a 0005 	mla	r0, sl, r5, r0
 80164a0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80164a4:	2800      	cmp	r0, #0
 80164a6:	f000 80ea 	beq.w	801667e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80164aa:	2fff      	cmp	r7, #255	; 0xff
 80164ac:	d01a      	beq.n	80164e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 80164ae:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80164b2:	fb07 fc0c 	mul.w	ip, r7, ip
 80164b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80164ba:	435f      	muls	r7, r3
 80164bc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80164c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80164c4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80164c8:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 80164cc:	4463      	add	r3, ip
 80164ce:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 80164d2:	0a1b      	lsrs	r3, r3, #8
 80164d4:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80164d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80164dc:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80164e0:	ea43 030b 	orr.w	r3, r3, fp
 80164e4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80164e8:	d01e      	beq.n	8016528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 80164ea:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80164ec:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80164f0:	fb0e fb0b 	mul.w	fp, lr, fp
 80164f4:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80164f8:	fb0e fe07 	mul.w	lr, lr, r7
 80164fc:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8016500:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016504:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016508:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801650c:	44dc      	add	ip, fp
 801650e:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8016512:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016516:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801651a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801651e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016522:	ea4c 060e 	orr.w	r6, ip, lr
 8016526:	960d      	str	r6, [sp, #52]	; 0x34
 8016528:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801652c:	d01e      	beq.n	801656c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801652e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8016530:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8016534:	fb09 fe0e 	mul.w	lr, r9, lr
 8016538:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801653c:	fb09 f907 	mul.w	r9, r9, r7
 8016540:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016544:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016548:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801654c:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8016550:	44f4      	add	ip, lr
 8016552:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8016556:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801655a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801655e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016562:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016566:	ea4c 0609 	orr.w	r6, ip, r9
 801656a:	960a      	str	r6, [sp, #40]	; 0x28
 801656c:	2dff      	cmp	r5, #255	; 0xff
 801656e:	d01c      	beq.n	80165aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8016570:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8016572:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8016576:	fb05 fe0e 	mul.w	lr, r5, lr
 801657a:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801657e:	437d      	muls	r5, r7
 8016580:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016584:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016588:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801658c:	f505 7780 	add.w	r7, r5, #256	; 0x100
 8016590:	44f4      	add	ip, lr
 8016592:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8016596:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801659a:	0a2d      	lsrs	r5, r5, #8
 801659c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80165a0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80165a4:	ea4c 0505 	orr.w	r5, ip, r5
 80165a8:	950e      	str	r5, [sp, #56]	; 0x38
 80165aa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80165ac:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80165ae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80165b2:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80165b6:	fb08 f505 	mul.w	r5, r8, r5
 80165ba:	fb02 5507 	mla	r5, r2, r7, r5
 80165be:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 80165c2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80165c4:	fb01 5507 	mla	r5, r1, r7, r5
 80165c8:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 80165cc:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80165ce:	fb0a 5507 	mla	r5, sl, r7, r5
 80165d2:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80165d6:	fb08 f807 	mul.w	r8, r8, r7
 80165da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80165de:	fb02 8303 	mla	r3, r2, r3, r8
 80165e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80165e4:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80165e6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80165ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80165ec:	fb01 330c 	mla	r3, r1, ip, r3
 80165f0:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80165f4:	fb0a 3a01 	mla	sl, sl, r1, r3
 80165f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80165fa:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80165fc:	881f      	ldrh	r7, [r3, #0]
 80165fe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016600:	0a2d      	lsrs	r5, r5, #8
 8016602:	4343      	muls	r3, r0
 8016604:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016608:	1c58      	adds	r0, r3, #1
 801660a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801660e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016612:	ea45 050a 	orr.w	r5, r5, sl
 8016616:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801661a:	0c29      	lsrs	r1, r5, #16
 801661c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016620:	123b      	asrs	r3, r7, #8
 8016622:	b2c0      	uxtb	r0, r0
 8016624:	fb11 f102 	smulbb	r1, r1, r2
 8016628:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801662c:	fb03 1300 	mla	r3, r3, r0, r1
 8016630:	b299      	uxth	r1, r3
 8016632:	10fa      	asrs	r2, r7, #3
 8016634:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8016638:	fb13 f306 	smulbb	r3, r3, r6
 801663c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016640:	fb02 3200 	mla	r2, r2, r0, r3
 8016644:	b2ed      	uxtb	r5, r5
 8016646:	00fb      	lsls	r3, r7, #3
 8016648:	b2db      	uxtb	r3, r3
 801664a:	fb15 f506 	smulbb	r5, r5, r6
 801664e:	fb03 5500 	mla	r5, r3, r0, r5
 8016652:	b292      	uxth	r2, r2
 8016654:	b2ad      	uxth	r5, r5
 8016656:	1c4b      	adds	r3, r1, #1
 8016658:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801665c:	1c68      	adds	r0, r5, #1
 801665e:	1c51      	adds	r1, r2, #1
 8016660:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8016664:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016668:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801666c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016670:	0952      	lsrs	r2, r2, #5
 8016672:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016676:	432b      	orrs	r3, r5
 8016678:	4313      	orrs	r3, r2
 801667a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801667c:	8013      	strh	r3, [r2, #0]
 801667e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016680:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8016682:	3302      	adds	r3, #2
 8016684:	9312      	str	r3, [sp, #72]	; 0x48
 8016686:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016688:	4413      	add	r3, r2
 801668a:	932d      	str	r3, [sp, #180]	; 0xb4
 801668c:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801668e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016690:	4413      	add	r3, r2
 8016692:	932e      	str	r3, [sp, #184]	; 0xb8
 8016694:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016696:	3b01      	subs	r3, #1
 8016698:	9316      	str	r3, [sp, #88]	; 0x58
 801669a:	e6ab      	b.n	80163f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 801669c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801669e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80166a0:	4413      	add	r3, r2
 80166a2:	932d      	str	r3, [sp, #180]	; 0xb4
 80166a4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80166a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80166a8:	4413      	add	r3, r2
 80166aa:	932e      	str	r3, [sp, #184]	; 0xb8
 80166ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80166ae:	3b01      	subs	r3, #1
 80166b0:	9309      	str	r3, [sp, #36]	; 0x24
 80166b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80166b4:	3302      	adds	r3, #2
 80166b6:	930c      	str	r3, [sp, #48]	; 0x30
 80166b8:	e64e      	b.n	8016358 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80166ba:	f47f ae60 	bne.w	801637e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80166be:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80166c0:	2b00      	cmp	r3, #0
 80166c2:	f340 81ac 	ble.w	8016a1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 80166c6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80166ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80166ce:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80166d2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80166d4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80166d8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80166dc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80166e0:	eef0 6a48 	vmov.f32	s13, s16
 80166e4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80166e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80166ec:	ee37 8a48 	vsub.f32	s16, s14, s16
 80166f0:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80166f4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80166f8:	eef0 6a68 	vmov.f32	s13, s17
 80166fc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016700:	ee18 2a10 	vmov	r2, s16
 8016704:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016708:	fb92 f3f3 	sdiv	r3, r2, r3
 801670c:	ee18 2a90 	vmov	r2, s17
 8016710:	932f      	str	r3, [sp, #188]	; 0xbc
 8016712:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016714:	fb92 f3f3 	sdiv	r3, r2, r3
 8016718:	9330      	str	r3, [sp, #192]	; 0xc0
 801671a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801671c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801671e:	3b01      	subs	r3, #1
 8016720:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016724:	9314      	str	r3, [sp, #80]	; 0x50
 8016726:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016728:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 801672c:	bf08      	it	eq
 801672e:	4613      	moveq	r3, r2
 8016730:	9309      	str	r3, [sp, #36]	; 0x24
 8016732:	eef0 8a67 	vmov.f32	s17, s15
 8016736:	eeb0 8a47 	vmov.f32	s16, s14
 801673a:	e606      	b.n	801634a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801673c:	b161      	cbz	r1, 8016758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801673e:	5d2a      	ldrb	r2, [r5, r4]
 8016740:	9d08      	ldr	r5, [sp, #32]
 8016742:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016746:	920a      	str	r2, [sp, #40]	; 0x28
 8016748:	ea4f 6912 	mov.w	r9, r2, lsr #24
 801674c:	25ff      	movs	r5, #255	; 0xff
 801674e:	46ae      	mov	lr, r5
 8016750:	e68e      	b.n	8016470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8016752:	25ff      	movs	r5, #255	; 0xff
 8016754:	46a9      	mov	r9, r5
 8016756:	e68b      	b.n	8016470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8016758:	25ff      	movs	r5, #255	; 0xff
 801675a:	46a9      	mov	r9, r5
 801675c:	e7f7      	b.n	801674e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801675e:	1c56      	adds	r6, r2, #1
 8016760:	d18d      	bne.n	801667e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8016762:	4294      	cmp	r4, r2
 8016764:	dd8b      	ble.n	801667e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8016766:	1c5d      	adds	r5, r3, #1
 8016768:	db89      	blt.n	801667e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801676a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801676c:	429d      	cmp	r5, r3
 801676e:	dd86      	ble.n	801667e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8016770:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8016774:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8016776:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016778:	9202      	str	r2, [sp, #8]
 801677a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801677e:	e9cd 4300 	strd	r4, r3, [sp]
 8016782:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 8016786:	9b08      	ldr	r3, [sp, #32]
 8016788:	9819      	ldr	r0, [sp, #100]	; 0x64
 801678a:	f7ff fc49 	bl	8016020 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801678e:	e776      	b.n	801667e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8016790:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016792:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016794:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8016798:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801679a:	1412      	asrs	r2, r2, #16
 801679c:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80167a0:	141b      	asrs	r3, r3, #16
 80167a2:	fb04 2303 	mla	r3, r4, r3, r2
 80167a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167a8:	18d5      	adds	r5, r2, r3
 80167aa:	5cd3      	ldrb	r3, [r2, r3]
 80167ac:	9a08      	ldr	r2, [sp, #32]
 80167ae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80167b2:	0e1e      	lsrs	r6, r3, #24
 80167b4:	2900      	cmp	r1, #0
 80167b6:	f000 8121 	beq.w	80169fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80167ba:	786a      	ldrb	r2, [r5, #1]
 80167bc:	9f08      	ldr	r7, [sp, #32]
 80167be:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80167c2:	920f      	str	r2, [sp, #60]	; 0x3c
 80167c4:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 80167c8:	2800      	cmp	r0, #0
 80167ca:	f000 8122 	beq.w	8016a12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 80167ce:	192a      	adds	r2, r5, r4
 80167d0:	5d2d      	ldrb	r5, [r5, r4]
 80167d2:	7852      	ldrb	r2, [r2, #1]
 80167d4:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 80167d8:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80167dc:	950b      	str	r5, [sp, #44]	; 0x2c
 80167de:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80167e2:	9210      	str	r2, [sp, #64]	; 0x40
 80167e4:	0e15      	lsrs	r5, r2, #24
 80167e6:	b289      	uxth	r1, r1
 80167e8:	b280      	uxth	r0, r0
 80167ea:	fb01 f900 	mul.w	r9, r1, r0
 80167ee:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80167f2:	0109      	lsls	r1, r1, #4
 80167f4:	eba1 0e09 	sub.w	lr, r1, r9
 80167f8:	b280      	uxth	r0, r0
 80167fa:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80167fe:	fa1f fe8e 	uxth.w	lr, lr
 8016802:	1a12      	subs	r2, r2, r0
 8016804:	b292      	uxth	r2, r2
 8016806:	fb0e f10c 	mul.w	r1, lr, ip
 801680a:	fb02 1106 	mla	r1, r2, r6, r1
 801680e:	fb00 1108 	mla	r1, r0, r8, r1
 8016812:	fb09 1105 	mla	r1, r9, r5, r1
 8016816:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801681a:	2900      	cmp	r1, #0
 801681c:	f000 80e0 	beq.w	80169e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 8016820:	2eff      	cmp	r6, #255	; 0xff
 8016822:	d016      	beq.n	8016852 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 8016824:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016828:	4377      	muls	r7, r6
 801682a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801682e:	435e      	muls	r6, r3
 8016830:	0a3b      	lsrs	r3, r7, #8
 8016832:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016836:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801683a:	443b      	add	r3, r7
 801683c:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8016840:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8016844:	0a1b      	lsrs	r3, r3, #8
 8016846:	0a3f      	lsrs	r7, r7, #8
 8016848:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801684c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016850:	433b      	orrs	r3, r7
 8016852:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016856:	d01d      	beq.n	8016894 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 8016858:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801685a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801685c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016860:	fb0c f606 	mul.w	r6, ip, r6
 8016864:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016868:	fb0c fc07 	mul.w	ip, ip, r7
 801686c:	0a37      	lsrs	r7, r6, #8
 801686e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016872:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8016876:	4437      	add	r7, r6
 8016878:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 801687c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8016880:	0a3f      	lsrs	r7, r7, #8
 8016882:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016886:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801688a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801688e:	ea47 060c 	orr.w	r6, r7, ip
 8016892:	960f      	str	r6, [sp, #60]	; 0x3c
 8016894:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016898:	d01d      	beq.n	80168d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 801689a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801689c:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80168a0:	fb08 fc0c 	mul.w	ip, r8, ip
 80168a4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80168a8:	fb08 f806 	mul.w	r8, r8, r6
 80168ac:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80168b0:	f508 7680 	add.w	r6, r8, #256	; 0x100
 80168b4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80168b8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80168bc:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 80168c0:	4467      	add	r7, ip
 80168c2:	0a3f      	lsrs	r7, r7, #8
 80168c4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80168c8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80168cc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80168d0:	ea47 0608 	orr.w	r6, r7, r8
 80168d4:	960b      	str	r6, [sp, #44]	; 0x2c
 80168d6:	2dff      	cmp	r5, #255	; 0xff
 80168d8:	d01a      	beq.n	8016910 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 80168da:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80168dc:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80168e0:	fb05 fc0c 	mul.w	ip, r5, ip
 80168e4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80168e8:	4375      	muls	r5, r6
 80168ea:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80168ee:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80168f2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80168f6:	f505 7680 	add.w	r6, r5, #256	; 0x100
 80168fa:	4467      	add	r7, ip
 80168fc:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8016900:	0a3f      	lsrs	r7, r7, #8
 8016902:	0a2d      	lsrs	r5, r5, #8
 8016904:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016908:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801690c:	433d      	orrs	r5, r7
 801690e:	9510      	str	r5, [sp, #64]	; 0x40
 8016910:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8016912:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016916:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 801691a:	fb0e f505 	mul.w	r5, lr, r5
 801691e:	fb02 5506 	mla	r5, r2, r6, r5
 8016922:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016924:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016928:	fb00 5506 	mla	r5, r0, r6, r5
 801692c:	9e10      	ldr	r6, [sp, #64]	; 0x40
 801692e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016932:	fb09 5506 	mla	r5, r9, r6, r5
 8016936:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016938:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801693c:	fb0e fe06 	mul.w	lr, lr, r6
 8016940:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016944:	fb02 e303 	mla	r3, r2, r3, lr
 8016948:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801694a:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801694e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016950:	fb00 3307 	mla	r3, r0, r7, r3
 8016954:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016958:	fb09 3c0c 	mla	ip, r9, ip, r3
 801695c:	fb01 f10b 	mul.w	r1, r1, fp
 8016960:	0a2d      	lsrs	r5, r5, #8
 8016962:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016966:	f8ba 0000 	ldrh.w	r0, [sl]
 801696a:	1c4b      	adds	r3, r1, #1
 801696c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016970:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016974:	ea45 050c 	orr.w	r5, r5, ip
 8016978:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801697c:	1202      	asrs	r2, r0, #8
 801697e:	0c2b      	lsrs	r3, r5, #16
 8016980:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8016984:	b2c9      	uxtb	r1, r1
 8016986:	fb13 f30b 	smulbb	r3, r3, fp
 801698a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801698e:	fb02 3201 	mla	r2, r2, r1, r3
 8016992:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8016996:	10c3      	asrs	r3, r0, #3
 8016998:	b2ed      	uxtb	r5, r5
 801699a:	00c0      	lsls	r0, r0, #3
 801699c:	b2c0      	uxtb	r0, r0
 801699e:	fb15 f50b 	smulbb	r5, r5, fp
 80169a2:	fb00 5001 	mla	r0, r0, r1, r5
 80169a6:	b292      	uxth	r2, r2
 80169a8:	fb16 f60b 	smulbb	r6, r6, fp
 80169ac:	b280      	uxth	r0, r0
 80169ae:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80169b2:	fb03 6301 	mla	r3, r3, r1, r6
 80169b6:	1c51      	adds	r1, r2, #1
 80169b8:	1c46      	adds	r6, r0, #1
 80169ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80169be:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80169c2:	b29b      	uxth	r3, r3
 80169c4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80169c8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80169cc:	4332      	orrs	r2, r6
 80169ce:	1c5e      	adds	r6, r3, #1
 80169d0:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80169d4:	095b      	lsrs	r3, r3, #5
 80169d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80169da:	431a      	orrs	r2, r3
 80169dc:	f8aa 2000 	strh.w	r2, [sl]
 80169e0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80169e2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80169e4:	4413      	add	r3, r2
 80169e6:	932d      	str	r3, [sp, #180]	; 0xb4
 80169e8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80169ea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80169ec:	4413      	add	r3, r2
 80169ee:	932e      	str	r3, [sp, #184]	; 0xb8
 80169f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80169f2:	3b01      	subs	r3, #1
 80169f4:	f10a 0a02 	add.w	sl, sl, #2
 80169f8:	9312      	str	r3, [sp, #72]	; 0x48
 80169fa:	e4db      	b.n	80163b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80169fc:	b160      	cbz	r0, 8016a18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80169fe:	5d2a      	ldrb	r2, [r5, r4]
 8016a00:	9d08      	ldr	r5, [sp, #32]
 8016a02:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016a06:	920b      	str	r2, [sp, #44]	; 0x2c
 8016a08:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016a0c:	25ff      	movs	r5, #255	; 0xff
 8016a0e:	46ac      	mov	ip, r5
 8016a10:	e6e9      	b.n	80167e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8016a12:	25ff      	movs	r5, #255	; 0xff
 8016a14:	46a8      	mov	r8, r5
 8016a16:	e6e6      	b.n	80167e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8016a18:	25ff      	movs	r5, #255	; 0xff
 8016a1a:	46a8      	mov	r8, r5
 8016a1c:	e7f7      	b.n	8016a0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 8016a1e:	b01b      	add	sp, #108	; 0x6c
 8016a20:	ecbd 8b08 	vpop	{d8-d11}
 8016a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a2c:	8808      	ldrh	r0, [r1, #0]
 8016a2e:	b085      	sub	sp, #20
 8016a30:	1206      	asrs	r6, r0, #8
 8016a32:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016a36:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016a3a:	9600      	str	r6, [sp, #0]
 8016a3c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016a40:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8016a44:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016a48:	10c6      	asrs	r6, r0, #3
 8016a4a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a4e:	9601      	str	r6, [sp, #4]
 8016a50:	00c0      	lsls	r0, r0, #3
 8016a52:	fb04 560c 	mla	r6, r4, ip, r5
 8016a56:	b2c0      	uxtb	r0, r0
 8016a58:	4692      	mov	sl, r2
 8016a5a:	eb02 0e06 	add.w	lr, r2, r6
 8016a5e:	9a00      	ldr	r2, [sp, #0]
 8016a60:	9002      	str	r0, [sp, #8]
 8016a62:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8016a66:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8016a6a:	9a01      	ldr	r2, [sp, #4]
 8016a6c:	2c00      	cmp	r4, #0
 8016a6e:	4698      	mov	r8, r3
 8016a70:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8016a74:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8016a78:	db3e      	blt.n	8016af8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8016a7a:	45a1      	cmp	r9, r4
 8016a7c:	dd3c      	ble.n	8016af8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8016a7e:	2d00      	cmp	r5, #0
 8016a80:	db38      	blt.n	8016af4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8016a82:	45ac      	cmp	ip, r5
 8016a84:	dd36      	ble.n	8016af4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8016a86:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8016a8a:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8016a8e:	1c6e      	adds	r6, r5, #1
 8016a90:	d435      	bmi.n	8016afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016a92:	45b4      	cmp	ip, r6
 8016a94:	dd33      	ble.n	8016afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016a96:	b393      	cbz	r3, 8016afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016a98:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8016a9c:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8016aa0:	3401      	adds	r4, #1
 8016aa2:	d430      	bmi.n	8016b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8016aa4:	45a1      	cmp	r9, r4
 8016aa6:	dd2e      	ble.n	8016b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8016aa8:	b36f      	cbz	r7, 8016b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8016aaa:	2d00      	cmp	r5, #0
 8016aac:	db29      	blt.n	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8016aae:	45ac      	cmp	ip, r5
 8016ab0:	dd27      	ble.n	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8016ab2:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8016ab6:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8016aba:	3501      	adds	r5, #1
 8016abc:	d407      	bmi.n	8016ace <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016abe:	45ac      	cmp	ip, r5
 8016ac0:	dd05      	ble.n	8016ace <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016ac2:	b123      	cbz	r3, 8016ace <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016ac4:	44f4      	add	ip, lr
 8016ac6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8016aca:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8016ace:	2b0f      	cmp	r3, #15
 8016ad0:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016ad4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016ad8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016adc:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8016ae0:	d801      	bhi.n	8016ae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8016ae2:	2f0f      	cmp	r7, #15
 8016ae4:	d911      	bls.n	8016b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016ae6:	4b79      	ldr	r3, [pc, #484]	; (8016ccc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8016ae8:	4a79      	ldr	r2, [pc, #484]	; (8016cd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016aea:	487a      	ldr	r0, [pc, #488]	; (8016cd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016aec:	f240 3173 	movw	r1, #883	; 0x373
 8016af0:	f004 ff28 	bl	801b944 <__assert_func>
 8016af4:	4602      	mov	r2, r0
 8016af6:	e7ca      	b.n	8016a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8016af8:	4606      	mov	r6, r0
 8016afa:	4602      	mov	r2, r0
 8016afc:	e7d0      	b.n	8016aa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8016afe:	4606      	mov	r6, r0
 8016b00:	e7ce      	b.n	8016aa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8016b02:	4604      	mov	r4, r0
 8016b04:	e7d9      	b.n	8016aba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8016b06:	4604      	mov	r4, r0
 8016b08:	e7e1      	b.n	8016ace <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016b0a:	b29b      	uxth	r3, r3
 8016b0c:	b2bf      	uxth	r7, r7
 8016b0e:	fb03 fe07 	mul.w	lr, r3, r7
 8016b12:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016b16:	011b      	lsls	r3, r3, #4
 8016b18:	eba3 0c0e 	sub.w	ip, r3, lr
 8016b1c:	b2bf      	uxth	r7, r7
 8016b1e:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8016b22:	fa1f fc8c 	uxth.w	ip, ip
 8016b26:	1bed      	subs	r5, r5, r7
 8016b28:	b2ad      	uxth	r5, r5
 8016b2a:	fb0c f30a 	mul.w	r3, ip, sl
 8016b2e:	fb05 330b 	mla	r3, r5, fp, r3
 8016b32:	fb07 3309 	mla	r3, r7, r9, r3
 8016b36:	fb0e 3308 	mla	r3, lr, r8, r3
 8016b3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016b3e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016b42:	9303      	str	r3, [sp, #12]
 8016b44:	d018      	beq.n	8016b78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8016b46:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016b4a:	fb0b f303 	mul.w	r3, fp, r3
 8016b4e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016b52:	fb0b fb02 	mul.w	fp, fp, r2
 8016b56:	0a1a      	lsrs	r2, r3, #8
 8016b58:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016b5c:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8016b60:	441a      	add	r2, r3
 8016b62:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8016b66:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8016b6a:	0a12      	lsrs	r2, r2, #8
 8016b6c:	0a1b      	lsrs	r3, r3, #8
 8016b6e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016b72:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016b76:	431a      	orrs	r2, r3
 8016b78:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016b7c:	d019      	beq.n	8016bb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 8016b7e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016b82:	fb0a fb0b 	mul.w	fp, sl, fp
 8016b86:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016b8a:	fb0a fa06 	mul.w	sl, sl, r6
 8016b8e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016b92:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016b96:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016b9a:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8016b9e:	445e      	add	r6, fp
 8016ba0:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016ba4:	0a36      	lsrs	r6, r6, #8
 8016ba6:	0a1b      	lsrs	r3, r3, #8
 8016ba8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016bac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016bb0:	431e      	orrs	r6, r3
 8016bb2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016bb6:	d019      	beq.n	8016bec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8016bb8:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016bbc:	fb09 fa0a 	mul.w	sl, r9, sl
 8016bc0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016bc4:	fb09 f904 	mul.w	r9, r9, r4
 8016bc8:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016bcc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016bd0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016bd4:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8016bd8:	4454      	add	r4, sl
 8016bda:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8016bde:	0a24      	lsrs	r4, r4, #8
 8016be0:	0a1b      	lsrs	r3, r3, #8
 8016be2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016be6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016bea:	431c      	orrs	r4, r3
 8016bec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016bf0:	d019      	beq.n	8016c26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 8016bf2:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8016bf6:	fb08 f909 	mul.w	r9, r8, r9
 8016bfa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016bfe:	fb08 f800 	mul.w	r8, r8, r0
 8016c02:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8016c06:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016c0a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016c0e:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8016c12:	4448      	add	r0, r9
 8016c14:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016c18:	0a00      	lsrs	r0, r0, #8
 8016c1a:	0a1b      	lsrs	r3, r3, #8
 8016c1c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016c20:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c24:	4318      	orrs	r0, r3
 8016c26:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016c2a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016c2e:	fb0c f808 	mul.w	r8, ip, r8
 8016c32:	fb05 8803 	mla	r8, r5, r3, r8
 8016c36:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8016c3a:	fb07 8803 	mla	r8, r7, r3, r8
 8016c3e:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8016c42:	fb0e 8303 	mla	r3, lr, r3, r8
 8016c46:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016c4a:	0a1b      	lsrs	r3, r3, #8
 8016c4c:	fb0c f606 	mul.w	r6, ip, r6
 8016c50:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016c54:	fb05 6202 	mla	r2, r5, r2, r6
 8016c58:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8016c5c:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8016c60:	fb07 2703 	mla	r7, r7, r3, r2
 8016c64:	9a03      	ldr	r2, [sp, #12]
 8016c66:	9c02      	ldr	r4, [sp, #8]
 8016c68:	9d01      	ldr	r5, [sp, #4]
 8016c6a:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8016c6e:	fb0e 7303 	mla	r3, lr, r3, r7
 8016c72:	43d0      	mvns	r0, r2
 8016c74:	9a00      	ldr	r2, [sp, #0]
 8016c76:	b2c0      	uxtb	r0, r0
 8016c78:	0a1b      	lsrs	r3, r3, #8
 8016c7a:	4342      	muls	r2, r0
 8016c7c:	4344      	muls	r4, r0
 8016c7e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c82:	ea48 0303 	orr.w	r3, r8, r3
 8016c86:	4345      	muls	r5, r0
 8016c88:	4620      	mov	r0, r4
 8016c8a:	1c54      	adds	r4, r2, #1
 8016c8c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8016c90:	0c1a      	lsrs	r2, r3, #16
 8016c92:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016c96:	4a10      	ldr	r2, [pc, #64]	; (8016cd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016c98:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8016c9c:	1c44      	adds	r4, r0, #1
 8016c9e:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8016ca2:	b2d8      	uxtb	r0, r3
 8016ca4:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8016ca8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8016cac:	1c68      	adds	r0, r5, #1
 8016cae:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 8016cb2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016cb6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016cba:	00db      	lsls	r3, r3, #3
 8016cbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016cc0:	4313      	orrs	r3, r2
 8016cc2:	800b      	strh	r3, [r1, #0]
 8016cc4:	b005      	add	sp, #20
 8016cc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016cca:	bf00      	nop
 8016ccc:	080210bb 	.word	0x080210bb
 8016cd0:	08021619 	.word	0x08021619
 8016cd4:	08021143 	.word	0x08021143
 8016cd8:	fffff800 	.word	0xfffff800

08016cdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ce0:	ed2d 8b08 	vpush	{d8-d11}
 8016ce4:	b097      	sub	sp, #92	; 0x5c
 8016ce6:	eeb0 aa40 	vmov.f32	s20, s0
 8016cea:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8016cec:	9307      	str	r3, [sp, #28]
 8016cee:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8016cf2:	9112      	str	r1, [sp, #72]	; 0x48
 8016cf4:	930f      	str	r3, [sp, #60]	; 0x3c
 8016cf6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8016cfa:	9015      	str	r0, [sp, #84]	; 0x54
 8016cfc:	6868      	ldr	r0, [r5, #4]
 8016cfe:	9214      	str	r2, [sp, #80]	; 0x50
 8016d00:	fb00 1303 	mla	r3, r0, r3, r1
 8016d04:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8016d06:	6829      	ldr	r1, [r5, #0]
 8016d08:	6855      	ldr	r5, [r2, #4]
 8016d0a:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8016d0e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016d12:	930a      	str	r3, [sp, #40]	; 0x28
 8016d14:	6813      	ldr	r3, [r2, #0]
 8016d16:	9311      	str	r3, [sp, #68]	; 0x44
 8016d18:	eef0 9a60 	vmov.f32	s19, s1
 8016d1c:	eeb0 9a41 	vmov.f32	s18, s2
 8016d20:	eeb0 8a62 	vmov.f32	s16, s5
 8016d24:	eef0 8a43 	vmov.f32	s17, s6
 8016d28:	eef0 ba44 	vmov.f32	s23, s8
 8016d2c:	eeb0 ba64 	vmov.f32	s22, s9
 8016d30:	eef0 aa45 	vmov.f32	s21, s10
 8016d34:	3504      	adds	r5, #4
 8016d36:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016d38:	2b00      	cmp	r3, #0
 8016d3a:	dc03      	bgt.n	8016d44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8016d3c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016d3e:	2b00      	cmp	r3, #0
 8016d40:	f340 834d 	ble.w	80173de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8016d44:	9b07      	ldr	r3, [sp, #28]
 8016d46:	2b00      	cmp	r3, #0
 8016d48:	f340 819c 	ble.w	8017084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8016d4c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016d4e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016d50:	1412      	asrs	r2, r2, #16
 8016d52:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016d56:	d42d      	bmi.n	8016db4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8016d58:	1c51      	adds	r1, r2, #1
 8016d5a:	428c      	cmp	r4, r1
 8016d5c:	dd2d      	ble.n	8016dba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8016d5e:	2b00      	cmp	r3, #0
 8016d60:	db2b      	blt.n	8016dba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8016d62:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016d64:	1c59      	adds	r1, r3, #1
 8016d66:	4288      	cmp	r0, r1
 8016d68:	dd27      	ble.n	8016dba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8016d6a:	9b07      	ldr	r3, [sp, #28]
 8016d6c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016d6e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016d70:	3b01      	subs	r3, #1
 8016d72:	fb02 1203 	mla	r2, r2, r3, r1
 8016d76:	1412      	asrs	r2, r2, #16
 8016d78:	d429      	bmi.n	8016dce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016d7a:	3201      	adds	r2, #1
 8016d7c:	4294      	cmp	r4, r2
 8016d7e:	dd26      	ble.n	8016dce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016d80:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016d82:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8016d84:	fb02 1303 	mla	r3, r2, r3, r1
 8016d88:	141b      	asrs	r3, r3, #16
 8016d8a:	d420      	bmi.n	8016dce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016d8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016d8e:	3301      	adds	r3, #1
 8016d90:	429a      	cmp	r2, r3
 8016d92:	dd1c      	ble.n	8016dce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016d94:	9b07      	ldr	r3, [sp, #28]
 8016d96:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8016d9a:	9310      	str	r3, [sp, #64]	; 0x40
 8016d9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d9e:	2b00      	cmp	r3, #0
 8016da0:	f300 81da 	bgt.w	8017158 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8016da4:	9b07      	ldr	r3, [sp, #28]
 8016da6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016da8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016dac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016db0:	930a      	str	r3, [sp, #40]	; 0x28
 8016db2:	e169      	b.n	8017088 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8016db4:	1c51      	adds	r1, r2, #1
 8016db6:	f040 8156 	bne.w	8017066 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016dba:	42a2      	cmp	r2, r4
 8016dbc:	f280 8153 	bge.w	8017066 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016dc0:	1c5a      	adds	r2, r3, #1
 8016dc2:	f2c0 8150 	blt.w	8017066 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016dc6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016dc8:	4293      	cmp	r3, r2
 8016dca:	f280 814c 	bge.w	8017066 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016dce:	9b07      	ldr	r3, [sp, #28]
 8016dd0:	9313      	str	r3, [sp, #76]	; 0x4c
 8016dd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016dd4:	9310      	str	r3, [sp, #64]	; 0x40
 8016dd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016dd8:	2b00      	cmp	r3, #0
 8016dda:	dde3      	ble.n	8016da4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8016ddc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016dde:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016de0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016de4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016de6:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8016dea:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016dec:	1412      	asrs	r2, r2, #16
 8016dee:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016df2:	f100 8198 	bmi.w	8017126 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8016df6:	1c56      	adds	r6, r2, #1
 8016df8:	42b4      	cmp	r4, r6
 8016dfa:	f340 8196 	ble.w	801712a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016dfe:	2b00      	cmp	r3, #0
 8016e00:	f2c0 8193 	blt.w	801712a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016e04:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016e06:	1c5e      	adds	r6, r3, #1
 8016e08:	42b7      	cmp	r7, r6
 8016e0a:	f340 818e 	ble.w	801712a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016e0e:	fb03 2304 	mla	r3, r3, r4, r2
 8016e12:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016e14:	18d6      	adds	r6, r2, r3
 8016e16:	5cd3      	ldrb	r3, [r2, r3]
 8016e18:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8016e1c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016e20:	2900      	cmp	r1, #0
 8016e22:	f000 8170 	beq.w	8017106 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8016e26:	7872      	ldrb	r2, [r6, #1]
 8016e28:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016e2c:	920b      	str	r2, [sp, #44]	; 0x2c
 8016e2e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016e32:	2800      	cmp	r0, #0
 8016e34:	f000 8171 	beq.w	801711a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8016e38:	1932      	adds	r2, r6, r4
 8016e3a:	5d36      	ldrb	r6, [r6, r4]
 8016e3c:	7852      	ldrb	r2, [r2, #1]
 8016e3e:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8016e42:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016e46:	9608      	str	r6, [sp, #32]
 8016e48:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016e4c:	920c      	str	r2, [sp, #48]	; 0x30
 8016e4e:	0e16      	lsrs	r6, r2, #24
 8016e50:	b289      	uxth	r1, r1
 8016e52:	b280      	uxth	r0, r0
 8016e54:	fb01 fb00 	mul.w	fp, r1, r0
 8016e58:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8016e5c:	0109      	lsls	r1, r1, #4
 8016e5e:	eba1 090b 	sub.w	r9, r1, fp
 8016e62:	b280      	uxth	r0, r0
 8016e64:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8016e68:	fa1f f989 	uxth.w	r9, r9
 8016e6c:	1a12      	subs	r2, r2, r0
 8016e6e:	b292      	uxth	r2, r2
 8016e70:	fb09 f108 	mul.w	r1, r9, r8
 8016e74:	fb02 110c 	mla	r1, r2, ip, r1
 8016e78:	fb00 110a 	mla	r1, r0, sl, r1
 8016e7c:	fb0b 1106 	mla	r1, fp, r6, r1
 8016e80:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016e84:	2900      	cmp	r1, #0
 8016e86:	f000 80df 	beq.w	8017048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016e8a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016e8e:	d01b      	beq.n	8016ec8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 8016e90:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016e94:	fb0c fe0e 	mul.w	lr, ip, lr
 8016e98:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016e9c:	fb0c fc03 	mul.w	ip, ip, r3
 8016ea0:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8016ea4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016ea8:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016eac:	4473      	add	r3, lr
 8016eae:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8016eb2:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8016eb6:	0a1b      	lsrs	r3, r3, #8
 8016eb8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016ebc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016ec0:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016ec4:	ea43 030e 	orr.w	r3, r3, lr
 8016ec8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016ecc:	d01e      	beq.n	8016f0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8016ece:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8016ed0:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016ed4:	fb08 fc0c 	mul.w	ip, r8, ip
 8016ed8:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8016edc:	fb08 f80e 	mul.w	r8, r8, lr
 8016ee0:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8016ee4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016ee8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016eec:	44e6      	add	lr, ip
 8016eee:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8016ef2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016ef6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016efa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016efe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f02:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016f06:	ea4e 0708 	orr.w	r7, lr, r8
 8016f0a:	970b      	str	r7, [sp, #44]	; 0x2c
 8016f0c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016f10:	d01e      	beq.n	8016f50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8016f12:	9f08      	ldr	r7, [sp, #32]
 8016f14:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8016f18:	fb0a f808 	mul.w	r8, sl, r8
 8016f1c:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8016f20:	fb0a fa0c 	mul.w	sl, sl, ip
 8016f24:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016f28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f2c:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016f30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016f34:	44c6      	add	lr, r8
 8016f36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016f3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016f42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016f4a:	ea4e 070a 	orr.w	r7, lr, sl
 8016f4e:	9708      	str	r7, [sp, #32]
 8016f50:	2eff      	cmp	r6, #255	; 0xff
 8016f52:	d01d      	beq.n	8016f90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8016f54:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016f56:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8016f5a:	fb06 f808 	mul.w	r8, r6, r8
 8016f5e:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8016f62:	fb06 f60c 	mul.w	r6, r6, ip
 8016f66:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016f6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f6e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016f72:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8016f76:	44c6      	add	lr, r8
 8016f78:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8016f7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f80:	0a36      	lsrs	r6, r6, #8
 8016f82:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f86:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016f8a:	ea4e 0606 	orr.w	r6, lr, r6
 8016f8e:	960c      	str	r6, [sp, #48]	; 0x30
 8016f90:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016f92:	9f08      	ldr	r7, [sp, #32]
 8016f94:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016f98:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016f9c:	fb09 f606 	mul.w	r6, r9, r6
 8016fa0:	fb02 660c 	mla	r6, r2, ip, r6
 8016fa4:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016fa8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016faa:	fb00 660c 	mla	r6, r0, ip, r6
 8016fae:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016fb2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8016fb4:	fb0b 660c 	mla	r6, fp, ip, r6
 8016fb8:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8016fbc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016fc0:	fb09 f90c 	mul.w	r9, r9, ip
 8016fc4:	fb02 9303 	mla	r3, r2, r3, r9
 8016fc8:	9a08      	ldr	r2, [sp, #32]
 8016fca:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8016fce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016fd0:	fb00 330e 	mla	r3, r0, lr, r3
 8016fd4:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8016fd8:	fb0b 3b00 	mla	fp, fp, r0, r3
 8016fdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016fde:	881b      	ldrh	r3, [r3, #0]
 8016fe0:	43c9      	mvns	r1, r1
 8016fe2:	1218      	asrs	r0, r3, #8
 8016fe4:	b2c9      	uxtb	r1, r1
 8016fe6:	10da      	asrs	r2, r3, #3
 8016fe8:	0a36      	lsrs	r6, r6, #8
 8016fea:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016fee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016ff2:	00db      	lsls	r3, r3, #3
 8016ff4:	4348      	muls	r0, r1
 8016ff6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016ffa:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8016ffe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017002:	b2db      	uxtb	r3, r3
 8017004:	434b      	muls	r3, r1
 8017006:	ea46 060b 	orr.w	r6, r6, fp
 801700a:	434a      	muls	r2, r1
 801700c:	1c41      	adds	r1, r0, #1
 801700e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017012:	0c30      	lsrs	r0, r6, #16
 8017014:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8017018:	494e      	ldr	r1, [pc, #312]	; (8017154 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 801701a:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801701e:	1c59      	adds	r1, r3, #1
 8017020:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8017024:	b2f3      	uxtb	r3, r6
 8017026:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801702a:	1c51      	adds	r1, r2, #1
 801702c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017030:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017034:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8017038:	00f6      	lsls	r6, r6, #3
 801703a:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 801703e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017042:	431e      	orrs	r6, r3
 8017044:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017046:	801e      	strh	r6, [r3, #0]
 8017048:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801704a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801704c:	3302      	adds	r3, #2
 801704e:	9310      	str	r3, [sp, #64]	; 0x40
 8017050:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017052:	4413      	add	r3, r2
 8017054:	9329      	str	r3, [sp, #164]	; 0xa4
 8017056:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017058:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801705a:	4413      	add	r3, r2
 801705c:	932a      	str	r3, [sp, #168]	; 0xa8
 801705e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017060:	3b01      	subs	r3, #1
 8017062:	9313      	str	r3, [sp, #76]	; 0x4c
 8017064:	e6b7      	b.n	8016dd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017066:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017068:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801706a:	4413      	add	r3, r2
 801706c:	9329      	str	r3, [sp, #164]	; 0xa4
 801706e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017070:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017072:	4413      	add	r3, r2
 8017074:	932a      	str	r3, [sp, #168]	; 0xa8
 8017076:	9b07      	ldr	r3, [sp, #28]
 8017078:	3b01      	subs	r3, #1
 801707a:	9307      	str	r3, [sp, #28]
 801707c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801707e:	3302      	adds	r3, #2
 8017080:	930a      	str	r3, [sp, #40]	; 0x28
 8017082:	e65f      	b.n	8016d44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8017084:	f47f ae71 	bne.w	8016d6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8017088:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801708a:	2b00      	cmp	r3, #0
 801708c:	f340 81a7 	ble.w	80173de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8017090:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017094:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017098:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801709c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801709e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80170a2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80170a6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80170aa:	eef0 6a48 	vmov.f32	s13, s16
 80170ae:	ee69 7a27 	vmul.f32	s15, s18, s15
 80170b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170b6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80170ba:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80170be:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80170c2:	eef0 6a68 	vmov.f32	s13, s17
 80170c6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80170ca:	ee18 2a10 	vmov	r2, s16
 80170ce:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80170d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80170d6:	ee18 2a90 	vmov	r2, s17
 80170da:	932b      	str	r3, [sp, #172]	; 0xac
 80170dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80170de:	fb92 f3f3 	sdiv	r3, r2, r3
 80170e2:	932c      	str	r3, [sp, #176]	; 0xb0
 80170e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80170e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80170e8:	3b01      	subs	r3, #1
 80170ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170ee:	9312      	str	r3, [sp, #72]	; 0x48
 80170f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80170f2:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80170f6:	bf08      	it	eq
 80170f8:	4613      	moveq	r3, r2
 80170fa:	9307      	str	r3, [sp, #28]
 80170fc:	eef0 8a67 	vmov.f32	s17, s15
 8017100:	eeb0 8a47 	vmov.f32	s16, s14
 8017104:	e617      	b.n	8016d36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8017106:	b158      	cbz	r0, 8017120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8017108:	5d32      	ldrb	r2, [r6, r4]
 801710a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801710e:	9208      	str	r2, [sp, #32]
 8017110:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8017114:	26ff      	movs	r6, #255	; 0xff
 8017116:	46b0      	mov	r8, r6
 8017118:	e69a      	b.n	8016e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 801711a:	26ff      	movs	r6, #255	; 0xff
 801711c:	46b2      	mov	sl, r6
 801711e:	e697      	b.n	8016e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8017120:	26ff      	movs	r6, #255	; 0xff
 8017122:	46b2      	mov	sl, r6
 8017124:	e7f7      	b.n	8017116 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8017126:	1c57      	adds	r7, r2, #1
 8017128:	d18e      	bne.n	8017048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801712a:	4294      	cmp	r4, r2
 801712c:	dd8c      	ble.n	8017048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801712e:	1c5e      	adds	r6, r3, #1
 8017130:	db8a      	blt.n	8017048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017132:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017134:	429e      	cmp	r6, r3
 8017136:	dd87      	ble.n	8017048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017138:	e9cd 1004 	strd	r1, r0, [sp, #16]
 801713c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8017140:	e9cd 4600 	strd	r4, r6, [sp]
 8017144:	462b      	mov	r3, r5
 8017146:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 801714a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801714c:	f7ff fc6c 	bl	8016a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8017150:	e77a      	b.n	8017048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017152:	bf00      	nop
 8017154:	fffff800 	.word	0xfffff800
 8017158:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801715a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801715c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017160:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017162:	1409      	asrs	r1, r1, #16
 8017164:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8017168:	141b      	asrs	r3, r3, #16
 801716a:	fb04 1303 	mla	r3, r4, r3, r1
 801716e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017170:	18ce      	adds	r6, r1, r3
 8017172:	5ccb      	ldrb	r3, [r1, r3]
 8017174:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8017178:	0e1f      	lsrs	r7, r3, #24
 801717a:	2a00      	cmp	r2, #0
 801717c:	f000 811f 	beq.w	80173be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8017180:	7871      	ldrb	r1, [r6, #1]
 8017182:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8017186:	910d      	str	r1, [sp, #52]	; 0x34
 8017188:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 801718c:	2800      	cmp	r0, #0
 801718e:	f000 8120 	beq.w	80173d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8017192:	1931      	adds	r1, r6, r4
 8017194:	5d36      	ldrb	r6, [r6, r4]
 8017196:	7849      	ldrb	r1, [r1, #1]
 8017198:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 801719c:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80171a0:	9609      	str	r6, [sp, #36]	; 0x24
 80171a2:	ea4f 6916 	mov.w	r9, r6, lsr #24
 80171a6:	910e      	str	r1, [sp, #56]	; 0x38
 80171a8:	0e0e      	lsrs	r6, r1, #24
 80171aa:	b292      	uxth	r2, r2
 80171ac:	b280      	uxth	r0, r0
 80171ae:	fb02 fa00 	mul.w	sl, r2, r0
 80171b2:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80171b6:	0112      	lsls	r2, r2, #4
 80171b8:	eba2 080a 	sub.w	r8, r2, sl
 80171bc:	b280      	uxth	r0, r0
 80171be:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80171c2:	fa1f f888 	uxth.w	r8, r8
 80171c6:	1a09      	subs	r1, r1, r0
 80171c8:	b289      	uxth	r1, r1
 80171ca:	fb08 f20e 	mul.w	r2, r8, lr
 80171ce:	fb01 2207 	mla	r2, r1, r7, r2
 80171d2:	fb00 2209 	mla	r2, r0, r9, r2
 80171d6:	fb0a 2206 	mla	r2, sl, r6, r2
 80171da:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80171de:	9213      	str	r2, [sp, #76]	; 0x4c
 80171e0:	2a00      	cmp	r2, #0
 80171e2:	f000 80de 	beq.w	80173a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 80171e6:	2fff      	cmp	r7, #255	; 0xff
 80171e8:	d01a      	beq.n	8017220 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 80171ea:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80171ee:	fb07 fc0c 	mul.w	ip, r7, ip
 80171f2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80171f6:	435f      	muls	r7, r3
 80171f8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80171fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017200:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017204:	4463      	add	r3, ip
 8017206:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 801720a:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 801720e:	0a1b      	lsrs	r3, r3, #8
 8017210:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017214:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017218:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801721c:	ea43 030c 	orr.w	r3, r3, ip
 8017220:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017224:	d01f      	beq.n	8017266 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8017226:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8017228:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801722a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801722e:	fb0e f707 	mul.w	r7, lr, r7
 8017232:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8017236:	fb0e fe0c 	mul.w	lr, lr, ip
 801723a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801723e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017242:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017246:	44bc      	add	ip, r7
 8017248:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801724c:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8017250:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017254:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017258:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801725c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017260:	ea4c 020e 	orr.w	r2, ip, lr
 8017264:	920d      	str	r2, [sp, #52]	; 0x34
 8017266:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801726a:	d01e      	beq.n	80172aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 801726c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801726e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8017272:	fb09 fe0e 	mul.w	lr, r9, lr
 8017276:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801727a:	fb09 f907 	mul.w	r9, r9, r7
 801727e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8017282:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017286:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801728a:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801728e:	44f4      	add	ip, lr
 8017290:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8017294:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017298:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801729c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172a0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80172a4:	ea4c 0209 	orr.w	r2, ip, r9
 80172a8:	9209      	str	r2, [sp, #36]	; 0x24
 80172aa:	2eff      	cmp	r6, #255	; 0xff
 80172ac:	d01c      	beq.n	80172e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 80172ae:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80172b0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80172b4:	fb06 fe0e 	mul.w	lr, r6, lr
 80172b8:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80172bc:	437e      	muls	r6, r7
 80172be:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80172c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172c6:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80172ca:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80172ce:	44f4      	add	ip, lr
 80172d0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80172d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80172d8:	0a36      	lsrs	r6, r6, #8
 80172da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172de:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80172e2:	ea4c 0206 	orr.w	r2, ip, r6
 80172e6:	920e      	str	r2, [sp, #56]	; 0x38
 80172e8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80172ea:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 80172ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80172f0:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80172f4:	fb08 f606 	mul.w	r6, r8, r6
 80172f8:	fb01 6607 	mla	r6, r1, r7, r6
 80172fc:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8017300:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017302:	fb00 6607 	mla	r6, r0, r7, r6
 8017306:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 801730a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801730c:	fb0a 6607 	mla	r6, sl, r7, r6
 8017310:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8017314:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017316:	fb08 f807 	mul.w	r8, r8, r7
 801731a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801731e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017322:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017324:	fb01 8303 	mla	r3, r1, r3, r8
 8017328:	fb00 330c 	mla	r3, r0, ip, r3
 801732c:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8017330:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8017334:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017336:	f8bb 3000 	ldrh.w	r3, [fp]
 801733a:	43d2      	mvns	r2, r2
 801733c:	1218      	asrs	r0, r3, #8
 801733e:	b2d2      	uxtb	r2, r2
 8017340:	0a36      	lsrs	r6, r6, #8
 8017342:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017346:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801734a:	4350      	muls	r0, r2
 801734c:	10d9      	asrs	r1, r3, #3
 801734e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017352:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017356:	00db      	lsls	r3, r3, #3
 8017358:	ea46 060e 	orr.w	r6, r6, lr
 801735c:	1c47      	adds	r7, r0, #1
 801735e:	b2db      	uxtb	r3, r3
 8017360:	4353      	muls	r3, r2
 8017362:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017366:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801736a:	0c37      	lsrs	r7, r6, #16
 801736c:	4351      	muls	r1, r2
 801736e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017372:	4a1d      	ldr	r2, [pc, #116]	; (80173e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8017374:	1c5f      	adds	r7, r3, #1
 8017376:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801737a:	b2f7      	uxtb	r7, r6
 801737c:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8017380:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8017384:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8017388:	1c4b      	adds	r3, r1, #1
 801738a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801738e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017392:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8017396:	00f6      	lsls	r6, r6, #3
 8017398:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801739c:	4330      	orrs	r0, r6
 801739e:	f8ab 0000 	strh.w	r0, [fp]
 80173a2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80173a4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80173a6:	4413      	add	r3, r2
 80173a8:	9329      	str	r3, [sp, #164]	; 0xa4
 80173aa:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80173ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173ae:	4413      	add	r3, r2
 80173b0:	932a      	str	r3, [sp, #168]	; 0xa8
 80173b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80173b4:	3b01      	subs	r3, #1
 80173b6:	f10b 0b02 	add.w	fp, fp, #2
 80173ba:	9310      	str	r3, [sp, #64]	; 0x40
 80173bc:	e4ee      	b.n	8016d9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 80173be:	b158      	cbz	r0, 80173d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 80173c0:	5d31      	ldrb	r1, [r6, r4]
 80173c2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80173c6:	9109      	str	r1, [sp, #36]	; 0x24
 80173c8:	ea4f 6911 	mov.w	r9, r1, lsr #24
 80173cc:	26ff      	movs	r6, #255	; 0xff
 80173ce:	46b6      	mov	lr, r6
 80173d0:	e6eb      	b.n	80171aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80173d2:	26ff      	movs	r6, #255	; 0xff
 80173d4:	46b1      	mov	r9, r6
 80173d6:	e6e8      	b.n	80171aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80173d8:	26ff      	movs	r6, #255	; 0xff
 80173da:	46b1      	mov	r9, r6
 80173dc:	e7f7      	b.n	80173ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 80173de:	b017      	add	sp, #92	; 0x5c
 80173e0:	ecbd 8b08 	vpop	{d8-d11}
 80173e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173e8:	fffff800 	.word	0xfffff800

080173ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80173ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173f0:	b087      	sub	sp, #28
 80173f2:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 80173f6:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 80173fa:	9105      	str	r1, [sp, #20]
 80173fc:	fb00 e604 	mla	r6, r0, r4, lr
 8017400:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8017404:	9102      	str	r1, [sp, #8]
 8017406:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 801740a:	9103      	str	r1, [sp, #12]
 801740c:	9905      	ldr	r1, [sp, #20]
 801740e:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8017412:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8017416:	8809      	ldrh	r1, [r1, #0]
 8017418:	2800      	cmp	r0, #0
 801741a:	eb03 0a06 	add.w	sl, r3, r6
 801741e:	f2c0 80ca 	blt.w	80175b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8017422:	4287      	cmp	r7, r0
 8017424:	f340 80c7 	ble.w	80175b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8017428:	f1be 0f00 	cmp.w	lr, #0
 801742c:	f2c0 80bf 	blt.w	80175ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8017430:	4574      	cmp	r4, lr
 8017432:	f340 80bc 	ble.w	80175ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8017436:	f813 c006 	ldrb.w	ip, [r3, r6]
 801743a:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 801743e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017442:	d01c      	beq.n	801747e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8017444:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8017448:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801744c:	4372      	muls	r2, r6
 801744e:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8017452:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8017456:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801745a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801745e:	fb0c f609 	mul.w	r6, ip, r9
 8017462:	eb03 0902 	add.w	r9, r3, r2
 8017466:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 801746a:	f106 0820 	add.w	r8, r6, #32
 801746e:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8017472:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017476:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801747a:	ea49 0908 	orr.w	r9, r9, r8
 801747e:	fa1f f989 	uxth.w	r9, r9
 8017482:	f11e 0301 	adds.w	r3, lr, #1
 8017486:	f100 809b 	bmi.w	80175c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 801748a:	429c      	cmp	r4, r3
 801748c:	f340 8098 	ble.w	80175c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8017490:	2d00      	cmp	r5, #0
 8017492:	f000 8095 	beq.w	80175c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8017496:	f89a 6001 	ldrb.w	r6, [sl, #1]
 801749a:	9b03      	ldr	r3, [sp, #12]
 801749c:	2eff      	cmp	r6, #255	; 0xff
 801749e:	885b      	ldrh	r3, [r3, #2]
 80174a0:	d01b      	beq.n	80174da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 80174a2:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80174a6:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80174aa:	fb08 f202 	mul.w	r2, r8, r2
 80174ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80174b2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80174b6:	fb06 f803 	mul.w	r8, r6, r3
 80174ba:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80174be:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80174c2:	441a      	add	r2, r3
 80174c4:	f108 0320 	add.w	r3, r8, #32
 80174c8:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80174cc:	0a1b      	lsrs	r3, r3, #8
 80174ce:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80174d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80174d6:	ea4b 0303 	orr.w	r3, fp, r3
 80174da:	b29b      	uxth	r3, r3
 80174dc:	9301      	str	r3, [sp, #4]
 80174de:	3001      	adds	r0, #1
 80174e0:	d474      	bmi.n	80175cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80174e2:	4287      	cmp	r7, r0
 80174e4:	dd72      	ble.n	80175cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80174e6:	9a02      	ldr	r2, [sp, #8]
 80174e8:	2a00      	cmp	r2, #0
 80174ea:	f000 8121 	beq.w	8017730 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 80174ee:	f1be 0f00 	cmp.w	lr, #0
 80174f2:	db68      	blt.n	80175c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 80174f4:	4574      	cmp	r4, lr
 80174f6:	dd66      	ble.n	80175c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 80174f8:	f81a 7004 	ldrb.w	r7, [sl, r4]
 80174fc:	9a03      	ldr	r2, [sp, #12]
 80174fe:	2fff      	cmp	r7, #255	; 0xff
 8017500:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8017504:	d01c      	beq.n	8017540 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8017506:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 801750a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801750e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017512:	fb07 fb00 	mul.w	fp, r7, r0
 8017516:	fb08 f802 	mul.w	r8, r8, r2
 801751a:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801751e:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8017522:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017526:	4490      	add	r8, r2
 8017528:	f10b 0220 	add.w	r2, fp, #32
 801752c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8017530:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8017534:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8017538:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801753c:	ea40 000b 	orr.w	r0, r0, fp
 8017540:	b280      	uxth	r0, r0
 8017542:	f11e 0e01 	adds.w	lr, lr, #1
 8017546:	d446      	bmi.n	80175d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8017548:	4574      	cmp	r4, lr
 801754a:	dd44      	ble.n	80175d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 801754c:	2d00      	cmp	r5, #0
 801754e:	d045      	beq.n	80175dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8017550:	1c62      	adds	r2, r4, #1
 8017552:	9b03      	ldr	r3, [sp, #12]
 8017554:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017558:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801755c:	2cff      	cmp	r4, #255	; 0xff
 801755e:	d01c      	beq.n	801759a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8017560:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8017564:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017568:	fb08 fe0e 	mul.w	lr, r8, lr
 801756c:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8017570:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017574:	fb04 f802 	mul.w	r8, r4, r2
 8017578:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 801757c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017580:	4472      	add	r2, lr
 8017582:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8017586:	f108 0a20 	add.w	sl, r8, #32
 801758a:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 801758e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017592:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017596:	ea42 020a 	orr.w	r2, r2, sl
 801759a:	b292      	uxth	r2, r2
 801759c:	2d0f      	cmp	r5, #15
 801759e:	d91f      	bls.n	80175e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 80175a0:	4b67      	ldr	r3, [pc, #412]	; (8017740 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 80175a2:	4a68      	ldr	r2, [pc, #416]	; (8017744 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 80175a4:	4868      	ldr	r0, [pc, #416]	; (8017748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 80175a6:	f240 3173 	movw	r1, #883	; 0x373
 80175aa:	f004 f9cb 	bl	801b944 <__assert_func>
 80175ae:	4689      	mov	r9, r1
 80175b0:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80175b4:	e765      	b.n	8017482 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 80175b6:	26ff      	movs	r6, #255	; 0xff
 80175b8:	9101      	str	r1, [sp, #4]
 80175ba:	4689      	mov	r9, r1
 80175bc:	46b4      	mov	ip, r6
 80175be:	e78e      	b.n	80174de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 80175c0:	9101      	str	r1, [sp, #4]
 80175c2:	26ff      	movs	r6, #255	; 0xff
 80175c4:	e78b      	b.n	80174de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 80175c6:	4608      	mov	r0, r1
 80175c8:	27ff      	movs	r7, #255	; 0xff
 80175ca:	e7ba      	b.n	8017542 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 80175cc:	24ff      	movs	r4, #255	; 0xff
 80175ce:	460a      	mov	r2, r1
 80175d0:	4608      	mov	r0, r1
 80175d2:	4627      	mov	r7, r4
 80175d4:	e7e2      	b.n	801759c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80175d6:	460a      	mov	r2, r1
 80175d8:	24ff      	movs	r4, #255	; 0xff
 80175da:	e7df      	b.n	801759c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80175dc:	460a      	mov	r2, r1
 80175de:	24ff      	movs	r4, #255	; 0xff
 80175e0:	9b02      	ldr	r3, [sp, #8]
 80175e2:	2b0f      	cmp	r3, #15
 80175e4:	d8dc      	bhi.n	80175a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 80175e6:	f8bd e008 	ldrh.w	lr, [sp, #8]
 80175ea:	fa1f f885 	uxth.w	r8, r5
 80175ee:	fb08 fa0e 	mul.w	sl, r8, lr
 80175f2:	ea4f 1308 	mov.w	r3, r8, lsl #4
 80175f6:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 80175fa:	9303      	str	r3, [sp, #12]
 80175fc:	fa1f f38e 	uxth.w	r3, lr
 8017600:	9304      	str	r3, [sp, #16]
 8017602:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8017606:	9b02      	ldr	r3, [sp, #8]
 8017608:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801760c:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8017610:	fb15 fe03 	smulbb	lr, r5, r3
 8017614:	ea48 0809 	orr.w	r8, r8, r9
 8017618:	f1c3 0910 	rsb	r9, r3, #16
 801761c:	9b01      	ldr	r3, [sp, #4]
 801761e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017622:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017626:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801762a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801762e:	eba9 0905 	sub.w	r9, r9, r5
 8017632:	ea4b 0303 	orr.w	r3, fp, r3
 8017636:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 801763a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801763e:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8017642:	436b      	muls	r3, r5
 8017644:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017648:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801764c:	ea4b 0202 	orr.w	r2, fp, r2
 8017650:	fb09 3308 	mla	r3, r9, r8, r3
 8017654:	fb0e 3302 	mla	r3, lr, r2, r3
 8017658:	0402      	lsls	r2, r0, #16
 801765a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801765e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017662:	4310      	orrs	r0, r2
 8017664:	9a02      	ldr	r2, [sp, #8]
 8017666:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 801766a:	fb0e 3e00 	mla	lr, lr, r0, r3
 801766e:	9803      	ldr	r0, [sp, #12]
 8017670:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8017674:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8017678:	9804      	ldr	r0, [sp, #16]
 801767a:	1a2d      	subs	r5, r5, r0
 801767c:	9803      	ldr	r0, [sp, #12]
 801767e:	eba0 000a 	sub.w	r0, r0, sl
 8017682:	b280      	uxth	r0, r0
 8017684:	b2ad      	uxth	r5, r5
 8017686:	4346      	muls	r6, r0
 8017688:	9804      	ldr	r0, [sp, #16]
 801768a:	fb0c 6605 	mla	r6, ip, r5, r6
 801768e:	fb00 6707 	mla	r7, r0, r7, r6
 8017692:	fb0a 7404 	mla	r4, sl, r4, r7
 8017696:	b292      	uxth	r2, r2
 8017698:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801769c:	4354      	muls	r4, r2
 801769e:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80176a2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80176a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80176aa:	f104 0a01 	add.w	sl, r4, #1
 80176ae:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80176b2:	ea43 0e0e 	orr.w	lr, r3, lr
 80176b6:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80176ba:	fa1f f38e 	uxth.w	r3, lr
 80176be:	1208      	asrs	r0, r1, #8
 80176c0:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 80176c4:	b2e4      	uxtb	r4, r4
 80176c6:	121d      	asrs	r5, r3, #8
 80176c8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80176cc:	fb10 f004 	smulbb	r0, r0, r4
 80176d0:	10ce      	asrs	r6, r1, #3
 80176d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80176d6:	00c9      	lsls	r1, r1, #3
 80176d8:	fb05 0502 	mla	r5, r5, r2, r0
 80176dc:	b2c9      	uxtb	r1, r1
 80176de:	10d8      	asrs	r0, r3, #3
 80176e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80176e4:	00db      	lsls	r3, r3, #3
 80176e6:	fb16 f604 	smulbb	r6, r6, r4
 80176ea:	b2db      	uxtb	r3, r3
 80176ec:	fb11 f404 	smulbb	r4, r1, r4
 80176f0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80176f4:	fb00 6002 	mla	r0, r0, r2, r6
 80176f8:	fb03 4202 	mla	r2, r3, r2, r4
 80176fc:	b2ad      	uxth	r5, r5
 80176fe:	b292      	uxth	r2, r2
 8017700:	1c6b      	adds	r3, r5, #1
 8017702:	1c51      	adds	r1, r2, #1
 8017704:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8017708:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801770c:	b280      	uxth	r0, r0
 801770e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017712:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017716:	4313      	orrs	r3, r2
 8017718:	1c42      	adds	r2, r0, #1
 801771a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801771e:	0940      	lsrs	r0, r0, #5
 8017720:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017724:	9a05      	ldr	r2, [sp, #20]
 8017726:	4303      	orrs	r3, r0
 8017728:	8013      	strh	r3, [r2, #0]
 801772a:	b007      	add	sp, #28
 801772c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017730:	2d0f      	cmp	r5, #15
 8017732:	f63f af35 	bhi.w	80175a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8017736:	24ff      	movs	r4, #255	; 0xff
 8017738:	460a      	mov	r2, r1
 801773a:	4608      	mov	r0, r1
 801773c:	4627      	mov	r7, r4
 801773e:	e752      	b.n	80175e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 8017740:	080210bb 	.word	0x080210bb
 8017744:	08021619 	.word	0x08021619
 8017748:	08021143 	.word	0x08021143

0801774c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801774c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017750:	ed2d 8b08 	vpush	{d8-d11}
 8017754:	b099      	sub	sp, #100	; 0x64
 8017756:	eeb0 aa40 	vmov.f32	s20, s0
 801775a:	9308      	str	r3, [sp, #32]
 801775c:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8017760:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 8017762:	930b      	str	r3, [sp, #44]	; 0x2c
 8017764:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8017768:	9314      	str	r3, [sp, #80]	; 0x50
 801776a:	9113      	str	r1, [sp, #76]	; 0x4c
 801776c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8017770:	9017      	str	r0, [sp, #92]	; 0x5c
 8017772:	6870      	ldr	r0, [r6, #4]
 8017774:	9216      	str	r2, [sp, #88]	; 0x58
 8017776:	fb00 1303 	mla	r3, r0, r3, r1
 801777a:	6831      	ldr	r1, [r6, #0]
 801777c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801777e:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 8017782:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8017786:	9309      	str	r3, [sp, #36]	; 0x24
 8017788:	6813      	ldr	r3, [r2, #0]
 801778a:	930c      	str	r3, [sp, #48]	; 0x30
 801778c:	6853      	ldr	r3, [r2, #4]
 801778e:	930d      	str	r3, [sp, #52]	; 0x34
 8017790:	006b      	lsls	r3, r5, #1
 8017792:	9312      	str	r3, [sp, #72]	; 0x48
 8017794:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8017798:	930a      	str	r3, [sp, #40]	; 0x28
 801779a:	eef0 9a60 	vmov.f32	s19, s1
 801779e:	eeb0 9a41 	vmov.f32	s18, s2
 80177a2:	eeb0 8a62 	vmov.f32	s16, s5
 80177a6:	eef0 8a43 	vmov.f32	s17, s6
 80177aa:	eef0 ba44 	vmov.f32	s23, s8
 80177ae:	eeb0 ba64 	vmov.f32	s22, s9
 80177b2:	eef0 aa45 	vmov.f32	s21, s10
 80177b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80177b8:	2b00      	cmp	r3, #0
 80177ba:	dc03      	bgt.n	80177c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80177bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80177be:	2b00      	cmp	r3, #0
 80177c0:	f340 83bf 	ble.w	8017f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 80177c4:	9b08      	ldr	r3, [sp, #32]
 80177c6:	2b00      	cmp	r3, #0
 80177c8:	f340 81cb 	ble.w	8017b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 80177cc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80177ce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80177d0:	1412      	asrs	r2, r2, #16
 80177d2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80177d6:	d42f      	bmi.n	8017838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80177d8:	1c51      	adds	r1, r2, #1
 80177da:	428d      	cmp	r5, r1
 80177dc:	dd2f      	ble.n	801783e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80177de:	2b00      	cmp	r3, #0
 80177e0:	db2d      	blt.n	801783e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80177e2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80177e4:	1c59      	adds	r1, r3, #1
 80177e6:	4288      	cmp	r0, r1
 80177e8:	dd29      	ble.n	801783e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80177ea:	9b08      	ldr	r3, [sp, #32]
 80177ec:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80177ee:	992b      	ldr	r1, [sp, #172]	; 0xac
 80177f0:	3b01      	subs	r3, #1
 80177f2:	fb02 1203 	mla	r2, r2, r3, r1
 80177f6:	1412      	asrs	r2, r2, #16
 80177f8:	d42b      	bmi.n	8017852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 80177fa:	3201      	adds	r2, #1
 80177fc:	4295      	cmp	r5, r2
 80177fe:	dd28      	ble.n	8017852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017800:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017802:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017804:	fb02 1303 	mla	r3, r2, r3, r1
 8017808:	141b      	asrs	r3, r3, #16
 801780a:	d422      	bmi.n	8017852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801780c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801780e:	3301      	adds	r3, #1
 8017810:	429a      	cmp	r2, r3
 8017812:	dd1e      	ble.n	8017852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017814:	9b08      	ldr	r3, [sp, #32]
 8017816:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801781a:	9315      	str	r3, [sp, #84]	; 0x54
 801781c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017820:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017822:	2b00      	cmp	r3, #0
 8017824:	f300 8217 	bgt.w	8017c56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8017828:	9b08      	ldr	r3, [sp, #32]
 801782a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801782e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017830:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017834:	9309      	str	r3, [sp, #36]	; 0x24
 8017836:	e196      	b.n	8017b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8017838:	1c57      	adds	r7, r2, #1
 801783a:	f040 8183 	bne.w	8017b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801783e:	42aa      	cmp	r2, r5
 8017840:	f280 8180 	bge.w	8017b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8017844:	1c5e      	adds	r6, r3, #1
 8017846:	f2c0 817d 	blt.w	8017b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801784a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801784c:	4293      	cmp	r3, r2
 801784e:	f280 8179 	bge.w	8017b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8017852:	9b08      	ldr	r3, [sp, #32]
 8017854:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017856:	9315      	str	r3, [sp, #84]	; 0x54
 8017858:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801785c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801785e:	2b00      	cmp	r3, #0
 8017860:	dde2      	ble.n	8017828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8017862:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017864:	1419      	asrs	r1, r3, #16
 8017866:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017868:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801786c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801786e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017872:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017874:	141b      	asrs	r3, r3, #16
 8017876:	f100 81d3 	bmi.w	8017c20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 801787a:	1c58      	adds	r0, r3, #1
 801787c:	4285      	cmp	r5, r0
 801787e:	f340 81d1 	ble.w	8017c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8017882:	2900      	cmp	r1, #0
 8017884:	f2c0 81ce 	blt.w	8017c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8017888:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801788a:	1c48      	adds	r0, r1, #1
 801788c:	4284      	cmp	r4, r0
 801788e:	f340 81c9 	ble.w	8017c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8017892:	fb01 3105 	mla	r1, r1, r5, r3
 8017896:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017898:	fa1f fe82 	uxth.w	lr, r2
 801789c:	eb03 0a01 	add.w	sl, r3, r1
 80178a0:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80178a4:	f813 9001 	ldrb.w	r9, [r3, r1]
 80178a8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80178ac:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80178b0:	b29b      	uxth	r3, r3
 80178b2:	f1bc 0f00 	cmp.w	ip, #0
 80178b6:	f000 8195 	beq.w	8017be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 80178ba:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80178be:	940e      	str	r4, [sp, #56]	; 0x38
 80178c0:	eb0a 0b05 	add.w	fp, sl, r5
 80178c4:	fa1f fa8c 	uxth.w	sl, ip
 80178c8:	fb0a fe0e 	mul.w	lr, sl, lr
 80178cc:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80178d0:	fa1f fa8a 	uxth.w	sl, sl
 80178d4:	eba0 000e 	sub.w	r0, r0, lr
 80178d8:	eba3 030a 	sub.w	r3, r3, sl
 80178dc:	b280      	uxth	r0, r0
 80178de:	fb08 f000 	mul.w	r0, r8, r0
 80178e2:	b29b      	uxth	r3, r3
 80178e4:	fb09 0303 	mla	r3, r9, r3, r0
 80178e8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80178ea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80178ee:	940f      	str	r4, [sp, #60]	; 0x3c
 80178f0:	fb0a 3300 	mla	r3, sl, r0, r3
 80178f4:	fb0e 3304 	mla	r3, lr, r4, r3
 80178f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80178fc:	2b00      	cmp	r3, #0
 80178fe:	f000 8114 	beq.w	8017b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017902:	980c      	ldr	r0, [sp, #48]	; 0x30
 8017904:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017906:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801790a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801790e:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8017912:	f000 816c 	beq.w	8017bee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8017916:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801791a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801791e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017922:	fb09 f101 	mul.w	r1, r9, r1
 8017926:	fb0a fe0e 	mul.w	lr, sl, lr
 801792a:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801792e:	f101 0b20 	add.w	fp, r1, #32
 8017932:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017936:	44ce      	add	lr, r9
 8017938:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 801793c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017940:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017944:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017948:	ea4e 0909 	orr.w	r9, lr, r9
 801794c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017950:	8841      	ldrh	r1, [r0, #2]
 8017952:	d019      	beq.n	8017988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8017954:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017958:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801795c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017960:	fb0a fe0e 	mul.w	lr, sl, lr
 8017964:	fb08 f801 	mul.w	r8, r8, r1
 8017968:	f108 0b20 	add.w	fp, r8, #32
 801796c:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8017970:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017974:	448e      	add	lr, r1
 8017976:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 801797a:	0a09      	lsrs	r1, r1, #8
 801797c:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8017980:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017984:	ea4a 0101 	orr.w	r1, sl, r1
 8017988:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801798c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017990:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017994:	ea4e 0909 	orr.w	r9, lr, r9
 8017998:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 801799c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80179a0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80179a4:	ea4e 0e01 	orr.w	lr, lr, r1
 80179a8:	f1bc 0f00 	cmp.w	ip, #0
 80179ac:	f000 8121 	beq.w	8017bf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80179b0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80179b2:	eb00 0801 	add.w	r8, r0, r1
 80179b6:	5a41      	ldrh	r1, [r0, r1]
 80179b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80179ba:	28ff      	cmp	r0, #255	; 0xff
 80179bc:	d019      	beq.n	80179f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 80179be:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80179c0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80179c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80179c8:	fb04 fb01 	mul.w	fp, r4, r1
 80179cc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80179d0:	fb0a fa00 	mul.w	sl, sl, r0
 80179d4:	f10b 0020 	add.w	r0, fp, #32
 80179d8:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 80179dc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80179e0:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80179e4:	4451      	add	r1, sl
 80179e6:	0a00      	lsrs	r0, r0, #8
 80179e8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80179ec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80179f0:	4301      	orrs	r1, r0
 80179f2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80179f4:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 80179f8:	2cff      	cmp	r4, #255	; 0xff
 80179fa:	d01a      	beq.n	8017a32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 80179fc:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8017a00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017a04:	fb04 fb00 	mul.w	fp, r4, r0
 8017a08:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017a0c:	fb0a fa08 	mul.w	sl, sl, r8
 8017a10:	f10b 0820 	add.w	r8, fp, #32
 8017a14:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8017a18:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8017a1c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017a20:	4450      	add	r0, sl
 8017a22:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017a26:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017a2a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017a2e:	ea40 0008 	orr.w	r0, r0, r8
 8017a32:	fb1c f802 	smulbb	r8, ip, r2
 8017a36:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017a3a:	f1cc 0a10 	rsb	sl, ip, #16
 8017a3e:	ebaa 0a02 	sub.w	sl, sl, r2
 8017a42:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017a46:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8017a4a:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8017a4e:	fb0e f202 	mul.w	r2, lr, r2
 8017a52:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017a56:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8017a5a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017a5e:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8017a62:	fb09 220a 	mla	r2, r9, sl, r2
 8017a66:	ea4b 0101 	orr.w	r1, fp, r1
 8017a6a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017a6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017a72:	fb0c 2201 	mla	r2, ip, r1, r2
 8017a76:	ea4e 0000 	orr.w	r0, lr, r0
 8017a7a:	fb08 2800 	mla	r8, r8, r0, r2
 8017a7e:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8017a82:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017a86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a8a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017a8e:	ea42 0808 	orr.w	r8, r2, r8
 8017a92:	fa1f f288 	uxth.w	r2, r8
 8017a96:	2bff      	cmp	r3, #255	; 0xff
 8017a98:	d103      	bne.n	8017aa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8017a9a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8017a9c:	29ff      	cmp	r1, #255	; 0xff
 8017a9e:	f000 80bd 	beq.w	8017c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 8017aa2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017aa4:	f8b7 c000 	ldrh.w	ip, [r7]
 8017aa8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017aaa:	434b      	muls	r3, r1
 8017aac:	f103 0e01 	add.w	lr, r3, #1
 8017ab0:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8017ab4:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8017ab8:	ea4f 202c 	mov.w	r0, ip, asr #8
 8017abc:	fa5f fe8e 	uxtb.w	lr, lr
 8017ac0:	1213      	asrs	r3, r2, #8
 8017ac2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017ac6:	fb10 f00e 	smulbb	r0, r0, lr
 8017aca:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017ace:	fb03 0301 	mla	r3, r3, r1, r0
 8017ad2:	b298      	uxth	r0, r3
 8017ad4:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8017ad8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017adc:	10d1      	asrs	r1, r2, #3
 8017ade:	fa5f fc8c 	uxtb.w	ip, ip
 8017ae2:	00d2      	lsls	r2, r2, #3
 8017ae4:	fb1c fc0e 	smulbb	ip, ip, lr
 8017ae8:	b2d2      	uxtb	r2, r2
 8017aea:	fb02 c204 	mla	r2, r2, r4, ip
 8017aee:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017af2:	fb13 f30e 	smulbb	r3, r3, lr
 8017af6:	b292      	uxth	r2, r2
 8017af8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017afc:	fb01 3104 	mla	r1, r1, r4, r3
 8017b00:	f102 0c01 	add.w	ip, r2, #1
 8017b04:	1c43      	adds	r3, r0, #1
 8017b06:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017b0a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8017b0e:	b289      	uxth	r1, r1
 8017b10:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b14:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017b18:	4313      	orrs	r3, r2
 8017b1a:	1c4a      	adds	r2, r1, #1
 8017b1c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017b20:	0949      	lsrs	r1, r1, #5
 8017b22:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017b26:	430b      	orrs	r3, r1
 8017b28:	803b      	strh	r3, [r7, #0]
 8017b2a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017b2c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017b2e:	4413      	add	r3, r2
 8017b30:	932b      	str	r3, [sp, #172]	; 0xac
 8017b32:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017b34:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017b36:	441a      	add	r2, r3
 8017b38:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017b3a:	922c      	str	r2, [sp, #176]	; 0xb0
 8017b3c:	3b01      	subs	r3, #1
 8017b3e:	3702      	adds	r7, #2
 8017b40:	9315      	str	r3, [sp, #84]	; 0x54
 8017b42:	e68b      	b.n	801785c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8017b44:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017b46:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017b48:	4413      	add	r3, r2
 8017b4a:	932b      	str	r3, [sp, #172]	; 0xac
 8017b4c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017b4e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017b50:	441a      	add	r2, r3
 8017b52:	9b08      	ldr	r3, [sp, #32]
 8017b54:	922c      	str	r2, [sp, #176]	; 0xb0
 8017b56:	3b01      	subs	r3, #1
 8017b58:	9308      	str	r3, [sp, #32]
 8017b5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017b5c:	3302      	adds	r3, #2
 8017b5e:	9309      	str	r3, [sp, #36]	; 0x24
 8017b60:	e630      	b.n	80177c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017b62:	f47f ae42 	bne.w	80177ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8017b66:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017b68:	2b00      	cmp	r3, #0
 8017b6a:	f340 81ea 	ble.w	8017f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8017b6e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017b72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017b76:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017b7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017b7c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017b80:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017b84:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017b88:	eef0 6a48 	vmov.f32	s13, s16
 8017b8c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017b90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b94:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017b98:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8017b9c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017ba0:	eef0 6a68 	vmov.f32	s13, s17
 8017ba4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017ba8:	ee18 2a10 	vmov	r2, s16
 8017bac:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017bb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8017bb4:	ee18 2a90 	vmov	r2, s17
 8017bb8:	932d      	str	r3, [sp, #180]	; 0xb4
 8017bba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017bbc:	fb92 f3f3 	sdiv	r3, r2, r3
 8017bc0:	932e      	str	r3, [sp, #184]	; 0xb8
 8017bc2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017bc4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8017bc6:	3b01      	subs	r3, #1
 8017bc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017bcc:	9313      	str	r3, [sp, #76]	; 0x4c
 8017bce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017bd0:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8017bd4:	bf08      	it	eq
 8017bd6:	4613      	moveq	r3, r2
 8017bd8:	9308      	str	r3, [sp, #32]
 8017bda:	eef0 8a67 	vmov.f32	s17, s15
 8017bde:	eeb0 8a47 	vmov.f32	s16, s14
 8017be2:	e5e8      	b.n	80177b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8017be4:	fb08 f000 	mul.w	r0, r8, r0
 8017be8:	fb09 0303 	mla	r3, r9, r3, r0
 8017bec:	e684      	b.n	80178f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 8017bee:	4689      	mov	r9, r1
 8017bf0:	e6ac      	b.n	801794c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 8017bf2:	f1c2 0010 	rsb	r0, r2, #16
 8017bf6:	fb0e f202 	mul.w	r2, lr, r2
 8017bfa:	fb09 2900 	mla	r9, r9, r0, r2
 8017bfe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017c02:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017c06:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017c0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c0e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017c12:	ea42 0909 	orr.w	r9, r2, r9
 8017c16:	fa1f f289 	uxth.w	r2, r9
 8017c1a:	e73c      	b.n	8017a96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8017c1c:	803a      	strh	r2, [r7, #0]
 8017c1e:	e784      	b.n	8017b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c20:	1c5c      	adds	r4, r3, #1
 8017c22:	d182      	bne.n	8017b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c24:	429d      	cmp	r5, r3
 8017c26:	dd80      	ble.n	8017b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c28:	1c48      	adds	r0, r1, #1
 8017c2a:	f6ff af7e 	blt.w	8017b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c2e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017c30:	4288      	cmp	r0, r1
 8017c32:	f77f af7a 	ble.w	8017b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c36:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017c38:	9302      	str	r3, [sp, #8]
 8017c3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017c3c:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8017c40:	e9cd c005 	strd	ip, r0, [sp, #20]
 8017c44:	e9cd 5300 	strd	r5, r3, [sp]
 8017c48:	4639      	mov	r1, r7
 8017c4a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8017c4e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017c50:	f7ff fbcc 	bl	80173ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017c54:	e769      	b.n	8017b2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c56:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017c58:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017c5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017c5e:	141f      	asrs	r7, r3, #16
 8017c60:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8017c64:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017c66:	141b      	asrs	r3, r3, #16
 8017c68:	fb05 3707 	mla	r7, r5, r7, r3
 8017c6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c6e:	fa1f fc82 	uxth.w	ip, r2
 8017c72:	eb03 0a07 	add.w	sl, r3, r7
 8017c76:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8017c7a:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017c7e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017c82:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8017c86:	b29b      	uxth	r3, r3
 8017c88:	2800      	cmp	r0, #0
 8017c8a:	f000 813f 	beq.w	8017f0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 8017c8e:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8017c92:	9410      	str	r4, [sp, #64]	; 0x40
 8017c94:	eb0a 0b05 	add.w	fp, sl, r5
 8017c98:	fa1f fa80 	uxth.w	sl, r0
 8017c9c:	fb0a fc0c 	mul.w	ip, sl, ip
 8017ca0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017ca4:	fa1f fa8a 	uxth.w	sl, sl
 8017ca8:	eba1 010c 	sub.w	r1, r1, ip
 8017cac:	eba3 030a 	sub.w	r3, r3, sl
 8017cb0:	b289      	uxth	r1, r1
 8017cb2:	fb08 f101 	mul.w	r1, r8, r1
 8017cb6:	b29b      	uxth	r3, r3
 8017cb8:	fb09 1303 	mla	r3, r9, r3, r1
 8017cbc:	9910      	ldr	r1, [sp, #64]	; 0x40
 8017cbe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017cc2:	9411      	str	r4, [sp, #68]	; 0x44
 8017cc4:	fb0a 3301 	mla	r3, sl, r1, r3
 8017cc8:	fb0c 3304 	mla	r3, ip, r4, r3
 8017ccc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017cd0:	2b00      	cmp	r3, #0
 8017cd2:	f000 810d 	beq.w	8017ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8017cd6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017cd8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017cda:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017cde:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8017ce2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017ce6:	f000 8116 	beq.w	8017f16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8017cea:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017cee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017cf2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017cf6:	fb09 f707 	mul.w	r7, r9, r7
 8017cfa:	fb0a fc0c 	mul.w	ip, sl, ip
 8017cfe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017d02:	f107 0b20 	add.w	fp, r7, #32
 8017d06:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017d0a:	44cc      	add	ip, r9
 8017d0c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017d10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017d14:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017d18:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017d1c:	ea4c 0909 	orr.w	r9, ip, r9
 8017d20:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017d24:	884f      	ldrh	r7, [r1, #2]
 8017d26:	d019      	beq.n	8017d5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8017d28:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017d2c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017d30:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017d34:	fb08 f807 	mul.w	r8, r8, r7
 8017d38:	fb0a fc0c 	mul.w	ip, sl, ip
 8017d3c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017d40:	f108 0b20 	add.w	fp, r8, #32
 8017d44:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017d48:	44bc      	add	ip, r7
 8017d4a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017d4e:	0a3f      	lsrs	r7, r7, #8
 8017d50:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017d54:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017d58:	ea4c 0707 	orr.w	r7, ip, r7
 8017d5c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017d60:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017d64:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017d68:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017d6c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d70:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017d74:	ea4c 0909 	orr.w	r9, ip, r9
 8017d78:	ea4a 0707 	orr.w	r7, sl, r7
 8017d7c:	2800      	cmp	r0, #0
 8017d7e:	f000 80cc 	beq.w	8017f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 8017d82:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017d84:	eb01 0c04 	add.w	ip, r1, r4
 8017d88:	f831 8004 	ldrh.w	r8, [r1, r4]
 8017d8c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8017d8e:	29ff      	cmp	r1, #255	; 0xff
 8017d90:	d01a      	beq.n	8017dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 8017d92:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017d94:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8017d98:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017d9c:	fb04 fb08 	mul.w	fp, r4, r8
 8017da0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017da4:	fb0a fa01 	mul.w	sl, sl, r1
 8017da8:	f10b 0120 	add.w	r1, fp, #32
 8017dac:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8017db0:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8017db4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017db8:	44d0      	add	r8, sl
 8017dba:	0a09      	lsrs	r1, r1, #8
 8017dbc:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8017dc0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017dc4:	ea48 0801 	orr.w	r8, r8, r1
 8017dc8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017dca:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8017dce:	2cff      	cmp	r4, #255	; 0xff
 8017dd0:	d01a      	beq.n	8017e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 8017dd2:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8017dd6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017dda:	fb04 fb01 	mul.w	fp, r4, r1
 8017dde:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017de2:	fb0a fa0c 	mul.w	sl, sl, ip
 8017de6:	f10b 0c20 	add.w	ip, fp, #32
 8017dea:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8017dee:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8017df2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017df6:	4451      	add	r1, sl
 8017df8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017dfc:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017e00:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017e04:	ea41 010c 	orr.w	r1, r1, ip
 8017e08:	fb10 fc02 	smulbb	ip, r0, r2
 8017e0c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017e10:	f1c0 0a10 	rsb	sl, r0, #16
 8017e14:	ebaa 0a02 	sub.w	sl, sl, r2
 8017e18:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8017e1c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017e20:	437a      	muls	r2, r7
 8017e22:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8017e26:	040f      	lsls	r7, r1, #16
 8017e28:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017e2c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017e30:	fb09 220a 	mla	r2, r9, sl, r2
 8017e34:	ea4b 0808 	orr.w	r8, fp, r8
 8017e38:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8017e3c:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8017e40:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017e44:	fb00 2208 	mla	r2, r0, r8, r2
 8017e48:	4339      	orrs	r1, r7
 8017e4a:	fb0c 2201 	mla	r2, ip, r1, r2
 8017e4e:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8017e52:	0952      	lsrs	r2, r2, #5
 8017e54:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017e58:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017e5c:	ea49 0202 	orr.w	r2, r9, r2
 8017e60:	2bff      	cmp	r3, #255	; 0xff
 8017e62:	b292      	uxth	r2, r2
 8017e64:	d102      	bne.n	8017e6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8017e66:	9914      	ldr	r1, [sp, #80]	; 0x50
 8017e68:	29ff      	cmp	r1, #255	; 0xff
 8017e6a:	d067      	beq.n	8017f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8017e6c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017e6e:	f8be 0000 	ldrh.w	r0, [lr]
 8017e72:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017e74:	434b      	muls	r3, r1
 8017e76:	1c59      	adds	r1, r3, #1
 8017e78:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8017e7c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017e80:	1201      	asrs	r1, r0, #8
 8017e82:	b2db      	uxtb	r3, r3
 8017e84:	1217      	asrs	r7, r2, #8
 8017e86:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017e8a:	fb11 f103 	smulbb	r1, r1, r3
 8017e8e:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 8017e92:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017e96:	00c0      	lsls	r0, r0, #3
 8017e98:	fb07 1704 	mla	r7, r7, r4, r1
 8017e9c:	b2c0      	uxtb	r0, r0
 8017e9e:	10d1      	asrs	r1, r2, #3
 8017ea0:	00d2      	lsls	r2, r2, #3
 8017ea2:	fb10 f003 	smulbb	r0, r0, r3
 8017ea6:	b2d2      	uxtb	r2, r2
 8017ea8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017eac:	fb02 0204 	mla	r2, r2, r4, r0
 8017eb0:	fb1c fc03 	smulbb	ip, ip, r3
 8017eb4:	b2bf      	uxth	r7, r7
 8017eb6:	b292      	uxth	r2, r2
 8017eb8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017ebc:	fb01 c104 	mla	r1, r1, r4, ip
 8017ec0:	1c7b      	adds	r3, r7, #1
 8017ec2:	f102 0c01 	add.w	ip, r2, #1
 8017ec6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8017eca:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8017ece:	b289      	uxth	r1, r1
 8017ed0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017ed4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017ed8:	ea47 070c 	orr.w	r7, r7, ip
 8017edc:	f101 0c01 	add.w	ip, r1, #1
 8017ee0:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8017ee4:	0949      	lsrs	r1, r1, #5
 8017ee6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017eea:	430f      	orrs	r7, r1
 8017eec:	f8ae 7000 	strh.w	r7, [lr]
 8017ef0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017ef2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017ef4:	4413      	add	r3, r2
 8017ef6:	932b      	str	r3, [sp, #172]	; 0xac
 8017ef8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017efa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017efc:	441a      	add	r2, r3
 8017efe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017f00:	922c      	str	r2, [sp, #176]	; 0xb0
 8017f02:	3b01      	subs	r3, #1
 8017f04:	f10e 0e02 	add.w	lr, lr, #2
 8017f08:	9315      	str	r3, [sp, #84]	; 0x54
 8017f0a:	e489      	b.n	8017820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8017f0c:	fb08 f101 	mul.w	r1, r8, r1
 8017f10:	fb09 1303 	mla	r3, r9, r3, r1
 8017f14:	e6da      	b.n	8017ccc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8017f16:	46b9      	mov	r9, r7
 8017f18:	e702      	b.n	8017d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 8017f1a:	f1c2 0110 	rsb	r1, r2, #16
 8017f1e:	437a      	muls	r2, r7
 8017f20:	fb09 2901 	mla	r9, r9, r1, r2
 8017f24:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017f28:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017f2c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017f30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017f34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017f38:	4302      	orrs	r2, r0
 8017f3a:	e791      	b.n	8017e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8017f3c:	f8ae 2000 	strh.w	r2, [lr]
 8017f40:	e7d6      	b.n	8017ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8017f42:	b019      	add	sp, #100	; 0x64
 8017f44:	ecbd 8b08 	vpop	{d8-d11}
 8017f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f50:	b087      	sub	sp, #28
 8017f52:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8017f56:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8017f5a:	9105      	str	r1, [sp, #20]
 8017f5c:	fb00 e604 	mla	r6, r0, r4, lr
 8017f60:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8017f64:	9102      	str	r1, [sp, #8]
 8017f66:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8017f6a:	9103      	str	r1, [sp, #12]
 8017f6c:	9905      	ldr	r1, [sp, #20]
 8017f6e:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8017f72:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8017f76:	8809      	ldrh	r1, [r1, #0]
 8017f78:	2800      	cmp	r0, #0
 8017f7a:	eb02 0a06 	add.w	sl, r2, r6
 8017f7e:	f2c0 80ca 	blt.w	8018116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8017f82:	4287      	cmp	r7, r0
 8017f84:	f340 80c7 	ble.w	8018116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8017f88:	f1be 0f00 	cmp.w	lr, #0
 8017f8c:	f2c0 80bf 	blt.w	801810e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8017f90:	4574      	cmp	r4, lr
 8017f92:	f340 80bc 	ble.w	801810e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8017f96:	f812 c006 	ldrb.w	ip, [r2, r6]
 8017f9a:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 8017f9e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017fa2:	d01c      	beq.n	8017fde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8017fa4:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8017fa8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017fac:	4372      	muls	r2, r6
 8017fae:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8017fb2:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8017fb6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017fba:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017fbe:	fb0c f609 	mul.w	r6, ip, r9
 8017fc2:	eb03 0902 	add.w	r9, r3, r2
 8017fc6:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8017fca:	f106 0820 	add.w	r8, r6, #32
 8017fce:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8017fd2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017fd6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017fda:	ea49 0908 	orr.w	r9, r9, r8
 8017fde:	fa1f f989 	uxth.w	r9, r9
 8017fe2:	f11e 0301 	adds.w	r3, lr, #1
 8017fe6:	f100 809b 	bmi.w	8018120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017fea:	429c      	cmp	r4, r3
 8017fec:	f340 8098 	ble.w	8018120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017ff0:	2d00      	cmp	r5, #0
 8017ff2:	f000 8095 	beq.w	8018120 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017ff6:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8017ffa:	9b03      	ldr	r3, [sp, #12]
 8017ffc:	2eff      	cmp	r6, #255	; 0xff
 8017ffe:	885b      	ldrh	r3, [r3, #2]
 8018000:	d01b      	beq.n	801803a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 8018002:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8018006:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801800a:	fb08 f202 	mul.w	r2, r8, r2
 801800e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018012:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018016:	fb06 f803 	mul.w	r8, r6, r3
 801801a:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801801e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018022:	441a      	add	r2, r3
 8018024:	f108 0320 	add.w	r3, r8, #32
 8018028:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801802c:	0a1b      	lsrs	r3, r3, #8
 801802e:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8018032:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018036:	ea4b 0303 	orr.w	r3, fp, r3
 801803a:	b29b      	uxth	r3, r3
 801803c:	9301      	str	r3, [sp, #4]
 801803e:	3001      	adds	r0, #1
 8018040:	d474      	bmi.n	801812c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8018042:	4287      	cmp	r7, r0
 8018044:	dd72      	ble.n	801812c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8018046:	9a02      	ldr	r2, [sp, #8]
 8018048:	2a00      	cmp	r2, #0
 801804a:	f000 8111 	beq.w	8018270 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 801804e:	f1be 0f00 	cmp.w	lr, #0
 8018052:	db68      	blt.n	8018126 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8018054:	4574      	cmp	r4, lr
 8018056:	dd66      	ble.n	8018126 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8018058:	f81a 7004 	ldrb.w	r7, [sl, r4]
 801805c:	9a03      	ldr	r2, [sp, #12]
 801805e:	2fff      	cmp	r7, #255	; 0xff
 8018060:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8018064:	d01c      	beq.n	80180a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8018066:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 801806a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801806e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018072:	fb07 fb00 	mul.w	fp, r7, r0
 8018076:	fb08 f802 	mul.w	r8, r8, r2
 801807a:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801807e:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8018082:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018086:	4490      	add	r8, r2
 8018088:	f10b 0220 	add.w	r2, fp, #32
 801808c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8018090:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018094:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8018098:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801809c:	ea40 000b 	orr.w	r0, r0, fp
 80180a0:	b280      	uxth	r0, r0
 80180a2:	f11e 0e01 	adds.w	lr, lr, #1
 80180a6:	d446      	bmi.n	8018136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80180a8:	4574      	cmp	r4, lr
 80180aa:	dd44      	ble.n	8018136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80180ac:	2d00      	cmp	r5, #0
 80180ae:	d045      	beq.n	801813c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 80180b0:	1c62      	adds	r2, r4, #1
 80180b2:	9b03      	ldr	r3, [sp, #12]
 80180b4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80180b8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80180bc:	2cff      	cmp	r4, #255	; 0xff
 80180be:	d01c      	beq.n	80180fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 80180c0:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 80180c4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80180c8:	fb08 fe0e 	mul.w	lr, r8, lr
 80180cc:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 80180d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80180d4:	fb04 f802 	mul.w	r8, r4, r2
 80180d8:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 80180dc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80180e0:	4472      	add	r2, lr
 80180e2:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 80180e6:	f108 0a20 	add.w	sl, r8, #32
 80180ea:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 80180ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80180f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80180f6:	ea42 020a 	orr.w	r2, r2, sl
 80180fa:	b292      	uxth	r2, r2
 80180fc:	2d0f      	cmp	r5, #15
 80180fe:	d91f      	bls.n	8018140 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8018100:	4b5f      	ldr	r3, [pc, #380]	; (8018280 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8018102:	4a60      	ldr	r2, [pc, #384]	; (8018284 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8018104:	4860      	ldr	r0, [pc, #384]	; (8018288 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8018106:	f240 3173 	movw	r1, #883	; 0x373
 801810a:	f003 fc1b 	bl	801b944 <__assert_func>
 801810e:	4689      	mov	r9, r1
 8018110:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8018114:	e765      	b.n	8017fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8018116:	26ff      	movs	r6, #255	; 0xff
 8018118:	9101      	str	r1, [sp, #4]
 801811a:	4689      	mov	r9, r1
 801811c:	46b4      	mov	ip, r6
 801811e:	e78e      	b.n	801803e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8018120:	9101      	str	r1, [sp, #4]
 8018122:	26ff      	movs	r6, #255	; 0xff
 8018124:	e78b      	b.n	801803e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8018126:	4608      	mov	r0, r1
 8018128:	27ff      	movs	r7, #255	; 0xff
 801812a:	e7ba      	b.n	80180a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 801812c:	24ff      	movs	r4, #255	; 0xff
 801812e:	460a      	mov	r2, r1
 8018130:	4608      	mov	r0, r1
 8018132:	4627      	mov	r7, r4
 8018134:	e7e2      	b.n	80180fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018136:	460a      	mov	r2, r1
 8018138:	24ff      	movs	r4, #255	; 0xff
 801813a:	e7df      	b.n	80180fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801813c:	460a      	mov	r2, r1
 801813e:	24ff      	movs	r4, #255	; 0xff
 8018140:	9b02      	ldr	r3, [sp, #8]
 8018142:	2b0f      	cmp	r3, #15
 8018144:	d8dc      	bhi.n	8018100 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8018146:	f8bd e008 	ldrh.w	lr, [sp, #8]
 801814a:	fa1f f885 	uxth.w	r8, r5
 801814e:	fb08 fa0e 	mul.w	sl, r8, lr
 8018152:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8018156:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 801815a:	9303      	str	r3, [sp, #12]
 801815c:	fa1f f38e 	uxth.w	r3, lr
 8018160:	9304      	str	r3, [sp, #16]
 8018162:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8018166:	9b02      	ldr	r3, [sp, #8]
 8018168:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801816c:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8018170:	fb15 fe03 	smulbb	lr, r5, r3
 8018174:	ea48 0809 	orr.w	r8, r8, r9
 8018178:	f1c3 0910 	rsb	r9, r3, #16
 801817c:	9b01      	ldr	r3, [sp, #4]
 801817e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018182:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018186:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801818a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801818e:	eba9 0905 	sub.w	r9, r9, r5
 8018192:	ea4b 0303 	orr.w	r3, fp, r3
 8018196:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 801819a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801819e:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 80181a2:	436b      	muls	r3, r5
 80181a4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80181a8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80181ac:	ea4b 0202 	orr.w	r2, fp, r2
 80181b0:	fb09 3308 	mla	r3, r9, r8, r3
 80181b4:	fb0e 3302 	mla	r3, lr, r2, r3
 80181b8:	0402      	lsls	r2, r0, #16
 80181ba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80181be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80181c2:	4310      	orrs	r0, r2
 80181c4:	9a02      	ldr	r2, [sp, #8]
 80181c6:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 80181ca:	9a03      	ldr	r2, [sp, #12]
 80181cc:	fb0e 3e00 	mla	lr, lr, r0, r3
 80181d0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80181d4:	9a04      	ldr	r2, [sp, #16]
 80181d6:	1a80      	subs	r0, r0, r2
 80181d8:	9a03      	ldr	r2, [sp, #12]
 80181da:	eba2 020a 	sub.w	r2, r2, sl
 80181de:	b292      	uxth	r2, r2
 80181e0:	b280      	uxth	r0, r0
 80181e2:	4356      	muls	r6, r2
 80181e4:	9a04      	ldr	r2, [sp, #16]
 80181e6:	fb0c 6600 	mla	r6, ip, r0, r6
 80181ea:	fb02 6707 	mla	r7, r2, r7, r6
 80181ee:	fb0a 7404 	mla	r4, sl, r4, r7
 80181f2:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80181f6:	1208      	asrs	r0, r1, #8
 80181f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80181fc:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8018200:	b2e4      	uxtb	r4, r4
 8018202:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018206:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801820a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801820e:	4360      	muls	r0, r4
 8018210:	ea43 0e0e 	orr.w	lr, r3, lr
 8018214:	fa1f f38e 	uxth.w	r3, lr
 8018218:	1c42      	adds	r2, r0, #1
 801821a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801821e:	1218      	asrs	r0, r3, #8
 8018220:	10cd      	asrs	r5, r1, #3
 8018222:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018226:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801822a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801822e:	4a17      	ldr	r2, [pc, #92]	; (801828c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8018230:	4365      	muls	r5, r4
 8018232:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8018236:	1c6a      	adds	r2, r5, #1
 8018238:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801823c:	00c9      	lsls	r1, r1, #3
 801823e:	10da      	asrs	r2, r3, #3
 8018240:	b2c9      	uxtb	r1, r1
 8018242:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018246:	434c      	muls	r4, r1
 8018248:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801824c:	1c61      	adds	r1, r4, #1
 801824e:	00d2      	lsls	r2, r2, #3
 8018250:	00db      	lsls	r3, r3, #3
 8018252:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8018256:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801825a:	b2db      	uxtb	r3, r3
 801825c:	4302      	orrs	r2, r0
 801825e:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8018262:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8018266:	9a05      	ldr	r2, [sp, #20]
 8018268:	8013      	strh	r3, [r2, #0]
 801826a:	b007      	add	sp, #28
 801826c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018270:	2d0f      	cmp	r5, #15
 8018272:	f63f af45 	bhi.w	8018100 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8018276:	24ff      	movs	r4, #255	; 0xff
 8018278:	460a      	mov	r2, r1
 801827a:	4608      	mov	r0, r1
 801827c:	4627      	mov	r7, r4
 801827e:	e762      	b.n	8018146 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8018280:	080210bb 	.word	0x080210bb
 8018284:	08021619 	.word	0x08021619
 8018288:	08021143 	.word	0x08021143
 801828c:	fffff800 	.word	0xfffff800

08018290 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018294:	ed2d 8b08 	vpush	{d8-d11}
 8018298:	b095      	sub	sp, #84	; 0x54
 801829a:	eeb0 aa40 	vmov.f32	s20, s0
 801829e:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80182a0:	9306      	str	r3, [sp, #24]
 80182a2:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 80182a6:	9110      	str	r1, [sp, #64]	; 0x40
 80182a8:	9308      	str	r3, [sp, #32]
 80182aa:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80182ae:	9013      	str	r0, [sp, #76]	; 0x4c
 80182b0:	6870      	ldr	r0, [r6, #4]
 80182b2:	9212      	str	r2, [sp, #72]	; 0x48
 80182b4:	fb00 1303 	mla	r3, r0, r3, r1
 80182b8:	6831      	ldr	r1, [r6, #0]
 80182ba:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80182bc:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 80182c0:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80182c4:	9307      	str	r3, [sp, #28]
 80182c6:	6813      	ldr	r3, [r2, #0]
 80182c8:	9309      	str	r3, [sp, #36]	; 0x24
 80182ca:	6853      	ldr	r3, [r2, #4]
 80182cc:	930a      	str	r3, [sp, #40]	; 0x28
 80182ce:	006b      	lsls	r3, r5, #1
 80182d0:	eef0 9a60 	vmov.f32	s19, s1
 80182d4:	eeb0 9a41 	vmov.f32	s18, s2
 80182d8:	eeb0 8a62 	vmov.f32	s16, s5
 80182dc:	eef0 8a43 	vmov.f32	s17, s6
 80182e0:	eef0 ba44 	vmov.f32	s23, s8
 80182e4:	eeb0 ba64 	vmov.f32	s22, s9
 80182e8:	eef0 aa45 	vmov.f32	s21, s10
 80182ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80182ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80182f0:	2b00      	cmp	r3, #0
 80182f2:	dc03      	bgt.n	80182fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 80182f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80182f6:	2b00      	cmp	r3, #0
 80182f8:	f340 83a3 	ble.w	8018a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 80182fc:	9b06      	ldr	r3, [sp, #24]
 80182fe:	2b00      	cmp	r3, #0
 8018300:	f340 81bc 	ble.w	801867c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8018304:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018306:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018308:	1412      	asrs	r2, r2, #16
 801830a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801830e:	d42f      	bmi.n	8018370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8018310:	1c51      	adds	r1, r2, #1
 8018312:	428d      	cmp	r5, r1
 8018314:	dd2f      	ble.n	8018376 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018316:	2b00      	cmp	r3, #0
 8018318:	db2d      	blt.n	8018376 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801831a:	9808      	ldr	r0, [sp, #32]
 801831c:	1c59      	adds	r1, r3, #1
 801831e:	4288      	cmp	r0, r1
 8018320:	dd29      	ble.n	8018376 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018322:	9b06      	ldr	r3, [sp, #24]
 8018324:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018326:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8018328:	3b01      	subs	r3, #1
 801832a:	fb02 1203 	mla	r2, r2, r3, r1
 801832e:	1412      	asrs	r2, r2, #16
 8018330:	d42b      	bmi.n	801838a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018332:	3201      	adds	r2, #1
 8018334:	4295      	cmp	r5, r2
 8018336:	dd28      	ble.n	801838a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018338:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801833a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801833c:	fb02 1303 	mla	r3, r2, r3, r1
 8018340:	141b      	asrs	r3, r3, #16
 8018342:	d422      	bmi.n	801838a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018344:	9a08      	ldr	r2, [sp, #32]
 8018346:	3301      	adds	r3, #1
 8018348:	429a      	cmp	r2, r3
 801834a:	dd1e      	ble.n	801838a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801834c:	9b06      	ldr	r3, [sp, #24]
 801834e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8018352:	9311      	str	r3, [sp, #68]	; 0x44
 8018354:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018358:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801835a:	2b00      	cmp	r3, #0
 801835c:	f300 8208 	bgt.w	8018770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8018360:	9b06      	ldr	r3, [sp, #24]
 8018362:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018366:	9b07      	ldr	r3, [sp, #28]
 8018368:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801836c:	9307      	str	r3, [sp, #28]
 801836e:	e187      	b.n	8018680 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8018370:	1c57      	adds	r7, r2, #1
 8018372:	f040 8174 	bne.w	801865e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8018376:	42aa      	cmp	r2, r5
 8018378:	f280 8171 	bge.w	801865e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801837c:	1c5e      	adds	r6, r3, #1
 801837e:	f2c0 816e 	blt.w	801865e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8018382:	9a08      	ldr	r2, [sp, #32]
 8018384:	4293      	cmp	r3, r2
 8018386:	f280 816a 	bge.w	801865e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801838a:	9b06      	ldr	r3, [sp, #24]
 801838c:	9f07      	ldr	r7, [sp, #28]
 801838e:	9311      	str	r3, [sp, #68]	; 0x44
 8018390:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018394:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018396:	2b00      	cmp	r3, #0
 8018398:	dde2      	ble.n	8018360 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801839a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801839c:	1419      	asrs	r1, r3, #16
 801839e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80183a0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80183a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80183a6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80183aa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80183ac:	141b      	asrs	r3, r3, #16
 80183ae:	f100 81c4 	bmi.w	801873a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 80183b2:	1c58      	adds	r0, r3, #1
 80183b4:	4285      	cmp	r5, r0
 80183b6:	f340 81c2 	ble.w	801873e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80183ba:	2900      	cmp	r1, #0
 80183bc:	f2c0 81bf 	blt.w	801873e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80183c0:	9c08      	ldr	r4, [sp, #32]
 80183c2:	1c48      	adds	r0, r1, #1
 80183c4:	4284      	cmp	r4, r0
 80183c6:	f340 81ba 	ble.w	801873e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80183ca:	fb01 3105 	mla	r1, r1, r5, r3
 80183ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80183d0:	fa1f fe82 	uxth.w	lr, r2
 80183d4:	eb03 0a01 	add.w	sl, r3, r1
 80183d8:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80183dc:	f813 9001 	ldrb.w	r9, [r3, r1]
 80183e0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80183e4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80183e8:	b29b      	uxth	r3, r3
 80183ea:	f1bc 0f00 	cmp.w	ip, #0
 80183ee:	f000 8186 	beq.w	80186fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 80183f2:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80183f6:	940b      	str	r4, [sp, #44]	; 0x2c
 80183f8:	eb0a 0b05 	add.w	fp, sl, r5
 80183fc:	fa1f fa8c 	uxth.w	sl, ip
 8018400:	fb0a fe0e 	mul.w	lr, sl, lr
 8018404:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018408:	fa1f fa8a 	uxth.w	sl, sl
 801840c:	eba0 000e 	sub.w	r0, r0, lr
 8018410:	eba3 030a 	sub.w	r3, r3, sl
 8018414:	b280      	uxth	r0, r0
 8018416:	fb08 f000 	mul.w	r0, r8, r0
 801841a:	b29b      	uxth	r3, r3
 801841c:	fb09 0303 	mla	r3, r9, r3, r0
 8018420:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018422:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018426:	940c      	str	r4, [sp, #48]	; 0x30
 8018428:	fb0a 3300 	mla	r3, sl, r0, r3
 801842c:	fb0e 3304 	mla	r3, lr, r4, r3
 8018430:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018434:	2b00      	cmp	r3, #0
 8018436:	f000 8105 	beq.w	8018644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801843a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801843c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801843e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018442:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018446:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 801844a:	f000 815d 	beq.w	8018708 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 801844e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018452:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018456:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801845a:	fb09 f101 	mul.w	r1, r9, r1
 801845e:	fb0a fe0e 	mul.w	lr, sl, lr
 8018462:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018466:	f101 0b20 	add.w	fp, r1, #32
 801846a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801846e:	44ce      	add	lr, r9
 8018470:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8018474:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018478:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801847c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018480:	ea4e 0909 	orr.w	r9, lr, r9
 8018484:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018488:	8841      	ldrh	r1, [r0, #2]
 801848a:	d019      	beq.n	80184c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 801848c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018490:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018494:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018498:	fb0a fe0e 	mul.w	lr, sl, lr
 801849c:	fb08 f801 	mul.w	r8, r8, r1
 80184a0:	f108 0b20 	add.w	fp, r8, #32
 80184a4:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 80184a8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80184ac:	448e      	add	lr, r1
 80184ae:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 80184b2:	0a09      	lsrs	r1, r1, #8
 80184b4:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 80184b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80184bc:	ea4a 0101 	orr.w	r1, sl, r1
 80184c0:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80184c4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80184c8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80184cc:	ea4e 0909 	orr.w	r9, lr, r9
 80184d0:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 80184d4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80184d8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80184dc:	ea4e 0e01 	orr.w	lr, lr, r1
 80184e0:	f1bc 0f00 	cmp.w	ip, #0
 80184e4:	f000 8112 	beq.w	801870c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 80184e8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80184ea:	eb00 0801 	add.w	r8, r0, r1
 80184ee:	5a41      	ldrh	r1, [r0, r1]
 80184f0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80184f2:	28ff      	cmp	r0, #255	; 0xff
 80184f4:	d019      	beq.n	801852a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 80184f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80184f8:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80184fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018500:	fb04 fb01 	mul.w	fp, r4, r1
 8018504:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018508:	fb0a fa00 	mul.w	sl, sl, r0
 801850c:	f10b 0020 	add.w	r0, fp, #32
 8018510:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8018514:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8018518:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801851c:	4451      	add	r1, sl
 801851e:	0a00      	lsrs	r0, r0, #8
 8018520:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018524:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018528:	4301      	orrs	r1, r0
 801852a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801852c:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8018530:	2cff      	cmp	r4, #255	; 0xff
 8018532:	d01a      	beq.n	801856a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8018534:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8018538:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801853c:	fb04 fb00 	mul.w	fp, r4, r0
 8018540:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018544:	fb0a fa08 	mul.w	sl, sl, r8
 8018548:	f10b 0820 	add.w	r8, fp, #32
 801854c:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8018550:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8018554:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018558:	4450      	add	r0, sl
 801855a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801855e:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018562:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018566:	ea40 0008 	orr.w	r0, r0, r8
 801856a:	fb1c f802 	smulbb	r8, ip, r2
 801856e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018572:	f1cc 0a10 	rsb	sl, ip, #16
 8018576:	ebaa 0a02 	sub.w	sl, sl, r2
 801857a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801857e:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8018582:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8018586:	fb0e f202 	mul.w	r2, lr, r2
 801858a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801858e:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8018592:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018596:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801859a:	fb09 220a 	mla	r2, r9, sl, r2
 801859e:	ea4b 0101 	orr.w	r1, fp, r1
 80185a2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80185a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80185aa:	fb0c 2201 	mla	r2, ip, r1, r2
 80185ae:	ea4e 0000 	orr.w	r0, lr, r0
 80185b2:	fb08 2800 	mla	r8, r8, r0, r2
 80185b6:	ea4f 5258 	mov.w	r2, r8, lsr #21
 80185ba:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80185be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185c2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80185c6:	ea42 0808 	orr.w	r8, r2, r8
 80185ca:	fa1f f288 	uxth.w	r2, r8
 80185ce:	2bff      	cmp	r3, #255	; 0xff
 80185d0:	f000 80b1 	beq.w	8018736 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80185d4:	f8b7 8000 	ldrh.w	r8, [r7]
 80185d8:	43db      	mvns	r3, r3
 80185da:	ea4f 2028 	mov.w	r0, r8, asr #8
 80185de:	fa5f fe83 	uxtb.w	lr, r3
 80185e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80185e6:	fb00 f00e 	mul.w	r0, r0, lr
 80185ea:	1c41      	adds	r1, r0, #1
 80185ec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80185f0:	1210      	asrs	r0, r2, #8
 80185f2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80185f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80185fa:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 80185fe:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018602:	495a      	ldr	r1, [pc, #360]	; (801876c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8018604:	fb0c fc0e 	mul.w	ip, ip, lr
 8018608:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801860c:	f10c 0101 	add.w	r1, ip, #1
 8018610:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8018614:	10d1      	asrs	r1, r2, #3
 8018616:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801861a:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 801861e:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8018622:	b2db      	uxtb	r3, r3
 8018624:	00c9      	lsls	r1, r1, #3
 8018626:	fb03 f30e 	mul.w	r3, r3, lr
 801862a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801862e:	4301      	orrs	r1, r0
 8018630:	1c58      	adds	r0, r3, #1
 8018632:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018636:	00d3      	lsls	r3, r2, #3
 8018638:	b2db      	uxtb	r3, r3
 801863a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801863e:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8018642:	803b      	strh	r3, [r7, #0]
 8018644:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018646:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018648:	4413      	add	r3, r2
 801864a:	9327      	str	r3, [sp, #156]	; 0x9c
 801864c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801864e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018650:	441a      	add	r2, r3
 8018652:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018654:	9228      	str	r2, [sp, #160]	; 0xa0
 8018656:	3b01      	subs	r3, #1
 8018658:	3702      	adds	r7, #2
 801865a:	9311      	str	r3, [sp, #68]	; 0x44
 801865c:	e69a      	b.n	8018394 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801865e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018660:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018662:	4413      	add	r3, r2
 8018664:	9327      	str	r3, [sp, #156]	; 0x9c
 8018666:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018668:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801866a:	441a      	add	r2, r3
 801866c:	9b06      	ldr	r3, [sp, #24]
 801866e:	9228      	str	r2, [sp, #160]	; 0xa0
 8018670:	3b01      	subs	r3, #1
 8018672:	9306      	str	r3, [sp, #24]
 8018674:	9b07      	ldr	r3, [sp, #28]
 8018676:	3302      	adds	r3, #2
 8018678:	9307      	str	r3, [sp, #28]
 801867a:	e63f      	b.n	80182fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 801867c:	f47f ae51 	bne.w	8018322 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8018680:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018682:	2b00      	cmp	r3, #0
 8018684:	f340 81dd 	ble.w	8018a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8018688:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801868c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018690:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018694:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018696:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801869a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801869e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80186a2:	eef0 6a48 	vmov.f32	s13, s16
 80186a6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80186aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186ae:	ee37 8a48 	vsub.f32	s16, s14, s16
 80186b2:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80186b6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80186ba:	eef0 6a68 	vmov.f32	s13, s17
 80186be:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80186c2:	ee18 2a10 	vmov	r2, s16
 80186c6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80186ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80186ce:	ee18 2a90 	vmov	r2, s17
 80186d2:	9329      	str	r3, [sp, #164]	; 0xa4
 80186d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80186d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80186da:	932a      	str	r3, [sp, #168]	; 0xa8
 80186dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80186de:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80186e0:	3b01      	subs	r3, #1
 80186e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186e6:	9310      	str	r3, [sp, #64]	; 0x40
 80186e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80186ea:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80186ee:	bf08      	it	eq
 80186f0:	4613      	moveq	r3, r2
 80186f2:	9306      	str	r3, [sp, #24]
 80186f4:	eef0 8a67 	vmov.f32	s17, s15
 80186f8:	eeb0 8a47 	vmov.f32	s16, s14
 80186fc:	e5f7      	b.n	80182ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 80186fe:	fb08 f000 	mul.w	r0, r8, r0
 8018702:	fb09 0303 	mla	r3, r9, r3, r0
 8018706:	e693      	b.n	8018430 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8018708:	4689      	mov	r9, r1
 801870a:	e6bb      	b.n	8018484 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 801870c:	f1c2 0010 	rsb	r0, r2, #16
 8018710:	fb0e f202 	mul.w	r2, lr, r2
 8018714:	fb09 2900 	mla	r9, r9, r0, r2
 8018718:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801871c:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8018720:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018724:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018728:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801872c:	ea42 0909 	orr.w	r9, r2, r9
 8018730:	fa1f f289 	uxth.w	r2, r9
 8018734:	e74b      	b.n	80185ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8018736:	803a      	strh	r2, [r7, #0]
 8018738:	e784      	b.n	8018644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801873a:	1c5c      	adds	r4, r3, #1
 801873c:	d182      	bne.n	8018644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801873e:	429d      	cmp	r5, r3
 8018740:	dd80      	ble.n	8018644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018742:	1c48      	adds	r0, r1, #1
 8018744:	f6ff af7e 	blt.w	8018644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018748:	9808      	ldr	r0, [sp, #32]
 801874a:	4288      	cmp	r0, r1
 801874c:	f77f af7a 	ble.w	8018644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018750:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8018754:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 8018758:	e9cd 5000 	strd	r5, r0, [sp]
 801875c:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8018760:	4639      	mov	r1, r7
 8018762:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018764:	f7ff fbf2 	bl	8017f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018768:	e76c      	b.n	8018644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801876a:	bf00      	nop
 801876c:	fffff800 	.word	0xfffff800
 8018770:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018772:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018776:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018778:	141f      	asrs	r7, r3, #16
 801877a:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801877e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018780:	141b      	asrs	r3, r3, #16
 8018782:	fb05 3707 	mla	r7, r5, r7, r3
 8018786:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018788:	fa1f fc82 	uxth.w	ip, r2
 801878c:	eb03 0a07 	add.w	sl, r3, r7
 8018790:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8018794:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018798:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801879c:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 80187a0:	b29b      	uxth	r3, r3
 80187a2:	2800      	cmp	r0, #0
 80187a4:	f000 8132 	beq.w	8018a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 80187a8:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80187ac:	940d      	str	r4, [sp, #52]	; 0x34
 80187ae:	eb0a 0b05 	add.w	fp, sl, r5
 80187b2:	fa1f fa80 	uxth.w	sl, r0
 80187b6:	fb0a fc0c 	mul.w	ip, sl, ip
 80187ba:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80187be:	fa1f fa8a 	uxth.w	sl, sl
 80187c2:	eba1 010c 	sub.w	r1, r1, ip
 80187c6:	eba3 030a 	sub.w	r3, r3, sl
 80187ca:	b289      	uxth	r1, r1
 80187cc:	fb08 f101 	mul.w	r1, r8, r1
 80187d0:	b29b      	uxth	r3, r3
 80187d2:	fb09 1303 	mla	r3, r9, r3, r1
 80187d6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80187d8:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80187dc:	940e      	str	r4, [sp, #56]	; 0x38
 80187de:	fb0a 3301 	mla	r3, sl, r1, r3
 80187e2:	fb0c 3304 	mla	r3, ip, r4, r3
 80187e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80187ea:	2b00      	cmp	r3, #0
 80187ec:	f000 8100 	beq.w	80189f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 80187f0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80187f2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80187f4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80187f8:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 80187fc:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018800:	f000 8109 	beq.w	8018a16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 8018804:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018808:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801880c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018810:	fb09 f707 	mul.w	r7, r9, r7
 8018814:	fb0a fc0c 	mul.w	ip, sl, ip
 8018818:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801881c:	f107 0b20 	add.w	fp, r7, #32
 8018820:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018824:	44cc      	add	ip, r9
 8018826:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801882a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801882e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018832:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018836:	ea4c 0909 	orr.w	r9, ip, r9
 801883a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801883e:	884f      	ldrh	r7, [r1, #2]
 8018840:	d019      	beq.n	8018876 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 8018842:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018846:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801884a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801884e:	fb08 f807 	mul.w	r8, r8, r7
 8018852:	fb0a fc0c 	mul.w	ip, sl, ip
 8018856:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801885a:	f108 0b20 	add.w	fp, r8, #32
 801885e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018862:	44bc      	add	ip, r7
 8018864:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018868:	0a3f      	lsrs	r7, r7, #8
 801886a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801886e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018872:	ea4c 0707 	orr.w	r7, ip, r7
 8018876:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801887a:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801887e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018882:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018886:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801888a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801888e:	ea4c 0909 	orr.w	r9, ip, r9
 8018892:	ea4a 0707 	orr.w	r7, sl, r7
 8018896:	2800      	cmp	r0, #0
 8018898:	f000 80bf 	beq.w	8018a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 801889c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801889e:	eb01 0c04 	add.w	ip, r1, r4
 80188a2:	f831 8004 	ldrh.w	r8, [r1, r4]
 80188a6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80188a8:	29ff      	cmp	r1, #255	; 0xff
 80188aa:	d01a      	beq.n	80188e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 80188ac:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80188ae:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 80188b2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80188b6:	fb04 fb08 	mul.w	fp, r4, r8
 80188ba:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80188be:	fb0a fa01 	mul.w	sl, sl, r1
 80188c2:	f10b 0120 	add.w	r1, fp, #32
 80188c6:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 80188ca:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 80188ce:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80188d2:	44d0      	add	r8, sl
 80188d4:	0a09      	lsrs	r1, r1, #8
 80188d6:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 80188da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80188de:	ea48 0801 	orr.w	r8, r8, r1
 80188e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80188e4:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 80188e8:	2cff      	cmp	r4, #255	; 0xff
 80188ea:	d01a      	beq.n	8018922 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 80188ec:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 80188f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80188f4:	fb04 fb01 	mul.w	fp, r4, r1
 80188f8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80188fc:	fb0a fa0c 	mul.w	sl, sl, ip
 8018900:	f10b 0c20 	add.w	ip, fp, #32
 8018904:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8018908:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 801890c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018910:	4451      	add	r1, sl
 8018912:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018916:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801891a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801891e:	ea41 010c 	orr.w	r1, r1, ip
 8018922:	fb10 fc02 	smulbb	ip, r0, r2
 8018926:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801892a:	f1c0 0a10 	rsb	sl, r0, #16
 801892e:	ebaa 0a02 	sub.w	sl, sl, r2
 8018932:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8018936:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801893a:	437a      	muls	r2, r7
 801893c:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8018940:	040f      	lsls	r7, r1, #16
 8018942:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018946:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801894a:	fb09 220a 	mla	r2, r9, sl, r2
 801894e:	ea4b 0808 	orr.w	r8, fp, r8
 8018952:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8018956:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801895a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801895e:	fb00 2208 	mla	r2, r0, r8, r2
 8018962:	4339      	orrs	r1, r7
 8018964:	fb0c 2201 	mla	r2, ip, r1, r2
 8018968:	ea4f 5952 	mov.w	r9, r2, lsr #21
 801896c:	0952      	lsrs	r2, r2, #5
 801896e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018972:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018976:	ea49 0202 	orr.w	r2, r9, r2
 801897a:	2bff      	cmp	r3, #255	; 0xff
 801897c:	b292      	uxth	r2, r2
 801897e:	d05d      	beq.n	8018a3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 8018980:	f8be 8000 	ldrh.w	r8, [lr]
 8018984:	4c31      	ldr	r4, [pc, #196]	; (8018a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 8018986:	43db      	mvns	r3, r3
 8018988:	ea4f 2028 	mov.w	r0, r8, asr #8
 801898c:	fa5f fc83 	uxtb.w	ip, r3
 8018990:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018994:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8018998:	fb00 f00c 	mul.w	r0, r0, ip
 801899c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80189a0:	fb07 f10c 	mul.w	r1, r7, ip
 80189a4:	1c47      	adds	r7, r0, #1
 80189a6:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80189aa:	1217      	asrs	r7, r2, #8
 80189ac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80189b0:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80189b4:	1c4f      	adds	r7, r1, #1
 80189b6:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 80189ba:	10d1      	asrs	r1, r2, #3
 80189bc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80189c0:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 80189c4:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 80189c8:	b2db      	uxtb	r3, r3
 80189ca:	00c9      	lsls	r1, r1, #3
 80189cc:	fb03 f30c 	mul.w	r3, r3, ip
 80189d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80189d4:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80189d8:	4308      	orrs	r0, r1
 80189da:	00d2      	lsls	r2, r2, #3
 80189dc:	1c59      	adds	r1, r3, #1
 80189de:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80189e2:	b2d2      	uxtb	r2, r2
 80189e4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80189e8:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80189ec:	f8ae 0000 	strh.w	r0, [lr]
 80189f0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80189f2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80189f4:	4413      	add	r3, r2
 80189f6:	9327      	str	r3, [sp, #156]	; 0x9c
 80189f8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80189fa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80189fc:	441a      	add	r2, r3
 80189fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018a00:	9228      	str	r2, [sp, #160]	; 0xa0
 8018a02:	3b01      	subs	r3, #1
 8018a04:	f10e 0e02 	add.w	lr, lr, #2
 8018a08:	9311      	str	r3, [sp, #68]	; 0x44
 8018a0a:	e4a5      	b.n	8018358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8018a0c:	fb08 f101 	mul.w	r1, r8, r1
 8018a10:	fb09 1303 	mla	r3, r9, r3, r1
 8018a14:	e6e7      	b.n	80187e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8018a16:	46b9      	mov	r9, r7
 8018a18:	e70f      	b.n	801883a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8018a1a:	f1c2 0110 	rsb	r1, r2, #16
 8018a1e:	437a      	muls	r2, r7
 8018a20:	fb09 2901 	mla	r9, r9, r1, r2
 8018a24:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018a28:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018a2c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018a30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018a34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018a38:	4302      	orrs	r2, r0
 8018a3a:	e79e      	b.n	801897a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8018a3c:	f8ae 2000 	strh.w	r2, [lr]
 8018a40:	e7d6      	b.n	80189f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8018a42:	b015      	add	sp, #84	; 0x54
 8018a44:	ecbd 8b08 	vpop	{d8-d11}
 8018a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a4c:	fffff800 	.word	0xfffff800

08018a50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018a50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018a54:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018a58:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018a5c:	f1bc 0f00 	cmp.w	ip, #0
 8018a60:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018a64:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018a68:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018a6c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8018a70:	8808      	ldrh	r0, [r1, #0]
 8018a72:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018a76:	db2f      	blt.n	8018ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018a78:	45e2      	cmp	sl, ip
 8018a7a:	dd2d      	ble.n	8018ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018a7c:	2c00      	cmp	r4, #0
 8018a7e:	db29      	blt.n	8018ad4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018a80:	42a3      	cmp	r3, r4
 8018a82:	dd27      	ble.n	8018ad4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018a84:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018a88:	1c62      	adds	r2, r4, #1
 8018a8a:	d428      	bmi.n	8018ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018a8c:	4293      	cmp	r3, r2
 8018a8e:	dd26      	ble.n	8018ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018a90:	b32f      	cbz	r7, 8018ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018a92:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018a96:	f11c 0c01 	adds.w	ip, ip, #1
 8018a9a:	d424      	bmi.n	8018ae6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018a9c:	45e2      	cmp	sl, ip
 8018a9e:	dd22      	ble.n	8018ae6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018aa0:	2e00      	cmp	r6, #0
 8018aa2:	f000 809c 	beq.w	8018bde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8018aa6:	2c00      	cmp	r4, #0
 8018aa8:	db1b      	blt.n	8018ae2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018aaa:	42a3      	cmp	r3, r4
 8018aac:	dd19      	ble.n	8018ae2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018aae:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8018ab2:	3401      	adds	r4, #1
 8018ab4:	d41a      	bmi.n	8018aec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018ab6:	42a3      	cmp	r3, r4
 8018ab8:	dd18      	ble.n	8018aec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018aba:	b1cf      	cbz	r7, 8018af0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8018abc:	3301      	adds	r3, #1
 8018abe:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8018ac2:	2f0f      	cmp	r7, #15
 8018ac4:	d915      	bls.n	8018af2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8018ac6:	4b49      	ldr	r3, [pc, #292]	; (8018bec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8018ac8:	4a49      	ldr	r2, [pc, #292]	; (8018bf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8018aca:	484a      	ldr	r0, [pc, #296]	; (8018bf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8018acc:	f240 3155 	movw	r1, #853	; 0x355
 8018ad0:	f002 ff38 	bl	801b944 <__assert_func>
 8018ad4:	4681      	mov	r9, r0
 8018ad6:	e7d7      	b.n	8018a88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8018ad8:	4686      	mov	lr, r0
 8018ada:	4681      	mov	r9, r0
 8018adc:	e7db      	b.n	8018a96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018ade:	4686      	mov	lr, r0
 8018ae0:	e7d9      	b.n	8018a96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018ae2:	4684      	mov	ip, r0
 8018ae4:	e7e5      	b.n	8018ab2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8018ae6:	4603      	mov	r3, r0
 8018ae8:	4684      	mov	ip, r0
 8018aea:	e7ea      	b.n	8018ac2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018aec:	4603      	mov	r3, r0
 8018aee:	e7e8      	b.n	8018ac2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018af0:	4603      	mov	r3, r0
 8018af2:	2e0f      	cmp	r6, #15
 8018af4:	d8e7      	bhi.n	8018ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018af6:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018afa:	fb17 f806 	smulbb	r8, r7, r6
 8018afe:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018b02:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018b06:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018b0a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018b0e:	ea44 0909 	orr.w	r9, r4, r9
 8018b12:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018b16:	f1c6 0410 	rsb	r4, r6, #16
 8018b1a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018b1e:	1be4      	subs	r4, r4, r7
 8018b20:	041a      	lsls	r2, r3, #16
 8018b22:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018b26:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018b2a:	fb07 fe0e 	mul.w	lr, r7, lr
 8018b2e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b32:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018b36:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018b3a:	fb04 e409 	mla	r4, r4, r9, lr
 8018b3e:	4313      	orrs	r3, r2
 8018b40:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018b44:	fb08 4303 	mla	r3, r8, r3, r4
 8018b48:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b4c:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8018b50:	4322      	orrs	r2, r4
 8018b52:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018b56:	fb06 3202 	mla	r2, r6, r2, r3
 8018b5a:	0d53      	lsrs	r3, r2, #21
 8018b5c:	0952      	lsrs	r2, r2, #5
 8018b5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018b62:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018b66:	431a      	orrs	r2, r3
 8018b68:	b293      	uxth	r3, r2
 8018b6a:	b2af      	uxth	r7, r5
 8018b6c:	1202      	asrs	r2, r0, #8
 8018b6e:	43ed      	mvns	r5, r5
 8018b70:	b2ed      	uxtb	r5, r5
 8018b72:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018b76:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018b7a:	fb12 f205 	smulbb	r2, r2, r5
 8018b7e:	10c6      	asrs	r6, r0, #3
 8018b80:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018b84:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018b88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018b8c:	10da      	asrs	r2, r3, #3
 8018b8e:	fb16 f605 	smulbb	r6, r6, r5
 8018b92:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018b96:	fb02 6207 	mla	r2, r2, r7, r6
 8018b9a:	b296      	uxth	r6, r2
 8018b9c:	00c2      	lsls	r2, r0, #3
 8018b9e:	00dc      	lsls	r4, r3, #3
 8018ba0:	b2d2      	uxtb	r2, r2
 8018ba2:	b2e4      	uxtb	r4, r4
 8018ba4:	fb12 f205 	smulbb	r2, r2, r5
 8018ba8:	fb04 2207 	mla	r2, r4, r7, r2
 8018bac:	fa1f fc8c 	uxth.w	ip, ip
 8018bb0:	b292      	uxth	r2, r2
 8018bb2:	f10c 0301 	add.w	r3, ip, #1
 8018bb6:	1c50      	adds	r0, r2, #1
 8018bb8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8018bbc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018bc0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018bc4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018bc8:	4313      	orrs	r3, r2
 8018bca:	1c72      	adds	r2, r6, #1
 8018bcc:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018bd0:	0952      	lsrs	r2, r2, #5
 8018bd2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018bd6:	4313      	orrs	r3, r2
 8018bd8:	800b      	strh	r3, [r1, #0]
 8018bda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018bde:	2f0f      	cmp	r7, #15
 8018be0:	f63f af71 	bhi.w	8018ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018be4:	4603      	mov	r3, r0
 8018be6:	4684      	mov	ip, r0
 8018be8:	e785      	b.n	8018af6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8018bea:	bf00      	nop
 8018bec:	080210bb 	.word	0x080210bb
 8018bf0:	080216c2 	.word	0x080216c2
 8018bf4:	08021143 	.word	0x08021143

08018bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bfc:	ed2d 8b08 	vpush	{d8-d11}
 8018c00:	b095      	sub	sp, #84	; 0x54
 8018c02:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018c06:	9306      	str	r3, [sp, #24]
 8018c08:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8018c0c:	9212      	str	r2, [sp, #72]	; 0x48
 8018c0e:	9307      	str	r3, [sp, #28]
 8018c10:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018c12:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8018c16:	930c      	str	r3, [sp, #48]	; 0x30
 8018c18:	910b      	str	r1, [sp, #44]	; 0x2c
 8018c1a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8018c1e:	9013      	str	r0, [sp, #76]	; 0x4c
 8018c20:	6850      	ldr	r0, [r2, #4]
 8018c22:	6812      	ldr	r2, [r2, #0]
 8018c24:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8018c28:	fb00 1303 	mla	r3, r0, r3, r1
 8018c2c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018c30:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018c32:	681b      	ldr	r3, [r3, #0]
 8018c34:	9309      	str	r3, [sp, #36]	; 0x24
 8018c36:	007b      	lsls	r3, r7, #1
 8018c38:	930a      	str	r3, [sp, #40]	; 0x28
 8018c3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018c3c:	43db      	mvns	r3, r3
 8018c3e:	b2db      	uxtb	r3, r3
 8018c40:	eeb0 aa40 	vmov.f32	s20, s0
 8018c44:	eef0 9a60 	vmov.f32	s19, s1
 8018c48:	eeb0 9a41 	vmov.f32	s18, s2
 8018c4c:	eeb0 8a62 	vmov.f32	s16, s5
 8018c50:	eef0 8a43 	vmov.f32	s17, s6
 8018c54:	eef0 ba44 	vmov.f32	s23, s8
 8018c58:	eeb0 ba64 	vmov.f32	s22, s9
 8018c5c:	eef0 aa45 	vmov.f32	s21, s10
 8018c60:	9308      	str	r3, [sp, #32]
 8018c62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018c64:	2b00      	cmp	r3, #0
 8018c66:	dc03      	bgt.n	8018c70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8018c68:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018c6a:	2b00      	cmp	r3, #0
 8018c6c:	f340 81f3 	ble.w	8019056 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8018c70:	9b06      	ldr	r3, [sp, #24]
 8018c72:	2b00      	cmp	r3, #0
 8018c74:	f340 80fa 	ble.w	8018e6c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8018c78:	1422      	asrs	r2, r4, #16
 8018c7a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018c7e:	d42b      	bmi.n	8018cd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8018c80:	1c51      	adds	r1, r2, #1
 8018c82:	428f      	cmp	r7, r1
 8018c84:	dd2b      	ble.n	8018cde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018c86:	2b00      	cmp	r3, #0
 8018c88:	db29      	blt.n	8018cde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018c8a:	9807      	ldr	r0, [sp, #28]
 8018c8c:	1c59      	adds	r1, r3, #1
 8018c8e:	4288      	cmp	r0, r1
 8018c90:	dd25      	ble.n	8018cde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018c92:	9b06      	ldr	r3, [sp, #24]
 8018c94:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018c96:	3b01      	subs	r3, #1
 8018c98:	fb02 4203 	mla	r2, r2, r3, r4
 8018c9c:	1412      	asrs	r2, r2, #16
 8018c9e:	d428      	bmi.n	8018cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018ca0:	3201      	adds	r2, #1
 8018ca2:	4297      	cmp	r7, r2
 8018ca4:	dd25      	ble.n	8018cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018ca6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018ca8:	fb02 6303 	mla	r3, r2, r3, r6
 8018cac:	141b      	asrs	r3, r3, #16
 8018cae:	d420      	bmi.n	8018cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018cb0:	9a07      	ldr	r2, [sp, #28]
 8018cb2:	3301      	adds	r3, #1
 8018cb4:	429a      	cmp	r2, r3
 8018cb6:	dd1c      	ble.n	8018cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018cb8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8018cbc:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 8018cc0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8018cc4:	f1b8 0f00 	cmp.w	r8, #0
 8018cc8:	f300 8129 	bgt.w	8018f1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8018ccc:	9b06      	ldr	r3, [sp, #24]
 8018cce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018cd2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8018cd6:	e0cb      	b.n	8018e70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8018cd8:	1c51      	adds	r1, r2, #1
 8018cda:	f040 80bd 	bne.w	8018e58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018cde:	42ba      	cmp	r2, r7
 8018ce0:	f280 80ba 	bge.w	8018e58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018ce4:	1c5a      	adds	r2, r3, #1
 8018ce6:	f2c0 80b7 	blt.w	8018e58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018cea:	9a07      	ldr	r2, [sp, #28]
 8018cec:	4293      	cmp	r3, r2
 8018cee:	f280 80b3 	bge.w	8018e58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018cf2:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018cf6:	46c8      	mov	r8, r9
 8018cf8:	f1bb 0f00 	cmp.w	fp, #0
 8018cfc:	dde6      	ble.n	8018ccc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8018cfe:	1421      	asrs	r1, r4, #16
 8018d00:	ea4f 4226 	mov.w	r2, r6, asr #16
 8018d04:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018d08:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018d0c:	f100 80ef 	bmi.w	8018eee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8018d10:	f101 0c01 	add.w	ip, r1, #1
 8018d14:	4567      	cmp	r7, ip
 8018d16:	f340 80ec 	ble.w	8018ef2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8018d1a:	2a00      	cmp	r2, #0
 8018d1c:	f2c0 80e9 	blt.w	8018ef2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8018d20:	9d07      	ldr	r5, [sp, #28]
 8018d22:	f102 0c01 	add.w	ip, r2, #1
 8018d26:	4565      	cmp	r5, ip
 8018d28:	f340 80e3 	ble.w	8018ef2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8018d2c:	fb02 1207 	mla	r2, r2, r7, r1
 8018d30:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018d32:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8018d36:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8018d3a:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8018d3e:	b138      	cbz	r0, 8018d50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 8018d40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018d42:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018d44:	4472      	add	r2, lr
 8018d46:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8018d4a:	8852      	ldrh	r2, [r2, #2]
 8018d4c:	950e      	str	r5, [sp, #56]	; 0x38
 8018d4e:	920f      	str	r2, [sp, #60]	; 0x3c
 8018d50:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8018d54:	fb13 f200 	smulbb	r2, r3, r0
 8018d58:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018d5c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018d60:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018d64:	10d2      	asrs	r2, r2, #3
 8018d66:	ea4e 0c0c 	orr.w	ip, lr, ip
 8018d6a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018d6e:	f1c0 0e10 	rsb	lr, r0, #16
 8018d72:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018d76:	ebae 0e03 	sub.w	lr, lr, r3
 8018d7a:	ea4a 0101 	orr.w	r1, sl, r1
 8018d7e:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018d82:	4359      	muls	r1, r3
 8018d84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018d86:	9d08      	ldr	r5, [sp, #32]
 8018d88:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018d8c:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8018d90:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018d94:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018d98:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018d9c:	ea4c 0c03 	orr.w	ip, ip, r3
 8018da0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018da2:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018da4:	041b      	lsls	r3, r3, #16
 8018da6:	fb02 ec0c 	mla	ip, r2, ip, lr
 8018daa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018dae:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018db2:	ea43 030e 	orr.w	r3, r3, lr
 8018db6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018dba:	fb02 c203 	mla	r2, r2, r3, ip
 8018dbe:	0d53      	lsrs	r3, r2, #21
 8018dc0:	0952      	lsrs	r2, r2, #5
 8018dc2:	f8b8 c000 	ldrh.w	ip, [r8]
 8018dc6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018dca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018dce:	431a      	orrs	r2, r3
 8018dd0:	b292      	uxth	r2, r2
 8018dd2:	ea4f 212c 	mov.w	r1, ip, asr #8
 8018dd6:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8018dda:	1210      	asrs	r0, r2, #8
 8018ddc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018de0:	fb11 f105 	smulbb	r1, r1, r5
 8018de4:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018de8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018dec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018df0:	fb00 1003 	mla	r0, r0, r3, r1
 8018df4:	fa5f fc8c 	uxtb.w	ip, ip
 8018df8:	10d1      	asrs	r1, r2, #3
 8018dfa:	00d2      	lsls	r2, r2, #3
 8018dfc:	fb1c fc05 	smulbb	ip, ip, r5
 8018e00:	b2d2      	uxtb	r2, r2
 8018e02:	fb02 c203 	mla	r2, r2, r3, ip
 8018e06:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018e0a:	b280      	uxth	r0, r0
 8018e0c:	b292      	uxth	r2, r2
 8018e0e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018e12:	fb1e fe05 	smulbb	lr, lr, r5
 8018e16:	fb01 e103 	mla	r1, r1, r3, lr
 8018e1a:	f102 0c01 	add.w	ip, r2, #1
 8018e1e:	1c43      	adds	r3, r0, #1
 8018e20:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018e24:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8018e28:	b289      	uxth	r1, r1
 8018e2a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018e2e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018e32:	4313      	orrs	r3, r2
 8018e34:	1c4a      	adds	r2, r1, #1
 8018e36:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018e3a:	0949      	lsrs	r1, r1, #5
 8018e3c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e40:	430b      	orrs	r3, r1
 8018e42:	f8a8 3000 	strh.w	r3, [r8]
 8018e46:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018e48:	441c      	add	r4, r3
 8018e4a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018e4c:	f108 0802 	add.w	r8, r8, #2
 8018e50:	441e      	add	r6, r3
 8018e52:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018e56:	e74f      	b.n	8018cf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8018e58:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018e5a:	441c      	add	r4, r3
 8018e5c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018e5e:	441e      	add	r6, r3
 8018e60:	9b06      	ldr	r3, [sp, #24]
 8018e62:	3b01      	subs	r3, #1
 8018e64:	9306      	str	r3, [sp, #24]
 8018e66:	f109 0902 	add.w	r9, r9, #2
 8018e6a:	e701      	b.n	8018c70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8018e6c:	f47f af11 	bne.w	8018c92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8018e70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018e72:	2b00      	cmp	r3, #0
 8018e74:	f340 80ef 	ble.w	8019056 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8018e78:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018e7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018e80:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018e84:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018e86:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018e8a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018e8e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018e92:	eef0 6a48 	vmov.f32	s13, s16
 8018e96:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018e9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e9e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018ea2:	ee16 4a90 	vmov	r4, s13
 8018ea6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018eaa:	eef0 6a68 	vmov.f32	s13, s17
 8018eae:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018eb2:	ee18 2a10 	vmov	r2, s16
 8018eb6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018eba:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ebe:	ee18 2a90 	vmov	r2, s17
 8018ec2:	9329      	str	r3, [sp, #164]	; 0xa4
 8018ec4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018ec6:	fb92 f3f3 	sdiv	r3, r2, r3
 8018eca:	932a      	str	r3, [sp, #168]	; 0xa8
 8018ecc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018ece:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018ed0:	3b01      	subs	r3, #1
 8018ed2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ed6:	930b      	str	r3, [sp, #44]	; 0x2c
 8018ed8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018eda:	bf08      	it	eq
 8018edc:	4613      	moveq	r3, r2
 8018ede:	ee16 6a90 	vmov	r6, s13
 8018ee2:	9306      	str	r3, [sp, #24]
 8018ee4:	eef0 8a67 	vmov.f32	s17, s15
 8018ee8:	eeb0 8a47 	vmov.f32	s16, s14
 8018eec:	e6b9      	b.n	8018c62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8018eee:	1c4d      	adds	r5, r1, #1
 8018ef0:	d1a9      	bne.n	8018e46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018ef2:	428f      	cmp	r7, r1
 8018ef4:	dda7      	ble.n	8018e46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018ef6:	1c55      	adds	r5, r2, #1
 8018ef8:	dba5      	blt.n	8018e46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018efa:	9d07      	ldr	r5, [sp, #28]
 8018efc:	4295      	cmp	r5, r2
 8018efe:	dda2      	ble.n	8018e46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018f00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018f02:	9101      	str	r1, [sp, #4]
 8018f04:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8018f08:	9b07      	ldr	r3, [sp, #28]
 8018f0a:	9300      	str	r3, [sp, #0]
 8018f0c:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8018f10:	463b      	mov	r3, r7
 8018f12:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018f14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018f16:	4641      	mov	r1, r8
 8018f18:	f7ff fd9a 	bl	8018a50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018f1c:	e793      	b.n	8018e46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018f1e:	1422      	asrs	r2, r4, #16
 8018f20:	1431      	asrs	r1, r6, #16
 8018f22:	fb07 2101 	mla	r1, r7, r1, r2
 8018f26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018f28:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018f2a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8018f2e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018f32:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8018f36:	8851      	ldrh	r1, [r2, #2]
 8018f38:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018f3c:	f1be 0f00 	cmp.w	lr, #0
 8018f40:	d006      	beq.n	8018f50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 8018f42:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018f44:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018f46:	1810      	adds	r0, r2, r0
 8018f48:	5b52      	ldrh	r2, [r2, r5]
 8018f4a:	9210      	str	r2, [sp, #64]	; 0x40
 8018f4c:	8842      	ldrh	r2, [r0, #2]
 8018f4e:	9211      	str	r2, [sp, #68]	; 0x44
 8018f50:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018f54:	fb13 f20e 	smulbb	r2, r3, lr
 8018f58:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018f5c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018f60:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018f64:	10d2      	asrs	r2, r2, #3
 8018f66:	ea40 000c 	orr.w	r0, r0, ip
 8018f6a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018f6e:	f1ce 0c10 	rsb	ip, lr, #16
 8018f72:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018f76:	ebac 0c03 	sub.w	ip, ip, r3
 8018f7a:	ea4b 0101 	orr.w	r1, fp, r1
 8018f7e:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018f82:	4359      	muls	r1, r3
 8018f84:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f86:	9d08      	ldr	r5, [sp, #32]
 8018f88:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018f8c:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018f90:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018f94:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8018f98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f9a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018f9e:	ea4b 0000 	orr.w	r0, fp, r0
 8018fa2:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018fa6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018faa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018fae:	fb02 c000 	mla	r0, r2, r0, ip
 8018fb2:	ea4b 0b03 	orr.w	fp, fp, r3
 8018fb6:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8018fba:	fb02 0b0b 	mla	fp, r2, fp, r0
 8018fbe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018fc0:	ea4f 515b 	mov.w	r1, fp, lsr #21
 8018fc4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018fc8:	8812      	ldrh	r2, [r2, #0]
 8018fca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018fce:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018fd2:	ea41 0b0b 	orr.w	fp, r1, fp
 8018fd6:	fa1f f38b 	uxth.w	r3, fp
 8018fda:	1211      	asrs	r1, r2, #8
 8018fdc:	1218      	asrs	r0, r3, #8
 8018fde:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018fe2:	fb11 f105 	smulbb	r1, r1, r5
 8018fe6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8018fea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018fee:	00d2      	lsls	r2, r2, #3
 8018ff0:	fb00 100a 	mla	r0, r0, sl, r1
 8018ff4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018ff8:	10d9      	asrs	r1, r3, #3
 8018ffa:	b2d2      	uxtb	r2, r2
 8018ffc:	00db      	lsls	r3, r3, #3
 8018ffe:	fb1c fc05 	smulbb	ip, ip, r5
 8019002:	fb12 f205 	smulbb	r2, r2, r5
 8019006:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801900a:	b2db      	uxtb	r3, r3
 801900c:	b280      	uxth	r0, r0
 801900e:	fb01 c10a 	mla	r1, r1, sl, ip
 8019012:	fb03 230a 	mla	r3, r3, sl, r2
 8019016:	b29b      	uxth	r3, r3
 8019018:	b289      	uxth	r1, r1
 801901a:	1c42      	adds	r2, r0, #1
 801901c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019020:	f101 0c01 	add.w	ip, r1, #1
 8019024:	1c5a      	adds	r2, r3, #1
 8019026:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801902a:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801902e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019032:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019036:	0949      	lsrs	r1, r1, #5
 8019038:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801903a:	4310      	orrs	r0, r2
 801903c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019040:	4308      	orrs	r0, r1
 8019042:	f823 0b02 	strh.w	r0, [r3], #2
 8019046:	930d      	str	r3, [sp, #52]	; 0x34
 8019048:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801904a:	441c      	add	r4, r3
 801904c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801904e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019052:	441e      	add	r6, r3
 8019054:	e636      	b.n	8018cc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8019056:	b015      	add	sp, #84	; 0x54
 8019058:	ecbd 8b08 	vpop	{d8-d11}
 801905c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019060 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8019060:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019064:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8019068:	fb06 5c03 	mla	ip, r6, r3, r5
 801906c:	2e00      	cmp	r6, #0
 801906e:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8019072:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8019076:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801907a:	8808      	ldrh	r0, [r1, #0]
 801907c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8019080:	db2e      	blt.n	80190e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019082:	45b0      	cmp	r8, r6
 8019084:	dd2c      	ble.n	80190e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019086:	2d00      	cmp	r5, #0
 8019088:	db28      	blt.n	80190dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801908a:	42ab      	cmp	r3, r5
 801908c:	dd26      	ble.n	80190dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801908e:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8019092:	1c6a      	adds	r2, r5, #1
 8019094:	d427      	bmi.n	80190e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8019096:	4293      	cmp	r3, r2
 8019098:	dd25      	ble.n	80190e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801909a:	b324      	cbz	r4, 80190e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801909c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80190a0:	3601      	adds	r6, #1
 80190a2:	d424      	bmi.n	80190ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80190a4:	45b0      	cmp	r8, r6
 80190a6:	dd22      	ble.n	80190ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80190a8:	b31f      	cbz	r7, 80190f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80190aa:	2d00      	cmp	r5, #0
 80190ac:	db1d      	blt.n	80190ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80190ae:	42ab      	cmp	r3, r5
 80190b0:	dd1b      	ble.n	80190ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80190b2:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 80190b6:	3501      	adds	r5, #1
 80190b8:	d405      	bmi.n	80190c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80190ba:	42ab      	cmp	r3, r5
 80190bc:	dd03      	ble.n	80190c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80190be:	b124      	cbz	r4, 80190ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 80190c0:	3301      	adds	r3, #1
 80190c2:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 80190c6:	2c0f      	cmp	r4, #15
 80190c8:	d801      	bhi.n	80190ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80190ca:	2f0f      	cmp	r7, #15
 80190cc:	d914      	bls.n	80190f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80190ce:	4b27      	ldr	r3, [pc, #156]	; (801916c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80190d0:	4a27      	ldr	r2, [pc, #156]	; (8019170 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80190d2:	4828      	ldr	r0, [pc, #160]	; (8019174 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 80190d4:	f240 3155 	movw	r1, #853	; 0x355
 80190d8:	f002 fc34 	bl	801b944 <__assert_func>
 80190dc:	4684      	mov	ip, r0
 80190de:	e7d8      	b.n	8019092 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 80190e0:	4602      	mov	r2, r0
 80190e2:	4684      	mov	ip, r0
 80190e4:	e7dc      	b.n	80190a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80190e6:	4602      	mov	r2, r0
 80190e8:	e7da      	b.n	80190a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80190ea:	4606      	mov	r6, r0
 80190ec:	e7e3      	b.n	80190b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 80190ee:	4606      	mov	r6, r0
 80190f0:	e7e9      	b.n	80190c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80190f2:	2c0f      	cmp	r4, #15
 80190f4:	d8eb      	bhi.n	80190ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80190f6:	4606      	mov	r6, r0
 80190f8:	ea4f 450c 	mov.w	r5, ip, lsl #16
 80190fc:	fb14 f307 	smulbb	r3, r4, r7
 8019100:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8019104:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8019108:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801910c:	10db      	asrs	r3, r3, #3
 801910e:	ea45 0c0c 	orr.w	ip, r5, ip
 8019112:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019116:	f1c7 0510 	rsb	r5, r7, #16
 801911a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801911e:	1b2d      	subs	r5, r5, r4
 8019120:	ea4e 0202 	orr.w	r2, lr, r2
 8019124:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8019128:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801912c:	4354      	muls	r4, r2
 801912e:	fb05 450c 	mla	r5, r5, ip, r4
 8019132:	0404      	lsls	r4, r0, #16
 8019134:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019138:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801913c:	4320      	orrs	r0, r4
 801913e:	fb03 5400 	mla	r4, r3, r0, r5
 8019142:	0430      	lsls	r0, r6, #16
 8019144:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019148:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801914c:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8019150:	4330      	orrs	r0, r6
 8019152:	fb07 4000 	mla	r0, r7, r0, r4
 8019156:	0d43      	lsrs	r3, r0, #21
 8019158:	0940      	lsrs	r0, r0, #5
 801915a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801915e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019162:	4318      	orrs	r0, r3
 8019164:	8008      	strh	r0, [r1, #0]
 8019166:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801916a:	bf00      	nop
 801916c:	080210bb 	.word	0x080210bb
 8019170:	080216c2 	.word	0x080216c2
 8019174:	08021143 	.word	0x08021143

08019178 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801917c:	ed2d 8b0a 	vpush	{d8-d12}
 8019180:	b093      	sub	sp, #76	; 0x4c
 8019182:	461d      	mov	r5, r3
 8019184:	9210      	str	r2, [sp, #64]	; 0x40
 8019186:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019188:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 801918c:	9208      	str	r2, [sp, #32]
 801918e:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 8019192:	910b      	str	r1, [sp, #44]	; 0x2c
 8019194:	6859      	ldr	r1, [r3, #4]
 8019196:	681b      	ldr	r3, [r3, #0]
 8019198:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 801919c:	9011      	str	r0, [sp, #68]	; 0x44
 801919e:	fb01 2707 	mla	r7, r1, r7, r2
 80191a2:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80191a6:	9307      	str	r3, [sp, #28]
 80191a8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80191aa:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80191ae:	681b      	ldr	r3, [r3, #0]
 80191b0:	9309      	str	r3, [sp, #36]	; 0x24
 80191b2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80191b6:	eeb0 aa40 	vmov.f32	s20, s0
 80191ba:	eef0 9a60 	vmov.f32	s19, s1
 80191be:	eeb0 9a41 	vmov.f32	s18, s2
 80191c2:	eeb0 8a62 	vmov.f32	s16, s5
 80191c6:	eef0 8a43 	vmov.f32	s17, s6
 80191ca:	eeb0 ca44 	vmov.f32	s24, s8
 80191ce:	eef0 ba64 	vmov.f32	s23, s9
 80191d2:	eeb0 ba45 	vmov.f32	s22, s10
 80191d6:	930a      	str	r3, [sp, #40]	; 0x28
 80191d8:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80191dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80191de:	2b00      	cmp	r3, #0
 80191e0:	dc03      	bgt.n	80191ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80191e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191e4:	2b00      	cmp	r3, #0
 80191e6:	f340 816c 	ble.w	80194c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80191ea:	2d00      	cmp	r5, #0
 80191ec:	f340 80b6 	ble.w	801935c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 80191f0:	1422      	asrs	r2, r4, #16
 80191f2:	ea4f 4326 	mov.w	r3, r6, asr #16
 80191f6:	d428      	bmi.n	801924a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 80191f8:	1c51      	adds	r1, r2, #1
 80191fa:	4588      	cmp	r8, r1
 80191fc:	dd27      	ble.n	801924e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80191fe:	2b00      	cmp	r3, #0
 8019200:	db25      	blt.n	801924e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019202:	9808      	ldr	r0, [sp, #32]
 8019204:	1c59      	adds	r1, r3, #1
 8019206:	4288      	cmp	r0, r1
 8019208:	dd21      	ble.n	801924e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801920a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801920c:	1e6b      	subs	r3, r5, #1
 801920e:	fb02 4203 	mla	r2, r2, r3, r4
 8019212:	1412      	asrs	r2, r2, #16
 8019214:	d422      	bmi.n	801925c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019216:	3201      	adds	r2, #1
 8019218:	4590      	cmp	r8, r2
 801921a:	dd1f      	ble.n	801925c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801921c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801921e:	fb02 6303 	mla	r3, r2, r3, r6
 8019222:	141b      	asrs	r3, r3, #16
 8019224:	d41a      	bmi.n	801925c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019226:	9a08      	ldr	r2, [sp, #32]
 8019228:	3301      	adds	r3, #1
 801922a:	429a      	cmp	r2, r3
 801922c:	dd16      	ble.n	801925c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801922e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019232:	46a9      	mov	r9, r5
 8019234:	f1b9 0f00 	cmp.w	r9, #0
 8019238:	f300 80e4 	bgt.w	8019404 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 801923c:	9b07      	ldr	r3, [sp, #28]
 801923e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019242:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019246:	9307      	str	r3, [sp, #28]
 8019248:	e08a      	b.n	8019360 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 801924a:	1c51      	adds	r1, r2, #1
 801924c:	d17d      	bne.n	801934a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801924e:	4542      	cmp	r2, r8
 8019250:	da7b      	bge.n	801934a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8019252:	1c5a      	adds	r2, r3, #1
 8019254:	db79      	blt.n	801934a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8019256:	9a08      	ldr	r2, [sp, #32]
 8019258:	4293      	cmp	r3, r2
 801925a:	da76      	bge.n	801934a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801925c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8019260:	46aa      	mov	sl, r5
 8019262:	f1ba 0f00 	cmp.w	sl, #0
 8019266:	dde9      	ble.n	801923c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8019268:	1421      	asrs	r1, r4, #16
 801926a:	ea4f 4226 	mov.w	r2, r6, asr #16
 801926e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8019272:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019276:	f100 80b0 	bmi.w	80193da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 801927a:	f101 0c01 	add.w	ip, r1, #1
 801927e:	45e0      	cmp	r8, ip
 8019280:	f340 80ad 	ble.w	80193de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8019284:	2a00      	cmp	r2, #0
 8019286:	f2c0 80aa 	blt.w	80193de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801928a:	9f08      	ldr	r7, [sp, #32]
 801928c:	f102 0c01 	add.w	ip, r2, #1
 8019290:	4567      	cmp	r7, ip
 8019292:	f340 80a4 	ble.w	80193de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8019296:	fb02 1208 	mla	r2, r2, r8, r1
 801929a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801929c:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 80192a0:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 80192a4:	f8be 1002 	ldrh.w	r1, [lr, #2]
 80192a8:	b138      	cbz	r0, 80192ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 80192aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80192ac:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80192ae:	4472      	add	r2, lr
 80192b0:	f83e 7007 	ldrh.w	r7, [lr, r7]
 80192b4:	8852      	ldrh	r2, [r2, #2]
 80192b6:	970c      	str	r7, [sp, #48]	; 0x30
 80192b8:	920d      	str	r2, [sp, #52]	; 0x34
 80192ba:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 80192be:	fb13 f200 	smulbb	r2, r3, r0
 80192c2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80192c6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80192ca:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80192ce:	10d2      	asrs	r2, r2, #3
 80192d0:	ea4e 0c0c 	orr.w	ip, lr, ip
 80192d4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80192d8:	f1c0 0e10 	rsb	lr, r0, #16
 80192dc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80192e0:	ebae 0e03 	sub.w	lr, lr, r3
 80192e4:	ea4b 0101 	orr.w	r1, fp, r1
 80192e8:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80192ec:	4359      	muls	r1, r3
 80192ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80192f0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80192f4:	fb0e 1e0c 	mla	lr, lr, ip, r1
 80192f8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80192fc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019300:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019304:	ea4c 0c03 	orr.w	ip, ip, r3
 8019308:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801930a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801930c:	041b      	lsls	r3, r3, #16
 801930e:	fb02 ec0c 	mla	ip, r2, ip, lr
 8019312:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019316:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801931a:	ea43 030e 	orr.w	r3, r3, lr
 801931e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019322:	fb02 c203 	mla	r2, r2, r3, ip
 8019326:	0d53      	lsrs	r3, r2, #21
 8019328:	0952      	lsrs	r2, r2, #5
 801932a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801932e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019332:	431a      	orrs	r2, r3
 8019334:	f8a9 2000 	strh.w	r2, [r9]
 8019338:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801933a:	441c      	add	r4, r3
 801933c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801933e:	f109 0902 	add.w	r9, r9, #2
 8019342:	441e      	add	r6, r3
 8019344:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019348:	e78b      	b.n	8019262 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801934a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801934c:	441c      	add	r4, r3
 801934e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019350:	441e      	add	r6, r3
 8019352:	9b07      	ldr	r3, [sp, #28]
 8019354:	3302      	adds	r3, #2
 8019356:	3d01      	subs	r5, #1
 8019358:	9307      	str	r3, [sp, #28]
 801935a:	e746      	b.n	80191ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 801935c:	f47f af55 	bne.w	801920a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8019360:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019362:	2b00      	cmp	r3, #0
 8019364:	f340 80ad 	ble.w	80194c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8019368:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801936c:	ee79 9aab 	vadd.f32	s19, s19, s23
 8019370:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8019374:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019376:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801937a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801937e:	eef0 6a48 	vmov.f32	s13, s16
 8019382:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019386:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801938a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801938e:	ee16 4a90 	vmov	r4, s13
 8019392:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019396:	eef0 6a68 	vmov.f32	s13, s17
 801939a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801939e:	ee18 2a10 	vmov	r2, s16
 80193a2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80193a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80193aa:	ee18 2a90 	vmov	r2, s17
 80193ae:	9329      	str	r3, [sp, #164]	; 0xa4
 80193b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80193b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80193b6:	932a      	str	r3, [sp, #168]	; 0xa8
 80193b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80193ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80193bc:	3b01      	subs	r3, #1
 80193be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80193c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80193c6:	ee16 6a90 	vmov	r6, s13
 80193ca:	bf14      	ite	ne
 80193cc:	461d      	movne	r5, r3
 80193ce:	4615      	moveq	r5, r2
 80193d0:	eef0 8a67 	vmov.f32	s17, s15
 80193d4:	eeb0 8a47 	vmov.f32	s16, s14
 80193d8:	e700      	b.n	80191dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80193da:	1c4f      	adds	r7, r1, #1
 80193dc:	d1ac      	bne.n	8019338 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80193de:	4588      	cmp	r8, r1
 80193e0:	ddaa      	ble.n	8019338 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80193e2:	1c57      	adds	r7, r2, #1
 80193e4:	dba8      	blt.n	8019338 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80193e6:	9f08      	ldr	r7, [sp, #32]
 80193e8:	4297      	cmp	r7, r2
 80193ea:	dda5      	ble.n	8019338 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80193ec:	e9cd 3003 	strd	r3, r0, [sp, #12]
 80193f0:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80193f4:	9700      	str	r7, [sp, #0]
 80193f6:	4643      	mov	r3, r8
 80193f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80193fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80193fc:	4649      	mov	r1, r9
 80193fe:	f7ff fe2f 	bl	8019060 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8019402:	e799      	b.n	8019338 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019404:	1422      	asrs	r2, r4, #16
 8019406:	1431      	asrs	r1, r6, #16
 8019408:	fb08 2101 	mla	r1, r8, r1, r2
 801940c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801940e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8019410:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8019414:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019418:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 801941c:	8851      	ldrh	r1, [r2, #2]
 801941e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8019422:	f1be 0f00 	cmp.w	lr, #0
 8019426:	d006      	beq.n	8019436 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8019428:	980a      	ldr	r0, [sp, #40]	; 0x28
 801942a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801942c:	1810      	adds	r0, r2, r0
 801942e:	5bd2      	ldrh	r2, [r2, r7]
 8019430:	920e      	str	r2, [sp, #56]	; 0x38
 8019432:	8842      	ldrh	r2, [r0, #2]
 8019434:	920f      	str	r2, [sp, #60]	; 0x3c
 8019436:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801943a:	fb13 f20e 	smulbb	r2, r3, lr
 801943e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019442:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019446:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801944a:	10d2      	asrs	r2, r2, #3
 801944c:	ea40 000c 	orr.w	r0, r0, ip
 8019450:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019454:	f1ce 0c10 	rsb	ip, lr, #16
 8019458:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801945c:	ebac 0c03 	sub.w	ip, ip, r3
 8019460:	ea4a 0101 	orr.w	r1, sl, r1
 8019464:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8019468:	4359      	muls	r1, r3
 801946a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801946c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019470:	fb0c 1c00 	mla	ip, ip, r0, r1
 8019474:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8019478:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 801947c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801947e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019480:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019484:	041b      	lsls	r3, r3, #16
 8019486:	ea4a 0000 	orr.w	r0, sl, r0
 801948a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801948e:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 8019492:	fb02 c000 	mla	r0, r2, r0, ip
 8019496:	ea43 0a0a 	orr.w	sl, r3, sl
 801949a:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 801949e:	fb02 000a 	mla	r0, r2, sl, r0
 80194a2:	0d43      	lsrs	r3, r0, #21
 80194a4:	0940      	lsrs	r0, r0, #5
 80194a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80194ae:	4318      	orrs	r0, r3
 80194b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80194b2:	f82b 0b02 	strh.w	r0, [fp], #2
 80194b6:	441c      	add	r4, r3
 80194b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194ba:	f109 39ff 	add.w	r9, r9, #4294967295
 80194be:	441e      	add	r6, r3
 80194c0:	e6b8      	b.n	8019234 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 80194c2:	b013      	add	sp, #76	; 0x4c
 80194c4:	ecbd 8b0a 	vpop	{d8-d12}
 80194c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80194cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194d0:	8808      	ldrh	r0, [r1, #0]
 80194d2:	b085      	sub	sp, #20
 80194d4:	1206      	asrs	r6, r0, #8
 80194d6:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 80194da:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80194de:	9600      	str	r6, [sp, #0]
 80194e0:	10c6      	asrs	r6, r0, #3
 80194e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80194e6:	9601      	str	r6, [sp, #4]
 80194e8:	00c0      	lsls	r0, r0, #3
 80194ea:	fb04 c603 	mla	r6, r4, r3, ip
 80194ee:	b2c0      	uxtb	r0, r0
 80194f0:	4691      	mov	r9, r2
 80194f2:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 80194f6:	9a00      	ldr	r2, [sp, #0]
 80194f8:	9002      	str	r0, [sp, #8]
 80194fa:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80194fe:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8019502:	9a01      	ldr	r2, [sp, #4]
 8019504:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8019508:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801950c:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019510:	2c00      	cmp	r4, #0
 8019512:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8019516:	db3a      	blt.n	801958e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8019518:	45a0      	cmp	r8, r4
 801951a:	dd38      	ble.n	801958e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 801951c:	f1bc 0f00 	cmp.w	ip, #0
 8019520:	db33      	blt.n	801958a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8019522:	4563      	cmp	r3, ip
 8019524:	dd31      	ble.n	801958a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8019526:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 801952a:	f11c 0601 	adds.w	r6, ip, #1
 801952e:	d431      	bmi.n	8019594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8019530:	42b3      	cmp	r3, r6
 8019532:	dd2f      	ble.n	8019594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8019534:	b375      	cbz	r5, 8019594 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8019536:	f8de 6004 	ldr.w	r6, [lr, #4]
 801953a:	3401      	adds	r4, #1
 801953c:	d42e      	bmi.n	801959c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801953e:	45a0      	cmp	r8, r4
 8019540:	dd2c      	ble.n	801959c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8019542:	b35f      	cbz	r7, 801959c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8019544:	f1bc 0f00 	cmp.w	ip, #0
 8019548:	db26      	blt.n	8019598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801954a:	4563      	cmp	r3, ip
 801954c:	dd24      	ble.n	8019598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801954e:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8019552:	f11c 0c01 	adds.w	ip, ip, #1
 8019556:	d405      	bmi.n	8019564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8019558:	4563      	cmp	r3, ip
 801955a:	dd03      	ble.n	8019564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801955c:	b115      	cbz	r5, 8019564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801955e:	3301      	adds	r3, #1
 8019560:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8019564:	2d0f      	cmp	r5, #15
 8019566:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801956a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801956e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019572:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8019576:	d801      	bhi.n	801957c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8019578:	2f0f      	cmp	r7, #15
 801957a:	d911      	bls.n	80195a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801957c:	4b82      	ldr	r3, [pc, #520]	; (8019788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801957e:	4a83      	ldr	r2, [pc, #524]	; (801978c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 8019580:	4883      	ldr	r0, [pc, #524]	; (8019790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 8019582:	f240 3173 	movw	r1, #883	; 0x373
 8019586:	f002 f9dd 	bl	801b944 <__assert_func>
 801958a:	4602      	mov	r2, r0
 801958c:	e7cd      	b.n	801952a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801958e:	4606      	mov	r6, r0
 8019590:	4602      	mov	r2, r0
 8019592:	e7d2      	b.n	801953a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8019594:	4606      	mov	r6, r0
 8019596:	e7d0      	b.n	801953a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8019598:	4604      	mov	r4, r0
 801959a:	e7da      	b.n	8019552 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 801959c:	4604      	mov	r4, r0
 801959e:	e7e1      	b.n	8019564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80195a0:	b2ab      	uxth	r3, r5
 80195a2:	b2bf      	uxth	r7, r7
 80195a4:	fb03 fe07 	mul.w	lr, r3, r7
 80195a8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80195ac:	011b      	lsls	r3, r3, #4
 80195ae:	eba3 0c0e 	sub.w	ip, r3, lr
 80195b2:	b2bf      	uxth	r7, r7
 80195b4:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80195b8:	fa1f fc8c 	uxth.w	ip, ip
 80195bc:	1bed      	subs	r5, r5, r7
 80195be:	b2ad      	uxth	r5, r5
 80195c0:	fb0c f30a 	mul.w	r3, ip, sl
 80195c4:	fb05 330b 	mla	r3, r5, fp, r3
 80195c8:	fb07 3309 	mla	r3, r7, r9, r3
 80195cc:	fb0e 3308 	mla	r3, lr, r8, r3
 80195d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80195d4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80195d8:	9303      	str	r3, [sp, #12]
 80195da:	d018      	beq.n	801960e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 80195dc:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80195e0:	fb0b f303 	mul.w	r3, fp, r3
 80195e4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80195e8:	fb0b fb02 	mul.w	fp, fp, r2
 80195ec:	0a1a      	lsrs	r2, r3, #8
 80195ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80195f2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80195f6:	441a      	add	r2, r3
 80195f8:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80195fc:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8019600:	0a12      	lsrs	r2, r2, #8
 8019602:	0a1b      	lsrs	r3, r3, #8
 8019604:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019608:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801960c:	431a      	orrs	r2, r3
 801960e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019612:	d019      	beq.n	8019648 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8019614:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019618:	fb0a fb0b 	mul.w	fp, sl, fp
 801961c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019620:	fb0a fa06 	mul.w	sl, sl, r6
 8019624:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019628:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801962c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019630:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8019634:	445e      	add	r6, fp
 8019636:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801963a:	0a36      	lsrs	r6, r6, #8
 801963c:	0a1b      	lsrs	r3, r3, #8
 801963e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019642:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019646:	431e      	orrs	r6, r3
 8019648:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801964c:	d019      	beq.n	8019682 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801964e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8019652:	fb09 fa0a 	mul.w	sl, r9, sl
 8019656:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801965a:	fb09 f904 	mul.w	r9, r9, r4
 801965e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8019662:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019666:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801966a:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801966e:	4454      	add	r4, sl
 8019670:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8019674:	0a24      	lsrs	r4, r4, #8
 8019676:	0a1b      	lsrs	r3, r3, #8
 8019678:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801967c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019680:	431c      	orrs	r4, r3
 8019682:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019686:	d019      	beq.n	80196bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8019688:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801968c:	fb08 f909 	mul.w	r9, r8, r9
 8019690:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019694:	fb08 f800 	mul.w	r8, r8, r0
 8019698:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801969c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80196a0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80196a4:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80196a8:	4448      	add	r0, r9
 80196aa:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80196ae:	0a00      	lsrs	r0, r0, #8
 80196b0:	0a1b      	lsrs	r3, r3, #8
 80196b2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80196b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80196ba:	4318      	orrs	r0, r3
 80196bc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80196c0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80196c4:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80196c8:	fb0c f808 	mul.w	r8, ip, r8
 80196cc:	fb0c f606 	mul.w	r6, ip, r6
 80196d0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80196d4:	fb05 6202 	mla	r2, r5, r2, r6
 80196d8:	fb05 8803 	mla	r8, r5, r3, r8
 80196dc:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80196e0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80196e4:	fb07 8803 	mla	r8, r7, r3, r8
 80196e8:	fb07 2704 	mla	r7, r7, r4, r2
 80196ec:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80196f0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80196f4:	fb0e 8303 	mla	r3, lr, r3, r8
 80196f8:	fb0e 7e00 	mla	lr, lr, r0, r7
 80196fc:	0a1b      	lsrs	r3, r3, #8
 80196fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019702:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019706:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801970a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801970e:	ea43 0e0e 	orr.w	lr, r3, lr
 8019712:	9b03      	ldr	r3, [sp, #12]
 8019714:	b2a4      	uxth	r4, r4
 8019716:	4363      	muls	r3, r4
 8019718:	1c5a      	adds	r2, r3, #1
 801971a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801971e:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8019722:	9b00      	ldr	r3, [sp, #0]
 8019724:	b2d2      	uxtb	r2, r2
 8019726:	ea4f 451e 	mov.w	r5, lr, lsr #16
 801972a:	fb13 f302 	smulbb	r3, r3, r2
 801972e:	fb05 3304 	mla	r3, r5, r4, r3
 8019732:	b29d      	uxth	r5, r3
 8019734:	9b01      	ldr	r3, [sp, #4]
 8019736:	f3ce 2007 	ubfx	r0, lr, #8, #8
 801973a:	fb13 f302 	smulbb	r3, r3, r2
 801973e:	fb00 3004 	mla	r0, r0, r4, r3
 8019742:	9b02      	ldr	r3, [sp, #8]
 8019744:	fa5f fe8e 	uxtb.w	lr, lr
 8019748:	fb13 f202 	smulbb	r2, r3, r2
 801974c:	fb0e 2e04 	mla	lr, lr, r4, r2
 8019750:	fa1f fe8e 	uxth.w	lr, lr
 8019754:	b280      	uxth	r0, r0
 8019756:	f10e 0201 	add.w	r2, lr, #1
 801975a:	1c6b      	adds	r3, r5, #1
 801975c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019760:	1c42      	adds	r2, r0, #1
 8019762:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019766:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801976a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801976e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019772:	0952      	lsrs	r2, r2, #5
 8019774:	ea43 030e 	orr.w	r3, r3, lr
 8019778:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801977c:	4313      	orrs	r3, r2
 801977e:	800b      	strh	r3, [r1, #0]
 8019780:	b005      	add	sp, #20
 8019782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019786:	bf00      	nop
 8019788:	080210bb 	.word	0x080210bb
 801978c:	08021619 	.word	0x08021619
 8019790:	08021143 	.word	0x08021143

08019794 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019798:	ed2d 8b08 	vpush	{d8-d11}
 801979c:	b099      	sub	sp, #100	; 0x64
 801979e:	eeb0 aa40 	vmov.f32	s20, s0
 80197a2:	9306      	str	r3, [sp, #24]
 80197a4:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 80197a8:	9307      	str	r3, [sp, #28]
 80197aa:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80197ae:	9216      	str	r2, [sp, #88]	; 0x58
 80197b0:	9310      	str	r3, [sp, #64]	; 0x40
 80197b2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80197b4:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80197b8:	9113      	str	r1, [sp, #76]	; 0x4c
 80197ba:	9315      	str	r3, [sp, #84]	; 0x54
 80197bc:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80197c0:	9017      	str	r0, [sp, #92]	; 0x5c
 80197c2:	6850      	ldr	r0, [r2, #4]
 80197c4:	6812      	ldr	r2, [r2, #0]
 80197c6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80197c8:	fb00 1303 	mla	r3, r0, r3, r1
 80197cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80197d0:	930a      	str	r3, [sp, #40]	; 0x28
 80197d2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80197d4:	681b      	ldr	r3, [r3, #0]
 80197d6:	9312      	str	r3, [sp, #72]	; 0x48
 80197d8:	9b07      	ldr	r3, [sp, #28]
 80197da:	009b      	lsls	r3, r3, #2
 80197dc:	eef0 9a60 	vmov.f32	s19, s1
 80197e0:	eeb0 9a41 	vmov.f32	s18, s2
 80197e4:	eeb0 8a62 	vmov.f32	s16, s5
 80197e8:	eef0 8a43 	vmov.f32	s17, s6
 80197ec:	eef0 ba44 	vmov.f32	s23, s8
 80197f0:	eeb0 ba64 	vmov.f32	s22, s9
 80197f4:	eef0 aa45 	vmov.f32	s21, s10
 80197f8:	930e      	str	r3, [sp, #56]	; 0x38
 80197fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80197fc:	2b00      	cmp	r3, #0
 80197fe:	dc03      	bgt.n	8019808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8019800:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019802:	2b00      	cmp	r3, #0
 8019804:	f340 8352 	ble.w	8019eac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8019808:	9b06      	ldr	r3, [sp, #24]
 801980a:	2b00      	cmp	r3, #0
 801980c:	f340 81a8 	ble.w	8019b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 8019810:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019812:	1412      	asrs	r2, r2, #16
 8019814:	ea4f 4324 	mov.w	r3, r4, asr #16
 8019818:	d430      	bmi.n	801987c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801981a:	9807      	ldr	r0, [sp, #28]
 801981c:	1c51      	adds	r1, r2, #1
 801981e:	4288      	cmp	r0, r1
 8019820:	dd2f      	ble.n	8019882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8019822:	2b00      	cmp	r3, #0
 8019824:	db2d      	blt.n	8019882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8019826:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019828:	1c59      	adds	r1, r3, #1
 801982a:	4288      	cmp	r0, r1
 801982c:	dd29      	ble.n	8019882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801982e:	9b06      	ldr	r3, [sp, #24]
 8019830:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019832:	992b      	ldr	r1, [sp, #172]	; 0xac
 8019834:	3b01      	subs	r3, #1
 8019836:	fb02 1203 	mla	r2, r2, r3, r1
 801983a:	1412      	asrs	r2, r2, #16
 801983c:	d42c      	bmi.n	8019898 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801983e:	9907      	ldr	r1, [sp, #28]
 8019840:	3201      	adds	r2, #1
 8019842:	4291      	cmp	r1, r2
 8019844:	dd28      	ble.n	8019898 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8019846:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8019848:	fb02 4303 	mla	r3, r2, r3, r4
 801984c:	141b      	asrs	r3, r3, #16
 801984e:	d423      	bmi.n	8019898 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8019850:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019852:	3301      	adds	r3, #1
 8019854:	429a      	cmp	r2, r3
 8019856:	dd1f      	ble.n	8019898 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8019858:	9b06      	ldr	r3, [sp, #24]
 801985a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801985e:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 8019862:	9311      	str	r3, [sp, #68]	; 0x44
 8019864:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019866:	2b00      	cmp	r3, #0
 8019868:	f300 81e3 	bgt.w	8019c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 801986c:	9b06      	ldr	r3, [sp, #24]
 801986e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019872:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019874:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019878:	930a      	str	r3, [sp, #40]	; 0x28
 801987a:	e173      	b.n	8019b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 801987c:	1c51      	adds	r1, r2, #1
 801987e:	f040 8162 	bne.w	8019b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8019882:	9907      	ldr	r1, [sp, #28]
 8019884:	428a      	cmp	r2, r1
 8019886:	f280 815e 	bge.w	8019b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 801988a:	1c5f      	adds	r7, r3, #1
 801988c:	f2c0 815b 	blt.w	8019b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8019890:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019892:	4293      	cmp	r3, r2
 8019894:	f280 8157 	bge.w	8019b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8019898:	9b06      	ldr	r3, [sp, #24]
 801989a:	9314      	str	r3, [sp, #80]	; 0x50
 801989c:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 80198a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80198a2:	9311      	str	r3, [sp, #68]	; 0x44
 80198a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80198a6:	2b00      	cmp	r3, #0
 80198a8:	dde0      	ble.n	801986c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 80198aa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80198ac:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80198b0:	1412      	asrs	r2, r2, #16
 80198b2:	ea4f 4324 	mov.w	r3, r4, asr #16
 80198b6:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80198ba:	f100 81a1 	bmi.w	8019c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 80198be:	9e07      	ldr	r6, [sp, #28]
 80198c0:	1c55      	adds	r5, r2, #1
 80198c2:	42ae      	cmp	r6, r5
 80198c4:	f340 819e 	ble.w	8019c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80198c8:	2b00      	cmp	r3, #0
 80198ca:	f2c0 819b 	blt.w	8019c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80198ce:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80198d0:	1c5d      	adds	r5, r3, #1
 80198d2:	42ae      	cmp	r6, r5
 80198d4:	f340 8196 	ble.w	8019c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80198d8:	9d07      	ldr	r5, [sp, #28]
 80198da:	fb03 2305 	mla	r3, r3, r5, r2
 80198de:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80198e0:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80198e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80198e8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80198ec:	2800      	cmp	r0, #0
 80198ee:	f000 8178 	beq.w	8019be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 80198f2:	686a      	ldr	r2, [r5, #4]
 80198f4:	920b      	str	r2, [sp, #44]	; 0x2c
 80198f6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80198fa:	2900      	cmp	r1, #0
 80198fc:	f000 817a 	beq.w	8019bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 8019900:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019902:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8019904:	18aa      	adds	r2, r5, r2
 8019906:	59ad      	ldr	r5, [r5, r6]
 8019908:	6852      	ldr	r2, [r2, #4]
 801990a:	9508      	str	r5, [sp, #32]
 801990c:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 8019910:	920c      	str	r2, [sp, #48]	; 0x30
 8019912:	0e15      	lsrs	r5, r2, #24
 8019914:	b280      	uxth	r0, r0
 8019916:	b289      	uxth	r1, r1
 8019918:	fb00 fb01 	mul.w	fp, r0, r1
 801991c:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 8019920:	0100      	lsls	r0, r0, #4
 8019922:	eba0 090b 	sub.w	r9, r0, fp
 8019926:	b289      	uxth	r1, r1
 8019928:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 801992c:	fa1f f989 	uxth.w	r9, r9
 8019930:	1a52      	subs	r2, r2, r1
 8019932:	b292      	uxth	r2, r2
 8019934:	fb09 f008 	mul.w	r0, r9, r8
 8019938:	fb02 000c 	mla	r0, r2, ip, r0
 801993c:	fb01 000a 	mla	r0, r1, sl, r0
 8019940:	fb0b 0005 	mla	r0, fp, r5, r0
 8019944:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019948:	2800      	cmp	r0, #0
 801994a:	f000 80ef 	beq.w	8019b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801994e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019952:	d01b      	beq.n	801998c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 8019954:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019958:	fb0c fe0e 	mul.w	lr, ip, lr
 801995c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019960:	fb0c fc03 	mul.w	ip, ip, r3
 8019964:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8019968:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801996c:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019970:	4473      	add	r3, lr
 8019972:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8019976:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 801997a:	0a1b      	lsrs	r3, r3, #8
 801997c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019980:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019984:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019988:	ea43 030e 	orr.w	r3, r3, lr
 801998c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019990:	d01e      	beq.n	80199d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8019992:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8019994:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019998:	fb08 fc0c 	mul.w	ip, r8, ip
 801999c:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 80199a0:	fb08 f80e 	mul.w	r8, r8, lr
 80199a4:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80199a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199ac:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80199b0:	44e6      	add	lr, ip
 80199b2:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80199b6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80199ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199be:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80199c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199c6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80199ca:	ea4e 0608 	orr.w	r6, lr, r8
 80199ce:	960b      	str	r6, [sp, #44]	; 0x2c
 80199d0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80199d4:	d01e      	beq.n	8019a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 80199d6:	9e08      	ldr	r6, [sp, #32]
 80199d8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80199dc:	fb0a f808 	mul.w	r8, sl, r8
 80199e0:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 80199e4:	fb0a fa0c 	mul.w	sl, sl, ip
 80199e8:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80199ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199f0:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80199f4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80199f8:	44c6      	add	lr, r8
 80199fa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80199fe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019a0e:	ea4e 060a 	orr.w	r6, lr, sl
 8019a12:	9608      	str	r6, [sp, #32]
 8019a14:	2dff      	cmp	r5, #255	; 0xff
 8019a16:	d01d      	beq.n	8019a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8019a18:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019a1a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019a1e:	fb05 f808 	mul.w	r8, r5, r8
 8019a22:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8019a26:	fb05 f50c 	mul.w	r5, r5, ip
 8019a2a:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019a2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a32:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019a36:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8019a3a:	44c6      	add	lr, r8
 8019a3c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019a40:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a44:	0a2d      	lsrs	r5, r5, #8
 8019a46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a4a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8019a4e:	ea4e 0505 	orr.w	r5, lr, r5
 8019a52:	950c      	str	r5, [sp, #48]	; 0x30
 8019a54:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019a56:	9e08      	ldr	r6, [sp, #32]
 8019a58:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019a5c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019a60:	fb09 f505 	mul.w	r5, r9, r5
 8019a64:	fb02 550c 	mla	r5, r2, ip, r5
 8019a68:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019a6c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019a6e:	fb01 550c 	mla	r5, r1, ip, r5
 8019a72:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019a76:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8019a78:	fb0b 550c 	mla	r5, fp, ip, r5
 8019a7c:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8019a80:	fb09 f90c 	mul.w	r9, r9, ip
 8019a84:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019a88:	fb02 9303 	mla	r3, r2, r3, r9
 8019a8c:	9a08      	ldr	r2, [sp, #32]
 8019a8e:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8019a92:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019a94:	fb01 330e 	mla	r3, r1, lr, r3
 8019a98:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8019a9c:	fb0b 3b01 	mla	fp, fp, r1, r3
 8019aa0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019aa2:	0a2d      	lsrs	r5, r5, #8
 8019aa4:	f8b3 c000 	ldrh.w	ip, [r3]
 8019aa8:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8019aac:	fb00 f307 	mul.w	r3, r0, r7
 8019ab0:	1c58      	adds	r0, r3, #1
 8019ab2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019ab6:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8019aba:	ea45 050b 	orr.w	r5, r5, fp
 8019abe:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019ac2:	0c29      	lsrs	r1, r5, #16
 8019ac4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019ac8:	ea4f 232c 	mov.w	r3, ip, asr #8
 8019acc:	b2c0      	uxtb	r0, r0
 8019ace:	fb11 f107 	smulbb	r1, r1, r7
 8019ad2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019ad6:	fb03 1300 	mla	r3, r3, r0, r1
 8019ada:	b299      	uxth	r1, r3
 8019adc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019ae0:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8019ae4:	fb13 f307 	smulbb	r3, r3, r7
 8019ae8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019aec:	fb02 3200 	mla	r2, r2, r0, r3
 8019af0:	b2ed      	uxtb	r5, r5
 8019af2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8019af6:	b2db      	uxtb	r3, r3
 8019af8:	fb15 f507 	smulbb	r5, r5, r7
 8019afc:	fb03 5500 	mla	r5, r3, r0, r5
 8019b00:	b292      	uxth	r2, r2
 8019b02:	b2ad      	uxth	r5, r5
 8019b04:	1c4b      	adds	r3, r1, #1
 8019b06:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019b0a:	1c68      	adds	r0, r5, #1
 8019b0c:	1c51      	adds	r1, r2, #1
 8019b0e:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8019b12:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019b16:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019b1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019b1e:	0952      	lsrs	r2, r2, #5
 8019b20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019b24:	432b      	orrs	r3, r5
 8019b26:	4313      	orrs	r3, r2
 8019b28:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019b2a:	8013      	strh	r3, [r2, #0]
 8019b2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019b2e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019b30:	3302      	adds	r3, #2
 8019b32:	9311      	str	r3, [sp, #68]	; 0x44
 8019b34:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019b36:	4413      	add	r3, r2
 8019b38:	932b      	str	r3, [sp, #172]	; 0xac
 8019b3a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019b3c:	441c      	add	r4, r3
 8019b3e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019b40:	3b01      	subs	r3, #1
 8019b42:	9314      	str	r3, [sp, #80]	; 0x50
 8019b44:	e6ae      	b.n	80198a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8019b46:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019b48:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019b4a:	4413      	add	r3, r2
 8019b4c:	932b      	str	r3, [sp, #172]	; 0xac
 8019b4e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019b50:	441c      	add	r4, r3
 8019b52:	9b06      	ldr	r3, [sp, #24]
 8019b54:	3b01      	subs	r3, #1
 8019b56:	9306      	str	r3, [sp, #24]
 8019b58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b5a:	3302      	adds	r3, #2
 8019b5c:	930a      	str	r3, [sp, #40]	; 0x28
 8019b5e:	e653      	b.n	8019808 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8019b60:	f47f ae65 	bne.w	801982e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8019b64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019b66:	2b00      	cmp	r3, #0
 8019b68:	f340 81a0 	ble.w	8019eac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8019b6c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019b70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019b74:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019b78:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019b7a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019b7e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019b82:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019b86:	eef0 6a48 	vmov.f32	s13, s16
 8019b8a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019b8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b92:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019b96:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8019b9a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019b9e:	eef0 6a68 	vmov.f32	s13, s17
 8019ba2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019ba6:	ee18 2a10 	vmov	r2, s16
 8019baa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019bae:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bb2:	ee18 2a90 	vmov	r2, s17
 8019bb6:	932d      	str	r3, [sp, #180]	; 0xb4
 8019bb8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019bba:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bbe:	932e      	str	r3, [sp, #184]	; 0xb8
 8019bc0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019bc2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019bc4:	3b01      	subs	r3, #1
 8019bc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019bca:	9313      	str	r3, [sp, #76]	; 0x4c
 8019bcc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019bce:	bf08      	it	eq
 8019bd0:	4613      	moveq	r3, r2
 8019bd2:	ee16 4a90 	vmov	r4, s13
 8019bd6:	9306      	str	r3, [sp, #24]
 8019bd8:	eef0 8a67 	vmov.f32	s17, s15
 8019bdc:	eeb0 8a47 	vmov.f32	s16, s14
 8019be0:	e60b      	b.n	80197fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8019be2:	b151      	cbz	r1, 8019bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019be4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019be6:	58aa      	ldr	r2, [r5, r2]
 8019be8:	9208      	str	r2, [sp, #32]
 8019bea:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8019bee:	25ff      	movs	r5, #255	; 0xff
 8019bf0:	46a8      	mov	r8, r5
 8019bf2:	e68f      	b.n	8019914 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8019bf4:	25ff      	movs	r5, #255	; 0xff
 8019bf6:	46aa      	mov	sl, r5
 8019bf8:	e68c      	b.n	8019914 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8019bfa:	25ff      	movs	r5, #255	; 0xff
 8019bfc:	46aa      	mov	sl, r5
 8019bfe:	e7f7      	b.n	8019bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 8019c00:	1c56      	adds	r6, r2, #1
 8019c02:	d193      	bne.n	8019b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c04:	9d07      	ldr	r5, [sp, #28]
 8019c06:	4295      	cmp	r5, r2
 8019c08:	dd90      	ble.n	8019b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c0a:	1c5d      	adds	r5, r3, #1
 8019c0c:	db8e      	blt.n	8019b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c0e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019c10:	429d      	cmp	r5, r3
 8019c12:	dd8b      	ble.n	8019b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c14:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019c16:	9201      	str	r2, [sp, #4]
 8019c18:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8019c1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c1e:	9300      	str	r3, [sp, #0]
 8019c20:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019c24:	9b07      	ldr	r3, [sp, #28]
 8019c26:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019c28:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8019c2c:	f7ff fc4e 	bl	80194cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019c30:	e77c      	b.n	8019b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c32:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019c34:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019c36:	9d07      	ldr	r5, [sp, #28]
 8019c38:	1412      	asrs	r2, r2, #16
 8019c3a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8019c3e:	1423      	asrs	r3, r4, #16
 8019c40:	fb05 2303 	mla	r3, r5, r3, r2
 8019c44:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019c46:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8019c4a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8019c4e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019c52:	0e1e      	lsrs	r6, r3, #24
 8019c54:	2900      	cmp	r1, #0
 8019c56:	f000 811a 	beq.w	8019e8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8019c5a:	686a      	ldr	r2, [r5, #4]
 8019c5c:	920d      	str	r2, [sp, #52]	; 0x34
 8019c5e:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8019c62:	2800      	cmp	r0, #0
 8019c64:	f000 811c 	beq.w	8019ea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8019c68:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019c6a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019c6c:	18aa      	adds	r2, r5, r2
 8019c6e:	59ed      	ldr	r5, [r5, r7]
 8019c70:	6852      	ldr	r2, [r2, #4]
 8019c72:	9509      	str	r5, [sp, #36]	; 0x24
 8019c74:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8019c78:	920f      	str	r2, [sp, #60]	; 0x3c
 8019c7a:	0e15      	lsrs	r5, r2, #24
 8019c7c:	b289      	uxth	r1, r1
 8019c7e:	b280      	uxth	r0, r0
 8019c80:	fb01 f900 	mul.w	r9, r1, r0
 8019c84:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019c88:	0109      	lsls	r1, r1, #4
 8019c8a:	eba1 0e09 	sub.w	lr, r1, r9
 8019c8e:	b280      	uxth	r0, r0
 8019c90:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8019c94:	fa1f fe8e 	uxth.w	lr, lr
 8019c98:	1a12      	subs	r2, r2, r0
 8019c9a:	b292      	uxth	r2, r2
 8019c9c:	fb0e f10c 	mul.w	r1, lr, ip
 8019ca0:	fb02 1106 	mla	r1, r2, r6, r1
 8019ca4:	fb00 1108 	mla	r1, r0, r8, r1
 8019ca8:	fb09 1105 	mla	r1, r9, r5, r1
 8019cac:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019cb0:	2900      	cmp	r1, #0
 8019cb2:	f000 80e0 	beq.w	8019e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8019cb6:	2eff      	cmp	r6, #255	; 0xff
 8019cb8:	d016      	beq.n	8019ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8019cba:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8019cbe:	4377      	muls	r7, r6
 8019cc0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019cc4:	435e      	muls	r6, r3
 8019cc6:	0a3b      	lsrs	r3, r7, #8
 8019cc8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019ccc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019cd0:	443b      	add	r3, r7
 8019cd2:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8019cd6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8019cda:	0a1b      	lsrs	r3, r3, #8
 8019cdc:	0a3f      	lsrs	r7, r7, #8
 8019cde:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019ce2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019ce6:	433b      	orrs	r3, r7
 8019ce8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019cec:	d01d      	beq.n	8019d2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8019cee:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8019cf0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8019cf2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019cf6:	fb0c f606 	mul.w	r6, ip, r6
 8019cfa:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019cfe:	fb0c fc07 	mul.w	ip, ip, r7
 8019d02:	0a37      	lsrs	r7, r6, #8
 8019d04:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019d08:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8019d0c:	4437      	add	r7, r6
 8019d0e:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8019d12:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8019d16:	0a3f      	lsrs	r7, r7, #8
 8019d18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d1c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019d20:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019d24:	ea47 060c 	orr.w	r6, r7, ip
 8019d28:	960d      	str	r6, [sp, #52]	; 0x34
 8019d2a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019d2e:	d01d      	beq.n	8019d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8019d30:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8019d32:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019d36:	fb08 fc0c 	mul.w	ip, r8, ip
 8019d3a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019d3e:	fb08 f806 	mul.w	r8, r8, r6
 8019d42:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8019d46:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8019d4a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019d4e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019d52:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8019d56:	4467      	add	r7, ip
 8019d58:	0a3f      	lsrs	r7, r7, #8
 8019d5a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019d5e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019d62:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019d66:	ea47 0608 	orr.w	r6, r7, r8
 8019d6a:	9609      	str	r6, [sp, #36]	; 0x24
 8019d6c:	2dff      	cmp	r5, #255	; 0xff
 8019d6e:	d01a      	beq.n	8019da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 8019d70:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8019d72:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019d76:	fb05 fc0c 	mul.w	ip, r5, ip
 8019d7a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019d7e:	4375      	muls	r5, r6
 8019d80:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8019d84:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019d88:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019d8c:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8019d90:	4467      	add	r7, ip
 8019d92:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8019d96:	0a3f      	lsrs	r7, r7, #8
 8019d98:	0a2d      	lsrs	r5, r5, #8
 8019d9a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019d9e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8019da2:	433d      	orrs	r5, r7
 8019da4:	950f      	str	r5, [sp, #60]	; 0x3c
 8019da6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019da8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019dac:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8019db0:	fb0e f505 	mul.w	r5, lr, r5
 8019db4:	fb02 5506 	mla	r5, r2, r6, r5
 8019db8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8019dba:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019dbe:	fb00 5506 	mla	r5, r0, r6, r5
 8019dc2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8019dc4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019dc8:	fb09 5506 	mla	r5, r9, r6, r5
 8019dcc:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8019dce:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019dd2:	fb0e fe06 	mul.w	lr, lr, r6
 8019dd6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019dda:	fb02 e303 	mla	r3, r2, r3, lr
 8019dde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019de0:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8019de4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019de6:	fb00 3307 	mla	r3, r0, r7, r3
 8019dea:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019dee:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019df2:	fb01 f10b 	mul.w	r1, r1, fp
 8019df6:	0a2d      	lsrs	r5, r5, #8
 8019df8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019dfc:	f8ba 0000 	ldrh.w	r0, [sl]
 8019e00:	1c4b      	adds	r3, r1, #1
 8019e02:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019e06:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019e0a:	ea45 050c 	orr.w	r5, r5, ip
 8019e0e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019e12:	1202      	asrs	r2, r0, #8
 8019e14:	0c2b      	lsrs	r3, r5, #16
 8019e16:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019e1a:	b2c9      	uxtb	r1, r1
 8019e1c:	fb13 f30b 	smulbb	r3, r3, fp
 8019e20:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019e24:	fb02 3201 	mla	r2, r2, r1, r3
 8019e28:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8019e2c:	10c3      	asrs	r3, r0, #3
 8019e2e:	b2ed      	uxtb	r5, r5
 8019e30:	00c0      	lsls	r0, r0, #3
 8019e32:	b2c0      	uxtb	r0, r0
 8019e34:	fb15 f50b 	smulbb	r5, r5, fp
 8019e38:	fb00 5001 	mla	r0, r0, r1, r5
 8019e3c:	b292      	uxth	r2, r2
 8019e3e:	fb16 f60b 	smulbb	r6, r6, fp
 8019e42:	b280      	uxth	r0, r0
 8019e44:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019e48:	fb03 6301 	mla	r3, r3, r1, r6
 8019e4c:	1c51      	adds	r1, r2, #1
 8019e4e:	1c46      	adds	r6, r0, #1
 8019e50:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019e54:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8019e58:	b29b      	uxth	r3, r3
 8019e5a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019e5e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019e62:	4332      	orrs	r2, r6
 8019e64:	1c5e      	adds	r6, r3, #1
 8019e66:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8019e6a:	095b      	lsrs	r3, r3, #5
 8019e6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019e70:	431a      	orrs	r2, r3
 8019e72:	f8aa 2000 	strh.w	r2, [sl]
 8019e76:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019e78:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019e7a:	4413      	add	r3, r2
 8019e7c:	932b      	str	r3, [sp, #172]	; 0xac
 8019e7e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019e80:	441c      	add	r4, r3
 8019e82:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019e84:	3b01      	subs	r3, #1
 8019e86:	f10a 0a02 	add.w	sl, sl, #2
 8019e8a:	9311      	str	r3, [sp, #68]	; 0x44
 8019e8c:	e4ea      	b.n	8019864 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8019e8e:	b150      	cbz	r0, 8019ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 8019e90:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019e92:	58aa      	ldr	r2, [r5, r2]
 8019e94:	9209      	str	r2, [sp, #36]	; 0x24
 8019e96:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019e9a:	25ff      	movs	r5, #255	; 0xff
 8019e9c:	46ac      	mov	ip, r5
 8019e9e:	e6ed      	b.n	8019c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8019ea0:	25ff      	movs	r5, #255	; 0xff
 8019ea2:	46a8      	mov	r8, r5
 8019ea4:	e6ea      	b.n	8019c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8019ea6:	25ff      	movs	r5, #255	; 0xff
 8019ea8:	46a8      	mov	r8, r5
 8019eaa:	e7f7      	b.n	8019e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8019eac:	b019      	add	sp, #100	; 0x64
 8019eae:	ecbd 8b08 	vpop	{d8-d11}
 8019eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019eb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ebc:	8808      	ldrh	r0, [r1, #0]
 8019ebe:	b085      	sub	sp, #20
 8019ec0:	1206      	asrs	r6, r0, #8
 8019ec2:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8019ec6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019eca:	9600      	str	r6, [sp, #0]
 8019ecc:	10c6      	asrs	r6, r0, #3
 8019ece:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019ed2:	9601      	str	r6, [sp, #4]
 8019ed4:	00c0      	lsls	r0, r0, #3
 8019ed6:	fb04 c603 	mla	r6, r4, r3, ip
 8019eda:	b2c0      	uxtb	r0, r0
 8019edc:	4691      	mov	r9, r2
 8019ede:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8019ee2:	9a00      	ldr	r2, [sp, #0]
 8019ee4:	9002      	str	r0, [sp, #8]
 8019ee6:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8019eea:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8019eee:	9a01      	ldr	r2, [sp, #4]
 8019ef0:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8019ef4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8019ef8:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019efc:	2c00      	cmp	r4, #0
 8019efe:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8019f02:	db3a      	blt.n	8019f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019f04:	45a0      	cmp	r8, r4
 8019f06:	dd38      	ble.n	8019f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019f08:	f1bc 0f00 	cmp.w	ip, #0
 8019f0c:	db33      	blt.n	8019f76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019f0e:	4563      	cmp	r3, ip
 8019f10:	dd31      	ble.n	8019f76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019f12:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8019f16:	f11c 0601 	adds.w	r6, ip, #1
 8019f1a:	d431      	bmi.n	8019f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019f1c:	42b3      	cmp	r3, r6
 8019f1e:	dd2f      	ble.n	8019f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019f20:	b375      	cbz	r5, 8019f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019f22:	f8de 6004 	ldr.w	r6, [lr, #4]
 8019f26:	3401      	adds	r4, #1
 8019f28:	d42e      	bmi.n	8019f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019f2a:	45a0      	cmp	r8, r4
 8019f2c:	dd2c      	ble.n	8019f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019f2e:	b35f      	cbz	r7, 8019f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019f30:	f1bc 0f00 	cmp.w	ip, #0
 8019f34:	db26      	blt.n	8019f84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019f36:	4563      	cmp	r3, ip
 8019f38:	dd24      	ble.n	8019f84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019f3a:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8019f3e:	f11c 0c01 	adds.w	ip, ip, #1
 8019f42:	d405      	bmi.n	8019f50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019f44:	4563      	cmp	r3, ip
 8019f46:	dd03      	ble.n	8019f50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019f48:	b115      	cbz	r5, 8019f50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019f4a:	3301      	adds	r3, #1
 8019f4c:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8019f50:	2d0f      	cmp	r5, #15
 8019f52:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019f56:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019f5a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019f5e:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8019f62:	d801      	bhi.n	8019f68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8019f64:	2f0f      	cmp	r7, #15
 8019f66:	d911      	bls.n	8019f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8019f68:	4b7b      	ldr	r3, [pc, #492]	; (801a158 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8019f6a:	4a7c      	ldr	r2, [pc, #496]	; (801a15c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8019f6c:	487c      	ldr	r0, [pc, #496]	; (801a160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 8019f6e:	f240 3173 	movw	r1, #883	; 0x373
 8019f72:	f001 fce7 	bl	801b944 <__assert_func>
 8019f76:	4602      	mov	r2, r0
 8019f78:	e7cd      	b.n	8019f16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019f7a:	4606      	mov	r6, r0
 8019f7c:	4602      	mov	r2, r0
 8019f7e:	e7d2      	b.n	8019f26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8019f80:	4606      	mov	r6, r0
 8019f82:	e7d0      	b.n	8019f26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8019f84:	4604      	mov	r4, r0
 8019f86:	e7da      	b.n	8019f3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019f88:	4604      	mov	r4, r0
 8019f8a:	e7e1      	b.n	8019f50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019f8c:	b2ab      	uxth	r3, r5
 8019f8e:	b2bf      	uxth	r7, r7
 8019f90:	fb03 fe07 	mul.w	lr, r3, r7
 8019f94:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019f98:	011b      	lsls	r3, r3, #4
 8019f9a:	eba3 0c0e 	sub.w	ip, r3, lr
 8019f9e:	b2bf      	uxth	r7, r7
 8019fa0:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8019fa4:	fa1f fc8c 	uxth.w	ip, ip
 8019fa8:	1bed      	subs	r5, r5, r7
 8019faa:	b2ad      	uxth	r5, r5
 8019fac:	fb0c f30a 	mul.w	r3, ip, sl
 8019fb0:	fb05 330b 	mla	r3, r5, fp, r3
 8019fb4:	fb07 3309 	mla	r3, r7, r9, r3
 8019fb8:	fb0e 3308 	mla	r3, lr, r8, r3
 8019fbc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019fc0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019fc4:	9303      	str	r3, [sp, #12]
 8019fc6:	d018      	beq.n	8019ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8019fc8:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8019fcc:	fb0b f303 	mul.w	r3, fp, r3
 8019fd0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019fd4:	fb0b fb02 	mul.w	fp, fp, r2
 8019fd8:	0a1a      	lsrs	r2, r3, #8
 8019fda:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019fde:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8019fe2:	441a      	add	r2, r3
 8019fe4:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8019fe8:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8019fec:	0a12      	lsrs	r2, r2, #8
 8019fee:	0a1b      	lsrs	r3, r3, #8
 8019ff0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019ff4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019ff8:	431a      	orrs	r2, r3
 8019ffa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019ffe:	d019      	beq.n	801a034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 801a000:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801a004:	fb0a fb0b 	mul.w	fp, sl, fp
 801a008:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a00c:	fb0a fa06 	mul.w	sl, sl, r6
 801a010:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801a014:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a018:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a01c:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801a020:	445e      	add	r6, fp
 801a022:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801a026:	0a36      	lsrs	r6, r6, #8
 801a028:	0a1b      	lsrs	r3, r3, #8
 801a02a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a02e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a032:	431e      	orrs	r6, r3
 801a034:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a038:	d019      	beq.n	801a06e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801a03a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a03e:	fb09 fa0a 	mul.w	sl, r9, sl
 801a042:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a046:	fb09 f904 	mul.w	r9, r9, r4
 801a04a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a04e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a052:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a056:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801a05a:	4454      	add	r4, sl
 801a05c:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801a060:	0a24      	lsrs	r4, r4, #8
 801a062:	0a1b      	lsrs	r3, r3, #8
 801a064:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a068:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a06c:	431c      	orrs	r4, r3
 801a06e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a072:	d019      	beq.n	801a0a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 801a074:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801a078:	fb08 f909 	mul.w	r9, r8, r9
 801a07c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a080:	fb08 f800 	mul.w	r8, r8, r0
 801a084:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801a088:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a08c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a090:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801a094:	4448      	add	r0, r9
 801a096:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801a09a:	0a00      	lsrs	r0, r0, #8
 801a09c:	0a1b      	lsrs	r3, r3, #8
 801a09e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a0a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a0a6:	4318      	orrs	r0, r3
 801a0a8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a0ac:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a0b0:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801a0b4:	fb0c f808 	mul.w	r8, ip, r8
 801a0b8:	fb0c f606 	mul.w	r6, ip, r6
 801a0bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a0c0:	fb05 8803 	mla	r8, r5, r3, r8
 801a0c4:	fb05 6202 	mla	r2, r5, r2, r6
 801a0c8:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801a0cc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a0d0:	fb07 8803 	mla	r8, r7, r3, r8
 801a0d4:	fb07 2704 	mla	r7, r7, r4, r2
 801a0d8:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801a0dc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a0e0:	fb0e 8303 	mla	r3, lr, r3, r8
 801a0e4:	fb0e 7e00 	mla	lr, lr, r0, r7
 801a0e8:	0a1b      	lsrs	r3, r3, #8
 801a0ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a0ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a0f2:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a0f6:	ea43 0e0e 	orr.w	lr, r3, lr
 801a0fa:	9b03      	ldr	r3, [sp, #12]
 801a0fc:	9800      	ldr	r0, [sp, #0]
 801a0fe:	9c01      	ldr	r4, [sp, #4]
 801a100:	9a02      	ldr	r2, [sp, #8]
 801a102:	43db      	mvns	r3, r3
 801a104:	b2db      	uxtb	r3, r3
 801a106:	4358      	muls	r0, r3
 801a108:	435c      	muls	r4, r3
 801a10a:	435a      	muls	r2, r3
 801a10c:	1c43      	adds	r3, r0, #1
 801a10e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a112:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801a116:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a11a:	4b12      	ldr	r3, [pc, #72]	; (801a164 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 801a11c:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 801a120:	1c50      	adds	r0, r2, #1
 801a122:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801a126:	fa5f f28e 	uxtb.w	r2, lr
 801a12a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a12e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801a132:	1c62      	adds	r2, r4, #1
 801a134:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a138:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801a13c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801a140:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a144:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801a148:	ea43 0e0e 	orr.w	lr, r3, lr
 801a14c:	f8a1 e000 	strh.w	lr, [r1]
 801a150:	b005      	add	sp, #20
 801a152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a156:	bf00      	nop
 801a158:	080210bb 	.word	0x080210bb
 801a15c:	08021619 	.word	0x08021619
 801a160:	08021143 	.word	0x08021143
 801a164:	fffff800 	.word	0xfffff800

0801a168 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801a168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a16c:	ed2d 8b08 	vpush	{d8-d11}
 801a170:	b097      	sub	sp, #92	; 0x5c
 801a172:	eeb0 aa40 	vmov.f32	s20, s0
 801a176:	9306      	str	r3, [sp, #24]
 801a178:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 801a17c:	9307      	str	r3, [sp, #28]
 801a17e:	9214      	str	r2, [sp, #80]	; 0x50
 801a180:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 801a184:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a186:	9112      	str	r1, [sp, #72]	; 0x48
 801a188:	9310      	str	r3, [sp, #64]	; 0x40
 801a18a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801a18e:	9015      	str	r0, [sp, #84]	; 0x54
 801a190:	6850      	ldr	r0, [r2, #4]
 801a192:	6812      	ldr	r2, [r2, #0]
 801a194:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801a196:	fb00 1303 	mla	r3, r0, r3, r1
 801a19a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a19e:	930a      	str	r3, [sp, #40]	; 0x28
 801a1a0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a1a2:	681b      	ldr	r3, [r3, #0]
 801a1a4:	9311      	str	r3, [sp, #68]	; 0x44
 801a1a6:	9b07      	ldr	r3, [sp, #28]
 801a1a8:	009b      	lsls	r3, r3, #2
 801a1aa:	eef0 9a60 	vmov.f32	s19, s1
 801a1ae:	eeb0 9a41 	vmov.f32	s18, s2
 801a1b2:	eeb0 8a62 	vmov.f32	s16, s5
 801a1b6:	eef0 8a43 	vmov.f32	s17, s6
 801a1ba:	eef0 ba44 	vmov.f32	s23, s8
 801a1be:	eeb0 ba64 	vmov.f32	s22, s9
 801a1c2:	eef0 aa45 	vmov.f32	s21, s10
 801a1c6:	930e      	str	r3, [sp, #56]	; 0x38
 801a1c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a1ca:	2b00      	cmp	r3, #0
 801a1cc:	dc03      	bgt.n	801a1d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801a1ce:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a1d0:	2b00      	cmp	r3, #0
 801a1d2:	f340 8361 	ble.w	801a898 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801a1d6:	9b06      	ldr	r3, [sp, #24]
 801a1d8:	2b00      	cmp	r3, #0
 801a1da:	f340 819b 	ble.w	801a514 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 801a1de:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a1e0:	1412      	asrs	r2, r2, #16
 801a1e2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a1e6:	d42e      	bmi.n	801a246 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801a1e8:	9807      	ldr	r0, [sp, #28]
 801a1ea:	1c51      	adds	r1, r2, #1
 801a1ec:	4288      	cmp	r0, r1
 801a1ee:	dd2d      	ble.n	801a24c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801a1f0:	2b00      	cmp	r3, #0
 801a1f2:	db2b      	blt.n	801a24c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801a1f4:	9810      	ldr	r0, [sp, #64]	; 0x40
 801a1f6:	1c59      	adds	r1, r3, #1
 801a1f8:	4288      	cmp	r0, r1
 801a1fa:	dd27      	ble.n	801a24c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801a1fc:	9b06      	ldr	r3, [sp, #24]
 801a1fe:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a200:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801a202:	3b01      	subs	r3, #1
 801a204:	fb02 1203 	mla	r2, r2, r3, r1
 801a208:	1412      	asrs	r2, r2, #16
 801a20a:	d42a      	bmi.n	801a262 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801a20c:	9907      	ldr	r1, [sp, #28]
 801a20e:	3201      	adds	r2, #1
 801a210:	4291      	cmp	r1, r2
 801a212:	dd26      	ble.n	801a262 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801a214:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801a216:	fb02 5303 	mla	r3, r2, r3, r5
 801a21a:	141b      	asrs	r3, r3, #16
 801a21c:	d421      	bmi.n	801a262 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801a21e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a220:	3301      	adds	r3, #1
 801a222:	429a      	cmp	r2, r3
 801a224:	dd1d      	ble.n	801a262 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801a226:	9b06      	ldr	r3, [sp, #24]
 801a228:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801a22c:	9313      	str	r3, [sp, #76]	; 0x4c
 801a22e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a230:	2b00      	cmp	r3, #0
 801a232:	f300 81e3 	bgt.w	801a5fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 801a236:	9b06      	ldr	r3, [sp, #24]
 801a238:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a23c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a23e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a242:	930a      	str	r3, [sp, #40]	; 0x28
 801a244:	e168      	b.n	801a518 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 801a246:	1c51      	adds	r1, r2, #1
 801a248:	f040 8157 	bne.w	801a4fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801a24c:	9907      	ldr	r1, [sp, #28]
 801a24e:	428a      	cmp	r2, r1
 801a250:	f280 8153 	bge.w	801a4fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801a254:	1c5f      	adds	r7, r3, #1
 801a256:	f2c0 8150 	blt.w	801a4fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801a25a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a25c:	4293      	cmp	r3, r2
 801a25e:	f280 814c 	bge.w	801a4fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801a262:	9b06      	ldr	r3, [sp, #24]
 801a264:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a266:	9313      	str	r3, [sp, #76]	; 0x4c
 801a268:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a26a:	2b00      	cmp	r3, #0
 801a26c:	dde3      	ble.n	801a236 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801a26e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801a270:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a272:	1409      	asrs	r1, r1, #16
 801a274:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a278:	f3c2 3203 	ubfx	r2, r2, #12, #4
 801a27c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a280:	f100 81a3 	bmi.w	801a5ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 801a284:	9c07      	ldr	r4, [sp, #28]
 801a286:	1c4e      	adds	r6, r1, #1
 801a288:	42b4      	cmp	r4, r6
 801a28a:	f340 81a0 	ble.w	801a5ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801a28e:	2b00      	cmp	r3, #0
 801a290:	f2c0 819d 	blt.w	801a5ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801a294:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a296:	1c5e      	adds	r6, r3, #1
 801a298:	42b4      	cmp	r4, r6
 801a29a:	f340 8198 	ble.w	801a5ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801a29e:	9c07      	ldr	r4, [sp, #28]
 801a2a0:	fb03 1304 	mla	r3, r3, r4, r1
 801a2a4:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a2a6:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 801a2aa:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801a2ae:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a2b2:	2a00      	cmp	r2, #0
 801a2b4:	f000 816f 	beq.w	801a596 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 801a2b8:	6871      	ldr	r1, [r6, #4]
 801a2ba:	910b      	str	r1, [sp, #44]	; 0x2c
 801a2bc:	ea4f 6811 	mov.w	r8, r1, lsr #24
 801a2c0:	2800      	cmp	r0, #0
 801a2c2:	f000 8171 	beq.w	801a5a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 801a2c6:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a2c8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a2ca:	1871      	adds	r1, r6, r1
 801a2cc:	5934      	ldr	r4, [r6, r4]
 801a2ce:	6849      	ldr	r1, [r1, #4]
 801a2d0:	9408      	str	r4, [sp, #32]
 801a2d2:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 801a2d6:	910c      	str	r1, [sp, #48]	; 0x30
 801a2d8:	0e0e      	lsrs	r6, r1, #24
 801a2da:	b292      	uxth	r2, r2
 801a2dc:	b280      	uxth	r0, r0
 801a2de:	fb02 fb00 	mul.w	fp, r2, r0
 801a2e2:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801a2e6:	0112      	lsls	r2, r2, #4
 801a2e8:	eba2 090b 	sub.w	r9, r2, fp
 801a2ec:	b280      	uxth	r0, r0
 801a2ee:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a2f2:	fa1f f989 	uxth.w	r9, r9
 801a2f6:	1a09      	subs	r1, r1, r0
 801a2f8:	b289      	uxth	r1, r1
 801a2fa:	fb09 f208 	mul.w	r2, r9, r8
 801a2fe:	fb01 220c 	mla	r2, r1, ip, r2
 801a302:	fb00 220a 	mla	r2, r0, sl, r2
 801a306:	fb0b 2206 	mla	r2, fp, r6, r2
 801a30a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a30e:	2a00      	cmp	r2, #0
 801a310:	f000 80e8 	beq.w	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a314:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a318:	d01b      	beq.n	801a352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801a31a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a31e:	fb0c fe0e 	mul.w	lr, ip, lr
 801a322:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a326:	fb0c fc03 	mul.w	ip, ip, r3
 801a32a:	ea4f 231e 	mov.w	r3, lr, lsr #8
 801a32e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a332:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801a336:	4473      	add	r3, lr
 801a338:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801a33c:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 801a340:	0a1b      	lsrs	r3, r3, #8
 801a342:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a346:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a34a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a34e:	ea43 030e 	orr.w	r3, r3, lr
 801a352:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a356:	d01e      	beq.n	801a396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 801a358:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a35a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a35e:	fb08 fc0c 	mul.w	ip, r8, ip
 801a362:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a366:	fb08 f80e 	mul.w	r8, r8, lr
 801a36a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801a36e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a372:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a376:	44e6      	add	lr, ip
 801a378:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801a37c:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801a380:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a384:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a388:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a38c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a390:	ea4e 0408 	orr.w	r4, lr, r8
 801a394:	940b      	str	r4, [sp, #44]	; 0x2c
 801a396:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a39a:	d01e      	beq.n	801a3da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 801a39c:	9c08      	ldr	r4, [sp, #32]
 801a39e:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a3a2:	fb0a f808 	mul.w	r8, sl, r8
 801a3a6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a3aa:	fb0a fa0c 	mul.w	sl, sl, ip
 801a3ae:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801a3b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3b6:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801a3ba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a3be:	44c6      	add	lr, r8
 801a3c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a3c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a3c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a3cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a3d4:	ea4e 040a 	orr.w	r4, lr, sl
 801a3d8:	9408      	str	r4, [sp, #32]
 801a3da:	2eff      	cmp	r6, #255	; 0xff
 801a3dc:	d01d      	beq.n	801a41a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 801a3de:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a3e0:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a3e4:	fb06 f808 	mul.w	r8, r6, r8
 801a3e8:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a3ec:	fb06 f60c 	mul.w	r6, r6, ip
 801a3f0:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801a3f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3f8:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801a3fc:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 801a400:	44c6      	add	lr, r8
 801a402:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801a406:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a40a:	0a36      	lsrs	r6, r6, #8
 801a40c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a410:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a414:	ea4e 0406 	orr.w	r4, lr, r6
 801a418:	940c      	str	r4, [sp, #48]	; 0x30
 801a41a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a41c:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801a420:	9c08      	ldr	r4, [sp, #32]
 801a422:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a426:	fb09 f606 	mul.w	r6, r9, r6
 801a42a:	fb01 660c 	mla	r6, r1, ip, r6
 801a42e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a432:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a434:	fb00 660c 	mla	r6, r0, ip, r6
 801a438:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a43c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a43e:	fb0b 660c 	mla	r6, fp, ip, r6
 801a442:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a446:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a44a:	fb09 f90c 	mul.w	r9, r9, ip
 801a44e:	fb01 9303 	mla	r3, r1, r3, r9
 801a452:	9908      	ldr	r1, [sp, #32]
 801a454:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801a458:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a45a:	fb00 330e 	mla	r3, r0, lr, r3
 801a45e:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a462:	fb0b 3b00 	mla	fp, fp, r0, r3
 801a466:	0a36      	lsrs	r6, r6, #8
 801a468:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801a46c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a470:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801a474:	ea46 060b 	orr.w	r6, r6, fp
 801a478:	2aff      	cmp	r2, #255	; 0xff
 801a47a:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801a47e:	f000 8099 	beq.w	801a5b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 801a482:	8839      	ldrh	r1, [r7, #0]
 801a484:	43d2      	mvns	r2, r2
 801a486:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801a48a:	fa5f fe82 	uxtb.w	lr, r2
 801a48e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a492:	fb0c fc0e 	mul.w	ip, ip, lr
 801a496:	10c8      	asrs	r0, r1, #3
 801a498:	00ca      	lsls	r2, r1, #3
 801a49a:	f10c 0101 	add.w	r1, ip, #1
 801a49e:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801a4a2:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 801a4a6:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a4aa:	b2d2      	uxtb	r2, r2
 801a4ac:	4952      	ldr	r1, [pc, #328]	; (801a5f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 801a4ae:	fb02 f20e 	mul.w	r2, r2, lr
 801a4b2:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801a4b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a4ba:	1c51      	adds	r1, r2, #1
 801a4bc:	fb00 f00e 	mul.w	r0, r0, lr
 801a4c0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a4c4:	b2f6      	uxtb	r6, r6
 801a4c6:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801a4ca:	1c42      	adds	r2, r0, #1
 801a4cc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a4d0:	b2db      	uxtb	r3, r3
 801a4d2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a4d6:	00db      	lsls	r3, r3, #3
 801a4d8:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 801a4dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a4e0:	431e      	orrs	r6, r3
 801a4e2:	803e      	strh	r6, [r7, #0]
 801a4e4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a4e6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a4e8:	441a      	add	r2, r3
 801a4ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a4ec:	9229      	str	r2, [sp, #164]	; 0xa4
 801a4ee:	441d      	add	r5, r3
 801a4f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a4f2:	3b01      	subs	r3, #1
 801a4f4:	3702      	adds	r7, #2
 801a4f6:	9313      	str	r3, [sp, #76]	; 0x4c
 801a4f8:	e6b6      	b.n	801a268 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 801a4fa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a4fc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a4fe:	441a      	add	r2, r3
 801a500:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a502:	9229      	str	r2, [sp, #164]	; 0xa4
 801a504:	441d      	add	r5, r3
 801a506:	9b06      	ldr	r3, [sp, #24]
 801a508:	3b01      	subs	r3, #1
 801a50a:	9306      	str	r3, [sp, #24]
 801a50c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a50e:	3302      	adds	r3, #2
 801a510:	930a      	str	r3, [sp, #40]	; 0x28
 801a512:	e660      	b.n	801a1d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801a514:	f47f ae72 	bne.w	801a1fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801a518:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a51a:	2b00      	cmp	r3, #0
 801a51c:	f340 81bc 	ble.w	801a898 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801a520:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a524:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a528:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a52c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a52e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a532:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a536:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a53a:	eef0 6a48 	vmov.f32	s13, s16
 801a53e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a542:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a546:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a54a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801a54e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a552:	eef0 6a68 	vmov.f32	s13, s17
 801a556:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a55a:	ee18 2a10 	vmov	r2, s16
 801a55e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a562:	fb92 f3f3 	sdiv	r3, r2, r3
 801a566:	ee18 2a90 	vmov	r2, s17
 801a56a:	932b      	str	r3, [sp, #172]	; 0xac
 801a56c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a56e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a572:	932c      	str	r3, [sp, #176]	; 0xb0
 801a574:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a576:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a578:	3b01      	subs	r3, #1
 801a57a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a57e:	9312      	str	r3, [sp, #72]	; 0x48
 801a580:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a582:	bf08      	it	eq
 801a584:	4613      	moveq	r3, r2
 801a586:	ee16 5a90 	vmov	r5, s13
 801a58a:	9306      	str	r3, [sp, #24]
 801a58c:	eef0 8a67 	vmov.f32	s17, s15
 801a590:	eeb0 8a47 	vmov.f32	s16, s14
 801a594:	e618      	b.n	801a1c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801a596:	b150      	cbz	r0, 801a5ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 801a598:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a59a:	5871      	ldr	r1, [r6, r1]
 801a59c:	9108      	str	r1, [sp, #32]
 801a59e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a5a2:	26ff      	movs	r6, #255	; 0xff
 801a5a4:	46b0      	mov	r8, r6
 801a5a6:	e698      	b.n	801a2da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 801a5a8:	26ff      	movs	r6, #255	; 0xff
 801a5aa:	46b2      	mov	sl, r6
 801a5ac:	e695      	b.n	801a2da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 801a5ae:	26ff      	movs	r6, #255	; 0xff
 801a5b0:	46b2      	mov	sl, r6
 801a5b2:	e7f7      	b.n	801a5a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 801a5b4:	0972      	lsrs	r2, r6, #5
 801a5b6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a5ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a5be:	f023 0307 	bic.w	r3, r3, #7
 801a5c2:	4313      	orrs	r3, r2
 801a5c4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a5c8:	e78a      	b.n	801a4e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 801a5ca:	1c4e      	adds	r6, r1, #1
 801a5cc:	d18a      	bne.n	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a5ce:	9c07      	ldr	r4, [sp, #28]
 801a5d0:	428c      	cmp	r4, r1
 801a5d2:	dd87      	ble.n	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a5d4:	1c5c      	adds	r4, r3, #1
 801a5d6:	db85      	blt.n	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a5d8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a5da:	429c      	cmp	r4, r3
 801a5dc:	dd82      	ble.n	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a5de:	e9cd 2003 	strd	r2, r0, [sp, #12]
 801a5e2:	e9cd 1301 	strd	r1, r3, [sp, #4]
 801a5e6:	9400      	str	r4, [sp, #0]
 801a5e8:	9b07      	ldr	r3, [sp, #28]
 801a5ea:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a5ec:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a5ee:	4639      	mov	r1, r7
 801a5f0:	f7ff fc62 	bl	8019eb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a5f4:	e776      	b.n	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a5f6:	bf00      	nop
 801a5f8:	fffff800 	.word	0xfffff800
 801a5fc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a5fe:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801a600:	9c07      	ldr	r4, [sp, #28]
 801a602:	1409      	asrs	r1, r1, #16
 801a604:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a608:	142b      	asrs	r3, r5, #16
 801a60a:	fb04 1303 	mla	r3, r4, r3, r1
 801a60e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a610:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 801a614:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801a618:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a61c:	0e1f      	lsrs	r7, r3, #24
 801a61e:	2a00      	cmp	r2, #0
 801a620:	f000 811d 	beq.w	801a85e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 801a624:	6871      	ldr	r1, [r6, #4]
 801a626:	910d      	str	r1, [sp, #52]	; 0x34
 801a628:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 801a62c:	2800      	cmp	r0, #0
 801a62e:	f000 811f 	beq.w	801a870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 801a632:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a634:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a636:	1871      	adds	r1, r6, r1
 801a638:	5934      	ldr	r4, [r6, r4]
 801a63a:	6849      	ldr	r1, [r1, #4]
 801a63c:	9409      	str	r4, [sp, #36]	; 0x24
 801a63e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a642:	910f      	str	r1, [sp, #60]	; 0x3c
 801a644:	0e0e      	lsrs	r6, r1, #24
 801a646:	b292      	uxth	r2, r2
 801a648:	b280      	uxth	r0, r0
 801a64a:	fb02 fb00 	mul.w	fp, r2, r0
 801a64e:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801a652:	0112      	lsls	r2, r2, #4
 801a654:	eba2 080b 	sub.w	r8, r2, fp
 801a658:	b280      	uxth	r0, r0
 801a65a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a65e:	fa1f f888 	uxth.w	r8, r8
 801a662:	1a09      	subs	r1, r1, r0
 801a664:	b289      	uxth	r1, r1
 801a666:	fb08 f20e 	mul.w	r2, r8, lr
 801a66a:	fb01 2207 	mla	r2, r1, r7, r2
 801a66e:	fb00 2209 	mla	r2, r0, r9, r2
 801a672:	fb0b 2206 	mla	r2, fp, r6, r2
 801a676:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a67a:	2a00      	cmp	r2, #0
 801a67c:	f000 80e3 	beq.w	801a846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801a680:	2fff      	cmp	r7, #255	; 0xff
 801a682:	d01a      	beq.n	801a6ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 801a684:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a688:	fb07 fc0c 	mul.w	ip, r7, ip
 801a68c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a690:	435f      	muls	r7, r3
 801a692:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801a696:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a69a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a69e:	4463      	add	r3, ip
 801a6a0:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 801a6a4:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 801a6a8:	0a1b      	lsrs	r3, r3, #8
 801a6aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a6ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a6b2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a6b6:	ea43 030c 	orr.w	r3, r3, ip
 801a6ba:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a6be:	d01e      	beq.n	801a6fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 801a6c0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a6c2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a6c6:	fb0e f707 	mul.w	r7, lr, r7
 801a6ca:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a6ce:	fb0e fe0c 	mul.w	lr, lr, ip
 801a6d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a6d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a6da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a6de:	44bc      	add	ip, r7
 801a6e0:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801a6e4:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 801a6e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a6ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a6f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a6f4:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a6f8:	ea4c 040e 	orr.w	r4, ip, lr
 801a6fc:	940d      	str	r4, [sp, #52]	; 0x34
 801a6fe:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a702:	d01e      	beq.n	801a742 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 801a704:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a706:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a70a:	fb09 fe0e 	mul.w	lr, r9, lr
 801a70e:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a712:	fb09 f907 	mul.w	r9, r9, r7
 801a716:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801a71a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a71e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801a722:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801a726:	44f4      	add	ip, lr
 801a728:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801a72c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a730:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a734:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a738:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a73c:	ea4c 0409 	orr.w	r4, ip, r9
 801a740:	9409      	str	r4, [sp, #36]	; 0x24
 801a742:	2eff      	cmp	r6, #255	; 0xff
 801a744:	d01c      	beq.n	801a780 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 801a746:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a748:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a74c:	fb06 fe0e 	mul.w	lr, r6, lr
 801a750:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a754:	437e      	muls	r6, r7
 801a756:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801a75a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a75e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801a762:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801a766:	44f4      	add	ip, lr
 801a768:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801a76c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a770:	0a36      	lsrs	r6, r6, #8
 801a772:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a776:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a77a:	ea4c 0406 	orr.w	r4, ip, r6
 801a77e:	940f      	str	r4, [sp, #60]	; 0x3c
 801a780:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a782:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801a786:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a788:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801a78c:	fb08 f606 	mul.w	r6, r8, r6
 801a790:	fb01 6607 	mla	r6, r1, r7, r6
 801a794:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a798:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a79a:	fb00 6607 	mla	r6, r0, r7, r6
 801a79e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a7a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a7a4:	fb0b 6607 	mla	r6, fp, r7, r6
 801a7a8:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a7ac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a7b0:	fb08 f807 	mul.w	r8, r8, r7
 801a7b4:	fb01 8303 	mla	r3, r1, r3, r8
 801a7b8:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a7ba:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a7be:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a7c0:	fb00 330c 	mla	r3, r0, ip, r3
 801a7c4:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801a7c8:	fb0b 3e0e 	mla	lr, fp, lr, r3
 801a7cc:	0a36      	lsrs	r6, r6, #8
 801a7ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a7d2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a7d6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a7da:	ea46 060e 	orr.w	r6, r6, lr
 801a7de:	2aff      	cmp	r2, #255	; 0xff
 801a7e0:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801a7e4:	d04a      	beq.n	801a87c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801a7e6:	f8ba 1000 	ldrh.w	r1, [sl]
 801a7ea:	43d2      	mvns	r2, r2
 801a7ec:	120f      	asrs	r7, r1, #8
 801a7ee:	fa5f fc82 	uxtb.w	ip, r2
 801a7f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a7f6:	fb07 f70c 	mul.w	r7, r7, ip
 801a7fa:	10c8      	asrs	r0, r1, #3
 801a7fc:	00ca      	lsls	r2, r1, #3
 801a7fe:	1c79      	adds	r1, r7, #1
 801a800:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 801a804:	0c37      	lsrs	r7, r6, #16
 801a806:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801a80a:	b2d2      	uxtb	r2, r2
 801a80c:	4925      	ldr	r1, [pc, #148]	; (801a8a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 801a80e:	fb02 f20c 	mul.w	r2, r2, ip
 801a812:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 801a816:	1c51      	adds	r1, r2, #1
 801a818:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a81c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a820:	b2f6      	uxtb	r6, r6
 801a822:	fb00 f00c 	mul.w	r0, r0, ip
 801a826:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801a82a:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 801a82e:	1c46      	adds	r6, r0, #1
 801a830:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 801a834:	b2de      	uxtb	r6, r3
 801a836:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801a83a:	00f6      	lsls	r6, r6, #3
 801a83c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a840:	4337      	orrs	r7, r6
 801a842:	f8aa 7000 	strh.w	r7, [sl]
 801a846:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a848:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a84a:	441a      	add	r2, r3
 801a84c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a84e:	9229      	str	r2, [sp, #164]	; 0xa4
 801a850:	441d      	add	r5, r3
 801a852:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a854:	3b01      	subs	r3, #1
 801a856:	f10a 0a02 	add.w	sl, sl, #2
 801a85a:	9313      	str	r3, [sp, #76]	; 0x4c
 801a85c:	e4e7      	b.n	801a22e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 801a85e:	b150      	cbz	r0, 801a876 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 801a860:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a862:	5871      	ldr	r1, [r6, r1]
 801a864:	9109      	str	r1, [sp, #36]	; 0x24
 801a866:	ea4f 6911 	mov.w	r9, r1, lsr #24
 801a86a:	26ff      	movs	r6, #255	; 0xff
 801a86c:	46b6      	mov	lr, r6
 801a86e:	e6ea      	b.n	801a646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a870:	26ff      	movs	r6, #255	; 0xff
 801a872:	46b1      	mov	r9, r6
 801a874:	e6e7      	b.n	801a646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a876:	26ff      	movs	r6, #255	; 0xff
 801a878:	46b1      	mov	r9, r6
 801a87a:	e7f7      	b.n	801a86c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 801a87c:	0972      	lsrs	r2, r6, #5
 801a87e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a882:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a886:	f023 0307 	bic.w	r3, r3, #7
 801a88a:	4313      	orrs	r3, r2
 801a88c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a890:	431e      	orrs	r6, r3
 801a892:	f8aa 6000 	strh.w	r6, [sl]
 801a896:	e7d6      	b.n	801a846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801a898:	b017      	add	sp, #92	; 0x5c
 801a89a:	ecbd 8b08 	vpop	{d8-d11}
 801a89e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8a2:	bf00      	nop
 801a8a4:	fffff800 	.word	0xfffff800

0801a8a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a8a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a8ac:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a8b0:	2c00      	cmp	r4, #0
 801a8b2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a8b6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a8ba:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a8be:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a8c2:	fb04 ce03 	mla	lr, r4, r3, ip
 801a8c6:	db60      	blt.n	801a98a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a8c8:	45a1      	cmp	r9, r4
 801a8ca:	dd5e      	ble.n	801a98a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a8cc:	f1bc 0f00 	cmp.w	ip, #0
 801a8d0:	db59      	blt.n	801a986 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a8d2:	45e0      	cmp	r8, ip
 801a8d4:	dd57      	ble.n	801a986 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a8d6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a8da:	f01e 0f01 	tst.w	lr, #1
 801a8de:	5c16      	ldrb	r6, [r2, r0]
 801a8e0:	bf0c      	ite	eq
 801a8e2:	f006 060f 	andeq.w	r6, r6, #15
 801a8e6:	1136      	asrne	r6, r6, #4
 801a8e8:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a8ec:	b2f6      	uxtb	r6, r6
 801a8ee:	f11c 0001 	adds.w	r0, ip, #1
 801a8f2:	d44d      	bmi.n	801a990 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a8f4:	4580      	cmp	r8, r0
 801a8f6:	dd4b      	ble.n	801a990 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a8f8:	2d00      	cmp	r5, #0
 801a8fa:	d04b      	beq.n	801a994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801a8fc:	f10e 0a01 	add.w	sl, lr, #1
 801a900:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a904:	f01a 0f01 	tst.w	sl, #1
 801a908:	5c10      	ldrb	r0, [r2, r0]
 801a90a:	bf0c      	ite	eq
 801a90c:	f000 000f 	andeq.w	r0, r0, #15
 801a910:	1100      	asrne	r0, r0, #4
 801a912:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a916:	b2c0      	uxtb	r0, r0
 801a918:	3401      	adds	r4, #1
 801a91a:	d43f      	bmi.n	801a99c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a91c:	45a1      	cmp	r9, r4
 801a91e:	dd3d      	ble.n	801a99c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a920:	2f00      	cmp	r7, #0
 801a922:	f000 80a0 	beq.w	801aa66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1be>
 801a926:	f1bc 0f00 	cmp.w	ip, #0
 801a92a:	db35      	blt.n	801a998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a92c:	45e0      	cmp	r8, ip
 801a92e:	dd33      	ble.n	801a998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a930:	eb03 090e 	add.w	r9, r3, lr
 801a934:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a938:	f019 0f01 	tst.w	r9, #1
 801a93c:	5d14      	ldrb	r4, [r2, r4]
 801a93e:	bf0c      	ite	eq
 801a940:	f004 040f 	andeq.w	r4, r4, #15
 801a944:	1124      	asrne	r4, r4, #4
 801a946:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a94a:	b2e4      	uxtb	r4, r4
 801a94c:	f11c 0c01 	adds.w	ip, ip, #1
 801a950:	d427      	bmi.n	801a9a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a952:	45e0      	cmp	r8, ip
 801a954:	dd25      	ble.n	801a9a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a956:	b335      	cbz	r5, 801a9a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801a958:	3301      	adds	r3, #1
 801a95a:	449e      	add	lr, r3
 801a95c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a960:	f01e 0f01 	tst.w	lr, #1
 801a964:	5cd2      	ldrb	r2, [r2, r3]
 801a966:	bf0c      	ite	eq
 801a968:	f002 020f 	andeq.w	r2, r2, #15
 801a96c:	1112      	asrne	r2, r2, #4
 801a96e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a972:	b2d3      	uxtb	r3, r2
 801a974:	2d0f      	cmp	r5, #15
 801a976:	d917      	bls.n	801a9a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801a978:	4b3d      	ldr	r3, [pc, #244]	; (801aa70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a97a:	4a3e      	ldr	r2, [pc, #248]	; (801aa74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a97c:	483e      	ldr	r0, [pc, #248]	; (801aa78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801a97e:	f240 3173 	movw	r1, #883	; 0x373
 801a982:	f000 ffdf 	bl	801b944 <__assert_func>
 801a986:	2600      	movs	r6, #0
 801a988:	e7b1      	b.n	801a8ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801a98a:	2000      	movs	r0, #0
 801a98c:	4606      	mov	r6, r0
 801a98e:	e7c3      	b.n	801a918 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a990:	2000      	movs	r0, #0
 801a992:	e7c1      	b.n	801a918 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a994:	4628      	mov	r0, r5
 801a996:	e7bf      	b.n	801a918 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a998:	2400      	movs	r4, #0
 801a99a:	e7d7      	b.n	801a94c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801a99c:	2300      	movs	r3, #0
 801a99e:	461c      	mov	r4, r3
 801a9a0:	e7e8      	b.n	801a974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a9a2:	2300      	movs	r3, #0
 801a9a4:	e7e6      	b.n	801a974 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a9a6:	462b      	mov	r3, r5
 801a9a8:	2f0f      	cmp	r7, #15
 801a9aa:	d8e5      	bhi.n	801a978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a9ac:	b2ad      	uxth	r5, r5
 801a9ae:	b2bf      	uxth	r7, r7
 801a9b0:	fb05 fc07 	mul.w	ip, r5, r7
 801a9b4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a9b8:	012d      	lsls	r5, r5, #4
 801a9ba:	b2bf      	uxth	r7, r7
 801a9bc:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a9c0:	eba5 050c 	sub.w	r5, r5, ip
 801a9c4:	1bd2      	subs	r2, r2, r7
 801a9c6:	b2ad      	uxth	r5, r5
 801a9c8:	b292      	uxth	r2, r2
 801a9ca:	4368      	muls	r0, r5
 801a9cc:	fb06 0002 	mla	r0, r6, r2, r0
 801a9d0:	fb07 0404 	mla	r4, r7, r4, r0
 801a9d4:	fb0c 4303 	mla	r3, ip, r3, r4
 801a9d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a9dc:	2b00      	cmp	r3, #0
 801a9de:	d040      	beq.n	801aa62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801a9e0:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801a9e4:	4a25      	ldr	r2, [pc, #148]	; (801aa7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d4>)
 801a9e6:	4343      	muls	r3, r0
 801a9e8:	1c58      	adds	r0, r3, #1
 801a9ea:	6816      	ldr	r6, [r2, #0]
 801a9ec:	880a      	ldrh	r2, [r1, #0]
 801a9ee:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a9f2:	1200      	asrs	r0, r0, #8
 801a9f4:	b284      	uxth	r4, r0
 801a9f6:	1215      	asrs	r5, r2, #8
 801a9f8:	43c0      	mvns	r0, r0
 801a9fa:	b2c3      	uxtb	r3, r0
 801a9fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801aa00:	1230      	asrs	r0, r6, #8
 801aa02:	fb15 f503 	smulbb	r5, r5, r3
 801aa06:	10d7      	asrs	r7, r2, #3
 801aa08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aa0c:	fb00 5004 	mla	r0, r0, r4, r5
 801aa10:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aa14:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801aa18:	00d2      	lsls	r2, r2, #3
 801aa1a:	fb17 f703 	smulbb	r7, r7, r3
 801aa1e:	b2d2      	uxtb	r2, r2
 801aa20:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801aa24:	00f6      	lsls	r6, r6, #3
 801aa26:	fb05 7504 	mla	r5, r5, r4, r7
 801aa2a:	fb12 f303 	smulbb	r3, r2, r3
 801aa2e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aa32:	fb06 3304 	mla	r3, r6, r4, r3
 801aa36:	b2ad      	uxth	r5, r5
 801aa38:	b29a      	uxth	r2, r3
 801aa3a:	b280      	uxth	r0, r0
 801aa3c:	1c6b      	adds	r3, r5, #1
 801aa3e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801aa42:	1c44      	adds	r4, r0, #1
 801aa44:	095b      	lsrs	r3, r3, #5
 801aa46:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801aa4a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801aa4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aa52:	4303      	orrs	r3, r0
 801aa54:	1c50      	adds	r0, r2, #1
 801aa56:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801aa5a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aa5e:	4313      	orrs	r3, r2
 801aa60:	800b      	strh	r3, [r1, #0]
 801aa62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801aa66:	2d0f      	cmp	r5, #15
 801aa68:	d886      	bhi.n	801a978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801aa6a:	463b      	mov	r3, r7
 801aa6c:	463c      	mov	r4, r7
 801aa6e:	e79d      	b.n	801a9ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801aa70:	080210bb 	.word	0x080210bb
 801aa74:	08021619 	.word	0x08021619
 801aa78:	08021143 	.word	0x08021143
 801aa7c:	200017ac 	.word	0x200017ac

0801aa80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801aa80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa84:	ed2d 8b08 	vpush	{d8-d11}
 801aa88:	b099      	sub	sp, #100	; 0x64
 801aa8a:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 801aa8e:	9309      	str	r3, [sp, #36]	; 0x24
 801aa90:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801aa94:	930a      	str	r3, [sp, #40]	; 0x28
 801aa96:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801aa9a:	9216      	str	r2, [sp, #88]	; 0x58
 801aa9c:	930b      	str	r3, [sp, #44]	; 0x2c
 801aa9e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801aaa0:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801aaa4:	910f      	str	r1, [sp, #60]	; 0x3c
 801aaa6:	9310      	str	r3, [sp, #64]	; 0x40
 801aaa8:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801aaac:	9017      	str	r0, [sp, #92]	; 0x5c
 801aaae:	6850      	ldr	r0, [r2, #4]
 801aab0:	6812      	ldr	r2, [r2, #0]
 801aab2:	fb00 1303 	mla	r3, r0, r3, r1
 801aab6:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801aaba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aabc:	3301      	adds	r3, #1
 801aabe:	f023 0301 	bic.w	r3, r3, #1
 801aac2:	930c      	str	r3, [sp, #48]	; 0x30
 801aac4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801aac6:	681f      	ldr	r7, [r3, #0]
 801aac8:	eeb0 aa40 	vmov.f32	s20, s0
 801aacc:	eef0 9a60 	vmov.f32	s19, s1
 801aad0:	eeb0 9a41 	vmov.f32	s18, s2
 801aad4:	eeb0 8a62 	vmov.f32	s16, s5
 801aad8:	eef0 8a43 	vmov.f32	s17, s6
 801aadc:	eef0 ba44 	vmov.f32	s23, s8
 801aae0:	eeb0 ba64 	vmov.f32	s22, s9
 801aae4:	eef0 aa45 	vmov.f32	s21, s10
 801aae8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801aaea:	2b00      	cmp	r3, #0
 801aaec:	dc03      	bgt.n	801aaf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801aaee:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801aaf0:	2b00      	cmp	r3, #0
 801aaf2:	f340 826b 	ble.w	801afcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 801aaf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aaf8:	2b00      	cmp	r3, #0
 801aafa:	f340 811f 	ble.w	801ad3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 801aafe:	1422      	asrs	r2, r4, #16
 801ab00:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ab04:	d42d      	bmi.n	801ab62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801ab06:	980a      	ldr	r0, [sp, #40]	; 0x28
 801ab08:	1c51      	adds	r1, r2, #1
 801ab0a:	4288      	cmp	r0, r1
 801ab0c:	dd2c      	ble.n	801ab68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801ab0e:	2b00      	cmp	r3, #0
 801ab10:	db2a      	blt.n	801ab68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801ab12:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ab14:	1c59      	adds	r1, r3, #1
 801ab16:	4288      	cmp	r0, r1
 801ab18:	dd26      	ble.n	801ab68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801ab1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab1c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ab1e:	3b01      	subs	r3, #1
 801ab20:	fb02 4203 	mla	r2, r2, r3, r4
 801ab24:	1412      	asrs	r2, r2, #16
 801ab26:	d42a      	bmi.n	801ab7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801ab28:	990a      	ldr	r1, [sp, #40]	; 0x28
 801ab2a:	3201      	adds	r2, #1
 801ab2c:	4291      	cmp	r1, r2
 801ab2e:	dd26      	ble.n	801ab7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801ab30:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801ab32:	fb02 6303 	mla	r3, r2, r3, r6
 801ab36:	141b      	asrs	r3, r3, #16
 801ab38:	d421      	bmi.n	801ab7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801ab3a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ab3c:	3301      	adds	r3, #1
 801ab3e:	429a      	cmp	r2, r3
 801ab40:	dd1d      	ble.n	801ab7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801ab42:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801ab46:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ab4a:	9311      	str	r3, [sp, #68]	; 0x44
 801ab4c:	46d1      	mov	r9, sl
 801ab4e:	f1bb 0f00 	cmp.w	fp, #0
 801ab52:	f300 8163 	bgt.w	801ae1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39c>
 801ab56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab58:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ab5c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801ab60:	e0ee      	b.n	801ad40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 801ab62:	1c51      	adds	r1, r2, #1
 801ab64:	f040 80e0 	bne.w	801ad28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab68:	990a      	ldr	r1, [sp, #40]	; 0x28
 801ab6a:	4291      	cmp	r1, r2
 801ab6c:	f340 80dc 	ble.w	801ad28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab70:	1c5a      	adds	r2, r3, #1
 801ab72:	f2c0 80d9 	blt.w	801ad28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab76:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ab78:	4293      	cmp	r3, r2
 801ab7a:	f280 80d5 	bge.w	801ad28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801ab7e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801ab82:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801ab86:	9311      	str	r3, [sp, #68]	; 0x44
 801ab88:	46d0      	mov	r8, sl
 801ab8a:	f1b9 0f00 	cmp.w	r9, #0
 801ab8e:	dde2      	ble.n	801ab56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801ab90:	1420      	asrs	r0, r4, #16
 801ab92:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ab96:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ab9a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ab9e:	f100 8122 	bmi.w	801ade6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801aba2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801aba4:	f100 0c01 	add.w	ip, r0, #1
 801aba8:	4565      	cmp	r5, ip
 801abaa:	f340 811e 	ble.w	801adea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801abae:	2b00      	cmp	r3, #0
 801abb0:	f2c0 811b 	blt.w	801adea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801abb4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801abb6:	f103 0c01 	add.w	ip, r3, #1
 801abba:	4565      	cmp	r5, ip
 801abbc:	f340 8115 	ble.w	801adea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801abc0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801abc2:	fb03 0305 	mla	r3, r3, r5, r0
 801abc6:	0858      	lsrs	r0, r3, #1
 801abc8:	07dd      	lsls	r5, r3, #31
 801abca:	5c38      	ldrb	r0, [r7, r0]
 801abcc:	bf54      	ite	pl
 801abce:	f000 000f 	andpl.w	r0, r0, #15
 801abd2:	1100      	asrmi	r0, r0, #4
 801abd4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801abd8:	b2c0      	uxtb	r0, r0
 801abda:	2a00      	cmp	r2, #0
 801abdc:	f000 80ef 	beq.w	801adbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 801abe0:	f103 0e01 	add.w	lr, r3, #1
 801abe4:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801abe8:	f01e 0f01 	tst.w	lr, #1
 801abec:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801abf0:	bf0c      	ite	eq
 801abf2:	f00c 0c0f 	andeq.w	ip, ip, #15
 801abf6:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801abfa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801abfe:	fa5f f58c 	uxtb.w	r5, ip
 801ac02:	9512      	str	r5, [sp, #72]	; 0x48
 801ac04:	b1f9      	cbz	r1, 801ac46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801ac06:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac08:	442b      	add	r3, r5
 801ac0a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ac0e:	07dd      	lsls	r5, r3, #31
 801ac10:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ac14:	bf54      	ite	pl
 801ac16:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ac1a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ac1e:	3301      	adds	r3, #1
 801ac20:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ac24:	fa5f f58c 	uxtb.w	r5, ip
 801ac28:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ac2c:	950d      	str	r5, [sp, #52]	; 0x34
 801ac2e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ac32:	07dd      	lsls	r5, r3, #31
 801ac34:	bf54      	ite	pl
 801ac36:	f00c 030f 	andpl.w	r3, ip, #15
 801ac3a:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801ac3e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ac42:	b2db      	uxtb	r3, r3
 801ac44:	9313      	str	r3, [sp, #76]	; 0x4c
 801ac46:	b292      	uxth	r2, r2
 801ac48:	b289      	uxth	r1, r1
 801ac4a:	fb02 f301 	mul.w	r3, r2, r1
 801ac4e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ac52:	0112      	lsls	r2, r2, #4
 801ac54:	b289      	uxth	r1, r1
 801ac56:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801ac5a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ac5c:	1ad2      	subs	r2, r2, r3
 801ac5e:	ebac 0c01 	sub.w	ip, ip, r1
 801ac62:	b292      	uxth	r2, r2
 801ac64:	436a      	muls	r2, r5
 801ac66:	fa1f fc8c 	uxth.w	ip, ip
 801ac6a:	fb00 200c 	mla	r0, r0, ip, r2
 801ac6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ac70:	fb01 0102 	mla	r1, r1, r2, r0
 801ac74:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ac76:	fb03 1302 	mla	r3, r3, r2, r1
 801ac7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ac7e:	2b00      	cmp	r3, #0
 801ac80:	d049      	beq.n	801ad16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801ac82:	9910      	ldr	r1, [sp, #64]	; 0x40
 801ac84:	4ac5      	ldr	r2, [pc, #788]	; (801af9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801ac86:	4dc6      	ldr	r5, [pc, #792]	; (801afa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801ac88:	f8d2 e000 	ldr.w	lr, [r2]
 801ac8c:	f8b8 2000 	ldrh.w	r2, [r8]
 801ac90:	434b      	muls	r3, r1
 801ac92:	1c59      	adds	r1, r3, #1
 801ac94:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ac98:	121b      	asrs	r3, r3, #8
 801ac9a:	b299      	uxth	r1, r3
 801ac9c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801aca0:	43db      	mvns	r3, r3
 801aca2:	b2db      	uxtb	r3, r3
 801aca4:	ea4f 202e 	mov.w	r0, lr, asr #8
 801aca8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801acac:	fb1c fc03 	smulbb	ip, ip, r3
 801acb0:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801acb4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801acb8:	fb00 c001 	mla	r0, r0, r1, ip
 801acbc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801acc0:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 801acc4:	fb1b fb03 	smulbb	fp, fp, r3
 801acc8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801accc:	00d2      	lsls	r2, r2, #3
 801acce:	fb0c bc01 	mla	ip, ip, r1, fp
 801acd2:	b2d2      	uxtb	r2, r2
 801acd4:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 801acd8:	fb12 f303 	smulbb	r3, r2, r3
 801acdc:	fa1f fc8c 	uxth.w	ip, ip
 801ace0:	fa5f fe8e 	uxtb.w	lr, lr
 801ace4:	b280      	uxth	r0, r0
 801ace6:	fb0e 3101 	mla	r1, lr, r1, r3
 801acea:	f10c 0201 	add.w	r2, ip, #1
 801acee:	b289      	uxth	r1, r1
 801acf0:	1c43      	adds	r3, r0, #1
 801acf2:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801acf6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801acfa:	0952      	lsrs	r2, r2, #5
 801acfc:	1c4b      	adds	r3, r1, #1
 801acfe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad02:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ad06:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ad0a:	4310      	orrs	r0, r2
 801ad0c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ad10:	4308      	orrs	r0, r1
 801ad12:	f8a8 0000 	strh.w	r0, [r8]
 801ad16:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801ad18:	441c      	add	r4, r3
 801ad1a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ad1c:	f108 0802 	add.w	r8, r8, #2
 801ad20:	441e      	add	r6, r3
 801ad22:	f109 39ff 	add.w	r9, r9, #4294967295
 801ad26:	e730      	b.n	801ab8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 801ad28:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801ad2a:	441c      	add	r4, r3
 801ad2c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ad2e:	441e      	add	r6, r3
 801ad30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad32:	3b01      	subs	r3, #1
 801ad34:	9309      	str	r3, [sp, #36]	; 0x24
 801ad36:	f10a 0a02 	add.w	sl, sl, #2
 801ad3a:	e6dc      	b.n	801aaf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801ad3c:	f47f aeed 	bne.w	801ab1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801ad40:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ad42:	2b00      	cmp	r3, #0
 801ad44:	f340 8142 	ble.w	801afcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 801ad48:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ad4c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ad50:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ad54:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ad56:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ad5a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ad5e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801ad62:	eef0 6a48 	vmov.f32	s13, s16
 801ad66:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ad6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad6e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801ad72:	ee16 4a90 	vmov	r4, s13
 801ad76:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801ad7a:	eef0 6a68 	vmov.f32	s13, s17
 801ad7e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801ad82:	ee18 2a10 	vmov	r2, s16
 801ad86:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ad8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad8e:	ee18 2a90 	vmov	r2, s17
 801ad92:	932d      	str	r3, [sp, #180]	; 0xb4
 801ad94:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ad96:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad9a:	932e      	str	r3, [sp, #184]	; 0xb8
 801ad9c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ad9e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801ada0:	3b01      	subs	r3, #1
 801ada2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ada6:	930f      	str	r3, [sp, #60]	; 0x3c
 801ada8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801adaa:	bf08      	it	eq
 801adac:	4613      	moveq	r3, r2
 801adae:	ee16 6a90 	vmov	r6, s13
 801adb2:	9309      	str	r3, [sp, #36]	; 0x24
 801adb4:	eef0 8a67 	vmov.f32	s17, s15
 801adb8:	eeb0 8a47 	vmov.f32	s16, s14
 801adbc:	e694      	b.n	801aae8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801adbe:	2900      	cmp	r1, #0
 801adc0:	f43f af41 	beq.w	801ac46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801adc4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801adc6:	442b      	add	r3, r5
 801adc8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801adcc:	07db      	lsls	r3, r3, #31
 801adce:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801add2:	bf54      	ite	pl
 801add4:	f00c 030f 	andpl.w	r3, ip, #15
 801add8:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801addc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ade0:	b2db      	uxtb	r3, r3
 801ade2:	930d      	str	r3, [sp, #52]	; 0x34
 801ade4:	e72f      	b.n	801ac46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801ade6:	1c45      	adds	r5, r0, #1
 801ade8:	d195      	bne.n	801ad16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801adea:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801adec:	4285      	cmp	r5, r0
 801adee:	dd92      	ble.n	801ad16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801adf0:	1c5d      	adds	r5, r3, #1
 801adf2:	db90      	blt.n	801ad16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801adf4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801adf6:	429d      	cmp	r5, r3
 801adf8:	dd8d      	ble.n	801ad16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801adfa:	e9cd 3203 	strd	r3, r2, [sp, #12]
 801adfe:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ae00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ae02:	9301      	str	r3, [sp, #4]
 801ae04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ae06:	9002      	str	r0, [sp, #8]
 801ae08:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ae0c:	9300      	str	r3, [sp, #0]
 801ae0e:	463a      	mov	r2, r7
 801ae10:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ae12:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801ae14:	4641      	mov	r1, r8
 801ae16:	f7ff fd47 	bl	801a8a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801ae1a:	e77c      	b.n	801ad16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801ae1c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ae1e:	1422      	asrs	r2, r4, #16
 801ae20:	1433      	asrs	r3, r6, #16
 801ae22:	fb05 2303 	mla	r3, r5, r3, r2
 801ae26:	085a      	lsrs	r2, r3, #1
 801ae28:	07dd      	lsls	r5, r3, #31
 801ae2a:	5cba      	ldrb	r2, [r7, r2]
 801ae2c:	bf54      	ite	pl
 801ae2e:	f002 020f 	andpl.w	r2, r2, #15
 801ae32:	1112      	asrmi	r2, r2, #4
 801ae34:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ae38:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ae3c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ae40:	b2d2      	uxtb	r2, r2
 801ae42:	2900      	cmp	r1, #0
 801ae44:	f000 80ae 	beq.w	801afa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801ae48:	f103 0e01 	add.w	lr, r3, #1
 801ae4c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801ae50:	f01e 0f01 	tst.w	lr, #1
 801ae54:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ae58:	bf0c      	ite	eq
 801ae5a:	f00c 0c0f 	andeq.w	ip, ip, #15
 801ae5e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801ae62:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ae66:	fa5f f58c 	uxtb.w	r5, ip
 801ae6a:	9514      	str	r5, [sp, #80]	; 0x50
 801ae6c:	b300      	cbz	r0, 801aeb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801ae6e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ae70:	442b      	add	r3, r5
 801ae72:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ae76:	07dd      	lsls	r5, r3, #31
 801ae78:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ae7c:	bf54      	ite	pl
 801ae7e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ae82:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ae86:	3301      	adds	r3, #1
 801ae88:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ae8c:	fa5f f58c 	uxtb.w	r5, ip
 801ae90:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ae94:	950e      	str	r5, [sp, #56]	; 0x38
 801ae96:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ae9a:	07dd      	lsls	r5, r3, #31
 801ae9c:	bf54      	ite	pl
 801ae9e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aea2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aea6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aeaa:	fa5f f38c 	uxtb.w	r3, ip
 801aeae:	9315      	str	r3, [sp, #84]	; 0x54
 801aeb0:	b289      	uxth	r1, r1
 801aeb2:	b280      	uxth	r0, r0
 801aeb4:	fb01 f300 	mul.w	r3, r1, r0
 801aeb8:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801aebc:	0109      	lsls	r1, r1, #4
 801aebe:	b280      	uxth	r0, r0
 801aec0:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801aec4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aec6:	1ac9      	subs	r1, r1, r3
 801aec8:	ebac 0c00 	sub.w	ip, ip, r0
 801aecc:	b289      	uxth	r1, r1
 801aece:	4369      	muls	r1, r5
 801aed0:	fa1f fc8c 	uxth.w	ip, ip
 801aed4:	fb02 120c 	mla	r2, r2, ip, r1
 801aed8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801aeda:	fb00 2001 	mla	r0, r0, r1, r2
 801aede:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801aee0:	fb03 0302 	mla	r3, r3, r2, r0
 801aee4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aee8:	2b00      	cmp	r3, #0
 801aeea:	d04d      	beq.n	801af88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x508>
 801aeec:	9910      	ldr	r1, [sp, #64]	; 0x40
 801aeee:	4a2b      	ldr	r2, [pc, #172]	; (801af9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801aef0:	4d2b      	ldr	r5, [pc, #172]	; (801afa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801aef2:	f8d2 e000 	ldr.w	lr, [r2]
 801aef6:	f8b9 2000 	ldrh.w	r2, [r9]
 801aefa:	434b      	muls	r3, r1
 801aefc:	1c59      	adds	r1, r3, #1
 801aefe:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801af02:	121b      	asrs	r3, r3, #8
 801af04:	b299      	uxth	r1, r3
 801af06:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801af0a:	43db      	mvns	r3, r3
 801af0c:	b2db      	uxtb	r3, r3
 801af0e:	ea4f 202e 	mov.w	r0, lr, asr #8
 801af12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af16:	fb1c fc03 	smulbb	ip, ip, r3
 801af1a:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801af1e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801af22:	fb00 c001 	mla	r0, r0, r1, ip
 801af26:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801af2a:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 801af2e:	fb18 f803 	smulbb	r8, r8, r3
 801af32:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801af36:	00d2      	lsls	r2, r2, #3
 801af38:	fb0c 8c01 	mla	ip, ip, r1, r8
 801af3c:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 801af40:	b2d2      	uxtb	r2, r2
 801af42:	fa1f fc8c 	uxth.w	ip, ip
 801af46:	fa5f fe8e 	uxtb.w	lr, lr
 801af4a:	fb12 f203 	smulbb	r2, r2, r3
 801af4e:	b280      	uxth	r0, r0
 801af50:	fb0e 2201 	mla	r2, lr, r1, r2
 801af54:	f10c 0801 	add.w	r8, ip, #1
 801af58:	b292      	uxth	r2, r2
 801af5a:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801af5e:	f100 0801 	add.w	r8, r0, #1
 801af62:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801af66:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801af6a:	1c51      	adds	r1, r2, #1
 801af6c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801af70:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801af74:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801af78:	ea4c 0c00 	orr.w	ip, ip, r0
 801af7c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801af80:	ea4c 0c02 	orr.w	ip, ip, r2
 801af84:	f8a9 c000 	strh.w	ip, [r9]
 801af88:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801af8a:	441c      	add	r4, r3
 801af8c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801af8e:	f109 0902 	add.w	r9, r9, #2
 801af92:	441e      	add	r6, r3
 801af94:	f10b 3bff 	add.w	fp, fp, #4294967295
 801af98:	e5d9      	b.n	801ab4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801af9a:	bf00      	nop
 801af9c:	200017ac 	.word	0x200017ac
 801afa0:	0007fff8 	.word	0x0007fff8
 801afa4:	2800      	cmp	r0, #0
 801afa6:	d083      	beq.n	801aeb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801afa8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801afaa:	442b      	add	r3, r5
 801afac:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801afb0:	07db      	lsls	r3, r3, #31
 801afb2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801afb6:	bf54      	ite	pl
 801afb8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801afbc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801afc0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801afc4:	fa5f f38c 	uxtb.w	r3, ip
 801afc8:	930e      	str	r3, [sp, #56]	; 0x38
 801afca:	e771      	b.n	801aeb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801afcc:	b019      	add	sp, #100	; 0x64
 801afce:	ecbd 8b08 	vpop	{d8-d11}
 801afd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801afd6:	bf00      	nop

0801afd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801afd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801afdc:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801afe0:	2c00      	cmp	r4, #0
 801afe2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801afe6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801afea:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801afee:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801aff2:	fb04 ce03 	mla	lr, r4, r3, ip
 801aff6:	db60      	blt.n	801b0ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801aff8:	45a1      	cmp	r9, r4
 801affa:	dd5e      	ble.n	801b0ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801affc:	f1bc 0f00 	cmp.w	ip, #0
 801b000:	db59      	blt.n	801b0b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b002:	45e0      	cmp	r8, ip
 801b004:	dd57      	ble.n	801b0b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b006:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b00a:	f01e 0f01 	tst.w	lr, #1
 801b00e:	5c16      	ldrb	r6, [r2, r0]
 801b010:	bf0c      	ite	eq
 801b012:	f006 060f 	andeq.w	r6, r6, #15
 801b016:	1136      	asrne	r6, r6, #4
 801b018:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b01c:	b2f6      	uxtb	r6, r6
 801b01e:	f11c 0001 	adds.w	r0, ip, #1
 801b022:	d44d      	bmi.n	801b0c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b024:	4580      	cmp	r8, r0
 801b026:	dd4b      	ble.n	801b0c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b028:	2d00      	cmp	r5, #0
 801b02a:	d04b      	beq.n	801b0c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801b02c:	f10e 0a01 	add.w	sl, lr, #1
 801b030:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b034:	f01a 0f01 	tst.w	sl, #1
 801b038:	5c10      	ldrb	r0, [r2, r0]
 801b03a:	bf0c      	ite	eq
 801b03c:	f000 000f 	andeq.w	r0, r0, #15
 801b040:	1100      	asrne	r0, r0, #4
 801b042:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b046:	b2c0      	uxtb	r0, r0
 801b048:	3401      	adds	r4, #1
 801b04a:	d43f      	bmi.n	801b0cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b04c:	45a1      	cmp	r9, r4
 801b04e:	dd3d      	ble.n	801b0cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b050:	2f00      	cmp	r7, #0
 801b052:	f000 8099 	beq.w	801b188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>
 801b056:	f1bc 0f00 	cmp.w	ip, #0
 801b05a:	db35      	blt.n	801b0c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b05c:	45e0      	cmp	r8, ip
 801b05e:	dd33      	ble.n	801b0c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b060:	eb03 090e 	add.w	r9, r3, lr
 801b064:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801b068:	f019 0f01 	tst.w	r9, #1
 801b06c:	5d14      	ldrb	r4, [r2, r4]
 801b06e:	bf0c      	ite	eq
 801b070:	f004 040f 	andeq.w	r4, r4, #15
 801b074:	1124      	asrne	r4, r4, #4
 801b076:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b07a:	b2e4      	uxtb	r4, r4
 801b07c:	f11c 0c01 	adds.w	ip, ip, #1
 801b080:	d427      	bmi.n	801b0d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b082:	45e0      	cmp	r8, ip
 801b084:	dd25      	ble.n	801b0d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b086:	b335      	cbz	r5, 801b0d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801b088:	3301      	adds	r3, #1
 801b08a:	449e      	add	lr, r3
 801b08c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b090:	f01e 0f01 	tst.w	lr, #1
 801b094:	5cd2      	ldrb	r2, [r2, r3]
 801b096:	bf0c      	ite	eq
 801b098:	f002 020f 	andeq.w	r2, r2, #15
 801b09c:	1112      	asrne	r2, r2, #4
 801b09e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b0a2:	b2d3      	uxtb	r3, r2
 801b0a4:	2d0f      	cmp	r5, #15
 801b0a6:	d917      	bls.n	801b0d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801b0a8:	4b3a      	ldr	r3, [pc, #232]	; (801b194 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801b0aa:	4a3b      	ldr	r2, [pc, #236]	; (801b198 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801b0ac:	483b      	ldr	r0, [pc, #236]	; (801b19c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801b0ae:	f240 3173 	movw	r1, #883	; 0x373
 801b0b2:	f000 fc47 	bl	801b944 <__assert_func>
 801b0b6:	2600      	movs	r6, #0
 801b0b8:	e7b1      	b.n	801b01e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801b0ba:	2000      	movs	r0, #0
 801b0bc:	4606      	mov	r6, r0
 801b0be:	e7c3      	b.n	801b048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b0c0:	2000      	movs	r0, #0
 801b0c2:	e7c1      	b.n	801b048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b0c4:	4628      	mov	r0, r5
 801b0c6:	e7bf      	b.n	801b048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b0c8:	2400      	movs	r4, #0
 801b0ca:	e7d7      	b.n	801b07c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801b0cc:	2300      	movs	r3, #0
 801b0ce:	461c      	mov	r4, r3
 801b0d0:	e7e8      	b.n	801b0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b0d2:	2300      	movs	r3, #0
 801b0d4:	e7e6      	b.n	801b0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b0d6:	462b      	mov	r3, r5
 801b0d8:	2f0f      	cmp	r7, #15
 801b0da:	d8e5      	bhi.n	801b0a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b0dc:	b2ad      	uxth	r5, r5
 801b0de:	b2bf      	uxth	r7, r7
 801b0e0:	fb05 fc07 	mul.w	ip, r5, r7
 801b0e4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801b0e8:	012d      	lsls	r5, r5, #4
 801b0ea:	b2bf      	uxth	r7, r7
 801b0ec:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801b0f0:	eba5 050c 	sub.w	r5, r5, ip
 801b0f4:	1bd2      	subs	r2, r2, r7
 801b0f6:	b2ad      	uxth	r5, r5
 801b0f8:	b292      	uxth	r2, r2
 801b0fa:	4368      	muls	r0, r5
 801b0fc:	fb06 0002 	mla	r0, r6, r2, r0
 801b100:	fb07 0404 	mla	r4, r7, r4, r0
 801b104:	fb0c 4303 	mla	r3, ip, r3, r4
 801b108:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b10c:	2b00      	cmp	r3, #0
 801b10e:	d039      	beq.n	801b184 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801b110:	4a23      	ldr	r2, [pc, #140]	; (801b1a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c8>)
 801b112:	6816      	ldr	r6, [r2, #0]
 801b114:	880a      	ldrh	r2, [r1, #0]
 801b116:	b298      	uxth	r0, r3
 801b118:	1215      	asrs	r5, r2, #8
 801b11a:	43db      	mvns	r3, r3
 801b11c:	b2db      	uxtb	r3, r3
 801b11e:	1234      	asrs	r4, r6, #8
 801b120:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b124:	fb15 f503 	smulbb	r5, r5, r3
 801b128:	10d7      	asrs	r7, r2, #3
 801b12a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b12e:	fb04 5400 	mla	r4, r4, r0, r5
 801b132:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b136:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801b13a:	fb17 f703 	smulbb	r7, r7, r3
 801b13e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b142:	00d2      	lsls	r2, r2, #3
 801b144:	fb05 7500 	mla	r5, r5, r0, r7
 801b148:	b2d2      	uxtb	r2, r2
 801b14a:	00f6      	lsls	r6, r6, #3
 801b14c:	fb12 f303 	smulbb	r3, r2, r3
 801b150:	b2ad      	uxth	r5, r5
 801b152:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b156:	b2a4      	uxth	r4, r4
 801b158:	fb06 3000 	mla	r0, r6, r0, r3
 801b15c:	1c6b      	adds	r3, r5, #1
 801b15e:	b280      	uxth	r0, r0
 801b160:	1c62      	adds	r2, r4, #1
 801b162:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801b166:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801b16a:	095b      	lsrs	r3, r3, #5
 801b16c:	1c42      	adds	r2, r0, #1
 801b16e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b172:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b176:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b17a:	4323      	orrs	r3, r4
 801b17c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b180:	4303      	orrs	r3, r0
 801b182:	800b      	strh	r3, [r1, #0]
 801b184:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b188:	2d0f      	cmp	r5, #15
 801b18a:	d88d      	bhi.n	801b0a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b18c:	463b      	mov	r3, r7
 801b18e:	463c      	mov	r4, r7
 801b190:	e7a4      	b.n	801b0dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801b192:	bf00      	nop
 801b194:	080210bb 	.word	0x080210bb
 801b198:	08021619 	.word	0x08021619
 801b19c:	08021143 	.word	0x08021143
 801b1a0:	200017ac 	.word	0x200017ac

0801b1a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801b1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1a8:	ed2d 8b08 	vpush	{d8-d11}
 801b1ac:	b095      	sub	sp, #84	; 0x54
 801b1ae:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801b1b2:	9306      	str	r3, [sp, #24]
 801b1b4:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 801b1b8:	9307      	str	r3, [sp, #28]
 801b1ba:	920d      	str	r2, [sp, #52]	; 0x34
 801b1bc:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801b1c0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801b1c2:	910a      	str	r1, [sp, #40]	; 0x28
 801b1c4:	9308      	str	r3, [sp, #32]
 801b1c6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801b1ca:	9013      	str	r0, [sp, #76]	; 0x4c
 801b1cc:	6850      	ldr	r0, [r2, #4]
 801b1ce:	6812      	ldr	r2, [r2, #0]
 801b1d0:	fb00 1303 	mla	r3, r0, r3, r1
 801b1d4:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 801b1d8:	9b07      	ldr	r3, [sp, #28]
 801b1da:	3301      	adds	r3, #1
 801b1dc:	f023 0301 	bic.w	r3, r3, #1
 801b1e0:	9309      	str	r3, [sp, #36]	; 0x24
 801b1e2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b1e4:	681f      	ldr	r7, [r3, #0]
 801b1e6:	eeb0 aa40 	vmov.f32	s20, s0
 801b1ea:	eef0 9a60 	vmov.f32	s19, s1
 801b1ee:	eeb0 9a41 	vmov.f32	s18, s2
 801b1f2:	eeb0 8a62 	vmov.f32	s16, s5
 801b1f6:	eef0 8a43 	vmov.f32	s17, s6
 801b1fa:	eef0 ba44 	vmov.f32	s23, s8
 801b1fe:	eeb0 ba64 	vmov.f32	s22, s9
 801b202:	eef0 aa45 	vmov.f32	s21, s10
 801b206:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b208:	2b00      	cmp	r3, #0
 801b20a:	dc03      	bgt.n	801b214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801b20c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b20e:	2b00      	cmp	r3, #0
 801b210:	f340 8260 	ble.w	801b6d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801b214:	9b06      	ldr	r3, [sp, #24]
 801b216:	2b00      	cmp	r3, #0
 801b218:	f340 811c 	ble.w	801b454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801b21c:	1422      	asrs	r2, r4, #16
 801b21e:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b222:	d42d      	bmi.n	801b280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801b224:	9807      	ldr	r0, [sp, #28]
 801b226:	1c51      	adds	r1, r2, #1
 801b228:	4288      	cmp	r0, r1
 801b22a:	dd2c      	ble.n	801b286 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801b22c:	2b00      	cmp	r3, #0
 801b22e:	db2a      	blt.n	801b286 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801b230:	9808      	ldr	r0, [sp, #32]
 801b232:	1c59      	adds	r1, r3, #1
 801b234:	4288      	cmp	r0, r1
 801b236:	dd26      	ble.n	801b286 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801b238:	9b06      	ldr	r3, [sp, #24]
 801b23a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b23c:	3b01      	subs	r3, #1
 801b23e:	fb02 4203 	mla	r2, r2, r3, r4
 801b242:	1412      	asrs	r2, r2, #16
 801b244:	d42a      	bmi.n	801b29c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801b246:	9907      	ldr	r1, [sp, #28]
 801b248:	3201      	adds	r2, #1
 801b24a:	4291      	cmp	r1, r2
 801b24c:	dd26      	ble.n	801b29c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801b24e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b250:	fb02 6303 	mla	r3, r2, r3, r6
 801b254:	141b      	asrs	r3, r3, #16
 801b256:	d421      	bmi.n	801b29c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801b258:	9a08      	ldr	r2, [sp, #32]
 801b25a:	3301      	adds	r3, #1
 801b25c:	429a      	cmp	r2, r3
 801b25e:	dd1d      	ble.n	801b29c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801b260:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801b264:	f8dd a018 	ldr.w	sl, [sp, #24]
 801b268:	930e      	str	r3, [sp, #56]	; 0x38
 801b26a:	46d8      	mov	r8, fp
 801b26c:	f1ba 0f00 	cmp.w	sl, #0
 801b270:	f300 8164 	bgt.w	801b53c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801b274:	9b06      	ldr	r3, [sp, #24]
 801b276:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b27a:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801b27e:	e0eb      	b.n	801b458 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801b280:	1c51      	adds	r1, r2, #1
 801b282:	f040 80dd 	bne.w	801b440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801b286:	9907      	ldr	r1, [sp, #28]
 801b288:	4291      	cmp	r1, r2
 801b28a:	f340 80d9 	ble.w	801b440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801b28e:	1c5a      	adds	r2, r3, #1
 801b290:	f2c0 80d6 	blt.w	801b440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801b294:	9a08      	ldr	r2, [sp, #32]
 801b296:	4293      	cmp	r3, r2
 801b298:	f280 80d2 	bge.w	801b440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801b29c:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801b2a0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801b2a4:	46d8      	mov	r8, fp
 801b2a6:	f1b9 0f00 	cmp.w	r9, #0
 801b2aa:	dde3      	ble.n	801b274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801b2ac:	1420      	asrs	r0, r4, #16
 801b2ae:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b2b2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b2b6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b2ba:	f100 8127 	bmi.w	801b50c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801b2be:	9d07      	ldr	r5, [sp, #28]
 801b2c0:	f100 0c01 	add.w	ip, r0, #1
 801b2c4:	4565      	cmp	r5, ip
 801b2c6:	f340 8123 	ble.w	801b510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801b2ca:	2b00      	cmp	r3, #0
 801b2cc:	f2c0 8120 	blt.w	801b510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801b2d0:	9d08      	ldr	r5, [sp, #32]
 801b2d2:	f103 0c01 	add.w	ip, r3, #1
 801b2d6:	4565      	cmp	r5, ip
 801b2d8:	f340 811a 	ble.w	801b510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801b2dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b2de:	fb03 0305 	mla	r3, r3, r5, r0
 801b2e2:	0858      	lsrs	r0, r3, #1
 801b2e4:	07dd      	lsls	r5, r3, #31
 801b2e6:	5c38      	ldrb	r0, [r7, r0]
 801b2e8:	bf54      	ite	pl
 801b2ea:	f000 000f 	andpl.w	r0, r0, #15
 801b2ee:	1100      	asrmi	r0, r0, #4
 801b2f0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b2f4:	b2c0      	uxtb	r0, r0
 801b2f6:	2a00      	cmp	r2, #0
 801b2f8:	f000 80ed 	beq.w	801b4d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x332>
 801b2fc:	f103 0e01 	add.w	lr, r3, #1
 801b300:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801b304:	f01e 0f01 	tst.w	lr, #1
 801b308:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b30c:	bf0c      	ite	eq
 801b30e:	f00c 0c0f 	andeq.w	ip, ip, #15
 801b312:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801b316:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b31a:	fa5f fc8c 	uxtb.w	ip, ip
 801b31e:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801b322:	b1f9      	cbz	r1, 801b364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801b324:	4453      	add	r3, sl
 801b326:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b32a:	07dd      	lsls	r5, r3, #31
 801b32c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b330:	bf54      	ite	pl
 801b332:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b336:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b33a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b33e:	3301      	adds	r3, #1
 801b340:	fa5f fc8c 	uxtb.w	ip, ip
 801b344:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801b348:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b34c:	07dd      	lsls	r5, r3, #31
 801b34e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b352:	bf54      	ite	pl
 801b354:	f00c 030f 	andpl.w	r3, ip, #15
 801b358:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801b35c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b360:	b2db      	uxtb	r3, r3
 801b362:	9310      	str	r3, [sp, #64]	; 0x40
 801b364:	b292      	uxth	r2, r2
 801b366:	b289      	uxth	r1, r1
 801b368:	fb02 f301 	mul.w	r3, r2, r1
 801b36c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b370:	0112      	lsls	r2, r2, #4
 801b372:	b289      	uxth	r1, r1
 801b374:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801b378:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b37a:	1ad2      	subs	r2, r2, r3
 801b37c:	ebac 0c01 	sub.w	ip, ip, r1
 801b380:	b292      	uxth	r2, r2
 801b382:	436a      	muls	r2, r5
 801b384:	fa1f fc8c 	uxth.w	ip, ip
 801b388:	fb00 200c 	mla	r0, r0, ip, r2
 801b38c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b38e:	fb01 0102 	mla	r1, r1, r2, r0
 801b392:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b394:	fb03 1302 	mla	r3, r3, r2, r1
 801b398:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b39c:	2b00      	cmp	r3, #0
 801b39e:	d046      	beq.n	801b42e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b3a0:	4ac7      	ldr	r2, [pc, #796]	; (801b6c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801b3a2:	49c8      	ldr	r1, [pc, #800]	; (801b6c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801b3a4:	6812      	ldr	r2, [r2, #0]
 801b3a6:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801b3aa:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801b3ae:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801b3b2:	b2d2      	uxtb	r2, r2
 801b3b4:	2bff      	cmp	r3, #255	; 0xff
 801b3b6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b3ba:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b3be:	4615      	mov	r5, r2
 801b3c0:	f000 809c 	beq.w	801b4fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801b3c4:	f8b8 0000 	ldrh.w	r0, [r8]
 801b3c8:	b29a      	uxth	r2, r3
 801b3ca:	1201      	asrs	r1, r0, #8
 801b3cc:	43db      	mvns	r3, r3
 801b3ce:	b2db      	uxtb	r3, r3
 801b3d0:	fb1e fe02 	smulbb	lr, lr, r2
 801b3d4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b3d8:	fb01 e103 	mla	r1, r1, r3, lr
 801b3dc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b3e0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b3e4:	fb1c fc02 	smulbb	ip, ip, r2
 801b3e8:	fb0e cc03 	mla	ip, lr, r3, ip
 801b3ec:	00c0      	lsls	r0, r0, #3
 801b3ee:	fa1f fc8c 	uxth.w	ip, ip
 801b3f2:	fb15 f202 	smulbb	r2, r5, r2
 801b3f6:	b2c0      	uxtb	r0, r0
 801b3f8:	b289      	uxth	r1, r1
 801b3fa:	fb00 2303 	mla	r3, r0, r3, r2
 801b3fe:	f10c 0e01 	add.w	lr, ip, #1
 801b402:	b29b      	uxth	r3, r3
 801b404:	1c4a      	adds	r2, r1, #1
 801b406:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801b40a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b40e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b412:	1c5a      	adds	r2, r3, #1
 801b414:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b418:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b41c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b420:	ea4c 0101 	orr.w	r1, ip, r1
 801b424:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b428:	4319      	orrs	r1, r3
 801b42a:	f8a8 1000 	strh.w	r1, [r8]
 801b42e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b430:	441c      	add	r4, r3
 801b432:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b434:	f108 0802 	add.w	r8, r8, #2
 801b438:	441e      	add	r6, r3
 801b43a:	f109 39ff 	add.w	r9, r9, #4294967295
 801b43e:	e732      	b.n	801b2a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801b440:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b442:	441c      	add	r4, r3
 801b444:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b446:	441e      	add	r6, r3
 801b448:	9b06      	ldr	r3, [sp, #24]
 801b44a:	3b01      	subs	r3, #1
 801b44c:	9306      	str	r3, [sp, #24]
 801b44e:	f10b 0b02 	add.w	fp, fp, #2
 801b452:	e6df      	b.n	801b214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801b454:	f47f aef0 	bne.w	801b238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801b458:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b45a:	2b00      	cmp	r3, #0
 801b45c:	f340 813a 	ble.w	801b6d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801b460:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b464:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b468:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b46c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b46e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b472:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b476:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b47a:	eef0 6a48 	vmov.f32	s13, s16
 801b47e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b482:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b486:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b48a:	ee16 4a90 	vmov	r4, s13
 801b48e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b492:	eef0 6a68 	vmov.f32	s13, s17
 801b496:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b49a:	ee18 2a10 	vmov	r2, s16
 801b49e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b4a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4a6:	ee18 2a90 	vmov	r2, s17
 801b4aa:	9329      	str	r3, [sp, #164]	; 0xa4
 801b4ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b4ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4b2:	932a      	str	r3, [sp, #168]	; 0xa8
 801b4b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b4b6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b4b8:	3b01      	subs	r3, #1
 801b4ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b4be:	930a      	str	r3, [sp, #40]	; 0x28
 801b4c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b4c2:	bf08      	it	eq
 801b4c4:	4613      	moveq	r3, r2
 801b4c6:	ee16 6a90 	vmov	r6, s13
 801b4ca:	9306      	str	r3, [sp, #24]
 801b4cc:	eef0 8a67 	vmov.f32	s17, s15
 801b4d0:	eeb0 8a47 	vmov.f32	s16, s14
 801b4d4:	e697      	b.n	801b206 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801b4d6:	2900      	cmp	r1, #0
 801b4d8:	f43f af44 	beq.w	801b364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801b4dc:	4453      	add	r3, sl
 801b4de:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b4e2:	07db      	lsls	r3, r3, #31
 801b4e4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b4e8:	bf54      	ite	pl
 801b4ea:	f00c 030f 	andpl.w	r3, ip, #15
 801b4ee:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801b4f2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b4f6:	b2db      	uxtb	r3, r3
 801b4f8:	930b      	str	r3, [sp, #44]	; 0x2c
 801b4fa:	e733      	b.n	801b364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801b4fc:	08d2      	lsrs	r2, r2, #3
 801b4fe:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801b502:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801b506:	f8a8 c000 	strh.w	ip, [r8]
 801b50a:	e790      	b.n	801b42e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b50c:	1c45      	adds	r5, r0, #1
 801b50e:	d18e      	bne.n	801b42e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b510:	9d07      	ldr	r5, [sp, #28]
 801b512:	4285      	cmp	r5, r0
 801b514:	dd8b      	ble.n	801b42e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b516:	1c5d      	adds	r5, r3, #1
 801b518:	db89      	blt.n	801b42e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b51a:	9d08      	ldr	r5, [sp, #32]
 801b51c:	429d      	cmp	r5, r3
 801b51e:	dd86      	ble.n	801b42e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b520:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801b524:	9b07      	ldr	r3, [sp, #28]
 801b526:	9300      	str	r3, [sp, #0]
 801b528:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801b52c:	9501      	str	r5, [sp, #4]
 801b52e:	4653      	mov	r3, sl
 801b530:	463a      	mov	r2, r7
 801b532:	4641      	mov	r1, r8
 801b534:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b536:	f7ff fd4f 	bl	801afd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b53a:	e778      	b.n	801b42e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b53c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b53e:	1422      	asrs	r2, r4, #16
 801b540:	1433      	asrs	r3, r6, #16
 801b542:	fb01 2303 	mla	r3, r1, r3, r2
 801b546:	085a      	lsrs	r2, r3, #1
 801b548:	07d9      	lsls	r1, r3, #31
 801b54a:	5cba      	ldrb	r2, [r7, r2]
 801b54c:	bf54      	ite	pl
 801b54e:	f002 020f 	andpl.w	r2, r2, #15
 801b552:	1112      	asrmi	r2, r2, #4
 801b554:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b558:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b55c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b560:	b2d2      	uxtb	r2, r2
 801b562:	2800      	cmp	r0, #0
 801b564:	f000 809b 	beq.w	801b69e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fa>
 801b568:	f103 0e01 	add.w	lr, r3, #1
 801b56c:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801b570:	f01e 0f01 	tst.w	lr, #1
 801b574:	5c79      	ldrb	r1, [r7, r1]
 801b576:	bf0c      	ite	eq
 801b578:	f001 010f 	andeq.w	r1, r1, #15
 801b57c:	1109      	asrne	r1, r1, #4
 801b57e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b582:	b2c9      	uxtb	r1, r1
 801b584:	9111      	str	r1, [sp, #68]	; 0x44
 801b586:	f1bc 0f00 	cmp.w	ip, #0
 801b58a:	d018      	beq.n	801b5be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801b58c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b58e:	440b      	add	r3, r1
 801b590:	0859      	lsrs	r1, r3, #1
 801b592:	07dd      	lsls	r5, r3, #31
 801b594:	5c79      	ldrb	r1, [r7, r1]
 801b596:	bf54      	ite	pl
 801b598:	f001 010f 	andpl.w	r1, r1, #15
 801b59c:	1109      	asrmi	r1, r1, #4
 801b59e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b5a2:	b2c9      	uxtb	r1, r1
 801b5a4:	3301      	adds	r3, #1
 801b5a6:	910c      	str	r1, [sp, #48]	; 0x30
 801b5a8:	0859      	lsrs	r1, r3, #1
 801b5aa:	07dd      	lsls	r5, r3, #31
 801b5ac:	5c79      	ldrb	r1, [r7, r1]
 801b5ae:	bf54      	ite	pl
 801b5b0:	f001 010f 	andpl.w	r1, r1, #15
 801b5b4:	1109      	asrmi	r1, r1, #4
 801b5b6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b5ba:	b2c9      	uxtb	r1, r1
 801b5bc:	9112      	str	r1, [sp, #72]	; 0x48
 801b5be:	b280      	uxth	r0, r0
 801b5c0:	fa1f fc8c 	uxth.w	ip, ip
 801b5c4:	fb00 f30c 	mul.w	r3, r0, ip
 801b5c8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b5cc:	0100      	lsls	r0, r0, #4
 801b5ce:	fa1f fc8c 	uxth.w	ip, ip
 801b5d2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b5d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b5d8:	1ac0      	subs	r0, r0, r3
 801b5da:	eba1 010c 	sub.w	r1, r1, ip
 801b5de:	b280      	uxth	r0, r0
 801b5e0:	b289      	uxth	r1, r1
 801b5e2:	4368      	muls	r0, r5
 801b5e4:	fb02 0201 	mla	r2, r2, r1, r0
 801b5e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b5ea:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b5ee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b5f0:	fb03 c302 	mla	r3, r3, r2, ip
 801b5f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b5f8:	2b00      	cmp	r3, #0
 801b5fa:	d047      	beq.n	801b68c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801b5fc:	4a30      	ldr	r2, [pc, #192]	; (801b6c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801b5fe:	4931      	ldr	r1, [pc, #196]	; (801b6c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801b600:	6812      	ldr	r2, [r2, #0]
 801b602:	2bff      	cmp	r3, #255	; 0xff
 801b604:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801b608:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801b60c:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801b610:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b614:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b618:	b2d2      	uxtb	r2, r2
 801b61a:	d055      	beq.n	801b6c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801b61c:	f8b8 0000 	ldrh.w	r0, [r8]
 801b620:	fa1f f983 	uxth.w	r9, r3
 801b624:	1201      	asrs	r1, r0, #8
 801b626:	43db      	mvns	r3, r3
 801b628:	b2db      	uxtb	r3, r3
 801b62a:	fb1e fe09 	smulbb	lr, lr, r9
 801b62e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b632:	fb01 e103 	mla	r1, r1, r3, lr
 801b636:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b63a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b63e:	fb1c fc09 	smulbb	ip, ip, r9
 801b642:	fb0e cc03 	mla	ip, lr, r3, ip
 801b646:	00c0      	lsls	r0, r0, #3
 801b648:	fa1f fc8c 	uxth.w	ip, ip
 801b64c:	b2c0      	uxtb	r0, r0
 801b64e:	fb12 f209 	smulbb	r2, r2, r9
 801b652:	b289      	uxth	r1, r1
 801b654:	fb00 2203 	mla	r2, r0, r3, r2
 801b658:	f10c 0e01 	add.w	lr, ip, #1
 801b65c:	b292      	uxth	r2, r2
 801b65e:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801b662:	f101 0e01 	add.w	lr, r1, #1
 801b666:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b66a:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 801b66e:	1c53      	adds	r3, r2, #1
 801b670:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b674:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b678:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b67c:	ea4c 0c01 	orr.w	ip, ip, r1
 801b680:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b684:	ea4c 0c02 	orr.w	ip, ip, r2
 801b688:	f8a8 c000 	strh.w	ip, [r8]
 801b68c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b68e:	441c      	add	r4, r3
 801b690:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b692:	f108 0802 	add.w	r8, r8, #2
 801b696:	441e      	add	r6, r3
 801b698:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b69c:	e5e6      	b.n	801b26c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801b69e:	f1bc 0f00 	cmp.w	ip, #0
 801b6a2:	d08c      	beq.n	801b5be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801b6a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b6a6:	440b      	add	r3, r1
 801b6a8:	0859      	lsrs	r1, r3, #1
 801b6aa:	07db      	lsls	r3, r3, #31
 801b6ac:	5c79      	ldrb	r1, [r7, r1]
 801b6ae:	bf54      	ite	pl
 801b6b0:	f001 010f 	andpl.w	r1, r1, #15
 801b6b4:	1109      	asrmi	r1, r1, #4
 801b6b6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b6ba:	b2c9      	uxtb	r1, r1
 801b6bc:	910c      	str	r1, [sp, #48]	; 0x30
 801b6be:	e77e      	b.n	801b5be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801b6c0:	200017ac 	.word	0x200017ac
 801b6c4:	0007fff8 	.word	0x0007fff8
 801b6c8:	08d2      	lsrs	r2, r2, #3
 801b6ca:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801b6ce:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801b6d2:	e7d9      	b.n	801b688 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e4>
 801b6d4:	b015      	add	sp, #84	; 0x54
 801b6d6:	ecbd 8b08 	vpop	{d8-d11}
 801b6da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6de:	bf00      	nop

0801b6e0 <CRC_Lock>:
 801b6e0:	b530      	push	{r4, r5, lr}
 801b6e2:	4a1d      	ldr	r2, [pc, #116]	; (801b758 <CRC_Lock+0x78>)
 801b6e4:	6813      	ldr	r3, [r2, #0]
 801b6e6:	f023 0301 	bic.w	r3, r3, #1
 801b6ea:	6013      	str	r3, [r2, #0]
 801b6ec:	4b1b      	ldr	r3, [pc, #108]	; (801b75c <CRC_Lock+0x7c>)
 801b6ee:	681a      	ldr	r2, [r3, #0]
 801b6f0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b6f4:	4022      	ands	r2, r4
 801b6f6:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b6fa:	42aa      	cmp	r2, r5
 801b6fc:	d005      	beq.n	801b70a <CRC_Lock+0x2a>
 801b6fe:	681b      	ldr	r3, [r3, #0]
 801b700:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b704:	4023      	ands	r3, r4
 801b706:	4293      	cmp	r3, r2
 801b708:	d11d      	bne.n	801b746 <CRC_Lock+0x66>
 801b70a:	4b15      	ldr	r3, [pc, #84]	; (801b760 <CRC_Lock+0x80>)
 801b70c:	681b      	ldr	r3, [r3, #0]
 801b70e:	b9d3      	cbnz	r3, 801b746 <CRC_Lock+0x66>
 801b710:	4a14      	ldr	r2, [pc, #80]	; (801b764 <CRC_Lock+0x84>)
 801b712:	6813      	ldr	r3, [r2, #0]
 801b714:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b718:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801b71c:	d006      	beq.n	801b72c <CRC_Lock+0x4c>
 801b71e:	6813      	ldr	r3, [r2, #0]
 801b720:	f240 4283 	movw	r2, #1155	; 0x483
 801b724:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b728:	4293      	cmp	r3, r2
 801b72a:	d10c      	bne.n	801b746 <CRC_Lock+0x66>
 801b72c:	4b0e      	ldr	r3, [pc, #56]	; (801b768 <CRC_Lock+0x88>)
 801b72e:	2201      	movs	r2, #1
 801b730:	601a      	str	r2, [r3, #0]
 801b732:	681a      	ldr	r2, [r3, #0]
 801b734:	2a00      	cmp	r2, #0
 801b736:	d1fc      	bne.n	801b732 <CRC_Lock+0x52>
 801b738:	4b0c      	ldr	r3, [pc, #48]	; (801b76c <CRC_Lock+0x8c>)
 801b73a:	6018      	str	r0, [r3, #0]
 801b73c:	6818      	ldr	r0, [r3, #0]
 801b73e:	1a43      	subs	r3, r0, r1
 801b740:	4258      	negs	r0, r3
 801b742:	4158      	adcs	r0, r3
 801b744:	bd30      	pop	{r4, r5, pc}
 801b746:	4b0a      	ldr	r3, [pc, #40]	; (801b770 <CRC_Lock+0x90>)
 801b748:	2201      	movs	r2, #1
 801b74a:	601a      	str	r2, [r3, #0]
 801b74c:	681a      	ldr	r2, [r3, #0]
 801b74e:	2a00      	cmp	r2, #0
 801b750:	d1fc      	bne.n	801b74c <CRC_Lock+0x6c>
 801b752:	4b08      	ldr	r3, [pc, #32]	; (801b774 <CRC_Lock+0x94>)
 801b754:	e7f1      	b.n	801b73a <CRC_Lock+0x5a>
 801b756:	bf00      	nop
 801b758:	e0002000 	.word	0xe0002000
 801b75c:	e000ed00 	.word	0xe000ed00
 801b760:	e0042000 	.word	0xe0042000
 801b764:	5c001000 	.word	0x5c001000
 801b768:	58024c08 	.word	0x58024c08
 801b76c:	58024c00 	.word	0x58024c00
 801b770:	40023008 	.word	0x40023008
 801b774:	40023000 	.word	0x40023000

0801b778 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b778:	6101      	str	r1, [r0, #16]
 801b77a:	4770      	bx	lr

0801b77c <_ZN8touchgfx8Gestures4tickEv>:
 801b77c:	7b83      	ldrb	r3, [r0, #14]
 801b77e:	b14b      	cbz	r3, 801b794 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b780:	8903      	ldrh	r3, [r0, #8]
 801b782:	3301      	adds	r3, #1
 801b784:	b29b      	uxth	r3, r3
 801b786:	2b07      	cmp	r3, #7
 801b788:	8103      	strh	r3, [r0, #8]
 801b78a:	bf81      	itttt	hi
 801b78c:	2300      	movhi	r3, #0
 801b78e:	8143      	strhhi	r3, [r0, #10]
 801b790:	8183      	strhhi	r3, [r0, #12]
 801b792:	7383      	strbhi	r3, [r0, #14]
 801b794:	4770      	bx	lr
	...

0801b798 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b798:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b79c:	4604      	mov	r4, r0
 801b79e:	8880      	ldrh	r0, [r0, #4]
 801b7a0:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b7a4:	4698      	mov	r8, r3
 801b7a6:	eba8 0000 	sub.w	r0, r8, r0
 801b7aa:	4b1c      	ldr	r3, [pc, #112]	; (801b81c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b7ac:	9300      	str	r3, [sp, #0]
 801b7ae:	b280      	uxth	r0, r0
 801b7b0:	2300      	movs	r3, #0
 801b7b2:	f88d 3004 	strb.w	r3, [sp, #4]
 801b7b6:	b203      	sxth	r3, r0
 801b7b8:	2b00      	cmp	r3, #0
 801b7ba:	bfb8      	it	lt
 801b7bc:	4240      	neglt	r0, r0
 801b7be:	4617      	mov	r7, r2
 801b7c0:	8aa2      	ldrh	r2, [r4, #20]
 801b7c2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b7c6:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b7ca:	bfb8      	it	lt
 801b7cc:	b203      	sxthlt	r3, r0
 801b7ce:	460e      	mov	r6, r1
 801b7d0:	4293      	cmp	r3, r2
 801b7d2:	88e1      	ldrh	r1, [r4, #6]
 801b7d4:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b7d8:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b7dc:	dc08      	bgt.n	801b7f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b7de:	1a69      	subs	r1, r5, r1
 801b7e0:	b289      	uxth	r1, r1
 801b7e2:	b20b      	sxth	r3, r1
 801b7e4:	2b00      	cmp	r3, #0
 801b7e6:	bfbc      	itt	lt
 801b7e8:	4249      	neglt	r1, r1
 801b7ea:	b20b      	sxthlt	r3, r1
 801b7ec:	429a      	cmp	r2, r3
 801b7ee:	da13      	bge.n	801b818 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b7f0:	6920      	ldr	r0, [r4, #16]
 801b7f2:	6803      	ldr	r3, [r0, #0]
 801b7f4:	4669      	mov	r1, sp
 801b7f6:	685b      	ldr	r3, [r3, #4]
 801b7f8:	4798      	blx	r3
 801b7fa:	eba8 0606 	sub.w	r6, r8, r6
 801b7fe:	2300      	movs	r3, #0
 801b800:	1bef      	subs	r7, r5, r7
 801b802:	2001      	movs	r0, #1
 801b804:	8123      	strh	r3, [r4, #8]
 801b806:	8166      	strh	r6, [r4, #10]
 801b808:	81a7      	strh	r7, [r4, #12]
 801b80a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b80e:	80e5      	strh	r5, [r4, #6]
 801b810:	73a0      	strb	r0, [r4, #14]
 801b812:	b004      	add	sp, #16
 801b814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b818:	2000      	movs	r0, #0
 801b81a:	e7fa      	b.n	801b812 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b81c:	080203f8 	.word	0x080203f8

0801b820 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b820:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b822:	461e      	mov	r6, r3
 801b824:	1e4b      	subs	r3, r1, #1
 801b826:	2b01      	cmp	r3, #1
 801b828:	b085      	sub	sp, #20
 801b82a:	4604      	mov	r4, r0
 801b82c:	460d      	mov	r5, r1
 801b82e:	4617      	mov	r7, r2
 801b830:	d84b      	bhi.n	801b8ca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b832:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b836:	1cd3      	adds	r3, r2, #3
 801b838:	b29b      	uxth	r3, r3
 801b83a:	2b06      	cmp	r3, #6
 801b83c:	d916      	bls.n	801b86c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b83e:	f8df c098 	ldr.w	ip, [pc, #152]	; 801b8d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801b842:	f8cd c004 	str.w	ip, [sp, #4]
 801b846:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b84a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b84e:	6900      	ldr	r0, [r0, #16]
 801b850:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b854:	f04f 0c00 	mov.w	ip, #0
 801b858:	f88d c008 	strb.w	ip, [sp, #8]
 801b85c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b860:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b864:	6803      	ldr	r3, [r0, #0]
 801b866:	a901      	add	r1, sp, #4
 801b868:	689b      	ldr	r3, [r3, #8]
 801b86a:	4798      	blx	r3
 801b86c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b870:	1cd3      	adds	r3, r2, #3
 801b872:	b29b      	uxth	r3, r3
 801b874:	2b06      	cmp	r3, #6
 801b876:	d916      	bls.n	801b8a6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b878:	f8df c05c 	ldr.w	ip, [pc, #92]	; 801b8d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801b87c:	f8cd c004 	str.w	ip, [sp, #4]
 801b880:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b884:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b888:	6920      	ldr	r0, [r4, #16]
 801b88a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b88e:	f04f 0c01 	mov.w	ip, #1
 801b892:	f88d c008 	strb.w	ip, [sp, #8]
 801b896:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b89a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b89e:	6803      	ldr	r3, [r0, #0]
 801b8a0:	a901      	add	r1, sp, #4
 801b8a2:	689b      	ldr	r3, [r3, #8]
 801b8a4:	4798      	blx	r3
 801b8a6:	4b0b      	ldr	r3, [pc, #44]	; (801b8d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb4>)
 801b8a8:	9301      	str	r3, [sp, #4]
 801b8aa:	6920      	ldr	r0, [r4, #16]
 801b8ac:	f88d 5008 	strb.w	r5, [sp, #8]
 801b8b0:	2300      	movs	r3, #0
 801b8b2:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b8b6:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b8ba:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b8be:	6803      	ldr	r3, [r0, #0]
 801b8c0:	a901      	add	r1, sp, #4
 801b8c2:	681b      	ldr	r3, [r3, #0]
 801b8c4:	4798      	blx	r3
 801b8c6:	b005      	add	sp, #20
 801b8c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b8ca:	2900      	cmp	r1, #0
 801b8cc:	d1eb      	bne.n	801b8a6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b8ce:	80a2      	strh	r2, [r4, #4]
 801b8d0:	80c6      	strh	r6, [r0, #6]
 801b8d2:	e7e8      	b.n	801b8a6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b8d4:	080203e4 	.word	0x080203e4
 801b8d8:	0802040c 	.word	0x0802040c

0801b8dc <__aeabi_atexit>:
 801b8dc:	460b      	mov	r3, r1
 801b8de:	4601      	mov	r1, r0
 801b8e0:	4618      	mov	r0, r3
 801b8e2:	f000 b857 	b.w	801b994 <__cxa_atexit>

0801b8e6 <_ZdlPvj>:
 801b8e6:	f000 b812 	b.w	801b90e <_ZdlPv>

0801b8ea <__cxa_guard_acquire>:
 801b8ea:	6803      	ldr	r3, [r0, #0]
 801b8ec:	07db      	lsls	r3, r3, #31
 801b8ee:	d406      	bmi.n	801b8fe <__cxa_guard_acquire+0x14>
 801b8f0:	7843      	ldrb	r3, [r0, #1]
 801b8f2:	b103      	cbz	r3, 801b8f6 <__cxa_guard_acquire+0xc>
 801b8f4:	deff      	udf	#255	; 0xff
 801b8f6:	2301      	movs	r3, #1
 801b8f8:	7043      	strb	r3, [r0, #1]
 801b8fa:	4618      	mov	r0, r3
 801b8fc:	4770      	bx	lr
 801b8fe:	2000      	movs	r0, #0
 801b900:	4770      	bx	lr

0801b902 <__cxa_guard_release>:
 801b902:	2301      	movs	r3, #1
 801b904:	6003      	str	r3, [r0, #0]
 801b906:	4770      	bx	lr

0801b908 <__cxa_pure_virtual>:
 801b908:	b508      	push	{r3, lr}
 801b90a:	f000 f80f 	bl	801b92c <_ZSt9terminatev>

0801b90e <_ZdlPv>:
 801b90e:	f000 b893 	b.w	801ba38 <free>

0801b912 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b912:	b508      	push	{r3, lr}
 801b914:	4780      	blx	r0
 801b916:	f000 f80e 	bl	801b936 <abort>
	...

0801b91c <_ZSt13get_terminatev>:
 801b91c:	4b02      	ldr	r3, [pc, #8]	; (801b928 <_ZSt13get_terminatev+0xc>)
 801b91e:	6818      	ldr	r0, [r3, #0]
 801b920:	f3bf 8f5b 	dmb	ish
 801b924:	4770      	bx	lr
 801b926:	bf00      	nop
 801b928:	20000098 	.word	0x20000098

0801b92c <_ZSt9terminatev>:
 801b92c:	b508      	push	{r3, lr}
 801b92e:	f7ff fff5 	bl	801b91c <_ZSt13get_terminatev>
 801b932:	f7ff ffee 	bl	801b912 <_ZN10__cxxabiv111__terminateEPFvvE>

0801b936 <abort>:
 801b936:	b508      	push	{r3, lr}
 801b938:	2006      	movs	r0, #6
 801b93a:	f000 ff8f 	bl	801c85c <raise>
 801b93e:	2001      	movs	r0, #1
 801b940:	f7e6 ffa8 	bl	8002894 <_exit>

0801b944 <__assert_func>:
 801b944:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b946:	4614      	mov	r4, r2
 801b948:	461a      	mov	r2, r3
 801b94a:	4b09      	ldr	r3, [pc, #36]	; (801b970 <__assert_func+0x2c>)
 801b94c:	681b      	ldr	r3, [r3, #0]
 801b94e:	4605      	mov	r5, r0
 801b950:	68d8      	ldr	r0, [r3, #12]
 801b952:	b14c      	cbz	r4, 801b968 <__assert_func+0x24>
 801b954:	4b07      	ldr	r3, [pc, #28]	; (801b974 <__assert_func+0x30>)
 801b956:	9100      	str	r1, [sp, #0]
 801b958:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801b95c:	4906      	ldr	r1, [pc, #24]	; (801b978 <__assert_func+0x34>)
 801b95e:	462b      	mov	r3, r5
 801b960:	f000 f82c 	bl	801b9bc <fiprintf>
 801b964:	f7ff ffe7 	bl	801b936 <abort>
 801b968:	4b04      	ldr	r3, [pc, #16]	; (801b97c <__assert_func+0x38>)
 801b96a:	461c      	mov	r4, r3
 801b96c:	e7f3      	b.n	801b956 <__assert_func+0x12>
 801b96e:	bf00      	nop
 801b970:	2000009c 	.word	0x2000009c
 801b974:	08021854 	.word	0x08021854
 801b978:	08021861 	.word	0x08021861
 801b97c:	0802188f 	.word	0x0802188f

0801b980 <atexit>:
 801b980:	2300      	movs	r3, #0
 801b982:	4601      	mov	r1, r0
 801b984:	461a      	mov	r2, r3
 801b986:	4618      	mov	r0, r3
 801b988:	f001 b8d0 	b.w	801cb2c <__register_exitproc>

0801b98c <atoi>:
 801b98c:	220a      	movs	r2, #10
 801b98e:	2100      	movs	r1, #0
 801b990:	f001 b802 	b.w	801c998 <strtol>

0801b994 <__cxa_atexit>:
 801b994:	b510      	push	{r4, lr}
 801b996:	4c05      	ldr	r4, [pc, #20]	; (801b9ac <__cxa_atexit+0x18>)
 801b998:	4613      	mov	r3, r2
 801b99a:	b12c      	cbz	r4, 801b9a8 <__cxa_atexit+0x14>
 801b99c:	460a      	mov	r2, r1
 801b99e:	4601      	mov	r1, r0
 801b9a0:	2002      	movs	r0, #2
 801b9a2:	f001 f8c3 	bl	801cb2c <__register_exitproc>
 801b9a6:	bd10      	pop	{r4, pc}
 801b9a8:	4620      	mov	r0, r4
 801b9aa:	e7fc      	b.n	801b9a6 <__cxa_atexit+0x12>
 801b9ac:	0801cb2d 	.word	0x0801cb2d

0801b9b0 <__errno>:
 801b9b0:	4b01      	ldr	r3, [pc, #4]	; (801b9b8 <__errno+0x8>)
 801b9b2:	6818      	ldr	r0, [r3, #0]
 801b9b4:	4770      	bx	lr
 801b9b6:	bf00      	nop
 801b9b8:	2000009c 	.word	0x2000009c

0801b9bc <fiprintf>:
 801b9bc:	b40e      	push	{r1, r2, r3}
 801b9be:	b503      	push	{r0, r1, lr}
 801b9c0:	4601      	mov	r1, r0
 801b9c2:	ab03      	add	r3, sp, #12
 801b9c4:	4805      	ldr	r0, [pc, #20]	; (801b9dc <fiprintf+0x20>)
 801b9c6:	f853 2b04 	ldr.w	r2, [r3], #4
 801b9ca:	6800      	ldr	r0, [r0, #0]
 801b9cc:	9301      	str	r3, [sp, #4]
 801b9ce:	f000 f95b 	bl	801bc88 <_vfiprintf_r>
 801b9d2:	b002      	add	sp, #8
 801b9d4:	f85d eb04 	ldr.w	lr, [sp], #4
 801b9d8:	b003      	add	sp, #12
 801b9da:	4770      	bx	lr
 801b9dc:	2000009c 	.word	0x2000009c

0801b9e0 <__libc_init_array>:
 801b9e0:	b570      	push	{r4, r5, r6, lr}
 801b9e2:	4d0d      	ldr	r5, [pc, #52]	; (801ba18 <__libc_init_array+0x38>)
 801b9e4:	4c0d      	ldr	r4, [pc, #52]	; (801ba1c <__libc_init_array+0x3c>)
 801b9e6:	1b64      	subs	r4, r4, r5
 801b9e8:	10a4      	asrs	r4, r4, #2
 801b9ea:	2600      	movs	r6, #0
 801b9ec:	42a6      	cmp	r6, r4
 801b9ee:	d109      	bne.n	801ba04 <__libc_init_array+0x24>
 801b9f0:	4d0b      	ldr	r5, [pc, #44]	; (801ba20 <__libc_init_array+0x40>)
 801b9f2:	4c0c      	ldr	r4, [pc, #48]	; (801ba24 <__libc_init_array+0x44>)
 801b9f4:	f002 fe0e 	bl	801e614 <_init>
 801b9f8:	1b64      	subs	r4, r4, r5
 801b9fa:	10a4      	asrs	r4, r4, #2
 801b9fc:	2600      	movs	r6, #0
 801b9fe:	42a6      	cmp	r6, r4
 801ba00:	d105      	bne.n	801ba0e <__libc_init_array+0x2e>
 801ba02:	bd70      	pop	{r4, r5, r6, pc}
 801ba04:	f855 3b04 	ldr.w	r3, [r5], #4
 801ba08:	4798      	blx	r3
 801ba0a:	3601      	adds	r6, #1
 801ba0c:	e7ee      	b.n	801b9ec <__libc_init_array+0xc>
 801ba0e:	f855 3b04 	ldr.w	r3, [r5], #4
 801ba12:	4798      	blx	r3
 801ba14:	3601      	adds	r6, #1
 801ba16:	e7f2      	b.n	801b9fe <__libc_init_array+0x1e>
 801ba18:	0802c3c8 	.word	0x0802c3c8
 801ba1c:	0802c3c8 	.word	0x0802c3c8
 801ba20:	0802c3c8 	.word	0x0802c3c8
 801ba24:	0802c3dc 	.word	0x0802c3dc

0801ba28 <malloc>:
 801ba28:	4b02      	ldr	r3, [pc, #8]	; (801ba34 <malloc+0xc>)
 801ba2a:	4601      	mov	r1, r0
 801ba2c:	6818      	ldr	r0, [r3, #0]
 801ba2e:	f000 b88d 	b.w	801bb4c <_malloc_r>
 801ba32:	bf00      	nop
 801ba34:	2000009c 	.word	0x2000009c

0801ba38 <free>:
 801ba38:	4b02      	ldr	r3, [pc, #8]	; (801ba44 <free+0xc>)
 801ba3a:	4601      	mov	r1, r0
 801ba3c:	6818      	ldr	r0, [r3, #0]
 801ba3e:	f000 b819 	b.w	801ba74 <_free_r>
 801ba42:	bf00      	nop
 801ba44:	2000009c 	.word	0x2000009c

0801ba48 <memcpy>:
 801ba48:	440a      	add	r2, r1
 801ba4a:	4291      	cmp	r1, r2
 801ba4c:	f100 33ff 	add.w	r3, r0, #4294967295
 801ba50:	d100      	bne.n	801ba54 <memcpy+0xc>
 801ba52:	4770      	bx	lr
 801ba54:	b510      	push	{r4, lr}
 801ba56:	f811 4b01 	ldrb.w	r4, [r1], #1
 801ba5a:	f803 4f01 	strb.w	r4, [r3, #1]!
 801ba5e:	4291      	cmp	r1, r2
 801ba60:	d1f9      	bne.n	801ba56 <memcpy+0xe>
 801ba62:	bd10      	pop	{r4, pc}

0801ba64 <memset>:
 801ba64:	4402      	add	r2, r0
 801ba66:	4603      	mov	r3, r0
 801ba68:	4293      	cmp	r3, r2
 801ba6a:	d100      	bne.n	801ba6e <memset+0xa>
 801ba6c:	4770      	bx	lr
 801ba6e:	f803 1b01 	strb.w	r1, [r3], #1
 801ba72:	e7f9      	b.n	801ba68 <memset+0x4>

0801ba74 <_free_r>:
 801ba74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801ba76:	2900      	cmp	r1, #0
 801ba78:	d044      	beq.n	801bb04 <_free_r+0x90>
 801ba7a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801ba7e:	9001      	str	r0, [sp, #4]
 801ba80:	2b00      	cmp	r3, #0
 801ba82:	f1a1 0404 	sub.w	r4, r1, #4
 801ba86:	bfb8      	it	lt
 801ba88:	18e4      	addlt	r4, r4, r3
 801ba8a:	f002 f951 	bl	801dd30 <__malloc_lock>
 801ba8e:	4a1e      	ldr	r2, [pc, #120]	; (801bb08 <_free_r+0x94>)
 801ba90:	9801      	ldr	r0, [sp, #4]
 801ba92:	6813      	ldr	r3, [r2, #0]
 801ba94:	b933      	cbnz	r3, 801baa4 <_free_r+0x30>
 801ba96:	6063      	str	r3, [r4, #4]
 801ba98:	6014      	str	r4, [r2, #0]
 801ba9a:	b003      	add	sp, #12
 801ba9c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801baa0:	f002 b94c 	b.w	801dd3c <__malloc_unlock>
 801baa4:	42a3      	cmp	r3, r4
 801baa6:	d908      	bls.n	801baba <_free_r+0x46>
 801baa8:	6825      	ldr	r5, [r4, #0]
 801baaa:	1961      	adds	r1, r4, r5
 801baac:	428b      	cmp	r3, r1
 801baae:	bf01      	itttt	eq
 801bab0:	6819      	ldreq	r1, [r3, #0]
 801bab2:	685b      	ldreq	r3, [r3, #4]
 801bab4:	1949      	addeq	r1, r1, r5
 801bab6:	6021      	streq	r1, [r4, #0]
 801bab8:	e7ed      	b.n	801ba96 <_free_r+0x22>
 801baba:	461a      	mov	r2, r3
 801babc:	685b      	ldr	r3, [r3, #4]
 801babe:	b10b      	cbz	r3, 801bac4 <_free_r+0x50>
 801bac0:	42a3      	cmp	r3, r4
 801bac2:	d9fa      	bls.n	801baba <_free_r+0x46>
 801bac4:	6811      	ldr	r1, [r2, #0]
 801bac6:	1855      	adds	r5, r2, r1
 801bac8:	42a5      	cmp	r5, r4
 801baca:	d10b      	bne.n	801bae4 <_free_r+0x70>
 801bacc:	6824      	ldr	r4, [r4, #0]
 801bace:	4421      	add	r1, r4
 801bad0:	1854      	adds	r4, r2, r1
 801bad2:	42a3      	cmp	r3, r4
 801bad4:	6011      	str	r1, [r2, #0]
 801bad6:	d1e0      	bne.n	801ba9a <_free_r+0x26>
 801bad8:	681c      	ldr	r4, [r3, #0]
 801bada:	685b      	ldr	r3, [r3, #4]
 801badc:	6053      	str	r3, [r2, #4]
 801bade:	4421      	add	r1, r4
 801bae0:	6011      	str	r1, [r2, #0]
 801bae2:	e7da      	b.n	801ba9a <_free_r+0x26>
 801bae4:	d902      	bls.n	801baec <_free_r+0x78>
 801bae6:	230c      	movs	r3, #12
 801bae8:	6003      	str	r3, [r0, #0]
 801baea:	e7d6      	b.n	801ba9a <_free_r+0x26>
 801baec:	6825      	ldr	r5, [r4, #0]
 801baee:	1961      	adds	r1, r4, r5
 801baf0:	428b      	cmp	r3, r1
 801baf2:	bf04      	itt	eq
 801baf4:	6819      	ldreq	r1, [r3, #0]
 801baf6:	685b      	ldreq	r3, [r3, #4]
 801baf8:	6063      	str	r3, [r4, #4]
 801bafa:	bf04      	itt	eq
 801bafc:	1949      	addeq	r1, r1, r5
 801bafe:	6021      	streq	r1, [r4, #0]
 801bb00:	6054      	str	r4, [r2, #4]
 801bb02:	e7ca      	b.n	801ba9a <_free_r+0x26>
 801bb04:	b003      	add	sp, #12
 801bb06:	bd30      	pop	{r4, r5, pc}
 801bb08:	200018c0 	.word	0x200018c0

0801bb0c <sbrk_aligned>:
 801bb0c:	b570      	push	{r4, r5, r6, lr}
 801bb0e:	4e0e      	ldr	r6, [pc, #56]	; (801bb48 <sbrk_aligned+0x3c>)
 801bb10:	460c      	mov	r4, r1
 801bb12:	6831      	ldr	r1, [r6, #0]
 801bb14:	4605      	mov	r5, r0
 801bb16:	b911      	cbnz	r1, 801bb1e <sbrk_aligned+0x12>
 801bb18:	f000 fe68 	bl	801c7ec <_sbrk_r>
 801bb1c:	6030      	str	r0, [r6, #0]
 801bb1e:	4621      	mov	r1, r4
 801bb20:	4628      	mov	r0, r5
 801bb22:	f000 fe63 	bl	801c7ec <_sbrk_r>
 801bb26:	1c43      	adds	r3, r0, #1
 801bb28:	d00a      	beq.n	801bb40 <sbrk_aligned+0x34>
 801bb2a:	1cc4      	adds	r4, r0, #3
 801bb2c:	f024 0403 	bic.w	r4, r4, #3
 801bb30:	42a0      	cmp	r0, r4
 801bb32:	d007      	beq.n	801bb44 <sbrk_aligned+0x38>
 801bb34:	1a21      	subs	r1, r4, r0
 801bb36:	4628      	mov	r0, r5
 801bb38:	f000 fe58 	bl	801c7ec <_sbrk_r>
 801bb3c:	3001      	adds	r0, #1
 801bb3e:	d101      	bne.n	801bb44 <sbrk_aligned+0x38>
 801bb40:	f04f 34ff 	mov.w	r4, #4294967295
 801bb44:	4620      	mov	r0, r4
 801bb46:	bd70      	pop	{r4, r5, r6, pc}
 801bb48:	200018c4 	.word	0x200018c4

0801bb4c <_malloc_r>:
 801bb4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bb50:	1ccd      	adds	r5, r1, #3
 801bb52:	f025 0503 	bic.w	r5, r5, #3
 801bb56:	3508      	adds	r5, #8
 801bb58:	2d0c      	cmp	r5, #12
 801bb5a:	bf38      	it	cc
 801bb5c:	250c      	movcc	r5, #12
 801bb5e:	2d00      	cmp	r5, #0
 801bb60:	4607      	mov	r7, r0
 801bb62:	db01      	blt.n	801bb68 <_malloc_r+0x1c>
 801bb64:	42a9      	cmp	r1, r5
 801bb66:	d905      	bls.n	801bb74 <_malloc_r+0x28>
 801bb68:	230c      	movs	r3, #12
 801bb6a:	603b      	str	r3, [r7, #0]
 801bb6c:	2600      	movs	r6, #0
 801bb6e:	4630      	mov	r0, r6
 801bb70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bb74:	4e2e      	ldr	r6, [pc, #184]	; (801bc30 <_malloc_r+0xe4>)
 801bb76:	f002 f8db 	bl	801dd30 <__malloc_lock>
 801bb7a:	6833      	ldr	r3, [r6, #0]
 801bb7c:	461c      	mov	r4, r3
 801bb7e:	bb34      	cbnz	r4, 801bbce <_malloc_r+0x82>
 801bb80:	4629      	mov	r1, r5
 801bb82:	4638      	mov	r0, r7
 801bb84:	f7ff ffc2 	bl	801bb0c <sbrk_aligned>
 801bb88:	1c43      	adds	r3, r0, #1
 801bb8a:	4604      	mov	r4, r0
 801bb8c:	d14d      	bne.n	801bc2a <_malloc_r+0xde>
 801bb8e:	6834      	ldr	r4, [r6, #0]
 801bb90:	4626      	mov	r6, r4
 801bb92:	2e00      	cmp	r6, #0
 801bb94:	d140      	bne.n	801bc18 <_malloc_r+0xcc>
 801bb96:	6823      	ldr	r3, [r4, #0]
 801bb98:	4631      	mov	r1, r6
 801bb9a:	4638      	mov	r0, r7
 801bb9c:	eb04 0803 	add.w	r8, r4, r3
 801bba0:	f000 fe24 	bl	801c7ec <_sbrk_r>
 801bba4:	4580      	cmp	r8, r0
 801bba6:	d13a      	bne.n	801bc1e <_malloc_r+0xd2>
 801bba8:	6821      	ldr	r1, [r4, #0]
 801bbaa:	3503      	adds	r5, #3
 801bbac:	1a6d      	subs	r5, r5, r1
 801bbae:	f025 0503 	bic.w	r5, r5, #3
 801bbb2:	3508      	adds	r5, #8
 801bbb4:	2d0c      	cmp	r5, #12
 801bbb6:	bf38      	it	cc
 801bbb8:	250c      	movcc	r5, #12
 801bbba:	4629      	mov	r1, r5
 801bbbc:	4638      	mov	r0, r7
 801bbbe:	f7ff ffa5 	bl	801bb0c <sbrk_aligned>
 801bbc2:	3001      	adds	r0, #1
 801bbc4:	d02b      	beq.n	801bc1e <_malloc_r+0xd2>
 801bbc6:	6823      	ldr	r3, [r4, #0]
 801bbc8:	442b      	add	r3, r5
 801bbca:	6023      	str	r3, [r4, #0]
 801bbcc:	e00e      	b.n	801bbec <_malloc_r+0xa0>
 801bbce:	6822      	ldr	r2, [r4, #0]
 801bbd0:	1b52      	subs	r2, r2, r5
 801bbd2:	d41e      	bmi.n	801bc12 <_malloc_r+0xc6>
 801bbd4:	2a0b      	cmp	r2, #11
 801bbd6:	d916      	bls.n	801bc06 <_malloc_r+0xba>
 801bbd8:	1961      	adds	r1, r4, r5
 801bbda:	42a3      	cmp	r3, r4
 801bbdc:	6025      	str	r5, [r4, #0]
 801bbde:	bf18      	it	ne
 801bbe0:	6059      	strne	r1, [r3, #4]
 801bbe2:	6863      	ldr	r3, [r4, #4]
 801bbe4:	bf08      	it	eq
 801bbe6:	6031      	streq	r1, [r6, #0]
 801bbe8:	5162      	str	r2, [r4, r5]
 801bbea:	604b      	str	r3, [r1, #4]
 801bbec:	4638      	mov	r0, r7
 801bbee:	f104 060b 	add.w	r6, r4, #11
 801bbf2:	f002 f8a3 	bl	801dd3c <__malloc_unlock>
 801bbf6:	f026 0607 	bic.w	r6, r6, #7
 801bbfa:	1d23      	adds	r3, r4, #4
 801bbfc:	1af2      	subs	r2, r6, r3
 801bbfe:	d0b6      	beq.n	801bb6e <_malloc_r+0x22>
 801bc00:	1b9b      	subs	r3, r3, r6
 801bc02:	50a3      	str	r3, [r4, r2]
 801bc04:	e7b3      	b.n	801bb6e <_malloc_r+0x22>
 801bc06:	6862      	ldr	r2, [r4, #4]
 801bc08:	42a3      	cmp	r3, r4
 801bc0a:	bf0c      	ite	eq
 801bc0c:	6032      	streq	r2, [r6, #0]
 801bc0e:	605a      	strne	r2, [r3, #4]
 801bc10:	e7ec      	b.n	801bbec <_malloc_r+0xa0>
 801bc12:	4623      	mov	r3, r4
 801bc14:	6864      	ldr	r4, [r4, #4]
 801bc16:	e7b2      	b.n	801bb7e <_malloc_r+0x32>
 801bc18:	4634      	mov	r4, r6
 801bc1a:	6876      	ldr	r6, [r6, #4]
 801bc1c:	e7b9      	b.n	801bb92 <_malloc_r+0x46>
 801bc1e:	230c      	movs	r3, #12
 801bc20:	603b      	str	r3, [r7, #0]
 801bc22:	4638      	mov	r0, r7
 801bc24:	f002 f88a 	bl	801dd3c <__malloc_unlock>
 801bc28:	e7a1      	b.n	801bb6e <_malloc_r+0x22>
 801bc2a:	6025      	str	r5, [r4, #0]
 801bc2c:	e7de      	b.n	801bbec <_malloc_r+0xa0>
 801bc2e:	bf00      	nop
 801bc30:	200018c0 	.word	0x200018c0

0801bc34 <__sfputc_r>:
 801bc34:	6893      	ldr	r3, [r2, #8]
 801bc36:	3b01      	subs	r3, #1
 801bc38:	2b00      	cmp	r3, #0
 801bc3a:	b410      	push	{r4}
 801bc3c:	6093      	str	r3, [r2, #8]
 801bc3e:	da08      	bge.n	801bc52 <__sfputc_r+0x1e>
 801bc40:	6994      	ldr	r4, [r2, #24]
 801bc42:	42a3      	cmp	r3, r4
 801bc44:	db01      	blt.n	801bc4a <__sfputc_r+0x16>
 801bc46:	290a      	cmp	r1, #10
 801bc48:	d103      	bne.n	801bc52 <__sfputc_r+0x1e>
 801bc4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bc4e:	f000 bead 	b.w	801c9ac <__swbuf_r>
 801bc52:	6813      	ldr	r3, [r2, #0]
 801bc54:	1c58      	adds	r0, r3, #1
 801bc56:	6010      	str	r0, [r2, #0]
 801bc58:	7019      	strb	r1, [r3, #0]
 801bc5a:	4608      	mov	r0, r1
 801bc5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bc60:	4770      	bx	lr

0801bc62 <__sfputs_r>:
 801bc62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bc64:	4606      	mov	r6, r0
 801bc66:	460f      	mov	r7, r1
 801bc68:	4614      	mov	r4, r2
 801bc6a:	18d5      	adds	r5, r2, r3
 801bc6c:	42ac      	cmp	r4, r5
 801bc6e:	d101      	bne.n	801bc74 <__sfputs_r+0x12>
 801bc70:	2000      	movs	r0, #0
 801bc72:	e007      	b.n	801bc84 <__sfputs_r+0x22>
 801bc74:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bc78:	463a      	mov	r2, r7
 801bc7a:	4630      	mov	r0, r6
 801bc7c:	f7ff ffda 	bl	801bc34 <__sfputc_r>
 801bc80:	1c43      	adds	r3, r0, #1
 801bc82:	d1f3      	bne.n	801bc6c <__sfputs_r+0xa>
 801bc84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801bc88 <_vfiprintf_r>:
 801bc88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc8c:	460d      	mov	r5, r1
 801bc8e:	b09d      	sub	sp, #116	; 0x74
 801bc90:	4614      	mov	r4, r2
 801bc92:	4698      	mov	r8, r3
 801bc94:	4606      	mov	r6, r0
 801bc96:	b118      	cbz	r0, 801bca0 <_vfiprintf_r+0x18>
 801bc98:	6983      	ldr	r3, [r0, #24]
 801bc9a:	b90b      	cbnz	r3, 801bca0 <_vfiprintf_r+0x18>
 801bc9c:	f001 ff3c 	bl	801db18 <__sinit>
 801bca0:	4b89      	ldr	r3, [pc, #548]	; (801bec8 <_vfiprintf_r+0x240>)
 801bca2:	429d      	cmp	r5, r3
 801bca4:	d11b      	bne.n	801bcde <_vfiprintf_r+0x56>
 801bca6:	6875      	ldr	r5, [r6, #4]
 801bca8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bcaa:	07d9      	lsls	r1, r3, #31
 801bcac:	d405      	bmi.n	801bcba <_vfiprintf_r+0x32>
 801bcae:	89ab      	ldrh	r3, [r5, #12]
 801bcb0:	059a      	lsls	r2, r3, #22
 801bcb2:	d402      	bmi.n	801bcba <_vfiprintf_r+0x32>
 801bcb4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bcb6:	f001 ffd2 	bl	801dc5e <__retarget_lock_acquire_recursive>
 801bcba:	89ab      	ldrh	r3, [r5, #12]
 801bcbc:	071b      	lsls	r3, r3, #28
 801bcbe:	d501      	bpl.n	801bcc4 <_vfiprintf_r+0x3c>
 801bcc0:	692b      	ldr	r3, [r5, #16]
 801bcc2:	b9eb      	cbnz	r3, 801bd00 <_vfiprintf_r+0x78>
 801bcc4:	4629      	mov	r1, r5
 801bcc6:	4630      	mov	r0, r6
 801bcc8:	f000 fec2 	bl	801ca50 <__swsetup_r>
 801bccc:	b1c0      	cbz	r0, 801bd00 <_vfiprintf_r+0x78>
 801bcce:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bcd0:	07dc      	lsls	r4, r3, #31
 801bcd2:	d50e      	bpl.n	801bcf2 <_vfiprintf_r+0x6a>
 801bcd4:	f04f 30ff 	mov.w	r0, #4294967295
 801bcd8:	b01d      	add	sp, #116	; 0x74
 801bcda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcde:	4b7b      	ldr	r3, [pc, #492]	; (801becc <_vfiprintf_r+0x244>)
 801bce0:	429d      	cmp	r5, r3
 801bce2:	d101      	bne.n	801bce8 <_vfiprintf_r+0x60>
 801bce4:	68b5      	ldr	r5, [r6, #8]
 801bce6:	e7df      	b.n	801bca8 <_vfiprintf_r+0x20>
 801bce8:	4b79      	ldr	r3, [pc, #484]	; (801bed0 <_vfiprintf_r+0x248>)
 801bcea:	429d      	cmp	r5, r3
 801bcec:	bf08      	it	eq
 801bcee:	68f5      	ldreq	r5, [r6, #12]
 801bcf0:	e7da      	b.n	801bca8 <_vfiprintf_r+0x20>
 801bcf2:	89ab      	ldrh	r3, [r5, #12]
 801bcf4:	0598      	lsls	r0, r3, #22
 801bcf6:	d4ed      	bmi.n	801bcd4 <_vfiprintf_r+0x4c>
 801bcf8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bcfa:	f001 ffb2 	bl	801dc62 <__retarget_lock_release_recursive>
 801bcfe:	e7e9      	b.n	801bcd4 <_vfiprintf_r+0x4c>
 801bd00:	2300      	movs	r3, #0
 801bd02:	9309      	str	r3, [sp, #36]	; 0x24
 801bd04:	2320      	movs	r3, #32
 801bd06:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801bd0a:	f8cd 800c 	str.w	r8, [sp, #12]
 801bd0e:	2330      	movs	r3, #48	; 0x30
 801bd10:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801bed4 <_vfiprintf_r+0x24c>
 801bd14:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801bd18:	f04f 0901 	mov.w	r9, #1
 801bd1c:	4623      	mov	r3, r4
 801bd1e:	469a      	mov	sl, r3
 801bd20:	f813 2b01 	ldrb.w	r2, [r3], #1
 801bd24:	b10a      	cbz	r2, 801bd2a <_vfiprintf_r+0xa2>
 801bd26:	2a25      	cmp	r2, #37	; 0x25
 801bd28:	d1f9      	bne.n	801bd1e <_vfiprintf_r+0x96>
 801bd2a:	ebba 0b04 	subs.w	fp, sl, r4
 801bd2e:	d00b      	beq.n	801bd48 <_vfiprintf_r+0xc0>
 801bd30:	465b      	mov	r3, fp
 801bd32:	4622      	mov	r2, r4
 801bd34:	4629      	mov	r1, r5
 801bd36:	4630      	mov	r0, r6
 801bd38:	f7ff ff93 	bl	801bc62 <__sfputs_r>
 801bd3c:	3001      	adds	r0, #1
 801bd3e:	f000 80aa 	beq.w	801be96 <_vfiprintf_r+0x20e>
 801bd42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bd44:	445a      	add	r2, fp
 801bd46:	9209      	str	r2, [sp, #36]	; 0x24
 801bd48:	f89a 3000 	ldrb.w	r3, [sl]
 801bd4c:	2b00      	cmp	r3, #0
 801bd4e:	f000 80a2 	beq.w	801be96 <_vfiprintf_r+0x20e>
 801bd52:	2300      	movs	r3, #0
 801bd54:	f04f 32ff 	mov.w	r2, #4294967295
 801bd58:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801bd5c:	f10a 0a01 	add.w	sl, sl, #1
 801bd60:	9304      	str	r3, [sp, #16]
 801bd62:	9307      	str	r3, [sp, #28]
 801bd64:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801bd68:	931a      	str	r3, [sp, #104]	; 0x68
 801bd6a:	4654      	mov	r4, sl
 801bd6c:	2205      	movs	r2, #5
 801bd6e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bd72:	4858      	ldr	r0, [pc, #352]	; (801bed4 <_vfiprintf_r+0x24c>)
 801bd74:	f7e4 fa44 	bl	8000200 <memchr>
 801bd78:	9a04      	ldr	r2, [sp, #16]
 801bd7a:	b9d8      	cbnz	r0, 801bdb4 <_vfiprintf_r+0x12c>
 801bd7c:	06d1      	lsls	r1, r2, #27
 801bd7e:	bf44      	itt	mi
 801bd80:	2320      	movmi	r3, #32
 801bd82:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801bd86:	0713      	lsls	r3, r2, #28
 801bd88:	bf44      	itt	mi
 801bd8a:	232b      	movmi	r3, #43	; 0x2b
 801bd8c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801bd90:	f89a 3000 	ldrb.w	r3, [sl]
 801bd94:	2b2a      	cmp	r3, #42	; 0x2a
 801bd96:	d015      	beq.n	801bdc4 <_vfiprintf_r+0x13c>
 801bd98:	9a07      	ldr	r2, [sp, #28]
 801bd9a:	4654      	mov	r4, sl
 801bd9c:	2000      	movs	r0, #0
 801bd9e:	f04f 0c0a 	mov.w	ip, #10
 801bda2:	4621      	mov	r1, r4
 801bda4:	f811 3b01 	ldrb.w	r3, [r1], #1
 801bda8:	3b30      	subs	r3, #48	; 0x30
 801bdaa:	2b09      	cmp	r3, #9
 801bdac:	d94e      	bls.n	801be4c <_vfiprintf_r+0x1c4>
 801bdae:	b1b0      	cbz	r0, 801bdde <_vfiprintf_r+0x156>
 801bdb0:	9207      	str	r2, [sp, #28]
 801bdb2:	e014      	b.n	801bdde <_vfiprintf_r+0x156>
 801bdb4:	eba0 0308 	sub.w	r3, r0, r8
 801bdb8:	fa09 f303 	lsl.w	r3, r9, r3
 801bdbc:	4313      	orrs	r3, r2
 801bdbe:	9304      	str	r3, [sp, #16]
 801bdc0:	46a2      	mov	sl, r4
 801bdc2:	e7d2      	b.n	801bd6a <_vfiprintf_r+0xe2>
 801bdc4:	9b03      	ldr	r3, [sp, #12]
 801bdc6:	1d19      	adds	r1, r3, #4
 801bdc8:	681b      	ldr	r3, [r3, #0]
 801bdca:	9103      	str	r1, [sp, #12]
 801bdcc:	2b00      	cmp	r3, #0
 801bdce:	bfbb      	ittet	lt
 801bdd0:	425b      	neglt	r3, r3
 801bdd2:	f042 0202 	orrlt.w	r2, r2, #2
 801bdd6:	9307      	strge	r3, [sp, #28]
 801bdd8:	9307      	strlt	r3, [sp, #28]
 801bdda:	bfb8      	it	lt
 801bddc:	9204      	strlt	r2, [sp, #16]
 801bdde:	7823      	ldrb	r3, [r4, #0]
 801bde0:	2b2e      	cmp	r3, #46	; 0x2e
 801bde2:	d10c      	bne.n	801bdfe <_vfiprintf_r+0x176>
 801bde4:	7863      	ldrb	r3, [r4, #1]
 801bde6:	2b2a      	cmp	r3, #42	; 0x2a
 801bde8:	d135      	bne.n	801be56 <_vfiprintf_r+0x1ce>
 801bdea:	9b03      	ldr	r3, [sp, #12]
 801bdec:	1d1a      	adds	r2, r3, #4
 801bdee:	681b      	ldr	r3, [r3, #0]
 801bdf0:	9203      	str	r2, [sp, #12]
 801bdf2:	2b00      	cmp	r3, #0
 801bdf4:	bfb8      	it	lt
 801bdf6:	f04f 33ff 	movlt.w	r3, #4294967295
 801bdfa:	3402      	adds	r4, #2
 801bdfc:	9305      	str	r3, [sp, #20]
 801bdfe:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801bee4 <_vfiprintf_r+0x25c>
 801be02:	7821      	ldrb	r1, [r4, #0]
 801be04:	2203      	movs	r2, #3
 801be06:	4650      	mov	r0, sl
 801be08:	f7e4 f9fa 	bl	8000200 <memchr>
 801be0c:	b140      	cbz	r0, 801be20 <_vfiprintf_r+0x198>
 801be0e:	2340      	movs	r3, #64	; 0x40
 801be10:	eba0 000a 	sub.w	r0, r0, sl
 801be14:	fa03 f000 	lsl.w	r0, r3, r0
 801be18:	9b04      	ldr	r3, [sp, #16]
 801be1a:	4303      	orrs	r3, r0
 801be1c:	3401      	adds	r4, #1
 801be1e:	9304      	str	r3, [sp, #16]
 801be20:	f814 1b01 	ldrb.w	r1, [r4], #1
 801be24:	482c      	ldr	r0, [pc, #176]	; (801bed8 <_vfiprintf_r+0x250>)
 801be26:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801be2a:	2206      	movs	r2, #6
 801be2c:	f7e4 f9e8 	bl	8000200 <memchr>
 801be30:	2800      	cmp	r0, #0
 801be32:	d03f      	beq.n	801beb4 <_vfiprintf_r+0x22c>
 801be34:	4b29      	ldr	r3, [pc, #164]	; (801bedc <_vfiprintf_r+0x254>)
 801be36:	bb1b      	cbnz	r3, 801be80 <_vfiprintf_r+0x1f8>
 801be38:	9b03      	ldr	r3, [sp, #12]
 801be3a:	3307      	adds	r3, #7
 801be3c:	f023 0307 	bic.w	r3, r3, #7
 801be40:	3308      	adds	r3, #8
 801be42:	9303      	str	r3, [sp, #12]
 801be44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be46:	443b      	add	r3, r7
 801be48:	9309      	str	r3, [sp, #36]	; 0x24
 801be4a:	e767      	b.n	801bd1c <_vfiprintf_r+0x94>
 801be4c:	fb0c 3202 	mla	r2, ip, r2, r3
 801be50:	460c      	mov	r4, r1
 801be52:	2001      	movs	r0, #1
 801be54:	e7a5      	b.n	801bda2 <_vfiprintf_r+0x11a>
 801be56:	2300      	movs	r3, #0
 801be58:	3401      	adds	r4, #1
 801be5a:	9305      	str	r3, [sp, #20]
 801be5c:	4619      	mov	r1, r3
 801be5e:	f04f 0c0a 	mov.w	ip, #10
 801be62:	4620      	mov	r0, r4
 801be64:	f810 2b01 	ldrb.w	r2, [r0], #1
 801be68:	3a30      	subs	r2, #48	; 0x30
 801be6a:	2a09      	cmp	r2, #9
 801be6c:	d903      	bls.n	801be76 <_vfiprintf_r+0x1ee>
 801be6e:	2b00      	cmp	r3, #0
 801be70:	d0c5      	beq.n	801bdfe <_vfiprintf_r+0x176>
 801be72:	9105      	str	r1, [sp, #20]
 801be74:	e7c3      	b.n	801bdfe <_vfiprintf_r+0x176>
 801be76:	fb0c 2101 	mla	r1, ip, r1, r2
 801be7a:	4604      	mov	r4, r0
 801be7c:	2301      	movs	r3, #1
 801be7e:	e7f0      	b.n	801be62 <_vfiprintf_r+0x1da>
 801be80:	ab03      	add	r3, sp, #12
 801be82:	9300      	str	r3, [sp, #0]
 801be84:	462a      	mov	r2, r5
 801be86:	4b16      	ldr	r3, [pc, #88]	; (801bee0 <_vfiprintf_r+0x258>)
 801be88:	a904      	add	r1, sp, #16
 801be8a:	4630      	mov	r0, r6
 801be8c:	f000 f8cc 	bl	801c028 <_printf_float>
 801be90:	4607      	mov	r7, r0
 801be92:	1c78      	adds	r0, r7, #1
 801be94:	d1d6      	bne.n	801be44 <_vfiprintf_r+0x1bc>
 801be96:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801be98:	07d9      	lsls	r1, r3, #31
 801be9a:	d405      	bmi.n	801bea8 <_vfiprintf_r+0x220>
 801be9c:	89ab      	ldrh	r3, [r5, #12]
 801be9e:	059a      	lsls	r2, r3, #22
 801bea0:	d402      	bmi.n	801bea8 <_vfiprintf_r+0x220>
 801bea2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bea4:	f001 fedd 	bl	801dc62 <__retarget_lock_release_recursive>
 801bea8:	89ab      	ldrh	r3, [r5, #12]
 801beaa:	065b      	lsls	r3, r3, #25
 801beac:	f53f af12 	bmi.w	801bcd4 <_vfiprintf_r+0x4c>
 801beb0:	9809      	ldr	r0, [sp, #36]	; 0x24
 801beb2:	e711      	b.n	801bcd8 <_vfiprintf_r+0x50>
 801beb4:	ab03      	add	r3, sp, #12
 801beb6:	9300      	str	r3, [sp, #0]
 801beb8:	462a      	mov	r2, r5
 801beba:	4b09      	ldr	r3, [pc, #36]	; (801bee0 <_vfiprintf_r+0x258>)
 801bebc:	a904      	add	r1, sp, #16
 801bebe:	4630      	mov	r0, r6
 801bec0:	f000 fb56 	bl	801c570 <_printf_i>
 801bec4:	e7e4      	b.n	801be90 <_vfiprintf_r+0x208>
 801bec6:	bf00      	nop
 801bec8:	08021a90 	.word	0x08021a90
 801becc:	08021ab0 	.word	0x08021ab0
 801bed0:	08021a70 	.word	0x08021a70
 801bed4:	08021894 	.word	0x08021894
 801bed8:	0802189e 	.word	0x0802189e
 801bedc:	0801c029 	.word	0x0801c029
 801bee0:	0801bc63 	.word	0x0801bc63
 801bee4:	0802189a 	.word	0x0802189a

0801bee8 <__cvt>:
 801bee8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801beec:	ec55 4b10 	vmov	r4, r5, d0
 801bef0:	2d00      	cmp	r5, #0
 801bef2:	460e      	mov	r6, r1
 801bef4:	4619      	mov	r1, r3
 801bef6:	462b      	mov	r3, r5
 801bef8:	bfbb      	ittet	lt
 801befa:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 801befe:	461d      	movlt	r5, r3
 801bf00:	2300      	movge	r3, #0
 801bf02:	232d      	movlt	r3, #45	; 0x2d
 801bf04:	700b      	strb	r3, [r1, #0]
 801bf06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf08:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801bf0c:	4691      	mov	r9, r2
 801bf0e:	f023 0820 	bic.w	r8, r3, #32
 801bf12:	bfbc      	itt	lt
 801bf14:	4622      	movlt	r2, r4
 801bf16:	4614      	movlt	r4, r2
 801bf18:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801bf1c:	d005      	beq.n	801bf2a <__cvt+0x42>
 801bf1e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 801bf22:	d100      	bne.n	801bf26 <__cvt+0x3e>
 801bf24:	3601      	adds	r6, #1
 801bf26:	2102      	movs	r1, #2
 801bf28:	e000      	b.n	801bf2c <__cvt+0x44>
 801bf2a:	2103      	movs	r1, #3
 801bf2c:	ab03      	add	r3, sp, #12
 801bf2e:	9301      	str	r3, [sp, #4]
 801bf30:	ab02      	add	r3, sp, #8
 801bf32:	9300      	str	r3, [sp, #0]
 801bf34:	ec45 4b10 	vmov	d0, r4, r5
 801bf38:	4653      	mov	r3, sl
 801bf3a:	4632      	mov	r2, r6
 801bf3c:	f000 fee4 	bl	801cd08 <_dtoa_r>
 801bf40:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 801bf44:	4607      	mov	r7, r0
 801bf46:	d102      	bne.n	801bf4e <__cvt+0x66>
 801bf48:	f019 0f01 	tst.w	r9, #1
 801bf4c:	d022      	beq.n	801bf94 <__cvt+0xac>
 801bf4e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801bf52:	eb07 0906 	add.w	r9, r7, r6
 801bf56:	d110      	bne.n	801bf7a <__cvt+0x92>
 801bf58:	783b      	ldrb	r3, [r7, #0]
 801bf5a:	2b30      	cmp	r3, #48	; 0x30
 801bf5c:	d10a      	bne.n	801bf74 <__cvt+0x8c>
 801bf5e:	2200      	movs	r2, #0
 801bf60:	2300      	movs	r3, #0
 801bf62:	4620      	mov	r0, r4
 801bf64:	4629      	mov	r1, r5
 801bf66:	f7e4 fdbf 	bl	8000ae8 <__aeabi_dcmpeq>
 801bf6a:	b918      	cbnz	r0, 801bf74 <__cvt+0x8c>
 801bf6c:	f1c6 0601 	rsb	r6, r6, #1
 801bf70:	f8ca 6000 	str.w	r6, [sl]
 801bf74:	f8da 3000 	ldr.w	r3, [sl]
 801bf78:	4499      	add	r9, r3
 801bf7a:	2200      	movs	r2, #0
 801bf7c:	2300      	movs	r3, #0
 801bf7e:	4620      	mov	r0, r4
 801bf80:	4629      	mov	r1, r5
 801bf82:	f7e4 fdb1 	bl	8000ae8 <__aeabi_dcmpeq>
 801bf86:	b108      	cbz	r0, 801bf8c <__cvt+0xa4>
 801bf88:	f8cd 900c 	str.w	r9, [sp, #12]
 801bf8c:	2230      	movs	r2, #48	; 0x30
 801bf8e:	9b03      	ldr	r3, [sp, #12]
 801bf90:	454b      	cmp	r3, r9
 801bf92:	d307      	bcc.n	801bfa4 <__cvt+0xbc>
 801bf94:	9b03      	ldr	r3, [sp, #12]
 801bf96:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bf98:	1bdb      	subs	r3, r3, r7
 801bf9a:	4638      	mov	r0, r7
 801bf9c:	6013      	str	r3, [r2, #0]
 801bf9e:	b004      	add	sp, #16
 801bfa0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bfa4:	1c59      	adds	r1, r3, #1
 801bfa6:	9103      	str	r1, [sp, #12]
 801bfa8:	701a      	strb	r2, [r3, #0]
 801bfaa:	e7f0      	b.n	801bf8e <__cvt+0xa6>

0801bfac <__exponent>:
 801bfac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801bfae:	4603      	mov	r3, r0
 801bfb0:	2900      	cmp	r1, #0
 801bfb2:	bfb8      	it	lt
 801bfb4:	4249      	neglt	r1, r1
 801bfb6:	f803 2b02 	strb.w	r2, [r3], #2
 801bfba:	bfb4      	ite	lt
 801bfbc:	222d      	movlt	r2, #45	; 0x2d
 801bfbe:	222b      	movge	r2, #43	; 0x2b
 801bfc0:	2909      	cmp	r1, #9
 801bfc2:	7042      	strb	r2, [r0, #1]
 801bfc4:	dd2a      	ble.n	801c01c <__exponent+0x70>
 801bfc6:	f10d 0407 	add.w	r4, sp, #7
 801bfca:	46a4      	mov	ip, r4
 801bfcc:	270a      	movs	r7, #10
 801bfce:	46a6      	mov	lr, r4
 801bfd0:	460a      	mov	r2, r1
 801bfd2:	fb91 f6f7 	sdiv	r6, r1, r7
 801bfd6:	fb07 1516 	mls	r5, r7, r6, r1
 801bfda:	3530      	adds	r5, #48	; 0x30
 801bfdc:	2a63      	cmp	r2, #99	; 0x63
 801bfde:	f104 34ff 	add.w	r4, r4, #4294967295
 801bfe2:	f80e 5c01 	strb.w	r5, [lr, #-1]
 801bfe6:	4631      	mov	r1, r6
 801bfe8:	dcf1      	bgt.n	801bfce <__exponent+0x22>
 801bfea:	3130      	adds	r1, #48	; 0x30
 801bfec:	f1ae 0502 	sub.w	r5, lr, #2
 801bff0:	f804 1c01 	strb.w	r1, [r4, #-1]
 801bff4:	1c44      	adds	r4, r0, #1
 801bff6:	4629      	mov	r1, r5
 801bff8:	4561      	cmp	r1, ip
 801bffa:	d30a      	bcc.n	801c012 <__exponent+0x66>
 801bffc:	f10d 0209 	add.w	r2, sp, #9
 801c000:	eba2 020e 	sub.w	r2, r2, lr
 801c004:	4565      	cmp	r5, ip
 801c006:	bf88      	it	hi
 801c008:	2200      	movhi	r2, #0
 801c00a:	4413      	add	r3, r2
 801c00c:	1a18      	subs	r0, r3, r0
 801c00e:	b003      	add	sp, #12
 801c010:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c012:	f811 2b01 	ldrb.w	r2, [r1], #1
 801c016:	f804 2f01 	strb.w	r2, [r4, #1]!
 801c01a:	e7ed      	b.n	801bff8 <__exponent+0x4c>
 801c01c:	2330      	movs	r3, #48	; 0x30
 801c01e:	3130      	adds	r1, #48	; 0x30
 801c020:	7083      	strb	r3, [r0, #2]
 801c022:	70c1      	strb	r1, [r0, #3]
 801c024:	1d03      	adds	r3, r0, #4
 801c026:	e7f1      	b.n	801c00c <__exponent+0x60>

0801c028 <_printf_float>:
 801c028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c02c:	ed2d 8b02 	vpush	{d8}
 801c030:	b08d      	sub	sp, #52	; 0x34
 801c032:	460c      	mov	r4, r1
 801c034:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 801c038:	4616      	mov	r6, r2
 801c03a:	461f      	mov	r7, r3
 801c03c:	4605      	mov	r5, r0
 801c03e:	f001 fe09 	bl	801dc54 <_localeconv_r>
 801c042:	f8d0 a000 	ldr.w	sl, [r0]
 801c046:	4650      	mov	r0, sl
 801c048:	f7e4 f8d2 	bl	80001f0 <strlen>
 801c04c:	2300      	movs	r3, #0
 801c04e:	930a      	str	r3, [sp, #40]	; 0x28
 801c050:	6823      	ldr	r3, [r4, #0]
 801c052:	9305      	str	r3, [sp, #20]
 801c054:	f8d8 3000 	ldr.w	r3, [r8]
 801c058:	f894 b018 	ldrb.w	fp, [r4, #24]
 801c05c:	3307      	adds	r3, #7
 801c05e:	f023 0307 	bic.w	r3, r3, #7
 801c062:	f103 0208 	add.w	r2, r3, #8
 801c066:	f8c8 2000 	str.w	r2, [r8]
 801c06a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801c06e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 801c072:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 801c076:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 801c07a:	9307      	str	r3, [sp, #28]
 801c07c:	f8cd 8018 	str.w	r8, [sp, #24]
 801c080:	ee08 0a10 	vmov	s16, r0
 801c084:	4b9f      	ldr	r3, [pc, #636]	; (801c304 <_printf_float+0x2dc>)
 801c086:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c08a:	f04f 32ff 	mov.w	r2, #4294967295
 801c08e:	f7e4 fd5d 	bl	8000b4c <__aeabi_dcmpun>
 801c092:	bb88      	cbnz	r0, 801c0f8 <_printf_float+0xd0>
 801c094:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c098:	4b9a      	ldr	r3, [pc, #616]	; (801c304 <_printf_float+0x2dc>)
 801c09a:	f04f 32ff 	mov.w	r2, #4294967295
 801c09e:	f7e4 fd37 	bl	8000b10 <__aeabi_dcmple>
 801c0a2:	bb48      	cbnz	r0, 801c0f8 <_printf_float+0xd0>
 801c0a4:	2200      	movs	r2, #0
 801c0a6:	2300      	movs	r3, #0
 801c0a8:	4640      	mov	r0, r8
 801c0aa:	4649      	mov	r1, r9
 801c0ac:	f7e4 fd26 	bl	8000afc <__aeabi_dcmplt>
 801c0b0:	b110      	cbz	r0, 801c0b8 <_printf_float+0x90>
 801c0b2:	232d      	movs	r3, #45	; 0x2d
 801c0b4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c0b8:	4b93      	ldr	r3, [pc, #588]	; (801c308 <_printf_float+0x2e0>)
 801c0ba:	4894      	ldr	r0, [pc, #592]	; (801c30c <_printf_float+0x2e4>)
 801c0bc:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 801c0c0:	bf94      	ite	ls
 801c0c2:	4698      	movls	r8, r3
 801c0c4:	4680      	movhi	r8, r0
 801c0c6:	2303      	movs	r3, #3
 801c0c8:	6123      	str	r3, [r4, #16]
 801c0ca:	9b05      	ldr	r3, [sp, #20]
 801c0cc:	f023 0204 	bic.w	r2, r3, #4
 801c0d0:	6022      	str	r2, [r4, #0]
 801c0d2:	f04f 0900 	mov.w	r9, #0
 801c0d6:	9700      	str	r7, [sp, #0]
 801c0d8:	4633      	mov	r3, r6
 801c0da:	aa0b      	add	r2, sp, #44	; 0x2c
 801c0dc:	4621      	mov	r1, r4
 801c0de:	4628      	mov	r0, r5
 801c0e0:	f000 f9d8 	bl	801c494 <_printf_common>
 801c0e4:	3001      	adds	r0, #1
 801c0e6:	f040 8090 	bne.w	801c20a <_printf_float+0x1e2>
 801c0ea:	f04f 30ff 	mov.w	r0, #4294967295
 801c0ee:	b00d      	add	sp, #52	; 0x34
 801c0f0:	ecbd 8b02 	vpop	{d8}
 801c0f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0f8:	4642      	mov	r2, r8
 801c0fa:	464b      	mov	r3, r9
 801c0fc:	4640      	mov	r0, r8
 801c0fe:	4649      	mov	r1, r9
 801c100:	f7e4 fd24 	bl	8000b4c <__aeabi_dcmpun>
 801c104:	b140      	cbz	r0, 801c118 <_printf_float+0xf0>
 801c106:	464b      	mov	r3, r9
 801c108:	2b00      	cmp	r3, #0
 801c10a:	bfbc      	itt	lt
 801c10c:	232d      	movlt	r3, #45	; 0x2d
 801c10e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 801c112:	487f      	ldr	r0, [pc, #508]	; (801c310 <_printf_float+0x2e8>)
 801c114:	4b7f      	ldr	r3, [pc, #508]	; (801c314 <_printf_float+0x2ec>)
 801c116:	e7d1      	b.n	801c0bc <_printf_float+0x94>
 801c118:	6863      	ldr	r3, [r4, #4]
 801c11a:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 801c11e:	9206      	str	r2, [sp, #24]
 801c120:	1c5a      	adds	r2, r3, #1
 801c122:	d13f      	bne.n	801c1a4 <_printf_float+0x17c>
 801c124:	2306      	movs	r3, #6
 801c126:	6063      	str	r3, [r4, #4]
 801c128:	9b05      	ldr	r3, [sp, #20]
 801c12a:	6861      	ldr	r1, [r4, #4]
 801c12c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 801c130:	2300      	movs	r3, #0
 801c132:	9303      	str	r3, [sp, #12]
 801c134:	ab0a      	add	r3, sp, #40	; 0x28
 801c136:	e9cd b301 	strd	fp, r3, [sp, #4]
 801c13a:	ab09      	add	r3, sp, #36	; 0x24
 801c13c:	ec49 8b10 	vmov	d0, r8, r9
 801c140:	9300      	str	r3, [sp, #0]
 801c142:	6022      	str	r2, [r4, #0]
 801c144:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 801c148:	4628      	mov	r0, r5
 801c14a:	f7ff fecd 	bl	801bee8 <__cvt>
 801c14e:	9b06      	ldr	r3, [sp, #24]
 801c150:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c152:	2b47      	cmp	r3, #71	; 0x47
 801c154:	4680      	mov	r8, r0
 801c156:	d108      	bne.n	801c16a <_printf_float+0x142>
 801c158:	1cc8      	adds	r0, r1, #3
 801c15a:	db02      	blt.n	801c162 <_printf_float+0x13a>
 801c15c:	6863      	ldr	r3, [r4, #4]
 801c15e:	4299      	cmp	r1, r3
 801c160:	dd41      	ble.n	801c1e6 <_printf_float+0x1be>
 801c162:	f1ab 0b02 	sub.w	fp, fp, #2
 801c166:	fa5f fb8b 	uxtb.w	fp, fp
 801c16a:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801c16e:	d820      	bhi.n	801c1b2 <_printf_float+0x18a>
 801c170:	3901      	subs	r1, #1
 801c172:	465a      	mov	r2, fp
 801c174:	f104 0050 	add.w	r0, r4, #80	; 0x50
 801c178:	9109      	str	r1, [sp, #36]	; 0x24
 801c17a:	f7ff ff17 	bl	801bfac <__exponent>
 801c17e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c180:	1813      	adds	r3, r2, r0
 801c182:	2a01      	cmp	r2, #1
 801c184:	4681      	mov	r9, r0
 801c186:	6123      	str	r3, [r4, #16]
 801c188:	dc02      	bgt.n	801c190 <_printf_float+0x168>
 801c18a:	6822      	ldr	r2, [r4, #0]
 801c18c:	07d2      	lsls	r2, r2, #31
 801c18e:	d501      	bpl.n	801c194 <_printf_float+0x16c>
 801c190:	3301      	adds	r3, #1
 801c192:	6123      	str	r3, [r4, #16]
 801c194:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 801c198:	2b00      	cmp	r3, #0
 801c19a:	d09c      	beq.n	801c0d6 <_printf_float+0xae>
 801c19c:	232d      	movs	r3, #45	; 0x2d
 801c19e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c1a2:	e798      	b.n	801c0d6 <_printf_float+0xae>
 801c1a4:	9a06      	ldr	r2, [sp, #24]
 801c1a6:	2a47      	cmp	r2, #71	; 0x47
 801c1a8:	d1be      	bne.n	801c128 <_printf_float+0x100>
 801c1aa:	2b00      	cmp	r3, #0
 801c1ac:	d1bc      	bne.n	801c128 <_printf_float+0x100>
 801c1ae:	2301      	movs	r3, #1
 801c1b0:	e7b9      	b.n	801c126 <_printf_float+0xfe>
 801c1b2:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 801c1b6:	d118      	bne.n	801c1ea <_printf_float+0x1c2>
 801c1b8:	2900      	cmp	r1, #0
 801c1ba:	6863      	ldr	r3, [r4, #4]
 801c1bc:	dd0b      	ble.n	801c1d6 <_printf_float+0x1ae>
 801c1be:	6121      	str	r1, [r4, #16]
 801c1c0:	b913      	cbnz	r3, 801c1c8 <_printf_float+0x1a0>
 801c1c2:	6822      	ldr	r2, [r4, #0]
 801c1c4:	07d0      	lsls	r0, r2, #31
 801c1c6:	d502      	bpl.n	801c1ce <_printf_float+0x1a6>
 801c1c8:	3301      	adds	r3, #1
 801c1ca:	440b      	add	r3, r1
 801c1cc:	6123      	str	r3, [r4, #16]
 801c1ce:	65a1      	str	r1, [r4, #88]	; 0x58
 801c1d0:	f04f 0900 	mov.w	r9, #0
 801c1d4:	e7de      	b.n	801c194 <_printf_float+0x16c>
 801c1d6:	b913      	cbnz	r3, 801c1de <_printf_float+0x1b6>
 801c1d8:	6822      	ldr	r2, [r4, #0]
 801c1da:	07d2      	lsls	r2, r2, #31
 801c1dc:	d501      	bpl.n	801c1e2 <_printf_float+0x1ba>
 801c1de:	3302      	adds	r3, #2
 801c1e0:	e7f4      	b.n	801c1cc <_printf_float+0x1a4>
 801c1e2:	2301      	movs	r3, #1
 801c1e4:	e7f2      	b.n	801c1cc <_printf_float+0x1a4>
 801c1e6:	f04f 0b67 	mov.w	fp, #103	; 0x67
 801c1ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c1ec:	4299      	cmp	r1, r3
 801c1ee:	db05      	blt.n	801c1fc <_printf_float+0x1d4>
 801c1f0:	6823      	ldr	r3, [r4, #0]
 801c1f2:	6121      	str	r1, [r4, #16]
 801c1f4:	07d8      	lsls	r0, r3, #31
 801c1f6:	d5ea      	bpl.n	801c1ce <_printf_float+0x1a6>
 801c1f8:	1c4b      	adds	r3, r1, #1
 801c1fa:	e7e7      	b.n	801c1cc <_printf_float+0x1a4>
 801c1fc:	2900      	cmp	r1, #0
 801c1fe:	bfd4      	ite	le
 801c200:	f1c1 0202 	rsble	r2, r1, #2
 801c204:	2201      	movgt	r2, #1
 801c206:	4413      	add	r3, r2
 801c208:	e7e0      	b.n	801c1cc <_printf_float+0x1a4>
 801c20a:	6823      	ldr	r3, [r4, #0]
 801c20c:	055a      	lsls	r2, r3, #21
 801c20e:	d407      	bmi.n	801c220 <_printf_float+0x1f8>
 801c210:	6923      	ldr	r3, [r4, #16]
 801c212:	4642      	mov	r2, r8
 801c214:	4631      	mov	r1, r6
 801c216:	4628      	mov	r0, r5
 801c218:	47b8      	blx	r7
 801c21a:	3001      	adds	r0, #1
 801c21c:	d12c      	bne.n	801c278 <_printf_float+0x250>
 801c21e:	e764      	b.n	801c0ea <_printf_float+0xc2>
 801c220:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801c224:	f240 80e0 	bls.w	801c3e8 <_printf_float+0x3c0>
 801c228:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801c22c:	2200      	movs	r2, #0
 801c22e:	2300      	movs	r3, #0
 801c230:	f7e4 fc5a 	bl	8000ae8 <__aeabi_dcmpeq>
 801c234:	2800      	cmp	r0, #0
 801c236:	d034      	beq.n	801c2a2 <_printf_float+0x27a>
 801c238:	4a37      	ldr	r2, [pc, #220]	; (801c318 <_printf_float+0x2f0>)
 801c23a:	2301      	movs	r3, #1
 801c23c:	4631      	mov	r1, r6
 801c23e:	4628      	mov	r0, r5
 801c240:	47b8      	blx	r7
 801c242:	3001      	adds	r0, #1
 801c244:	f43f af51 	beq.w	801c0ea <_printf_float+0xc2>
 801c248:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801c24c:	429a      	cmp	r2, r3
 801c24e:	db02      	blt.n	801c256 <_printf_float+0x22e>
 801c250:	6823      	ldr	r3, [r4, #0]
 801c252:	07d8      	lsls	r0, r3, #31
 801c254:	d510      	bpl.n	801c278 <_printf_float+0x250>
 801c256:	ee18 3a10 	vmov	r3, s16
 801c25a:	4652      	mov	r2, sl
 801c25c:	4631      	mov	r1, r6
 801c25e:	4628      	mov	r0, r5
 801c260:	47b8      	blx	r7
 801c262:	3001      	adds	r0, #1
 801c264:	f43f af41 	beq.w	801c0ea <_printf_float+0xc2>
 801c268:	f04f 0800 	mov.w	r8, #0
 801c26c:	f104 091a 	add.w	r9, r4, #26
 801c270:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c272:	3b01      	subs	r3, #1
 801c274:	4543      	cmp	r3, r8
 801c276:	dc09      	bgt.n	801c28c <_printf_float+0x264>
 801c278:	6823      	ldr	r3, [r4, #0]
 801c27a:	079b      	lsls	r3, r3, #30
 801c27c:	f100 8105 	bmi.w	801c48a <_printf_float+0x462>
 801c280:	68e0      	ldr	r0, [r4, #12]
 801c282:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c284:	4298      	cmp	r0, r3
 801c286:	bfb8      	it	lt
 801c288:	4618      	movlt	r0, r3
 801c28a:	e730      	b.n	801c0ee <_printf_float+0xc6>
 801c28c:	2301      	movs	r3, #1
 801c28e:	464a      	mov	r2, r9
 801c290:	4631      	mov	r1, r6
 801c292:	4628      	mov	r0, r5
 801c294:	47b8      	blx	r7
 801c296:	3001      	adds	r0, #1
 801c298:	f43f af27 	beq.w	801c0ea <_printf_float+0xc2>
 801c29c:	f108 0801 	add.w	r8, r8, #1
 801c2a0:	e7e6      	b.n	801c270 <_printf_float+0x248>
 801c2a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c2a4:	2b00      	cmp	r3, #0
 801c2a6:	dc39      	bgt.n	801c31c <_printf_float+0x2f4>
 801c2a8:	4a1b      	ldr	r2, [pc, #108]	; (801c318 <_printf_float+0x2f0>)
 801c2aa:	2301      	movs	r3, #1
 801c2ac:	4631      	mov	r1, r6
 801c2ae:	4628      	mov	r0, r5
 801c2b0:	47b8      	blx	r7
 801c2b2:	3001      	adds	r0, #1
 801c2b4:	f43f af19 	beq.w	801c0ea <_printf_float+0xc2>
 801c2b8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801c2bc:	4313      	orrs	r3, r2
 801c2be:	d102      	bne.n	801c2c6 <_printf_float+0x29e>
 801c2c0:	6823      	ldr	r3, [r4, #0]
 801c2c2:	07d9      	lsls	r1, r3, #31
 801c2c4:	d5d8      	bpl.n	801c278 <_printf_float+0x250>
 801c2c6:	ee18 3a10 	vmov	r3, s16
 801c2ca:	4652      	mov	r2, sl
 801c2cc:	4631      	mov	r1, r6
 801c2ce:	4628      	mov	r0, r5
 801c2d0:	47b8      	blx	r7
 801c2d2:	3001      	adds	r0, #1
 801c2d4:	f43f af09 	beq.w	801c0ea <_printf_float+0xc2>
 801c2d8:	f04f 0900 	mov.w	r9, #0
 801c2dc:	f104 0a1a 	add.w	sl, r4, #26
 801c2e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c2e2:	425b      	negs	r3, r3
 801c2e4:	454b      	cmp	r3, r9
 801c2e6:	dc01      	bgt.n	801c2ec <_printf_float+0x2c4>
 801c2e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c2ea:	e792      	b.n	801c212 <_printf_float+0x1ea>
 801c2ec:	2301      	movs	r3, #1
 801c2ee:	4652      	mov	r2, sl
 801c2f0:	4631      	mov	r1, r6
 801c2f2:	4628      	mov	r0, r5
 801c2f4:	47b8      	blx	r7
 801c2f6:	3001      	adds	r0, #1
 801c2f8:	f43f aef7 	beq.w	801c0ea <_printf_float+0xc2>
 801c2fc:	f109 0901 	add.w	r9, r9, #1
 801c300:	e7ee      	b.n	801c2e0 <_printf_float+0x2b8>
 801c302:	bf00      	nop
 801c304:	7fefffff 	.word	0x7fefffff
 801c308:	080218a5 	.word	0x080218a5
 801c30c:	080218a9 	.word	0x080218a9
 801c310:	080218b1 	.word	0x080218b1
 801c314:	080218ad 	.word	0x080218ad
 801c318:	08020453 	.word	0x08020453
 801c31c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c31e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801c320:	429a      	cmp	r2, r3
 801c322:	bfa8      	it	ge
 801c324:	461a      	movge	r2, r3
 801c326:	2a00      	cmp	r2, #0
 801c328:	4691      	mov	r9, r2
 801c32a:	dc37      	bgt.n	801c39c <_printf_float+0x374>
 801c32c:	f04f 0b00 	mov.w	fp, #0
 801c330:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801c334:	f104 021a 	add.w	r2, r4, #26
 801c338:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801c33a:	9305      	str	r3, [sp, #20]
 801c33c:	eba3 0309 	sub.w	r3, r3, r9
 801c340:	455b      	cmp	r3, fp
 801c342:	dc33      	bgt.n	801c3ac <_printf_float+0x384>
 801c344:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801c348:	429a      	cmp	r2, r3
 801c34a:	db3b      	blt.n	801c3c4 <_printf_float+0x39c>
 801c34c:	6823      	ldr	r3, [r4, #0]
 801c34e:	07da      	lsls	r2, r3, #31
 801c350:	d438      	bmi.n	801c3c4 <_printf_float+0x39c>
 801c352:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c354:	9a05      	ldr	r2, [sp, #20]
 801c356:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c358:	1a9a      	subs	r2, r3, r2
 801c35a:	eba3 0901 	sub.w	r9, r3, r1
 801c35e:	4591      	cmp	r9, r2
 801c360:	bfa8      	it	ge
 801c362:	4691      	movge	r9, r2
 801c364:	f1b9 0f00 	cmp.w	r9, #0
 801c368:	dc35      	bgt.n	801c3d6 <_printf_float+0x3ae>
 801c36a:	f04f 0800 	mov.w	r8, #0
 801c36e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801c372:	f104 0a1a 	add.w	sl, r4, #26
 801c376:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801c37a:	1a9b      	subs	r3, r3, r2
 801c37c:	eba3 0309 	sub.w	r3, r3, r9
 801c380:	4543      	cmp	r3, r8
 801c382:	f77f af79 	ble.w	801c278 <_printf_float+0x250>
 801c386:	2301      	movs	r3, #1
 801c388:	4652      	mov	r2, sl
 801c38a:	4631      	mov	r1, r6
 801c38c:	4628      	mov	r0, r5
 801c38e:	47b8      	blx	r7
 801c390:	3001      	adds	r0, #1
 801c392:	f43f aeaa 	beq.w	801c0ea <_printf_float+0xc2>
 801c396:	f108 0801 	add.w	r8, r8, #1
 801c39a:	e7ec      	b.n	801c376 <_printf_float+0x34e>
 801c39c:	4613      	mov	r3, r2
 801c39e:	4631      	mov	r1, r6
 801c3a0:	4642      	mov	r2, r8
 801c3a2:	4628      	mov	r0, r5
 801c3a4:	47b8      	blx	r7
 801c3a6:	3001      	adds	r0, #1
 801c3a8:	d1c0      	bne.n	801c32c <_printf_float+0x304>
 801c3aa:	e69e      	b.n	801c0ea <_printf_float+0xc2>
 801c3ac:	2301      	movs	r3, #1
 801c3ae:	4631      	mov	r1, r6
 801c3b0:	4628      	mov	r0, r5
 801c3b2:	9205      	str	r2, [sp, #20]
 801c3b4:	47b8      	blx	r7
 801c3b6:	3001      	adds	r0, #1
 801c3b8:	f43f ae97 	beq.w	801c0ea <_printf_float+0xc2>
 801c3bc:	9a05      	ldr	r2, [sp, #20]
 801c3be:	f10b 0b01 	add.w	fp, fp, #1
 801c3c2:	e7b9      	b.n	801c338 <_printf_float+0x310>
 801c3c4:	ee18 3a10 	vmov	r3, s16
 801c3c8:	4652      	mov	r2, sl
 801c3ca:	4631      	mov	r1, r6
 801c3cc:	4628      	mov	r0, r5
 801c3ce:	47b8      	blx	r7
 801c3d0:	3001      	adds	r0, #1
 801c3d2:	d1be      	bne.n	801c352 <_printf_float+0x32a>
 801c3d4:	e689      	b.n	801c0ea <_printf_float+0xc2>
 801c3d6:	9a05      	ldr	r2, [sp, #20]
 801c3d8:	464b      	mov	r3, r9
 801c3da:	4442      	add	r2, r8
 801c3dc:	4631      	mov	r1, r6
 801c3de:	4628      	mov	r0, r5
 801c3e0:	47b8      	blx	r7
 801c3e2:	3001      	adds	r0, #1
 801c3e4:	d1c1      	bne.n	801c36a <_printf_float+0x342>
 801c3e6:	e680      	b.n	801c0ea <_printf_float+0xc2>
 801c3e8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c3ea:	2a01      	cmp	r2, #1
 801c3ec:	dc01      	bgt.n	801c3f2 <_printf_float+0x3ca>
 801c3ee:	07db      	lsls	r3, r3, #31
 801c3f0:	d538      	bpl.n	801c464 <_printf_float+0x43c>
 801c3f2:	2301      	movs	r3, #1
 801c3f4:	4642      	mov	r2, r8
 801c3f6:	4631      	mov	r1, r6
 801c3f8:	4628      	mov	r0, r5
 801c3fa:	47b8      	blx	r7
 801c3fc:	3001      	adds	r0, #1
 801c3fe:	f43f ae74 	beq.w	801c0ea <_printf_float+0xc2>
 801c402:	ee18 3a10 	vmov	r3, s16
 801c406:	4652      	mov	r2, sl
 801c408:	4631      	mov	r1, r6
 801c40a:	4628      	mov	r0, r5
 801c40c:	47b8      	blx	r7
 801c40e:	3001      	adds	r0, #1
 801c410:	f43f ae6b 	beq.w	801c0ea <_printf_float+0xc2>
 801c414:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801c418:	2200      	movs	r2, #0
 801c41a:	2300      	movs	r3, #0
 801c41c:	f7e4 fb64 	bl	8000ae8 <__aeabi_dcmpeq>
 801c420:	b9d8      	cbnz	r0, 801c45a <_printf_float+0x432>
 801c422:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c424:	f108 0201 	add.w	r2, r8, #1
 801c428:	3b01      	subs	r3, #1
 801c42a:	4631      	mov	r1, r6
 801c42c:	4628      	mov	r0, r5
 801c42e:	47b8      	blx	r7
 801c430:	3001      	adds	r0, #1
 801c432:	d10e      	bne.n	801c452 <_printf_float+0x42a>
 801c434:	e659      	b.n	801c0ea <_printf_float+0xc2>
 801c436:	2301      	movs	r3, #1
 801c438:	4652      	mov	r2, sl
 801c43a:	4631      	mov	r1, r6
 801c43c:	4628      	mov	r0, r5
 801c43e:	47b8      	blx	r7
 801c440:	3001      	adds	r0, #1
 801c442:	f43f ae52 	beq.w	801c0ea <_printf_float+0xc2>
 801c446:	f108 0801 	add.w	r8, r8, #1
 801c44a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c44c:	3b01      	subs	r3, #1
 801c44e:	4543      	cmp	r3, r8
 801c450:	dcf1      	bgt.n	801c436 <_printf_float+0x40e>
 801c452:	464b      	mov	r3, r9
 801c454:	f104 0250 	add.w	r2, r4, #80	; 0x50
 801c458:	e6dc      	b.n	801c214 <_printf_float+0x1ec>
 801c45a:	f04f 0800 	mov.w	r8, #0
 801c45e:	f104 0a1a 	add.w	sl, r4, #26
 801c462:	e7f2      	b.n	801c44a <_printf_float+0x422>
 801c464:	2301      	movs	r3, #1
 801c466:	4642      	mov	r2, r8
 801c468:	e7df      	b.n	801c42a <_printf_float+0x402>
 801c46a:	2301      	movs	r3, #1
 801c46c:	464a      	mov	r2, r9
 801c46e:	4631      	mov	r1, r6
 801c470:	4628      	mov	r0, r5
 801c472:	47b8      	blx	r7
 801c474:	3001      	adds	r0, #1
 801c476:	f43f ae38 	beq.w	801c0ea <_printf_float+0xc2>
 801c47a:	f108 0801 	add.w	r8, r8, #1
 801c47e:	68e3      	ldr	r3, [r4, #12]
 801c480:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c482:	1a5b      	subs	r3, r3, r1
 801c484:	4543      	cmp	r3, r8
 801c486:	dcf0      	bgt.n	801c46a <_printf_float+0x442>
 801c488:	e6fa      	b.n	801c280 <_printf_float+0x258>
 801c48a:	f04f 0800 	mov.w	r8, #0
 801c48e:	f104 0919 	add.w	r9, r4, #25
 801c492:	e7f4      	b.n	801c47e <_printf_float+0x456>

0801c494 <_printf_common>:
 801c494:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c498:	4616      	mov	r6, r2
 801c49a:	4699      	mov	r9, r3
 801c49c:	688a      	ldr	r2, [r1, #8]
 801c49e:	690b      	ldr	r3, [r1, #16]
 801c4a0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801c4a4:	4293      	cmp	r3, r2
 801c4a6:	bfb8      	it	lt
 801c4a8:	4613      	movlt	r3, r2
 801c4aa:	6033      	str	r3, [r6, #0]
 801c4ac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801c4b0:	4607      	mov	r7, r0
 801c4b2:	460c      	mov	r4, r1
 801c4b4:	b10a      	cbz	r2, 801c4ba <_printf_common+0x26>
 801c4b6:	3301      	adds	r3, #1
 801c4b8:	6033      	str	r3, [r6, #0]
 801c4ba:	6823      	ldr	r3, [r4, #0]
 801c4bc:	0699      	lsls	r1, r3, #26
 801c4be:	bf42      	ittt	mi
 801c4c0:	6833      	ldrmi	r3, [r6, #0]
 801c4c2:	3302      	addmi	r3, #2
 801c4c4:	6033      	strmi	r3, [r6, #0]
 801c4c6:	6825      	ldr	r5, [r4, #0]
 801c4c8:	f015 0506 	ands.w	r5, r5, #6
 801c4cc:	d106      	bne.n	801c4dc <_printf_common+0x48>
 801c4ce:	f104 0a19 	add.w	sl, r4, #25
 801c4d2:	68e3      	ldr	r3, [r4, #12]
 801c4d4:	6832      	ldr	r2, [r6, #0]
 801c4d6:	1a9b      	subs	r3, r3, r2
 801c4d8:	42ab      	cmp	r3, r5
 801c4da:	dc26      	bgt.n	801c52a <_printf_common+0x96>
 801c4dc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801c4e0:	1e13      	subs	r3, r2, #0
 801c4e2:	6822      	ldr	r2, [r4, #0]
 801c4e4:	bf18      	it	ne
 801c4e6:	2301      	movne	r3, #1
 801c4e8:	0692      	lsls	r2, r2, #26
 801c4ea:	d42b      	bmi.n	801c544 <_printf_common+0xb0>
 801c4ec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c4f0:	4649      	mov	r1, r9
 801c4f2:	4638      	mov	r0, r7
 801c4f4:	47c0      	blx	r8
 801c4f6:	3001      	adds	r0, #1
 801c4f8:	d01e      	beq.n	801c538 <_printf_common+0xa4>
 801c4fa:	6823      	ldr	r3, [r4, #0]
 801c4fc:	68e5      	ldr	r5, [r4, #12]
 801c4fe:	6832      	ldr	r2, [r6, #0]
 801c500:	f003 0306 	and.w	r3, r3, #6
 801c504:	2b04      	cmp	r3, #4
 801c506:	bf08      	it	eq
 801c508:	1aad      	subeq	r5, r5, r2
 801c50a:	68a3      	ldr	r3, [r4, #8]
 801c50c:	6922      	ldr	r2, [r4, #16]
 801c50e:	bf0c      	ite	eq
 801c510:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801c514:	2500      	movne	r5, #0
 801c516:	4293      	cmp	r3, r2
 801c518:	bfc4      	itt	gt
 801c51a:	1a9b      	subgt	r3, r3, r2
 801c51c:	18ed      	addgt	r5, r5, r3
 801c51e:	2600      	movs	r6, #0
 801c520:	341a      	adds	r4, #26
 801c522:	42b5      	cmp	r5, r6
 801c524:	d11a      	bne.n	801c55c <_printf_common+0xc8>
 801c526:	2000      	movs	r0, #0
 801c528:	e008      	b.n	801c53c <_printf_common+0xa8>
 801c52a:	2301      	movs	r3, #1
 801c52c:	4652      	mov	r2, sl
 801c52e:	4649      	mov	r1, r9
 801c530:	4638      	mov	r0, r7
 801c532:	47c0      	blx	r8
 801c534:	3001      	adds	r0, #1
 801c536:	d103      	bne.n	801c540 <_printf_common+0xac>
 801c538:	f04f 30ff 	mov.w	r0, #4294967295
 801c53c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c540:	3501      	adds	r5, #1
 801c542:	e7c6      	b.n	801c4d2 <_printf_common+0x3e>
 801c544:	18e1      	adds	r1, r4, r3
 801c546:	1c5a      	adds	r2, r3, #1
 801c548:	2030      	movs	r0, #48	; 0x30
 801c54a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801c54e:	4422      	add	r2, r4
 801c550:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801c554:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801c558:	3302      	adds	r3, #2
 801c55a:	e7c7      	b.n	801c4ec <_printf_common+0x58>
 801c55c:	2301      	movs	r3, #1
 801c55e:	4622      	mov	r2, r4
 801c560:	4649      	mov	r1, r9
 801c562:	4638      	mov	r0, r7
 801c564:	47c0      	blx	r8
 801c566:	3001      	adds	r0, #1
 801c568:	d0e6      	beq.n	801c538 <_printf_common+0xa4>
 801c56a:	3601      	adds	r6, #1
 801c56c:	e7d9      	b.n	801c522 <_printf_common+0x8e>
	...

0801c570 <_printf_i>:
 801c570:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c574:	7e0f      	ldrb	r7, [r1, #24]
 801c576:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c578:	2f78      	cmp	r7, #120	; 0x78
 801c57a:	4691      	mov	r9, r2
 801c57c:	4680      	mov	r8, r0
 801c57e:	460c      	mov	r4, r1
 801c580:	469a      	mov	sl, r3
 801c582:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801c586:	d807      	bhi.n	801c598 <_printf_i+0x28>
 801c588:	2f62      	cmp	r7, #98	; 0x62
 801c58a:	d80a      	bhi.n	801c5a2 <_printf_i+0x32>
 801c58c:	2f00      	cmp	r7, #0
 801c58e:	f000 80d8 	beq.w	801c742 <_printf_i+0x1d2>
 801c592:	2f58      	cmp	r7, #88	; 0x58
 801c594:	f000 80a3 	beq.w	801c6de <_printf_i+0x16e>
 801c598:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c59c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801c5a0:	e03a      	b.n	801c618 <_printf_i+0xa8>
 801c5a2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801c5a6:	2b15      	cmp	r3, #21
 801c5a8:	d8f6      	bhi.n	801c598 <_printf_i+0x28>
 801c5aa:	a101      	add	r1, pc, #4	; (adr r1, 801c5b0 <_printf_i+0x40>)
 801c5ac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801c5b0:	0801c609 	.word	0x0801c609
 801c5b4:	0801c61d 	.word	0x0801c61d
 801c5b8:	0801c599 	.word	0x0801c599
 801c5bc:	0801c599 	.word	0x0801c599
 801c5c0:	0801c599 	.word	0x0801c599
 801c5c4:	0801c599 	.word	0x0801c599
 801c5c8:	0801c61d 	.word	0x0801c61d
 801c5cc:	0801c599 	.word	0x0801c599
 801c5d0:	0801c599 	.word	0x0801c599
 801c5d4:	0801c599 	.word	0x0801c599
 801c5d8:	0801c599 	.word	0x0801c599
 801c5dc:	0801c729 	.word	0x0801c729
 801c5e0:	0801c64d 	.word	0x0801c64d
 801c5e4:	0801c70b 	.word	0x0801c70b
 801c5e8:	0801c599 	.word	0x0801c599
 801c5ec:	0801c599 	.word	0x0801c599
 801c5f0:	0801c74b 	.word	0x0801c74b
 801c5f4:	0801c599 	.word	0x0801c599
 801c5f8:	0801c64d 	.word	0x0801c64d
 801c5fc:	0801c599 	.word	0x0801c599
 801c600:	0801c599 	.word	0x0801c599
 801c604:	0801c713 	.word	0x0801c713
 801c608:	682b      	ldr	r3, [r5, #0]
 801c60a:	1d1a      	adds	r2, r3, #4
 801c60c:	681b      	ldr	r3, [r3, #0]
 801c60e:	602a      	str	r2, [r5, #0]
 801c610:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c614:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801c618:	2301      	movs	r3, #1
 801c61a:	e0a3      	b.n	801c764 <_printf_i+0x1f4>
 801c61c:	6820      	ldr	r0, [r4, #0]
 801c61e:	6829      	ldr	r1, [r5, #0]
 801c620:	0606      	lsls	r6, r0, #24
 801c622:	f101 0304 	add.w	r3, r1, #4
 801c626:	d50a      	bpl.n	801c63e <_printf_i+0xce>
 801c628:	680e      	ldr	r6, [r1, #0]
 801c62a:	602b      	str	r3, [r5, #0]
 801c62c:	2e00      	cmp	r6, #0
 801c62e:	da03      	bge.n	801c638 <_printf_i+0xc8>
 801c630:	232d      	movs	r3, #45	; 0x2d
 801c632:	4276      	negs	r6, r6
 801c634:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c638:	485e      	ldr	r0, [pc, #376]	; (801c7b4 <_printf_i+0x244>)
 801c63a:	230a      	movs	r3, #10
 801c63c:	e019      	b.n	801c672 <_printf_i+0x102>
 801c63e:	680e      	ldr	r6, [r1, #0]
 801c640:	602b      	str	r3, [r5, #0]
 801c642:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c646:	bf18      	it	ne
 801c648:	b236      	sxthne	r6, r6
 801c64a:	e7ef      	b.n	801c62c <_printf_i+0xbc>
 801c64c:	682b      	ldr	r3, [r5, #0]
 801c64e:	6820      	ldr	r0, [r4, #0]
 801c650:	1d19      	adds	r1, r3, #4
 801c652:	6029      	str	r1, [r5, #0]
 801c654:	0601      	lsls	r1, r0, #24
 801c656:	d501      	bpl.n	801c65c <_printf_i+0xec>
 801c658:	681e      	ldr	r6, [r3, #0]
 801c65a:	e002      	b.n	801c662 <_printf_i+0xf2>
 801c65c:	0646      	lsls	r6, r0, #25
 801c65e:	d5fb      	bpl.n	801c658 <_printf_i+0xe8>
 801c660:	881e      	ldrh	r6, [r3, #0]
 801c662:	4854      	ldr	r0, [pc, #336]	; (801c7b4 <_printf_i+0x244>)
 801c664:	2f6f      	cmp	r7, #111	; 0x6f
 801c666:	bf0c      	ite	eq
 801c668:	2308      	moveq	r3, #8
 801c66a:	230a      	movne	r3, #10
 801c66c:	2100      	movs	r1, #0
 801c66e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801c672:	6865      	ldr	r5, [r4, #4]
 801c674:	60a5      	str	r5, [r4, #8]
 801c676:	2d00      	cmp	r5, #0
 801c678:	bfa2      	ittt	ge
 801c67a:	6821      	ldrge	r1, [r4, #0]
 801c67c:	f021 0104 	bicge.w	r1, r1, #4
 801c680:	6021      	strge	r1, [r4, #0]
 801c682:	b90e      	cbnz	r6, 801c688 <_printf_i+0x118>
 801c684:	2d00      	cmp	r5, #0
 801c686:	d04d      	beq.n	801c724 <_printf_i+0x1b4>
 801c688:	4615      	mov	r5, r2
 801c68a:	fbb6 f1f3 	udiv	r1, r6, r3
 801c68e:	fb03 6711 	mls	r7, r3, r1, r6
 801c692:	5dc7      	ldrb	r7, [r0, r7]
 801c694:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801c698:	4637      	mov	r7, r6
 801c69a:	42bb      	cmp	r3, r7
 801c69c:	460e      	mov	r6, r1
 801c69e:	d9f4      	bls.n	801c68a <_printf_i+0x11a>
 801c6a0:	2b08      	cmp	r3, #8
 801c6a2:	d10b      	bne.n	801c6bc <_printf_i+0x14c>
 801c6a4:	6823      	ldr	r3, [r4, #0]
 801c6a6:	07de      	lsls	r6, r3, #31
 801c6a8:	d508      	bpl.n	801c6bc <_printf_i+0x14c>
 801c6aa:	6923      	ldr	r3, [r4, #16]
 801c6ac:	6861      	ldr	r1, [r4, #4]
 801c6ae:	4299      	cmp	r1, r3
 801c6b0:	bfde      	ittt	le
 801c6b2:	2330      	movle	r3, #48	; 0x30
 801c6b4:	f805 3c01 	strble.w	r3, [r5, #-1]
 801c6b8:	f105 35ff 	addle.w	r5, r5, #4294967295
 801c6bc:	1b52      	subs	r2, r2, r5
 801c6be:	6122      	str	r2, [r4, #16]
 801c6c0:	f8cd a000 	str.w	sl, [sp]
 801c6c4:	464b      	mov	r3, r9
 801c6c6:	aa03      	add	r2, sp, #12
 801c6c8:	4621      	mov	r1, r4
 801c6ca:	4640      	mov	r0, r8
 801c6cc:	f7ff fee2 	bl	801c494 <_printf_common>
 801c6d0:	3001      	adds	r0, #1
 801c6d2:	d14c      	bne.n	801c76e <_printf_i+0x1fe>
 801c6d4:	f04f 30ff 	mov.w	r0, #4294967295
 801c6d8:	b004      	add	sp, #16
 801c6da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c6de:	4835      	ldr	r0, [pc, #212]	; (801c7b4 <_printf_i+0x244>)
 801c6e0:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801c6e4:	6829      	ldr	r1, [r5, #0]
 801c6e6:	6823      	ldr	r3, [r4, #0]
 801c6e8:	f851 6b04 	ldr.w	r6, [r1], #4
 801c6ec:	6029      	str	r1, [r5, #0]
 801c6ee:	061d      	lsls	r5, r3, #24
 801c6f0:	d514      	bpl.n	801c71c <_printf_i+0x1ac>
 801c6f2:	07df      	lsls	r7, r3, #31
 801c6f4:	bf44      	itt	mi
 801c6f6:	f043 0320 	orrmi.w	r3, r3, #32
 801c6fa:	6023      	strmi	r3, [r4, #0]
 801c6fc:	b91e      	cbnz	r6, 801c706 <_printf_i+0x196>
 801c6fe:	6823      	ldr	r3, [r4, #0]
 801c700:	f023 0320 	bic.w	r3, r3, #32
 801c704:	6023      	str	r3, [r4, #0]
 801c706:	2310      	movs	r3, #16
 801c708:	e7b0      	b.n	801c66c <_printf_i+0xfc>
 801c70a:	6823      	ldr	r3, [r4, #0]
 801c70c:	f043 0320 	orr.w	r3, r3, #32
 801c710:	6023      	str	r3, [r4, #0]
 801c712:	2378      	movs	r3, #120	; 0x78
 801c714:	4828      	ldr	r0, [pc, #160]	; (801c7b8 <_printf_i+0x248>)
 801c716:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801c71a:	e7e3      	b.n	801c6e4 <_printf_i+0x174>
 801c71c:	0659      	lsls	r1, r3, #25
 801c71e:	bf48      	it	mi
 801c720:	b2b6      	uxthmi	r6, r6
 801c722:	e7e6      	b.n	801c6f2 <_printf_i+0x182>
 801c724:	4615      	mov	r5, r2
 801c726:	e7bb      	b.n	801c6a0 <_printf_i+0x130>
 801c728:	682b      	ldr	r3, [r5, #0]
 801c72a:	6826      	ldr	r6, [r4, #0]
 801c72c:	6961      	ldr	r1, [r4, #20]
 801c72e:	1d18      	adds	r0, r3, #4
 801c730:	6028      	str	r0, [r5, #0]
 801c732:	0635      	lsls	r5, r6, #24
 801c734:	681b      	ldr	r3, [r3, #0]
 801c736:	d501      	bpl.n	801c73c <_printf_i+0x1cc>
 801c738:	6019      	str	r1, [r3, #0]
 801c73a:	e002      	b.n	801c742 <_printf_i+0x1d2>
 801c73c:	0670      	lsls	r0, r6, #25
 801c73e:	d5fb      	bpl.n	801c738 <_printf_i+0x1c8>
 801c740:	8019      	strh	r1, [r3, #0]
 801c742:	2300      	movs	r3, #0
 801c744:	6123      	str	r3, [r4, #16]
 801c746:	4615      	mov	r5, r2
 801c748:	e7ba      	b.n	801c6c0 <_printf_i+0x150>
 801c74a:	682b      	ldr	r3, [r5, #0]
 801c74c:	1d1a      	adds	r2, r3, #4
 801c74e:	602a      	str	r2, [r5, #0]
 801c750:	681d      	ldr	r5, [r3, #0]
 801c752:	6862      	ldr	r2, [r4, #4]
 801c754:	2100      	movs	r1, #0
 801c756:	4628      	mov	r0, r5
 801c758:	f7e3 fd52 	bl	8000200 <memchr>
 801c75c:	b108      	cbz	r0, 801c762 <_printf_i+0x1f2>
 801c75e:	1b40      	subs	r0, r0, r5
 801c760:	6060      	str	r0, [r4, #4]
 801c762:	6863      	ldr	r3, [r4, #4]
 801c764:	6123      	str	r3, [r4, #16]
 801c766:	2300      	movs	r3, #0
 801c768:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c76c:	e7a8      	b.n	801c6c0 <_printf_i+0x150>
 801c76e:	6923      	ldr	r3, [r4, #16]
 801c770:	462a      	mov	r2, r5
 801c772:	4649      	mov	r1, r9
 801c774:	4640      	mov	r0, r8
 801c776:	47d0      	blx	sl
 801c778:	3001      	adds	r0, #1
 801c77a:	d0ab      	beq.n	801c6d4 <_printf_i+0x164>
 801c77c:	6823      	ldr	r3, [r4, #0]
 801c77e:	079b      	lsls	r3, r3, #30
 801c780:	d413      	bmi.n	801c7aa <_printf_i+0x23a>
 801c782:	68e0      	ldr	r0, [r4, #12]
 801c784:	9b03      	ldr	r3, [sp, #12]
 801c786:	4298      	cmp	r0, r3
 801c788:	bfb8      	it	lt
 801c78a:	4618      	movlt	r0, r3
 801c78c:	e7a4      	b.n	801c6d8 <_printf_i+0x168>
 801c78e:	2301      	movs	r3, #1
 801c790:	4632      	mov	r2, r6
 801c792:	4649      	mov	r1, r9
 801c794:	4640      	mov	r0, r8
 801c796:	47d0      	blx	sl
 801c798:	3001      	adds	r0, #1
 801c79a:	d09b      	beq.n	801c6d4 <_printf_i+0x164>
 801c79c:	3501      	adds	r5, #1
 801c79e:	68e3      	ldr	r3, [r4, #12]
 801c7a0:	9903      	ldr	r1, [sp, #12]
 801c7a2:	1a5b      	subs	r3, r3, r1
 801c7a4:	42ab      	cmp	r3, r5
 801c7a6:	dcf2      	bgt.n	801c78e <_printf_i+0x21e>
 801c7a8:	e7eb      	b.n	801c782 <_printf_i+0x212>
 801c7aa:	2500      	movs	r5, #0
 801c7ac:	f104 0619 	add.w	r6, r4, #25
 801c7b0:	e7f5      	b.n	801c79e <_printf_i+0x22e>
 801c7b2:	bf00      	nop
 801c7b4:	080218b5 	.word	0x080218b5
 801c7b8:	080218c6 	.word	0x080218c6

0801c7bc <iprintf>:
 801c7bc:	b40f      	push	{r0, r1, r2, r3}
 801c7be:	4b0a      	ldr	r3, [pc, #40]	; (801c7e8 <iprintf+0x2c>)
 801c7c0:	b513      	push	{r0, r1, r4, lr}
 801c7c2:	681c      	ldr	r4, [r3, #0]
 801c7c4:	b124      	cbz	r4, 801c7d0 <iprintf+0x14>
 801c7c6:	69a3      	ldr	r3, [r4, #24]
 801c7c8:	b913      	cbnz	r3, 801c7d0 <iprintf+0x14>
 801c7ca:	4620      	mov	r0, r4
 801c7cc:	f001 f9a4 	bl	801db18 <__sinit>
 801c7d0:	ab05      	add	r3, sp, #20
 801c7d2:	9a04      	ldr	r2, [sp, #16]
 801c7d4:	68a1      	ldr	r1, [r4, #8]
 801c7d6:	9301      	str	r3, [sp, #4]
 801c7d8:	4620      	mov	r0, r4
 801c7da:	f7ff fa55 	bl	801bc88 <_vfiprintf_r>
 801c7de:	b002      	add	sp, #8
 801c7e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c7e4:	b004      	add	sp, #16
 801c7e6:	4770      	bx	lr
 801c7e8:	2000009c 	.word	0x2000009c

0801c7ec <_sbrk_r>:
 801c7ec:	b538      	push	{r3, r4, r5, lr}
 801c7ee:	4d06      	ldr	r5, [pc, #24]	; (801c808 <_sbrk_r+0x1c>)
 801c7f0:	2300      	movs	r3, #0
 801c7f2:	4604      	mov	r4, r0
 801c7f4:	4608      	mov	r0, r1
 801c7f6:	602b      	str	r3, [r5, #0]
 801c7f8:	f7e6 f8c4 	bl	8002984 <_sbrk>
 801c7fc:	1c43      	adds	r3, r0, #1
 801c7fe:	d102      	bne.n	801c806 <_sbrk_r+0x1a>
 801c800:	682b      	ldr	r3, [r5, #0]
 801c802:	b103      	cbz	r3, 801c806 <_sbrk_r+0x1a>
 801c804:	6023      	str	r3, [r4, #0]
 801c806:	bd38      	pop	{r3, r4, r5, pc}
 801c808:	20001a64 	.word	0x20001a64

0801c80c <_raise_r>:
 801c80c:	291f      	cmp	r1, #31
 801c80e:	b538      	push	{r3, r4, r5, lr}
 801c810:	4604      	mov	r4, r0
 801c812:	460d      	mov	r5, r1
 801c814:	d904      	bls.n	801c820 <_raise_r+0x14>
 801c816:	2316      	movs	r3, #22
 801c818:	6003      	str	r3, [r0, #0]
 801c81a:	f04f 30ff 	mov.w	r0, #4294967295
 801c81e:	bd38      	pop	{r3, r4, r5, pc}
 801c820:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801c822:	b112      	cbz	r2, 801c82a <_raise_r+0x1e>
 801c824:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801c828:	b94b      	cbnz	r3, 801c83e <_raise_r+0x32>
 801c82a:	4620      	mov	r0, r4
 801c82c:	f000 f830 	bl	801c890 <_getpid_r>
 801c830:	462a      	mov	r2, r5
 801c832:	4601      	mov	r1, r0
 801c834:	4620      	mov	r0, r4
 801c836:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c83a:	f000 b817 	b.w	801c86c <_kill_r>
 801c83e:	2b01      	cmp	r3, #1
 801c840:	d00a      	beq.n	801c858 <_raise_r+0x4c>
 801c842:	1c59      	adds	r1, r3, #1
 801c844:	d103      	bne.n	801c84e <_raise_r+0x42>
 801c846:	2316      	movs	r3, #22
 801c848:	6003      	str	r3, [r0, #0]
 801c84a:	2001      	movs	r0, #1
 801c84c:	e7e7      	b.n	801c81e <_raise_r+0x12>
 801c84e:	2400      	movs	r4, #0
 801c850:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801c854:	4628      	mov	r0, r5
 801c856:	4798      	blx	r3
 801c858:	2000      	movs	r0, #0
 801c85a:	e7e0      	b.n	801c81e <_raise_r+0x12>

0801c85c <raise>:
 801c85c:	4b02      	ldr	r3, [pc, #8]	; (801c868 <raise+0xc>)
 801c85e:	4601      	mov	r1, r0
 801c860:	6818      	ldr	r0, [r3, #0]
 801c862:	f7ff bfd3 	b.w	801c80c <_raise_r>
 801c866:	bf00      	nop
 801c868:	2000009c 	.word	0x2000009c

0801c86c <_kill_r>:
 801c86c:	b538      	push	{r3, r4, r5, lr}
 801c86e:	4d07      	ldr	r5, [pc, #28]	; (801c88c <_kill_r+0x20>)
 801c870:	2300      	movs	r3, #0
 801c872:	4604      	mov	r4, r0
 801c874:	4608      	mov	r0, r1
 801c876:	4611      	mov	r1, r2
 801c878:	602b      	str	r3, [r5, #0]
 801c87a:	f7e5 fffb 	bl	8002874 <_kill>
 801c87e:	1c43      	adds	r3, r0, #1
 801c880:	d102      	bne.n	801c888 <_kill_r+0x1c>
 801c882:	682b      	ldr	r3, [r5, #0]
 801c884:	b103      	cbz	r3, 801c888 <_kill_r+0x1c>
 801c886:	6023      	str	r3, [r4, #0]
 801c888:	bd38      	pop	{r3, r4, r5, pc}
 801c88a:	bf00      	nop
 801c88c:	20001a64 	.word	0x20001a64

0801c890 <_getpid_r>:
 801c890:	f7e5 bfe8 	b.w	8002864 <_getpid>

0801c894 <_strtol_l.constprop.0>:
 801c894:	2b01      	cmp	r3, #1
 801c896:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c89a:	d001      	beq.n	801c8a0 <_strtol_l.constprop.0+0xc>
 801c89c:	2b24      	cmp	r3, #36	; 0x24
 801c89e:	d906      	bls.n	801c8ae <_strtol_l.constprop.0+0x1a>
 801c8a0:	f7ff f886 	bl	801b9b0 <__errno>
 801c8a4:	2316      	movs	r3, #22
 801c8a6:	6003      	str	r3, [r0, #0]
 801c8a8:	2000      	movs	r0, #0
 801c8aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c8ae:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 801c994 <_strtol_l.constprop.0+0x100>
 801c8b2:	460d      	mov	r5, r1
 801c8b4:	462e      	mov	r6, r5
 801c8b6:	f815 4b01 	ldrb.w	r4, [r5], #1
 801c8ba:	f814 700c 	ldrb.w	r7, [r4, ip]
 801c8be:	f017 0708 	ands.w	r7, r7, #8
 801c8c2:	d1f7      	bne.n	801c8b4 <_strtol_l.constprop.0+0x20>
 801c8c4:	2c2d      	cmp	r4, #45	; 0x2d
 801c8c6:	d132      	bne.n	801c92e <_strtol_l.constprop.0+0x9a>
 801c8c8:	782c      	ldrb	r4, [r5, #0]
 801c8ca:	2701      	movs	r7, #1
 801c8cc:	1cb5      	adds	r5, r6, #2
 801c8ce:	2b00      	cmp	r3, #0
 801c8d0:	d05b      	beq.n	801c98a <_strtol_l.constprop.0+0xf6>
 801c8d2:	2b10      	cmp	r3, #16
 801c8d4:	d109      	bne.n	801c8ea <_strtol_l.constprop.0+0x56>
 801c8d6:	2c30      	cmp	r4, #48	; 0x30
 801c8d8:	d107      	bne.n	801c8ea <_strtol_l.constprop.0+0x56>
 801c8da:	782c      	ldrb	r4, [r5, #0]
 801c8dc:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 801c8e0:	2c58      	cmp	r4, #88	; 0x58
 801c8e2:	d14d      	bne.n	801c980 <_strtol_l.constprop.0+0xec>
 801c8e4:	786c      	ldrb	r4, [r5, #1]
 801c8e6:	2310      	movs	r3, #16
 801c8e8:	3502      	adds	r5, #2
 801c8ea:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 801c8ee:	f108 38ff 	add.w	r8, r8, #4294967295
 801c8f2:	f04f 0c00 	mov.w	ip, #0
 801c8f6:	fbb8 f9f3 	udiv	r9, r8, r3
 801c8fa:	4666      	mov	r6, ip
 801c8fc:	fb03 8a19 	mls	sl, r3, r9, r8
 801c900:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 801c904:	f1be 0f09 	cmp.w	lr, #9
 801c908:	d816      	bhi.n	801c938 <_strtol_l.constprop.0+0xa4>
 801c90a:	4674      	mov	r4, lr
 801c90c:	42a3      	cmp	r3, r4
 801c90e:	dd24      	ble.n	801c95a <_strtol_l.constprop.0+0xc6>
 801c910:	f1bc 0f00 	cmp.w	ip, #0
 801c914:	db1e      	blt.n	801c954 <_strtol_l.constprop.0+0xc0>
 801c916:	45b1      	cmp	r9, r6
 801c918:	d31c      	bcc.n	801c954 <_strtol_l.constprop.0+0xc0>
 801c91a:	d101      	bne.n	801c920 <_strtol_l.constprop.0+0x8c>
 801c91c:	45a2      	cmp	sl, r4
 801c91e:	db19      	blt.n	801c954 <_strtol_l.constprop.0+0xc0>
 801c920:	fb06 4603 	mla	r6, r6, r3, r4
 801c924:	f04f 0c01 	mov.w	ip, #1
 801c928:	f815 4b01 	ldrb.w	r4, [r5], #1
 801c92c:	e7e8      	b.n	801c900 <_strtol_l.constprop.0+0x6c>
 801c92e:	2c2b      	cmp	r4, #43	; 0x2b
 801c930:	bf04      	itt	eq
 801c932:	782c      	ldrbeq	r4, [r5, #0]
 801c934:	1cb5      	addeq	r5, r6, #2
 801c936:	e7ca      	b.n	801c8ce <_strtol_l.constprop.0+0x3a>
 801c938:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 801c93c:	f1be 0f19 	cmp.w	lr, #25
 801c940:	d801      	bhi.n	801c946 <_strtol_l.constprop.0+0xb2>
 801c942:	3c37      	subs	r4, #55	; 0x37
 801c944:	e7e2      	b.n	801c90c <_strtol_l.constprop.0+0x78>
 801c946:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 801c94a:	f1be 0f19 	cmp.w	lr, #25
 801c94e:	d804      	bhi.n	801c95a <_strtol_l.constprop.0+0xc6>
 801c950:	3c57      	subs	r4, #87	; 0x57
 801c952:	e7db      	b.n	801c90c <_strtol_l.constprop.0+0x78>
 801c954:	f04f 3cff 	mov.w	ip, #4294967295
 801c958:	e7e6      	b.n	801c928 <_strtol_l.constprop.0+0x94>
 801c95a:	f1bc 0f00 	cmp.w	ip, #0
 801c95e:	da05      	bge.n	801c96c <_strtol_l.constprop.0+0xd8>
 801c960:	2322      	movs	r3, #34	; 0x22
 801c962:	6003      	str	r3, [r0, #0]
 801c964:	4646      	mov	r6, r8
 801c966:	b942      	cbnz	r2, 801c97a <_strtol_l.constprop.0+0xe6>
 801c968:	4630      	mov	r0, r6
 801c96a:	e79e      	b.n	801c8aa <_strtol_l.constprop.0+0x16>
 801c96c:	b107      	cbz	r7, 801c970 <_strtol_l.constprop.0+0xdc>
 801c96e:	4276      	negs	r6, r6
 801c970:	2a00      	cmp	r2, #0
 801c972:	d0f9      	beq.n	801c968 <_strtol_l.constprop.0+0xd4>
 801c974:	f1bc 0f00 	cmp.w	ip, #0
 801c978:	d000      	beq.n	801c97c <_strtol_l.constprop.0+0xe8>
 801c97a:	1e69      	subs	r1, r5, #1
 801c97c:	6011      	str	r1, [r2, #0]
 801c97e:	e7f3      	b.n	801c968 <_strtol_l.constprop.0+0xd4>
 801c980:	2430      	movs	r4, #48	; 0x30
 801c982:	2b00      	cmp	r3, #0
 801c984:	d1b1      	bne.n	801c8ea <_strtol_l.constprop.0+0x56>
 801c986:	2308      	movs	r3, #8
 801c988:	e7af      	b.n	801c8ea <_strtol_l.constprop.0+0x56>
 801c98a:	2c30      	cmp	r4, #48	; 0x30
 801c98c:	d0a5      	beq.n	801c8da <_strtol_l.constprop.0+0x46>
 801c98e:	230a      	movs	r3, #10
 801c990:	e7ab      	b.n	801c8ea <_strtol_l.constprop.0+0x56>
 801c992:	bf00      	nop
 801c994:	080218dd 	.word	0x080218dd

0801c998 <strtol>:
 801c998:	4613      	mov	r3, r2
 801c99a:	460a      	mov	r2, r1
 801c99c:	4601      	mov	r1, r0
 801c99e:	4802      	ldr	r0, [pc, #8]	; (801c9a8 <strtol+0x10>)
 801c9a0:	6800      	ldr	r0, [r0, #0]
 801c9a2:	f7ff bf77 	b.w	801c894 <_strtol_l.constprop.0>
 801c9a6:	bf00      	nop
 801c9a8:	2000009c 	.word	0x2000009c

0801c9ac <__swbuf_r>:
 801c9ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c9ae:	460e      	mov	r6, r1
 801c9b0:	4614      	mov	r4, r2
 801c9b2:	4605      	mov	r5, r0
 801c9b4:	b118      	cbz	r0, 801c9be <__swbuf_r+0x12>
 801c9b6:	6983      	ldr	r3, [r0, #24]
 801c9b8:	b90b      	cbnz	r3, 801c9be <__swbuf_r+0x12>
 801c9ba:	f001 f8ad 	bl	801db18 <__sinit>
 801c9be:	4b21      	ldr	r3, [pc, #132]	; (801ca44 <__swbuf_r+0x98>)
 801c9c0:	429c      	cmp	r4, r3
 801c9c2:	d12b      	bne.n	801ca1c <__swbuf_r+0x70>
 801c9c4:	686c      	ldr	r4, [r5, #4]
 801c9c6:	69a3      	ldr	r3, [r4, #24]
 801c9c8:	60a3      	str	r3, [r4, #8]
 801c9ca:	89a3      	ldrh	r3, [r4, #12]
 801c9cc:	071a      	lsls	r2, r3, #28
 801c9ce:	d52f      	bpl.n	801ca30 <__swbuf_r+0x84>
 801c9d0:	6923      	ldr	r3, [r4, #16]
 801c9d2:	b36b      	cbz	r3, 801ca30 <__swbuf_r+0x84>
 801c9d4:	6923      	ldr	r3, [r4, #16]
 801c9d6:	6820      	ldr	r0, [r4, #0]
 801c9d8:	1ac0      	subs	r0, r0, r3
 801c9da:	6963      	ldr	r3, [r4, #20]
 801c9dc:	b2f6      	uxtb	r6, r6
 801c9de:	4283      	cmp	r3, r0
 801c9e0:	4637      	mov	r7, r6
 801c9e2:	dc04      	bgt.n	801c9ee <__swbuf_r+0x42>
 801c9e4:	4621      	mov	r1, r4
 801c9e6:	4628      	mov	r0, r5
 801c9e8:	f001 f802 	bl	801d9f0 <_fflush_r>
 801c9ec:	bb30      	cbnz	r0, 801ca3c <__swbuf_r+0x90>
 801c9ee:	68a3      	ldr	r3, [r4, #8]
 801c9f0:	3b01      	subs	r3, #1
 801c9f2:	60a3      	str	r3, [r4, #8]
 801c9f4:	6823      	ldr	r3, [r4, #0]
 801c9f6:	1c5a      	adds	r2, r3, #1
 801c9f8:	6022      	str	r2, [r4, #0]
 801c9fa:	701e      	strb	r6, [r3, #0]
 801c9fc:	6963      	ldr	r3, [r4, #20]
 801c9fe:	3001      	adds	r0, #1
 801ca00:	4283      	cmp	r3, r0
 801ca02:	d004      	beq.n	801ca0e <__swbuf_r+0x62>
 801ca04:	89a3      	ldrh	r3, [r4, #12]
 801ca06:	07db      	lsls	r3, r3, #31
 801ca08:	d506      	bpl.n	801ca18 <__swbuf_r+0x6c>
 801ca0a:	2e0a      	cmp	r6, #10
 801ca0c:	d104      	bne.n	801ca18 <__swbuf_r+0x6c>
 801ca0e:	4621      	mov	r1, r4
 801ca10:	4628      	mov	r0, r5
 801ca12:	f000 ffed 	bl	801d9f0 <_fflush_r>
 801ca16:	b988      	cbnz	r0, 801ca3c <__swbuf_r+0x90>
 801ca18:	4638      	mov	r0, r7
 801ca1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ca1c:	4b0a      	ldr	r3, [pc, #40]	; (801ca48 <__swbuf_r+0x9c>)
 801ca1e:	429c      	cmp	r4, r3
 801ca20:	d101      	bne.n	801ca26 <__swbuf_r+0x7a>
 801ca22:	68ac      	ldr	r4, [r5, #8]
 801ca24:	e7cf      	b.n	801c9c6 <__swbuf_r+0x1a>
 801ca26:	4b09      	ldr	r3, [pc, #36]	; (801ca4c <__swbuf_r+0xa0>)
 801ca28:	429c      	cmp	r4, r3
 801ca2a:	bf08      	it	eq
 801ca2c:	68ec      	ldreq	r4, [r5, #12]
 801ca2e:	e7ca      	b.n	801c9c6 <__swbuf_r+0x1a>
 801ca30:	4621      	mov	r1, r4
 801ca32:	4628      	mov	r0, r5
 801ca34:	f000 f80c 	bl	801ca50 <__swsetup_r>
 801ca38:	2800      	cmp	r0, #0
 801ca3a:	d0cb      	beq.n	801c9d4 <__swbuf_r+0x28>
 801ca3c:	f04f 37ff 	mov.w	r7, #4294967295
 801ca40:	e7ea      	b.n	801ca18 <__swbuf_r+0x6c>
 801ca42:	bf00      	nop
 801ca44:	08021a90 	.word	0x08021a90
 801ca48:	08021ab0 	.word	0x08021ab0
 801ca4c:	08021a70 	.word	0x08021a70

0801ca50 <__swsetup_r>:
 801ca50:	4b32      	ldr	r3, [pc, #200]	; (801cb1c <__swsetup_r+0xcc>)
 801ca52:	b570      	push	{r4, r5, r6, lr}
 801ca54:	681d      	ldr	r5, [r3, #0]
 801ca56:	4606      	mov	r6, r0
 801ca58:	460c      	mov	r4, r1
 801ca5a:	b125      	cbz	r5, 801ca66 <__swsetup_r+0x16>
 801ca5c:	69ab      	ldr	r3, [r5, #24]
 801ca5e:	b913      	cbnz	r3, 801ca66 <__swsetup_r+0x16>
 801ca60:	4628      	mov	r0, r5
 801ca62:	f001 f859 	bl	801db18 <__sinit>
 801ca66:	4b2e      	ldr	r3, [pc, #184]	; (801cb20 <__swsetup_r+0xd0>)
 801ca68:	429c      	cmp	r4, r3
 801ca6a:	d10f      	bne.n	801ca8c <__swsetup_r+0x3c>
 801ca6c:	686c      	ldr	r4, [r5, #4]
 801ca6e:	89a3      	ldrh	r3, [r4, #12]
 801ca70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ca74:	0719      	lsls	r1, r3, #28
 801ca76:	d42c      	bmi.n	801cad2 <__swsetup_r+0x82>
 801ca78:	06dd      	lsls	r5, r3, #27
 801ca7a:	d411      	bmi.n	801caa0 <__swsetup_r+0x50>
 801ca7c:	2309      	movs	r3, #9
 801ca7e:	6033      	str	r3, [r6, #0]
 801ca80:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801ca84:	81a3      	strh	r3, [r4, #12]
 801ca86:	f04f 30ff 	mov.w	r0, #4294967295
 801ca8a:	e03e      	b.n	801cb0a <__swsetup_r+0xba>
 801ca8c:	4b25      	ldr	r3, [pc, #148]	; (801cb24 <__swsetup_r+0xd4>)
 801ca8e:	429c      	cmp	r4, r3
 801ca90:	d101      	bne.n	801ca96 <__swsetup_r+0x46>
 801ca92:	68ac      	ldr	r4, [r5, #8]
 801ca94:	e7eb      	b.n	801ca6e <__swsetup_r+0x1e>
 801ca96:	4b24      	ldr	r3, [pc, #144]	; (801cb28 <__swsetup_r+0xd8>)
 801ca98:	429c      	cmp	r4, r3
 801ca9a:	bf08      	it	eq
 801ca9c:	68ec      	ldreq	r4, [r5, #12]
 801ca9e:	e7e6      	b.n	801ca6e <__swsetup_r+0x1e>
 801caa0:	0758      	lsls	r0, r3, #29
 801caa2:	d512      	bpl.n	801caca <__swsetup_r+0x7a>
 801caa4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801caa6:	b141      	cbz	r1, 801caba <__swsetup_r+0x6a>
 801caa8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801caac:	4299      	cmp	r1, r3
 801caae:	d002      	beq.n	801cab6 <__swsetup_r+0x66>
 801cab0:	4630      	mov	r0, r6
 801cab2:	f7fe ffdf 	bl	801ba74 <_free_r>
 801cab6:	2300      	movs	r3, #0
 801cab8:	6363      	str	r3, [r4, #52]	; 0x34
 801caba:	89a3      	ldrh	r3, [r4, #12]
 801cabc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801cac0:	81a3      	strh	r3, [r4, #12]
 801cac2:	2300      	movs	r3, #0
 801cac4:	6063      	str	r3, [r4, #4]
 801cac6:	6923      	ldr	r3, [r4, #16]
 801cac8:	6023      	str	r3, [r4, #0]
 801caca:	89a3      	ldrh	r3, [r4, #12]
 801cacc:	f043 0308 	orr.w	r3, r3, #8
 801cad0:	81a3      	strh	r3, [r4, #12]
 801cad2:	6923      	ldr	r3, [r4, #16]
 801cad4:	b94b      	cbnz	r3, 801caea <__swsetup_r+0x9a>
 801cad6:	89a3      	ldrh	r3, [r4, #12]
 801cad8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801cadc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801cae0:	d003      	beq.n	801caea <__swsetup_r+0x9a>
 801cae2:	4621      	mov	r1, r4
 801cae4:	4630      	mov	r0, r6
 801cae6:	f001 f8e3 	bl	801dcb0 <__smakebuf_r>
 801caea:	89a0      	ldrh	r0, [r4, #12]
 801caec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801caf0:	f010 0301 	ands.w	r3, r0, #1
 801caf4:	d00a      	beq.n	801cb0c <__swsetup_r+0xbc>
 801caf6:	2300      	movs	r3, #0
 801caf8:	60a3      	str	r3, [r4, #8]
 801cafa:	6963      	ldr	r3, [r4, #20]
 801cafc:	425b      	negs	r3, r3
 801cafe:	61a3      	str	r3, [r4, #24]
 801cb00:	6923      	ldr	r3, [r4, #16]
 801cb02:	b943      	cbnz	r3, 801cb16 <__swsetup_r+0xc6>
 801cb04:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801cb08:	d1ba      	bne.n	801ca80 <__swsetup_r+0x30>
 801cb0a:	bd70      	pop	{r4, r5, r6, pc}
 801cb0c:	0781      	lsls	r1, r0, #30
 801cb0e:	bf58      	it	pl
 801cb10:	6963      	ldrpl	r3, [r4, #20]
 801cb12:	60a3      	str	r3, [r4, #8]
 801cb14:	e7f4      	b.n	801cb00 <__swsetup_r+0xb0>
 801cb16:	2000      	movs	r0, #0
 801cb18:	e7f7      	b.n	801cb0a <__swsetup_r+0xba>
 801cb1a:	bf00      	nop
 801cb1c:	2000009c 	.word	0x2000009c
 801cb20:	08021a90 	.word	0x08021a90
 801cb24:	08021ab0 	.word	0x08021ab0
 801cb28:	08021a70 	.word	0x08021a70

0801cb2c <__register_exitproc>:
 801cb2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801cb30:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801cbec <__register_exitproc+0xc0>
 801cb34:	4606      	mov	r6, r0
 801cb36:	f8d8 0000 	ldr.w	r0, [r8]
 801cb3a:	461f      	mov	r7, r3
 801cb3c:	460d      	mov	r5, r1
 801cb3e:	4691      	mov	r9, r2
 801cb40:	f001 f88d 	bl	801dc5e <__retarget_lock_acquire_recursive>
 801cb44:	4b25      	ldr	r3, [pc, #148]	; (801cbdc <__register_exitproc+0xb0>)
 801cb46:	681c      	ldr	r4, [r3, #0]
 801cb48:	b934      	cbnz	r4, 801cb58 <__register_exitproc+0x2c>
 801cb4a:	4c25      	ldr	r4, [pc, #148]	; (801cbe0 <__register_exitproc+0xb4>)
 801cb4c:	601c      	str	r4, [r3, #0]
 801cb4e:	4b25      	ldr	r3, [pc, #148]	; (801cbe4 <__register_exitproc+0xb8>)
 801cb50:	b113      	cbz	r3, 801cb58 <__register_exitproc+0x2c>
 801cb52:	681b      	ldr	r3, [r3, #0]
 801cb54:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801cb58:	6863      	ldr	r3, [r4, #4]
 801cb5a:	2b1f      	cmp	r3, #31
 801cb5c:	dd07      	ble.n	801cb6e <__register_exitproc+0x42>
 801cb5e:	f8d8 0000 	ldr.w	r0, [r8]
 801cb62:	f001 f87e 	bl	801dc62 <__retarget_lock_release_recursive>
 801cb66:	f04f 30ff 	mov.w	r0, #4294967295
 801cb6a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801cb6e:	b34e      	cbz	r6, 801cbc4 <__register_exitproc+0x98>
 801cb70:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801cb74:	b988      	cbnz	r0, 801cb9a <__register_exitproc+0x6e>
 801cb76:	4b1c      	ldr	r3, [pc, #112]	; (801cbe8 <__register_exitproc+0xbc>)
 801cb78:	b923      	cbnz	r3, 801cb84 <__register_exitproc+0x58>
 801cb7a:	f8d8 0000 	ldr.w	r0, [r8]
 801cb7e:	f001 f86f 	bl	801dc60 <__retarget_lock_release>
 801cb82:	e7f0      	b.n	801cb66 <__register_exitproc+0x3a>
 801cb84:	f44f 7084 	mov.w	r0, #264	; 0x108
 801cb88:	f7fe ff4e 	bl	801ba28 <malloc>
 801cb8c:	2800      	cmp	r0, #0
 801cb8e:	d0f4      	beq.n	801cb7a <__register_exitproc+0x4e>
 801cb90:	2300      	movs	r3, #0
 801cb92:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801cb96:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801cb9a:	6863      	ldr	r3, [r4, #4]
 801cb9c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801cba0:	2201      	movs	r2, #1
 801cba2:	409a      	lsls	r2, r3
 801cba4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801cba8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801cbac:	4313      	orrs	r3, r2
 801cbae:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801cbb2:	2e02      	cmp	r6, #2
 801cbb4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801cbb8:	bf02      	ittt	eq
 801cbba:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801cbbe:	4313      	orreq	r3, r2
 801cbc0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801cbc4:	6863      	ldr	r3, [r4, #4]
 801cbc6:	f8d8 0000 	ldr.w	r0, [r8]
 801cbca:	1c5a      	adds	r2, r3, #1
 801cbcc:	3302      	adds	r3, #2
 801cbce:	6062      	str	r2, [r4, #4]
 801cbd0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801cbd4:	f001 f845 	bl	801dc62 <__retarget_lock_release_recursive>
 801cbd8:	2000      	movs	r0, #0
 801cbda:	e7c6      	b.n	801cb6a <__register_exitproc+0x3e>
 801cbdc:	20001a5c 	.word	0x20001a5c
 801cbe0:	200019d0 	.word	0x200019d0
 801cbe4:	080218d8 	.word	0x080218d8
 801cbe8:	0801ba29 	.word	0x0801ba29
 801cbec:	20000100 	.word	0x20000100

0801cbf0 <quorem>:
 801cbf0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbf4:	6903      	ldr	r3, [r0, #16]
 801cbf6:	690c      	ldr	r4, [r1, #16]
 801cbf8:	42a3      	cmp	r3, r4
 801cbfa:	4607      	mov	r7, r0
 801cbfc:	f2c0 8081 	blt.w	801cd02 <quorem+0x112>
 801cc00:	3c01      	subs	r4, #1
 801cc02:	f101 0814 	add.w	r8, r1, #20
 801cc06:	f100 0514 	add.w	r5, r0, #20
 801cc0a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801cc0e:	9301      	str	r3, [sp, #4]
 801cc10:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801cc14:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801cc18:	3301      	adds	r3, #1
 801cc1a:	429a      	cmp	r2, r3
 801cc1c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 801cc20:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801cc24:	fbb2 f6f3 	udiv	r6, r2, r3
 801cc28:	d331      	bcc.n	801cc8e <quorem+0x9e>
 801cc2a:	f04f 0e00 	mov.w	lr, #0
 801cc2e:	4640      	mov	r0, r8
 801cc30:	46ac      	mov	ip, r5
 801cc32:	46f2      	mov	sl, lr
 801cc34:	f850 2b04 	ldr.w	r2, [r0], #4
 801cc38:	b293      	uxth	r3, r2
 801cc3a:	fb06 e303 	mla	r3, r6, r3, lr
 801cc3e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 801cc42:	b29b      	uxth	r3, r3
 801cc44:	ebaa 0303 	sub.w	r3, sl, r3
 801cc48:	f8dc a000 	ldr.w	sl, [ip]
 801cc4c:	0c12      	lsrs	r2, r2, #16
 801cc4e:	fa13 f38a 	uxtah	r3, r3, sl
 801cc52:	fb06 e202 	mla	r2, r6, r2, lr
 801cc56:	9300      	str	r3, [sp, #0]
 801cc58:	9b00      	ldr	r3, [sp, #0]
 801cc5a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 801cc5e:	b292      	uxth	r2, r2
 801cc60:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 801cc64:	eb02 4223 	add.w	r2, r2, r3, asr #16
 801cc68:	f8bd 3000 	ldrh.w	r3, [sp]
 801cc6c:	4581      	cmp	r9, r0
 801cc6e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801cc72:	f84c 3b04 	str.w	r3, [ip], #4
 801cc76:	ea4f 4a22 	mov.w	sl, r2, asr #16
 801cc7a:	d2db      	bcs.n	801cc34 <quorem+0x44>
 801cc7c:	f855 300b 	ldr.w	r3, [r5, fp]
 801cc80:	b92b      	cbnz	r3, 801cc8e <quorem+0x9e>
 801cc82:	9b01      	ldr	r3, [sp, #4]
 801cc84:	3b04      	subs	r3, #4
 801cc86:	429d      	cmp	r5, r3
 801cc88:	461a      	mov	r2, r3
 801cc8a:	d32e      	bcc.n	801ccea <quorem+0xfa>
 801cc8c:	613c      	str	r4, [r7, #16]
 801cc8e:	4638      	mov	r0, r7
 801cc90:	f001 fadc 	bl	801e24c <__mcmp>
 801cc94:	2800      	cmp	r0, #0
 801cc96:	db24      	blt.n	801cce2 <quorem+0xf2>
 801cc98:	3601      	adds	r6, #1
 801cc9a:	4628      	mov	r0, r5
 801cc9c:	f04f 0c00 	mov.w	ip, #0
 801cca0:	f858 2b04 	ldr.w	r2, [r8], #4
 801cca4:	f8d0 e000 	ldr.w	lr, [r0]
 801cca8:	b293      	uxth	r3, r2
 801ccaa:	ebac 0303 	sub.w	r3, ip, r3
 801ccae:	0c12      	lsrs	r2, r2, #16
 801ccb0:	fa13 f38e 	uxtah	r3, r3, lr
 801ccb4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 801ccb8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 801ccbc:	b29b      	uxth	r3, r3
 801ccbe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ccc2:	45c1      	cmp	r9, r8
 801ccc4:	f840 3b04 	str.w	r3, [r0], #4
 801ccc8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801cccc:	d2e8      	bcs.n	801cca0 <quorem+0xb0>
 801ccce:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801ccd2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801ccd6:	b922      	cbnz	r2, 801cce2 <quorem+0xf2>
 801ccd8:	3b04      	subs	r3, #4
 801ccda:	429d      	cmp	r5, r3
 801ccdc:	461a      	mov	r2, r3
 801ccde:	d30a      	bcc.n	801ccf6 <quorem+0x106>
 801cce0:	613c      	str	r4, [r7, #16]
 801cce2:	4630      	mov	r0, r6
 801cce4:	b003      	add	sp, #12
 801cce6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ccea:	6812      	ldr	r2, [r2, #0]
 801ccec:	3b04      	subs	r3, #4
 801ccee:	2a00      	cmp	r2, #0
 801ccf0:	d1cc      	bne.n	801cc8c <quorem+0x9c>
 801ccf2:	3c01      	subs	r4, #1
 801ccf4:	e7c7      	b.n	801cc86 <quorem+0x96>
 801ccf6:	6812      	ldr	r2, [r2, #0]
 801ccf8:	3b04      	subs	r3, #4
 801ccfa:	2a00      	cmp	r2, #0
 801ccfc:	d1f0      	bne.n	801cce0 <quorem+0xf0>
 801ccfe:	3c01      	subs	r4, #1
 801cd00:	e7eb      	b.n	801ccda <quorem+0xea>
 801cd02:	2000      	movs	r0, #0
 801cd04:	e7ee      	b.n	801cce4 <quorem+0xf4>
	...

0801cd08 <_dtoa_r>:
 801cd08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd0c:	ed2d 8b04 	vpush	{d8-d9}
 801cd10:	ec57 6b10 	vmov	r6, r7, d0
 801cd14:	b093      	sub	sp, #76	; 0x4c
 801cd16:	6a45      	ldr	r5, [r0, #36]	; 0x24
 801cd18:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 801cd1c:	9106      	str	r1, [sp, #24]
 801cd1e:	ee10 aa10 	vmov	sl, s0
 801cd22:	4604      	mov	r4, r0
 801cd24:	9209      	str	r2, [sp, #36]	; 0x24
 801cd26:	930c      	str	r3, [sp, #48]	; 0x30
 801cd28:	46bb      	mov	fp, r7
 801cd2a:	b975      	cbnz	r5, 801cd4a <_dtoa_r+0x42>
 801cd2c:	2010      	movs	r0, #16
 801cd2e:	f7fe fe7b 	bl	801ba28 <malloc>
 801cd32:	4602      	mov	r2, r0
 801cd34:	6260      	str	r0, [r4, #36]	; 0x24
 801cd36:	b920      	cbnz	r0, 801cd42 <_dtoa_r+0x3a>
 801cd38:	4ba7      	ldr	r3, [pc, #668]	; (801cfd8 <_dtoa_r+0x2d0>)
 801cd3a:	21ea      	movs	r1, #234	; 0xea
 801cd3c:	48a7      	ldr	r0, [pc, #668]	; (801cfdc <_dtoa_r+0x2d4>)
 801cd3e:	f7fe fe01 	bl	801b944 <__assert_func>
 801cd42:	e9c0 5501 	strd	r5, r5, [r0, #4]
 801cd46:	6005      	str	r5, [r0, #0]
 801cd48:	60c5      	str	r5, [r0, #12]
 801cd4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801cd4c:	6819      	ldr	r1, [r3, #0]
 801cd4e:	b151      	cbz	r1, 801cd66 <_dtoa_r+0x5e>
 801cd50:	685a      	ldr	r2, [r3, #4]
 801cd52:	604a      	str	r2, [r1, #4]
 801cd54:	2301      	movs	r3, #1
 801cd56:	4093      	lsls	r3, r2
 801cd58:	608b      	str	r3, [r1, #8]
 801cd5a:	4620      	mov	r0, r4
 801cd5c:	f001 f834 	bl	801ddc8 <_Bfree>
 801cd60:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801cd62:	2200      	movs	r2, #0
 801cd64:	601a      	str	r2, [r3, #0]
 801cd66:	1e3b      	subs	r3, r7, #0
 801cd68:	bfaa      	itet	ge
 801cd6a:	2300      	movge	r3, #0
 801cd6c:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 801cd70:	f8c8 3000 	strge.w	r3, [r8]
 801cd74:	4b9a      	ldr	r3, [pc, #616]	; (801cfe0 <_dtoa_r+0x2d8>)
 801cd76:	bfbc      	itt	lt
 801cd78:	2201      	movlt	r2, #1
 801cd7a:	f8c8 2000 	strlt.w	r2, [r8]
 801cd7e:	ea33 030b 	bics.w	r3, r3, fp
 801cd82:	d11b      	bne.n	801cdbc <_dtoa_r+0xb4>
 801cd84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cd86:	f242 730f 	movw	r3, #9999	; 0x270f
 801cd8a:	6013      	str	r3, [r2, #0]
 801cd8c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 801cd90:	4333      	orrs	r3, r6
 801cd92:	f000 8592 	beq.w	801d8ba <_dtoa_r+0xbb2>
 801cd96:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cd98:	b963      	cbnz	r3, 801cdb4 <_dtoa_r+0xac>
 801cd9a:	4b92      	ldr	r3, [pc, #584]	; (801cfe4 <_dtoa_r+0x2dc>)
 801cd9c:	e022      	b.n	801cde4 <_dtoa_r+0xdc>
 801cd9e:	4b92      	ldr	r3, [pc, #584]	; (801cfe8 <_dtoa_r+0x2e0>)
 801cda0:	9301      	str	r3, [sp, #4]
 801cda2:	3308      	adds	r3, #8
 801cda4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cda6:	6013      	str	r3, [r2, #0]
 801cda8:	9801      	ldr	r0, [sp, #4]
 801cdaa:	b013      	add	sp, #76	; 0x4c
 801cdac:	ecbd 8b04 	vpop	{d8-d9}
 801cdb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdb4:	4b8b      	ldr	r3, [pc, #556]	; (801cfe4 <_dtoa_r+0x2dc>)
 801cdb6:	9301      	str	r3, [sp, #4]
 801cdb8:	3303      	adds	r3, #3
 801cdba:	e7f3      	b.n	801cda4 <_dtoa_r+0x9c>
 801cdbc:	2200      	movs	r2, #0
 801cdbe:	2300      	movs	r3, #0
 801cdc0:	4650      	mov	r0, sl
 801cdc2:	4659      	mov	r1, fp
 801cdc4:	f7e3 fe90 	bl	8000ae8 <__aeabi_dcmpeq>
 801cdc8:	ec4b ab19 	vmov	d9, sl, fp
 801cdcc:	4680      	mov	r8, r0
 801cdce:	b158      	cbz	r0, 801cde8 <_dtoa_r+0xe0>
 801cdd0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cdd2:	2301      	movs	r3, #1
 801cdd4:	6013      	str	r3, [r2, #0]
 801cdd6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cdd8:	2b00      	cmp	r3, #0
 801cdda:	f000 856b 	beq.w	801d8b4 <_dtoa_r+0xbac>
 801cdde:	4883      	ldr	r0, [pc, #524]	; (801cfec <_dtoa_r+0x2e4>)
 801cde0:	6018      	str	r0, [r3, #0]
 801cde2:	1e43      	subs	r3, r0, #1
 801cde4:	9301      	str	r3, [sp, #4]
 801cde6:	e7df      	b.n	801cda8 <_dtoa_r+0xa0>
 801cde8:	ec4b ab10 	vmov	d0, sl, fp
 801cdec:	aa10      	add	r2, sp, #64	; 0x40
 801cdee:	a911      	add	r1, sp, #68	; 0x44
 801cdf0:	4620      	mov	r0, r4
 801cdf2:	f001 fad1 	bl	801e398 <__d2b>
 801cdf6:	f3cb 550a 	ubfx	r5, fp, #20, #11
 801cdfa:	ee08 0a10 	vmov	s16, r0
 801cdfe:	2d00      	cmp	r5, #0
 801ce00:	f000 8084 	beq.w	801cf0c <_dtoa_r+0x204>
 801ce04:	ee19 3a90 	vmov	r3, s19
 801ce08:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801ce0c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 801ce10:	4656      	mov	r6, sl
 801ce12:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 801ce16:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 801ce1a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801ce1e:	4b74      	ldr	r3, [pc, #464]	; (801cff0 <_dtoa_r+0x2e8>)
 801ce20:	2200      	movs	r2, #0
 801ce22:	4630      	mov	r0, r6
 801ce24:	4639      	mov	r1, r7
 801ce26:	f7e3 fa3f 	bl	80002a8 <__aeabi_dsub>
 801ce2a:	a365      	add	r3, pc, #404	; (adr r3, 801cfc0 <_dtoa_r+0x2b8>)
 801ce2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ce30:	f7e3 fbf2 	bl	8000618 <__aeabi_dmul>
 801ce34:	a364      	add	r3, pc, #400	; (adr r3, 801cfc8 <_dtoa_r+0x2c0>)
 801ce36:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ce3a:	f7e3 fa37 	bl	80002ac <__adddf3>
 801ce3e:	4606      	mov	r6, r0
 801ce40:	4628      	mov	r0, r5
 801ce42:	460f      	mov	r7, r1
 801ce44:	f7e3 fb7e 	bl	8000544 <__aeabi_i2d>
 801ce48:	a361      	add	r3, pc, #388	; (adr r3, 801cfd0 <_dtoa_r+0x2c8>)
 801ce4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ce4e:	f7e3 fbe3 	bl	8000618 <__aeabi_dmul>
 801ce52:	4602      	mov	r2, r0
 801ce54:	460b      	mov	r3, r1
 801ce56:	4630      	mov	r0, r6
 801ce58:	4639      	mov	r1, r7
 801ce5a:	f7e3 fa27 	bl	80002ac <__adddf3>
 801ce5e:	4606      	mov	r6, r0
 801ce60:	460f      	mov	r7, r1
 801ce62:	f7e3 fe89 	bl	8000b78 <__aeabi_d2iz>
 801ce66:	2200      	movs	r2, #0
 801ce68:	9000      	str	r0, [sp, #0]
 801ce6a:	2300      	movs	r3, #0
 801ce6c:	4630      	mov	r0, r6
 801ce6e:	4639      	mov	r1, r7
 801ce70:	f7e3 fe44 	bl	8000afc <__aeabi_dcmplt>
 801ce74:	b150      	cbz	r0, 801ce8c <_dtoa_r+0x184>
 801ce76:	9800      	ldr	r0, [sp, #0]
 801ce78:	f7e3 fb64 	bl	8000544 <__aeabi_i2d>
 801ce7c:	4632      	mov	r2, r6
 801ce7e:	463b      	mov	r3, r7
 801ce80:	f7e3 fe32 	bl	8000ae8 <__aeabi_dcmpeq>
 801ce84:	b910      	cbnz	r0, 801ce8c <_dtoa_r+0x184>
 801ce86:	9b00      	ldr	r3, [sp, #0]
 801ce88:	3b01      	subs	r3, #1
 801ce8a:	9300      	str	r3, [sp, #0]
 801ce8c:	9b00      	ldr	r3, [sp, #0]
 801ce8e:	2b16      	cmp	r3, #22
 801ce90:	d85a      	bhi.n	801cf48 <_dtoa_r+0x240>
 801ce92:	9a00      	ldr	r2, [sp, #0]
 801ce94:	4b57      	ldr	r3, [pc, #348]	; (801cff4 <_dtoa_r+0x2ec>)
 801ce96:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801ce9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ce9e:	ec51 0b19 	vmov	r0, r1, d9
 801cea2:	f7e3 fe2b 	bl	8000afc <__aeabi_dcmplt>
 801cea6:	2800      	cmp	r0, #0
 801cea8:	d050      	beq.n	801cf4c <_dtoa_r+0x244>
 801ceaa:	9b00      	ldr	r3, [sp, #0]
 801ceac:	3b01      	subs	r3, #1
 801ceae:	9300      	str	r3, [sp, #0]
 801ceb0:	2300      	movs	r3, #0
 801ceb2:	930b      	str	r3, [sp, #44]	; 0x2c
 801ceb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ceb6:	1b5d      	subs	r5, r3, r5
 801ceb8:	1e6b      	subs	r3, r5, #1
 801ceba:	9305      	str	r3, [sp, #20]
 801cebc:	bf45      	ittet	mi
 801cebe:	f1c5 0301 	rsbmi	r3, r5, #1
 801cec2:	9304      	strmi	r3, [sp, #16]
 801cec4:	2300      	movpl	r3, #0
 801cec6:	2300      	movmi	r3, #0
 801cec8:	bf4c      	ite	mi
 801ceca:	9305      	strmi	r3, [sp, #20]
 801cecc:	9304      	strpl	r3, [sp, #16]
 801cece:	9b00      	ldr	r3, [sp, #0]
 801ced0:	2b00      	cmp	r3, #0
 801ced2:	db3d      	blt.n	801cf50 <_dtoa_r+0x248>
 801ced4:	9b05      	ldr	r3, [sp, #20]
 801ced6:	9a00      	ldr	r2, [sp, #0]
 801ced8:	920a      	str	r2, [sp, #40]	; 0x28
 801ceda:	4413      	add	r3, r2
 801cedc:	9305      	str	r3, [sp, #20]
 801cede:	2300      	movs	r3, #0
 801cee0:	9307      	str	r3, [sp, #28]
 801cee2:	9b06      	ldr	r3, [sp, #24]
 801cee4:	2b09      	cmp	r3, #9
 801cee6:	f200 8089 	bhi.w	801cffc <_dtoa_r+0x2f4>
 801ceea:	2b05      	cmp	r3, #5
 801ceec:	bfc4      	itt	gt
 801ceee:	3b04      	subgt	r3, #4
 801cef0:	9306      	strgt	r3, [sp, #24]
 801cef2:	9b06      	ldr	r3, [sp, #24]
 801cef4:	f1a3 0302 	sub.w	r3, r3, #2
 801cef8:	bfcc      	ite	gt
 801cefa:	2500      	movgt	r5, #0
 801cefc:	2501      	movle	r5, #1
 801cefe:	2b03      	cmp	r3, #3
 801cf00:	f200 8087 	bhi.w	801d012 <_dtoa_r+0x30a>
 801cf04:	e8df f003 	tbb	[pc, r3]
 801cf08:	59383a2d 	.word	0x59383a2d
 801cf0c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 801cf10:	441d      	add	r5, r3
 801cf12:	f205 4332 	addw	r3, r5, #1074	; 0x432
 801cf16:	2b20      	cmp	r3, #32
 801cf18:	bfc1      	itttt	gt
 801cf1a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 801cf1e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 801cf22:	fa0b f303 	lslgt.w	r3, fp, r3
 801cf26:	fa26 f000 	lsrgt.w	r0, r6, r0
 801cf2a:	bfda      	itte	le
 801cf2c:	f1c3 0320 	rsble	r3, r3, #32
 801cf30:	fa06 f003 	lslle.w	r0, r6, r3
 801cf34:	4318      	orrgt	r0, r3
 801cf36:	f7e3 faf5 	bl	8000524 <__aeabi_ui2d>
 801cf3a:	2301      	movs	r3, #1
 801cf3c:	4606      	mov	r6, r0
 801cf3e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 801cf42:	3d01      	subs	r5, #1
 801cf44:	930e      	str	r3, [sp, #56]	; 0x38
 801cf46:	e76a      	b.n	801ce1e <_dtoa_r+0x116>
 801cf48:	2301      	movs	r3, #1
 801cf4a:	e7b2      	b.n	801ceb2 <_dtoa_r+0x1aa>
 801cf4c:	900b      	str	r0, [sp, #44]	; 0x2c
 801cf4e:	e7b1      	b.n	801ceb4 <_dtoa_r+0x1ac>
 801cf50:	9b04      	ldr	r3, [sp, #16]
 801cf52:	9a00      	ldr	r2, [sp, #0]
 801cf54:	1a9b      	subs	r3, r3, r2
 801cf56:	9304      	str	r3, [sp, #16]
 801cf58:	4253      	negs	r3, r2
 801cf5a:	9307      	str	r3, [sp, #28]
 801cf5c:	2300      	movs	r3, #0
 801cf5e:	930a      	str	r3, [sp, #40]	; 0x28
 801cf60:	e7bf      	b.n	801cee2 <_dtoa_r+0x1da>
 801cf62:	2300      	movs	r3, #0
 801cf64:	9308      	str	r3, [sp, #32]
 801cf66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cf68:	2b00      	cmp	r3, #0
 801cf6a:	dc55      	bgt.n	801d018 <_dtoa_r+0x310>
 801cf6c:	2301      	movs	r3, #1
 801cf6e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801cf72:	461a      	mov	r2, r3
 801cf74:	9209      	str	r2, [sp, #36]	; 0x24
 801cf76:	e00c      	b.n	801cf92 <_dtoa_r+0x28a>
 801cf78:	2301      	movs	r3, #1
 801cf7a:	e7f3      	b.n	801cf64 <_dtoa_r+0x25c>
 801cf7c:	2300      	movs	r3, #0
 801cf7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cf80:	9308      	str	r3, [sp, #32]
 801cf82:	9b00      	ldr	r3, [sp, #0]
 801cf84:	4413      	add	r3, r2
 801cf86:	9302      	str	r3, [sp, #8]
 801cf88:	3301      	adds	r3, #1
 801cf8a:	2b01      	cmp	r3, #1
 801cf8c:	9303      	str	r3, [sp, #12]
 801cf8e:	bfb8      	it	lt
 801cf90:	2301      	movlt	r3, #1
 801cf92:	6a60      	ldr	r0, [r4, #36]	; 0x24
 801cf94:	2200      	movs	r2, #0
 801cf96:	6042      	str	r2, [r0, #4]
 801cf98:	2204      	movs	r2, #4
 801cf9a:	f102 0614 	add.w	r6, r2, #20
 801cf9e:	429e      	cmp	r6, r3
 801cfa0:	6841      	ldr	r1, [r0, #4]
 801cfa2:	d93d      	bls.n	801d020 <_dtoa_r+0x318>
 801cfa4:	4620      	mov	r0, r4
 801cfa6:	f000 fecf 	bl	801dd48 <_Balloc>
 801cfaa:	9001      	str	r0, [sp, #4]
 801cfac:	2800      	cmp	r0, #0
 801cfae:	d13b      	bne.n	801d028 <_dtoa_r+0x320>
 801cfb0:	4b11      	ldr	r3, [pc, #68]	; (801cff8 <_dtoa_r+0x2f0>)
 801cfb2:	4602      	mov	r2, r0
 801cfb4:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 801cfb8:	e6c0      	b.n	801cd3c <_dtoa_r+0x34>
 801cfba:	2301      	movs	r3, #1
 801cfbc:	e7df      	b.n	801cf7e <_dtoa_r+0x276>
 801cfbe:	bf00      	nop
 801cfc0:	636f4361 	.word	0x636f4361
 801cfc4:	3fd287a7 	.word	0x3fd287a7
 801cfc8:	8b60c8b3 	.word	0x8b60c8b3
 801cfcc:	3fc68a28 	.word	0x3fc68a28
 801cfd0:	509f79fb 	.word	0x509f79fb
 801cfd4:	3fd34413 	.word	0x3fd34413
 801cfd8:	080219ea 	.word	0x080219ea
 801cfdc:	08021a01 	.word	0x08021a01
 801cfe0:	7ff00000 	.word	0x7ff00000
 801cfe4:	080219e6 	.word	0x080219e6
 801cfe8:	080219dd 	.word	0x080219dd
 801cfec:	08020454 	.word	0x08020454
 801cff0:	3ff80000 	.word	0x3ff80000
 801cff4:	08021b58 	.word	0x08021b58
 801cff8:	08021a5c 	.word	0x08021a5c
 801cffc:	2501      	movs	r5, #1
 801cffe:	2300      	movs	r3, #0
 801d000:	9306      	str	r3, [sp, #24]
 801d002:	9508      	str	r5, [sp, #32]
 801d004:	f04f 33ff 	mov.w	r3, #4294967295
 801d008:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801d00c:	2200      	movs	r2, #0
 801d00e:	2312      	movs	r3, #18
 801d010:	e7b0      	b.n	801cf74 <_dtoa_r+0x26c>
 801d012:	2301      	movs	r3, #1
 801d014:	9308      	str	r3, [sp, #32]
 801d016:	e7f5      	b.n	801d004 <_dtoa_r+0x2fc>
 801d018:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d01a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801d01e:	e7b8      	b.n	801cf92 <_dtoa_r+0x28a>
 801d020:	3101      	adds	r1, #1
 801d022:	6041      	str	r1, [r0, #4]
 801d024:	0052      	lsls	r2, r2, #1
 801d026:	e7b8      	b.n	801cf9a <_dtoa_r+0x292>
 801d028:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801d02a:	9a01      	ldr	r2, [sp, #4]
 801d02c:	601a      	str	r2, [r3, #0]
 801d02e:	9b03      	ldr	r3, [sp, #12]
 801d030:	2b0e      	cmp	r3, #14
 801d032:	f200 809d 	bhi.w	801d170 <_dtoa_r+0x468>
 801d036:	2d00      	cmp	r5, #0
 801d038:	f000 809a 	beq.w	801d170 <_dtoa_r+0x468>
 801d03c:	9b00      	ldr	r3, [sp, #0]
 801d03e:	2b00      	cmp	r3, #0
 801d040:	dd32      	ble.n	801d0a8 <_dtoa_r+0x3a0>
 801d042:	4ab7      	ldr	r2, [pc, #732]	; (801d320 <_dtoa_r+0x618>)
 801d044:	f003 030f 	and.w	r3, r3, #15
 801d048:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801d04c:	e9d3 8900 	ldrd	r8, r9, [r3]
 801d050:	9b00      	ldr	r3, [sp, #0]
 801d052:	05d8      	lsls	r0, r3, #23
 801d054:	ea4f 1723 	mov.w	r7, r3, asr #4
 801d058:	d516      	bpl.n	801d088 <_dtoa_r+0x380>
 801d05a:	4bb2      	ldr	r3, [pc, #712]	; (801d324 <_dtoa_r+0x61c>)
 801d05c:	ec51 0b19 	vmov	r0, r1, d9
 801d060:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801d064:	f7e3 fc02 	bl	800086c <__aeabi_ddiv>
 801d068:	f007 070f 	and.w	r7, r7, #15
 801d06c:	4682      	mov	sl, r0
 801d06e:	468b      	mov	fp, r1
 801d070:	2503      	movs	r5, #3
 801d072:	4eac      	ldr	r6, [pc, #688]	; (801d324 <_dtoa_r+0x61c>)
 801d074:	b957      	cbnz	r7, 801d08c <_dtoa_r+0x384>
 801d076:	4642      	mov	r2, r8
 801d078:	464b      	mov	r3, r9
 801d07a:	4650      	mov	r0, sl
 801d07c:	4659      	mov	r1, fp
 801d07e:	f7e3 fbf5 	bl	800086c <__aeabi_ddiv>
 801d082:	4682      	mov	sl, r0
 801d084:	468b      	mov	fp, r1
 801d086:	e028      	b.n	801d0da <_dtoa_r+0x3d2>
 801d088:	2502      	movs	r5, #2
 801d08a:	e7f2      	b.n	801d072 <_dtoa_r+0x36a>
 801d08c:	07f9      	lsls	r1, r7, #31
 801d08e:	d508      	bpl.n	801d0a2 <_dtoa_r+0x39a>
 801d090:	4640      	mov	r0, r8
 801d092:	4649      	mov	r1, r9
 801d094:	e9d6 2300 	ldrd	r2, r3, [r6]
 801d098:	f7e3 fabe 	bl	8000618 <__aeabi_dmul>
 801d09c:	3501      	adds	r5, #1
 801d09e:	4680      	mov	r8, r0
 801d0a0:	4689      	mov	r9, r1
 801d0a2:	107f      	asrs	r7, r7, #1
 801d0a4:	3608      	adds	r6, #8
 801d0a6:	e7e5      	b.n	801d074 <_dtoa_r+0x36c>
 801d0a8:	f000 809b 	beq.w	801d1e2 <_dtoa_r+0x4da>
 801d0ac:	9b00      	ldr	r3, [sp, #0]
 801d0ae:	4f9d      	ldr	r7, [pc, #628]	; (801d324 <_dtoa_r+0x61c>)
 801d0b0:	425e      	negs	r6, r3
 801d0b2:	4b9b      	ldr	r3, [pc, #620]	; (801d320 <_dtoa_r+0x618>)
 801d0b4:	f006 020f 	and.w	r2, r6, #15
 801d0b8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d0bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d0c0:	ec51 0b19 	vmov	r0, r1, d9
 801d0c4:	f7e3 faa8 	bl	8000618 <__aeabi_dmul>
 801d0c8:	1136      	asrs	r6, r6, #4
 801d0ca:	4682      	mov	sl, r0
 801d0cc:	468b      	mov	fp, r1
 801d0ce:	2300      	movs	r3, #0
 801d0d0:	2502      	movs	r5, #2
 801d0d2:	2e00      	cmp	r6, #0
 801d0d4:	d17a      	bne.n	801d1cc <_dtoa_r+0x4c4>
 801d0d6:	2b00      	cmp	r3, #0
 801d0d8:	d1d3      	bne.n	801d082 <_dtoa_r+0x37a>
 801d0da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d0dc:	2b00      	cmp	r3, #0
 801d0de:	f000 8082 	beq.w	801d1e6 <_dtoa_r+0x4de>
 801d0e2:	4b91      	ldr	r3, [pc, #580]	; (801d328 <_dtoa_r+0x620>)
 801d0e4:	2200      	movs	r2, #0
 801d0e6:	4650      	mov	r0, sl
 801d0e8:	4659      	mov	r1, fp
 801d0ea:	f7e3 fd07 	bl	8000afc <__aeabi_dcmplt>
 801d0ee:	2800      	cmp	r0, #0
 801d0f0:	d079      	beq.n	801d1e6 <_dtoa_r+0x4de>
 801d0f2:	9b03      	ldr	r3, [sp, #12]
 801d0f4:	2b00      	cmp	r3, #0
 801d0f6:	d076      	beq.n	801d1e6 <_dtoa_r+0x4de>
 801d0f8:	9b02      	ldr	r3, [sp, #8]
 801d0fa:	2b00      	cmp	r3, #0
 801d0fc:	dd36      	ble.n	801d16c <_dtoa_r+0x464>
 801d0fe:	9b00      	ldr	r3, [sp, #0]
 801d100:	4650      	mov	r0, sl
 801d102:	4659      	mov	r1, fp
 801d104:	1e5f      	subs	r7, r3, #1
 801d106:	2200      	movs	r2, #0
 801d108:	4b88      	ldr	r3, [pc, #544]	; (801d32c <_dtoa_r+0x624>)
 801d10a:	f7e3 fa85 	bl	8000618 <__aeabi_dmul>
 801d10e:	9e02      	ldr	r6, [sp, #8]
 801d110:	4682      	mov	sl, r0
 801d112:	468b      	mov	fp, r1
 801d114:	3501      	adds	r5, #1
 801d116:	4628      	mov	r0, r5
 801d118:	f7e3 fa14 	bl	8000544 <__aeabi_i2d>
 801d11c:	4652      	mov	r2, sl
 801d11e:	465b      	mov	r3, fp
 801d120:	f7e3 fa7a 	bl	8000618 <__aeabi_dmul>
 801d124:	4b82      	ldr	r3, [pc, #520]	; (801d330 <_dtoa_r+0x628>)
 801d126:	2200      	movs	r2, #0
 801d128:	f7e3 f8c0 	bl	80002ac <__adddf3>
 801d12c:	46d0      	mov	r8, sl
 801d12e:	46d9      	mov	r9, fp
 801d130:	4682      	mov	sl, r0
 801d132:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 801d136:	2e00      	cmp	r6, #0
 801d138:	d158      	bne.n	801d1ec <_dtoa_r+0x4e4>
 801d13a:	4b7e      	ldr	r3, [pc, #504]	; (801d334 <_dtoa_r+0x62c>)
 801d13c:	2200      	movs	r2, #0
 801d13e:	4640      	mov	r0, r8
 801d140:	4649      	mov	r1, r9
 801d142:	f7e3 f8b1 	bl	80002a8 <__aeabi_dsub>
 801d146:	4652      	mov	r2, sl
 801d148:	465b      	mov	r3, fp
 801d14a:	4680      	mov	r8, r0
 801d14c:	4689      	mov	r9, r1
 801d14e:	f7e3 fcf3 	bl	8000b38 <__aeabi_dcmpgt>
 801d152:	2800      	cmp	r0, #0
 801d154:	f040 8295 	bne.w	801d682 <_dtoa_r+0x97a>
 801d158:	4652      	mov	r2, sl
 801d15a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 801d15e:	4640      	mov	r0, r8
 801d160:	4649      	mov	r1, r9
 801d162:	f7e3 fccb 	bl	8000afc <__aeabi_dcmplt>
 801d166:	2800      	cmp	r0, #0
 801d168:	f040 8289 	bne.w	801d67e <_dtoa_r+0x976>
 801d16c:	ec5b ab19 	vmov	sl, fp, d9
 801d170:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d172:	2b00      	cmp	r3, #0
 801d174:	f2c0 8148 	blt.w	801d408 <_dtoa_r+0x700>
 801d178:	9a00      	ldr	r2, [sp, #0]
 801d17a:	2a0e      	cmp	r2, #14
 801d17c:	f300 8144 	bgt.w	801d408 <_dtoa_r+0x700>
 801d180:	4b67      	ldr	r3, [pc, #412]	; (801d320 <_dtoa_r+0x618>)
 801d182:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d186:	e9d3 8900 	ldrd	r8, r9, [r3]
 801d18a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d18c:	2b00      	cmp	r3, #0
 801d18e:	f280 80d5 	bge.w	801d33c <_dtoa_r+0x634>
 801d192:	9b03      	ldr	r3, [sp, #12]
 801d194:	2b00      	cmp	r3, #0
 801d196:	f300 80d1 	bgt.w	801d33c <_dtoa_r+0x634>
 801d19a:	f040 826f 	bne.w	801d67c <_dtoa_r+0x974>
 801d19e:	4b65      	ldr	r3, [pc, #404]	; (801d334 <_dtoa_r+0x62c>)
 801d1a0:	2200      	movs	r2, #0
 801d1a2:	4640      	mov	r0, r8
 801d1a4:	4649      	mov	r1, r9
 801d1a6:	f7e3 fa37 	bl	8000618 <__aeabi_dmul>
 801d1aa:	4652      	mov	r2, sl
 801d1ac:	465b      	mov	r3, fp
 801d1ae:	f7e3 fcb9 	bl	8000b24 <__aeabi_dcmpge>
 801d1b2:	9e03      	ldr	r6, [sp, #12]
 801d1b4:	4637      	mov	r7, r6
 801d1b6:	2800      	cmp	r0, #0
 801d1b8:	f040 8245 	bne.w	801d646 <_dtoa_r+0x93e>
 801d1bc:	9d01      	ldr	r5, [sp, #4]
 801d1be:	2331      	movs	r3, #49	; 0x31
 801d1c0:	f805 3b01 	strb.w	r3, [r5], #1
 801d1c4:	9b00      	ldr	r3, [sp, #0]
 801d1c6:	3301      	adds	r3, #1
 801d1c8:	9300      	str	r3, [sp, #0]
 801d1ca:	e240      	b.n	801d64e <_dtoa_r+0x946>
 801d1cc:	07f2      	lsls	r2, r6, #31
 801d1ce:	d505      	bpl.n	801d1dc <_dtoa_r+0x4d4>
 801d1d0:	e9d7 2300 	ldrd	r2, r3, [r7]
 801d1d4:	f7e3 fa20 	bl	8000618 <__aeabi_dmul>
 801d1d8:	3501      	adds	r5, #1
 801d1da:	2301      	movs	r3, #1
 801d1dc:	1076      	asrs	r6, r6, #1
 801d1de:	3708      	adds	r7, #8
 801d1e0:	e777      	b.n	801d0d2 <_dtoa_r+0x3ca>
 801d1e2:	2502      	movs	r5, #2
 801d1e4:	e779      	b.n	801d0da <_dtoa_r+0x3d2>
 801d1e6:	9f00      	ldr	r7, [sp, #0]
 801d1e8:	9e03      	ldr	r6, [sp, #12]
 801d1ea:	e794      	b.n	801d116 <_dtoa_r+0x40e>
 801d1ec:	9901      	ldr	r1, [sp, #4]
 801d1ee:	4b4c      	ldr	r3, [pc, #304]	; (801d320 <_dtoa_r+0x618>)
 801d1f0:	4431      	add	r1, r6
 801d1f2:	910d      	str	r1, [sp, #52]	; 0x34
 801d1f4:	9908      	ldr	r1, [sp, #32]
 801d1f6:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 801d1fa:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801d1fe:	2900      	cmp	r1, #0
 801d200:	d043      	beq.n	801d28a <_dtoa_r+0x582>
 801d202:	494d      	ldr	r1, [pc, #308]	; (801d338 <_dtoa_r+0x630>)
 801d204:	2000      	movs	r0, #0
 801d206:	f7e3 fb31 	bl	800086c <__aeabi_ddiv>
 801d20a:	4652      	mov	r2, sl
 801d20c:	465b      	mov	r3, fp
 801d20e:	f7e3 f84b 	bl	80002a8 <__aeabi_dsub>
 801d212:	9d01      	ldr	r5, [sp, #4]
 801d214:	4682      	mov	sl, r0
 801d216:	468b      	mov	fp, r1
 801d218:	4649      	mov	r1, r9
 801d21a:	4640      	mov	r0, r8
 801d21c:	f7e3 fcac 	bl	8000b78 <__aeabi_d2iz>
 801d220:	4606      	mov	r6, r0
 801d222:	f7e3 f98f 	bl	8000544 <__aeabi_i2d>
 801d226:	4602      	mov	r2, r0
 801d228:	460b      	mov	r3, r1
 801d22a:	4640      	mov	r0, r8
 801d22c:	4649      	mov	r1, r9
 801d22e:	f7e3 f83b 	bl	80002a8 <__aeabi_dsub>
 801d232:	3630      	adds	r6, #48	; 0x30
 801d234:	f805 6b01 	strb.w	r6, [r5], #1
 801d238:	4652      	mov	r2, sl
 801d23a:	465b      	mov	r3, fp
 801d23c:	4680      	mov	r8, r0
 801d23e:	4689      	mov	r9, r1
 801d240:	f7e3 fc5c 	bl	8000afc <__aeabi_dcmplt>
 801d244:	2800      	cmp	r0, #0
 801d246:	d163      	bne.n	801d310 <_dtoa_r+0x608>
 801d248:	4642      	mov	r2, r8
 801d24a:	464b      	mov	r3, r9
 801d24c:	4936      	ldr	r1, [pc, #216]	; (801d328 <_dtoa_r+0x620>)
 801d24e:	2000      	movs	r0, #0
 801d250:	f7e3 f82a 	bl	80002a8 <__aeabi_dsub>
 801d254:	4652      	mov	r2, sl
 801d256:	465b      	mov	r3, fp
 801d258:	f7e3 fc50 	bl	8000afc <__aeabi_dcmplt>
 801d25c:	2800      	cmp	r0, #0
 801d25e:	f040 80b5 	bne.w	801d3cc <_dtoa_r+0x6c4>
 801d262:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d264:	429d      	cmp	r5, r3
 801d266:	d081      	beq.n	801d16c <_dtoa_r+0x464>
 801d268:	4b30      	ldr	r3, [pc, #192]	; (801d32c <_dtoa_r+0x624>)
 801d26a:	2200      	movs	r2, #0
 801d26c:	4650      	mov	r0, sl
 801d26e:	4659      	mov	r1, fp
 801d270:	f7e3 f9d2 	bl	8000618 <__aeabi_dmul>
 801d274:	4b2d      	ldr	r3, [pc, #180]	; (801d32c <_dtoa_r+0x624>)
 801d276:	4682      	mov	sl, r0
 801d278:	468b      	mov	fp, r1
 801d27a:	4640      	mov	r0, r8
 801d27c:	4649      	mov	r1, r9
 801d27e:	2200      	movs	r2, #0
 801d280:	f7e3 f9ca 	bl	8000618 <__aeabi_dmul>
 801d284:	4680      	mov	r8, r0
 801d286:	4689      	mov	r9, r1
 801d288:	e7c6      	b.n	801d218 <_dtoa_r+0x510>
 801d28a:	4650      	mov	r0, sl
 801d28c:	4659      	mov	r1, fp
 801d28e:	f7e3 f9c3 	bl	8000618 <__aeabi_dmul>
 801d292:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d294:	9d01      	ldr	r5, [sp, #4]
 801d296:	930f      	str	r3, [sp, #60]	; 0x3c
 801d298:	4682      	mov	sl, r0
 801d29a:	468b      	mov	fp, r1
 801d29c:	4649      	mov	r1, r9
 801d29e:	4640      	mov	r0, r8
 801d2a0:	f7e3 fc6a 	bl	8000b78 <__aeabi_d2iz>
 801d2a4:	4606      	mov	r6, r0
 801d2a6:	f7e3 f94d 	bl	8000544 <__aeabi_i2d>
 801d2aa:	3630      	adds	r6, #48	; 0x30
 801d2ac:	4602      	mov	r2, r0
 801d2ae:	460b      	mov	r3, r1
 801d2b0:	4640      	mov	r0, r8
 801d2b2:	4649      	mov	r1, r9
 801d2b4:	f7e2 fff8 	bl	80002a8 <__aeabi_dsub>
 801d2b8:	f805 6b01 	strb.w	r6, [r5], #1
 801d2bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2be:	429d      	cmp	r5, r3
 801d2c0:	4680      	mov	r8, r0
 801d2c2:	4689      	mov	r9, r1
 801d2c4:	f04f 0200 	mov.w	r2, #0
 801d2c8:	d124      	bne.n	801d314 <_dtoa_r+0x60c>
 801d2ca:	4b1b      	ldr	r3, [pc, #108]	; (801d338 <_dtoa_r+0x630>)
 801d2cc:	4650      	mov	r0, sl
 801d2ce:	4659      	mov	r1, fp
 801d2d0:	f7e2 ffec 	bl	80002ac <__adddf3>
 801d2d4:	4602      	mov	r2, r0
 801d2d6:	460b      	mov	r3, r1
 801d2d8:	4640      	mov	r0, r8
 801d2da:	4649      	mov	r1, r9
 801d2dc:	f7e3 fc2c 	bl	8000b38 <__aeabi_dcmpgt>
 801d2e0:	2800      	cmp	r0, #0
 801d2e2:	d173      	bne.n	801d3cc <_dtoa_r+0x6c4>
 801d2e4:	4652      	mov	r2, sl
 801d2e6:	465b      	mov	r3, fp
 801d2e8:	4913      	ldr	r1, [pc, #76]	; (801d338 <_dtoa_r+0x630>)
 801d2ea:	2000      	movs	r0, #0
 801d2ec:	f7e2 ffdc 	bl	80002a8 <__aeabi_dsub>
 801d2f0:	4602      	mov	r2, r0
 801d2f2:	460b      	mov	r3, r1
 801d2f4:	4640      	mov	r0, r8
 801d2f6:	4649      	mov	r1, r9
 801d2f8:	f7e3 fc00 	bl	8000afc <__aeabi_dcmplt>
 801d2fc:	2800      	cmp	r0, #0
 801d2fe:	f43f af35 	beq.w	801d16c <_dtoa_r+0x464>
 801d302:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d304:	1e6b      	subs	r3, r5, #1
 801d306:	930f      	str	r3, [sp, #60]	; 0x3c
 801d308:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 801d30c:	2b30      	cmp	r3, #48	; 0x30
 801d30e:	d0f8      	beq.n	801d302 <_dtoa_r+0x5fa>
 801d310:	9700      	str	r7, [sp, #0]
 801d312:	e049      	b.n	801d3a8 <_dtoa_r+0x6a0>
 801d314:	4b05      	ldr	r3, [pc, #20]	; (801d32c <_dtoa_r+0x624>)
 801d316:	f7e3 f97f 	bl	8000618 <__aeabi_dmul>
 801d31a:	4680      	mov	r8, r0
 801d31c:	4689      	mov	r9, r1
 801d31e:	e7bd      	b.n	801d29c <_dtoa_r+0x594>
 801d320:	08021b58 	.word	0x08021b58
 801d324:	08021b30 	.word	0x08021b30
 801d328:	3ff00000 	.word	0x3ff00000
 801d32c:	40240000 	.word	0x40240000
 801d330:	401c0000 	.word	0x401c0000
 801d334:	40140000 	.word	0x40140000
 801d338:	3fe00000 	.word	0x3fe00000
 801d33c:	9d01      	ldr	r5, [sp, #4]
 801d33e:	4656      	mov	r6, sl
 801d340:	465f      	mov	r7, fp
 801d342:	4642      	mov	r2, r8
 801d344:	464b      	mov	r3, r9
 801d346:	4630      	mov	r0, r6
 801d348:	4639      	mov	r1, r7
 801d34a:	f7e3 fa8f 	bl	800086c <__aeabi_ddiv>
 801d34e:	f7e3 fc13 	bl	8000b78 <__aeabi_d2iz>
 801d352:	4682      	mov	sl, r0
 801d354:	f7e3 f8f6 	bl	8000544 <__aeabi_i2d>
 801d358:	4642      	mov	r2, r8
 801d35a:	464b      	mov	r3, r9
 801d35c:	f7e3 f95c 	bl	8000618 <__aeabi_dmul>
 801d360:	4602      	mov	r2, r0
 801d362:	460b      	mov	r3, r1
 801d364:	4630      	mov	r0, r6
 801d366:	4639      	mov	r1, r7
 801d368:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 801d36c:	f7e2 ff9c 	bl	80002a8 <__aeabi_dsub>
 801d370:	f805 6b01 	strb.w	r6, [r5], #1
 801d374:	9e01      	ldr	r6, [sp, #4]
 801d376:	9f03      	ldr	r7, [sp, #12]
 801d378:	1bae      	subs	r6, r5, r6
 801d37a:	42b7      	cmp	r7, r6
 801d37c:	4602      	mov	r2, r0
 801d37e:	460b      	mov	r3, r1
 801d380:	d135      	bne.n	801d3ee <_dtoa_r+0x6e6>
 801d382:	f7e2 ff93 	bl	80002ac <__adddf3>
 801d386:	4642      	mov	r2, r8
 801d388:	464b      	mov	r3, r9
 801d38a:	4606      	mov	r6, r0
 801d38c:	460f      	mov	r7, r1
 801d38e:	f7e3 fbd3 	bl	8000b38 <__aeabi_dcmpgt>
 801d392:	b9d0      	cbnz	r0, 801d3ca <_dtoa_r+0x6c2>
 801d394:	4642      	mov	r2, r8
 801d396:	464b      	mov	r3, r9
 801d398:	4630      	mov	r0, r6
 801d39a:	4639      	mov	r1, r7
 801d39c:	f7e3 fba4 	bl	8000ae8 <__aeabi_dcmpeq>
 801d3a0:	b110      	cbz	r0, 801d3a8 <_dtoa_r+0x6a0>
 801d3a2:	f01a 0f01 	tst.w	sl, #1
 801d3a6:	d110      	bne.n	801d3ca <_dtoa_r+0x6c2>
 801d3a8:	4620      	mov	r0, r4
 801d3aa:	ee18 1a10 	vmov	r1, s16
 801d3ae:	f000 fd0b 	bl	801ddc8 <_Bfree>
 801d3b2:	2300      	movs	r3, #0
 801d3b4:	9800      	ldr	r0, [sp, #0]
 801d3b6:	702b      	strb	r3, [r5, #0]
 801d3b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d3ba:	3001      	adds	r0, #1
 801d3bc:	6018      	str	r0, [r3, #0]
 801d3be:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d3c0:	2b00      	cmp	r3, #0
 801d3c2:	f43f acf1 	beq.w	801cda8 <_dtoa_r+0xa0>
 801d3c6:	601d      	str	r5, [r3, #0]
 801d3c8:	e4ee      	b.n	801cda8 <_dtoa_r+0xa0>
 801d3ca:	9f00      	ldr	r7, [sp, #0]
 801d3cc:	462b      	mov	r3, r5
 801d3ce:	461d      	mov	r5, r3
 801d3d0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801d3d4:	2a39      	cmp	r2, #57	; 0x39
 801d3d6:	d106      	bne.n	801d3e6 <_dtoa_r+0x6de>
 801d3d8:	9a01      	ldr	r2, [sp, #4]
 801d3da:	429a      	cmp	r2, r3
 801d3dc:	d1f7      	bne.n	801d3ce <_dtoa_r+0x6c6>
 801d3de:	9901      	ldr	r1, [sp, #4]
 801d3e0:	2230      	movs	r2, #48	; 0x30
 801d3e2:	3701      	adds	r7, #1
 801d3e4:	700a      	strb	r2, [r1, #0]
 801d3e6:	781a      	ldrb	r2, [r3, #0]
 801d3e8:	3201      	adds	r2, #1
 801d3ea:	701a      	strb	r2, [r3, #0]
 801d3ec:	e790      	b.n	801d310 <_dtoa_r+0x608>
 801d3ee:	4ba6      	ldr	r3, [pc, #664]	; (801d688 <_dtoa_r+0x980>)
 801d3f0:	2200      	movs	r2, #0
 801d3f2:	f7e3 f911 	bl	8000618 <__aeabi_dmul>
 801d3f6:	2200      	movs	r2, #0
 801d3f8:	2300      	movs	r3, #0
 801d3fa:	4606      	mov	r6, r0
 801d3fc:	460f      	mov	r7, r1
 801d3fe:	f7e3 fb73 	bl	8000ae8 <__aeabi_dcmpeq>
 801d402:	2800      	cmp	r0, #0
 801d404:	d09d      	beq.n	801d342 <_dtoa_r+0x63a>
 801d406:	e7cf      	b.n	801d3a8 <_dtoa_r+0x6a0>
 801d408:	9a08      	ldr	r2, [sp, #32]
 801d40a:	2a00      	cmp	r2, #0
 801d40c:	f000 80d7 	beq.w	801d5be <_dtoa_r+0x8b6>
 801d410:	9a06      	ldr	r2, [sp, #24]
 801d412:	2a01      	cmp	r2, #1
 801d414:	f300 80ba 	bgt.w	801d58c <_dtoa_r+0x884>
 801d418:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d41a:	2a00      	cmp	r2, #0
 801d41c:	f000 80b2 	beq.w	801d584 <_dtoa_r+0x87c>
 801d420:	f203 4333 	addw	r3, r3, #1075	; 0x433
 801d424:	9e07      	ldr	r6, [sp, #28]
 801d426:	9d04      	ldr	r5, [sp, #16]
 801d428:	9a04      	ldr	r2, [sp, #16]
 801d42a:	441a      	add	r2, r3
 801d42c:	9204      	str	r2, [sp, #16]
 801d42e:	9a05      	ldr	r2, [sp, #20]
 801d430:	2101      	movs	r1, #1
 801d432:	441a      	add	r2, r3
 801d434:	4620      	mov	r0, r4
 801d436:	9205      	str	r2, [sp, #20]
 801d438:	f000 fd7e 	bl	801df38 <__i2b>
 801d43c:	4607      	mov	r7, r0
 801d43e:	2d00      	cmp	r5, #0
 801d440:	dd0c      	ble.n	801d45c <_dtoa_r+0x754>
 801d442:	9b05      	ldr	r3, [sp, #20]
 801d444:	2b00      	cmp	r3, #0
 801d446:	dd09      	ble.n	801d45c <_dtoa_r+0x754>
 801d448:	42ab      	cmp	r3, r5
 801d44a:	9a04      	ldr	r2, [sp, #16]
 801d44c:	bfa8      	it	ge
 801d44e:	462b      	movge	r3, r5
 801d450:	1ad2      	subs	r2, r2, r3
 801d452:	9204      	str	r2, [sp, #16]
 801d454:	9a05      	ldr	r2, [sp, #20]
 801d456:	1aed      	subs	r5, r5, r3
 801d458:	1ad3      	subs	r3, r2, r3
 801d45a:	9305      	str	r3, [sp, #20]
 801d45c:	9b07      	ldr	r3, [sp, #28]
 801d45e:	b31b      	cbz	r3, 801d4a8 <_dtoa_r+0x7a0>
 801d460:	9b08      	ldr	r3, [sp, #32]
 801d462:	2b00      	cmp	r3, #0
 801d464:	f000 80af 	beq.w	801d5c6 <_dtoa_r+0x8be>
 801d468:	2e00      	cmp	r6, #0
 801d46a:	dd13      	ble.n	801d494 <_dtoa_r+0x78c>
 801d46c:	4639      	mov	r1, r7
 801d46e:	4632      	mov	r2, r6
 801d470:	4620      	mov	r0, r4
 801d472:	f000 fe21 	bl	801e0b8 <__pow5mult>
 801d476:	ee18 2a10 	vmov	r2, s16
 801d47a:	4601      	mov	r1, r0
 801d47c:	4607      	mov	r7, r0
 801d47e:	4620      	mov	r0, r4
 801d480:	f000 fd70 	bl	801df64 <__multiply>
 801d484:	ee18 1a10 	vmov	r1, s16
 801d488:	4680      	mov	r8, r0
 801d48a:	4620      	mov	r0, r4
 801d48c:	f000 fc9c 	bl	801ddc8 <_Bfree>
 801d490:	ee08 8a10 	vmov	s16, r8
 801d494:	9b07      	ldr	r3, [sp, #28]
 801d496:	1b9a      	subs	r2, r3, r6
 801d498:	d006      	beq.n	801d4a8 <_dtoa_r+0x7a0>
 801d49a:	ee18 1a10 	vmov	r1, s16
 801d49e:	4620      	mov	r0, r4
 801d4a0:	f000 fe0a 	bl	801e0b8 <__pow5mult>
 801d4a4:	ee08 0a10 	vmov	s16, r0
 801d4a8:	2101      	movs	r1, #1
 801d4aa:	4620      	mov	r0, r4
 801d4ac:	f000 fd44 	bl	801df38 <__i2b>
 801d4b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d4b2:	2b00      	cmp	r3, #0
 801d4b4:	4606      	mov	r6, r0
 801d4b6:	f340 8088 	ble.w	801d5ca <_dtoa_r+0x8c2>
 801d4ba:	461a      	mov	r2, r3
 801d4bc:	4601      	mov	r1, r0
 801d4be:	4620      	mov	r0, r4
 801d4c0:	f000 fdfa 	bl	801e0b8 <__pow5mult>
 801d4c4:	9b06      	ldr	r3, [sp, #24]
 801d4c6:	2b01      	cmp	r3, #1
 801d4c8:	4606      	mov	r6, r0
 801d4ca:	f340 8081 	ble.w	801d5d0 <_dtoa_r+0x8c8>
 801d4ce:	f04f 0800 	mov.w	r8, #0
 801d4d2:	6933      	ldr	r3, [r6, #16]
 801d4d4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 801d4d8:	6918      	ldr	r0, [r3, #16]
 801d4da:	f000 fcdd 	bl	801de98 <__hi0bits>
 801d4de:	f1c0 0020 	rsb	r0, r0, #32
 801d4e2:	9b05      	ldr	r3, [sp, #20]
 801d4e4:	4418      	add	r0, r3
 801d4e6:	f010 001f 	ands.w	r0, r0, #31
 801d4ea:	f000 8092 	beq.w	801d612 <_dtoa_r+0x90a>
 801d4ee:	f1c0 0320 	rsb	r3, r0, #32
 801d4f2:	2b04      	cmp	r3, #4
 801d4f4:	f340 808a 	ble.w	801d60c <_dtoa_r+0x904>
 801d4f8:	f1c0 001c 	rsb	r0, r0, #28
 801d4fc:	9b04      	ldr	r3, [sp, #16]
 801d4fe:	4403      	add	r3, r0
 801d500:	9304      	str	r3, [sp, #16]
 801d502:	9b05      	ldr	r3, [sp, #20]
 801d504:	4403      	add	r3, r0
 801d506:	4405      	add	r5, r0
 801d508:	9305      	str	r3, [sp, #20]
 801d50a:	9b04      	ldr	r3, [sp, #16]
 801d50c:	2b00      	cmp	r3, #0
 801d50e:	dd07      	ble.n	801d520 <_dtoa_r+0x818>
 801d510:	ee18 1a10 	vmov	r1, s16
 801d514:	461a      	mov	r2, r3
 801d516:	4620      	mov	r0, r4
 801d518:	f000 fe28 	bl	801e16c <__lshift>
 801d51c:	ee08 0a10 	vmov	s16, r0
 801d520:	9b05      	ldr	r3, [sp, #20]
 801d522:	2b00      	cmp	r3, #0
 801d524:	dd05      	ble.n	801d532 <_dtoa_r+0x82a>
 801d526:	4631      	mov	r1, r6
 801d528:	461a      	mov	r2, r3
 801d52a:	4620      	mov	r0, r4
 801d52c:	f000 fe1e 	bl	801e16c <__lshift>
 801d530:	4606      	mov	r6, r0
 801d532:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d534:	2b00      	cmp	r3, #0
 801d536:	d06e      	beq.n	801d616 <_dtoa_r+0x90e>
 801d538:	ee18 0a10 	vmov	r0, s16
 801d53c:	4631      	mov	r1, r6
 801d53e:	f000 fe85 	bl	801e24c <__mcmp>
 801d542:	2800      	cmp	r0, #0
 801d544:	da67      	bge.n	801d616 <_dtoa_r+0x90e>
 801d546:	9b00      	ldr	r3, [sp, #0]
 801d548:	3b01      	subs	r3, #1
 801d54a:	ee18 1a10 	vmov	r1, s16
 801d54e:	9300      	str	r3, [sp, #0]
 801d550:	220a      	movs	r2, #10
 801d552:	2300      	movs	r3, #0
 801d554:	4620      	mov	r0, r4
 801d556:	f000 fc59 	bl	801de0c <__multadd>
 801d55a:	9b08      	ldr	r3, [sp, #32]
 801d55c:	ee08 0a10 	vmov	s16, r0
 801d560:	2b00      	cmp	r3, #0
 801d562:	f000 81b1 	beq.w	801d8c8 <_dtoa_r+0xbc0>
 801d566:	2300      	movs	r3, #0
 801d568:	4639      	mov	r1, r7
 801d56a:	220a      	movs	r2, #10
 801d56c:	4620      	mov	r0, r4
 801d56e:	f000 fc4d 	bl	801de0c <__multadd>
 801d572:	9b02      	ldr	r3, [sp, #8]
 801d574:	2b00      	cmp	r3, #0
 801d576:	4607      	mov	r7, r0
 801d578:	f300 808e 	bgt.w	801d698 <_dtoa_r+0x990>
 801d57c:	9b06      	ldr	r3, [sp, #24]
 801d57e:	2b02      	cmp	r3, #2
 801d580:	dc51      	bgt.n	801d626 <_dtoa_r+0x91e>
 801d582:	e089      	b.n	801d698 <_dtoa_r+0x990>
 801d584:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d586:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 801d58a:	e74b      	b.n	801d424 <_dtoa_r+0x71c>
 801d58c:	9b03      	ldr	r3, [sp, #12]
 801d58e:	1e5e      	subs	r6, r3, #1
 801d590:	9b07      	ldr	r3, [sp, #28]
 801d592:	42b3      	cmp	r3, r6
 801d594:	bfbf      	itttt	lt
 801d596:	9b07      	ldrlt	r3, [sp, #28]
 801d598:	9607      	strlt	r6, [sp, #28]
 801d59a:	1af2      	sublt	r2, r6, r3
 801d59c:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 801d59e:	bfb6      	itet	lt
 801d5a0:	189b      	addlt	r3, r3, r2
 801d5a2:	1b9e      	subge	r6, r3, r6
 801d5a4:	930a      	strlt	r3, [sp, #40]	; 0x28
 801d5a6:	9b03      	ldr	r3, [sp, #12]
 801d5a8:	bfb8      	it	lt
 801d5aa:	2600      	movlt	r6, #0
 801d5ac:	2b00      	cmp	r3, #0
 801d5ae:	bfb7      	itett	lt
 801d5b0:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 801d5b4:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 801d5b8:	1a9d      	sublt	r5, r3, r2
 801d5ba:	2300      	movlt	r3, #0
 801d5bc:	e734      	b.n	801d428 <_dtoa_r+0x720>
 801d5be:	9e07      	ldr	r6, [sp, #28]
 801d5c0:	9d04      	ldr	r5, [sp, #16]
 801d5c2:	9f08      	ldr	r7, [sp, #32]
 801d5c4:	e73b      	b.n	801d43e <_dtoa_r+0x736>
 801d5c6:	9a07      	ldr	r2, [sp, #28]
 801d5c8:	e767      	b.n	801d49a <_dtoa_r+0x792>
 801d5ca:	9b06      	ldr	r3, [sp, #24]
 801d5cc:	2b01      	cmp	r3, #1
 801d5ce:	dc18      	bgt.n	801d602 <_dtoa_r+0x8fa>
 801d5d0:	f1ba 0f00 	cmp.w	sl, #0
 801d5d4:	d115      	bne.n	801d602 <_dtoa_r+0x8fa>
 801d5d6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 801d5da:	b993      	cbnz	r3, 801d602 <_dtoa_r+0x8fa>
 801d5dc:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 801d5e0:	0d1b      	lsrs	r3, r3, #20
 801d5e2:	051b      	lsls	r3, r3, #20
 801d5e4:	b183      	cbz	r3, 801d608 <_dtoa_r+0x900>
 801d5e6:	9b04      	ldr	r3, [sp, #16]
 801d5e8:	3301      	adds	r3, #1
 801d5ea:	9304      	str	r3, [sp, #16]
 801d5ec:	9b05      	ldr	r3, [sp, #20]
 801d5ee:	3301      	adds	r3, #1
 801d5f0:	9305      	str	r3, [sp, #20]
 801d5f2:	f04f 0801 	mov.w	r8, #1
 801d5f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d5f8:	2b00      	cmp	r3, #0
 801d5fa:	f47f af6a 	bne.w	801d4d2 <_dtoa_r+0x7ca>
 801d5fe:	2001      	movs	r0, #1
 801d600:	e76f      	b.n	801d4e2 <_dtoa_r+0x7da>
 801d602:	f04f 0800 	mov.w	r8, #0
 801d606:	e7f6      	b.n	801d5f6 <_dtoa_r+0x8ee>
 801d608:	4698      	mov	r8, r3
 801d60a:	e7f4      	b.n	801d5f6 <_dtoa_r+0x8ee>
 801d60c:	f43f af7d 	beq.w	801d50a <_dtoa_r+0x802>
 801d610:	4618      	mov	r0, r3
 801d612:	301c      	adds	r0, #28
 801d614:	e772      	b.n	801d4fc <_dtoa_r+0x7f4>
 801d616:	9b03      	ldr	r3, [sp, #12]
 801d618:	2b00      	cmp	r3, #0
 801d61a:	dc37      	bgt.n	801d68c <_dtoa_r+0x984>
 801d61c:	9b06      	ldr	r3, [sp, #24]
 801d61e:	2b02      	cmp	r3, #2
 801d620:	dd34      	ble.n	801d68c <_dtoa_r+0x984>
 801d622:	9b03      	ldr	r3, [sp, #12]
 801d624:	9302      	str	r3, [sp, #8]
 801d626:	9b02      	ldr	r3, [sp, #8]
 801d628:	b96b      	cbnz	r3, 801d646 <_dtoa_r+0x93e>
 801d62a:	4631      	mov	r1, r6
 801d62c:	2205      	movs	r2, #5
 801d62e:	4620      	mov	r0, r4
 801d630:	f000 fbec 	bl	801de0c <__multadd>
 801d634:	4601      	mov	r1, r0
 801d636:	4606      	mov	r6, r0
 801d638:	ee18 0a10 	vmov	r0, s16
 801d63c:	f000 fe06 	bl	801e24c <__mcmp>
 801d640:	2800      	cmp	r0, #0
 801d642:	f73f adbb 	bgt.w	801d1bc <_dtoa_r+0x4b4>
 801d646:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d648:	9d01      	ldr	r5, [sp, #4]
 801d64a:	43db      	mvns	r3, r3
 801d64c:	9300      	str	r3, [sp, #0]
 801d64e:	f04f 0800 	mov.w	r8, #0
 801d652:	4631      	mov	r1, r6
 801d654:	4620      	mov	r0, r4
 801d656:	f000 fbb7 	bl	801ddc8 <_Bfree>
 801d65a:	2f00      	cmp	r7, #0
 801d65c:	f43f aea4 	beq.w	801d3a8 <_dtoa_r+0x6a0>
 801d660:	f1b8 0f00 	cmp.w	r8, #0
 801d664:	d005      	beq.n	801d672 <_dtoa_r+0x96a>
 801d666:	45b8      	cmp	r8, r7
 801d668:	d003      	beq.n	801d672 <_dtoa_r+0x96a>
 801d66a:	4641      	mov	r1, r8
 801d66c:	4620      	mov	r0, r4
 801d66e:	f000 fbab 	bl	801ddc8 <_Bfree>
 801d672:	4639      	mov	r1, r7
 801d674:	4620      	mov	r0, r4
 801d676:	f000 fba7 	bl	801ddc8 <_Bfree>
 801d67a:	e695      	b.n	801d3a8 <_dtoa_r+0x6a0>
 801d67c:	2600      	movs	r6, #0
 801d67e:	4637      	mov	r7, r6
 801d680:	e7e1      	b.n	801d646 <_dtoa_r+0x93e>
 801d682:	9700      	str	r7, [sp, #0]
 801d684:	4637      	mov	r7, r6
 801d686:	e599      	b.n	801d1bc <_dtoa_r+0x4b4>
 801d688:	40240000 	.word	0x40240000
 801d68c:	9b08      	ldr	r3, [sp, #32]
 801d68e:	2b00      	cmp	r3, #0
 801d690:	f000 80ca 	beq.w	801d828 <_dtoa_r+0xb20>
 801d694:	9b03      	ldr	r3, [sp, #12]
 801d696:	9302      	str	r3, [sp, #8]
 801d698:	2d00      	cmp	r5, #0
 801d69a:	dd05      	ble.n	801d6a8 <_dtoa_r+0x9a0>
 801d69c:	4639      	mov	r1, r7
 801d69e:	462a      	mov	r2, r5
 801d6a0:	4620      	mov	r0, r4
 801d6a2:	f000 fd63 	bl	801e16c <__lshift>
 801d6a6:	4607      	mov	r7, r0
 801d6a8:	f1b8 0f00 	cmp.w	r8, #0
 801d6ac:	d05b      	beq.n	801d766 <_dtoa_r+0xa5e>
 801d6ae:	6879      	ldr	r1, [r7, #4]
 801d6b0:	4620      	mov	r0, r4
 801d6b2:	f000 fb49 	bl	801dd48 <_Balloc>
 801d6b6:	4605      	mov	r5, r0
 801d6b8:	b928      	cbnz	r0, 801d6c6 <_dtoa_r+0x9be>
 801d6ba:	4b87      	ldr	r3, [pc, #540]	; (801d8d8 <_dtoa_r+0xbd0>)
 801d6bc:	4602      	mov	r2, r0
 801d6be:	f240 21ea 	movw	r1, #746	; 0x2ea
 801d6c2:	f7ff bb3b 	b.w	801cd3c <_dtoa_r+0x34>
 801d6c6:	693a      	ldr	r2, [r7, #16]
 801d6c8:	3202      	adds	r2, #2
 801d6ca:	0092      	lsls	r2, r2, #2
 801d6cc:	f107 010c 	add.w	r1, r7, #12
 801d6d0:	300c      	adds	r0, #12
 801d6d2:	f7fe f9b9 	bl	801ba48 <memcpy>
 801d6d6:	2201      	movs	r2, #1
 801d6d8:	4629      	mov	r1, r5
 801d6da:	4620      	mov	r0, r4
 801d6dc:	f000 fd46 	bl	801e16c <__lshift>
 801d6e0:	9b01      	ldr	r3, [sp, #4]
 801d6e2:	f103 0901 	add.w	r9, r3, #1
 801d6e6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801d6ea:	4413      	add	r3, r2
 801d6ec:	9305      	str	r3, [sp, #20]
 801d6ee:	f00a 0301 	and.w	r3, sl, #1
 801d6f2:	46b8      	mov	r8, r7
 801d6f4:	9304      	str	r3, [sp, #16]
 801d6f6:	4607      	mov	r7, r0
 801d6f8:	4631      	mov	r1, r6
 801d6fa:	ee18 0a10 	vmov	r0, s16
 801d6fe:	f7ff fa77 	bl	801cbf0 <quorem>
 801d702:	4641      	mov	r1, r8
 801d704:	9002      	str	r0, [sp, #8]
 801d706:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 801d70a:	ee18 0a10 	vmov	r0, s16
 801d70e:	f000 fd9d 	bl	801e24c <__mcmp>
 801d712:	463a      	mov	r2, r7
 801d714:	9003      	str	r0, [sp, #12]
 801d716:	4631      	mov	r1, r6
 801d718:	4620      	mov	r0, r4
 801d71a:	f000 fdb3 	bl	801e284 <__mdiff>
 801d71e:	68c2      	ldr	r2, [r0, #12]
 801d720:	f109 3bff 	add.w	fp, r9, #4294967295
 801d724:	4605      	mov	r5, r0
 801d726:	bb02      	cbnz	r2, 801d76a <_dtoa_r+0xa62>
 801d728:	4601      	mov	r1, r0
 801d72a:	ee18 0a10 	vmov	r0, s16
 801d72e:	f000 fd8d 	bl	801e24c <__mcmp>
 801d732:	4602      	mov	r2, r0
 801d734:	4629      	mov	r1, r5
 801d736:	4620      	mov	r0, r4
 801d738:	9207      	str	r2, [sp, #28]
 801d73a:	f000 fb45 	bl	801ddc8 <_Bfree>
 801d73e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801d742:	ea43 0102 	orr.w	r1, r3, r2
 801d746:	9b04      	ldr	r3, [sp, #16]
 801d748:	430b      	orrs	r3, r1
 801d74a:	464d      	mov	r5, r9
 801d74c:	d10f      	bne.n	801d76e <_dtoa_r+0xa66>
 801d74e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801d752:	d02a      	beq.n	801d7aa <_dtoa_r+0xaa2>
 801d754:	9b03      	ldr	r3, [sp, #12]
 801d756:	2b00      	cmp	r3, #0
 801d758:	dd02      	ble.n	801d760 <_dtoa_r+0xa58>
 801d75a:	9b02      	ldr	r3, [sp, #8]
 801d75c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 801d760:	f88b a000 	strb.w	sl, [fp]
 801d764:	e775      	b.n	801d652 <_dtoa_r+0x94a>
 801d766:	4638      	mov	r0, r7
 801d768:	e7ba      	b.n	801d6e0 <_dtoa_r+0x9d8>
 801d76a:	2201      	movs	r2, #1
 801d76c:	e7e2      	b.n	801d734 <_dtoa_r+0xa2c>
 801d76e:	9b03      	ldr	r3, [sp, #12]
 801d770:	2b00      	cmp	r3, #0
 801d772:	db04      	blt.n	801d77e <_dtoa_r+0xa76>
 801d774:	9906      	ldr	r1, [sp, #24]
 801d776:	430b      	orrs	r3, r1
 801d778:	9904      	ldr	r1, [sp, #16]
 801d77a:	430b      	orrs	r3, r1
 801d77c:	d122      	bne.n	801d7c4 <_dtoa_r+0xabc>
 801d77e:	2a00      	cmp	r2, #0
 801d780:	ddee      	ble.n	801d760 <_dtoa_r+0xa58>
 801d782:	ee18 1a10 	vmov	r1, s16
 801d786:	2201      	movs	r2, #1
 801d788:	4620      	mov	r0, r4
 801d78a:	f000 fcef 	bl	801e16c <__lshift>
 801d78e:	4631      	mov	r1, r6
 801d790:	ee08 0a10 	vmov	s16, r0
 801d794:	f000 fd5a 	bl	801e24c <__mcmp>
 801d798:	2800      	cmp	r0, #0
 801d79a:	dc03      	bgt.n	801d7a4 <_dtoa_r+0xa9c>
 801d79c:	d1e0      	bne.n	801d760 <_dtoa_r+0xa58>
 801d79e:	f01a 0f01 	tst.w	sl, #1
 801d7a2:	d0dd      	beq.n	801d760 <_dtoa_r+0xa58>
 801d7a4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801d7a8:	d1d7      	bne.n	801d75a <_dtoa_r+0xa52>
 801d7aa:	2339      	movs	r3, #57	; 0x39
 801d7ac:	f88b 3000 	strb.w	r3, [fp]
 801d7b0:	462b      	mov	r3, r5
 801d7b2:	461d      	mov	r5, r3
 801d7b4:	3b01      	subs	r3, #1
 801d7b6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 801d7ba:	2a39      	cmp	r2, #57	; 0x39
 801d7bc:	d071      	beq.n	801d8a2 <_dtoa_r+0xb9a>
 801d7be:	3201      	adds	r2, #1
 801d7c0:	701a      	strb	r2, [r3, #0]
 801d7c2:	e746      	b.n	801d652 <_dtoa_r+0x94a>
 801d7c4:	2a00      	cmp	r2, #0
 801d7c6:	dd07      	ble.n	801d7d8 <_dtoa_r+0xad0>
 801d7c8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801d7cc:	d0ed      	beq.n	801d7aa <_dtoa_r+0xaa2>
 801d7ce:	f10a 0301 	add.w	r3, sl, #1
 801d7d2:	f88b 3000 	strb.w	r3, [fp]
 801d7d6:	e73c      	b.n	801d652 <_dtoa_r+0x94a>
 801d7d8:	9b05      	ldr	r3, [sp, #20]
 801d7da:	f809 ac01 	strb.w	sl, [r9, #-1]
 801d7de:	4599      	cmp	r9, r3
 801d7e0:	d047      	beq.n	801d872 <_dtoa_r+0xb6a>
 801d7e2:	ee18 1a10 	vmov	r1, s16
 801d7e6:	2300      	movs	r3, #0
 801d7e8:	220a      	movs	r2, #10
 801d7ea:	4620      	mov	r0, r4
 801d7ec:	f000 fb0e 	bl	801de0c <__multadd>
 801d7f0:	45b8      	cmp	r8, r7
 801d7f2:	ee08 0a10 	vmov	s16, r0
 801d7f6:	f04f 0300 	mov.w	r3, #0
 801d7fa:	f04f 020a 	mov.w	r2, #10
 801d7fe:	4641      	mov	r1, r8
 801d800:	4620      	mov	r0, r4
 801d802:	d106      	bne.n	801d812 <_dtoa_r+0xb0a>
 801d804:	f000 fb02 	bl	801de0c <__multadd>
 801d808:	4680      	mov	r8, r0
 801d80a:	4607      	mov	r7, r0
 801d80c:	f109 0901 	add.w	r9, r9, #1
 801d810:	e772      	b.n	801d6f8 <_dtoa_r+0x9f0>
 801d812:	f000 fafb 	bl	801de0c <__multadd>
 801d816:	4639      	mov	r1, r7
 801d818:	4680      	mov	r8, r0
 801d81a:	2300      	movs	r3, #0
 801d81c:	220a      	movs	r2, #10
 801d81e:	4620      	mov	r0, r4
 801d820:	f000 faf4 	bl	801de0c <__multadd>
 801d824:	4607      	mov	r7, r0
 801d826:	e7f1      	b.n	801d80c <_dtoa_r+0xb04>
 801d828:	9b03      	ldr	r3, [sp, #12]
 801d82a:	9302      	str	r3, [sp, #8]
 801d82c:	9d01      	ldr	r5, [sp, #4]
 801d82e:	ee18 0a10 	vmov	r0, s16
 801d832:	4631      	mov	r1, r6
 801d834:	f7ff f9dc 	bl	801cbf0 <quorem>
 801d838:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 801d83c:	9b01      	ldr	r3, [sp, #4]
 801d83e:	f805 ab01 	strb.w	sl, [r5], #1
 801d842:	1aea      	subs	r2, r5, r3
 801d844:	9b02      	ldr	r3, [sp, #8]
 801d846:	4293      	cmp	r3, r2
 801d848:	dd09      	ble.n	801d85e <_dtoa_r+0xb56>
 801d84a:	ee18 1a10 	vmov	r1, s16
 801d84e:	2300      	movs	r3, #0
 801d850:	220a      	movs	r2, #10
 801d852:	4620      	mov	r0, r4
 801d854:	f000 fada 	bl	801de0c <__multadd>
 801d858:	ee08 0a10 	vmov	s16, r0
 801d85c:	e7e7      	b.n	801d82e <_dtoa_r+0xb26>
 801d85e:	9b02      	ldr	r3, [sp, #8]
 801d860:	2b00      	cmp	r3, #0
 801d862:	bfc8      	it	gt
 801d864:	461d      	movgt	r5, r3
 801d866:	9b01      	ldr	r3, [sp, #4]
 801d868:	bfd8      	it	le
 801d86a:	2501      	movle	r5, #1
 801d86c:	441d      	add	r5, r3
 801d86e:	f04f 0800 	mov.w	r8, #0
 801d872:	ee18 1a10 	vmov	r1, s16
 801d876:	2201      	movs	r2, #1
 801d878:	4620      	mov	r0, r4
 801d87a:	f000 fc77 	bl	801e16c <__lshift>
 801d87e:	4631      	mov	r1, r6
 801d880:	ee08 0a10 	vmov	s16, r0
 801d884:	f000 fce2 	bl	801e24c <__mcmp>
 801d888:	2800      	cmp	r0, #0
 801d88a:	dc91      	bgt.n	801d7b0 <_dtoa_r+0xaa8>
 801d88c:	d102      	bne.n	801d894 <_dtoa_r+0xb8c>
 801d88e:	f01a 0f01 	tst.w	sl, #1
 801d892:	d18d      	bne.n	801d7b0 <_dtoa_r+0xaa8>
 801d894:	462b      	mov	r3, r5
 801d896:	461d      	mov	r5, r3
 801d898:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801d89c:	2a30      	cmp	r2, #48	; 0x30
 801d89e:	d0fa      	beq.n	801d896 <_dtoa_r+0xb8e>
 801d8a0:	e6d7      	b.n	801d652 <_dtoa_r+0x94a>
 801d8a2:	9a01      	ldr	r2, [sp, #4]
 801d8a4:	429a      	cmp	r2, r3
 801d8a6:	d184      	bne.n	801d7b2 <_dtoa_r+0xaaa>
 801d8a8:	9b00      	ldr	r3, [sp, #0]
 801d8aa:	3301      	adds	r3, #1
 801d8ac:	9300      	str	r3, [sp, #0]
 801d8ae:	2331      	movs	r3, #49	; 0x31
 801d8b0:	7013      	strb	r3, [r2, #0]
 801d8b2:	e6ce      	b.n	801d652 <_dtoa_r+0x94a>
 801d8b4:	4b09      	ldr	r3, [pc, #36]	; (801d8dc <_dtoa_r+0xbd4>)
 801d8b6:	f7ff ba95 	b.w	801cde4 <_dtoa_r+0xdc>
 801d8ba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d8bc:	2b00      	cmp	r3, #0
 801d8be:	f47f aa6e 	bne.w	801cd9e <_dtoa_r+0x96>
 801d8c2:	4b07      	ldr	r3, [pc, #28]	; (801d8e0 <_dtoa_r+0xbd8>)
 801d8c4:	f7ff ba8e 	b.w	801cde4 <_dtoa_r+0xdc>
 801d8c8:	9b02      	ldr	r3, [sp, #8]
 801d8ca:	2b00      	cmp	r3, #0
 801d8cc:	dcae      	bgt.n	801d82c <_dtoa_r+0xb24>
 801d8ce:	9b06      	ldr	r3, [sp, #24]
 801d8d0:	2b02      	cmp	r3, #2
 801d8d2:	f73f aea8 	bgt.w	801d626 <_dtoa_r+0x91e>
 801d8d6:	e7a9      	b.n	801d82c <_dtoa_r+0xb24>
 801d8d8:	08021a5c 	.word	0x08021a5c
 801d8dc:	08020453 	.word	0x08020453
 801d8e0:	080219dd 	.word	0x080219dd

0801d8e4 <__sflush_r>:
 801d8e4:	898a      	ldrh	r2, [r1, #12]
 801d8e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d8ea:	4605      	mov	r5, r0
 801d8ec:	0710      	lsls	r0, r2, #28
 801d8ee:	460c      	mov	r4, r1
 801d8f0:	d458      	bmi.n	801d9a4 <__sflush_r+0xc0>
 801d8f2:	684b      	ldr	r3, [r1, #4]
 801d8f4:	2b00      	cmp	r3, #0
 801d8f6:	dc05      	bgt.n	801d904 <__sflush_r+0x20>
 801d8f8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801d8fa:	2b00      	cmp	r3, #0
 801d8fc:	dc02      	bgt.n	801d904 <__sflush_r+0x20>
 801d8fe:	2000      	movs	r0, #0
 801d900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d904:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d906:	2e00      	cmp	r6, #0
 801d908:	d0f9      	beq.n	801d8fe <__sflush_r+0x1a>
 801d90a:	2300      	movs	r3, #0
 801d90c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801d910:	682f      	ldr	r7, [r5, #0]
 801d912:	602b      	str	r3, [r5, #0]
 801d914:	d032      	beq.n	801d97c <__sflush_r+0x98>
 801d916:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801d918:	89a3      	ldrh	r3, [r4, #12]
 801d91a:	075a      	lsls	r2, r3, #29
 801d91c:	d505      	bpl.n	801d92a <__sflush_r+0x46>
 801d91e:	6863      	ldr	r3, [r4, #4]
 801d920:	1ac0      	subs	r0, r0, r3
 801d922:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801d924:	b10b      	cbz	r3, 801d92a <__sflush_r+0x46>
 801d926:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d928:	1ac0      	subs	r0, r0, r3
 801d92a:	2300      	movs	r3, #0
 801d92c:	4602      	mov	r2, r0
 801d92e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d930:	6a21      	ldr	r1, [r4, #32]
 801d932:	4628      	mov	r0, r5
 801d934:	47b0      	blx	r6
 801d936:	1c43      	adds	r3, r0, #1
 801d938:	89a3      	ldrh	r3, [r4, #12]
 801d93a:	d106      	bne.n	801d94a <__sflush_r+0x66>
 801d93c:	6829      	ldr	r1, [r5, #0]
 801d93e:	291d      	cmp	r1, #29
 801d940:	d82c      	bhi.n	801d99c <__sflush_r+0xb8>
 801d942:	4a2a      	ldr	r2, [pc, #168]	; (801d9ec <__sflush_r+0x108>)
 801d944:	40ca      	lsrs	r2, r1
 801d946:	07d6      	lsls	r6, r2, #31
 801d948:	d528      	bpl.n	801d99c <__sflush_r+0xb8>
 801d94a:	2200      	movs	r2, #0
 801d94c:	6062      	str	r2, [r4, #4]
 801d94e:	04d9      	lsls	r1, r3, #19
 801d950:	6922      	ldr	r2, [r4, #16]
 801d952:	6022      	str	r2, [r4, #0]
 801d954:	d504      	bpl.n	801d960 <__sflush_r+0x7c>
 801d956:	1c42      	adds	r2, r0, #1
 801d958:	d101      	bne.n	801d95e <__sflush_r+0x7a>
 801d95a:	682b      	ldr	r3, [r5, #0]
 801d95c:	b903      	cbnz	r3, 801d960 <__sflush_r+0x7c>
 801d95e:	6560      	str	r0, [r4, #84]	; 0x54
 801d960:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d962:	602f      	str	r7, [r5, #0]
 801d964:	2900      	cmp	r1, #0
 801d966:	d0ca      	beq.n	801d8fe <__sflush_r+0x1a>
 801d968:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801d96c:	4299      	cmp	r1, r3
 801d96e:	d002      	beq.n	801d976 <__sflush_r+0x92>
 801d970:	4628      	mov	r0, r5
 801d972:	f7fe f87f 	bl	801ba74 <_free_r>
 801d976:	2000      	movs	r0, #0
 801d978:	6360      	str	r0, [r4, #52]	; 0x34
 801d97a:	e7c1      	b.n	801d900 <__sflush_r+0x1c>
 801d97c:	6a21      	ldr	r1, [r4, #32]
 801d97e:	2301      	movs	r3, #1
 801d980:	4628      	mov	r0, r5
 801d982:	47b0      	blx	r6
 801d984:	1c41      	adds	r1, r0, #1
 801d986:	d1c7      	bne.n	801d918 <__sflush_r+0x34>
 801d988:	682b      	ldr	r3, [r5, #0]
 801d98a:	2b00      	cmp	r3, #0
 801d98c:	d0c4      	beq.n	801d918 <__sflush_r+0x34>
 801d98e:	2b1d      	cmp	r3, #29
 801d990:	d001      	beq.n	801d996 <__sflush_r+0xb2>
 801d992:	2b16      	cmp	r3, #22
 801d994:	d101      	bne.n	801d99a <__sflush_r+0xb6>
 801d996:	602f      	str	r7, [r5, #0]
 801d998:	e7b1      	b.n	801d8fe <__sflush_r+0x1a>
 801d99a:	89a3      	ldrh	r3, [r4, #12]
 801d99c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d9a0:	81a3      	strh	r3, [r4, #12]
 801d9a2:	e7ad      	b.n	801d900 <__sflush_r+0x1c>
 801d9a4:	690f      	ldr	r7, [r1, #16]
 801d9a6:	2f00      	cmp	r7, #0
 801d9a8:	d0a9      	beq.n	801d8fe <__sflush_r+0x1a>
 801d9aa:	0793      	lsls	r3, r2, #30
 801d9ac:	680e      	ldr	r6, [r1, #0]
 801d9ae:	bf08      	it	eq
 801d9b0:	694b      	ldreq	r3, [r1, #20]
 801d9b2:	600f      	str	r7, [r1, #0]
 801d9b4:	bf18      	it	ne
 801d9b6:	2300      	movne	r3, #0
 801d9b8:	eba6 0807 	sub.w	r8, r6, r7
 801d9bc:	608b      	str	r3, [r1, #8]
 801d9be:	f1b8 0f00 	cmp.w	r8, #0
 801d9c2:	dd9c      	ble.n	801d8fe <__sflush_r+0x1a>
 801d9c4:	6a21      	ldr	r1, [r4, #32]
 801d9c6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801d9c8:	4643      	mov	r3, r8
 801d9ca:	463a      	mov	r2, r7
 801d9cc:	4628      	mov	r0, r5
 801d9ce:	47b0      	blx	r6
 801d9d0:	2800      	cmp	r0, #0
 801d9d2:	dc06      	bgt.n	801d9e2 <__sflush_r+0xfe>
 801d9d4:	89a3      	ldrh	r3, [r4, #12]
 801d9d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d9da:	81a3      	strh	r3, [r4, #12]
 801d9dc:	f04f 30ff 	mov.w	r0, #4294967295
 801d9e0:	e78e      	b.n	801d900 <__sflush_r+0x1c>
 801d9e2:	4407      	add	r7, r0
 801d9e4:	eba8 0800 	sub.w	r8, r8, r0
 801d9e8:	e7e9      	b.n	801d9be <__sflush_r+0xda>
 801d9ea:	bf00      	nop
 801d9ec:	20400001 	.word	0x20400001

0801d9f0 <_fflush_r>:
 801d9f0:	b538      	push	{r3, r4, r5, lr}
 801d9f2:	690b      	ldr	r3, [r1, #16]
 801d9f4:	4605      	mov	r5, r0
 801d9f6:	460c      	mov	r4, r1
 801d9f8:	b913      	cbnz	r3, 801da00 <_fflush_r+0x10>
 801d9fa:	2500      	movs	r5, #0
 801d9fc:	4628      	mov	r0, r5
 801d9fe:	bd38      	pop	{r3, r4, r5, pc}
 801da00:	b118      	cbz	r0, 801da0a <_fflush_r+0x1a>
 801da02:	6983      	ldr	r3, [r0, #24]
 801da04:	b90b      	cbnz	r3, 801da0a <_fflush_r+0x1a>
 801da06:	f000 f887 	bl	801db18 <__sinit>
 801da0a:	4b14      	ldr	r3, [pc, #80]	; (801da5c <_fflush_r+0x6c>)
 801da0c:	429c      	cmp	r4, r3
 801da0e:	d11b      	bne.n	801da48 <_fflush_r+0x58>
 801da10:	686c      	ldr	r4, [r5, #4]
 801da12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801da16:	2b00      	cmp	r3, #0
 801da18:	d0ef      	beq.n	801d9fa <_fflush_r+0xa>
 801da1a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801da1c:	07d0      	lsls	r0, r2, #31
 801da1e:	d404      	bmi.n	801da2a <_fflush_r+0x3a>
 801da20:	0599      	lsls	r1, r3, #22
 801da22:	d402      	bmi.n	801da2a <_fflush_r+0x3a>
 801da24:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801da26:	f000 f91a 	bl	801dc5e <__retarget_lock_acquire_recursive>
 801da2a:	4628      	mov	r0, r5
 801da2c:	4621      	mov	r1, r4
 801da2e:	f7ff ff59 	bl	801d8e4 <__sflush_r>
 801da32:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801da34:	07da      	lsls	r2, r3, #31
 801da36:	4605      	mov	r5, r0
 801da38:	d4e0      	bmi.n	801d9fc <_fflush_r+0xc>
 801da3a:	89a3      	ldrh	r3, [r4, #12]
 801da3c:	059b      	lsls	r3, r3, #22
 801da3e:	d4dd      	bmi.n	801d9fc <_fflush_r+0xc>
 801da40:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801da42:	f000 f90e 	bl	801dc62 <__retarget_lock_release_recursive>
 801da46:	e7d9      	b.n	801d9fc <_fflush_r+0xc>
 801da48:	4b05      	ldr	r3, [pc, #20]	; (801da60 <_fflush_r+0x70>)
 801da4a:	429c      	cmp	r4, r3
 801da4c:	d101      	bne.n	801da52 <_fflush_r+0x62>
 801da4e:	68ac      	ldr	r4, [r5, #8]
 801da50:	e7df      	b.n	801da12 <_fflush_r+0x22>
 801da52:	4b04      	ldr	r3, [pc, #16]	; (801da64 <_fflush_r+0x74>)
 801da54:	429c      	cmp	r4, r3
 801da56:	bf08      	it	eq
 801da58:	68ec      	ldreq	r4, [r5, #12]
 801da5a:	e7da      	b.n	801da12 <_fflush_r+0x22>
 801da5c:	08021a90 	.word	0x08021a90
 801da60:	08021ab0 	.word	0x08021ab0
 801da64:	08021a70 	.word	0x08021a70

0801da68 <std>:
 801da68:	2300      	movs	r3, #0
 801da6a:	b510      	push	{r4, lr}
 801da6c:	4604      	mov	r4, r0
 801da6e:	e9c0 3300 	strd	r3, r3, [r0]
 801da72:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801da76:	6083      	str	r3, [r0, #8]
 801da78:	8181      	strh	r1, [r0, #12]
 801da7a:	6643      	str	r3, [r0, #100]	; 0x64
 801da7c:	81c2      	strh	r2, [r0, #14]
 801da7e:	6183      	str	r3, [r0, #24]
 801da80:	4619      	mov	r1, r3
 801da82:	2208      	movs	r2, #8
 801da84:	305c      	adds	r0, #92	; 0x5c
 801da86:	f7fd ffed 	bl	801ba64 <memset>
 801da8a:	4b05      	ldr	r3, [pc, #20]	; (801daa0 <std+0x38>)
 801da8c:	6263      	str	r3, [r4, #36]	; 0x24
 801da8e:	4b05      	ldr	r3, [pc, #20]	; (801daa4 <std+0x3c>)
 801da90:	62a3      	str	r3, [r4, #40]	; 0x28
 801da92:	4b05      	ldr	r3, [pc, #20]	; (801daa8 <std+0x40>)
 801da94:	62e3      	str	r3, [r4, #44]	; 0x2c
 801da96:	4b05      	ldr	r3, [pc, #20]	; (801daac <std+0x44>)
 801da98:	6224      	str	r4, [r4, #32]
 801da9a:	6323      	str	r3, [r4, #48]	; 0x30
 801da9c:	bd10      	pop	{r4, pc}
 801da9e:	bf00      	nop
 801daa0:	0801e47d 	.word	0x0801e47d
 801daa4:	0801e49f 	.word	0x0801e49f
 801daa8:	0801e4d7 	.word	0x0801e4d7
 801daac:	0801e4fb 	.word	0x0801e4fb

0801dab0 <_cleanup_r>:
 801dab0:	4901      	ldr	r1, [pc, #4]	; (801dab8 <_cleanup_r+0x8>)
 801dab2:	f000 b8af 	b.w	801dc14 <_fwalk_reent>
 801dab6:	bf00      	nop
 801dab8:	0801d9f1 	.word	0x0801d9f1

0801dabc <__sfmoreglue>:
 801dabc:	b570      	push	{r4, r5, r6, lr}
 801dabe:	2268      	movs	r2, #104	; 0x68
 801dac0:	1e4d      	subs	r5, r1, #1
 801dac2:	4355      	muls	r5, r2
 801dac4:	460e      	mov	r6, r1
 801dac6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801daca:	f7fe f83f 	bl	801bb4c <_malloc_r>
 801dace:	4604      	mov	r4, r0
 801dad0:	b140      	cbz	r0, 801dae4 <__sfmoreglue+0x28>
 801dad2:	2100      	movs	r1, #0
 801dad4:	e9c0 1600 	strd	r1, r6, [r0]
 801dad8:	300c      	adds	r0, #12
 801dada:	60a0      	str	r0, [r4, #8]
 801dadc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801dae0:	f7fd ffc0 	bl	801ba64 <memset>
 801dae4:	4620      	mov	r0, r4
 801dae6:	bd70      	pop	{r4, r5, r6, pc}

0801dae8 <__sfp_lock_acquire>:
 801dae8:	4801      	ldr	r0, [pc, #4]	; (801daf0 <__sfp_lock_acquire+0x8>)
 801daea:	f000 b8b8 	b.w	801dc5e <__retarget_lock_acquire_recursive>
 801daee:	bf00      	nop
 801daf0:	20001a62 	.word	0x20001a62

0801daf4 <__sfp_lock_release>:
 801daf4:	4801      	ldr	r0, [pc, #4]	; (801dafc <__sfp_lock_release+0x8>)
 801daf6:	f000 b8b4 	b.w	801dc62 <__retarget_lock_release_recursive>
 801dafa:	bf00      	nop
 801dafc:	20001a62 	.word	0x20001a62

0801db00 <__sinit_lock_acquire>:
 801db00:	4801      	ldr	r0, [pc, #4]	; (801db08 <__sinit_lock_acquire+0x8>)
 801db02:	f000 b8ac 	b.w	801dc5e <__retarget_lock_acquire_recursive>
 801db06:	bf00      	nop
 801db08:	20001a63 	.word	0x20001a63

0801db0c <__sinit_lock_release>:
 801db0c:	4801      	ldr	r0, [pc, #4]	; (801db14 <__sinit_lock_release+0x8>)
 801db0e:	f000 b8a8 	b.w	801dc62 <__retarget_lock_release_recursive>
 801db12:	bf00      	nop
 801db14:	20001a63 	.word	0x20001a63

0801db18 <__sinit>:
 801db18:	b510      	push	{r4, lr}
 801db1a:	4604      	mov	r4, r0
 801db1c:	f7ff fff0 	bl	801db00 <__sinit_lock_acquire>
 801db20:	69a3      	ldr	r3, [r4, #24]
 801db22:	b11b      	cbz	r3, 801db2c <__sinit+0x14>
 801db24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801db28:	f7ff bff0 	b.w	801db0c <__sinit_lock_release>
 801db2c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801db30:	6523      	str	r3, [r4, #80]	; 0x50
 801db32:	4b13      	ldr	r3, [pc, #76]	; (801db80 <__sinit+0x68>)
 801db34:	4a13      	ldr	r2, [pc, #76]	; (801db84 <__sinit+0x6c>)
 801db36:	681b      	ldr	r3, [r3, #0]
 801db38:	62a2      	str	r2, [r4, #40]	; 0x28
 801db3a:	42a3      	cmp	r3, r4
 801db3c:	bf04      	itt	eq
 801db3e:	2301      	moveq	r3, #1
 801db40:	61a3      	streq	r3, [r4, #24]
 801db42:	4620      	mov	r0, r4
 801db44:	f000 f820 	bl	801db88 <__sfp>
 801db48:	6060      	str	r0, [r4, #4]
 801db4a:	4620      	mov	r0, r4
 801db4c:	f000 f81c 	bl	801db88 <__sfp>
 801db50:	60a0      	str	r0, [r4, #8]
 801db52:	4620      	mov	r0, r4
 801db54:	f000 f818 	bl	801db88 <__sfp>
 801db58:	2200      	movs	r2, #0
 801db5a:	60e0      	str	r0, [r4, #12]
 801db5c:	2104      	movs	r1, #4
 801db5e:	6860      	ldr	r0, [r4, #4]
 801db60:	f7ff ff82 	bl	801da68 <std>
 801db64:	68a0      	ldr	r0, [r4, #8]
 801db66:	2201      	movs	r2, #1
 801db68:	2109      	movs	r1, #9
 801db6a:	f7ff ff7d 	bl	801da68 <std>
 801db6e:	68e0      	ldr	r0, [r4, #12]
 801db70:	2202      	movs	r2, #2
 801db72:	2112      	movs	r1, #18
 801db74:	f7ff ff78 	bl	801da68 <std>
 801db78:	2301      	movs	r3, #1
 801db7a:	61a3      	str	r3, [r4, #24]
 801db7c:	e7d2      	b.n	801db24 <__sinit+0xc>
 801db7e:	bf00      	nop
 801db80:	08021890 	.word	0x08021890
 801db84:	0801dab1 	.word	0x0801dab1

0801db88 <__sfp>:
 801db88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801db8a:	4607      	mov	r7, r0
 801db8c:	f7ff ffac 	bl	801dae8 <__sfp_lock_acquire>
 801db90:	4b1e      	ldr	r3, [pc, #120]	; (801dc0c <__sfp+0x84>)
 801db92:	681e      	ldr	r6, [r3, #0]
 801db94:	69b3      	ldr	r3, [r6, #24]
 801db96:	b913      	cbnz	r3, 801db9e <__sfp+0x16>
 801db98:	4630      	mov	r0, r6
 801db9a:	f7ff ffbd 	bl	801db18 <__sinit>
 801db9e:	3648      	adds	r6, #72	; 0x48
 801dba0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801dba4:	3b01      	subs	r3, #1
 801dba6:	d503      	bpl.n	801dbb0 <__sfp+0x28>
 801dba8:	6833      	ldr	r3, [r6, #0]
 801dbaa:	b30b      	cbz	r3, 801dbf0 <__sfp+0x68>
 801dbac:	6836      	ldr	r6, [r6, #0]
 801dbae:	e7f7      	b.n	801dba0 <__sfp+0x18>
 801dbb0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801dbb4:	b9d5      	cbnz	r5, 801dbec <__sfp+0x64>
 801dbb6:	4b16      	ldr	r3, [pc, #88]	; (801dc10 <__sfp+0x88>)
 801dbb8:	60e3      	str	r3, [r4, #12]
 801dbba:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801dbbe:	6665      	str	r5, [r4, #100]	; 0x64
 801dbc0:	f000 f84c 	bl	801dc5c <__retarget_lock_init_recursive>
 801dbc4:	f7ff ff96 	bl	801daf4 <__sfp_lock_release>
 801dbc8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801dbcc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801dbd0:	6025      	str	r5, [r4, #0]
 801dbd2:	61a5      	str	r5, [r4, #24]
 801dbd4:	2208      	movs	r2, #8
 801dbd6:	4629      	mov	r1, r5
 801dbd8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801dbdc:	f7fd ff42 	bl	801ba64 <memset>
 801dbe0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801dbe4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801dbe8:	4620      	mov	r0, r4
 801dbea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dbec:	3468      	adds	r4, #104	; 0x68
 801dbee:	e7d9      	b.n	801dba4 <__sfp+0x1c>
 801dbf0:	2104      	movs	r1, #4
 801dbf2:	4638      	mov	r0, r7
 801dbf4:	f7ff ff62 	bl	801dabc <__sfmoreglue>
 801dbf8:	4604      	mov	r4, r0
 801dbfa:	6030      	str	r0, [r6, #0]
 801dbfc:	2800      	cmp	r0, #0
 801dbfe:	d1d5      	bne.n	801dbac <__sfp+0x24>
 801dc00:	f7ff ff78 	bl	801daf4 <__sfp_lock_release>
 801dc04:	230c      	movs	r3, #12
 801dc06:	603b      	str	r3, [r7, #0]
 801dc08:	e7ee      	b.n	801dbe8 <__sfp+0x60>
 801dc0a:	bf00      	nop
 801dc0c:	08021890 	.word	0x08021890
 801dc10:	ffff0001 	.word	0xffff0001

0801dc14 <_fwalk_reent>:
 801dc14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801dc18:	4606      	mov	r6, r0
 801dc1a:	4688      	mov	r8, r1
 801dc1c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801dc20:	2700      	movs	r7, #0
 801dc22:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801dc26:	f1b9 0901 	subs.w	r9, r9, #1
 801dc2a:	d505      	bpl.n	801dc38 <_fwalk_reent+0x24>
 801dc2c:	6824      	ldr	r4, [r4, #0]
 801dc2e:	2c00      	cmp	r4, #0
 801dc30:	d1f7      	bne.n	801dc22 <_fwalk_reent+0xe>
 801dc32:	4638      	mov	r0, r7
 801dc34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801dc38:	89ab      	ldrh	r3, [r5, #12]
 801dc3a:	2b01      	cmp	r3, #1
 801dc3c:	d907      	bls.n	801dc4e <_fwalk_reent+0x3a>
 801dc3e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801dc42:	3301      	adds	r3, #1
 801dc44:	d003      	beq.n	801dc4e <_fwalk_reent+0x3a>
 801dc46:	4629      	mov	r1, r5
 801dc48:	4630      	mov	r0, r6
 801dc4a:	47c0      	blx	r8
 801dc4c:	4307      	orrs	r7, r0
 801dc4e:	3568      	adds	r5, #104	; 0x68
 801dc50:	e7e9      	b.n	801dc26 <_fwalk_reent+0x12>
	...

0801dc54 <_localeconv_r>:
 801dc54:	4800      	ldr	r0, [pc, #0]	; (801dc58 <_localeconv_r+0x4>)
 801dc56:	4770      	bx	lr
 801dc58:	200001f4 	.word	0x200001f4

0801dc5c <__retarget_lock_init_recursive>:
 801dc5c:	4770      	bx	lr

0801dc5e <__retarget_lock_acquire_recursive>:
 801dc5e:	4770      	bx	lr

0801dc60 <__retarget_lock_release>:
 801dc60:	4770      	bx	lr

0801dc62 <__retarget_lock_release_recursive>:
 801dc62:	4770      	bx	lr

0801dc64 <__swhatbuf_r>:
 801dc64:	b570      	push	{r4, r5, r6, lr}
 801dc66:	460e      	mov	r6, r1
 801dc68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801dc6c:	2900      	cmp	r1, #0
 801dc6e:	b096      	sub	sp, #88	; 0x58
 801dc70:	4614      	mov	r4, r2
 801dc72:	461d      	mov	r5, r3
 801dc74:	da08      	bge.n	801dc88 <__swhatbuf_r+0x24>
 801dc76:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801dc7a:	2200      	movs	r2, #0
 801dc7c:	602a      	str	r2, [r5, #0]
 801dc7e:	061a      	lsls	r2, r3, #24
 801dc80:	d410      	bmi.n	801dca4 <__swhatbuf_r+0x40>
 801dc82:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801dc86:	e00e      	b.n	801dca6 <__swhatbuf_r+0x42>
 801dc88:	466a      	mov	r2, sp
 801dc8a:	f000 fc5d 	bl	801e548 <_fstat_r>
 801dc8e:	2800      	cmp	r0, #0
 801dc90:	dbf1      	blt.n	801dc76 <__swhatbuf_r+0x12>
 801dc92:	9a01      	ldr	r2, [sp, #4]
 801dc94:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801dc98:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801dc9c:	425a      	negs	r2, r3
 801dc9e:	415a      	adcs	r2, r3
 801dca0:	602a      	str	r2, [r5, #0]
 801dca2:	e7ee      	b.n	801dc82 <__swhatbuf_r+0x1e>
 801dca4:	2340      	movs	r3, #64	; 0x40
 801dca6:	2000      	movs	r0, #0
 801dca8:	6023      	str	r3, [r4, #0]
 801dcaa:	b016      	add	sp, #88	; 0x58
 801dcac:	bd70      	pop	{r4, r5, r6, pc}
	...

0801dcb0 <__smakebuf_r>:
 801dcb0:	898b      	ldrh	r3, [r1, #12]
 801dcb2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801dcb4:	079d      	lsls	r5, r3, #30
 801dcb6:	4606      	mov	r6, r0
 801dcb8:	460c      	mov	r4, r1
 801dcba:	d507      	bpl.n	801dccc <__smakebuf_r+0x1c>
 801dcbc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801dcc0:	6023      	str	r3, [r4, #0]
 801dcc2:	6123      	str	r3, [r4, #16]
 801dcc4:	2301      	movs	r3, #1
 801dcc6:	6163      	str	r3, [r4, #20]
 801dcc8:	b002      	add	sp, #8
 801dcca:	bd70      	pop	{r4, r5, r6, pc}
 801dccc:	ab01      	add	r3, sp, #4
 801dcce:	466a      	mov	r2, sp
 801dcd0:	f7ff ffc8 	bl	801dc64 <__swhatbuf_r>
 801dcd4:	9900      	ldr	r1, [sp, #0]
 801dcd6:	4605      	mov	r5, r0
 801dcd8:	4630      	mov	r0, r6
 801dcda:	f7fd ff37 	bl	801bb4c <_malloc_r>
 801dcde:	b948      	cbnz	r0, 801dcf4 <__smakebuf_r+0x44>
 801dce0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801dce4:	059a      	lsls	r2, r3, #22
 801dce6:	d4ef      	bmi.n	801dcc8 <__smakebuf_r+0x18>
 801dce8:	f023 0303 	bic.w	r3, r3, #3
 801dcec:	f043 0302 	orr.w	r3, r3, #2
 801dcf0:	81a3      	strh	r3, [r4, #12]
 801dcf2:	e7e3      	b.n	801dcbc <__smakebuf_r+0xc>
 801dcf4:	4b0d      	ldr	r3, [pc, #52]	; (801dd2c <__smakebuf_r+0x7c>)
 801dcf6:	62b3      	str	r3, [r6, #40]	; 0x28
 801dcf8:	89a3      	ldrh	r3, [r4, #12]
 801dcfa:	6020      	str	r0, [r4, #0]
 801dcfc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801dd00:	81a3      	strh	r3, [r4, #12]
 801dd02:	9b00      	ldr	r3, [sp, #0]
 801dd04:	6163      	str	r3, [r4, #20]
 801dd06:	9b01      	ldr	r3, [sp, #4]
 801dd08:	6120      	str	r0, [r4, #16]
 801dd0a:	b15b      	cbz	r3, 801dd24 <__smakebuf_r+0x74>
 801dd0c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801dd10:	4630      	mov	r0, r6
 801dd12:	f000 fc2b 	bl	801e56c <_isatty_r>
 801dd16:	b128      	cbz	r0, 801dd24 <__smakebuf_r+0x74>
 801dd18:	89a3      	ldrh	r3, [r4, #12]
 801dd1a:	f023 0303 	bic.w	r3, r3, #3
 801dd1e:	f043 0301 	orr.w	r3, r3, #1
 801dd22:	81a3      	strh	r3, [r4, #12]
 801dd24:	89a0      	ldrh	r0, [r4, #12]
 801dd26:	4305      	orrs	r5, r0
 801dd28:	81a5      	strh	r5, [r4, #12]
 801dd2a:	e7cd      	b.n	801dcc8 <__smakebuf_r+0x18>
 801dd2c:	0801dab1 	.word	0x0801dab1

0801dd30 <__malloc_lock>:
 801dd30:	4801      	ldr	r0, [pc, #4]	; (801dd38 <__malloc_lock+0x8>)
 801dd32:	f7ff bf94 	b.w	801dc5e <__retarget_lock_acquire_recursive>
 801dd36:	bf00      	nop
 801dd38:	20001a61 	.word	0x20001a61

0801dd3c <__malloc_unlock>:
 801dd3c:	4801      	ldr	r0, [pc, #4]	; (801dd44 <__malloc_unlock+0x8>)
 801dd3e:	f7ff bf90 	b.w	801dc62 <__retarget_lock_release_recursive>
 801dd42:	bf00      	nop
 801dd44:	20001a61 	.word	0x20001a61

0801dd48 <_Balloc>:
 801dd48:	b570      	push	{r4, r5, r6, lr}
 801dd4a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 801dd4c:	4604      	mov	r4, r0
 801dd4e:	460d      	mov	r5, r1
 801dd50:	b976      	cbnz	r6, 801dd70 <_Balloc+0x28>
 801dd52:	2010      	movs	r0, #16
 801dd54:	f7fd fe68 	bl	801ba28 <malloc>
 801dd58:	4602      	mov	r2, r0
 801dd5a:	6260      	str	r0, [r4, #36]	; 0x24
 801dd5c:	b920      	cbnz	r0, 801dd68 <_Balloc+0x20>
 801dd5e:	4b18      	ldr	r3, [pc, #96]	; (801ddc0 <_Balloc+0x78>)
 801dd60:	4818      	ldr	r0, [pc, #96]	; (801ddc4 <_Balloc+0x7c>)
 801dd62:	2166      	movs	r1, #102	; 0x66
 801dd64:	f7fd fdee 	bl	801b944 <__assert_func>
 801dd68:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801dd6c:	6006      	str	r6, [r0, #0]
 801dd6e:	60c6      	str	r6, [r0, #12]
 801dd70:	6a66      	ldr	r6, [r4, #36]	; 0x24
 801dd72:	68f3      	ldr	r3, [r6, #12]
 801dd74:	b183      	cbz	r3, 801dd98 <_Balloc+0x50>
 801dd76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801dd78:	68db      	ldr	r3, [r3, #12]
 801dd7a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 801dd7e:	b9b8      	cbnz	r0, 801ddb0 <_Balloc+0x68>
 801dd80:	2101      	movs	r1, #1
 801dd82:	fa01 f605 	lsl.w	r6, r1, r5
 801dd86:	1d72      	adds	r2, r6, #5
 801dd88:	0092      	lsls	r2, r2, #2
 801dd8a:	4620      	mov	r0, r4
 801dd8c:	f000 fb60 	bl	801e450 <_calloc_r>
 801dd90:	b160      	cbz	r0, 801ddac <_Balloc+0x64>
 801dd92:	e9c0 5601 	strd	r5, r6, [r0, #4]
 801dd96:	e00e      	b.n	801ddb6 <_Balloc+0x6e>
 801dd98:	2221      	movs	r2, #33	; 0x21
 801dd9a:	2104      	movs	r1, #4
 801dd9c:	4620      	mov	r0, r4
 801dd9e:	f000 fb57 	bl	801e450 <_calloc_r>
 801dda2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801dda4:	60f0      	str	r0, [r6, #12]
 801dda6:	68db      	ldr	r3, [r3, #12]
 801dda8:	2b00      	cmp	r3, #0
 801ddaa:	d1e4      	bne.n	801dd76 <_Balloc+0x2e>
 801ddac:	2000      	movs	r0, #0
 801ddae:	bd70      	pop	{r4, r5, r6, pc}
 801ddb0:	6802      	ldr	r2, [r0, #0]
 801ddb2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 801ddb6:	2300      	movs	r3, #0
 801ddb8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801ddbc:	e7f7      	b.n	801ddae <_Balloc+0x66>
 801ddbe:	bf00      	nop
 801ddc0:	080219ea 	.word	0x080219ea
 801ddc4:	08021ad0 	.word	0x08021ad0

0801ddc8 <_Bfree>:
 801ddc8:	b570      	push	{r4, r5, r6, lr}
 801ddca:	6a46      	ldr	r6, [r0, #36]	; 0x24
 801ddcc:	4605      	mov	r5, r0
 801ddce:	460c      	mov	r4, r1
 801ddd0:	b976      	cbnz	r6, 801ddf0 <_Bfree+0x28>
 801ddd2:	2010      	movs	r0, #16
 801ddd4:	f7fd fe28 	bl	801ba28 <malloc>
 801ddd8:	4602      	mov	r2, r0
 801ddda:	6268      	str	r0, [r5, #36]	; 0x24
 801dddc:	b920      	cbnz	r0, 801dde8 <_Bfree+0x20>
 801ddde:	4b09      	ldr	r3, [pc, #36]	; (801de04 <_Bfree+0x3c>)
 801dde0:	4809      	ldr	r0, [pc, #36]	; (801de08 <_Bfree+0x40>)
 801dde2:	218a      	movs	r1, #138	; 0x8a
 801dde4:	f7fd fdae 	bl	801b944 <__assert_func>
 801dde8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801ddec:	6006      	str	r6, [r0, #0]
 801ddee:	60c6      	str	r6, [r0, #12]
 801ddf0:	b13c      	cbz	r4, 801de02 <_Bfree+0x3a>
 801ddf2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 801ddf4:	6862      	ldr	r2, [r4, #4]
 801ddf6:	68db      	ldr	r3, [r3, #12]
 801ddf8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ddfc:	6021      	str	r1, [r4, #0]
 801ddfe:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 801de02:	bd70      	pop	{r4, r5, r6, pc}
 801de04:	080219ea 	.word	0x080219ea
 801de08:	08021ad0 	.word	0x08021ad0

0801de0c <__multadd>:
 801de0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801de10:	690d      	ldr	r5, [r1, #16]
 801de12:	4607      	mov	r7, r0
 801de14:	460c      	mov	r4, r1
 801de16:	461e      	mov	r6, r3
 801de18:	f101 0c14 	add.w	ip, r1, #20
 801de1c:	2000      	movs	r0, #0
 801de1e:	f8dc 3000 	ldr.w	r3, [ip]
 801de22:	b299      	uxth	r1, r3
 801de24:	fb02 6101 	mla	r1, r2, r1, r6
 801de28:	0c1e      	lsrs	r6, r3, #16
 801de2a:	0c0b      	lsrs	r3, r1, #16
 801de2c:	fb02 3306 	mla	r3, r2, r6, r3
 801de30:	b289      	uxth	r1, r1
 801de32:	3001      	adds	r0, #1
 801de34:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801de38:	4285      	cmp	r5, r0
 801de3a:	f84c 1b04 	str.w	r1, [ip], #4
 801de3e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801de42:	dcec      	bgt.n	801de1e <__multadd+0x12>
 801de44:	b30e      	cbz	r6, 801de8a <__multadd+0x7e>
 801de46:	68a3      	ldr	r3, [r4, #8]
 801de48:	42ab      	cmp	r3, r5
 801de4a:	dc19      	bgt.n	801de80 <__multadd+0x74>
 801de4c:	6861      	ldr	r1, [r4, #4]
 801de4e:	4638      	mov	r0, r7
 801de50:	3101      	adds	r1, #1
 801de52:	f7ff ff79 	bl	801dd48 <_Balloc>
 801de56:	4680      	mov	r8, r0
 801de58:	b928      	cbnz	r0, 801de66 <__multadd+0x5a>
 801de5a:	4602      	mov	r2, r0
 801de5c:	4b0c      	ldr	r3, [pc, #48]	; (801de90 <__multadd+0x84>)
 801de5e:	480d      	ldr	r0, [pc, #52]	; (801de94 <__multadd+0x88>)
 801de60:	21b5      	movs	r1, #181	; 0xb5
 801de62:	f7fd fd6f 	bl	801b944 <__assert_func>
 801de66:	6922      	ldr	r2, [r4, #16]
 801de68:	3202      	adds	r2, #2
 801de6a:	f104 010c 	add.w	r1, r4, #12
 801de6e:	0092      	lsls	r2, r2, #2
 801de70:	300c      	adds	r0, #12
 801de72:	f7fd fde9 	bl	801ba48 <memcpy>
 801de76:	4621      	mov	r1, r4
 801de78:	4638      	mov	r0, r7
 801de7a:	f7ff ffa5 	bl	801ddc8 <_Bfree>
 801de7e:	4644      	mov	r4, r8
 801de80:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801de84:	3501      	adds	r5, #1
 801de86:	615e      	str	r6, [r3, #20]
 801de88:	6125      	str	r5, [r4, #16]
 801de8a:	4620      	mov	r0, r4
 801de8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801de90:	08021a5c 	.word	0x08021a5c
 801de94:	08021ad0 	.word	0x08021ad0

0801de98 <__hi0bits>:
 801de98:	0c03      	lsrs	r3, r0, #16
 801de9a:	041b      	lsls	r3, r3, #16
 801de9c:	b9d3      	cbnz	r3, 801ded4 <__hi0bits+0x3c>
 801de9e:	0400      	lsls	r0, r0, #16
 801dea0:	2310      	movs	r3, #16
 801dea2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 801dea6:	bf04      	itt	eq
 801dea8:	0200      	lsleq	r0, r0, #8
 801deaa:	3308      	addeq	r3, #8
 801deac:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 801deb0:	bf04      	itt	eq
 801deb2:	0100      	lsleq	r0, r0, #4
 801deb4:	3304      	addeq	r3, #4
 801deb6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 801deba:	bf04      	itt	eq
 801debc:	0080      	lsleq	r0, r0, #2
 801debe:	3302      	addeq	r3, #2
 801dec0:	2800      	cmp	r0, #0
 801dec2:	db05      	blt.n	801ded0 <__hi0bits+0x38>
 801dec4:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 801dec8:	f103 0301 	add.w	r3, r3, #1
 801decc:	bf08      	it	eq
 801dece:	2320      	moveq	r3, #32
 801ded0:	4618      	mov	r0, r3
 801ded2:	4770      	bx	lr
 801ded4:	2300      	movs	r3, #0
 801ded6:	e7e4      	b.n	801dea2 <__hi0bits+0xa>

0801ded8 <__lo0bits>:
 801ded8:	6803      	ldr	r3, [r0, #0]
 801deda:	f013 0207 	ands.w	r2, r3, #7
 801dede:	4601      	mov	r1, r0
 801dee0:	d00b      	beq.n	801defa <__lo0bits+0x22>
 801dee2:	07da      	lsls	r2, r3, #31
 801dee4:	d423      	bmi.n	801df2e <__lo0bits+0x56>
 801dee6:	0798      	lsls	r0, r3, #30
 801dee8:	bf49      	itett	mi
 801deea:	085b      	lsrmi	r3, r3, #1
 801deec:	089b      	lsrpl	r3, r3, #2
 801deee:	2001      	movmi	r0, #1
 801def0:	600b      	strmi	r3, [r1, #0]
 801def2:	bf5c      	itt	pl
 801def4:	600b      	strpl	r3, [r1, #0]
 801def6:	2002      	movpl	r0, #2
 801def8:	4770      	bx	lr
 801defa:	b298      	uxth	r0, r3
 801defc:	b9a8      	cbnz	r0, 801df2a <__lo0bits+0x52>
 801defe:	0c1b      	lsrs	r3, r3, #16
 801df00:	2010      	movs	r0, #16
 801df02:	b2da      	uxtb	r2, r3
 801df04:	b90a      	cbnz	r2, 801df0a <__lo0bits+0x32>
 801df06:	3008      	adds	r0, #8
 801df08:	0a1b      	lsrs	r3, r3, #8
 801df0a:	071a      	lsls	r2, r3, #28
 801df0c:	bf04      	itt	eq
 801df0e:	091b      	lsreq	r3, r3, #4
 801df10:	3004      	addeq	r0, #4
 801df12:	079a      	lsls	r2, r3, #30
 801df14:	bf04      	itt	eq
 801df16:	089b      	lsreq	r3, r3, #2
 801df18:	3002      	addeq	r0, #2
 801df1a:	07da      	lsls	r2, r3, #31
 801df1c:	d403      	bmi.n	801df26 <__lo0bits+0x4e>
 801df1e:	085b      	lsrs	r3, r3, #1
 801df20:	f100 0001 	add.w	r0, r0, #1
 801df24:	d005      	beq.n	801df32 <__lo0bits+0x5a>
 801df26:	600b      	str	r3, [r1, #0]
 801df28:	4770      	bx	lr
 801df2a:	4610      	mov	r0, r2
 801df2c:	e7e9      	b.n	801df02 <__lo0bits+0x2a>
 801df2e:	2000      	movs	r0, #0
 801df30:	4770      	bx	lr
 801df32:	2020      	movs	r0, #32
 801df34:	4770      	bx	lr
	...

0801df38 <__i2b>:
 801df38:	b510      	push	{r4, lr}
 801df3a:	460c      	mov	r4, r1
 801df3c:	2101      	movs	r1, #1
 801df3e:	f7ff ff03 	bl	801dd48 <_Balloc>
 801df42:	4602      	mov	r2, r0
 801df44:	b928      	cbnz	r0, 801df52 <__i2b+0x1a>
 801df46:	4b05      	ldr	r3, [pc, #20]	; (801df5c <__i2b+0x24>)
 801df48:	4805      	ldr	r0, [pc, #20]	; (801df60 <__i2b+0x28>)
 801df4a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 801df4e:	f7fd fcf9 	bl	801b944 <__assert_func>
 801df52:	2301      	movs	r3, #1
 801df54:	6144      	str	r4, [r0, #20]
 801df56:	6103      	str	r3, [r0, #16]
 801df58:	bd10      	pop	{r4, pc}
 801df5a:	bf00      	nop
 801df5c:	08021a5c 	.word	0x08021a5c
 801df60:	08021ad0 	.word	0x08021ad0

0801df64 <__multiply>:
 801df64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df68:	4691      	mov	r9, r2
 801df6a:	690a      	ldr	r2, [r1, #16]
 801df6c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 801df70:	429a      	cmp	r2, r3
 801df72:	bfb8      	it	lt
 801df74:	460b      	movlt	r3, r1
 801df76:	460c      	mov	r4, r1
 801df78:	bfbc      	itt	lt
 801df7a:	464c      	movlt	r4, r9
 801df7c:	4699      	movlt	r9, r3
 801df7e:	6927      	ldr	r7, [r4, #16]
 801df80:	f8d9 a010 	ldr.w	sl, [r9, #16]
 801df84:	68a3      	ldr	r3, [r4, #8]
 801df86:	6861      	ldr	r1, [r4, #4]
 801df88:	eb07 060a 	add.w	r6, r7, sl
 801df8c:	42b3      	cmp	r3, r6
 801df8e:	b085      	sub	sp, #20
 801df90:	bfb8      	it	lt
 801df92:	3101      	addlt	r1, #1
 801df94:	f7ff fed8 	bl	801dd48 <_Balloc>
 801df98:	b930      	cbnz	r0, 801dfa8 <__multiply+0x44>
 801df9a:	4602      	mov	r2, r0
 801df9c:	4b44      	ldr	r3, [pc, #272]	; (801e0b0 <__multiply+0x14c>)
 801df9e:	4845      	ldr	r0, [pc, #276]	; (801e0b4 <__multiply+0x150>)
 801dfa0:	f240 115d 	movw	r1, #349	; 0x15d
 801dfa4:	f7fd fcce 	bl	801b944 <__assert_func>
 801dfa8:	f100 0514 	add.w	r5, r0, #20
 801dfac:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 801dfb0:	462b      	mov	r3, r5
 801dfb2:	2200      	movs	r2, #0
 801dfb4:	4543      	cmp	r3, r8
 801dfb6:	d321      	bcc.n	801dffc <__multiply+0x98>
 801dfb8:	f104 0314 	add.w	r3, r4, #20
 801dfbc:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 801dfc0:	f109 0314 	add.w	r3, r9, #20
 801dfc4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 801dfc8:	9202      	str	r2, [sp, #8]
 801dfca:	1b3a      	subs	r2, r7, r4
 801dfcc:	3a15      	subs	r2, #21
 801dfce:	f022 0203 	bic.w	r2, r2, #3
 801dfd2:	3204      	adds	r2, #4
 801dfd4:	f104 0115 	add.w	r1, r4, #21
 801dfd8:	428f      	cmp	r7, r1
 801dfda:	bf38      	it	cc
 801dfdc:	2204      	movcc	r2, #4
 801dfde:	9201      	str	r2, [sp, #4]
 801dfe0:	9a02      	ldr	r2, [sp, #8]
 801dfe2:	9303      	str	r3, [sp, #12]
 801dfe4:	429a      	cmp	r2, r3
 801dfe6:	d80c      	bhi.n	801e002 <__multiply+0x9e>
 801dfe8:	2e00      	cmp	r6, #0
 801dfea:	dd03      	ble.n	801dff4 <__multiply+0x90>
 801dfec:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 801dff0:	2b00      	cmp	r3, #0
 801dff2:	d05a      	beq.n	801e0aa <__multiply+0x146>
 801dff4:	6106      	str	r6, [r0, #16]
 801dff6:	b005      	add	sp, #20
 801dff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dffc:	f843 2b04 	str.w	r2, [r3], #4
 801e000:	e7d8      	b.n	801dfb4 <__multiply+0x50>
 801e002:	f8b3 a000 	ldrh.w	sl, [r3]
 801e006:	f1ba 0f00 	cmp.w	sl, #0
 801e00a:	d024      	beq.n	801e056 <__multiply+0xf2>
 801e00c:	f104 0e14 	add.w	lr, r4, #20
 801e010:	46a9      	mov	r9, r5
 801e012:	f04f 0c00 	mov.w	ip, #0
 801e016:	f85e 2b04 	ldr.w	r2, [lr], #4
 801e01a:	f8d9 1000 	ldr.w	r1, [r9]
 801e01e:	fa1f fb82 	uxth.w	fp, r2
 801e022:	b289      	uxth	r1, r1
 801e024:	fb0a 110b 	mla	r1, sl, fp, r1
 801e028:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 801e02c:	f8d9 2000 	ldr.w	r2, [r9]
 801e030:	4461      	add	r1, ip
 801e032:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801e036:	fb0a c20b 	mla	r2, sl, fp, ip
 801e03a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 801e03e:	b289      	uxth	r1, r1
 801e040:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 801e044:	4577      	cmp	r7, lr
 801e046:	f849 1b04 	str.w	r1, [r9], #4
 801e04a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801e04e:	d8e2      	bhi.n	801e016 <__multiply+0xb2>
 801e050:	9a01      	ldr	r2, [sp, #4]
 801e052:	f845 c002 	str.w	ip, [r5, r2]
 801e056:	9a03      	ldr	r2, [sp, #12]
 801e058:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 801e05c:	3304      	adds	r3, #4
 801e05e:	f1b9 0f00 	cmp.w	r9, #0
 801e062:	d020      	beq.n	801e0a6 <__multiply+0x142>
 801e064:	6829      	ldr	r1, [r5, #0]
 801e066:	f104 0c14 	add.w	ip, r4, #20
 801e06a:	46ae      	mov	lr, r5
 801e06c:	f04f 0a00 	mov.w	sl, #0
 801e070:	f8bc b000 	ldrh.w	fp, [ip]
 801e074:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801e078:	fb09 220b 	mla	r2, r9, fp, r2
 801e07c:	4492      	add	sl, r2
 801e07e:	b289      	uxth	r1, r1
 801e080:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 801e084:	f84e 1b04 	str.w	r1, [lr], #4
 801e088:	f85c 2b04 	ldr.w	r2, [ip], #4
 801e08c:	f8be 1000 	ldrh.w	r1, [lr]
 801e090:	0c12      	lsrs	r2, r2, #16
 801e092:	fb09 1102 	mla	r1, r9, r2, r1
 801e096:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 801e09a:	4567      	cmp	r7, ip
 801e09c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 801e0a0:	d8e6      	bhi.n	801e070 <__multiply+0x10c>
 801e0a2:	9a01      	ldr	r2, [sp, #4]
 801e0a4:	50a9      	str	r1, [r5, r2]
 801e0a6:	3504      	adds	r5, #4
 801e0a8:	e79a      	b.n	801dfe0 <__multiply+0x7c>
 801e0aa:	3e01      	subs	r6, #1
 801e0ac:	e79c      	b.n	801dfe8 <__multiply+0x84>
 801e0ae:	bf00      	nop
 801e0b0:	08021a5c 	.word	0x08021a5c
 801e0b4:	08021ad0 	.word	0x08021ad0

0801e0b8 <__pow5mult>:
 801e0b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e0bc:	4615      	mov	r5, r2
 801e0be:	f012 0203 	ands.w	r2, r2, #3
 801e0c2:	4606      	mov	r6, r0
 801e0c4:	460f      	mov	r7, r1
 801e0c6:	d007      	beq.n	801e0d8 <__pow5mult+0x20>
 801e0c8:	4c25      	ldr	r4, [pc, #148]	; (801e160 <__pow5mult+0xa8>)
 801e0ca:	3a01      	subs	r2, #1
 801e0cc:	2300      	movs	r3, #0
 801e0ce:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 801e0d2:	f7ff fe9b 	bl	801de0c <__multadd>
 801e0d6:	4607      	mov	r7, r0
 801e0d8:	10ad      	asrs	r5, r5, #2
 801e0da:	d03d      	beq.n	801e158 <__pow5mult+0xa0>
 801e0dc:	6a74      	ldr	r4, [r6, #36]	; 0x24
 801e0de:	b97c      	cbnz	r4, 801e100 <__pow5mult+0x48>
 801e0e0:	2010      	movs	r0, #16
 801e0e2:	f7fd fca1 	bl	801ba28 <malloc>
 801e0e6:	4602      	mov	r2, r0
 801e0e8:	6270      	str	r0, [r6, #36]	; 0x24
 801e0ea:	b928      	cbnz	r0, 801e0f8 <__pow5mult+0x40>
 801e0ec:	4b1d      	ldr	r3, [pc, #116]	; (801e164 <__pow5mult+0xac>)
 801e0ee:	481e      	ldr	r0, [pc, #120]	; (801e168 <__pow5mult+0xb0>)
 801e0f0:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 801e0f4:	f7fd fc26 	bl	801b944 <__assert_func>
 801e0f8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 801e0fc:	6004      	str	r4, [r0, #0]
 801e0fe:	60c4      	str	r4, [r0, #12]
 801e100:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 801e104:	f8d8 4008 	ldr.w	r4, [r8, #8]
 801e108:	b94c      	cbnz	r4, 801e11e <__pow5mult+0x66>
 801e10a:	f240 2171 	movw	r1, #625	; 0x271
 801e10e:	4630      	mov	r0, r6
 801e110:	f7ff ff12 	bl	801df38 <__i2b>
 801e114:	2300      	movs	r3, #0
 801e116:	f8c8 0008 	str.w	r0, [r8, #8]
 801e11a:	4604      	mov	r4, r0
 801e11c:	6003      	str	r3, [r0, #0]
 801e11e:	f04f 0900 	mov.w	r9, #0
 801e122:	07eb      	lsls	r3, r5, #31
 801e124:	d50a      	bpl.n	801e13c <__pow5mult+0x84>
 801e126:	4639      	mov	r1, r7
 801e128:	4622      	mov	r2, r4
 801e12a:	4630      	mov	r0, r6
 801e12c:	f7ff ff1a 	bl	801df64 <__multiply>
 801e130:	4639      	mov	r1, r7
 801e132:	4680      	mov	r8, r0
 801e134:	4630      	mov	r0, r6
 801e136:	f7ff fe47 	bl	801ddc8 <_Bfree>
 801e13a:	4647      	mov	r7, r8
 801e13c:	106d      	asrs	r5, r5, #1
 801e13e:	d00b      	beq.n	801e158 <__pow5mult+0xa0>
 801e140:	6820      	ldr	r0, [r4, #0]
 801e142:	b938      	cbnz	r0, 801e154 <__pow5mult+0x9c>
 801e144:	4622      	mov	r2, r4
 801e146:	4621      	mov	r1, r4
 801e148:	4630      	mov	r0, r6
 801e14a:	f7ff ff0b 	bl	801df64 <__multiply>
 801e14e:	6020      	str	r0, [r4, #0]
 801e150:	f8c0 9000 	str.w	r9, [r0]
 801e154:	4604      	mov	r4, r0
 801e156:	e7e4      	b.n	801e122 <__pow5mult+0x6a>
 801e158:	4638      	mov	r0, r7
 801e15a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e15e:	bf00      	nop
 801e160:	08021c20 	.word	0x08021c20
 801e164:	080219ea 	.word	0x080219ea
 801e168:	08021ad0 	.word	0x08021ad0

0801e16c <__lshift>:
 801e16c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e170:	460c      	mov	r4, r1
 801e172:	6849      	ldr	r1, [r1, #4]
 801e174:	6923      	ldr	r3, [r4, #16]
 801e176:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801e17a:	68a3      	ldr	r3, [r4, #8]
 801e17c:	4607      	mov	r7, r0
 801e17e:	4691      	mov	r9, r2
 801e180:	ea4f 1a62 	mov.w	sl, r2, asr #5
 801e184:	f108 0601 	add.w	r6, r8, #1
 801e188:	42b3      	cmp	r3, r6
 801e18a:	db0b      	blt.n	801e1a4 <__lshift+0x38>
 801e18c:	4638      	mov	r0, r7
 801e18e:	f7ff fddb 	bl	801dd48 <_Balloc>
 801e192:	4605      	mov	r5, r0
 801e194:	b948      	cbnz	r0, 801e1aa <__lshift+0x3e>
 801e196:	4602      	mov	r2, r0
 801e198:	4b2a      	ldr	r3, [pc, #168]	; (801e244 <__lshift+0xd8>)
 801e19a:	482b      	ldr	r0, [pc, #172]	; (801e248 <__lshift+0xdc>)
 801e19c:	f240 11d9 	movw	r1, #473	; 0x1d9
 801e1a0:	f7fd fbd0 	bl	801b944 <__assert_func>
 801e1a4:	3101      	adds	r1, #1
 801e1a6:	005b      	lsls	r3, r3, #1
 801e1a8:	e7ee      	b.n	801e188 <__lshift+0x1c>
 801e1aa:	2300      	movs	r3, #0
 801e1ac:	f100 0114 	add.w	r1, r0, #20
 801e1b0:	f100 0210 	add.w	r2, r0, #16
 801e1b4:	4618      	mov	r0, r3
 801e1b6:	4553      	cmp	r3, sl
 801e1b8:	db37      	blt.n	801e22a <__lshift+0xbe>
 801e1ba:	6920      	ldr	r0, [r4, #16]
 801e1bc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 801e1c0:	f104 0314 	add.w	r3, r4, #20
 801e1c4:	f019 091f 	ands.w	r9, r9, #31
 801e1c8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801e1cc:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 801e1d0:	d02f      	beq.n	801e232 <__lshift+0xc6>
 801e1d2:	f1c9 0e20 	rsb	lr, r9, #32
 801e1d6:	468a      	mov	sl, r1
 801e1d8:	f04f 0c00 	mov.w	ip, #0
 801e1dc:	681a      	ldr	r2, [r3, #0]
 801e1de:	fa02 f209 	lsl.w	r2, r2, r9
 801e1e2:	ea42 020c 	orr.w	r2, r2, ip
 801e1e6:	f84a 2b04 	str.w	r2, [sl], #4
 801e1ea:	f853 2b04 	ldr.w	r2, [r3], #4
 801e1ee:	4298      	cmp	r0, r3
 801e1f0:	fa22 fc0e 	lsr.w	ip, r2, lr
 801e1f4:	d8f2      	bhi.n	801e1dc <__lshift+0x70>
 801e1f6:	1b03      	subs	r3, r0, r4
 801e1f8:	3b15      	subs	r3, #21
 801e1fa:	f023 0303 	bic.w	r3, r3, #3
 801e1fe:	3304      	adds	r3, #4
 801e200:	f104 0215 	add.w	r2, r4, #21
 801e204:	4290      	cmp	r0, r2
 801e206:	bf38      	it	cc
 801e208:	2304      	movcc	r3, #4
 801e20a:	f841 c003 	str.w	ip, [r1, r3]
 801e20e:	f1bc 0f00 	cmp.w	ip, #0
 801e212:	d001      	beq.n	801e218 <__lshift+0xac>
 801e214:	f108 0602 	add.w	r6, r8, #2
 801e218:	3e01      	subs	r6, #1
 801e21a:	4638      	mov	r0, r7
 801e21c:	612e      	str	r6, [r5, #16]
 801e21e:	4621      	mov	r1, r4
 801e220:	f7ff fdd2 	bl	801ddc8 <_Bfree>
 801e224:	4628      	mov	r0, r5
 801e226:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e22a:	f842 0f04 	str.w	r0, [r2, #4]!
 801e22e:	3301      	adds	r3, #1
 801e230:	e7c1      	b.n	801e1b6 <__lshift+0x4a>
 801e232:	3904      	subs	r1, #4
 801e234:	f853 2b04 	ldr.w	r2, [r3], #4
 801e238:	f841 2f04 	str.w	r2, [r1, #4]!
 801e23c:	4298      	cmp	r0, r3
 801e23e:	d8f9      	bhi.n	801e234 <__lshift+0xc8>
 801e240:	e7ea      	b.n	801e218 <__lshift+0xac>
 801e242:	bf00      	nop
 801e244:	08021a5c 	.word	0x08021a5c
 801e248:	08021ad0 	.word	0x08021ad0

0801e24c <__mcmp>:
 801e24c:	b530      	push	{r4, r5, lr}
 801e24e:	6902      	ldr	r2, [r0, #16]
 801e250:	690c      	ldr	r4, [r1, #16]
 801e252:	1b12      	subs	r2, r2, r4
 801e254:	d10e      	bne.n	801e274 <__mcmp+0x28>
 801e256:	f100 0314 	add.w	r3, r0, #20
 801e25a:	3114      	adds	r1, #20
 801e25c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 801e260:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 801e264:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 801e268:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 801e26c:	42a5      	cmp	r5, r4
 801e26e:	d003      	beq.n	801e278 <__mcmp+0x2c>
 801e270:	d305      	bcc.n	801e27e <__mcmp+0x32>
 801e272:	2201      	movs	r2, #1
 801e274:	4610      	mov	r0, r2
 801e276:	bd30      	pop	{r4, r5, pc}
 801e278:	4283      	cmp	r3, r0
 801e27a:	d3f3      	bcc.n	801e264 <__mcmp+0x18>
 801e27c:	e7fa      	b.n	801e274 <__mcmp+0x28>
 801e27e:	f04f 32ff 	mov.w	r2, #4294967295
 801e282:	e7f7      	b.n	801e274 <__mcmp+0x28>

0801e284 <__mdiff>:
 801e284:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e288:	460c      	mov	r4, r1
 801e28a:	4606      	mov	r6, r0
 801e28c:	4611      	mov	r1, r2
 801e28e:	4620      	mov	r0, r4
 801e290:	4690      	mov	r8, r2
 801e292:	f7ff ffdb 	bl	801e24c <__mcmp>
 801e296:	1e05      	subs	r5, r0, #0
 801e298:	d110      	bne.n	801e2bc <__mdiff+0x38>
 801e29a:	4629      	mov	r1, r5
 801e29c:	4630      	mov	r0, r6
 801e29e:	f7ff fd53 	bl	801dd48 <_Balloc>
 801e2a2:	b930      	cbnz	r0, 801e2b2 <__mdiff+0x2e>
 801e2a4:	4b3a      	ldr	r3, [pc, #232]	; (801e390 <__mdiff+0x10c>)
 801e2a6:	4602      	mov	r2, r0
 801e2a8:	f240 2132 	movw	r1, #562	; 0x232
 801e2ac:	4839      	ldr	r0, [pc, #228]	; (801e394 <__mdiff+0x110>)
 801e2ae:	f7fd fb49 	bl	801b944 <__assert_func>
 801e2b2:	2301      	movs	r3, #1
 801e2b4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 801e2b8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e2bc:	bfa4      	itt	ge
 801e2be:	4643      	movge	r3, r8
 801e2c0:	46a0      	movge	r8, r4
 801e2c2:	4630      	mov	r0, r6
 801e2c4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801e2c8:	bfa6      	itte	ge
 801e2ca:	461c      	movge	r4, r3
 801e2cc:	2500      	movge	r5, #0
 801e2ce:	2501      	movlt	r5, #1
 801e2d0:	f7ff fd3a 	bl	801dd48 <_Balloc>
 801e2d4:	b920      	cbnz	r0, 801e2e0 <__mdiff+0x5c>
 801e2d6:	4b2e      	ldr	r3, [pc, #184]	; (801e390 <__mdiff+0x10c>)
 801e2d8:	4602      	mov	r2, r0
 801e2da:	f44f 7110 	mov.w	r1, #576	; 0x240
 801e2de:	e7e5      	b.n	801e2ac <__mdiff+0x28>
 801e2e0:	f8d8 7010 	ldr.w	r7, [r8, #16]
 801e2e4:	6926      	ldr	r6, [r4, #16]
 801e2e6:	60c5      	str	r5, [r0, #12]
 801e2e8:	f104 0914 	add.w	r9, r4, #20
 801e2ec:	f108 0514 	add.w	r5, r8, #20
 801e2f0:	f100 0e14 	add.w	lr, r0, #20
 801e2f4:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 801e2f8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 801e2fc:	f108 0210 	add.w	r2, r8, #16
 801e300:	46f2      	mov	sl, lr
 801e302:	2100      	movs	r1, #0
 801e304:	f859 3b04 	ldr.w	r3, [r9], #4
 801e308:	f852 bf04 	ldr.w	fp, [r2, #4]!
 801e30c:	fa1f f883 	uxth.w	r8, r3
 801e310:	fa11 f18b 	uxtah	r1, r1, fp
 801e314:	0c1b      	lsrs	r3, r3, #16
 801e316:	eba1 0808 	sub.w	r8, r1, r8
 801e31a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 801e31e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 801e322:	fa1f f888 	uxth.w	r8, r8
 801e326:	1419      	asrs	r1, r3, #16
 801e328:	454e      	cmp	r6, r9
 801e32a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 801e32e:	f84a 3b04 	str.w	r3, [sl], #4
 801e332:	d8e7      	bhi.n	801e304 <__mdiff+0x80>
 801e334:	1b33      	subs	r3, r6, r4
 801e336:	3b15      	subs	r3, #21
 801e338:	f023 0303 	bic.w	r3, r3, #3
 801e33c:	3304      	adds	r3, #4
 801e33e:	3415      	adds	r4, #21
 801e340:	42a6      	cmp	r6, r4
 801e342:	bf38      	it	cc
 801e344:	2304      	movcc	r3, #4
 801e346:	441d      	add	r5, r3
 801e348:	4473      	add	r3, lr
 801e34a:	469e      	mov	lr, r3
 801e34c:	462e      	mov	r6, r5
 801e34e:	4566      	cmp	r6, ip
 801e350:	d30e      	bcc.n	801e370 <__mdiff+0xec>
 801e352:	f10c 0203 	add.w	r2, ip, #3
 801e356:	1b52      	subs	r2, r2, r5
 801e358:	f022 0203 	bic.w	r2, r2, #3
 801e35c:	3d03      	subs	r5, #3
 801e35e:	45ac      	cmp	ip, r5
 801e360:	bf38      	it	cc
 801e362:	2200      	movcc	r2, #0
 801e364:	441a      	add	r2, r3
 801e366:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 801e36a:	b17b      	cbz	r3, 801e38c <__mdiff+0x108>
 801e36c:	6107      	str	r7, [r0, #16]
 801e36e:	e7a3      	b.n	801e2b8 <__mdiff+0x34>
 801e370:	f856 8b04 	ldr.w	r8, [r6], #4
 801e374:	fa11 f288 	uxtah	r2, r1, r8
 801e378:	1414      	asrs	r4, r2, #16
 801e37a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 801e37e:	b292      	uxth	r2, r2
 801e380:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 801e384:	f84e 2b04 	str.w	r2, [lr], #4
 801e388:	1421      	asrs	r1, r4, #16
 801e38a:	e7e0      	b.n	801e34e <__mdiff+0xca>
 801e38c:	3f01      	subs	r7, #1
 801e38e:	e7ea      	b.n	801e366 <__mdiff+0xe2>
 801e390:	08021a5c 	.word	0x08021a5c
 801e394:	08021ad0 	.word	0x08021ad0

0801e398 <__d2b>:
 801e398:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801e39c:	4689      	mov	r9, r1
 801e39e:	2101      	movs	r1, #1
 801e3a0:	ec57 6b10 	vmov	r6, r7, d0
 801e3a4:	4690      	mov	r8, r2
 801e3a6:	f7ff fccf 	bl	801dd48 <_Balloc>
 801e3aa:	4604      	mov	r4, r0
 801e3ac:	b930      	cbnz	r0, 801e3bc <__d2b+0x24>
 801e3ae:	4602      	mov	r2, r0
 801e3b0:	4b25      	ldr	r3, [pc, #148]	; (801e448 <__d2b+0xb0>)
 801e3b2:	4826      	ldr	r0, [pc, #152]	; (801e44c <__d2b+0xb4>)
 801e3b4:	f240 310a 	movw	r1, #778	; 0x30a
 801e3b8:	f7fd fac4 	bl	801b944 <__assert_func>
 801e3bc:	f3c7 550a 	ubfx	r5, r7, #20, #11
 801e3c0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 801e3c4:	bb35      	cbnz	r5, 801e414 <__d2b+0x7c>
 801e3c6:	2e00      	cmp	r6, #0
 801e3c8:	9301      	str	r3, [sp, #4]
 801e3ca:	d028      	beq.n	801e41e <__d2b+0x86>
 801e3cc:	4668      	mov	r0, sp
 801e3ce:	9600      	str	r6, [sp, #0]
 801e3d0:	f7ff fd82 	bl	801ded8 <__lo0bits>
 801e3d4:	9900      	ldr	r1, [sp, #0]
 801e3d6:	b300      	cbz	r0, 801e41a <__d2b+0x82>
 801e3d8:	9a01      	ldr	r2, [sp, #4]
 801e3da:	f1c0 0320 	rsb	r3, r0, #32
 801e3de:	fa02 f303 	lsl.w	r3, r2, r3
 801e3e2:	430b      	orrs	r3, r1
 801e3e4:	40c2      	lsrs	r2, r0
 801e3e6:	6163      	str	r3, [r4, #20]
 801e3e8:	9201      	str	r2, [sp, #4]
 801e3ea:	9b01      	ldr	r3, [sp, #4]
 801e3ec:	61a3      	str	r3, [r4, #24]
 801e3ee:	2b00      	cmp	r3, #0
 801e3f0:	bf14      	ite	ne
 801e3f2:	2202      	movne	r2, #2
 801e3f4:	2201      	moveq	r2, #1
 801e3f6:	6122      	str	r2, [r4, #16]
 801e3f8:	b1d5      	cbz	r5, 801e430 <__d2b+0x98>
 801e3fa:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 801e3fe:	4405      	add	r5, r0
 801e400:	f8c9 5000 	str.w	r5, [r9]
 801e404:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 801e408:	f8c8 0000 	str.w	r0, [r8]
 801e40c:	4620      	mov	r0, r4
 801e40e:	b003      	add	sp, #12
 801e410:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e414:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801e418:	e7d5      	b.n	801e3c6 <__d2b+0x2e>
 801e41a:	6161      	str	r1, [r4, #20]
 801e41c:	e7e5      	b.n	801e3ea <__d2b+0x52>
 801e41e:	a801      	add	r0, sp, #4
 801e420:	f7ff fd5a 	bl	801ded8 <__lo0bits>
 801e424:	9b01      	ldr	r3, [sp, #4]
 801e426:	6163      	str	r3, [r4, #20]
 801e428:	2201      	movs	r2, #1
 801e42a:	6122      	str	r2, [r4, #16]
 801e42c:	3020      	adds	r0, #32
 801e42e:	e7e3      	b.n	801e3f8 <__d2b+0x60>
 801e430:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e434:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 801e438:	f8c9 0000 	str.w	r0, [r9]
 801e43c:	6918      	ldr	r0, [r3, #16]
 801e43e:	f7ff fd2b 	bl	801de98 <__hi0bits>
 801e442:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 801e446:	e7df      	b.n	801e408 <__d2b+0x70>
 801e448:	08021a5c 	.word	0x08021a5c
 801e44c:	08021ad0 	.word	0x08021ad0

0801e450 <_calloc_r>:
 801e450:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801e452:	fba1 2402 	umull	r2, r4, r1, r2
 801e456:	b94c      	cbnz	r4, 801e46c <_calloc_r+0x1c>
 801e458:	4611      	mov	r1, r2
 801e45a:	9201      	str	r2, [sp, #4]
 801e45c:	f7fd fb76 	bl	801bb4c <_malloc_r>
 801e460:	9a01      	ldr	r2, [sp, #4]
 801e462:	4605      	mov	r5, r0
 801e464:	b930      	cbnz	r0, 801e474 <_calloc_r+0x24>
 801e466:	4628      	mov	r0, r5
 801e468:	b003      	add	sp, #12
 801e46a:	bd30      	pop	{r4, r5, pc}
 801e46c:	220c      	movs	r2, #12
 801e46e:	6002      	str	r2, [r0, #0]
 801e470:	2500      	movs	r5, #0
 801e472:	e7f8      	b.n	801e466 <_calloc_r+0x16>
 801e474:	4621      	mov	r1, r4
 801e476:	f7fd faf5 	bl	801ba64 <memset>
 801e47a:	e7f4      	b.n	801e466 <_calloc_r+0x16>

0801e47c <__sread>:
 801e47c:	b510      	push	{r4, lr}
 801e47e:	460c      	mov	r4, r1
 801e480:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e484:	f000 f8a6 	bl	801e5d4 <_read_r>
 801e488:	2800      	cmp	r0, #0
 801e48a:	bfab      	itete	ge
 801e48c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801e48e:	89a3      	ldrhlt	r3, [r4, #12]
 801e490:	181b      	addge	r3, r3, r0
 801e492:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801e496:	bfac      	ite	ge
 801e498:	6563      	strge	r3, [r4, #84]	; 0x54
 801e49a:	81a3      	strhlt	r3, [r4, #12]
 801e49c:	bd10      	pop	{r4, pc}

0801e49e <__swrite>:
 801e49e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e4a2:	461f      	mov	r7, r3
 801e4a4:	898b      	ldrh	r3, [r1, #12]
 801e4a6:	05db      	lsls	r3, r3, #23
 801e4a8:	4605      	mov	r5, r0
 801e4aa:	460c      	mov	r4, r1
 801e4ac:	4616      	mov	r6, r2
 801e4ae:	d505      	bpl.n	801e4bc <__swrite+0x1e>
 801e4b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e4b4:	2302      	movs	r3, #2
 801e4b6:	2200      	movs	r2, #0
 801e4b8:	f000 f868 	bl	801e58c <_lseek_r>
 801e4bc:	89a3      	ldrh	r3, [r4, #12]
 801e4be:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e4c2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801e4c6:	81a3      	strh	r3, [r4, #12]
 801e4c8:	4632      	mov	r2, r6
 801e4ca:	463b      	mov	r3, r7
 801e4cc:	4628      	mov	r0, r5
 801e4ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801e4d2:	f000 b817 	b.w	801e504 <_write_r>

0801e4d6 <__sseek>:
 801e4d6:	b510      	push	{r4, lr}
 801e4d8:	460c      	mov	r4, r1
 801e4da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e4de:	f000 f855 	bl	801e58c <_lseek_r>
 801e4e2:	1c43      	adds	r3, r0, #1
 801e4e4:	89a3      	ldrh	r3, [r4, #12]
 801e4e6:	bf15      	itete	ne
 801e4e8:	6560      	strne	r0, [r4, #84]	; 0x54
 801e4ea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801e4ee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801e4f2:	81a3      	strheq	r3, [r4, #12]
 801e4f4:	bf18      	it	ne
 801e4f6:	81a3      	strhne	r3, [r4, #12]
 801e4f8:	bd10      	pop	{r4, pc}

0801e4fa <__sclose>:
 801e4fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e4fe:	f000 b813 	b.w	801e528 <_close_r>
	...

0801e504 <_write_r>:
 801e504:	b538      	push	{r3, r4, r5, lr}
 801e506:	4d07      	ldr	r5, [pc, #28]	; (801e524 <_write_r+0x20>)
 801e508:	4604      	mov	r4, r0
 801e50a:	4608      	mov	r0, r1
 801e50c:	4611      	mov	r1, r2
 801e50e:	2200      	movs	r2, #0
 801e510:	602a      	str	r2, [r5, #0]
 801e512:	461a      	mov	r2, r3
 801e514:	f7e4 f9e5 	bl	80028e2 <_write>
 801e518:	1c43      	adds	r3, r0, #1
 801e51a:	d102      	bne.n	801e522 <_write_r+0x1e>
 801e51c:	682b      	ldr	r3, [r5, #0]
 801e51e:	b103      	cbz	r3, 801e522 <_write_r+0x1e>
 801e520:	6023      	str	r3, [r4, #0]
 801e522:	bd38      	pop	{r3, r4, r5, pc}
 801e524:	20001a64 	.word	0x20001a64

0801e528 <_close_r>:
 801e528:	b538      	push	{r3, r4, r5, lr}
 801e52a:	4d06      	ldr	r5, [pc, #24]	; (801e544 <_close_r+0x1c>)
 801e52c:	2300      	movs	r3, #0
 801e52e:	4604      	mov	r4, r0
 801e530:	4608      	mov	r0, r1
 801e532:	602b      	str	r3, [r5, #0]
 801e534:	f7e4 f9f1 	bl	800291a <_close>
 801e538:	1c43      	adds	r3, r0, #1
 801e53a:	d102      	bne.n	801e542 <_close_r+0x1a>
 801e53c:	682b      	ldr	r3, [r5, #0]
 801e53e:	b103      	cbz	r3, 801e542 <_close_r+0x1a>
 801e540:	6023      	str	r3, [r4, #0]
 801e542:	bd38      	pop	{r3, r4, r5, pc}
 801e544:	20001a64 	.word	0x20001a64

0801e548 <_fstat_r>:
 801e548:	b538      	push	{r3, r4, r5, lr}
 801e54a:	4d07      	ldr	r5, [pc, #28]	; (801e568 <_fstat_r+0x20>)
 801e54c:	2300      	movs	r3, #0
 801e54e:	4604      	mov	r4, r0
 801e550:	4608      	mov	r0, r1
 801e552:	4611      	mov	r1, r2
 801e554:	602b      	str	r3, [r5, #0]
 801e556:	f7e4 f9ec 	bl	8002932 <_fstat>
 801e55a:	1c43      	adds	r3, r0, #1
 801e55c:	d102      	bne.n	801e564 <_fstat_r+0x1c>
 801e55e:	682b      	ldr	r3, [r5, #0]
 801e560:	b103      	cbz	r3, 801e564 <_fstat_r+0x1c>
 801e562:	6023      	str	r3, [r4, #0]
 801e564:	bd38      	pop	{r3, r4, r5, pc}
 801e566:	bf00      	nop
 801e568:	20001a64 	.word	0x20001a64

0801e56c <_isatty_r>:
 801e56c:	b538      	push	{r3, r4, r5, lr}
 801e56e:	4d06      	ldr	r5, [pc, #24]	; (801e588 <_isatty_r+0x1c>)
 801e570:	2300      	movs	r3, #0
 801e572:	4604      	mov	r4, r0
 801e574:	4608      	mov	r0, r1
 801e576:	602b      	str	r3, [r5, #0]
 801e578:	f7e4 f9eb 	bl	8002952 <_isatty>
 801e57c:	1c43      	adds	r3, r0, #1
 801e57e:	d102      	bne.n	801e586 <_isatty_r+0x1a>
 801e580:	682b      	ldr	r3, [r5, #0]
 801e582:	b103      	cbz	r3, 801e586 <_isatty_r+0x1a>
 801e584:	6023      	str	r3, [r4, #0]
 801e586:	bd38      	pop	{r3, r4, r5, pc}
 801e588:	20001a64 	.word	0x20001a64

0801e58c <_lseek_r>:
 801e58c:	b538      	push	{r3, r4, r5, lr}
 801e58e:	4d07      	ldr	r5, [pc, #28]	; (801e5ac <_lseek_r+0x20>)
 801e590:	4604      	mov	r4, r0
 801e592:	4608      	mov	r0, r1
 801e594:	4611      	mov	r1, r2
 801e596:	2200      	movs	r2, #0
 801e598:	602a      	str	r2, [r5, #0]
 801e59a:	461a      	mov	r2, r3
 801e59c:	f7e4 f9e4 	bl	8002968 <_lseek>
 801e5a0:	1c43      	adds	r3, r0, #1
 801e5a2:	d102      	bne.n	801e5aa <_lseek_r+0x1e>
 801e5a4:	682b      	ldr	r3, [r5, #0]
 801e5a6:	b103      	cbz	r3, 801e5aa <_lseek_r+0x1e>
 801e5a8:	6023      	str	r3, [r4, #0]
 801e5aa:	bd38      	pop	{r3, r4, r5, pc}
 801e5ac:	20001a64 	.word	0x20001a64

0801e5b0 <__ascii_mbtowc>:
 801e5b0:	b082      	sub	sp, #8
 801e5b2:	b901      	cbnz	r1, 801e5b6 <__ascii_mbtowc+0x6>
 801e5b4:	a901      	add	r1, sp, #4
 801e5b6:	b142      	cbz	r2, 801e5ca <__ascii_mbtowc+0x1a>
 801e5b8:	b14b      	cbz	r3, 801e5ce <__ascii_mbtowc+0x1e>
 801e5ba:	7813      	ldrb	r3, [r2, #0]
 801e5bc:	600b      	str	r3, [r1, #0]
 801e5be:	7812      	ldrb	r2, [r2, #0]
 801e5c0:	1e10      	subs	r0, r2, #0
 801e5c2:	bf18      	it	ne
 801e5c4:	2001      	movne	r0, #1
 801e5c6:	b002      	add	sp, #8
 801e5c8:	4770      	bx	lr
 801e5ca:	4610      	mov	r0, r2
 801e5cc:	e7fb      	b.n	801e5c6 <__ascii_mbtowc+0x16>
 801e5ce:	f06f 0001 	mvn.w	r0, #1
 801e5d2:	e7f8      	b.n	801e5c6 <__ascii_mbtowc+0x16>

0801e5d4 <_read_r>:
 801e5d4:	b538      	push	{r3, r4, r5, lr}
 801e5d6:	4d07      	ldr	r5, [pc, #28]	; (801e5f4 <_read_r+0x20>)
 801e5d8:	4604      	mov	r4, r0
 801e5da:	4608      	mov	r0, r1
 801e5dc:	4611      	mov	r1, r2
 801e5de:	2200      	movs	r2, #0
 801e5e0:	602a      	str	r2, [r5, #0]
 801e5e2:	461a      	mov	r2, r3
 801e5e4:	f7e4 f960 	bl	80028a8 <_read>
 801e5e8:	1c43      	adds	r3, r0, #1
 801e5ea:	d102      	bne.n	801e5f2 <_read_r+0x1e>
 801e5ec:	682b      	ldr	r3, [r5, #0]
 801e5ee:	b103      	cbz	r3, 801e5f2 <_read_r+0x1e>
 801e5f0:	6023      	str	r3, [r4, #0]
 801e5f2:	bd38      	pop	{r3, r4, r5, pc}
 801e5f4:	20001a64 	.word	0x20001a64

0801e5f8 <__ascii_wctomb>:
 801e5f8:	b149      	cbz	r1, 801e60e <__ascii_wctomb+0x16>
 801e5fa:	2aff      	cmp	r2, #255	; 0xff
 801e5fc:	bf85      	ittet	hi
 801e5fe:	238a      	movhi	r3, #138	; 0x8a
 801e600:	6003      	strhi	r3, [r0, #0]
 801e602:	700a      	strbls	r2, [r1, #0]
 801e604:	f04f 30ff 	movhi.w	r0, #4294967295
 801e608:	bf98      	it	ls
 801e60a:	2001      	movls	r0, #1
 801e60c:	4770      	bx	lr
 801e60e:	4608      	mov	r0, r1
 801e610:	4770      	bx	lr
	...

0801e614 <_init>:
 801e614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e616:	bf00      	nop
 801e618:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e61a:	bc08      	pop	{r3}
 801e61c:	469e      	mov	lr, r3
 801e61e:	4770      	bx	lr

0801e620 <_fini>:
 801e620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e622:	bf00      	nop
 801e624:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e626:	bc08      	pop	{r3}
 801e628:	469e      	mov	lr, r3
 801e62a:	4770      	bx	lr
