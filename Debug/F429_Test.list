
F429_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001e4c4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003630  0801e678  0801e678  0002e678  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000e92  08021ca8  08021ca8  00031ca8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 ExtFlashSection 00009800  08022b3c  08022b3c  00032b3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000000f4  0802c33c  0802c33c  0003c33c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  0802c430  0802c430  00040270  2**0
                  CONTENTS
  7 .ARM          00000008  0802c430  0802c430  0003c430  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  0802c438  0802c438  00040270  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  0802c438  0802c438  0003c438  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  0802c44c  0802c44c  0003c44c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000270  20000000  0802c454  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          000017f4  20000270  0802c6c4  00040270  2**2
                  ALLOC
 13 ._user_heap_stack 00000604  20001a64  0802c6c4  00041a64  2**0
                  ALLOC
 14 .ARM.attributes 00000030  00000000  00000000  00040270  2**0
                  CONTENTS, READONLY
 15 .debug_info   0003da13  00000000  00000000  000402a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 0000b35f  00000000  00000000  0007dcb3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 000028c0  00000000  00000000  00089018  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_ranges 00002520  00000000  00000000  0008b8d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  0002e1a8  00000000  00000000  0008ddf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line   0002c48e  00000000  00000000  000bbfa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    000f5dfe  00000000  00000000  000e842e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .comment      000000cf  00000000  00000000  001de22c  2**0
                  CONTENTS, READONLY
 23 .debug_frame  0000bbac  00000000  00000000  001de2fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000270 	.word	0x20000270
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801e65c 	.word	0x0801e65c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000274 	.word	0x20000274
 80001ec:	0801e65c 	.word	0x0801e65c

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_uldivmod>:
 8000bc8:	b953      	cbnz	r3, 8000be0 <__aeabi_uldivmod+0x18>
 8000bca:	b94a      	cbnz	r2, 8000be0 <__aeabi_uldivmod+0x18>
 8000bcc:	2900      	cmp	r1, #0
 8000bce:	bf08      	it	eq
 8000bd0:	2800      	cmpeq	r0, #0
 8000bd2:	bf1c      	itt	ne
 8000bd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bdc:	f000 b974 	b.w	8000ec8 <__aeabi_idiv0>
 8000be0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000be4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be8:	f000 f806 	bl	8000bf8 <__udivmoddi4>
 8000bec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bf4:	b004      	add	sp, #16
 8000bf6:	4770      	bx	lr

08000bf8 <__udivmoddi4>:
 8000bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bfc:	9d08      	ldr	r5, [sp, #32]
 8000bfe:	4604      	mov	r4, r0
 8000c00:	468e      	mov	lr, r1
 8000c02:	2b00      	cmp	r3, #0
 8000c04:	d14d      	bne.n	8000ca2 <__udivmoddi4+0xaa>
 8000c06:	428a      	cmp	r2, r1
 8000c08:	4694      	mov	ip, r2
 8000c0a:	d969      	bls.n	8000ce0 <__udivmoddi4+0xe8>
 8000c0c:	fab2 f282 	clz	r2, r2
 8000c10:	b152      	cbz	r2, 8000c28 <__udivmoddi4+0x30>
 8000c12:	fa01 f302 	lsl.w	r3, r1, r2
 8000c16:	f1c2 0120 	rsb	r1, r2, #32
 8000c1a:	fa20 f101 	lsr.w	r1, r0, r1
 8000c1e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c22:	ea41 0e03 	orr.w	lr, r1, r3
 8000c26:	4094      	lsls	r4, r2
 8000c28:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000c2c:	0c21      	lsrs	r1, r4, #16
 8000c2e:	fbbe f6f8 	udiv	r6, lr, r8
 8000c32:	fa1f f78c 	uxth.w	r7, ip
 8000c36:	fb08 e316 	mls	r3, r8, r6, lr
 8000c3a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c3e:	fb06 f107 	mul.w	r1, r6, r7
 8000c42:	4299      	cmp	r1, r3
 8000c44:	d90a      	bls.n	8000c5c <__udivmoddi4+0x64>
 8000c46:	eb1c 0303 	adds.w	r3, ip, r3
 8000c4a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c4e:	f080 811f 	bcs.w	8000e90 <__udivmoddi4+0x298>
 8000c52:	4299      	cmp	r1, r3
 8000c54:	f240 811c 	bls.w	8000e90 <__udivmoddi4+0x298>
 8000c58:	3e02      	subs	r6, #2
 8000c5a:	4463      	add	r3, ip
 8000c5c:	1a5b      	subs	r3, r3, r1
 8000c5e:	b2a4      	uxth	r4, r4
 8000c60:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c64:	fb08 3310 	mls	r3, r8, r0, r3
 8000c68:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c6c:	fb00 f707 	mul.w	r7, r0, r7
 8000c70:	42a7      	cmp	r7, r4
 8000c72:	d90a      	bls.n	8000c8a <__udivmoddi4+0x92>
 8000c74:	eb1c 0404 	adds.w	r4, ip, r4
 8000c78:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c7c:	f080 810a 	bcs.w	8000e94 <__udivmoddi4+0x29c>
 8000c80:	42a7      	cmp	r7, r4
 8000c82:	f240 8107 	bls.w	8000e94 <__udivmoddi4+0x29c>
 8000c86:	4464      	add	r4, ip
 8000c88:	3802      	subs	r0, #2
 8000c8a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c8e:	1be4      	subs	r4, r4, r7
 8000c90:	2600      	movs	r6, #0
 8000c92:	b11d      	cbz	r5, 8000c9c <__udivmoddi4+0xa4>
 8000c94:	40d4      	lsrs	r4, r2
 8000c96:	2300      	movs	r3, #0
 8000c98:	e9c5 4300 	strd	r4, r3, [r5]
 8000c9c:	4631      	mov	r1, r6
 8000c9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca2:	428b      	cmp	r3, r1
 8000ca4:	d909      	bls.n	8000cba <__udivmoddi4+0xc2>
 8000ca6:	2d00      	cmp	r5, #0
 8000ca8:	f000 80ef 	beq.w	8000e8a <__udivmoddi4+0x292>
 8000cac:	2600      	movs	r6, #0
 8000cae:	e9c5 0100 	strd	r0, r1, [r5]
 8000cb2:	4630      	mov	r0, r6
 8000cb4:	4631      	mov	r1, r6
 8000cb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cba:	fab3 f683 	clz	r6, r3
 8000cbe:	2e00      	cmp	r6, #0
 8000cc0:	d14a      	bne.n	8000d58 <__udivmoddi4+0x160>
 8000cc2:	428b      	cmp	r3, r1
 8000cc4:	d302      	bcc.n	8000ccc <__udivmoddi4+0xd4>
 8000cc6:	4282      	cmp	r2, r0
 8000cc8:	f200 80f9 	bhi.w	8000ebe <__udivmoddi4+0x2c6>
 8000ccc:	1a84      	subs	r4, r0, r2
 8000cce:	eb61 0303 	sbc.w	r3, r1, r3
 8000cd2:	2001      	movs	r0, #1
 8000cd4:	469e      	mov	lr, r3
 8000cd6:	2d00      	cmp	r5, #0
 8000cd8:	d0e0      	beq.n	8000c9c <__udivmoddi4+0xa4>
 8000cda:	e9c5 4e00 	strd	r4, lr, [r5]
 8000cde:	e7dd      	b.n	8000c9c <__udivmoddi4+0xa4>
 8000ce0:	b902      	cbnz	r2, 8000ce4 <__udivmoddi4+0xec>
 8000ce2:	deff      	udf	#255	; 0xff
 8000ce4:	fab2 f282 	clz	r2, r2
 8000ce8:	2a00      	cmp	r2, #0
 8000cea:	f040 8092 	bne.w	8000e12 <__udivmoddi4+0x21a>
 8000cee:	eba1 010c 	sub.w	r1, r1, ip
 8000cf2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cf6:	fa1f fe8c 	uxth.w	lr, ip
 8000cfa:	2601      	movs	r6, #1
 8000cfc:	0c20      	lsrs	r0, r4, #16
 8000cfe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000d02:	fb07 1113 	mls	r1, r7, r3, r1
 8000d06:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d0a:	fb0e f003 	mul.w	r0, lr, r3
 8000d0e:	4288      	cmp	r0, r1
 8000d10:	d908      	bls.n	8000d24 <__udivmoddi4+0x12c>
 8000d12:	eb1c 0101 	adds.w	r1, ip, r1
 8000d16:	f103 38ff 	add.w	r8, r3, #4294967295
 8000d1a:	d202      	bcs.n	8000d22 <__udivmoddi4+0x12a>
 8000d1c:	4288      	cmp	r0, r1
 8000d1e:	f200 80cb 	bhi.w	8000eb8 <__udivmoddi4+0x2c0>
 8000d22:	4643      	mov	r3, r8
 8000d24:	1a09      	subs	r1, r1, r0
 8000d26:	b2a4      	uxth	r4, r4
 8000d28:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d2c:	fb07 1110 	mls	r1, r7, r0, r1
 8000d30:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000d34:	fb0e fe00 	mul.w	lr, lr, r0
 8000d38:	45a6      	cmp	lr, r4
 8000d3a:	d908      	bls.n	8000d4e <__udivmoddi4+0x156>
 8000d3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000d40:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d44:	d202      	bcs.n	8000d4c <__udivmoddi4+0x154>
 8000d46:	45a6      	cmp	lr, r4
 8000d48:	f200 80bb 	bhi.w	8000ec2 <__udivmoddi4+0x2ca>
 8000d4c:	4608      	mov	r0, r1
 8000d4e:	eba4 040e 	sub.w	r4, r4, lr
 8000d52:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d56:	e79c      	b.n	8000c92 <__udivmoddi4+0x9a>
 8000d58:	f1c6 0720 	rsb	r7, r6, #32
 8000d5c:	40b3      	lsls	r3, r6
 8000d5e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d62:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d66:	fa20 f407 	lsr.w	r4, r0, r7
 8000d6a:	fa01 f306 	lsl.w	r3, r1, r6
 8000d6e:	431c      	orrs	r4, r3
 8000d70:	40f9      	lsrs	r1, r7
 8000d72:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d76:	fa00 f306 	lsl.w	r3, r0, r6
 8000d7a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000d7e:	0c20      	lsrs	r0, r4, #16
 8000d80:	fa1f fe8c 	uxth.w	lr, ip
 8000d84:	fb09 1118 	mls	r1, r9, r8, r1
 8000d88:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d8c:	fb08 f00e 	mul.w	r0, r8, lr
 8000d90:	4288      	cmp	r0, r1
 8000d92:	fa02 f206 	lsl.w	r2, r2, r6
 8000d96:	d90b      	bls.n	8000db0 <__udivmoddi4+0x1b8>
 8000d98:	eb1c 0101 	adds.w	r1, ip, r1
 8000d9c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000da0:	f080 8088 	bcs.w	8000eb4 <__udivmoddi4+0x2bc>
 8000da4:	4288      	cmp	r0, r1
 8000da6:	f240 8085 	bls.w	8000eb4 <__udivmoddi4+0x2bc>
 8000daa:	f1a8 0802 	sub.w	r8, r8, #2
 8000dae:	4461      	add	r1, ip
 8000db0:	1a09      	subs	r1, r1, r0
 8000db2:	b2a4      	uxth	r4, r4
 8000db4:	fbb1 f0f9 	udiv	r0, r1, r9
 8000db8:	fb09 1110 	mls	r1, r9, r0, r1
 8000dbc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000dc0:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dc4:	458e      	cmp	lr, r1
 8000dc6:	d908      	bls.n	8000dda <__udivmoddi4+0x1e2>
 8000dc8:	eb1c 0101 	adds.w	r1, ip, r1
 8000dcc:	f100 34ff 	add.w	r4, r0, #4294967295
 8000dd0:	d26c      	bcs.n	8000eac <__udivmoddi4+0x2b4>
 8000dd2:	458e      	cmp	lr, r1
 8000dd4:	d96a      	bls.n	8000eac <__udivmoddi4+0x2b4>
 8000dd6:	3802      	subs	r0, #2
 8000dd8:	4461      	add	r1, ip
 8000dda:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000dde:	fba0 9402 	umull	r9, r4, r0, r2
 8000de2:	eba1 010e 	sub.w	r1, r1, lr
 8000de6:	42a1      	cmp	r1, r4
 8000de8:	46c8      	mov	r8, r9
 8000dea:	46a6      	mov	lr, r4
 8000dec:	d356      	bcc.n	8000e9c <__udivmoddi4+0x2a4>
 8000dee:	d053      	beq.n	8000e98 <__udivmoddi4+0x2a0>
 8000df0:	b15d      	cbz	r5, 8000e0a <__udivmoddi4+0x212>
 8000df2:	ebb3 0208 	subs.w	r2, r3, r8
 8000df6:	eb61 010e 	sbc.w	r1, r1, lr
 8000dfa:	fa01 f707 	lsl.w	r7, r1, r7
 8000dfe:	fa22 f306 	lsr.w	r3, r2, r6
 8000e02:	40f1      	lsrs	r1, r6
 8000e04:	431f      	orrs	r7, r3
 8000e06:	e9c5 7100 	strd	r7, r1, [r5]
 8000e0a:	2600      	movs	r6, #0
 8000e0c:	4631      	mov	r1, r6
 8000e0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e12:	f1c2 0320 	rsb	r3, r2, #32
 8000e16:	40d8      	lsrs	r0, r3
 8000e18:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e1c:	fa21 f303 	lsr.w	r3, r1, r3
 8000e20:	4091      	lsls	r1, r2
 8000e22:	4301      	orrs	r1, r0
 8000e24:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e28:	fa1f fe8c 	uxth.w	lr, ip
 8000e2c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000e30:	fb07 3610 	mls	r6, r7, r0, r3
 8000e34:	0c0b      	lsrs	r3, r1, #16
 8000e36:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000e3a:	fb00 f60e 	mul.w	r6, r0, lr
 8000e3e:	429e      	cmp	r6, r3
 8000e40:	fa04 f402 	lsl.w	r4, r4, r2
 8000e44:	d908      	bls.n	8000e58 <__udivmoddi4+0x260>
 8000e46:	eb1c 0303 	adds.w	r3, ip, r3
 8000e4a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e4e:	d22f      	bcs.n	8000eb0 <__udivmoddi4+0x2b8>
 8000e50:	429e      	cmp	r6, r3
 8000e52:	d92d      	bls.n	8000eb0 <__udivmoddi4+0x2b8>
 8000e54:	3802      	subs	r0, #2
 8000e56:	4463      	add	r3, ip
 8000e58:	1b9b      	subs	r3, r3, r6
 8000e5a:	b289      	uxth	r1, r1
 8000e5c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e60:	fb07 3316 	mls	r3, r7, r6, r3
 8000e64:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e68:	fb06 f30e 	mul.w	r3, r6, lr
 8000e6c:	428b      	cmp	r3, r1
 8000e6e:	d908      	bls.n	8000e82 <__udivmoddi4+0x28a>
 8000e70:	eb1c 0101 	adds.w	r1, ip, r1
 8000e74:	f106 38ff 	add.w	r8, r6, #4294967295
 8000e78:	d216      	bcs.n	8000ea8 <__udivmoddi4+0x2b0>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d914      	bls.n	8000ea8 <__udivmoddi4+0x2b0>
 8000e7e:	3e02      	subs	r6, #2
 8000e80:	4461      	add	r1, ip
 8000e82:	1ac9      	subs	r1, r1, r3
 8000e84:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000e88:	e738      	b.n	8000cfc <__udivmoddi4+0x104>
 8000e8a:	462e      	mov	r6, r5
 8000e8c:	4628      	mov	r0, r5
 8000e8e:	e705      	b.n	8000c9c <__udivmoddi4+0xa4>
 8000e90:	4606      	mov	r6, r0
 8000e92:	e6e3      	b.n	8000c5c <__udivmoddi4+0x64>
 8000e94:	4618      	mov	r0, r3
 8000e96:	e6f8      	b.n	8000c8a <__udivmoddi4+0x92>
 8000e98:	454b      	cmp	r3, r9
 8000e9a:	d2a9      	bcs.n	8000df0 <__udivmoddi4+0x1f8>
 8000e9c:	ebb9 0802 	subs.w	r8, r9, r2
 8000ea0:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000ea4:	3801      	subs	r0, #1
 8000ea6:	e7a3      	b.n	8000df0 <__udivmoddi4+0x1f8>
 8000ea8:	4646      	mov	r6, r8
 8000eaa:	e7ea      	b.n	8000e82 <__udivmoddi4+0x28a>
 8000eac:	4620      	mov	r0, r4
 8000eae:	e794      	b.n	8000dda <__udivmoddi4+0x1e2>
 8000eb0:	4640      	mov	r0, r8
 8000eb2:	e7d1      	b.n	8000e58 <__udivmoddi4+0x260>
 8000eb4:	46d0      	mov	r8, sl
 8000eb6:	e77b      	b.n	8000db0 <__udivmoddi4+0x1b8>
 8000eb8:	3b02      	subs	r3, #2
 8000eba:	4461      	add	r1, ip
 8000ebc:	e732      	b.n	8000d24 <__udivmoddi4+0x12c>
 8000ebe:	4630      	mov	r0, r6
 8000ec0:	e709      	b.n	8000cd6 <__udivmoddi4+0xde>
 8000ec2:	4464      	add	r4, ip
 8000ec4:	3802      	subs	r0, #2
 8000ec6:	e742      	b.n	8000d4e <__udivmoddi4+0x156>

08000ec8 <__aeabi_idiv0>:
 8000ec8:	4770      	bx	lr
 8000eca:	bf00      	nop

08000ecc <line_append>:
uint32_t battery_adc = 0;
static float battery_voltage = 0;

//Funkcja dodająca kolejne przychodzące znaki jednej linii do bufora
void line_append(uint8_t value)
{
 8000ecc:	b590      	push	{r4, r7, lr}
 8000ece:	b087      	sub	sp, #28
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	4603      	mov	r3, r0
 8000ed4:	71fb      	strb	r3, [r7, #7]
	//odebrano znak końca linii
	if (value == '\r' || value == '\n')
 8000ed6:	79fb      	ldrb	r3, [r7, #7]
 8000ed8:	2b0d      	cmp	r3, #13
 8000eda:	d002      	beq.n	8000ee2 <line_append+0x16>
 8000edc:	79fb      	ldrb	r3, [r7, #7]
 8000ede:	2b0a      	cmp	r3, #10
 8000ee0:	d159      	bne.n	8000f96 <line_append+0xca>
	{
		int a = 0;
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	617b      	str	r3, [r7, #20]
		int b = 0;
 8000ee6:	2300      	movs	r3, #0
 8000ee8:	613b      	str	r3, [r7, #16]
		int c = 0;
 8000eea:	2300      	movs	r3, #0
 8000eec:	60fb      	str	r3, [r7, #12]
		int d = 0;
 8000eee:	2300      	movs	r3, #0
 8000ef0:	60bb      	str	r3, [r7, #8]
		if (line_length > 0)
 8000ef2:	4b33      	ldr	r3, [pc, #204]	; (8000fc0 <line_append+0xf4>)
 8000ef4:	681b      	ldr	r3, [r3, #0]
 8000ef6:	2b00      	cmp	r3, #0
 8000ef8:	d05d      	beq.n	8000fb6 <line_append+0xea>
		{
			line_buffer[line_length] = '\0';		//jeśli bufor nie jest pusty - dodaj 0 na końcu linii
 8000efa:	4b31      	ldr	r3, [pc, #196]	; (8000fc0 <line_append+0xf4>)
 8000efc:	681b      	ldr	r3, [r3, #0]
 8000efe:	4a31      	ldr	r2, [pc, #196]	; (8000fc4 <line_append+0xf8>)
 8000f00:	2100      	movs	r1, #0
 8000f02:	54d1      	strb	r1, [r2, r3]
			printf("Otrzymano: %s\n", line_buffer);
 8000f04:	492f      	ldr	r1, [pc, #188]	; (8000fc4 <line_append+0xf8>)
 8000f06:	4830      	ldr	r0, [pc, #192]	; (8000fc8 <line_append+0xfc>)
 8000f08:	f01b fc7c 	bl	801c804 <iprintf>

			a = atoi((char*)&line_buffer[0]);
 8000f0c:	482d      	ldr	r0, [pc, #180]	; (8000fc4 <line_append+0xf8>)
 8000f0e:	f01a fd61 	bl	801b9d4 <atoi>
 8000f12:	6178      	str	r0, [r7, #20]
			b = atoi((char*)&line_buffer[1]);
 8000f14:	482d      	ldr	r0, [pc, #180]	; (8000fcc <line_append+0x100>)
 8000f16:	f01a fd5d 	bl	801b9d4 <atoi>
 8000f1a:	6138      	str	r0, [r7, #16]
			c = atoi((char*)&line_buffer[2]);
 8000f1c:	482c      	ldr	r0, [pc, #176]	; (8000fd0 <line_append+0x104>)
 8000f1e:	f01a fd59 	bl	801b9d4 <atoi>
 8000f22:	60f8      	str	r0, [r7, #12]
			d = atoi((char*)&line_buffer[3]);
 8000f24:	482b      	ldr	r0, [pc, #172]	; (8000fd4 <line_append+0x108>)
 8000f26:	f01a fd55 	bl	801b9d4 <atoi>
 8000f2a:	60b8      	str	r0, [r7, #8]
			printf("Otrzymano: %d\n", a);
 8000f2c:	6979      	ldr	r1, [r7, #20]
 8000f2e:	482a      	ldr	r0, [pc, #168]	; (8000fd8 <line_append+0x10c>)
 8000f30:	f01b fc68 	bl	801c804 <iprintf>
			printf("Otrzymano: %d\n", b);
 8000f34:	6939      	ldr	r1, [r7, #16]
 8000f36:	4828      	ldr	r0, [pc, #160]	; (8000fd8 <line_append+0x10c>)
 8000f38:	f01b fc64 	bl	801c804 <iprintf>
			printf("Otrzymano: %d\n", c);
 8000f3c:	68f9      	ldr	r1, [r7, #12]
 8000f3e:	4826      	ldr	r0, [pc, #152]	; (8000fd8 <line_append+0x10c>)
 8000f40:	f01b fc60 	bl	801c804 <iprintf>
			printf("Otrzymano: %d\n", d);
 8000f44:	68b9      	ldr	r1, [r7, #8]
 8000f46:	4824      	ldr	r0, [pc, #144]	; (8000fd8 <line_append+0x10c>)
 8000f48:	f01b fc5c 	bl	801c804 <iprintf>

			battery_adc = a;
 8000f4c:	697b      	ldr	r3, [r7, #20]
 8000f4e:	4a23      	ldr	r2, [pc, #140]	; (8000fdc <line_append+0x110>)
 8000f50:	6013      	str	r3, [r2, #0]
			battery_voltage = 3.3f * battery_adc / (4096.0f-1);
 8000f52:	4b22      	ldr	r3, [pc, #136]	; (8000fdc <line_append+0x110>)
 8000f54:	681b      	ldr	r3, [r3, #0]
 8000f56:	ee07 3a90 	vmov	s15, r3
 8000f5a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000f5e:	ed9f 7a20 	vldr	s14, [pc, #128]	; 8000fe0 <line_append+0x114>
 8000f62:	ee27 7a87 	vmul.f32	s14, s15, s14
 8000f66:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8000fe4 <line_append+0x118>
 8000f6a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000f6e:	4b1e      	ldr	r3, [pc, #120]	; (8000fe8 <line_append+0x11c>)
 8000f70:	edc3 7a00 	vstr	s15, [r3]
			printf("ADC = %lu (%.2f V)\n", battery_adc, battery_voltage);
 8000f74:	4b19      	ldr	r3, [pc, #100]	; (8000fdc <line_append+0x110>)
 8000f76:	681c      	ldr	r4, [r3, #0]
 8000f78:	4b1b      	ldr	r3, [pc, #108]	; (8000fe8 <line_append+0x11c>)
 8000f7a:	681b      	ldr	r3, [r3, #0]
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	f7ff faf3 	bl	8000568 <__aeabi_f2d>
 8000f82:	4602      	mov	r2, r0
 8000f84:	460b      	mov	r3, r1
 8000f86:	4621      	mov	r1, r4
 8000f88:	4818      	ldr	r0, [pc, #96]	; (8000fec <line_append+0x120>)
 8000f8a:	f01b fc3b 	bl	801c804 <iprintf>

			line_length = 0;						//zbieranie danych od nowa
 8000f8e:	4b0c      	ldr	r3, [pc, #48]	; (8000fc0 <line_append+0xf4>)
 8000f90:	2200      	movs	r2, #0
 8000f92:	601a      	str	r2, [r3, #0]
	{
 8000f94:	e00f      	b.n	8000fb6 <line_append+0xea>
		}
	//odebrano znak inny niż końca linii
	}else{
		//jeśli odebrano za dużo danych
		if (line_length >= LINE_MAX_LENGTH)
 8000f96:	4b0a      	ldr	r3, [pc, #40]	; (8000fc0 <line_append+0xf4>)
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	2b13      	cmp	r3, #19
 8000f9c:	d902      	bls.n	8000fa4 <line_append+0xd8>
			line_length = 0;				//usunięcie danych odebranych dotychczas
 8000f9e:	4b08      	ldr	r3, [pc, #32]	; (8000fc0 <line_append+0xf4>)
 8000fa0:	2200      	movs	r2, #0
 8000fa2:	601a      	str	r2, [r3, #0]

		line_buffer[line_length++] = value;	//dopisanie odebranej wartości do bufora
 8000fa4:	4b06      	ldr	r3, [pc, #24]	; (8000fc0 <line_append+0xf4>)
 8000fa6:	681b      	ldr	r3, [r3, #0]
 8000fa8:	1c5a      	adds	r2, r3, #1
 8000faa:	4905      	ldr	r1, [pc, #20]	; (8000fc0 <line_append+0xf4>)
 8000fac:	600a      	str	r2, [r1, #0]
 8000fae:	4905      	ldr	r1, [pc, #20]	; (8000fc4 <line_append+0xf8>)
 8000fb0:	79fa      	ldrb	r2, [r7, #7]
 8000fb2:	54ca      	strb	r2, [r1, r3]
	}
}
 8000fb4:	e000      	b.n	8000fb8 <line_append+0xec>
	{
 8000fb6:	bf00      	nop
}
 8000fb8:	bf00      	nop
 8000fba:	371c      	adds	r7, #28
 8000fbc:	46bd      	mov	sp, r7
 8000fbe:	bd90      	pop	{r4, r7, pc}
 8000fc0:	200005b8 	.word	0x200005b8
 8000fc4:	200005a0 	.word	0x200005a0
 8000fc8:	0801e678 	.word	0x0801e678
 8000fcc:	200005a1 	.word	0x200005a1
 8000fd0:	200005a2 	.word	0x200005a2
 8000fd4:	200005a3 	.word	0x200005a3
 8000fd8:	0801e688 	.word	0x0801e688
 8000fdc:	200005c4 	.word	0x200005c4
 8000fe0:	40533333 	.word	0x40533333
 8000fe4:	457ff000 	.word	0x457ff000
 8000fe8:	200005c8 	.word	0x200005c8
 8000fec:	0801e698 	.word	0x0801e698

08000ff0 <__io_putchar>:

//Funkcja umożliwiająca wysyłanie znaków przez uart za pomocą funkcji 'printf()'
int __io_putchar(int ch)
{
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	b084      	sub	sp, #16
 8000ff4:	af00      	add	r7, sp, #0
 8000ff6:	6078      	str	r0, [r7, #4]
	//znak końca linii
    if (ch == '\n')
 8000ff8:	687b      	ldr	r3, [r7, #4]
 8000ffa:	2b0a      	cmp	r3, #10
 8000ffc:	d109      	bne.n	8001012 <__io_putchar+0x22>
    {
        uint8_t ch2 = '\r';									//dodanie znaku powrotu karetki
 8000ffe:	230d      	movs	r3, #13
 8001000:	73fb      	strb	r3, [r7, #15]
        HAL_UART_Transmit(&huart1, &ch2, 1, HAL_MAX_DELAY);	//wysłanie dodanego znaku przez uart
 8001002:	f107 010f 	add.w	r1, r7, #15
 8001006:	f04f 33ff 	mov.w	r3, #4294967295
 800100a:	2201      	movs	r2, #1
 800100c:	4807      	ldr	r0, [pc, #28]	; (800102c <__io_putchar+0x3c>)
 800100e:	f005 ff5c 	bl	8006eca <HAL_UART_Transmit>
    }

    HAL_UART_Transmit(&huart1, (uint8_t*)&ch, 1, HAL_MAX_DELAY); //wyslanie danej przez uart
 8001012:	1d39      	adds	r1, r7, #4
 8001014:	f04f 33ff 	mov.w	r3, #4294967295
 8001018:	2201      	movs	r2, #1
 800101a:	4804      	ldr	r0, [pc, #16]	; (800102c <__io_putchar+0x3c>)
 800101c:	f005 ff55 	bl	8006eca <HAL_UART_Transmit>
    return 1;
 8001020:	2301      	movs	r3, #1
}
 8001022:	4618      	mov	r0, r3
 8001024:	3710      	adds	r7, #16
 8001026:	46bd      	mov	sp, r7
 8001028:	bd80      	pop	{r7, pc}
 800102a:	bf00      	nop
 800102c:	200004dc 	.word	0x200004dc

08001030 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001030:	b580      	push	{r7, lr}
 8001032:	b084      	sub	sp, #16
 8001034:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001036:	f001 fd35 	bl	8002aa4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800103a:	f000 f8d7 	bl	80011ec <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800103e:	f000 fe5f 	bl	8001d00 <MX_GPIO_Init>
  MX_CRC_Init();
 8001042:	f000 f9af 	bl	80013a4 <MX_CRC_Init>
  MX_DMA2D_Init();
 8001046:	f000 f9c1 	bl	80013cc <MX_DMA2D_Init>
  MX_FMC_Init();
 800104a:	f000 fdb1 	bl	8001bb0 <MX_FMC_Init>
  MX_LTDC_Init();
 800104e:	f000 f9ef 	bl	8001430 <MX_LTDC_Init>
  MX_SPI5_Init();
 8001052:	f000 fa6d 	bl	8001530 <MX_SPI5_Init>
  MX_TIM1_Init();
 8001056:	f000 fbe7 	bl	8001828 <MX_TIM1_Init>
  MX_ADC1_Init();
 800105a:	f000 f951 	bl	8001300 <MX_ADC1_Init>
  MX_TIM3_Init();
 800105e:	f000 fca9 	bl	80019b4 <MX_TIM3_Init>
  MX_TIM2_Init();
 8001062:	f000 fc31 	bl	80018c8 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 8001066:	f000 fd4f 	bl	8001b08 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 800106a:	f000 fd77 	bl	8001b5c <MX_USART2_UART_Init>
  MX_TouchGFX_Init();
 800106e:	f006 fec4 	bl	8007dfa <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  //Zegar obsługujący czujnik odległości HC-SR04
  HAL_TIM_IC_Start(&htim3, TIM_CHANNEL_1);
 8001072:	2100      	movs	r1, #0
 8001074:	4853      	ldr	r0, [pc, #332]	; (80011c4 <main+0x194>)
 8001076:	f004 fe54 	bl	8005d22 <HAL_TIM_IC_Start>
  HAL_TIM_IC_Start(&htim3, TIM_CHANNEL_2);
 800107a:	2104      	movs	r1, #4
 800107c:	4851      	ldr	r0, [pc, #324]	; (80011c4 <main+0x194>)
 800107e:	f004 fe50 	bl	8005d22 <HAL_TIM_IC_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 8001082:	2108      	movs	r1, #8
 8001084:	484f      	ldr	r0, [pc, #316]	; (80011c4 <main+0x194>)
 8001086:	f004 fdd9 	bl	8005c3c <HAL_TIM_PWM_Start>

  //Zegar generujący sygnał 36kHz dla diód IR
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 800108a:	2100      	movs	r1, #0
 800108c:	484e      	ldr	r0, [pc, #312]	; (80011c8 <main+0x198>)
 800108e:	f004 fdd5 	bl	8005c3c <HAL_TIM_PWM_Start>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  uint8_t distance = 0;
 8001092:	2300      	movs	r3, #0
 8001094:	737b      	strb	r3, [r7, #13]
  uint8_t prev_distance = 0;
 8001096:	2300      	movs	r3, #0
 8001098:	73fb      	strb	r3, [r7, #15]
  bool ROBOT = false;
 800109a:	2300      	movs	r3, #0
 800109c:	73bb      	strb	r3, [r7, #14]
  uint8_t value = 0;
 800109e:	2300      	movs	r3, #0
 80010a0:	733b      	strb	r3, [r7, #12]
  float voltage = 0;
 80010a2:	f04f 0300 	mov.w	r3, #0
 80010a6:	60bb      	str	r3, [r7, #8]
  uint8_t start = 0;
 80010a8:	2300      	movs	r3, #0
 80010aa:	71fb      	strb	r3, [r7, #7]
  uint8_t stop = 0;
 80010ac:	2300      	movs	r3, #0
 80010ae:	71bb      	strb	r3, [r7, #6]
  uint8_t uart1;

  while (1)
  {
	  /*----Czytanie danych odebranych przez UART-moduł bluetooth---*/
	  if (HAL_UART_Receive(&huart2, &read, 1, 0) == HAL_OK)
 80010b0:	2300      	movs	r3, #0
 80010b2:	2201      	movs	r2, #1
 80010b4:	4945      	ldr	r1, [pc, #276]	; (80011cc <main+0x19c>)
 80010b6:	4846      	ldr	r0, [pc, #280]	; (80011d0 <main+0x1a0>)
 80010b8:	f005 ffa0 	bl	8006ffc <HAL_UART_Receive>
 80010bc:	4603      	mov	r3, r0
 80010be:	2b00      	cmp	r3, #0
 80010c0:	d105      	bne.n	80010ce <main+0x9e>
		  line_append(read);
 80010c2:	4b42      	ldr	r3, [pc, #264]	; (80011cc <main+0x19c>)
 80010c4:	681b      	ldr	r3, [r3, #0]
 80010c6:	b2db      	uxtb	r3, r3
 80010c8:	4618      	mov	r0, r3
 80010ca:	f7ff feff 	bl	8000ecc <line_append>

	  /*---------------Pomiar napięcia na stykach-ADC------------PA2*/
	  HAL_ADC_Start(&hadc1);
 80010ce:	4841      	ldr	r0, [pc, #260]	; (80011d4 <main+0x1a4>)
 80010d0:	f001 fd92 	bl	8002bf8 <HAL_ADC_Start>
	  HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80010d4:	f04f 31ff 	mov.w	r1, #4294967295
 80010d8:	483e      	ldr	r0, [pc, #248]	; (80011d4 <main+0x1a4>)
 80010da:	f001 fe53 	bl	8002d84 <HAL_ADC_PollForConversion>

	  value = HAL_ADC_GetValue(&hadc1);
 80010de:	483d      	ldr	r0, [pc, #244]	; (80011d4 <main+0x1a4>)
 80010e0:	f001 fed4 	bl	8002e8c <HAL_ADC_GetValue>
 80010e4:	4603      	mov	r3, r0
 80010e6:	733b      	strb	r3, [r7, #12]
	  voltage = 3.3f * value / 4096.0f;
 80010e8:	7b3b      	ldrb	r3, [r7, #12]
 80010ea:	ee07 3a90 	vmov	s15, r3
 80010ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80010f2:	ed9f 7a39 	vldr	s14, [pc, #228]	; 80011d8 <main+0x1a8>
 80010f6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80010fa:	eddf 6a38 	vldr	s13, [pc, #224]	; 80011dc <main+0x1ac>
 80010fe:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001102:	edc7 7a02 	vstr	s15, [r7, #8]

	  //printf("ADC = %lu (%.3f V)\n", value, voltage);
	  //HAL_Delay(250);

	  /*----------------Czujnik odległości-HC-SR04------------------*/
	  start = HAL_TIM_ReadCapturedValue(&htim3, TIM_CHANNEL_1);
 8001106:	2100      	movs	r1, #0
 8001108:	482e      	ldr	r0, [pc, #184]	; (80011c4 <main+0x194>)
 800110a:	f005 f95b 	bl	80063c4 <HAL_TIM_ReadCapturedValue>
 800110e:	4603      	mov	r3, r0
 8001110:	71fb      	strb	r3, [r7, #7]
	  stop = HAL_TIM_ReadCapturedValue(&htim3, TIM_CHANNEL_2);
 8001112:	2104      	movs	r1, #4
 8001114:	482b      	ldr	r0, [pc, #172]	; (80011c4 <main+0x194>)
 8001116:	f005 f955 	bl	80063c4 <HAL_TIM_ReadCapturedValue>
 800111a:	4603      	mov	r3, r0
 800111c:	71bb      	strb	r3, [r7, #6]
	  distance = (stop - start) / 58;
 800111e:	79ba      	ldrb	r2, [r7, #6]
 8001120:	79fb      	ldrb	r3, [r7, #7]
 8001122:	1ad3      	subs	r3, r2, r3
 8001124:	4a2e      	ldr	r2, [pc, #184]	; (80011e0 <main+0x1b0>)
 8001126:	fb82 1203 	smull	r1, r2, r2, r3
 800112a:	441a      	add	r2, r3
 800112c:	1152      	asrs	r2, r2, #5
 800112e:	17db      	asrs	r3, r3, #31
 8001130:	1ad3      	subs	r3, r2, r3
 8001132:	737b      	strb	r3, [r7, #13]
	  //printf("STACJA: %u\n", distance);

	  if (prev_distance != distance)
 8001134:	7bfa      	ldrb	r2, [r7, #15]
 8001136:	7b7b      	ldrb	r3, [r7, #13]
 8001138:	429a      	cmp	r2, r3
 800113a:	d001      	beq.n	8001140 <main+0x110>
	  	  	  prev_distance = distance;
 800113c:	7b7b      	ldrb	r3, [r7, #13]
 800113e:	73fb      	strb	r3, [r7, #15]

	  if (ROBOT == false && prev_distance < 5)
 8001140:	7bbb      	ldrb	r3, [r7, #14]
 8001142:	f083 0301 	eor.w	r3, r3, #1
 8001146:	b2db      	uxtb	r3, r3
 8001148:	2b00      	cmp	r3, #0
 800114a:	d00f      	beq.n	800116c <main+0x13c>
 800114c:	7bfb      	ldrb	r3, [r7, #15]
 800114e:	2b04      	cmp	r3, #4
 8001150:	d80c      	bhi.n	800116c <main+0x13c>
	  {
		  ROBOT = true;
 8001152:	2301      	movs	r3, #1
 8001154:	73bb      	strb	r3, [r7, #14]

		  //wysłanie informacji do robota, że czujnik wykrył go przed stykami
		  TX_BUFFER[0] = '1';
 8001156:	4b23      	ldr	r3, [pc, #140]	; (80011e4 <main+0x1b4>)
 8001158:	2231      	movs	r2, #49	; 0x31
 800115a:	701a      	strb	r2, [r3, #0]
		  HAL_UART_Transmit(&huart2, TX_BUFFER, sizeof(TX_BUFFER), HAL_MAX_DELAY);
 800115c:	f04f 33ff 	mov.w	r3, #4294967295
 8001160:	2201      	movs	r2, #1
 8001162:	4920      	ldr	r1, [pc, #128]	; (80011e4 <main+0x1b4>)
 8001164:	481a      	ldr	r0, [pc, #104]	; (80011d0 <main+0x1a0>)
 8001166:	f005 feb0 	bl	8006eca <HAL_UART_Transmit>
 800116a:	e011      	b.n	8001190 <main+0x160>
	  }
	  else if (ROBOT == true && prev_distance > 4)
 800116c:	7bbb      	ldrb	r3, [r7, #14]
 800116e:	2b00      	cmp	r3, #0
 8001170:	d00e      	beq.n	8001190 <main+0x160>
 8001172:	7bfb      	ldrb	r3, [r7, #15]
 8001174:	2b04      	cmp	r3, #4
 8001176:	d90b      	bls.n	8001190 <main+0x160>
	  {
		  ROBOT = false;
 8001178:	2300      	movs	r3, #0
 800117a:	73bb      	strb	r3, [r7, #14]

		  //wysłanie informacji do robota, że czujnik przestał wykrywać go przed stykami
		  TX_BUFFER[0] = '2';
 800117c:	4b19      	ldr	r3, [pc, #100]	; (80011e4 <main+0x1b4>)
 800117e:	2232      	movs	r2, #50	; 0x32
 8001180:	701a      	strb	r2, [r3, #0]
		  HAL_UART_Transmit(&huart2, TX_BUFFER, sizeof(TX_BUFFER), HAL_MAX_DELAY);
 8001182:	f04f 33ff 	mov.w	r3, #4294967295
 8001186:	2201      	movs	r2, #1
 8001188:	4916      	ldr	r1, [pc, #88]	; (80011e4 <main+0x1b4>)
 800118a:	4811      	ldr	r0, [pc, #68]	; (80011d0 <main+0x1a0>)
 800118c:	f005 fe9d 	bl	8006eca <HAL_UART_Transmit>
	  }

	  /*-------Sterowanie robota z poziomu komputera-USB-UART-------*/
	  if (HAL_UART_Receive(&huart1, &uart1, 1, 0) == HAL_OK)
 8001190:	1d79      	adds	r1, r7, #5
 8001192:	2300      	movs	r3, #0
 8001194:	2201      	movs	r2, #1
 8001196:	4814      	ldr	r0, [pc, #80]	; (80011e8 <main+0x1b8>)
 8001198:	f005 ff30 	bl	8006ffc <HAL_UART_Receive>
 800119c:	4603      	mov	r3, r0
 800119e:	2b00      	cmp	r3, #0
 80011a0:	d10d      	bne.n	80011be <main+0x18e>
	  {
		  line_append(uart1);
 80011a2:	797b      	ldrb	r3, [r7, #5]
 80011a4:	4618      	mov	r0, r3
 80011a6:	f7ff fe91 	bl	8000ecc <line_append>

		  TX_BUFFER[0] = uart1;
 80011aa:	797a      	ldrb	r2, [r7, #5]
 80011ac:	4b0d      	ldr	r3, [pc, #52]	; (80011e4 <main+0x1b4>)
 80011ae:	701a      	strb	r2, [r3, #0]
		  HAL_UART_Transmit(&huart2, TX_BUFFER, 1, HAL_MAX_DELAY);
 80011b0:	f04f 33ff 	mov.w	r3, #4294967295
 80011b4:	2201      	movs	r2, #1
 80011b6:	490b      	ldr	r1, [pc, #44]	; (80011e4 <main+0x1b4>)
 80011b8:	4805      	ldr	r0, [pc, #20]	; (80011d0 <main+0x1a0>)
 80011ba:	f005 fe86 	bl	8006eca <HAL_UART_Transmit>
	  }
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80011be:	f006 fe22 	bl	8007e06 <MX_TouchGFX_Process>
	  if (HAL_UART_Receive(&huart2, &read, 1, 0) == HAL_OK)
 80011c2:	e775      	b.n	80010b0 <main+0x80>
 80011c4:	2000049c 	.word	0x2000049c
 80011c8:	2000045c 	.word	0x2000045c
 80011cc:	200005c0 	.word	0x200005c0
 80011d0:	2000051c 	.word	0x2000051c
 80011d4:	2000028c 	.word	0x2000028c
 80011d8:	40533333 	.word	0x40533333
 80011dc:	45800000 	.word	0x45800000
 80011e0:	8d3dcb09 	.word	0x8d3dcb09
 80011e4:	200005bc 	.word	0x200005bc
 80011e8:	200004dc 	.word	0x200004dc

080011ec <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80011ec:	b580      	push	{r7, lr}
 80011ee:	b0a0      	sub	sp, #128	; 0x80
 80011f0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011f2:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80011f6:	2230      	movs	r2, #48	; 0x30
 80011f8:	2100      	movs	r1, #0
 80011fa:	4618      	mov	r0, r3
 80011fc:	f01a fc56 	bl	801baac <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001200:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001204:	2200      	movs	r2, #0
 8001206:	601a      	str	r2, [r3, #0]
 8001208:	605a      	str	r2, [r3, #4]
 800120a:	609a      	str	r2, [r3, #8]
 800120c:	60da      	str	r2, [r3, #12]
 800120e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001210:	f107 030c 	add.w	r3, r7, #12
 8001214:	2230      	movs	r2, #48	; 0x30
 8001216:	2100      	movs	r1, #0
 8001218:	4618      	mov	r0, r3
 800121a:	f01a fc47 	bl	801baac <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800121e:	2300      	movs	r3, #0
 8001220:	60bb      	str	r3, [r7, #8]
 8001222:	4b35      	ldr	r3, [pc, #212]	; (80012f8 <SystemClock_Config+0x10c>)
 8001224:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001226:	4a34      	ldr	r2, [pc, #208]	; (80012f8 <SystemClock_Config+0x10c>)
 8001228:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800122c:	6413      	str	r3, [r2, #64]	; 0x40
 800122e:	4b32      	ldr	r3, [pc, #200]	; (80012f8 <SystemClock_Config+0x10c>)
 8001230:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001232:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001236:	60bb      	str	r3, [r7, #8]
 8001238:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800123a:	2300      	movs	r3, #0
 800123c:	607b      	str	r3, [r7, #4]
 800123e:	4b2f      	ldr	r3, [pc, #188]	; (80012fc <SystemClock_Config+0x110>)
 8001240:	681b      	ldr	r3, [r3, #0]
 8001242:	4a2e      	ldr	r2, [pc, #184]	; (80012fc <SystemClock_Config+0x110>)
 8001244:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001248:	6013      	str	r3, [r2, #0]
 800124a:	4b2c      	ldr	r3, [pc, #176]	; (80012fc <SystemClock_Config+0x110>)
 800124c:	681b      	ldr	r3, [r3, #0]
 800124e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001252:	607b      	str	r3, [r7, #4]
 8001254:	687b      	ldr	r3, [r7, #4]
  /** Initializes the CPU, AHB and APB busses clocks
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001256:	2301      	movs	r3, #1
 8001258:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800125a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800125e:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001260:	2302      	movs	r3, #2
 8001262:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001264:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001268:	66fb      	str	r3, [r7, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLM = 4;
 800126a:	2304      	movs	r3, #4
 800126c:	673b      	str	r3, [r7, #112]	; 0x70
  RCC_OscInitStruct.PLL.PLLN = 180;
 800126e:	23b4      	movs	r3, #180	; 0xb4
 8001270:	677b      	str	r3, [r7, #116]	; 0x74
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001272:	2302      	movs	r3, #2
 8001274:	67bb      	str	r3, [r7, #120]	; 0x78
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001276:	2304      	movs	r3, #4
 8001278:	67fb      	str	r3, [r7, #124]	; 0x7c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800127a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800127e:	4618      	mov	r0, r3
 8001280:	f003 fb14 	bl	80048ac <HAL_RCC_OscConfig>
 8001284:	4603      	mov	r3, r0
 8001286:	2b00      	cmp	r3, #0
 8001288:	d001      	beq.n	800128e <SystemClock_Config+0xa2>
  {
    Error_Handler();
 800128a:	f000 fe45 	bl	8001f18 <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800128e:	f003 fabd 	bl	800480c <HAL_PWREx_EnableOverDrive>
 8001292:	4603      	mov	r3, r0
 8001294:	2b00      	cmp	r3, #0
 8001296:	d001      	beq.n	800129c <SystemClock_Config+0xb0>
  {
    Error_Handler();
 8001298:	f000 fe3e 	bl	8001f18 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800129c:	230f      	movs	r3, #15
 800129e:	63fb      	str	r3, [r7, #60]	; 0x3c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80012a0:	2302      	movs	r3, #2
 80012a2:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80012a4:	2300      	movs	r3, #0
 80012a6:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80012a8:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80012ac:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80012ae:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80012b2:	64fb      	str	r3, [r7, #76]	; 0x4c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80012b4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80012b8:	2105      	movs	r1, #5
 80012ba:	4618      	mov	r0, r3
 80012bc:	f003 fd64 	bl	8004d88 <HAL_RCC_ClockConfig>
 80012c0:	4603      	mov	r3, r0
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d001      	beq.n	80012ca <SystemClock_Config+0xde>
  {
    Error_Handler();
 80012c6:	f000 fe27 	bl	8001f18 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80012ca:	2308      	movs	r3, #8
 80012cc:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 54;
 80012ce:	2336      	movs	r3, #54	; 0x36
 80012d0:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 3;
 80012d2:	2303      	movs	r3, #3
 80012d4:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 80012d6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80012da:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80012dc:	f107 030c 	add.w	r3, r7, #12
 80012e0:	4618      	mov	r0, r3
 80012e2:	f003 ffa3 	bl	800522c <HAL_RCCEx_PeriphCLKConfig>
 80012e6:	4603      	mov	r3, r0
 80012e8:	2b00      	cmp	r3, #0
 80012ea:	d001      	beq.n	80012f0 <SystemClock_Config+0x104>
  {
    Error_Handler();
 80012ec:	f000 fe14 	bl	8001f18 <Error_Handler>
  }
}
 80012f0:	bf00      	nop
 80012f2:	3780      	adds	r7, #128	; 0x80
 80012f4:	46bd      	mov	sp, r7
 80012f6:	bd80      	pop	{r7, pc}
 80012f8:	40023800 	.word	0x40023800
 80012fc:	40007000 	.word	0x40007000

08001300 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001300:	b580      	push	{r7, lr}
 8001302:	b084      	sub	sp, #16
 8001304:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001306:	463b      	mov	r3, r7
 8001308:	2200      	movs	r2, #0
 800130a:	601a      	str	r2, [r3, #0]
 800130c:	605a      	str	r2, [r3, #4]
 800130e:	609a      	str	r2, [r3, #8]
 8001310:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC1_Init 1 */

  /* USER CODE END ADC1_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8001312:	4b21      	ldr	r3, [pc, #132]	; (8001398 <MX_ADC1_Init+0x98>)
 8001314:	4a21      	ldr	r2, [pc, #132]	; (800139c <MX_ADC1_Init+0x9c>)
 8001316:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001318:	4b1f      	ldr	r3, [pc, #124]	; (8001398 <MX_ADC1_Init+0x98>)
 800131a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800131e:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001320:	4b1d      	ldr	r3, [pc, #116]	; (8001398 <MX_ADC1_Init+0x98>)
 8001322:	2200      	movs	r2, #0
 8001324:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001326:	4b1c      	ldr	r3, [pc, #112]	; (8001398 <MX_ADC1_Init+0x98>)
 8001328:	2200      	movs	r2, #0
 800132a:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800132c:	4b1a      	ldr	r3, [pc, #104]	; (8001398 <MX_ADC1_Init+0x98>)
 800132e:	2200      	movs	r2, #0
 8001330:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001332:	4b19      	ldr	r3, [pc, #100]	; (8001398 <MX_ADC1_Init+0x98>)
 8001334:	2200      	movs	r2, #0
 8001336:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800133a:	4b17      	ldr	r3, [pc, #92]	; (8001398 <MX_ADC1_Init+0x98>)
 800133c:	2200      	movs	r2, #0
 800133e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001340:	4b15      	ldr	r3, [pc, #84]	; (8001398 <MX_ADC1_Init+0x98>)
 8001342:	4a17      	ldr	r2, [pc, #92]	; (80013a0 <MX_ADC1_Init+0xa0>)
 8001344:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001346:	4b14      	ldr	r3, [pc, #80]	; (8001398 <MX_ADC1_Init+0x98>)
 8001348:	2200      	movs	r2, #0
 800134a:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 800134c:	4b12      	ldr	r3, [pc, #72]	; (8001398 <MX_ADC1_Init+0x98>)
 800134e:	2201      	movs	r2, #1
 8001350:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001352:	4b11      	ldr	r3, [pc, #68]	; (8001398 <MX_ADC1_Init+0x98>)
 8001354:	2200      	movs	r2, #0
 8001356:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800135a:	4b0f      	ldr	r3, [pc, #60]	; (8001398 <MX_ADC1_Init+0x98>)
 800135c:	2201      	movs	r2, #1
 800135e:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001360:	480d      	ldr	r0, [pc, #52]	; (8001398 <MX_ADC1_Init+0x98>)
 8001362:	f001 fc05 	bl	8002b70 <HAL_ADC_Init>
 8001366:	4603      	mov	r3, r0
 8001368:	2b00      	cmp	r3, #0
 800136a:	d001      	beq.n	8001370 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 800136c:	f000 fdd4 	bl	8001f18 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_2;
 8001370:	2302      	movs	r3, #2
 8001372:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001374:	2301      	movs	r3, #1
 8001376:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_28CYCLES;
 8001378:	2302      	movs	r3, #2
 800137a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800137c:	463b      	mov	r3, r7
 800137e:	4619      	mov	r1, r3
 8001380:	4805      	ldr	r0, [pc, #20]	; (8001398 <MX_ADC1_Init+0x98>)
 8001382:	f001 fd91 	bl	8002ea8 <HAL_ADC_ConfigChannel>
 8001386:	4603      	mov	r3, r0
 8001388:	2b00      	cmp	r3, #0
 800138a:	d001      	beq.n	8001390 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 800138c:	f000 fdc4 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001390:	bf00      	nop
 8001392:	3710      	adds	r7, #16
 8001394:	46bd      	mov	sp, r7
 8001396:	bd80      	pop	{r7, pc}
 8001398:	2000028c 	.word	0x2000028c
 800139c:	40012000 	.word	0x40012000
 80013a0:	0f000001 	.word	0x0f000001

080013a4 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80013a4:	b580      	push	{r7, lr}
 80013a6:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80013a8:	4b06      	ldr	r3, [pc, #24]	; (80013c4 <MX_CRC_Init+0x20>)
 80013aa:	4a07      	ldr	r2, [pc, #28]	; (80013c8 <MX_CRC_Init+0x24>)
 80013ac:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80013ae:	4805      	ldr	r0, [pc, #20]	; (80013c4 <MX_CRC_Init+0x20>)
 80013b0:	f002 f8bc 	bl	800352c <HAL_CRC_Init>
 80013b4:	4603      	mov	r3, r0
 80013b6:	2b00      	cmp	r3, #0
 80013b8:	d001      	beq.n	80013be <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80013ba:	f000 fdad 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80013be:	bf00      	nop
 80013c0:	bd80      	pop	{r7, pc}
 80013c2:	bf00      	nop
 80013c4:	200002d4 	.word	0x200002d4
 80013c8:	40023000 	.word	0x40023000

080013cc <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 80013cc:	b580      	push	{r7, lr}
 80013ce:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 80013d0:	4b15      	ldr	r3, [pc, #84]	; (8001428 <MX_DMA2D_Init+0x5c>)
 80013d2:	4a16      	ldr	r2, [pc, #88]	; (800142c <MX_DMA2D_Init+0x60>)
 80013d4:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 80013d6:	4b14      	ldr	r3, [pc, #80]	; (8001428 <MX_DMA2D_Init+0x5c>)
 80013d8:	2200      	movs	r2, #0
 80013da:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 80013dc:	4b12      	ldr	r3, [pc, #72]	; (8001428 <MX_DMA2D_Init+0x5c>)
 80013de:	2202      	movs	r2, #2
 80013e0:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 80013e2:	4b11      	ldr	r3, [pc, #68]	; (8001428 <MX_DMA2D_Init+0x5c>)
 80013e4:	2200      	movs	r2, #0
 80013e6:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 80013e8:	4b0f      	ldr	r3, [pc, #60]	; (8001428 <MX_DMA2D_Init+0x5c>)
 80013ea:	2200      	movs	r2, #0
 80013ec:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80013ee:	4b0e      	ldr	r3, [pc, #56]	; (8001428 <MX_DMA2D_Init+0x5c>)
 80013f0:	2202      	movs	r2, #2
 80013f2:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80013f4:	4b0c      	ldr	r3, [pc, #48]	; (8001428 <MX_DMA2D_Init+0x5c>)
 80013f6:	2200      	movs	r2, #0
 80013f8:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80013fa:	4b0b      	ldr	r3, [pc, #44]	; (8001428 <MX_DMA2D_Init+0x5c>)
 80013fc:	2200      	movs	r2, #0
 80013fe:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001400:	4809      	ldr	r0, [pc, #36]	; (8001428 <MX_DMA2D_Init+0x5c>)
 8001402:	f002 f8af 	bl	8003564 <HAL_DMA2D_Init>
 8001406:	4603      	mov	r3, r0
 8001408:	2b00      	cmp	r3, #0
 800140a:	d001      	beq.n	8001410 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 800140c:	f000 fd84 	bl	8001f18 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001410:	2101      	movs	r1, #1
 8001412:	4805      	ldr	r0, [pc, #20]	; (8001428 <MX_DMA2D_Init+0x5c>)
 8001414:	f002 fb70 	bl	8003af8 <HAL_DMA2D_ConfigLayer>
 8001418:	4603      	mov	r3, r0
 800141a:	2b00      	cmp	r3, #0
 800141c:	d001      	beq.n	8001422 <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 800141e:	f000 fd7b 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 8001422:	bf00      	nop
 8001424:	bd80      	pop	{r7, pc}
 8001426:	bf00      	nop
 8001428:	200002dc 	.word	0x200002dc
 800142c:	4002b000 	.word	0x4002b000

08001430 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 8001430:	b580      	push	{r7, lr}
 8001432:	b08e      	sub	sp, #56	; 0x38
 8001434:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001436:	1d3b      	adds	r3, r7, #4
 8001438:	2234      	movs	r2, #52	; 0x34
 800143a:	2100      	movs	r1, #0
 800143c:	4618      	mov	r0, r3
 800143e:	f01a fb35 	bl	801baac <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8001442:	4b39      	ldr	r3, [pc, #228]	; (8001528 <MX_LTDC_Init+0xf8>)
 8001444:	4a39      	ldr	r2, [pc, #228]	; (800152c <MX_LTDC_Init+0xfc>)
 8001446:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001448:	4b37      	ldr	r3, [pc, #220]	; (8001528 <MX_LTDC_Init+0xf8>)
 800144a:	2200      	movs	r2, #0
 800144c:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 800144e:	4b36      	ldr	r3, [pc, #216]	; (8001528 <MX_LTDC_Init+0xf8>)
 8001450:	2200      	movs	r2, #0
 8001452:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001454:	4b34      	ldr	r3, [pc, #208]	; (8001528 <MX_LTDC_Init+0xf8>)
 8001456:	2200      	movs	r2, #0
 8001458:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800145a:	4b33      	ldr	r3, [pc, #204]	; (8001528 <MX_LTDC_Init+0xf8>)
 800145c:	2200      	movs	r2, #0
 800145e:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 9;
 8001460:	4b31      	ldr	r3, [pc, #196]	; (8001528 <MX_LTDC_Init+0xf8>)
 8001462:	2209      	movs	r2, #9
 8001464:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 1;
 8001466:	4b30      	ldr	r3, [pc, #192]	; (8001528 <MX_LTDC_Init+0xf8>)
 8001468:	2201      	movs	r2, #1
 800146a:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 29;
 800146c:	4b2e      	ldr	r3, [pc, #184]	; (8001528 <MX_LTDC_Init+0xf8>)
 800146e:	221d      	movs	r2, #29
 8001470:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 3;
 8001472:	4b2d      	ldr	r3, [pc, #180]	; (8001528 <MX_LTDC_Init+0xf8>)
 8001474:	2203      	movs	r2, #3
 8001476:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 269;
 8001478:	4b2b      	ldr	r3, [pc, #172]	; (8001528 <MX_LTDC_Init+0xf8>)
 800147a:	f240 120d 	movw	r2, #269	; 0x10d
 800147e:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 8001480:	4b29      	ldr	r3, [pc, #164]	; (8001528 <MX_LTDC_Init+0xf8>)
 8001482:	f240 1243 	movw	r2, #323	; 0x143
 8001486:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 279;
 8001488:	4b27      	ldr	r3, [pc, #156]	; (8001528 <MX_LTDC_Init+0xf8>)
 800148a:	f240 1217 	movw	r2, #279	; 0x117
 800148e:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 327;
 8001490:	4b25      	ldr	r3, [pc, #148]	; (8001528 <MX_LTDC_Init+0xf8>)
 8001492:	f240 1247 	movw	r2, #327	; 0x147
 8001496:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 8001498:	4b23      	ldr	r3, [pc, #140]	; (8001528 <MX_LTDC_Init+0xf8>)
 800149a:	2200      	movs	r2, #0
 800149c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 80014a0:	4b21      	ldr	r3, [pc, #132]	; (8001528 <MX_LTDC_Init+0xf8>)
 80014a2:	2200      	movs	r2, #0
 80014a4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 80014a8:	4b1f      	ldr	r3, [pc, #124]	; (8001528 <MX_LTDC_Init+0xf8>)
 80014aa:	2200      	movs	r2, #0
 80014ac:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80014b0:	481d      	ldr	r0, [pc, #116]	; (8001528 <MX_LTDC_Init+0xf8>)
 80014b2:	f002 fe15 	bl	80040e0 <HAL_LTDC_Init>
 80014b6:	4603      	mov	r3, r0
 80014b8:	2b00      	cmp	r3, #0
 80014ba:	d001      	beq.n	80014c0 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 80014bc:	f000 fd2c 	bl	8001f18 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 80014c0:	2300      	movs	r3, #0
 80014c2:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 240;
 80014c4:	23f0      	movs	r3, #240	; 0xf0
 80014c6:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 80014c8:	2300      	movs	r3, #0
 80014ca:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 320;
 80014cc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80014d0:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80014d2:	2302      	movs	r3, #2
 80014d4:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 80014d6:	23ff      	movs	r3, #255	; 0xff
 80014d8:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 80014da:	2300      	movs	r3, #0
 80014dc:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80014de:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80014e2:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80014e4:	2305      	movs	r3, #5
 80014e6:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xd0000000;
 80014e8:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
 80014ec:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 240;
 80014ee:	23f0      	movs	r3, #240	; 0xf0
 80014f0:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 320;
 80014f2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80014f6:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 80014f8:	2300      	movs	r3, #0
 80014fa:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 80014fe:	2300      	movs	r3, #0
 8001500:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 8001504:	2300      	movs	r3, #0
 8001506:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800150a:	1d3b      	adds	r3, r7, #4
 800150c:	2200      	movs	r2, #0
 800150e:	4619      	mov	r1, r3
 8001510:	4805      	ldr	r0, [pc, #20]	; (8001528 <MX_LTDC_Init+0xf8>)
 8001512:	f002 ff6d 	bl	80043f0 <HAL_LTDC_ConfigLayer>
 8001516:	4603      	mov	r3, r0
 8001518:	2b00      	cmp	r3, #0
 800151a:	d001      	beq.n	8001520 <MX_LTDC_Init+0xf0>
  {
    Error_Handler();
 800151c:	f000 fcfc 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8001520:	bf00      	nop
 8001522:	3738      	adds	r7, #56	; 0x38
 8001524:	46bd      	mov	sp, r7
 8001526:	bd80      	pop	{r7, pc}
 8001528:	2000031c 	.word	0x2000031c
 800152c:	40016800 	.word	0x40016800

08001530 <MX_SPI5_Init>:
  * @brief SPI5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI5_Init(void)
{
 8001530:	b580      	push	{r7, lr}
 8001532:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  /* SPI5 parameter configuration*/
  hspi5.Instance = SPI5;
 8001534:	4bba      	ldr	r3, [pc, #744]	; (8001820 <MX_SPI5_Init+0x2f0>)
 8001536:	4abb      	ldr	r2, [pc, #748]	; (8001824 <MX_SPI5_Init+0x2f4>)
 8001538:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800153a:	4bb9      	ldr	r3, [pc, #740]	; (8001820 <MX_SPI5_Init+0x2f0>)
 800153c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001540:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_1LINE;
 8001542:	4bb7      	ldr	r3, [pc, #732]	; (8001820 <MX_SPI5_Init+0x2f0>)
 8001544:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8001548:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800154a:	4bb5      	ldr	r3, [pc, #724]	; (8001820 <MX_SPI5_Init+0x2f0>)
 800154c:	2200      	movs	r2, #0
 800154e:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001550:	4bb3      	ldr	r3, [pc, #716]	; (8001820 <MX_SPI5_Init+0x2f0>)
 8001552:	2200      	movs	r2, #0
 8001554:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001556:	4bb2      	ldr	r3, [pc, #712]	; (8001820 <MX_SPI5_Init+0x2f0>)
 8001558:	2200      	movs	r2, #0
 800155a:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_SOFT;
 800155c:	4bb0      	ldr	r3, [pc, #704]	; (8001820 <MX_SPI5_Init+0x2f0>)
 800155e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001562:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001564:	4bae      	ldr	r3, [pc, #696]	; (8001820 <MX_SPI5_Init+0x2f0>)
 8001566:	2200      	movs	r2, #0
 8001568:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800156a:	4bad      	ldr	r3, [pc, #692]	; (8001820 <MX_SPI5_Init+0x2f0>)
 800156c:	2200      	movs	r2, #0
 800156e:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001570:	4bab      	ldr	r3, [pc, #684]	; (8001820 <MX_SPI5_Init+0x2f0>)
 8001572:	2200      	movs	r2, #0
 8001574:	625a      	str	r2, [r3, #36]	; 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001576:	4baa      	ldr	r3, [pc, #680]	; (8001820 <MX_SPI5_Init+0x2f0>)
 8001578:	2200      	movs	r2, #0
 800157a:	629a      	str	r2, [r3, #40]	; 0x28
  hspi5.Init.CRCPolynomial = 10;
 800157c:	4ba8      	ldr	r3, [pc, #672]	; (8001820 <MX_SPI5_Init+0x2f0>)
 800157e:	220a      	movs	r2, #10
 8001580:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001582:	48a7      	ldr	r0, [pc, #668]	; (8001820 <MX_SPI5_Init+0x2f0>)
 8001584:	f004 f891 	bl	80056aa <HAL_SPI_Init>
 8001588:	4603      	mov	r3, r0
 800158a:	2b00      	cmp	r3, #0
 800158c:	d001      	beq.n	8001592 <MX_SPI5_Init+0x62>
  {
    Error_Handler();
 800158e:	f000 fcc3 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */
  writeReg(0xCA);
 8001592:	20ca      	movs	r0, #202	; 0xca
 8001594:	f000 fc62 	bl	8001e5c <writeReg>
  writeData(0xC3);
 8001598:	20c3      	movs	r0, #195	; 0xc3
 800159a:	f000 fc85 	bl	8001ea8 <writeData>
  writeData(0x08);
 800159e:	2008      	movs	r0, #8
 80015a0:	f000 fc82 	bl	8001ea8 <writeData>
  writeData(0x50);
 80015a4:	2050      	movs	r0, #80	; 0x50
 80015a6:	f000 fc7f 	bl	8001ea8 <writeData>
  writeReg(0xCF);
 80015aa:	20cf      	movs	r0, #207	; 0xcf
 80015ac:	f000 fc56 	bl	8001e5c <writeReg>
  writeData(0x00);
 80015b0:	2000      	movs	r0, #0
 80015b2:	f000 fc79 	bl	8001ea8 <writeData>
  writeData(0xC1);
 80015b6:	20c1      	movs	r0, #193	; 0xc1
 80015b8:	f000 fc76 	bl	8001ea8 <writeData>
  writeData(0x30);
 80015bc:	2030      	movs	r0, #48	; 0x30
 80015be:	f000 fc73 	bl	8001ea8 <writeData>
  writeReg(0xED);
 80015c2:	20ed      	movs	r0, #237	; 0xed
 80015c4:	f000 fc4a 	bl	8001e5c <writeReg>
  writeData(0x64);
 80015c8:	2064      	movs	r0, #100	; 0x64
 80015ca:	f000 fc6d 	bl	8001ea8 <writeData>
  writeData(0x03);
 80015ce:	2003      	movs	r0, #3
 80015d0:	f000 fc6a 	bl	8001ea8 <writeData>
  writeData(0x12);
 80015d4:	2012      	movs	r0, #18
 80015d6:	f000 fc67 	bl	8001ea8 <writeData>
  writeData(0x81);
 80015da:	2081      	movs	r0, #129	; 0x81
 80015dc:	f000 fc64 	bl	8001ea8 <writeData>
  writeReg(0xE8);
 80015e0:	20e8      	movs	r0, #232	; 0xe8
 80015e2:	f000 fc3b 	bl	8001e5c <writeReg>
  writeData(0x85);
 80015e6:	2085      	movs	r0, #133	; 0x85
 80015e8:	f000 fc5e 	bl	8001ea8 <writeData>
  writeData(0x00);
 80015ec:	2000      	movs	r0, #0
 80015ee:	f000 fc5b 	bl	8001ea8 <writeData>
  writeData(0x78);
 80015f2:	2078      	movs	r0, #120	; 0x78
 80015f4:	f000 fc58 	bl	8001ea8 <writeData>
  writeReg(0xCB);
 80015f8:	20cb      	movs	r0, #203	; 0xcb
 80015fa:	f000 fc2f 	bl	8001e5c <writeReg>
  writeData(0x39);
 80015fe:	2039      	movs	r0, #57	; 0x39
 8001600:	f000 fc52 	bl	8001ea8 <writeData>
  writeData(0x2C);
 8001604:	202c      	movs	r0, #44	; 0x2c
 8001606:	f000 fc4f 	bl	8001ea8 <writeData>
  writeData(0x00);
 800160a:	2000      	movs	r0, #0
 800160c:	f000 fc4c 	bl	8001ea8 <writeData>
  writeData(0x34);
 8001610:	2034      	movs	r0, #52	; 0x34
 8001612:	f000 fc49 	bl	8001ea8 <writeData>
  writeData(0x02);
 8001616:	2002      	movs	r0, #2
 8001618:	f000 fc46 	bl	8001ea8 <writeData>
  writeReg(0xF7);
 800161c:	20f7      	movs	r0, #247	; 0xf7
 800161e:	f000 fc1d 	bl	8001e5c <writeReg>
  writeData(0x20);
 8001622:	2020      	movs	r0, #32
 8001624:	f000 fc40 	bl	8001ea8 <writeData>
  writeReg(0xEA);
 8001628:	20ea      	movs	r0, #234	; 0xea
 800162a:	f000 fc17 	bl	8001e5c <writeReg>
  writeData(0x00);
 800162e:	2000      	movs	r0, #0
 8001630:	f000 fc3a 	bl	8001ea8 <writeData>
  writeData(0x00);
 8001634:	2000      	movs	r0, #0
 8001636:	f000 fc37 	bl	8001ea8 <writeData>
  writeReg(0xB1);
 800163a:	20b1      	movs	r0, #177	; 0xb1
 800163c:	f000 fc0e 	bl	8001e5c <writeReg>
  writeData(0x00);
 8001640:	2000      	movs	r0, #0
 8001642:	f000 fc31 	bl	8001ea8 <writeData>
  writeData(0x1B);
 8001646:	201b      	movs	r0, #27
 8001648:	f000 fc2e 	bl	8001ea8 <writeData>
  writeReg(0xB6);
 800164c:	20b6      	movs	r0, #182	; 0xb6
 800164e:	f000 fc05 	bl	8001e5c <writeReg>
  writeData(0x0A);
 8001652:	200a      	movs	r0, #10
 8001654:	f000 fc28 	bl	8001ea8 <writeData>
  writeData(0xA2);
 8001658:	20a2      	movs	r0, #162	; 0xa2
 800165a:	f000 fc25 	bl	8001ea8 <writeData>
  writeReg(0xC0);
 800165e:	20c0      	movs	r0, #192	; 0xc0
 8001660:	f000 fbfc 	bl	8001e5c <writeReg>
  writeData(0x10);
 8001664:	2010      	movs	r0, #16
 8001666:	f000 fc1f 	bl	8001ea8 <writeData>
  writeReg(0xC1);
 800166a:	20c1      	movs	r0, #193	; 0xc1
 800166c:	f000 fbf6 	bl	8001e5c <writeReg>
  writeData(0x10);
 8001670:	2010      	movs	r0, #16
 8001672:	f000 fc19 	bl	8001ea8 <writeData>
  writeReg(0xC5);
 8001676:	20c5      	movs	r0, #197	; 0xc5
 8001678:	f000 fbf0 	bl	8001e5c <writeReg>
  writeData(0x45);
 800167c:	2045      	movs	r0, #69	; 0x45
 800167e:	f000 fc13 	bl	8001ea8 <writeData>
  writeData(0x15);
 8001682:	2015      	movs	r0, #21
 8001684:	f000 fc10 	bl	8001ea8 <writeData>
  writeReg(0xC7);
 8001688:	20c7      	movs	r0, #199	; 0xc7
 800168a:	f000 fbe7 	bl	8001e5c <writeReg>
  writeData(0x90);
 800168e:	2090      	movs	r0, #144	; 0x90
 8001690:	f000 fc0a 	bl	8001ea8 <writeData>
  writeReg(0x36);
 8001694:	2036      	movs	r0, #54	; 0x36
 8001696:	f000 fbe1 	bl	8001e5c <writeReg>
  writeData(0xC8);
 800169a:	20c8      	movs	r0, #200	; 0xc8
 800169c:	f000 fc04 	bl	8001ea8 <writeData>
  writeReg(0xF2);
 80016a0:	20f2      	movs	r0, #242	; 0xf2
 80016a2:	f000 fbdb 	bl	8001e5c <writeReg>
  writeData(0x00);
 80016a6:	2000      	movs	r0, #0
 80016a8:	f000 fbfe 	bl	8001ea8 <writeData>
  writeReg(0xB0);
 80016ac:	20b0      	movs	r0, #176	; 0xb0
 80016ae:	f000 fbd5 	bl	8001e5c <writeReg>
  writeData(0xC2);
 80016b2:	20c2      	movs	r0, #194	; 0xc2
 80016b4:	f000 fbf8 	bl	8001ea8 <writeData>
  writeReg(0xB6);
 80016b8:	20b6      	movs	r0, #182	; 0xb6
 80016ba:	f000 fbcf 	bl	8001e5c <writeReg>
  writeData(0x0A);
 80016be:	200a      	movs	r0, #10
 80016c0:	f000 fbf2 	bl	8001ea8 <writeData>
  writeData(0xA7);
 80016c4:	20a7      	movs	r0, #167	; 0xa7
 80016c6:	f000 fbef 	bl	8001ea8 <writeData>
  writeData(0x27);
 80016ca:	2027      	movs	r0, #39	; 0x27
 80016cc:	f000 fbec 	bl	8001ea8 <writeData>
  writeData(0x04);
 80016d0:	2004      	movs	r0, #4
 80016d2:	f000 fbe9 	bl	8001ea8 <writeData>

  /* Colomn address set */
  writeReg(0x2A);
 80016d6:	202a      	movs	r0, #42	; 0x2a
 80016d8:	f000 fbc0 	bl	8001e5c <writeReg>
  writeData(0x00);
 80016dc:	2000      	movs	r0, #0
 80016de:	f000 fbe3 	bl	8001ea8 <writeData>
  writeData(0x00);
 80016e2:	2000      	movs	r0, #0
 80016e4:	f000 fbe0 	bl	8001ea8 <writeData>
  writeData(0x00);
 80016e8:	2000      	movs	r0, #0
 80016ea:	f000 fbdd 	bl	8001ea8 <writeData>
  writeData(0xEF);
 80016ee:	20ef      	movs	r0, #239	; 0xef
 80016f0:	f000 fbda 	bl	8001ea8 <writeData>
  /* Page address set */
  writeReg(0x2B);
 80016f4:	202b      	movs	r0, #43	; 0x2b
 80016f6:	f000 fbb1 	bl	8001e5c <writeReg>
  writeData(0x00);
 80016fa:	2000      	movs	r0, #0
 80016fc:	f000 fbd4 	bl	8001ea8 <writeData>
  writeData(0x00);
 8001700:	2000      	movs	r0, #0
 8001702:	f000 fbd1 	bl	8001ea8 <writeData>
  writeData(0x01);
 8001706:	2001      	movs	r0, #1
 8001708:	f000 fbce 	bl	8001ea8 <writeData>
  writeData(0x3F);
 800170c:	203f      	movs	r0, #63	; 0x3f
 800170e:	f000 fbcb 	bl	8001ea8 <writeData>
  writeReg(0xF6);
 8001712:	20f6      	movs	r0, #246	; 0xf6
 8001714:	f000 fba2 	bl	8001e5c <writeReg>
  writeData(0x01);
 8001718:	2001      	movs	r0, #1
 800171a:	f000 fbc5 	bl	8001ea8 <writeData>
  writeData(0x00);
 800171e:	2000      	movs	r0, #0
 8001720:	f000 fbc2 	bl	8001ea8 <writeData>
  writeData(0x06);
 8001724:	2006      	movs	r0, #6
 8001726:	f000 fbbf 	bl	8001ea8 <writeData>

  writeReg(0x2C);
 800172a:	202c      	movs	r0, #44	; 0x2c
 800172c:	f000 fb96 	bl	8001e5c <writeReg>
  HAL_Delay(200);
 8001730:	20c8      	movs	r0, #200	; 0xc8
 8001732:	f001 f9f9 	bl	8002b28 <HAL_Delay>

  writeReg(0x26);
 8001736:	2026      	movs	r0, #38	; 0x26
 8001738:	f000 fb90 	bl	8001e5c <writeReg>
  writeData(0x01);
 800173c:	2001      	movs	r0, #1
 800173e:	f000 fbb3 	bl	8001ea8 <writeData>

  writeReg(0xE0);
 8001742:	20e0      	movs	r0, #224	; 0xe0
 8001744:	f000 fb8a 	bl	8001e5c <writeReg>
  writeData(0x0F);
 8001748:	200f      	movs	r0, #15
 800174a:	f000 fbad 	bl	8001ea8 <writeData>
  writeData(0x29);
 800174e:	2029      	movs	r0, #41	; 0x29
 8001750:	f000 fbaa 	bl	8001ea8 <writeData>
  writeData(0x24);
 8001754:	2024      	movs	r0, #36	; 0x24
 8001756:	f000 fba7 	bl	8001ea8 <writeData>
  writeData(0x0C);
 800175a:	200c      	movs	r0, #12
 800175c:	f000 fba4 	bl	8001ea8 <writeData>
  writeData(0x0E);
 8001760:	200e      	movs	r0, #14
 8001762:	f000 fba1 	bl	8001ea8 <writeData>
  writeData(0x09);
 8001766:	2009      	movs	r0, #9
 8001768:	f000 fb9e 	bl	8001ea8 <writeData>
  writeData(0x4E);
 800176c:	204e      	movs	r0, #78	; 0x4e
 800176e:	f000 fb9b 	bl	8001ea8 <writeData>
  writeData(0x78);
 8001772:	2078      	movs	r0, #120	; 0x78
 8001774:	f000 fb98 	bl	8001ea8 <writeData>
  writeData(0x3C);
 8001778:	203c      	movs	r0, #60	; 0x3c
 800177a:	f000 fb95 	bl	8001ea8 <writeData>
  writeData(0x09);
 800177e:	2009      	movs	r0, #9
 8001780:	f000 fb92 	bl	8001ea8 <writeData>
  writeData(0x13);
 8001784:	2013      	movs	r0, #19
 8001786:	f000 fb8f 	bl	8001ea8 <writeData>
  writeData(0x05);
 800178a:	2005      	movs	r0, #5
 800178c:	f000 fb8c 	bl	8001ea8 <writeData>
  writeData(0x17);
 8001790:	2017      	movs	r0, #23
 8001792:	f000 fb89 	bl	8001ea8 <writeData>
  writeData(0x11);
 8001796:	2011      	movs	r0, #17
 8001798:	f000 fb86 	bl	8001ea8 <writeData>
  writeData(0x00);
 800179c:	2000      	movs	r0, #0
 800179e:	f000 fb83 	bl	8001ea8 <writeData>
  writeReg(0xE1);
 80017a2:	20e1      	movs	r0, #225	; 0xe1
 80017a4:	f000 fb5a 	bl	8001e5c <writeReg>
  writeData(0x00);
 80017a8:	2000      	movs	r0, #0
 80017aa:	f000 fb7d 	bl	8001ea8 <writeData>
  writeData(0x16);
 80017ae:	2016      	movs	r0, #22
 80017b0:	f000 fb7a 	bl	8001ea8 <writeData>
  writeData(0x1B);
 80017b4:	201b      	movs	r0, #27
 80017b6:	f000 fb77 	bl	8001ea8 <writeData>
  writeData(0x04);
 80017ba:	2004      	movs	r0, #4
 80017bc:	f000 fb74 	bl	8001ea8 <writeData>
  writeData(0x11);
 80017c0:	2011      	movs	r0, #17
 80017c2:	f000 fb71 	bl	8001ea8 <writeData>
  writeData(0x07);
 80017c6:	2007      	movs	r0, #7
 80017c8:	f000 fb6e 	bl	8001ea8 <writeData>
  writeData(0x31);
 80017cc:	2031      	movs	r0, #49	; 0x31
 80017ce:	f000 fb6b 	bl	8001ea8 <writeData>
  writeData(0x33);
 80017d2:	2033      	movs	r0, #51	; 0x33
 80017d4:	f000 fb68 	bl	8001ea8 <writeData>
  writeData(0x42);
 80017d8:	2042      	movs	r0, #66	; 0x42
 80017da:	f000 fb65 	bl	8001ea8 <writeData>
  writeData(0x05);
 80017de:	2005      	movs	r0, #5
 80017e0:	f000 fb62 	bl	8001ea8 <writeData>
  writeData(0x0C);
 80017e4:	200c      	movs	r0, #12
 80017e6:	f000 fb5f 	bl	8001ea8 <writeData>
  writeData(0x0A);
 80017ea:	200a      	movs	r0, #10
 80017ec:	f000 fb5c 	bl	8001ea8 <writeData>
  writeData(0x28);
 80017f0:	2028      	movs	r0, #40	; 0x28
 80017f2:	f000 fb59 	bl	8001ea8 <writeData>
  writeData(0x2F);
 80017f6:	202f      	movs	r0, #47	; 0x2f
 80017f8:	f000 fb56 	bl	8001ea8 <writeData>
  writeData(0x0F);
 80017fc:	200f      	movs	r0, #15
 80017fe:	f000 fb53 	bl	8001ea8 <writeData>

  writeReg(0x11);
 8001802:	2011      	movs	r0, #17
 8001804:	f000 fb2a 	bl	8001e5c <writeReg>
  HAL_Delay(200);
 8001808:	20c8      	movs	r0, #200	; 0xc8
 800180a:	f001 f98d 	bl	8002b28 <HAL_Delay>
  writeReg(0x29);
 800180e:	2029      	movs	r0, #41	; 0x29
 8001810:	f000 fb24 	bl	8001e5c <writeReg>
  /* GRAM start writing */
  writeReg(0x2C);
 8001814:	202c      	movs	r0, #44	; 0x2c
 8001816:	f000 fb21 	bl	8001e5c <writeReg>
  /* USER CODE END SPI5_Init 2 */

}
 800181a:	bf00      	nop
 800181c:	bd80      	pop	{r7, pc}
 800181e:	bf00      	nop
 8001820:	200003c4 	.word	0x200003c4
 8001824:	40015000 	.word	0x40015000

08001828 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001828:	b580      	push	{r7, lr}
 800182a:	b086      	sub	sp, #24
 800182c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800182e:	f107 0308 	add.w	r3, r7, #8
 8001832:	2200      	movs	r2, #0
 8001834:	601a      	str	r2, [r3, #0]
 8001836:	605a      	str	r2, [r3, #4]
 8001838:	609a      	str	r2, [r3, #8]
 800183a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800183c:	463b      	mov	r3, r7
 800183e:	2200      	movs	r2, #0
 8001840:	601a      	str	r2, [r3, #0]
 8001842:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001844:	4b1e      	ldr	r3, [pc, #120]	; (80018c0 <MX_TIM1_Init+0x98>)
 8001846:	4a1f      	ldr	r2, [pc, #124]	; (80018c4 <MX_TIM1_Init+0x9c>)
 8001848:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 800184a:	4b1d      	ldr	r3, [pc, #116]	; (80018c0 <MX_TIM1_Init+0x98>)
 800184c:	2200      	movs	r2, #0
 800184e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001850:	4b1b      	ldr	r3, [pc, #108]	; (80018c0 <MX_TIM1_Init+0x98>)
 8001852:	2200      	movs	r2, #0
 8001854:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 0;
 8001856:	4b1a      	ldr	r3, [pc, #104]	; (80018c0 <MX_TIM1_Init+0x98>)
 8001858:	2200      	movs	r2, #0
 800185a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800185c:	4b18      	ldr	r3, [pc, #96]	; (80018c0 <MX_TIM1_Init+0x98>)
 800185e:	2200      	movs	r2, #0
 8001860:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001862:	4b17      	ldr	r3, [pc, #92]	; (80018c0 <MX_TIM1_Init+0x98>)
 8001864:	2200      	movs	r2, #0
 8001866:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001868:	4b15      	ldr	r3, [pc, #84]	; (80018c0 <MX_TIM1_Init+0x98>)
 800186a:	2200      	movs	r2, #0
 800186c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800186e:	4814      	ldr	r0, [pc, #80]	; (80018c0 <MX_TIM1_Init+0x98>)
 8001870:	f004 f960 	bl	8005b34 <HAL_TIM_Base_Init>
 8001874:	4603      	mov	r3, r0
 8001876:	2b00      	cmp	r3, #0
 8001878:	d001      	beq.n	800187e <MX_TIM1_Init+0x56>
  {
    Error_Handler();
 800187a:	f000 fb4d 	bl	8001f18 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800187e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001882:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001884:	f107 0308 	add.w	r3, r7, #8
 8001888:	4619      	mov	r1, r3
 800188a:	480d      	ldr	r0, [pc, #52]	; (80018c0 <MX_TIM1_Init+0x98>)
 800188c:	f004 fcd6 	bl	800623c <HAL_TIM_ConfigClockSource>
 8001890:	4603      	mov	r3, r0
 8001892:	2b00      	cmp	r3, #0
 8001894:	d001      	beq.n	800189a <MX_TIM1_Init+0x72>
  {
    Error_Handler();
 8001896:	f000 fb3f 	bl	8001f18 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800189a:	2300      	movs	r3, #0
 800189c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800189e:	2300      	movs	r3, #0
 80018a0:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80018a2:	463b      	mov	r3, r7
 80018a4:	4619      	mov	r1, r3
 80018a6:	4806      	ldr	r0, [pc, #24]	; (80018c0 <MX_TIM1_Init+0x98>)
 80018a8:	f005 fa32 	bl	8006d10 <HAL_TIMEx_MasterConfigSynchronization>
 80018ac:	4603      	mov	r3, r0
 80018ae:	2b00      	cmp	r3, #0
 80018b0:	d001      	beq.n	80018b6 <MX_TIM1_Init+0x8e>
  {
    Error_Handler();
 80018b2:	f000 fb31 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 80018b6:	bf00      	nop
 80018b8:	3718      	adds	r7, #24
 80018ba:	46bd      	mov	sp, r7
 80018bc:	bd80      	pop	{r7, pc}
 80018be:	bf00      	nop
 80018c0:	2000041c 	.word	0x2000041c
 80018c4:	40010000 	.word	0x40010000

080018c8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80018c8:	b580      	push	{r7, lr}
 80018ca:	b08e      	sub	sp, #56	; 0x38
 80018cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018ce:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80018d2:	2200      	movs	r2, #0
 80018d4:	601a      	str	r2, [r3, #0]
 80018d6:	605a      	str	r2, [r3, #4]
 80018d8:	609a      	str	r2, [r3, #8]
 80018da:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018dc:	f107 0320 	add.w	r3, r7, #32
 80018e0:	2200      	movs	r2, #0
 80018e2:	601a      	str	r2, [r3, #0]
 80018e4:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80018e6:	1d3b      	adds	r3, r7, #4
 80018e8:	2200      	movs	r2, #0
 80018ea:	601a      	str	r2, [r3, #0]
 80018ec:	605a      	str	r2, [r3, #4]
 80018ee:	609a      	str	r2, [r3, #8]
 80018f0:	60da      	str	r2, [r3, #12]
 80018f2:	611a      	str	r2, [r3, #16]
 80018f4:	615a      	str	r2, [r3, #20]
 80018f6:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80018f8:	4b2d      	ldr	r3, [pc, #180]	; (80019b0 <MX_TIM2_Init+0xe8>)
 80018fa:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80018fe:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1;
 8001900:	4b2b      	ldr	r3, [pc, #172]	; (80019b0 <MX_TIM2_Init+0xe8>)
 8001902:	2201      	movs	r2, #1
 8001904:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001906:	4b2a      	ldr	r3, [pc, #168]	; (80019b0 <MX_TIM2_Init+0xe8>)
 8001908:	2200      	movs	r2, #0
 800190a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1249;
 800190c:	4b28      	ldr	r3, [pc, #160]	; (80019b0 <MX_TIM2_Init+0xe8>)
 800190e:	f240 42e1 	movw	r2, #1249	; 0x4e1
 8001912:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001914:	4b26      	ldr	r3, [pc, #152]	; (80019b0 <MX_TIM2_Init+0xe8>)
 8001916:	2200      	movs	r2, #0
 8001918:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800191a:	4b25      	ldr	r3, [pc, #148]	; (80019b0 <MX_TIM2_Init+0xe8>)
 800191c:	2200      	movs	r2, #0
 800191e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001920:	4823      	ldr	r0, [pc, #140]	; (80019b0 <MX_TIM2_Init+0xe8>)
 8001922:	f004 f907 	bl	8005b34 <HAL_TIM_Base_Init>
 8001926:	4603      	mov	r3, r0
 8001928:	2b00      	cmp	r3, #0
 800192a:	d001      	beq.n	8001930 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 800192c:	f000 faf4 	bl	8001f18 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001930:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001934:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001936:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800193a:	4619      	mov	r1, r3
 800193c:	481c      	ldr	r0, [pc, #112]	; (80019b0 <MX_TIM2_Init+0xe8>)
 800193e:	f004 fc7d 	bl	800623c <HAL_TIM_ConfigClockSource>
 8001942:	4603      	mov	r3, r0
 8001944:	2b00      	cmp	r3, #0
 8001946:	d001      	beq.n	800194c <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8001948:	f000 fae6 	bl	8001f18 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800194c:	4818      	ldr	r0, [pc, #96]	; (80019b0 <MX_TIM2_Init+0xe8>)
 800194e:	f004 f940 	bl	8005bd2 <HAL_TIM_PWM_Init>
 8001952:	4603      	mov	r3, r0
 8001954:	2b00      	cmp	r3, #0
 8001956:	d001      	beq.n	800195c <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8001958:	f000 fade 	bl	8001f18 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800195c:	2300      	movs	r3, #0
 800195e:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001960:	2300      	movs	r3, #0
 8001962:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001964:	f107 0320 	add.w	r3, r7, #32
 8001968:	4619      	mov	r1, r3
 800196a:	4811      	ldr	r0, [pc, #68]	; (80019b0 <MX_TIM2_Init+0xe8>)
 800196c:	f005 f9d0 	bl	8006d10 <HAL_TIMEx_MasterConfigSynchronization>
 8001970:	4603      	mov	r3, r0
 8001972:	2b00      	cmp	r3, #0
 8001974:	d001      	beq.n	800197a <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8001976:	f000 facf 	bl	8001f18 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800197a:	2360      	movs	r3, #96	; 0x60
 800197c:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 312;
 800197e:	f44f 739c 	mov.w	r3, #312	; 0x138
 8001982:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001984:	2300      	movs	r3, #0
 8001986:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001988:	2300      	movs	r3, #0
 800198a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800198c:	1d3b      	adds	r3, r7, #4
 800198e:	2200      	movs	r2, #0
 8001990:	4619      	mov	r1, r3
 8001992:	4807      	ldr	r0, [pc, #28]	; (80019b0 <MX_TIM2_Init+0xe8>)
 8001994:	f004 fb8c 	bl	80060b0 <HAL_TIM_PWM_ConfigChannel>
 8001998:	4603      	mov	r3, r0
 800199a:	2b00      	cmp	r3, #0
 800199c:	d001      	beq.n	80019a2 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 800199e:	f000 fabb 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80019a2:	4803      	ldr	r0, [pc, #12]	; (80019b0 <MX_TIM2_Init+0xe8>)
 80019a4:	f000 fd60 	bl	8002468 <HAL_TIM_MspPostInit>

}
 80019a8:	bf00      	nop
 80019aa:	3738      	adds	r7, #56	; 0x38
 80019ac:	46bd      	mov	sp, r7
 80019ae:	bd80      	pop	{r7, pc}
 80019b0:	2000045c 	.word	0x2000045c

080019b4 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80019b4:	b580      	push	{r7, lr}
 80019b6:	b092      	sub	sp, #72	; 0x48
 80019b8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80019ba:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80019be:	2200      	movs	r2, #0
 80019c0:	601a      	str	r2, [r3, #0]
 80019c2:	605a      	str	r2, [r3, #4]
 80019c4:	609a      	str	r2, [r3, #8]
 80019c6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80019c8:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80019cc:	2200      	movs	r2, #0
 80019ce:	601a      	str	r2, [r3, #0]
 80019d0:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 80019d2:	f107 0320 	add.w	r3, r7, #32
 80019d6:	2200      	movs	r2, #0
 80019d8:	601a      	str	r2, [r3, #0]
 80019da:	605a      	str	r2, [r3, #4]
 80019dc:	609a      	str	r2, [r3, #8]
 80019de:	60da      	str	r2, [r3, #12]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80019e0:	1d3b      	adds	r3, r7, #4
 80019e2:	2200      	movs	r2, #0
 80019e4:	601a      	str	r2, [r3, #0]
 80019e6:	605a      	str	r2, [r3, #4]
 80019e8:	609a      	str	r2, [r3, #8]
 80019ea:	60da      	str	r2, [r3, #12]
 80019ec:	611a      	str	r2, [r3, #16]
 80019ee:	615a      	str	r2, [r3, #20]
 80019f0:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80019f2:	4b43      	ldr	r3, [pc, #268]	; (8001b00 <MX_TIM3_Init+0x14c>)
 80019f4:	4a43      	ldr	r2, [pc, #268]	; (8001b04 <MX_TIM3_Init+0x150>)
 80019f6:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 179;
 80019f8:	4b41      	ldr	r3, [pc, #260]	; (8001b00 <MX_TIM3_Init+0x14c>)
 80019fa:	22b3      	movs	r2, #179	; 0xb3
 80019fc:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80019fe:	4b40      	ldr	r3, [pc, #256]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a00:	2200      	movs	r2, #0
 8001a02:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 30000;
 8001a04:	4b3e      	ldr	r3, [pc, #248]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a06:	f247 5230 	movw	r2, #30000	; 0x7530
 8001a0a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001a0c:	4b3c      	ldr	r3, [pc, #240]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a0e:	2200      	movs	r2, #0
 8001a10:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001a12:	4b3b      	ldr	r3, [pc, #236]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a14:	2200      	movs	r2, #0
 8001a16:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001a18:	4839      	ldr	r0, [pc, #228]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a1a:	f004 f88b 	bl	8005b34 <HAL_TIM_Base_Init>
 8001a1e:	4603      	mov	r3, r0
 8001a20:	2b00      	cmp	r3, #0
 8001a22:	d001      	beq.n	8001a28 <MX_TIM3_Init+0x74>
  {
    Error_Handler();
 8001a24:	f000 fa78 	bl	8001f18 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001a28:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001a2c:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001a2e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8001a32:	4619      	mov	r1, r3
 8001a34:	4832      	ldr	r0, [pc, #200]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a36:	f004 fc01 	bl	800623c <HAL_TIM_ConfigClockSource>
 8001a3a:	4603      	mov	r3, r0
 8001a3c:	2b00      	cmp	r3, #0
 8001a3e:	d001      	beq.n	8001a44 <MX_TIM3_Init+0x90>
  {
    Error_Handler();
 8001a40:	f000 fa6a 	bl	8001f18 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 8001a44:	482e      	ldr	r0, [pc, #184]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a46:	f004 f937 	bl	8005cb8 <HAL_TIM_IC_Init>
 8001a4a:	4603      	mov	r3, r0
 8001a4c:	2b00      	cmp	r3, #0
 8001a4e:	d001      	beq.n	8001a54 <MX_TIM3_Init+0xa0>
  {
    Error_Handler();
 8001a50:	f000 fa62 	bl	8001f18 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001a54:	482a      	ldr	r0, [pc, #168]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a56:	f004 f8bc 	bl	8005bd2 <HAL_TIM_PWM_Init>
 8001a5a:	4603      	mov	r3, r0
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d001      	beq.n	8001a64 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8001a60:	f000 fa5a 	bl	8001f18 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001a64:	2300      	movs	r3, #0
 8001a66:	633b      	str	r3, [r7, #48]	; 0x30
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001a68:	2300      	movs	r3, #0
 8001a6a:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001a6c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001a70:	4619      	mov	r1, r3
 8001a72:	4823      	ldr	r0, [pc, #140]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a74:	f005 f94c 	bl	8006d10 <HAL_TIMEx_MasterConfigSynchronization>
 8001a78:	4603      	mov	r3, r0
 8001a7a:	2b00      	cmp	r3, #0
 8001a7c:	d001      	beq.n	8001a82 <MX_TIM3_Init+0xce>
  {
    Error_Handler();
 8001a7e:	f000 fa4b 	bl	8001f18 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8001a82:	2300      	movs	r3, #0
 8001a84:	623b      	str	r3, [r7, #32]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8001a86:	2301      	movs	r3, #1
 8001a88:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigIC.ICFilter = 0;
 8001a8e:	2300      	movs	r3, #0
 8001a90:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 8001a92:	f107 0320 	add.w	r3, r7, #32
 8001a96:	2200      	movs	r2, #0
 8001a98:	4619      	mov	r1, r3
 8001a9a:	4819      	ldr	r0, [pc, #100]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001a9c:	f004 fa6b 	bl	8005f76 <HAL_TIM_IC_ConfigChannel>
 8001aa0:	4603      	mov	r3, r0
 8001aa2:	2b00      	cmp	r3, #0
 8001aa4:	d001      	beq.n	8001aaa <MX_TIM3_Init+0xf6>
  {
    Error_Handler();
 8001aa6:	f000 fa37 	bl	8001f18 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_FALLING;
 8001aaa:	2302      	movs	r3, #2
 8001aac:	623b      	str	r3, [r7, #32]
  sConfigIC.ICSelection = TIM_ICSELECTION_INDIRECTTI;
 8001aae:	2302      	movs	r3, #2
 8001ab0:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 8001ab2:	f107 0320 	add.w	r3, r7, #32
 8001ab6:	2204      	movs	r2, #4
 8001ab8:	4619      	mov	r1, r3
 8001aba:	4811      	ldr	r0, [pc, #68]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001abc:	f004 fa5b 	bl	8005f76 <HAL_TIM_IC_ConfigChannel>
 8001ac0:	4603      	mov	r3, r0
 8001ac2:	2b00      	cmp	r3, #0
 8001ac4:	d001      	beq.n	8001aca <MX_TIM3_Init+0x116>
  {
    Error_Handler();
 8001ac6:	f000 fa27 	bl	8001f18 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001aca:	2360      	movs	r3, #96	; 0x60
 8001acc:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 10;
 8001ace:	230a      	movs	r3, #10
 8001ad0:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001ad2:	2300      	movs	r3, #0
 8001ad4:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001ad6:	2300      	movs	r3, #0
 8001ad8:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8001ada:	1d3b      	adds	r3, r7, #4
 8001adc:	2208      	movs	r2, #8
 8001ade:	4619      	mov	r1, r3
 8001ae0:	4807      	ldr	r0, [pc, #28]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001ae2:	f004 fae5 	bl	80060b0 <HAL_TIM_PWM_ConfigChannel>
 8001ae6:	4603      	mov	r3, r0
 8001ae8:	2b00      	cmp	r3, #0
 8001aea:	d001      	beq.n	8001af0 <MX_TIM3_Init+0x13c>
  {
    Error_Handler();
 8001aec:	f000 fa14 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8001af0:	4803      	ldr	r0, [pc, #12]	; (8001b00 <MX_TIM3_Init+0x14c>)
 8001af2:	f000 fcb9 	bl	8002468 <HAL_TIM_MspPostInit>

}
 8001af6:	bf00      	nop
 8001af8:	3748      	adds	r7, #72	; 0x48
 8001afa:	46bd      	mov	sp, r7
 8001afc:	bd80      	pop	{r7, pc}
 8001afe:	bf00      	nop
 8001b00:	2000049c 	.word	0x2000049c
 8001b04:	40000400 	.word	0x40000400

08001b08 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001b08:	b580      	push	{r7, lr}
 8001b0a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001b0c:	4b11      	ldr	r3, [pc, #68]	; (8001b54 <MX_USART1_UART_Init+0x4c>)
 8001b0e:	4a12      	ldr	r2, [pc, #72]	; (8001b58 <MX_USART1_UART_Init+0x50>)
 8001b10:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8001b12:	4b10      	ldr	r3, [pc, #64]	; (8001b54 <MX_USART1_UART_Init+0x4c>)
 8001b14:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001b18:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001b1a:	4b0e      	ldr	r3, [pc, #56]	; (8001b54 <MX_USART1_UART_Init+0x4c>)
 8001b1c:	2200      	movs	r2, #0
 8001b1e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001b20:	4b0c      	ldr	r3, [pc, #48]	; (8001b54 <MX_USART1_UART_Init+0x4c>)
 8001b22:	2200      	movs	r2, #0
 8001b24:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001b26:	4b0b      	ldr	r3, [pc, #44]	; (8001b54 <MX_USART1_UART_Init+0x4c>)
 8001b28:	2200      	movs	r2, #0
 8001b2a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001b2c:	4b09      	ldr	r3, [pc, #36]	; (8001b54 <MX_USART1_UART_Init+0x4c>)
 8001b2e:	220c      	movs	r2, #12
 8001b30:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001b32:	4b08      	ldr	r3, [pc, #32]	; (8001b54 <MX_USART1_UART_Init+0x4c>)
 8001b34:	2200      	movs	r2, #0
 8001b36:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001b38:	4b06      	ldr	r3, [pc, #24]	; (8001b54 <MX_USART1_UART_Init+0x4c>)
 8001b3a:	2200      	movs	r2, #0
 8001b3c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001b3e:	4805      	ldr	r0, [pc, #20]	; (8001b54 <MX_USART1_UART_Init+0x4c>)
 8001b40:	f005 f976 	bl	8006e30 <HAL_UART_Init>
 8001b44:	4603      	mov	r3, r0
 8001b46:	2b00      	cmp	r3, #0
 8001b48:	d001      	beq.n	8001b4e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8001b4a:	f000 f9e5 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001b4e:	bf00      	nop
 8001b50:	bd80      	pop	{r7, pc}
 8001b52:	bf00      	nop
 8001b54:	200004dc 	.word	0x200004dc
 8001b58:	40011000 	.word	0x40011000

08001b5c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001b5c:	b580      	push	{r7, lr}
 8001b5e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001b60:	4b11      	ldr	r3, [pc, #68]	; (8001ba8 <MX_USART2_UART_Init+0x4c>)
 8001b62:	4a12      	ldr	r2, [pc, #72]	; (8001bac <MX_USART2_UART_Init+0x50>)
 8001b64:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8001b66:	4b10      	ldr	r3, [pc, #64]	; (8001ba8 <MX_USART2_UART_Init+0x4c>)
 8001b68:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8001b6c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001b6e:	4b0e      	ldr	r3, [pc, #56]	; (8001ba8 <MX_USART2_UART_Init+0x4c>)
 8001b70:	2200      	movs	r2, #0
 8001b72:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001b74:	4b0c      	ldr	r3, [pc, #48]	; (8001ba8 <MX_USART2_UART_Init+0x4c>)
 8001b76:	2200      	movs	r2, #0
 8001b78:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001b7a:	4b0b      	ldr	r3, [pc, #44]	; (8001ba8 <MX_USART2_UART_Init+0x4c>)
 8001b7c:	2200      	movs	r2, #0
 8001b7e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001b80:	4b09      	ldr	r3, [pc, #36]	; (8001ba8 <MX_USART2_UART_Init+0x4c>)
 8001b82:	220c      	movs	r2, #12
 8001b84:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001b86:	4b08      	ldr	r3, [pc, #32]	; (8001ba8 <MX_USART2_UART_Init+0x4c>)
 8001b88:	2200      	movs	r2, #0
 8001b8a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001b8c:	4b06      	ldr	r3, [pc, #24]	; (8001ba8 <MX_USART2_UART_Init+0x4c>)
 8001b8e:	2200      	movs	r2, #0
 8001b90:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001b92:	4805      	ldr	r0, [pc, #20]	; (8001ba8 <MX_USART2_UART_Init+0x4c>)
 8001b94:	f005 f94c 	bl	8006e30 <HAL_UART_Init>
 8001b98:	4603      	mov	r3, r0
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	d001      	beq.n	8001ba2 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8001b9e:	f000 f9bb 	bl	8001f18 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001ba2:	bf00      	nop
 8001ba4:	bd80      	pop	{r7, pc}
 8001ba6:	bf00      	nop
 8001ba8:	2000051c 	.word	0x2000051c
 8001bac:	40004400 	.word	0x40004400

08001bb0 <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 8001bb0:	b580      	push	{r7, lr}
 8001bb2:	b088      	sub	sp, #32
 8001bb4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 8001bb6:	1d3b      	adds	r3, r7, #4
 8001bb8:	2200      	movs	r2, #0
 8001bba:	601a      	str	r2, [r3, #0]
 8001bbc:	605a      	str	r2, [r3, #4]
 8001bbe:	609a      	str	r2, [r3, #8]
 8001bc0:	60da      	str	r2, [r3, #12]
 8001bc2:	611a      	str	r2, [r3, #16]
 8001bc4:	615a      	str	r2, [r3, #20]
 8001bc6:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001bc8:	4b4a      	ldr	r3, [pc, #296]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001bca:	4a4b      	ldr	r2, [pc, #300]	; (8001cf8 <MX_FMC_Init+0x148>)
 8001bcc:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001bce:	4b49      	ldr	r3, [pc, #292]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001bd0:	2201      	movs	r2, #1
 8001bd2:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001bd4:	4b47      	ldr	r3, [pc, #284]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001bd6:	2200      	movs	r2, #0
 8001bd8:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001bda:	4b46      	ldr	r3, [pc, #280]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001bdc:	2204      	movs	r2, #4
 8001bde:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001be0:	4b44      	ldr	r3, [pc, #272]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001be2:	2210      	movs	r2, #16
 8001be4:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001be6:	4b43      	ldr	r3, [pc, #268]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001be8:	2240      	movs	r2, #64	; 0x40
 8001bea:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001bec:	4b41      	ldr	r3, [pc, #260]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001bee:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001bf2:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001bf4:	4b3f      	ldr	r3, [pc, #252]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001bfa:	4b3e      	ldr	r3, [pc, #248]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001bfc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001c00:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001c02:	4b3c      	ldr	r3, [pc, #240]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001c04:	2200      	movs	r2, #0
 8001c06:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001c08:	4b3a      	ldr	r3, [pc, #232]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001c0a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001c0e:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8001c10:	2302      	movs	r3, #2
 8001c12:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001c14:	2307      	movs	r3, #7
 8001c16:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001c18:	2304      	movs	r3, #4
 8001c1a:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 7;
 8001c1c:	2307      	movs	r3, #7
 8001c1e:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 3;
 8001c20:	2303      	movs	r3, #3
 8001c22:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8001c24:	2302      	movs	r3, #2
 8001c26:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 8001c28:	2302      	movs	r3, #2
 8001c2a:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001c2c:	1d3b      	adds	r3, r7, #4
 8001c2e:	4619      	mov	r1, r3
 8001c30:	4830      	ldr	r0, [pc, #192]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001c32:	f003 fcbb 	bl	80055ac <HAL_SDRAM_Init>
 8001c36:	4603      	mov	r3, r0
 8001c38:	2b00      	cmp	r3, #0
 8001c3a:	d001      	beq.n	8001c40 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 8001c3c:	f000 f96c 	bl	8001f18 <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */
  __IO uint32_t tmpmrd = 0;
 8001c40:	2300      	movs	r3, #0
 8001c42:	603b      	str	r3, [r7, #0]

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8001c44:	4b2d      	ldr	r3, [pc, #180]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c46:	2201      	movs	r2, #1
 8001c48:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK2;
 8001c4a:	4b2c      	ldr	r3, [pc, #176]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c4c:	2208      	movs	r2, #8
 8001c4e:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 1;
 8001c50:	4b2a      	ldr	r3, [pc, #168]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c52:	2201      	movs	r2, #1
 8001c54:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8001c56:	4b29      	ldr	r3, [pc, #164]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c58:	2200      	movs	r2, #0
 8001c5a:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8001c5c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c60:	4926      	ldr	r1, [pc, #152]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c62:	4824      	ldr	r0, [pc, #144]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001c64:	f003 fcd6 	bl	8005614 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(100);
 8001c68:	2064      	movs	r0, #100	; 0x64
 8001c6a:	f000 ff5d 	bl	8002b28 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8001c6e:	4b23      	ldr	r3, [pc, #140]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c70:	2202      	movs	r2, #2
 8001c72:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 8001c74:	4b21      	ldr	r3, [pc, #132]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c76:	2208      	movs	r2, #8
 8001c78:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 1;
 8001c7a:	4b20      	ldr	r3, [pc, #128]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c7c:	2201      	movs	r2, #1
 8001c7e:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8001c80:	4b1e      	ldr	r3, [pc, #120]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c82:	2200      	movs	r2, #0
 8001c84:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8001c86:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c8a:	491c      	ldr	r1, [pc, #112]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c8c:	4819      	ldr	r0, [pc, #100]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001c8e:	f003 fcc1 	bl	8005614 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001c92:	4b1a      	ldr	r3, [pc, #104]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c94:	2203      	movs	r2, #3
 8001c96:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 8001c98:	4b18      	ldr	r3, [pc, #96]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001c9a:	2208      	movs	r2, #8
 8001c9c:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 4;
 8001c9e:	4b17      	ldr	r3, [pc, #92]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001ca0:	2204      	movs	r2, #4
 8001ca2:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8001ca4:	4b15      	ldr	r3, [pc, #84]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001ca6:	2200      	movs	r2, #0
 8001ca8:	60da      	str	r2, [r3, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8001caa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cae:	4913      	ldr	r1, [pc, #76]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001cb0:	4810      	ldr	r0, [pc, #64]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001cb2:	f003 fcaf 	bl	8005614 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8001cb6:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001cba:	603b      	str	r3, [r7, #0]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8001cbc:	4b0f      	ldr	r3, [pc, #60]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001cbe:	2204      	movs	r2, #4
 8001cc0:	601a      	str	r2, [r3, #0]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK2;
 8001cc2:	4b0e      	ldr	r3, [pc, #56]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001cc4:	2208      	movs	r2, #8
 8001cc6:	605a      	str	r2, [r3, #4]
  Command.AutoRefreshNumber      = 1;
 8001cc8:	4b0c      	ldr	r3, [pc, #48]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001cca:	2201      	movs	r2, #1
 8001ccc:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = tmpmrd;
 8001cce:	683b      	ldr	r3, [r7, #0]
 8001cd0:	4a0a      	ldr	r2, [pc, #40]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001cd2:	60d3      	str	r3, [r2, #12]

  /* Send the command */
  HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8001cd4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001cd8:	4908      	ldr	r1, [pc, #32]	; (8001cfc <MX_FMC_Init+0x14c>)
 8001cda:	4806      	ldr	r0, [pc, #24]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001cdc:	f003 fc9a 	bl	8005614 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 8001ce0:	f240 516a 	movw	r1, #1386	; 0x56a
 8001ce4:	4803      	ldr	r0, [pc, #12]	; (8001cf4 <MX_FMC_Init+0x144>)
 8001ce6:	f003 fcc0 	bl	800566a <HAL_SDRAM_ProgramRefreshRate>
  /* USER CODE END FMC_Init 2 */
}
 8001cea:	bf00      	nop
 8001cec:	3720      	adds	r7, #32
 8001cee:	46bd      	mov	sp, r7
 8001cf0:	bd80      	pop	{r7, pc}
 8001cf2:	bf00      	nop
 8001cf4:	2000055c 	.word	0x2000055c
 8001cf8:	a0000140 	.word	0xa0000140
 8001cfc:	20000590 	.word	0x20000590

08001d00 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001d00:	b580      	push	{r7, lr}
 8001d02:	b08e      	sub	sp, #56	; 0x38
 8001d04:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d06:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001d0a:	2200      	movs	r2, #0
 8001d0c:	601a      	str	r2, [r3, #0]
 8001d0e:	605a      	str	r2, [r3, #4]
 8001d10:	609a      	str	r2, [r3, #8]
 8001d12:	60da      	str	r2, [r3, #12]
 8001d14:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d16:	2300      	movs	r3, #0
 8001d18:	623b      	str	r3, [r7, #32]
 8001d1a:	4b4d      	ldr	r3, [pc, #308]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d1e:	4a4c      	ldr	r2, [pc, #304]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d20:	f043 0320 	orr.w	r3, r3, #32
 8001d24:	6313      	str	r3, [r2, #48]	; 0x30
 8001d26:	4b4a      	ldr	r3, [pc, #296]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d2a:	f003 0320 	and.w	r3, r3, #32
 8001d2e:	623b      	str	r3, [r7, #32]
 8001d30:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001d32:	2300      	movs	r3, #0
 8001d34:	61fb      	str	r3, [r7, #28]
 8001d36:	4b46      	ldr	r3, [pc, #280]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d3a:	4a45      	ldr	r2, [pc, #276]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001d40:	6313      	str	r3, [r2, #48]	; 0x30
 8001d42:	4b43      	ldr	r3, [pc, #268]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d46:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001d4a:	61fb      	str	r3, [r7, #28]
 8001d4c:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d4e:	2300      	movs	r3, #0
 8001d50:	61bb      	str	r3, [r7, #24]
 8001d52:	4b3f      	ldr	r3, [pc, #252]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d56:	4a3e      	ldr	r2, [pc, #248]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d58:	f043 0304 	orr.w	r3, r3, #4
 8001d5c:	6313      	str	r3, [r2, #48]	; 0x30
 8001d5e:	4b3c      	ldr	r3, [pc, #240]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d62:	f003 0304 	and.w	r3, r3, #4
 8001d66:	61bb      	str	r3, [r7, #24]
 8001d68:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d6a:	2300      	movs	r3, #0
 8001d6c:	617b      	str	r3, [r7, #20]
 8001d6e:	4b38      	ldr	r3, [pc, #224]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d72:	4a37      	ldr	r2, [pc, #220]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d74:	f043 0301 	orr.w	r3, r3, #1
 8001d78:	6313      	str	r3, [r2, #48]	; 0x30
 8001d7a:	4b35      	ldr	r3, [pc, #212]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d7e:	f003 0301 	and.w	r3, r3, #1
 8001d82:	617b      	str	r3, [r7, #20]
 8001d84:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d86:	2300      	movs	r3, #0
 8001d88:	613b      	str	r3, [r7, #16]
 8001d8a:	4b31      	ldr	r3, [pc, #196]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d8e:	4a30      	ldr	r2, [pc, #192]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d90:	f043 0302 	orr.w	r3, r3, #2
 8001d94:	6313      	str	r3, [r2, #48]	; 0x30
 8001d96:	4b2e      	ldr	r3, [pc, #184]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001d98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d9a:	f003 0302 	and.w	r3, r3, #2
 8001d9e:	613b      	str	r3, [r7, #16]
 8001da0:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001da2:	2300      	movs	r3, #0
 8001da4:	60fb      	str	r3, [r7, #12]
 8001da6:	4b2a      	ldr	r3, [pc, #168]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001da8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001daa:	4a29      	ldr	r2, [pc, #164]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001dac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001db0:	6313      	str	r3, [r2, #48]	; 0x30
 8001db2:	4b27      	ldr	r3, [pc, #156]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001db4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001db6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001dba:	60fb      	str	r3, [r7, #12]
 8001dbc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001dbe:	2300      	movs	r3, #0
 8001dc0:	60bb      	str	r3, [r7, #8]
 8001dc2:	4b23      	ldr	r3, [pc, #140]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001dc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc6:	4a22      	ldr	r2, [pc, #136]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001dc8:	f043 0310 	orr.w	r3, r3, #16
 8001dcc:	6313      	str	r3, [r2, #48]	; 0x30
 8001dce:	4b20      	ldr	r3, [pc, #128]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001dd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dd2:	f003 0310 	and.w	r3, r3, #16
 8001dd6:	60bb      	str	r3, [r7, #8]
 8001dd8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dda:	2300      	movs	r3, #0
 8001ddc:	607b      	str	r3, [r7, #4]
 8001dde:	4b1c      	ldr	r3, [pc, #112]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001de0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001de2:	4a1b      	ldr	r2, [pc, #108]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001de4:	f043 0308 	orr.w	r3, r3, #8
 8001de8:	6313      	str	r3, [r2, #48]	; 0x30
 8001dea:	4b19      	ldr	r3, [pc, #100]	; (8001e50 <MX_GPIO_Init+0x150>)
 8001dec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dee:	f003 0308 	and.w	r3, r3, #8
 8001df2:	607b      	str	r3, [r7, #4]
 8001df4:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 8001df6:	2200      	movs	r2, #0
 8001df8:	2104      	movs	r1, #4
 8001dfa:	4816      	ldr	r0, [pc, #88]	; (8001e54 <MX_GPIO_Init+0x154>)
 8001dfc:	f002 f956 	bl	80040ac <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DCX_GPIO_Port, DCX_Pin, GPIO_PIN_RESET);
 8001e00:	2200      	movs	r2, #0
 8001e02:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e06:	4814      	ldr	r0, [pc, #80]	; (8001e58 <MX_GPIO_Init+0x158>)
 8001e08:	f002 f950 	bl	80040ac <HAL_GPIO_WritePin>

  /*Configure GPIO pin : CSX_Pin */
  GPIO_InitStruct.Pin = CSX_Pin;
 8001e0c:	2304      	movs	r3, #4
 8001e0e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e10:	2301      	movs	r3, #1
 8001e12:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e14:	2300      	movs	r3, #0
 8001e16:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e18:	2300      	movs	r3, #0
 8001e1a:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(CSX_GPIO_Port, &GPIO_InitStruct);
 8001e1c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001e20:	4619      	mov	r1, r3
 8001e22:	480c      	ldr	r0, [pc, #48]	; (8001e54 <MX_GPIO_Init+0x154>)
 8001e24:	f001 ff96 	bl	8003d54 <HAL_GPIO_Init>

  /*Configure GPIO pin : DCX_Pin */
  GPIO_InitStruct.Pin = DCX_Pin;
 8001e28:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001e2c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e2e:	2301      	movs	r3, #1
 8001e30:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e32:	2300      	movs	r3, #0
 8001e34:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e36:	2300      	movs	r3, #0
 8001e38:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(DCX_GPIO_Port, &GPIO_InitStruct);
 8001e3a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001e3e:	4619      	mov	r1, r3
 8001e40:	4805      	ldr	r0, [pc, #20]	; (8001e58 <MX_GPIO_Init+0x158>)
 8001e42:	f001 ff87 	bl	8003d54 <HAL_GPIO_Init>

}
 8001e46:	bf00      	nop
 8001e48:	3738      	adds	r7, #56	; 0x38
 8001e4a:	46bd      	mov	sp, r7
 8001e4c:	bd80      	pop	{r7, pc}
 8001e4e:	bf00      	nop
 8001e50:	40023800 	.word	0x40023800
 8001e54:	40020800 	.word	0x40020800
 8001e58:	40020c00 	.word	0x40020c00

08001e5c <writeReg>:

/* USER CODE BEGIN 4 */
void writeReg(uint8_t reg)
{
 8001e5c:	b580      	push	{r7, lr}
 8001e5e:	b082      	sub	sp, #8
 8001e60:	af00      	add	r7, sp, #0
 8001e62:	4603      	mov	r3, r0
 8001e64:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(DCX_GPIO_Port, DCX_Pin, GPIO_PIN_RESET);
 8001e66:	2200      	movs	r2, #0
 8001e68:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e6c:	480b      	ldr	r0, [pc, #44]	; (8001e9c <writeReg+0x40>)
 8001e6e:	f002 f91d 	bl	80040ac <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 8001e72:	2200      	movs	r2, #0
 8001e74:	2104      	movs	r1, #4
 8001e76:	480a      	ldr	r0, [pc, #40]	; (8001ea0 <writeReg+0x44>)
 8001e78:	f002 f918 	bl	80040ac <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &reg, 1, 10);
 8001e7c:	1df9      	adds	r1, r7, #7
 8001e7e:	230a      	movs	r3, #10
 8001e80:	2201      	movs	r2, #1
 8001e82:	4808      	ldr	r0, [pc, #32]	; (8001ea4 <writeReg+0x48>)
 8001e84:	f003 fc75 	bl	8005772 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_SET);
 8001e88:	2201      	movs	r2, #1
 8001e8a:	2104      	movs	r1, #4
 8001e8c:	4804      	ldr	r0, [pc, #16]	; (8001ea0 <writeReg+0x44>)
 8001e8e:	f002 f90d 	bl	80040ac <HAL_GPIO_WritePin>
}
 8001e92:	bf00      	nop
 8001e94:	3708      	adds	r7, #8
 8001e96:	46bd      	mov	sp, r7
 8001e98:	bd80      	pop	{r7, pc}
 8001e9a:	bf00      	nop
 8001e9c:	40020c00 	.word	0x40020c00
 8001ea0:	40020800 	.word	0x40020800
 8001ea4:	200003c4 	.word	0x200003c4

08001ea8 <writeData>:

void writeData(uint8_t data)
{
 8001ea8:	b580      	push	{r7, lr}
 8001eaa:	b082      	sub	sp, #8
 8001eac:	af00      	add	r7, sp, #0
 8001eae:	4603      	mov	r3, r0
 8001eb0:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(DCX_GPIO_Port, DCX_Pin, GPIO_PIN_SET);
 8001eb2:	2201      	movs	r2, #1
 8001eb4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001eb8:	480b      	ldr	r0, [pc, #44]	; (8001ee8 <writeData+0x40>)
 8001eba:	f002 f8f7 	bl	80040ac <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 8001ebe:	2200      	movs	r2, #0
 8001ec0:	2104      	movs	r1, #4
 8001ec2:	480a      	ldr	r0, [pc, #40]	; (8001eec <writeData+0x44>)
 8001ec4:	f002 f8f2 	bl	80040ac <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &data, 1, 10);
 8001ec8:	1df9      	adds	r1, r7, #7
 8001eca:	230a      	movs	r3, #10
 8001ecc:	2201      	movs	r2, #1
 8001ece:	4808      	ldr	r0, [pc, #32]	; (8001ef0 <writeData+0x48>)
 8001ed0:	f003 fc4f 	bl	8005772 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_SET);
 8001ed4:	2201      	movs	r2, #1
 8001ed6:	2104      	movs	r1, #4
 8001ed8:	4804      	ldr	r0, [pc, #16]	; (8001eec <writeData+0x44>)
 8001eda:	f002 f8e7 	bl	80040ac <HAL_GPIO_WritePin>
}
 8001ede:	bf00      	nop
 8001ee0:	3708      	adds	r7, #8
 8001ee2:	46bd      	mov	sp, r7
 8001ee4:	bd80      	pop	{r7, pc}
 8001ee6:	bf00      	nop
 8001ee8:	40020c00 	.word	0x40020c00
 8001eec:	40020800 	.word	0x40020800
 8001ef0:	200003c4 	.word	0x200003c4

08001ef4 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001ef4:	b580      	push	{r7, lr}
 8001ef6:	b082      	sub	sp, #8
 8001ef8:	af00      	add	r7, sp, #0
 8001efa:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	4a04      	ldr	r2, [pc, #16]	; (8001f14 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8001f02:	4293      	cmp	r3, r2
 8001f04:	d101      	bne.n	8001f0a <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8001f06:	f000 fdef 	bl	8002ae8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001f0a:	bf00      	nop
 8001f0c:	3708      	adds	r7, #8
 8001f0e:	46bd      	mov	sp, r7
 8001f10:	bd80      	pop	{r7, pc}
 8001f12:	bf00      	nop
 8001f14:	40001000 	.word	0x40001000

08001f18 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001f18:	b480      	push	{r7}
 8001f1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001f1c:	bf00      	nop
 8001f1e:	46bd      	mov	sp, r7
 8001f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f24:	4770      	bx	lr
	...

08001f28 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001f28:	b480      	push	{r7}
 8001f2a:	b083      	sub	sp, #12
 8001f2c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001f2e:	2300      	movs	r3, #0
 8001f30:	607b      	str	r3, [r7, #4]
 8001f32:	4b10      	ldr	r3, [pc, #64]	; (8001f74 <HAL_MspInit+0x4c>)
 8001f34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f36:	4a0f      	ldr	r2, [pc, #60]	; (8001f74 <HAL_MspInit+0x4c>)
 8001f38:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001f3c:	6453      	str	r3, [r2, #68]	; 0x44
 8001f3e:	4b0d      	ldr	r3, [pc, #52]	; (8001f74 <HAL_MspInit+0x4c>)
 8001f40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f42:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001f46:	607b      	str	r3, [r7, #4]
 8001f48:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	603b      	str	r3, [r7, #0]
 8001f4e:	4b09      	ldr	r3, [pc, #36]	; (8001f74 <HAL_MspInit+0x4c>)
 8001f50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f52:	4a08      	ldr	r2, [pc, #32]	; (8001f74 <HAL_MspInit+0x4c>)
 8001f54:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001f58:	6413      	str	r3, [r2, #64]	; 0x40
 8001f5a:	4b06      	ldr	r3, [pc, #24]	; (8001f74 <HAL_MspInit+0x4c>)
 8001f5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f5e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001f62:	603b      	str	r3, [r7, #0]
 8001f64:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001f66:	bf00      	nop
 8001f68:	370c      	adds	r7, #12
 8001f6a:	46bd      	mov	sp, r7
 8001f6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f70:	4770      	bx	lr
 8001f72:	bf00      	nop
 8001f74:	40023800 	.word	0x40023800

08001f78 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001f78:	b580      	push	{r7, lr}
 8001f7a:	b08a      	sub	sp, #40	; 0x28
 8001f7c:	af00      	add	r7, sp, #0
 8001f7e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f80:	f107 0314 	add.w	r3, r7, #20
 8001f84:	2200      	movs	r2, #0
 8001f86:	601a      	str	r2, [r3, #0]
 8001f88:	605a      	str	r2, [r3, #4]
 8001f8a:	609a      	str	r2, [r3, #8]
 8001f8c:	60da      	str	r2, [r3, #12]
 8001f8e:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	4a17      	ldr	r2, [pc, #92]	; (8001ff4 <HAL_ADC_MspInit+0x7c>)
 8001f96:	4293      	cmp	r3, r2
 8001f98:	d127      	bne.n	8001fea <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001f9a:	2300      	movs	r3, #0
 8001f9c:	613b      	str	r3, [r7, #16]
 8001f9e:	4b16      	ldr	r3, [pc, #88]	; (8001ff8 <HAL_ADC_MspInit+0x80>)
 8001fa0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001fa2:	4a15      	ldr	r2, [pc, #84]	; (8001ff8 <HAL_ADC_MspInit+0x80>)
 8001fa4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001fa8:	6453      	str	r3, [r2, #68]	; 0x44
 8001faa:	4b13      	ldr	r3, [pc, #76]	; (8001ff8 <HAL_ADC_MspInit+0x80>)
 8001fac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001fae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001fb2:	613b      	str	r3, [r7, #16]
 8001fb4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fb6:	2300      	movs	r3, #0
 8001fb8:	60fb      	str	r3, [r7, #12]
 8001fba:	4b0f      	ldr	r3, [pc, #60]	; (8001ff8 <HAL_ADC_MspInit+0x80>)
 8001fbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fbe:	4a0e      	ldr	r2, [pc, #56]	; (8001ff8 <HAL_ADC_MspInit+0x80>)
 8001fc0:	f043 0301 	orr.w	r3, r3, #1
 8001fc4:	6313      	str	r3, [r2, #48]	; 0x30
 8001fc6:	4b0c      	ldr	r3, [pc, #48]	; (8001ff8 <HAL_ADC_MspInit+0x80>)
 8001fc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fca:	f003 0301 	and.w	r3, r3, #1
 8001fce:	60fb      	str	r3, [r7, #12]
 8001fd0:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA2     ------> ADC1_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001fd2:	2304      	movs	r3, #4
 8001fd4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001fd6:	2303      	movs	r3, #3
 8001fd8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fda:	2300      	movs	r3, #0
 8001fdc:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fde:	f107 0314 	add.w	r3, r7, #20
 8001fe2:	4619      	mov	r1, r3
 8001fe4:	4805      	ldr	r0, [pc, #20]	; (8001ffc <HAL_ADC_MspInit+0x84>)
 8001fe6:	f001 feb5 	bl	8003d54 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001fea:	bf00      	nop
 8001fec:	3728      	adds	r7, #40	; 0x28
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	bd80      	pop	{r7, pc}
 8001ff2:	bf00      	nop
 8001ff4:	40012000 	.word	0x40012000
 8001ff8:	40023800 	.word	0x40023800
 8001ffc:	40020000 	.word	0x40020000

08002000 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8002000:	b480      	push	{r7}
 8002002:	b085      	sub	sp, #20
 8002004:	af00      	add	r7, sp, #0
 8002006:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	681b      	ldr	r3, [r3, #0]
 800200c:	4a0b      	ldr	r2, [pc, #44]	; (800203c <HAL_CRC_MspInit+0x3c>)
 800200e:	4293      	cmp	r3, r2
 8002010:	d10d      	bne.n	800202e <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002012:	2300      	movs	r3, #0
 8002014:	60fb      	str	r3, [r7, #12]
 8002016:	4b0a      	ldr	r3, [pc, #40]	; (8002040 <HAL_CRC_MspInit+0x40>)
 8002018:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800201a:	4a09      	ldr	r2, [pc, #36]	; (8002040 <HAL_CRC_MspInit+0x40>)
 800201c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002020:	6313      	str	r3, [r2, #48]	; 0x30
 8002022:	4b07      	ldr	r3, [pc, #28]	; (8002040 <HAL_CRC_MspInit+0x40>)
 8002024:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002026:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800202a:	60fb      	str	r3, [r7, #12]
 800202c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800202e:	bf00      	nop
 8002030:	3714      	adds	r7, #20
 8002032:	46bd      	mov	sp, r7
 8002034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002038:	4770      	bx	lr
 800203a:	bf00      	nop
 800203c:	40023000 	.word	0x40023000
 8002040:	40023800 	.word	0x40023800

08002044 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002044:	b580      	push	{r7, lr}
 8002046:	b084      	sub	sp, #16
 8002048:	af00      	add	r7, sp, #0
 800204a:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	4a0e      	ldr	r2, [pc, #56]	; (800208c <HAL_DMA2D_MspInit+0x48>)
 8002052:	4293      	cmp	r3, r2
 8002054:	d115      	bne.n	8002082 <HAL_DMA2D_MspInit+0x3e>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002056:	2300      	movs	r3, #0
 8002058:	60fb      	str	r3, [r7, #12]
 800205a:	4b0d      	ldr	r3, [pc, #52]	; (8002090 <HAL_DMA2D_MspInit+0x4c>)
 800205c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800205e:	4a0c      	ldr	r2, [pc, #48]	; (8002090 <HAL_DMA2D_MspInit+0x4c>)
 8002060:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002064:	6313      	str	r3, [r2, #48]	; 0x30
 8002066:	4b0a      	ldr	r3, [pc, #40]	; (8002090 <HAL_DMA2D_MspInit+0x4c>)
 8002068:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800206a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800206e:	60fb      	str	r3, [r7, #12]
 8002070:	68fb      	ldr	r3, [r7, #12]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002072:	2200      	movs	r2, #0
 8002074:	2105      	movs	r1, #5
 8002076:	205a      	movs	r0, #90	; 0x5a
 8002078:	f001 fa20 	bl	80034bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800207c:	205a      	movs	r0, #90	; 0x5a
 800207e:	f001 fa39 	bl	80034f4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002082:	bf00      	nop
 8002084:	3710      	adds	r7, #16
 8002086:	46bd      	mov	sp, r7
 8002088:	bd80      	pop	{r7, pc}
 800208a:	bf00      	nop
 800208c:	4002b000 	.word	0x4002b000
 8002090:	40023800 	.word	0x40023800

08002094 <HAL_DMA2D_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002094:	b580      	push	{r7, lr}
 8002096:	b082      	sub	sp, #8
 8002098:	af00      	add	r7, sp, #0
 800209a:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	4a07      	ldr	r2, [pc, #28]	; (80020c0 <HAL_DMA2D_MspDeInit+0x2c>)
 80020a2:	4293      	cmp	r3, r2
 80020a4:	d108      	bne.n	80020b8 <HAL_DMA2D_MspDeInit+0x24>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 80020a6:	4b07      	ldr	r3, [pc, #28]	; (80020c4 <HAL_DMA2D_MspDeInit+0x30>)
 80020a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020aa:	4a06      	ldr	r2, [pc, #24]	; (80020c4 <HAL_DMA2D_MspDeInit+0x30>)
 80020ac:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80020b0:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 80020b2:	205a      	movs	r0, #90	; 0x5a
 80020b4:	f001 fa2c 	bl	8003510 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 80020b8:	bf00      	nop
 80020ba:	3708      	adds	r7, #8
 80020bc:	46bd      	mov	sp, r7
 80020be:	bd80      	pop	{r7, pc}
 80020c0:	4002b000 	.word	0x4002b000
 80020c4:	40023800 	.word	0x40023800

080020c8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80020c8:	b580      	push	{r7, lr}
 80020ca:	b08e      	sub	sp, #56	; 0x38
 80020cc:	af00      	add	r7, sp, #0
 80020ce:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80020d0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80020d4:	2200      	movs	r2, #0
 80020d6:	601a      	str	r2, [r3, #0]
 80020d8:	605a      	str	r2, [r3, #4]
 80020da:	609a      	str	r2, [r3, #8]
 80020dc:	60da      	str	r2, [r3, #12]
 80020de:	611a      	str	r2, [r3, #16]
  if(hltdc->Instance==LTDC)
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	4a7b      	ldr	r2, [pc, #492]	; (80022d4 <HAL_LTDC_MspInit+0x20c>)
 80020e6:	4293      	cmp	r3, r2
 80020e8:	f040 80ef 	bne.w	80022ca <HAL_LTDC_MspInit+0x202>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80020ec:	2300      	movs	r3, #0
 80020ee:	623b      	str	r3, [r7, #32]
 80020f0:	4b79      	ldr	r3, [pc, #484]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 80020f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80020f4:	4a78      	ldr	r2, [pc, #480]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 80020f6:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80020fa:	6453      	str	r3, [r2, #68]	; 0x44
 80020fc:	4b76      	ldr	r3, [pc, #472]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 80020fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002100:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8002104:	623b      	str	r3, [r7, #32]
 8002106:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002108:	2300      	movs	r3, #0
 800210a:	61fb      	str	r3, [r7, #28]
 800210c:	4b72      	ldr	r3, [pc, #456]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800210e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002110:	4a71      	ldr	r2, [pc, #452]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 8002112:	f043 0320 	orr.w	r3, r3, #32
 8002116:	6313      	str	r3, [r2, #48]	; 0x30
 8002118:	4b6f      	ldr	r3, [pc, #444]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800211a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800211c:	f003 0320 	and.w	r3, r3, #32
 8002120:	61fb      	str	r3, [r7, #28]
 8002122:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002124:	2300      	movs	r3, #0
 8002126:	61bb      	str	r3, [r7, #24]
 8002128:	4b6b      	ldr	r3, [pc, #428]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800212a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800212c:	4a6a      	ldr	r2, [pc, #424]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800212e:	f043 0301 	orr.w	r3, r3, #1
 8002132:	6313      	str	r3, [r2, #48]	; 0x30
 8002134:	4b68      	ldr	r3, [pc, #416]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 8002136:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002138:	f003 0301 	and.w	r3, r3, #1
 800213c:	61bb      	str	r3, [r7, #24]
 800213e:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002140:	2300      	movs	r3, #0
 8002142:	617b      	str	r3, [r7, #20]
 8002144:	4b64      	ldr	r3, [pc, #400]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 8002146:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002148:	4a63      	ldr	r2, [pc, #396]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800214a:	f043 0302 	orr.w	r3, r3, #2
 800214e:	6313      	str	r3, [r2, #48]	; 0x30
 8002150:	4b61      	ldr	r3, [pc, #388]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 8002152:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002154:	f003 0302 	and.w	r3, r3, #2
 8002158:	617b      	str	r3, [r7, #20]
 800215a:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800215c:	2300      	movs	r3, #0
 800215e:	613b      	str	r3, [r7, #16]
 8002160:	4b5d      	ldr	r3, [pc, #372]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 8002162:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002164:	4a5c      	ldr	r2, [pc, #368]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 8002166:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800216a:	6313      	str	r3, [r2, #48]	; 0x30
 800216c:	4b5a      	ldr	r3, [pc, #360]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800216e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002170:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002174:	613b      	str	r3, [r7, #16]
 8002176:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002178:	2300      	movs	r3, #0
 800217a:	60fb      	str	r3, [r7, #12]
 800217c:	4b56      	ldr	r3, [pc, #344]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800217e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002180:	4a55      	ldr	r2, [pc, #340]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 8002182:	f043 0304 	orr.w	r3, r3, #4
 8002186:	6313      	str	r3, [r2, #48]	; 0x30
 8002188:	4b53      	ldr	r3, [pc, #332]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800218a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800218c:	f003 0304 	and.w	r3, r3, #4
 8002190:	60fb      	str	r3, [r7, #12]
 8002192:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002194:	2300      	movs	r3, #0
 8002196:	60bb      	str	r3, [r7, #8]
 8002198:	4b4f      	ldr	r3, [pc, #316]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800219a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800219c:	4a4e      	ldr	r2, [pc, #312]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 800219e:	f043 0308 	orr.w	r3, r3, #8
 80021a2:	6313      	str	r3, [r2, #48]	; 0x30
 80021a4:	4b4c      	ldr	r3, [pc, #304]	; (80022d8 <HAL_LTDC_MspInit+0x210>)
 80021a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021a8:	f003 0308 	and.w	r3, r3, #8
 80021ac:	60bb      	str	r3, [r7, #8]
 80021ae:	68bb      	ldr	r3, [r7, #8]
    PG11     ------> LTDC_B3
    PG12     ------> LTDC_B4
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80021b0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80021b4:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021b6:	2302      	movs	r3, #2
 80021b8:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021ba:	2300      	movs	r3, #0
 80021bc:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021be:	2300      	movs	r3, #0
 80021c0:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80021c2:	230e      	movs	r3, #14
 80021c4:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021c6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021ca:	4619      	mov	r1, r3
 80021cc:	4843      	ldr	r0, [pc, #268]	; (80022dc <HAL_LTDC_MspInit+0x214>)
 80021ce:	f001 fdc1 	bl	8003d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80021d2:	f641 0358 	movw	r3, #6232	; 0x1858
 80021d6:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021d8:	2302      	movs	r3, #2
 80021da:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021dc:	2300      	movs	r3, #0
 80021de:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80021e0:	2300      	movs	r3, #0
 80021e2:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80021e4:	230e      	movs	r3, #14
 80021e6:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021e8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80021ec:	4619      	mov	r1, r3
 80021ee:	483c      	ldr	r0, [pc, #240]	; (80022e0 <HAL_LTDC_MspInit+0x218>)
 80021f0:	f001 fdb0 	bl	8003d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80021f4:	2303      	movs	r3, #3
 80021f6:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021f8:	2302      	movs	r3, #2
 80021fa:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021fc:	2300      	movs	r3, #0
 80021fe:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002200:	2300      	movs	r3, #0
 8002202:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002204:	2309      	movs	r3, #9
 8002206:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002208:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800220c:	4619      	mov	r1, r3
 800220e:	4835      	ldr	r0, [pc, #212]	; (80022e4 <HAL_LTDC_MspInit+0x21c>)
 8002210:	f001 fda0 	bl	8003d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002214:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 8002218:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800221a:	2302      	movs	r3, #2
 800221c:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800221e:	2300      	movs	r3, #0
 8002220:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002222:	2300      	movs	r3, #0
 8002224:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002226:	230e      	movs	r3, #14
 8002228:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800222a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800222e:	4619      	mov	r1, r3
 8002230:	482c      	ldr	r0, [pc, #176]	; (80022e4 <HAL_LTDC_MspInit+0x21c>)
 8002232:	f001 fd8f 	bl	8003d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002236:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
 800223a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800223c:	2302      	movs	r3, #2
 800223e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002240:	2300      	movs	r3, #0
 8002242:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002244:	2300      	movs	r3, #0
 8002246:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002248:	230e      	movs	r3, #14
 800224a:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800224c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002250:	4619      	mov	r1, r3
 8002252:	4825      	ldr	r0, [pc, #148]	; (80022e8 <HAL_LTDC_MspInit+0x220>)
 8002254:	f001 fd7e 	bl	8003d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002258:	23c0      	movs	r3, #192	; 0xc0
 800225a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800225c:	2302      	movs	r3, #2
 800225e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002260:	2300      	movs	r3, #0
 8002262:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002264:	2300      	movs	r3, #0
 8002266:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002268:	230e      	movs	r3, #14
 800226a:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800226c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002270:	4619      	mov	r1, r3
 8002272:	481e      	ldr	r0, [pc, #120]	; (80022ec <HAL_LTDC_MspInit+0x224>)
 8002274:	f001 fd6e 	bl	8003d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002278:	2308      	movs	r3, #8
 800227a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800227c:	2302      	movs	r3, #2
 800227e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002280:	2300      	movs	r3, #0
 8002282:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002284:	2300      	movs	r3, #0
 8002286:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002288:	230e      	movs	r3, #14
 800228a:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800228c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002290:	4619      	mov	r1, r3
 8002292:	4817      	ldr	r0, [pc, #92]	; (80022f0 <HAL_LTDC_MspInit+0x228>)
 8002294:	f001 fd5e 	bl	8003d54 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002298:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800229c:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800229e:	2302      	movs	r3, #2
 80022a0:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022a2:	2300      	movs	r3, #0
 80022a4:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80022a6:	2300      	movs	r3, #0
 80022a8:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80022aa:	2309      	movs	r3, #9
 80022ac:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022ae:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80022b2:	4619      	mov	r1, r3
 80022b4:	480c      	ldr	r0, [pc, #48]	; (80022e8 <HAL_LTDC_MspInit+0x220>)
 80022b6:	f001 fd4d 	bl	8003d54 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80022ba:	2200      	movs	r2, #0
 80022bc:	2105      	movs	r1, #5
 80022be:	2058      	movs	r0, #88	; 0x58
 80022c0:	f001 f8fc 	bl	80034bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80022c4:	2058      	movs	r0, #88	; 0x58
 80022c6:	f001 f915 	bl	80034f4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80022ca:	bf00      	nop
 80022cc:	3738      	adds	r7, #56	; 0x38
 80022ce:	46bd      	mov	sp, r7
 80022d0:	bd80      	pop	{r7, pc}
 80022d2:	bf00      	nop
 80022d4:	40016800 	.word	0x40016800
 80022d8:	40023800 	.word	0x40023800
 80022dc:	40021400 	.word	0x40021400
 80022e0:	40020000 	.word	0x40020000
 80022e4:	40020400 	.word	0x40020400
 80022e8:	40021800 	.word	0x40021800
 80022ec:	40020800 	.word	0x40020800
 80022f0:	40020c00 	.word	0x40020c00

080022f4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80022f4:	b580      	push	{r7, lr}
 80022f6:	b08a      	sub	sp, #40	; 0x28
 80022f8:	af00      	add	r7, sp, #0
 80022fa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80022fc:	f107 0314 	add.w	r3, r7, #20
 8002300:	2200      	movs	r2, #0
 8002302:	601a      	str	r2, [r3, #0]
 8002304:	605a      	str	r2, [r3, #4]
 8002306:	609a      	str	r2, [r3, #8]
 8002308:	60da      	str	r2, [r3, #12]
 800230a:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI5)
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	4a19      	ldr	r2, [pc, #100]	; (8002378 <HAL_SPI_MspInit+0x84>)
 8002312:	4293      	cmp	r3, r2
 8002314:	d12c      	bne.n	8002370 <HAL_SPI_MspInit+0x7c>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002316:	2300      	movs	r3, #0
 8002318:	613b      	str	r3, [r7, #16]
 800231a:	4b18      	ldr	r3, [pc, #96]	; (800237c <HAL_SPI_MspInit+0x88>)
 800231c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800231e:	4a17      	ldr	r2, [pc, #92]	; (800237c <HAL_SPI_MspInit+0x88>)
 8002320:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8002324:	6453      	str	r3, [r2, #68]	; 0x44
 8002326:	4b15      	ldr	r3, [pc, #84]	; (800237c <HAL_SPI_MspInit+0x88>)
 8002328:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800232a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800232e:	613b      	str	r3, [r7, #16]
 8002330:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002332:	2300      	movs	r3, #0
 8002334:	60fb      	str	r3, [r7, #12]
 8002336:	4b11      	ldr	r3, [pc, #68]	; (800237c <HAL_SPI_MspInit+0x88>)
 8002338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800233a:	4a10      	ldr	r2, [pc, #64]	; (800237c <HAL_SPI_MspInit+0x88>)
 800233c:	f043 0320 	orr.w	r3, r3, #32
 8002340:	6313      	str	r3, [r2, #48]	; 0x30
 8002342:	4b0e      	ldr	r3, [pc, #56]	; (800237c <HAL_SPI_MspInit+0x88>)
 8002344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002346:	f003 0320 	and.w	r3, r3, #32
 800234a:	60fb      	str	r3, [r7, #12]
 800234c:	68fb      	ldr	r3, [r7, #12]
    /**SPI5 GPIO Configuration
    PF7     ------> SPI5_SCK
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_9;
 800234e:	f44f 7320 	mov.w	r3, #640	; 0x280
 8002352:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002354:	2302      	movs	r3, #2
 8002356:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002358:	2300      	movs	r3, #0
 800235a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800235c:	2303      	movs	r3, #3
 800235e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002360:	2305      	movs	r3, #5
 8002362:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002364:	f107 0314 	add.w	r3, r7, #20
 8002368:	4619      	mov	r1, r3
 800236a:	4805      	ldr	r0, [pc, #20]	; (8002380 <HAL_SPI_MspInit+0x8c>)
 800236c:	f001 fcf2 	bl	8003d54 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002370:	bf00      	nop
 8002372:	3728      	adds	r7, #40	; 0x28
 8002374:	46bd      	mov	sp, r7
 8002376:	bd80      	pop	{r7, pc}
 8002378:	40015000 	.word	0x40015000
 800237c:	40023800 	.word	0x40023800
 8002380:	40021400 	.word	0x40021400

08002384 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002384:	b580      	push	{r7, lr}
 8002386:	b08c      	sub	sp, #48	; 0x30
 8002388:	af00      	add	r7, sp, #0
 800238a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800238c:	f107 031c 	add.w	r3, r7, #28
 8002390:	2200      	movs	r2, #0
 8002392:	601a      	str	r2, [r3, #0]
 8002394:	605a      	str	r2, [r3, #4]
 8002396:	609a      	str	r2, [r3, #8]
 8002398:	60da      	str	r2, [r3, #12]
 800239a:	611a      	str	r2, [r3, #16]
  if(htim_base->Instance==TIM1)
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	4a2d      	ldr	r2, [pc, #180]	; (8002458 <HAL_TIM_Base_MspInit+0xd4>)
 80023a2:	4293      	cmp	r3, r2
 80023a4:	d10e      	bne.n	80023c4 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80023a6:	2300      	movs	r3, #0
 80023a8:	61bb      	str	r3, [r7, #24]
 80023aa:	4b2c      	ldr	r3, [pc, #176]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 80023ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80023ae:	4a2b      	ldr	r2, [pc, #172]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 80023b0:	f043 0301 	orr.w	r3, r3, #1
 80023b4:	6453      	str	r3, [r2, #68]	; 0x44
 80023b6:	4b29      	ldr	r3, [pc, #164]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 80023b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80023ba:	f003 0301 	and.w	r3, r3, #1
 80023be:	61bb      	str	r3, [r7, #24]
 80023c0:	69bb      	ldr	r3, [r7, #24]
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80023c2:	e044      	b.n	800244e <HAL_TIM_Base_MspInit+0xca>
  else if(htim_base->Instance==TIM2)
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	681b      	ldr	r3, [r3, #0]
 80023c8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80023cc:	d10e      	bne.n	80023ec <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM2_CLK_ENABLE();
 80023ce:	2300      	movs	r3, #0
 80023d0:	617b      	str	r3, [r7, #20]
 80023d2:	4b22      	ldr	r3, [pc, #136]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 80023d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023d6:	4a21      	ldr	r2, [pc, #132]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 80023d8:	f043 0301 	orr.w	r3, r3, #1
 80023dc:	6413      	str	r3, [r2, #64]	; 0x40
 80023de:	4b1f      	ldr	r3, [pc, #124]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 80023e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023e2:	f003 0301 	and.w	r3, r3, #1
 80023e6:	617b      	str	r3, [r7, #20]
 80023e8:	697b      	ldr	r3, [r7, #20]
}
 80023ea:	e030      	b.n	800244e <HAL_TIM_Base_MspInit+0xca>
  else if(htim_base->Instance==TIM3)
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	4a1b      	ldr	r2, [pc, #108]	; (8002460 <HAL_TIM_Base_MspInit+0xdc>)
 80023f2:	4293      	cmp	r3, r2
 80023f4:	d12b      	bne.n	800244e <HAL_TIM_Base_MspInit+0xca>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80023f6:	2300      	movs	r3, #0
 80023f8:	613b      	str	r3, [r7, #16]
 80023fa:	4b18      	ldr	r3, [pc, #96]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 80023fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023fe:	4a17      	ldr	r2, [pc, #92]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 8002400:	f043 0302 	orr.w	r3, r3, #2
 8002404:	6413      	str	r3, [r2, #64]	; 0x40
 8002406:	4b15      	ldr	r3, [pc, #84]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 8002408:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800240a:	f003 0302 	and.w	r3, r3, #2
 800240e:	613b      	str	r3, [r7, #16]
 8002410:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002412:	2300      	movs	r3, #0
 8002414:	60fb      	str	r3, [r7, #12]
 8002416:	4b11      	ldr	r3, [pc, #68]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 8002418:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800241a:	4a10      	ldr	r2, [pc, #64]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 800241c:	f043 0302 	orr.w	r3, r3, #2
 8002420:	6313      	str	r3, [r2, #48]	; 0x30
 8002422:	4b0e      	ldr	r3, [pc, #56]	; (800245c <HAL_TIM_Base_MspInit+0xd8>)
 8002424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002426:	f003 0302 	and.w	r3, r3, #2
 800242a:	60fb      	str	r3, [r7, #12]
 800242c:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 800242e:	2310      	movs	r3, #16
 8002430:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002432:	2302      	movs	r3, #2
 8002434:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002436:	2300      	movs	r3, #0
 8002438:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800243a:	2300      	movs	r3, #0
 800243c:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800243e:	2302      	movs	r3, #2
 8002440:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002442:	f107 031c 	add.w	r3, r7, #28
 8002446:	4619      	mov	r1, r3
 8002448:	4806      	ldr	r0, [pc, #24]	; (8002464 <HAL_TIM_Base_MspInit+0xe0>)
 800244a:	f001 fc83 	bl	8003d54 <HAL_GPIO_Init>
}
 800244e:	bf00      	nop
 8002450:	3730      	adds	r7, #48	; 0x30
 8002452:	46bd      	mov	sp, r7
 8002454:	bd80      	pop	{r7, pc}
 8002456:	bf00      	nop
 8002458:	40010000 	.word	0x40010000
 800245c:	40023800 	.word	0x40023800
 8002460:	40000400 	.word	0x40000400
 8002464:	40020400 	.word	0x40020400

08002468 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002468:	b580      	push	{r7, lr}
 800246a:	b08a      	sub	sp, #40	; 0x28
 800246c:	af00      	add	r7, sp, #0
 800246e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002470:	f107 0314 	add.w	r3, r7, #20
 8002474:	2200      	movs	r2, #0
 8002476:	601a      	str	r2, [r3, #0]
 8002478:	605a      	str	r2, [r3, #4]
 800247a:	609a      	str	r2, [r3, #8]
 800247c:	60da      	str	r2, [r3, #12]
 800247e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	681b      	ldr	r3, [r3, #0]
 8002484:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002488:	d11e      	bne.n	80024c8 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800248a:	2300      	movs	r3, #0
 800248c:	613b      	str	r3, [r7, #16]
 800248e:	4b22      	ldr	r3, [pc, #136]	; (8002518 <HAL_TIM_MspPostInit+0xb0>)
 8002490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002492:	4a21      	ldr	r2, [pc, #132]	; (8002518 <HAL_TIM_MspPostInit+0xb0>)
 8002494:	f043 0301 	orr.w	r3, r3, #1
 8002498:	6313      	str	r3, [r2, #48]	; 0x30
 800249a:	4b1f      	ldr	r3, [pc, #124]	; (8002518 <HAL_TIM_MspPostInit+0xb0>)
 800249c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800249e:	f003 0301 	and.w	r3, r3, #1
 80024a2:	613b      	str	r3, [r7, #16]
 80024a4:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA5     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 80024a6:	2320      	movs	r3, #32
 80024a8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024aa:	2302      	movs	r3, #2
 80024ac:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024ae:	2300      	movs	r3, #0
 80024b0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80024b2:	2300      	movs	r3, #0
 80024b4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80024b6:	2301      	movs	r3, #1
 80024b8:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024ba:	f107 0314 	add.w	r3, r7, #20
 80024be:	4619      	mov	r1, r3
 80024c0:	4816      	ldr	r0, [pc, #88]	; (800251c <HAL_TIM_MspPostInit+0xb4>)
 80024c2:	f001 fc47 	bl	8003d54 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 80024c6:	e023      	b.n	8002510 <HAL_TIM_MspPostInit+0xa8>
  else if(htim->Instance==TIM3)
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	4a14      	ldr	r2, [pc, #80]	; (8002520 <HAL_TIM_MspPostInit+0xb8>)
 80024ce:	4293      	cmp	r3, r2
 80024d0:	d11e      	bne.n	8002510 <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80024d2:	2300      	movs	r3, #0
 80024d4:	60fb      	str	r3, [r7, #12]
 80024d6:	4b10      	ldr	r3, [pc, #64]	; (8002518 <HAL_TIM_MspPostInit+0xb0>)
 80024d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024da:	4a0f      	ldr	r2, [pc, #60]	; (8002518 <HAL_TIM_MspPostInit+0xb0>)
 80024dc:	f043 0304 	orr.w	r3, r3, #4
 80024e0:	6313      	str	r3, [r2, #48]	; 0x30
 80024e2:	4b0d      	ldr	r3, [pc, #52]	; (8002518 <HAL_TIM_MspPostInit+0xb0>)
 80024e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024e6:	f003 0304 	and.w	r3, r3, #4
 80024ea:	60fb      	str	r3, [r7, #12]
 80024ec:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80024ee:	f44f 7380 	mov.w	r3, #256	; 0x100
 80024f2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024f4:	2302      	movs	r3, #2
 80024f6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024f8:	2300      	movs	r3, #0
 80024fa:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80024fc:	2300      	movs	r3, #0
 80024fe:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8002500:	2302      	movs	r3, #2
 8002502:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002504:	f107 0314 	add.w	r3, r7, #20
 8002508:	4619      	mov	r1, r3
 800250a:	4806      	ldr	r0, [pc, #24]	; (8002524 <HAL_TIM_MspPostInit+0xbc>)
 800250c:	f001 fc22 	bl	8003d54 <HAL_GPIO_Init>
}
 8002510:	bf00      	nop
 8002512:	3728      	adds	r7, #40	; 0x28
 8002514:	46bd      	mov	sp, r7
 8002516:	bd80      	pop	{r7, pc}
 8002518:	40023800 	.word	0x40023800
 800251c:	40020000 	.word	0x40020000
 8002520:	40000400 	.word	0x40000400
 8002524:	40020800 	.word	0x40020800

08002528 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002528:	b580      	push	{r7, lr}
 800252a:	b08c      	sub	sp, #48	; 0x30
 800252c:	af00      	add	r7, sp, #0
 800252e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002530:	f107 031c 	add.w	r3, r7, #28
 8002534:	2200      	movs	r2, #0
 8002536:	601a      	str	r2, [r3, #0]
 8002538:	605a      	str	r2, [r3, #4]
 800253a:	609a      	str	r2, [r3, #8]
 800253c:	60da      	str	r2, [r3, #12]
 800253e:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	681b      	ldr	r3, [r3, #0]
 8002544:	4a32      	ldr	r2, [pc, #200]	; (8002610 <HAL_UART_MspInit+0xe8>)
 8002546:	4293      	cmp	r3, r2
 8002548:	d12d      	bne.n	80025a6 <HAL_UART_MspInit+0x7e>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 800254a:	2300      	movs	r3, #0
 800254c:	61bb      	str	r3, [r7, #24]
 800254e:	4b31      	ldr	r3, [pc, #196]	; (8002614 <HAL_UART_MspInit+0xec>)
 8002550:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002552:	4a30      	ldr	r2, [pc, #192]	; (8002614 <HAL_UART_MspInit+0xec>)
 8002554:	f043 0310 	orr.w	r3, r3, #16
 8002558:	6453      	str	r3, [r2, #68]	; 0x44
 800255a:	4b2e      	ldr	r3, [pc, #184]	; (8002614 <HAL_UART_MspInit+0xec>)
 800255c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800255e:	f003 0310 	and.w	r3, r3, #16
 8002562:	61bb      	str	r3, [r7, #24]
 8002564:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002566:	2300      	movs	r3, #0
 8002568:	617b      	str	r3, [r7, #20]
 800256a:	4b2a      	ldr	r3, [pc, #168]	; (8002614 <HAL_UART_MspInit+0xec>)
 800256c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800256e:	4a29      	ldr	r2, [pc, #164]	; (8002614 <HAL_UART_MspInit+0xec>)
 8002570:	f043 0301 	orr.w	r3, r3, #1
 8002574:	6313      	str	r3, [r2, #48]	; 0x30
 8002576:	4b27      	ldr	r3, [pc, #156]	; (8002614 <HAL_UART_MspInit+0xec>)
 8002578:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800257a:	f003 0301 	and.w	r3, r3, #1
 800257e:	617b      	str	r3, [r7, #20]
 8002580:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8002582:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8002586:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002588:	2302      	movs	r3, #2
 800258a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800258c:	2300      	movs	r3, #0
 800258e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002590:	2303      	movs	r3, #3
 8002592:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002594:	2307      	movs	r3, #7
 8002596:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002598:	f107 031c 	add.w	r3, r7, #28
 800259c:	4619      	mov	r1, r3
 800259e:	481e      	ldr	r0, [pc, #120]	; (8002618 <HAL_UART_MspInit+0xf0>)
 80025a0:	f001 fbd8 	bl	8003d54 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 80025a4:	e030      	b.n	8002608 <HAL_UART_MspInit+0xe0>
  else if(huart->Instance==USART2)
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	4a1c      	ldr	r2, [pc, #112]	; (800261c <HAL_UART_MspInit+0xf4>)
 80025ac:	4293      	cmp	r3, r2
 80025ae:	d12b      	bne.n	8002608 <HAL_UART_MspInit+0xe0>
    __HAL_RCC_USART2_CLK_ENABLE();
 80025b0:	2300      	movs	r3, #0
 80025b2:	613b      	str	r3, [r7, #16]
 80025b4:	4b17      	ldr	r3, [pc, #92]	; (8002614 <HAL_UART_MspInit+0xec>)
 80025b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025b8:	4a16      	ldr	r2, [pc, #88]	; (8002614 <HAL_UART_MspInit+0xec>)
 80025ba:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80025be:	6413      	str	r3, [r2, #64]	; 0x40
 80025c0:	4b14      	ldr	r3, [pc, #80]	; (8002614 <HAL_UART_MspInit+0xec>)
 80025c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80025c8:	613b      	str	r3, [r7, #16]
 80025ca:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80025cc:	2300      	movs	r3, #0
 80025ce:	60fb      	str	r3, [r7, #12]
 80025d0:	4b10      	ldr	r3, [pc, #64]	; (8002614 <HAL_UART_MspInit+0xec>)
 80025d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025d4:	4a0f      	ldr	r2, [pc, #60]	; (8002614 <HAL_UART_MspInit+0xec>)
 80025d6:	f043 0308 	orr.w	r3, r3, #8
 80025da:	6313      	str	r3, [r2, #48]	; 0x30
 80025dc:	4b0d      	ldr	r3, [pc, #52]	; (8002614 <HAL_UART_MspInit+0xec>)
 80025de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025e0:	f003 0308 	and.w	r3, r3, #8
 80025e4:	60fb      	str	r3, [r7, #12]
 80025e6:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80025e8:	2360      	movs	r3, #96	; 0x60
 80025ea:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025ec:	2302      	movs	r3, #2
 80025ee:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025f0:	2300      	movs	r3, #0
 80025f2:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025f4:	2303      	movs	r3, #3
 80025f6:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80025f8:	2307      	movs	r3, #7
 80025fa:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025fc:	f107 031c 	add.w	r3, r7, #28
 8002600:	4619      	mov	r1, r3
 8002602:	4807      	ldr	r0, [pc, #28]	; (8002620 <HAL_UART_MspInit+0xf8>)
 8002604:	f001 fba6 	bl	8003d54 <HAL_GPIO_Init>
}
 8002608:	bf00      	nop
 800260a:	3730      	adds	r7, #48	; 0x30
 800260c:	46bd      	mov	sp, r7
 800260e:	bd80      	pop	{r7, pc}
 8002610:	40011000 	.word	0x40011000
 8002614:	40023800 	.word	0x40023800
 8002618:	40020000 	.word	0x40020000
 800261c:	40004400 	.word	0x40004400
 8002620:	40020c00 	.word	0x40020c00

08002624 <HAL_FMC_MspInit>:

}

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 8002624:	b580      	push	{r7, lr}
 8002626:	b086      	sub	sp, #24
 8002628:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800262a:	1d3b      	adds	r3, r7, #4
 800262c:	2200      	movs	r2, #0
 800262e:	601a      	str	r2, [r3, #0]
 8002630:	605a      	str	r2, [r3, #4]
 8002632:	609a      	str	r2, [r3, #8]
 8002634:	60da      	str	r2, [r3, #12]
 8002636:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 8002638:	4b3b      	ldr	r3, [pc, #236]	; (8002728 <HAL_FMC_MspInit+0x104>)
 800263a:	681b      	ldr	r3, [r3, #0]
 800263c:	2b00      	cmp	r3, #0
 800263e:	d16f      	bne.n	8002720 <HAL_FMC_MspInit+0xfc>
    return;
  }
  FMC_Initialized = 1;
 8002640:	4b39      	ldr	r3, [pc, #228]	; (8002728 <HAL_FMC_MspInit+0x104>)
 8002642:	2201      	movs	r2, #1
 8002644:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 8002646:	2300      	movs	r3, #0
 8002648:	603b      	str	r3, [r7, #0]
 800264a:	4b38      	ldr	r3, [pc, #224]	; (800272c <HAL_FMC_MspInit+0x108>)
 800264c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800264e:	4a37      	ldr	r2, [pc, #220]	; (800272c <HAL_FMC_MspInit+0x108>)
 8002650:	f043 0301 	orr.w	r3, r3, #1
 8002654:	6393      	str	r3, [r2, #56]	; 0x38
 8002656:	4b35      	ldr	r3, [pc, #212]	; (800272c <HAL_FMC_MspInit+0x108>)
 8002658:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800265a:	f003 0301 	and.w	r3, r3, #1
 800265e:	603b      	str	r3, [r7, #0]
 8002660:	683b      	ldr	r3, [r7, #0]
  PB5   ------> FMC_SDCKE1
  PB6   ------> FMC_SDNE1
  PE0   ------> FMC_NBL0
  PE1   ------> FMC_NBL1
  */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002662:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8002666:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002668:	2302      	movs	r3, #2
 800266a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800266c:	2300      	movs	r3, #0
 800266e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002670:	2303      	movs	r3, #3
 8002672:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002674:	230c      	movs	r3, #12
 8002676:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002678:	1d3b      	adds	r3, r7, #4
 800267a:	4619      	mov	r1, r3
 800267c:	482c      	ldr	r0, [pc, #176]	; (8002730 <HAL_FMC_MspInit+0x10c>)
 800267e:	f001 fb69 	bl	8003d54 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002682:	2301      	movs	r3, #1
 8002684:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002686:	2302      	movs	r3, #2
 8002688:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800268a:	2300      	movs	r3, #0
 800268c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800268e:	2303      	movs	r3, #3
 8002690:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002692:	230c      	movs	r3, #12
 8002694:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002696:	1d3b      	adds	r3, r7, #4
 8002698:	4619      	mov	r1, r3
 800269a:	4826      	ldr	r0, [pc, #152]	; (8002734 <HAL_FMC_MspInit+0x110>)
 800269c:	f001 fb5a 	bl	8003d54 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80026a0:	f248 1333 	movw	r3, #33075	; 0x8133
 80026a4:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_8|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026a6:	2302      	movs	r3, #2
 80026a8:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026aa:	2300      	movs	r3, #0
 80026ac:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026ae:	2303      	movs	r3, #3
 80026b0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026b2:	230c      	movs	r3, #12
 80026b4:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80026b6:	1d3b      	adds	r3, r7, #4
 80026b8:	4619      	mov	r1, r3
 80026ba:	481f      	ldr	r0, [pc, #124]	; (8002738 <HAL_FMC_MspInit+0x114>)
 80026bc:	f001 fb4a 	bl	8003d54 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80026c0:	f64f 7383 	movw	r3, #65411	; 0xff83
 80026c4:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026c6:	2302      	movs	r3, #2
 80026c8:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026ca:	2300      	movs	r3, #0
 80026cc:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026ce:	2303      	movs	r3, #3
 80026d0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026d2:	230c      	movs	r3, #12
 80026d4:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80026d6:	1d3b      	adds	r3, r7, #4
 80026d8:	4619      	mov	r1, r3
 80026da:	4818      	ldr	r0, [pc, #96]	; (800273c <HAL_FMC_MspInit+0x118>)
 80026dc:	f001 fb3a 	bl	8003d54 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80026e0:	f24c 7303 	movw	r3, #50947	; 0xc703
 80026e4:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026e6:	2302      	movs	r3, #2
 80026e8:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026ea:	2300      	movs	r3, #0
 80026ec:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026ee:	2303      	movs	r3, #3
 80026f0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026f2:	230c      	movs	r3, #12
 80026f4:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026f6:	1d3b      	adds	r3, r7, #4
 80026f8:	4619      	mov	r1, r3
 80026fa:	4811      	ldr	r0, [pc, #68]	; (8002740 <HAL_FMC_MspInit+0x11c>)
 80026fc:	f001 fb2a 	bl	8003d54 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002700:	2360      	movs	r3, #96	; 0x60
 8002702:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002704:	2302      	movs	r3, #2
 8002706:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002708:	2300      	movs	r3, #0
 800270a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800270c:	2303      	movs	r3, #3
 800270e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002710:	230c      	movs	r3, #12
 8002712:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002714:	1d3b      	adds	r3, r7, #4
 8002716:	4619      	mov	r1, r3
 8002718:	480a      	ldr	r0, [pc, #40]	; (8002744 <HAL_FMC_MspInit+0x120>)
 800271a:	f001 fb1b 	bl	8003d54 <HAL_GPIO_Init>
 800271e:	e000      	b.n	8002722 <HAL_FMC_MspInit+0xfe>
    return;
 8002720:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 8002722:	3718      	adds	r7, #24
 8002724:	46bd      	mov	sp, r7
 8002726:	bd80      	pop	{r7, pc}
 8002728:	200005cc 	.word	0x200005cc
 800272c:	40023800 	.word	0x40023800
 8002730:	40021400 	.word	0x40021400
 8002734:	40020800 	.word	0x40020800
 8002738:	40021800 	.word	0x40021800
 800273c:	40021000 	.word	0x40021000
 8002740:	40020c00 	.word	0x40020c00
 8002744:	40020400 	.word	0x40020400

08002748 <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002748:	b580      	push	{r7, lr}
 800274a:	b082      	sub	sp, #8
 800274c:	af00      	add	r7, sp, #0
 800274e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8002750:	f7ff ff68 	bl	8002624 <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002754:	bf00      	nop
 8002756:	3708      	adds	r7, #8
 8002758:	46bd      	mov	sp, r7
 800275a:	bd80      	pop	{r7, pc}

0800275c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800275c:	b580      	push	{r7, lr}
 800275e:	b08c      	sub	sp, #48	; 0x30
 8002760:	af00      	add	r7, sp, #0
 8002762:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
 8002764:	2300      	movs	r3, #0
 8002766:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t              uwPrescalerValue = 0;
 8002768:	2300      	movs	r3, #0
 800276a:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 800276c:	2200      	movs	r2, #0
 800276e:	6879      	ldr	r1, [r7, #4]
 8002770:	2036      	movs	r0, #54	; 0x36
 8002772:	f000 fea3 	bl	80034bc <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002776:	2036      	movs	r0, #54	; 0x36
 8002778:	f000 febc 	bl	80034f4 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800277c:	2300      	movs	r3, #0
 800277e:	60fb      	str	r3, [r7, #12]
 8002780:	4b1f      	ldr	r3, [pc, #124]	; (8002800 <HAL_InitTick+0xa4>)
 8002782:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002784:	4a1e      	ldr	r2, [pc, #120]	; (8002800 <HAL_InitTick+0xa4>)
 8002786:	f043 0310 	orr.w	r3, r3, #16
 800278a:	6413      	str	r3, [r2, #64]	; 0x40
 800278c:	4b1c      	ldr	r3, [pc, #112]	; (8002800 <HAL_InitTick+0xa4>)
 800278e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002790:	f003 0310 	and.w	r3, r3, #16
 8002794:	60fb      	str	r3, [r7, #12]
 8002796:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002798:	f107 0210 	add.w	r2, r7, #16
 800279c:	f107 0314 	add.w	r3, r7, #20
 80027a0:	4611      	mov	r1, r2
 80027a2:	4618      	mov	r0, r3
 80027a4:	f002 fd10 	bl	80051c8 <HAL_RCC_GetClockConfig>

  /* Compute TIM6 clock */
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80027a8:	f002 fce6 	bl	8005178 <HAL_RCC_GetPCLK1Freq>
 80027ac:	4603      	mov	r3, r0
 80027ae:	005b      	lsls	r3, r3, #1
 80027b0:	62fb      	str	r3, [r7, #44]	; 0x2c

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80027b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80027b4:	4a13      	ldr	r2, [pc, #76]	; (8002804 <HAL_InitTick+0xa8>)
 80027b6:	fba2 2303 	umull	r2, r3, r2, r3
 80027ba:	0c9b      	lsrs	r3, r3, #18
 80027bc:	3b01      	subs	r3, #1
 80027be:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80027c0:	4b11      	ldr	r3, [pc, #68]	; (8002808 <HAL_InitTick+0xac>)
 80027c2:	4a12      	ldr	r2, [pc, #72]	; (800280c <HAL_InitTick+0xb0>)
 80027c4:	601a      	str	r2, [r3, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 80027c6:	4b10      	ldr	r3, [pc, #64]	; (8002808 <HAL_InitTick+0xac>)
 80027c8:	f240 32e7 	movw	r2, #999	; 0x3e7
 80027cc:	60da      	str	r2, [r3, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
 80027ce:	4a0e      	ldr	r2, [pc, #56]	; (8002808 <HAL_InitTick+0xac>)
 80027d0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80027d2:	6053      	str	r3, [r2, #4]
  htim6.Init.ClockDivision = 0;
 80027d4:	4b0c      	ldr	r3, [pc, #48]	; (8002808 <HAL_InitTick+0xac>)
 80027d6:	2200      	movs	r2, #0
 80027d8:	611a      	str	r2, [r3, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027da:	4b0b      	ldr	r3, [pc, #44]	; (8002808 <HAL_InitTick+0xac>)
 80027dc:	2200      	movs	r2, #0
 80027de:	609a      	str	r2, [r3, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 80027e0:	4809      	ldr	r0, [pc, #36]	; (8002808 <HAL_InitTick+0xac>)
 80027e2:	f003 f9a7 	bl	8005b34 <HAL_TIM_Base_Init>
 80027e6:	4603      	mov	r3, r0
 80027e8:	2b00      	cmp	r3, #0
 80027ea:	d104      	bne.n	80027f6 <HAL_InitTick+0x9a>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 80027ec:	4806      	ldr	r0, [pc, #24]	; (8002808 <HAL_InitTick+0xac>)
 80027ee:	f003 f9cc 	bl	8005b8a <HAL_TIM_Base_Start_IT>
 80027f2:	4603      	mov	r3, r0
 80027f4:	e000      	b.n	80027f8 <HAL_InitTick+0x9c>
  }

  /* Return function status */
  return HAL_ERROR;
 80027f6:	2301      	movs	r3, #1
}
 80027f8:	4618      	mov	r0, r3
 80027fa:	3730      	adds	r7, #48	; 0x30
 80027fc:	46bd      	mov	sp, r7
 80027fe:	bd80      	pop	{r7, pc}
 8002800:	40023800 	.word	0x40023800
 8002804:	431bde83 	.word	0x431bde83
 8002808:	200005d0 	.word	0x200005d0
 800280c:	40001000 	.word	0x40001000

08002810 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002810:	b480      	push	{r7}
 8002812:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002814:	bf00      	nop
 8002816:	46bd      	mov	sp, r7
 8002818:	f85d 7b04 	ldr.w	r7, [sp], #4
 800281c:	4770      	bx	lr

0800281e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800281e:	b480      	push	{r7}
 8002820:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002822:	e7fe      	b.n	8002822 <HardFault_Handler+0x4>

08002824 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002824:	b480      	push	{r7}
 8002826:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002828:	e7fe      	b.n	8002828 <MemManage_Handler+0x4>

0800282a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800282a:	b480      	push	{r7}
 800282c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800282e:	e7fe      	b.n	800282e <BusFault_Handler+0x4>

08002830 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002830:	b480      	push	{r7}
 8002832:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002834:	e7fe      	b.n	8002834 <UsageFault_Handler+0x4>

08002836 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002836:	b480      	push	{r7}
 8002838:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800283a:	bf00      	nop
 800283c:	46bd      	mov	sp, r7
 800283e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002842:	4770      	bx	lr

08002844 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002844:	b480      	push	{r7}
 8002846:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002848:	bf00      	nop
 800284a:	46bd      	mov	sp, r7
 800284c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002850:	4770      	bx	lr

08002852 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002852:	b480      	push	{r7}
 8002854:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002856:	bf00      	nop
 8002858:	46bd      	mov	sp, r7
 800285a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800285e:	4770      	bx	lr

08002860 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002860:	b480      	push	{r7}
 8002862:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002864:	bf00      	nop
 8002866:	46bd      	mov	sp, r7
 8002868:	f85d 7b04 	ldr.w	r7, [sp], #4
 800286c:	4770      	bx	lr
	...

08002870 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 8002870:	b580      	push	{r7, lr}
 8002872:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002874:	4802      	ldr	r0, [pc, #8]	; (8002880 <TIM6_DAC_IRQHandler+0x10>)
 8002876:	f003 fa76 	bl	8005d66 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 800287a:	bf00      	nop
 800287c:	bd80      	pop	{r7, pc}
 800287e:	bf00      	nop
 8002880:	200005d0 	.word	0x200005d0

08002884 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8002884:	b580      	push	{r7, lr}
 8002886:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002888:	4802      	ldr	r0, [pc, #8]	; (8002894 <LTDC_IRQHandler+0x10>)
 800288a:	f001 fcf9 	bl	8004280 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 800288e:	bf00      	nop
 8002890:	bd80      	pop	{r7, pc}
 8002892:	bf00      	nop
 8002894:	2000031c 	.word	0x2000031c

08002898 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 8002898:	b580      	push	{r7, lr}
 800289a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800289c:	4802      	ldr	r0, [pc, #8]	; (80028a8 <DMA2D_IRQHandler+0x10>)
 800289e:	f001 f81a 	bl	80038d6 <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 80028a2:	bf00      	nop
 80028a4:	bd80      	pop	{r7, pc}
 80028a6:	bf00      	nop
 80028a8:	200002dc 	.word	0x200002dc

080028ac <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80028ac:	b480      	push	{r7}
 80028ae:	af00      	add	r7, sp, #0
	return 1;
 80028b0:	2301      	movs	r3, #1
}
 80028b2:	4618      	mov	r0, r3
 80028b4:	46bd      	mov	sp, r7
 80028b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ba:	4770      	bx	lr

080028bc <_kill>:

int _kill(int pid, int sig)
{
 80028bc:	b580      	push	{r7, lr}
 80028be:	b082      	sub	sp, #8
 80028c0:	af00      	add	r7, sp, #0
 80028c2:	6078      	str	r0, [r7, #4]
 80028c4:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80028c6:	f019 f897 	bl	801b9f8 <__errno>
 80028ca:	4603      	mov	r3, r0
 80028cc:	2216      	movs	r2, #22
 80028ce:	601a      	str	r2, [r3, #0]
	return -1;
 80028d0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80028d4:	4618      	mov	r0, r3
 80028d6:	3708      	adds	r7, #8
 80028d8:	46bd      	mov	sp, r7
 80028da:	bd80      	pop	{r7, pc}

080028dc <_exit>:

void _exit (int status)
{
 80028dc:	b580      	push	{r7, lr}
 80028de:	b082      	sub	sp, #8
 80028e0:	af00      	add	r7, sp, #0
 80028e2:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80028e4:	f04f 31ff 	mov.w	r1, #4294967295
 80028e8:	6878      	ldr	r0, [r7, #4]
 80028ea:	f7ff ffe7 	bl	80028bc <_kill>
	while (1) {}		/* Make sure we hang here */
 80028ee:	e7fe      	b.n	80028ee <_exit+0x12>

080028f0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80028f0:	b580      	push	{r7, lr}
 80028f2:	b086      	sub	sp, #24
 80028f4:	af00      	add	r7, sp, #0
 80028f6:	60f8      	str	r0, [r7, #12]
 80028f8:	60b9      	str	r1, [r7, #8]
 80028fa:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028fc:	2300      	movs	r3, #0
 80028fe:	617b      	str	r3, [r7, #20]
 8002900:	e00a      	b.n	8002918 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002902:	f3af 8000 	nop.w
 8002906:	4601      	mov	r1, r0
 8002908:	68bb      	ldr	r3, [r7, #8]
 800290a:	1c5a      	adds	r2, r3, #1
 800290c:	60ba      	str	r2, [r7, #8]
 800290e:	b2ca      	uxtb	r2, r1
 8002910:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002912:	697b      	ldr	r3, [r7, #20]
 8002914:	3301      	adds	r3, #1
 8002916:	617b      	str	r3, [r7, #20]
 8002918:	697a      	ldr	r2, [r7, #20]
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	429a      	cmp	r2, r3
 800291e:	dbf0      	blt.n	8002902 <_read+0x12>
	}

return len;
 8002920:	687b      	ldr	r3, [r7, #4]
}
 8002922:	4618      	mov	r0, r3
 8002924:	3718      	adds	r7, #24
 8002926:	46bd      	mov	sp, r7
 8002928:	bd80      	pop	{r7, pc}

0800292a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800292a:	b580      	push	{r7, lr}
 800292c:	b086      	sub	sp, #24
 800292e:	af00      	add	r7, sp, #0
 8002930:	60f8      	str	r0, [r7, #12]
 8002932:	60b9      	str	r1, [r7, #8]
 8002934:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002936:	2300      	movs	r3, #0
 8002938:	617b      	str	r3, [r7, #20]
 800293a:	e009      	b.n	8002950 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800293c:	68bb      	ldr	r3, [r7, #8]
 800293e:	1c5a      	adds	r2, r3, #1
 8002940:	60ba      	str	r2, [r7, #8]
 8002942:	781b      	ldrb	r3, [r3, #0]
 8002944:	4618      	mov	r0, r3
 8002946:	f7fe fb53 	bl	8000ff0 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800294a:	697b      	ldr	r3, [r7, #20]
 800294c:	3301      	adds	r3, #1
 800294e:	617b      	str	r3, [r7, #20]
 8002950:	697a      	ldr	r2, [r7, #20]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	429a      	cmp	r2, r3
 8002956:	dbf1      	blt.n	800293c <_write+0x12>
	}
	return len;
 8002958:	687b      	ldr	r3, [r7, #4]
}
 800295a:	4618      	mov	r0, r3
 800295c:	3718      	adds	r7, #24
 800295e:	46bd      	mov	sp, r7
 8002960:	bd80      	pop	{r7, pc}

08002962 <_close>:

int _close(int file)
{
 8002962:	b480      	push	{r7}
 8002964:	b083      	sub	sp, #12
 8002966:	af00      	add	r7, sp, #0
 8002968:	6078      	str	r0, [r7, #4]
	return -1;
 800296a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800296e:	4618      	mov	r0, r3
 8002970:	370c      	adds	r7, #12
 8002972:	46bd      	mov	sp, r7
 8002974:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002978:	4770      	bx	lr

0800297a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800297a:	b480      	push	{r7}
 800297c:	b083      	sub	sp, #12
 800297e:	af00      	add	r7, sp, #0
 8002980:	6078      	str	r0, [r7, #4]
 8002982:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002984:	683b      	ldr	r3, [r7, #0]
 8002986:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800298a:	605a      	str	r2, [r3, #4]
	return 0;
 800298c:	2300      	movs	r3, #0
}
 800298e:	4618      	mov	r0, r3
 8002990:	370c      	adds	r7, #12
 8002992:	46bd      	mov	sp, r7
 8002994:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002998:	4770      	bx	lr

0800299a <_isatty>:

int _isatty(int file)
{
 800299a:	b480      	push	{r7}
 800299c:	b083      	sub	sp, #12
 800299e:	af00      	add	r7, sp, #0
 80029a0:	6078      	str	r0, [r7, #4]
	return 1;
 80029a2:	2301      	movs	r3, #1
}
 80029a4:	4618      	mov	r0, r3
 80029a6:	370c      	adds	r7, #12
 80029a8:	46bd      	mov	sp, r7
 80029aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ae:	4770      	bx	lr

080029b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80029b0:	b480      	push	{r7}
 80029b2:	b085      	sub	sp, #20
 80029b4:	af00      	add	r7, sp, #0
 80029b6:	60f8      	str	r0, [r7, #12]
 80029b8:	60b9      	str	r1, [r7, #8]
 80029ba:	607a      	str	r2, [r7, #4]
	return 0;
 80029bc:	2300      	movs	r3, #0
}
 80029be:	4618      	mov	r0, r3
 80029c0:	3714      	adds	r7, #20
 80029c2:	46bd      	mov	sp, r7
 80029c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029c8:	4770      	bx	lr
	...

080029cc <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80029cc:	b580      	push	{r7, lr}
 80029ce:	b084      	sub	sp, #16
 80029d0:	af00      	add	r7, sp, #0
 80029d2:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80029d4:	4b11      	ldr	r3, [pc, #68]	; (8002a1c <_sbrk+0x50>)
 80029d6:	681b      	ldr	r3, [r3, #0]
 80029d8:	2b00      	cmp	r3, #0
 80029da:	d102      	bne.n	80029e2 <_sbrk+0x16>
		heap_end = &end;
 80029dc:	4b0f      	ldr	r3, [pc, #60]	; (8002a1c <_sbrk+0x50>)
 80029de:	4a10      	ldr	r2, [pc, #64]	; (8002a20 <_sbrk+0x54>)
 80029e0:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80029e2:	4b0e      	ldr	r3, [pc, #56]	; (8002a1c <_sbrk+0x50>)
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80029e8:	4b0c      	ldr	r3, [pc, #48]	; (8002a1c <_sbrk+0x50>)
 80029ea:	681a      	ldr	r2, [r3, #0]
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	4413      	add	r3, r2
 80029f0:	466a      	mov	r2, sp
 80029f2:	4293      	cmp	r3, r2
 80029f4:	d907      	bls.n	8002a06 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80029f6:	f018 ffff 	bl	801b9f8 <__errno>
 80029fa:	4603      	mov	r3, r0
 80029fc:	220c      	movs	r2, #12
 80029fe:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8002a00:	f04f 33ff 	mov.w	r3, #4294967295
 8002a04:	e006      	b.n	8002a14 <_sbrk+0x48>
	}

	heap_end += incr;
 8002a06:	4b05      	ldr	r3, [pc, #20]	; (8002a1c <_sbrk+0x50>)
 8002a08:	681a      	ldr	r2, [r3, #0]
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	4413      	add	r3, r2
 8002a0e:	4a03      	ldr	r2, [pc, #12]	; (8002a1c <_sbrk+0x50>)
 8002a10:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8002a12:	68fb      	ldr	r3, [r7, #12]
}
 8002a14:	4618      	mov	r0, r3
 8002a16:	3710      	adds	r7, #16
 8002a18:	46bd      	mov	sp, r7
 8002a1a:	bd80      	pop	{r7, pc}
 8002a1c:	20000610 	.word	0x20000610
 8002a20:	20001a68 	.word	0x20001a68

08002a24 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002a24:	b480      	push	{r7}
 8002a26:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002a28:	4b08      	ldr	r3, [pc, #32]	; (8002a4c <SystemInit+0x28>)
 8002a2a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002a2e:	4a07      	ldr	r2, [pc, #28]	; (8002a4c <SystemInit+0x28>)
 8002a30:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002a34:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8002a38:	4b04      	ldr	r3, [pc, #16]	; (8002a4c <SystemInit+0x28>)
 8002a3a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8002a3e:	609a      	str	r2, [r3, #8]
#endif
}
 8002a40:	bf00      	nop
 8002a42:	46bd      	mov	sp, r7
 8002a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a48:	4770      	bx	lr
 8002a4a:	bf00      	nop
 8002a4c:	e000ed00 	.word	0xe000ed00

08002a50 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8002a50:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002a88 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8002a54:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8002a56:	e003      	b.n	8002a60 <LoopCopyDataInit>

08002a58 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8002a58:	4b0c      	ldr	r3, [pc, #48]	; (8002a8c <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8002a5a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8002a5c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8002a5e:	3104      	adds	r1, #4

08002a60 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8002a60:	480b      	ldr	r0, [pc, #44]	; (8002a90 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8002a62:	4b0c      	ldr	r3, [pc, #48]	; (8002a94 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8002a64:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8002a66:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8002a68:	d3f6      	bcc.n	8002a58 <CopyDataInit>
  ldr  r2, =_sbss
 8002a6a:	4a0b      	ldr	r2, [pc, #44]	; (8002a98 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8002a6c:	e002      	b.n	8002a74 <LoopFillZerobss>

08002a6e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8002a6e:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8002a70:	f842 3b04 	str.w	r3, [r2], #4

08002a74 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8002a74:	4b09      	ldr	r3, [pc, #36]	; (8002a9c <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8002a76:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8002a78:	d3f9      	bcc.n	8002a6e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8002a7a:	f7ff ffd3 	bl	8002a24 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002a7e:	f018 ffd3 	bl	801ba28 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002a82:	f7fe fad5 	bl	8001030 <main>
  bx  lr    
 8002a86:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8002a88:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8002a8c:	0802c454 	.word	0x0802c454
  ldr  r0, =_sdata
 8002a90:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8002a94:	20000270 	.word	0x20000270
  ldr  r2, =_sbss
 8002a98:	20000270 	.word	0x20000270
  ldr  r3, = _ebss
 8002a9c:	20001a64 	.word	0x20001a64

08002aa0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002aa0:	e7fe      	b.n	8002aa0 <ADC_IRQHandler>
	...

08002aa4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002aa4:	b580      	push	{r7, lr}
 8002aa6:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002aa8:	4b0e      	ldr	r3, [pc, #56]	; (8002ae4 <HAL_Init+0x40>)
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	4a0d      	ldr	r2, [pc, #52]	; (8002ae4 <HAL_Init+0x40>)
 8002aae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002ab2:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002ab4:	4b0b      	ldr	r3, [pc, #44]	; (8002ae4 <HAL_Init+0x40>)
 8002ab6:	681b      	ldr	r3, [r3, #0]
 8002ab8:	4a0a      	ldr	r2, [pc, #40]	; (8002ae4 <HAL_Init+0x40>)
 8002aba:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002abe:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002ac0:	4b08      	ldr	r3, [pc, #32]	; (8002ae4 <HAL_Init+0x40>)
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	4a07      	ldr	r2, [pc, #28]	; (8002ae4 <HAL_Init+0x40>)
 8002ac6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002aca:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002acc:	2003      	movs	r0, #3
 8002ace:	f000 fcea 	bl	80034a6 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002ad2:	2000      	movs	r0, #0
 8002ad4:	f7ff fe42 	bl	800275c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002ad8:	f7ff fa26 	bl	8001f28 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002adc:	2300      	movs	r3, #0
}
 8002ade:	4618      	mov	r0, r3
 8002ae0:	bd80      	pop	{r7, pc}
 8002ae2:	bf00      	nop
 8002ae4:	40023c00 	.word	0x40023c00

08002ae8 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002ae8:	b480      	push	{r7}
 8002aea:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002aec:	4b06      	ldr	r3, [pc, #24]	; (8002b08 <HAL_IncTick+0x20>)
 8002aee:	781b      	ldrb	r3, [r3, #0]
 8002af0:	461a      	mov	r2, r3
 8002af2:	4b06      	ldr	r3, [pc, #24]	; (8002b0c <HAL_IncTick+0x24>)
 8002af4:	681b      	ldr	r3, [r3, #0]
 8002af6:	4413      	add	r3, r2
 8002af8:	4a04      	ldr	r2, [pc, #16]	; (8002b0c <HAL_IncTick+0x24>)
 8002afa:	6013      	str	r3, [r2, #0]
}
 8002afc:	bf00      	nop
 8002afe:	46bd      	mov	sp, r7
 8002b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b04:	4770      	bx	lr
 8002b06:	bf00      	nop
 8002b08:	2000000c 	.word	0x2000000c
 8002b0c:	20000614 	.word	0x20000614

08002b10 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002b10:	b480      	push	{r7}
 8002b12:	af00      	add	r7, sp, #0
  return uwTick;
 8002b14:	4b03      	ldr	r3, [pc, #12]	; (8002b24 <HAL_GetTick+0x14>)
 8002b16:	681b      	ldr	r3, [r3, #0]
}
 8002b18:	4618      	mov	r0, r3
 8002b1a:	46bd      	mov	sp, r7
 8002b1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b20:	4770      	bx	lr
 8002b22:	bf00      	nop
 8002b24:	20000614 	.word	0x20000614

08002b28 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002b28:	b580      	push	{r7, lr}
 8002b2a:	b084      	sub	sp, #16
 8002b2c:	af00      	add	r7, sp, #0
 8002b2e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002b30:	f7ff ffee 	bl	8002b10 <HAL_GetTick>
 8002b34:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002b3a:	68fb      	ldr	r3, [r7, #12]
 8002b3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b40:	d005      	beq.n	8002b4e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002b42:	4b0a      	ldr	r3, [pc, #40]	; (8002b6c <HAL_Delay+0x44>)
 8002b44:	781b      	ldrb	r3, [r3, #0]
 8002b46:	461a      	mov	r2, r3
 8002b48:	68fb      	ldr	r3, [r7, #12]
 8002b4a:	4413      	add	r3, r2
 8002b4c:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002b4e:	bf00      	nop
 8002b50:	f7ff ffde 	bl	8002b10 <HAL_GetTick>
 8002b54:	4602      	mov	r2, r0
 8002b56:	68bb      	ldr	r3, [r7, #8]
 8002b58:	1ad3      	subs	r3, r2, r3
 8002b5a:	68fa      	ldr	r2, [r7, #12]
 8002b5c:	429a      	cmp	r2, r3
 8002b5e:	d8f7      	bhi.n	8002b50 <HAL_Delay+0x28>
  {
  }
}
 8002b60:	bf00      	nop
 8002b62:	bf00      	nop
 8002b64:	3710      	adds	r7, #16
 8002b66:	46bd      	mov	sp, r7
 8002b68:	bd80      	pop	{r7, pc}
 8002b6a:	bf00      	nop
 8002b6c:	2000000c 	.word	0x2000000c

08002b70 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8002b70:	b580      	push	{r7, lr}
 8002b72:	b084      	sub	sp, #16
 8002b74:	af00      	add	r7, sp, #0
 8002b76:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002b78:	2300      	movs	r3, #0
 8002b7a:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d101      	bne.n	8002b86 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8002b82:	2301      	movs	r3, #1
 8002b84:	e033      	b.n	8002bee <HAL_ADC_Init+0x7e>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b8a:	2b00      	cmp	r3, #0
 8002b8c:	d109      	bne.n	8002ba2 <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002b8e:	6878      	ldr	r0, [r7, #4]
 8002b90:	f7ff f9f2 	bl	8001f78 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	2200      	movs	r2, #0
 8002b98:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	2200      	movs	r2, #0
 8002b9e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ba6:	f003 0310 	and.w	r3, r3, #16
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d118      	bne.n	8002be0 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002bae:	687b      	ldr	r3, [r7, #4]
 8002bb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bb2:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8002bb6:	f023 0302 	bic.w	r3, r3, #2
 8002bba:	f043 0202 	orr.w	r2, r3, #2
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 8002bc2:	6878      	ldr	r0, [r7, #4]
 8002bc4:	f000 faa2 	bl	800310c <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	2200      	movs	r2, #0
 8002bcc:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002bce:	687b      	ldr	r3, [r7, #4]
 8002bd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bd2:	f023 0303 	bic.w	r3, r3, #3
 8002bd6:	f043 0201 	orr.w	r2, r3, #1
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	641a      	str	r2, [r3, #64]	; 0x40
 8002bde:	e001      	b.n	8002be4 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002be0:	2301      	movs	r3, #1
 8002be2:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	2200      	movs	r2, #0
 8002be8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002bec:	7bfb      	ldrb	r3, [r7, #15]
}
 8002bee:	4618      	mov	r0, r3
 8002bf0:	3710      	adds	r7, #16
 8002bf2:	46bd      	mov	sp, r7
 8002bf4:	bd80      	pop	{r7, pc}
	...

08002bf8 <HAL_ADC_Start>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
{
 8002bf8:	b480      	push	{r7}
 8002bfa:	b085      	sub	sp, #20
 8002bfc:	af00      	add	r7, sp, #0
 8002bfe:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0U;
 8002c00:	2300      	movs	r3, #0
 8002c02:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002c0a:	2b01      	cmp	r3, #1
 8002c0c:	d101      	bne.n	8002c12 <HAL_ADC_Start+0x1a>
 8002c0e:	2302      	movs	r3, #2
 8002c10:	e0a5      	b.n	8002d5e <HAL_ADC_Start+0x166>
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	2201      	movs	r2, #1
 8002c16:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
  Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	689b      	ldr	r3, [r3, #8]
 8002c20:	f003 0301 	and.w	r3, r3, #1
 8002c24:	2b01      	cmp	r3, #1
 8002c26:	d018      	beq.n	8002c5a <HAL_ADC_Start+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	689a      	ldr	r2, [r3, #8]
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	681b      	ldr	r3, [r3, #0]
 8002c32:	f042 0201 	orr.w	r2, r2, #1
 8002c36:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002c38:	4b4c      	ldr	r3, [pc, #304]	; (8002d6c <HAL_ADC_Start+0x174>)
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4a4c      	ldr	r2, [pc, #304]	; (8002d70 <HAL_ADC_Start+0x178>)
 8002c3e:	fba2 2303 	umull	r2, r3, r2, r3
 8002c42:	0c9a      	lsrs	r2, r3, #18
 8002c44:	4613      	mov	r3, r2
 8002c46:	005b      	lsls	r3, r3, #1
 8002c48:	4413      	add	r3, r2
 8002c4a:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8002c4c:	e002      	b.n	8002c54 <HAL_ADC_Start+0x5c>
    {
      counter--;
 8002c4e:	68bb      	ldr	r3, [r7, #8]
 8002c50:	3b01      	subs	r3, #1
 8002c52:	60bb      	str	r3, [r7, #8]
    while(counter != 0U)
 8002c54:	68bb      	ldr	r3, [r7, #8]
 8002c56:	2b00      	cmp	r3, #0
 8002c58:	d1f9      	bne.n	8002c4e <HAL_ADC_Start+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	689b      	ldr	r3, [r3, #8]
 8002c60:	f003 0301 	and.w	r3, r3, #1
 8002c64:	2b01      	cmp	r3, #1
 8002c66:	d179      	bne.n	8002d5c <HAL_ADC_Start+0x164>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c6c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8002c70:	f023 0301 	bic.w	r3, r3, #1
 8002c74:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	685b      	ldr	r3, [r3, #4]
 8002c82:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d007      	beq.n	8002c9a <HAL_ADC_Start+0xa2>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c8e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8002c92:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c9e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002ca2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002ca6:	d106      	bne.n	8002cb6 <HAL_ADC_Start+0xbe>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002cac:	f023 0206 	bic.w	r2, r3, #6
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	645a      	str	r2, [r3, #68]	; 0x44
 8002cb4:	e002      	b.n	8002cbc <HAL_ADC_Start+0xc4>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002cb6:	687b      	ldr	r3, [r7, #4]
 8002cb8:	2200      	movs	r2, #0
 8002cba:	645a      	str	r2, [r3, #68]	; 0x44
    } 

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	2200      	movs	r2, #0
 8002cc0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002cc4:	4b2b      	ldr	r3, [pc, #172]	; (8002d74 <HAL_ADC_Start+0x17c>)
 8002cc6:	60fb      	str	r3, [r7, #12]

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8002cd0:	601a      	str	r2, [r3, #0]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002cd2:	68fb      	ldr	r3, [r7, #12]
 8002cd4:	685b      	ldr	r3, [r3, #4]
 8002cd6:	f003 031f 	and.w	r3, r3, #31
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	d12a      	bne.n	8002d34 <HAL_ADC_Start+0x13c>
    {
#if defined(ADC2) && defined(ADC3)
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	4a25      	ldr	r2, [pc, #148]	; (8002d78 <HAL_ADC_Start+0x180>)
 8002ce4:	4293      	cmp	r3, r2
 8002ce6:	d015      	beq.n	8002d14 <HAL_ADC_Start+0x11c>
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	4a23      	ldr	r2, [pc, #140]	; (8002d7c <HAL_ADC_Start+0x184>)
 8002cee:	4293      	cmp	r3, r2
 8002cf0:	d105      	bne.n	8002cfe <HAL_ADC_Start+0x106>
 8002cf2:	4b20      	ldr	r3, [pc, #128]	; (8002d74 <HAL_ADC_Start+0x17c>)
 8002cf4:	685b      	ldr	r3, [r3, #4]
 8002cf6:	f003 031f 	and.w	r3, r3, #31
 8002cfa:	2b00      	cmp	r3, #0
 8002cfc:	d00a      	beq.n	8002d14 <HAL_ADC_Start+0x11c>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	681b      	ldr	r3, [r3, #0]
 8002d02:	4a1f      	ldr	r2, [pc, #124]	; (8002d80 <HAL_ADC_Start+0x188>)
 8002d04:	4293      	cmp	r3, r2
 8002d06:	d129      	bne.n	8002d5c <HAL_ADC_Start+0x164>
 8002d08:	4b1a      	ldr	r3, [pc, #104]	; (8002d74 <HAL_ADC_Start+0x17c>)
 8002d0a:	685b      	ldr	r3, [r3, #4]
 8002d0c:	f003 0310 	and.w	r3, r3, #16
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	d123      	bne.n	8002d5c <HAL_ADC_Start+0x164>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	689b      	ldr	r3, [r3, #8]
 8002d1a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d11c      	bne.n	8002d5c <HAL_ADC_Start+0x164>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	681b      	ldr	r3, [r3, #0]
 8002d26:	689a      	ldr	r2, [r3, #8]
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8002d30:	609a      	str	r2, [r3, #8]
 8002d32:	e013      	b.n	8002d5c <HAL_ADC_Start+0x164>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	4a0f      	ldr	r2, [pc, #60]	; (8002d78 <HAL_ADC_Start+0x180>)
 8002d3a:	4293      	cmp	r3, r2
 8002d3c:	d10e      	bne.n	8002d5c <HAL_ADC_Start+0x164>
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	681b      	ldr	r3, [r3, #0]
 8002d42:	689b      	ldr	r3, [r3, #8]
 8002d44:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d107      	bne.n	8002d5c <HAL_ADC_Start+0x164>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	689a      	ldr	r2, [r3, #8]
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	681b      	ldr	r3, [r3, #0]
 8002d56:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8002d5a:	609a      	str	r2, [r3, #8]
      }
    }
  }
  
  /* Return function status */
  return HAL_OK;
 8002d5c:	2300      	movs	r3, #0
}
 8002d5e:	4618      	mov	r0, r3
 8002d60:	3714      	adds	r7, #20
 8002d62:	46bd      	mov	sp, r7
 8002d64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d68:	4770      	bx	lr
 8002d6a:	bf00      	nop
 8002d6c:	20000004 	.word	0x20000004
 8002d70:	431bde83 	.word	0x431bde83
 8002d74:	40012300 	.word	0x40012300
 8002d78:	40012000 	.word	0x40012000
 8002d7c:	40012100 	.word	0x40012100
 8002d80:	40012200 	.word	0x40012200

08002d84 <HAL_ADC_PollForConversion>:
  *         the configuration information for the specified ADC.
  * @param  Timeout Timeout value in millisecond.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
{
 8002d84:	b580      	push	{r7, lr}
 8002d86:	b084      	sub	sp, #16
 8002d88:	af00      	add	r7, sp, #0
 8002d8a:	6078      	str	r0, [r7, #4]
 8002d8c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 8002d8e:	2300      	movs	r3, #0
 8002d90:	60fb      	str	r3, [r7, #12]
  /* each conversion:                                                       */
  /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
  /* several ranks and polling for end of each conversion.                  */
  /* For code simplicity sake, this particular case is generalized to       */
  /* ADC configured in DMA mode and polling for end of each conversion.     */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	689b      	ldr	r3, [r3, #8]
 8002d98:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002d9c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002da0:	d113      	bne.n	8002dca <HAL_ADC_PollForConversion+0x46>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	681b      	ldr	r3, [r3, #0]
 8002da6:	689b      	ldr	r3, [r3, #8]
 8002da8:	f403 7380 	and.w	r3, r3, #256	; 0x100
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8002dac:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002db0:	d10b      	bne.n	8002dca <HAL_ADC_PollForConversion+0x46>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002db6:	f043 0220 	orr.w	r2, r3, #32
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 8002dbe:	687b      	ldr	r3, [r7, #4]
 8002dc0:	2200      	movs	r2, #0
 8002dc2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    return HAL_ERROR;
 8002dc6:	2301      	movs	r3, #1
 8002dc8:	e05c      	b.n	8002e84 <HAL_ADC_PollForConversion+0x100>
  }

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8002dca:	f7ff fea1 	bl	8002b10 <HAL_GetTick>
 8002dce:	60f8      	str	r0, [r7, #12]

  /* Check End of conversion flag */
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8002dd0:	e01a      	b.n	8002e08 <HAL_ADC_PollForConversion+0x84>
  {
    /* Check if timeout is disabled (set to infinite wait) */
    if(Timeout != HAL_MAX_DELAY)
 8002dd2:	683b      	ldr	r3, [r7, #0]
 8002dd4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002dd8:	d016      	beq.n	8002e08 <HAL_ADC_PollForConversion+0x84>
    {
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8002dda:	683b      	ldr	r3, [r7, #0]
 8002ddc:	2b00      	cmp	r3, #0
 8002dde:	d007      	beq.n	8002df0 <HAL_ADC_PollForConversion+0x6c>
 8002de0:	f7ff fe96 	bl	8002b10 <HAL_GetTick>
 8002de4:	4602      	mov	r2, r0
 8002de6:	68fb      	ldr	r3, [r7, #12]
 8002de8:	1ad3      	subs	r3, r2, r3
 8002dea:	683a      	ldr	r2, [r7, #0]
 8002dec:	429a      	cmp	r2, r3
 8002dee:	d20b      	bcs.n	8002e08 <HAL_ADC_PollForConversion+0x84>
      {
        /* Update ADC state machine to timeout */
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002df4:	f043 0204 	orr.w	r2, r3, #4
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	641a      	str	r2, [r3, #64]	; 0x40
        
        /* Process unlocked */
        __HAL_UNLOCK(hadc);
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	2200      	movs	r2, #0
 8002e00:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
        
        return HAL_TIMEOUT;
 8002e04:	2303      	movs	r3, #3
 8002e06:	e03d      	b.n	8002e84 <HAL_ADC_PollForConversion+0x100>
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	f003 0302 	and.w	r3, r3, #2
 8002e12:	2b02      	cmp	r3, #2
 8002e14:	d1dd      	bne.n	8002dd2 <HAL_ADC_PollForConversion+0x4e>
      }
    }
  }
  
  /* Clear regular group conversion flag */
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	f06f 0212 	mvn.w	r2, #18
 8002e1e:	601a      	str	r2, [r3, #0]
  
  /* Update ADC state machine */
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e24:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	641a      	str	r2, [r3, #64]	; 0x40
  /* by external trigger, continuous mode or scan sequence on going.          */
  /* Note: On STM32F4, there is no independent flag of end of sequence.       */
  /*       The test of scan sequence on going is done either with scan        */
  /*       sequence disabled or with end of conversion flag set to            */
  /*       of end of sequence.                                                */
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	689b      	ldr	r3, [r3, #8]
 8002e32:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002e36:	2b00      	cmp	r3, #0
 8002e38:	d123      	bne.n	8002e82 <HAL_ADC_PollForConversion+0xfe>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	7e1b      	ldrb	r3, [r3, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002e3e:	2b00      	cmp	r3, #0
 8002e40:	d11f      	bne.n	8002e82 <HAL_ADC_PollForConversion+0xfe>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002e48:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002e4c:	2b00      	cmp	r3, #0
 8002e4e:	d006      	beq.n	8002e5e <HAL_ADC_PollForConversion+0xda>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	681b      	ldr	r3, [r3, #0]
 8002e54:	689b      	ldr	r3, [r3, #8]
 8002e56:	f403 6380 	and.w	r3, r3, #1024	; 0x400
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002e5a:	2b00      	cmp	r3, #0
 8002e5c:	d111      	bne.n	8002e82 <HAL_ADC_PollForConversion+0xfe>
  {
    /* Set ADC state */
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e62:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	641a      	str	r2, [r3, #64]	; 0x40
    
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e6e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	d105      	bne.n	8002e82 <HAL_ADC_PollForConversion+0xfe>
    { 
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e7a:	f043 0201 	orr.w	r2, r3, #1
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	641a      	str	r2, [r3, #64]	; 0x40
    }
  }
  
  /* Return ADC state */
  return HAL_OK;
 8002e82:	2300      	movs	r3, #0
}
 8002e84:	4618      	mov	r0, r3
 8002e86:	3710      	adds	r7, #16
 8002e88:	46bd      	mov	sp, r7
 8002e8a:	bd80      	pop	{r7, pc}

08002e8c <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 8002e8c:	b480      	push	{r7}
 8002e8e:	b083      	sub	sp, #12
 8002e90:	af00      	add	r7, sp, #0
 8002e92:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8002e9a:	4618      	mov	r0, r3
 8002e9c:	370c      	adds	r7, #12
 8002e9e:	46bd      	mov	sp, r7
 8002ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ea4:	4770      	bx	lr
	...

08002ea8 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 8002ea8:	b480      	push	{r7}
 8002eaa:	b085      	sub	sp, #20
 8002eac:	af00      	add	r7, sp, #0
 8002eae:	6078      	str	r0, [r7, #4]
 8002eb0:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8002eb2:	2300      	movs	r3, #0
 8002eb4:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002ebc:	2b01      	cmp	r3, #1
 8002ebe:	d101      	bne.n	8002ec4 <HAL_ADC_ConfigChannel+0x1c>
 8002ec0:	2302      	movs	r3, #2
 8002ec2:	e113      	b.n	80030ec <HAL_ADC_ConfigChannel+0x244>
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	2201      	movs	r2, #1
 8002ec8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8002ecc:	683b      	ldr	r3, [r7, #0]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	2b09      	cmp	r3, #9
 8002ed2:	d925      	bls.n	8002f20 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	68d9      	ldr	r1, [r3, #12]
 8002eda:	683b      	ldr	r3, [r7, #0]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	b29b      	uxth	r3, r3
 8002ee0:	461a      	mov	r2, r3
 8002ee2:	4613      	mov	r3, r2
 8002ee4:	005b      	lsls	r3, r3, #1
 8002ee6:	4413      	add	r3, r2
 8002ee8:	3b1e      	subs	r3, #30
 8002eea:	2207      	movs	r2, #7
 8002eec:	fa02 f303 	lsl.w	r3, r2, r3
 8002ef0:	43da      	mvns	r2, r3
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	400a      	ands	r2, r1
 8002ef8:	60da      	str	r2, [r3, #12]
    
    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	68d9      	ldr	r1, [r3, #12]
 8002f00:	683b      	ldr	r3, [r7, #0]
 8002f02:	689a      	ldr	r2, [r3, #8]
 8002f04:	683b      	ldr	r3, [r7, #0]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	b29b      	uxth	r3, r3
 8002f0a:	4618      	mov	r0, r3
 8002f0c:	4603      	mov	r3, r0
 8002f0e:	005b      	lsls	r3, r3, #1
 8002f10:	4403      	add	r3, r0
 8002f12:	3b1e      	subs	r3, #30
 8002f14:	409a      	lsls	r2, r3
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	430a      	orrs	r2, r1
 8002f1c:	60da      	str	r2, [r3, #12]
 8002f1e:	e022      	b.n	8002f66 <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8002f20:	687b      	ldr	r3, [r7, #4]
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	6919      	ldr	r1, [r3, #16]
 8002f26:	683b      	ldr	r3, [r7, #0]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	b29b      	uxth	r3, r3
 8002f2c:	461a      	mov	r2, r3
 8002f2e:	4613      	mov	r3, r2
 8002f30:	005b      	lsls	r3, r3, #1
 8002f32:	4413      	add	r3, r2
 8002f34:	2207      	movs	r2, #7
 8002f36:	fa02 f303 	lsl.w	r3, r2, r3
 8002f3a:	43da      	mvns	r2, r3
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	400a      	ands	r2, r1
 8002f42:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	6919      	ldr	r1, [r3, #16]
 8002f4a:	683b      	ldr	r3, [r7, #0]
 8002f4c:	689a      	ldr	r2, [r3, #8]
 8002f4e:	683b      	ldr	r3, [r7, #0]
 8002f50:	681b      	ldr	r3, [r3, #0]
 8002f52:	b29b      	uxth	r3, r3
 8002f54:	4618      	mov	r0, r3
 8002f56:	4603      	mov	r3, r0
 8002f58:	005b      	lsls	r3, r3, #1
 8002f5a:	4403      	add	r3, r0
 8002f5c:	409a      	lsls	r2, r3
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	430a      	orrs	r2, r1
 8002f64:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 8002f66:	683b      	ldr	r3, [r7, #0]
 8002f68:	685b      	ldr	r3, [r3, #4]
 8002f6a:	2b06      	cmp	r3, #6
 8002f6c:	d824      	bhi.n	8002fb8 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002f74:	683b      	ldr	r3, [r7, #0]
 8002f76:	685a      	ldr	r2, [r3, #4]
 8002f78:	4613      	mov	r3, r2
 8002f7a:	009b      	lsls	r3, r3, #2
 8002f7c:	4413      	add	r3, r2
 8002f7e:	3b05      	subs	r3, #5
 8002f80:	221f      	movs	r2, #31
 8002f82:	fa02 f303 	lsl.w	r3, r2, r3
 8002f86:	43da      	mvns	r2, r3
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	400a      	ands	r2, r1
 8002f8e:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002f96:	683b      	ldr	r3, [r7, #0]
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	b29b      	uxth	r3, r3
 8002f9c:	4618      	mov	r0, r3
 8002f9e:	683b      	ldr	r3, [r7, #0]
 8002fa0:	685a      	ldr	r2, [r3, #4]
 8002fa2:	4613      	mov	r3, r2
 8002fa4:	009b      	lsls	r3, r3, #2
 8002fa6:	4413      	add	r3, r2
 8002fa8:	3b05      	subs	r3, #5
 8002faa:	fa00 f203 	lsl.w	r2, r0, r3
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	681b      	ldr	r3, [r3, #0]
 8002fb2:	430a      	orrs	r2, r1
 8002fb4:	635a      	str	r2, [r3, #52]	; 0x34
 8002fb6:	e04c      	b.n	8003052 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8002fb8:	683b      	ldr	r3, [r7, #0]
 8002fba:	685b      	ldr	r3, [r3, #4]
 8002fbc:	2b0c      	cmp	r3, #12
 8002fbe:	d824      	bhi.n	800300a <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	681b      	ldr	r3, [r3, #0]
 8002fc4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002fc6:	683b      	ldr	r3, [r7, #0]
 8002fc8:	685a      	ldr	r2, [r3, #4]
 8002fca:	4613      	mov	r3, r2
 8002fcc:	009b      	lsls	r3, r3, #2
 8002fce:	4413      	add	r3, r2
 8002fd0:	3b23      	subs	r3, #35	; 0x23
 8002fd2:	221f      	movs	r2, #31
 8002fd4:	fa02 f303 	lsl.w	r3, r2, r3
 8002fd8:	43da      	mvns	r2, r3
 8002fda:	687b      	ldr	r3, [r7, #4]
 8002fdc:	681b      	ldr	r3, [r3, #0]
 8002fde:	400a      	ands	r2, r1
 8002fe0:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002fe8:	683b      	ldr	r3, [r7, #0]
 8002fea:	681b      	ldr	r3, [r3, #0]
 8002fec:	b29b      	uxth	r3, r3
 8002fee:	4618      	mov	r0, r3
 8002ff0:	683b      	ldr	r3, [r7, #0]
 8002ff2:	685a      	ldr	r2, [r3, #4]
 8002ff4:	4613      	mov	r3, r2
 8002ff6:	009b      	lsls	r3, r3, #2
 8002ff8:	4413      	add	r3, r2
 8002ffa:	3b23      	subs	r3, #35	; 0x23
 8002ffc:	fa00 f203 	lsl.w	r2, r0, r3
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	430a      	orrs	r2, r1
 8003006:	631a      	str	r2, [r3, #48]	; 0x30
 8003008:	e023      	b.n	8003052 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003010:	683b      	ldr	r3, [r7, #0]
 8003012:	685a      	ldr	r2, [r3, #4]
 8003014:	4613      	mov	r3, r2
 8003016:	009b      	lsls	r3, r3, #2
 8003018:	4413      	add	r3, r2
 800301a:	3b41      	subs	r3, #65	; 0x41
 800301c:	221f      	movs	r2, #31
 800301e:	fa02 f303 	lsl.w	r3, r2, r3
 8003022:	43da      	mvns	r2, r3
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	400a      	ands	r2, r1
 800302a:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003032:	683b      	ldr	r3, [r7, #0]
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	b29b      	uxth	r3, r3
 8003038:	4618      	mov	r0, r3
 800303a:	683b      	ldr	r3, [r7, #0]
 800303c:	685a      	ldr	r2, [r3, #4]
 800303e:	4613      	mov	r3, r2
 8003040:	009b      	lsls	r3, r3, #2
 8003042:	4413      	add	r3, r2
 8003044:	3b41      	subs	r3, #65	; 0x41
 8003046:	fa00 f203 	lsl.w	r2, r0, r3
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	681b      	ldr	r3, [r3, #0]
 800304e:	430a      	orrs	r2, r1
 8003050:	62da      	str	r2, [r3, #44]	; 0x2c
  }

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003052:	4b29      	ldr	r3, [pc, #164]	; (80030f8 <HAL_ADC_ConfigChannel+0x250>)
 8003054:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	4a28      	ldr	r2, [pc, #160]	; (80030fc <HAL_ADC_ConfigChannel+0x254>)
 800305c:	4293      	cmp	r3, r2
 800305e:	d10f      	bne.n	8003080 <HAL_ADC_ConfigChannel+0x1d8>
 8003060:	683b      	ldr	r3, [r7, #0]
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	2b12      	cmp	r3, #18
 8003066:	d10b      	bne.n	8003080 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/    
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8003068:	68fb      	ldr	r3, [r7, #12]
 800306a:	685b      	ldr	r3, [r3, #4]
 800306c:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8003070:	68fb      	ldr	r3, [r7, #12]
 8003072:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	685b      	ldr	r3, [r3, #4]
 8003078:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 800307c:	68fb      	ldr	r3, [r7, #12]
 800307e:	605a      	str	r2, [r3, #4]
  }
  
  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or 
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	681b      	ldr	r3, [r3, #0]
 8003084:	4a1d      	ldr	r2, [pc, #116]	; (80030fc <HAL_ADC_ConfigChannel+0x254>)
 8003086:	4293      	cmp	r3, r2
 8003088:	d12b      	bne.n	80030e2 <HAL_ADC_ConfigChannel+0x23a>
 800308a:	683b      	ldr	r3, [r7, #0]
 800308c:	681b      	ldr	r3, [r3, #0]
 800308e:	4a1c      	ldr	r2, [pc, #112]	; (8003100 <HAL_ADC_ConfigChannel+0x258>)
 8003090:	4293      	cmp	r3, r2
 8003092:	d003      	beq.n	800309c <HAL_ADC_ConfigChannel+0x1f4>
 8003094:	683b      	ldr	r3, [r7, #0]
 8003096:	681b      	ldr	r3, [r3, #0]
 8003098:	2b11      	cmp	r3, #17
 800309a:	d122      	bne.n	80030e2 <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	685b      	ldr	r3, [r3, #4]
 80030a0:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 80030a4:	68fb      	ldr	r3, [r7, #12]
 80030a6:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	685b      	ldr	r3, [r3, #4]
 80030ac:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80030b0:	68fb      	ldr	r3, [r7, #12]
 80030b2:	605a      	str	r2, [r3, #4]
    
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 80030b4:	683b      	ldr	r3, [r7, #0]
 80030b6:	681b      	ldr	r3, [r3, #0]
 80030b8:	4a11      	ldr	r2, [pc, #68]	; (8003100 <HAL_ADC_ConfigChannel+0x258>)
 80030ba:	4293      	cmp	r3, r2
 80030bc:	d111      	bne.n	80030e2 <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80030be:	4b11      	ldr	r3, [pc, #68]	; (8003104 <HAL_ADC_ConfigChannel+0x25c>)
 80030c0:	681b      	ldr	r3, [r3, #0]
 80030c2:	4a11      	ldr	r2, [pc, #68]	; (8003108 <HAL_ADC_ConfigChannel+0x260>)
 80030c4:	fba2 2303 	umull	r2, r3, r2, r3
 80030c8:	0c9a      	lsrs	r2, r3, #18
 80030ca:	4613      	mov	r3, r2
 80030cc:	009b      	lsls	r3, r3, #2
 80030ce:	4413      	add	r3, r2
 80030d0:	005b      	lsls	r3, r3, #1
 80030d2:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 80030d4:	e002      	b.n	80030dc <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 80030d6:	68bb      	ldr	r3, [r7, #8]
 80030d8:	3b01      	subs	r3, #1
 80030da:	60bb      	str	r3, [r7, #8]
      while(counter != 0U)
 80030dc:	68bb      	ldr	r3, [r7, #8]
 80030de:	2b00      	cmp	r3, #0
 80030e0:	d1f9      	bne.n	80030d6 <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	2200      	movs	r2, #0
 80030e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 80030ea:	2300      	movs	r3, #0
}
 80030ec:	4618      	mov	r0, r3
 80030ee:	3714      	adds	r7, #20
 80030f0:	46bd      	mov	sp, r7
 80030f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030f6:	4770      	bx	lr
 80030f8:	40012300 	.word	0x40012300
 80030fc:	40012000 	.word	0x40012000
 8003100:	10000012 	.word	0x10000012
 8003104:	20000004 	.word	0x20000004
 8003108:	431bde83 	.word	0x431bde83

0800310c <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 800310c:	b480      	push	{r7}
 800310e:	b085      	sub	sp, #20
 8003110:	af00      	add	r7, sp, #0
 8003112:	6078      	str	r0, [r7, #4]
  
  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003114:	4b79      	ldr	r3, [pc, #484]	; (80032fc <ADC_Init+0x1f0>)
 8003116:	60fb      	str	r3, [r7, #12]
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8003118:	68fb      	ldr	r3, [r7, #12]
 800311a:	685b      	ldr	r3, [r3, #4]
 800311c:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8003120:	68fb      	ldr	r3, [r7, #12]
 8003122:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8003124:	68fb      	ldr	r3, [r7, #12]
 8003126:	685a      	ldr	r2, [r3, #4]
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	685b      	ldr	r3, [r3, #4]
 800312c:	431a      	orrs	r2, r3
 800312e:	68fb      	ldr	r3, [r7, #12]
 8003130:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	681b      	ldr	r3, [r3, #0]
 8003136:	685a      	ldr	r2, [r3, #4]
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003140:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	681b      	ldr	r3, [r3, #0]
 8003146:	6859      	ldr	r1, [r3, #4]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	691b      	ldr	r3, [r3, #16]
 800314c:	021a      	lsls	r2, r3, #8
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	430a      	orrs	r2, r1
 8003154:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	685a      	ldr	r2, [r3, #4]
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8003164:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	6859      	ldr	r1, [r3, #4]
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	689a      	ldr	r2, [r3, #8]
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	681b      	ldr	r3, [r3, #0]
 8003174:	430a      	orrs	r2, r1
 8003176:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	689a      	ldr	r2, [r3, #8]
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003186:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	6899      	ldr	r1, [r3, #8]
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	68da      	ldr	r2, [r3, #12]
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	430a      	orrs	r2, r1
 8003198:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800319e:	4a58      	ldr	r2, [pc, #352]	; (8003300 <ADC_Init+0x1f4>)
 80031a0:	4293      	cmp	r3, r2
 80031a2:	d022      	beq.n	80031ea <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	689a      	ldr	r2, [r3, #8]
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80031b2:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	6899      	ldr	r1, [r3, #8]
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	430a      	orrs	r2, r1
 80031c4:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	689a      	ldr	r2, [r3, #8]
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80031d4:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	6899      	ldr	r1, [r3, #8]
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	430a      	orrs	r2, r1
 80031e6:	609a      	str	r2, [r3, #8]
 80031e8:	e00f      	b.n	800320a <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80031ea:	687b      	ldr	r3, [r7, #4]
 80031ec:	681b      	ldr	r3, [r3, #0]
 80031ee:	689a      	ldr	r2, [r3, #8]
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80031f8:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	689a      	ldr	r2, [r3, #8]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8003208:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	689a      	ldr	r2, [r3, #8]
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	f022 0202 	bic.w	r2, r2, #2
 8003218:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	681b      	ldr	r3, [r3, #0]
 800321e:	6899      	ldr	r1, [r3, #8]
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	7e1b      	ldrb	r3, [r3, #24]
 8003224:	005a      	lsls	r2, r3, #1
 8003226:	687b      	ldr	r3, [r7, #4]
 8003228:	681b      	ldr	r3, [r3, #0]
 800322a:	430a      	orrs	r2, r1
 800322c:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003234:	2b00      	cmp	r3, #0
 8003236:	d01b      	beq.n	8003270 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	685a      	ldr	r2, [r3, #4]
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003246:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	685a      	ldr	r2, [r3, #4]
 800324e:	687b      	ldr	r3, [r7, #4]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8003256:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	6859      	ldr	r1, [r3, #4]
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003262:	3b01      	subs	r3, #1
 8003264:	035a      	lsls	r2, r3, #13
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	430a      	orrs	r2, r1
 800326c:	605a      	str	r2, [r3, #4]
 800326e:	e007      	b.n	8003280 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	685a      	ldr	r2, [r3, #4]
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800327e:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800328e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	69db      	ldr	r3, [r3, #28]
 800329a:	3b01      	subs	r3, #1
 800329c:	051a      	lsls	r2, r3, #20
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	681b      	ldr	r3, [r3, #0]
 80032a2:	430a      	orrs	r2, r1
 80032a4:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	689a      	ldr	r2, [r3, #8]
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80032b4:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	681b      	ldr	r3, [r3, #0]
 80032ba:	6899      	ldr	r1, [r3, #8]
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80032c2:	025a      	lsls	r2, r3, #9
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	681b      	ldr	r3, [r3, #0]
 80032c8:	430a      	orrs	r2, r1
 80032ca:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	689a      	ldr	r2, [r3, #8]
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80032da:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	6899      	ldr	r1, [r3, #8]
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	695b      	ldr	r3, [r3, #20]
 80032e6:	029a      	lsls	r2, r3, #10
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	430a      	orrs	r2, r1
 80032ee:	609a      	str	r2, [r3, #8]
}
 80032f0:	bf00      	nop
 80032f2:	3714      	adds	r7, #20
 80032f4:	46bd      	mov	sp, r7
 80032f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032fa:	4770      	bx	lr
 80032fc:	40012300 	.word	0x40012300
 8003300:	0f000001 	.word	0x0f000001

08003304 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003304:	b480      	push	{r7}
 8003306:	b085      	sub	sp, #20
 8003308:	af00      	add	r7, sp, #0
 800330a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	f003 0307 	and.w	r3, r3, #7
 8003312:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003314:	4b0c      	ldr	r3, [pc, #48]	; (8003348 <__NVIC_SetPriorityGrouping+0x44>)
 8003316:	68db      	ldr	r3, [r3, #12]
 8003318:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800331a:	68ba      	ldr	r2, [r7, #8]
 800331c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003320:	4013      	ands	r3, r2
 8003322:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003324:	68fb      	ldr	r3, [r7, #12]
 8003326:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003328:	68bb      	ldr	r3, [r7, #8]
 800332a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800332c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003330:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003334:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003336:	4a04      	ldr	r2, [pc, #16]	; (8003348 <__NVIC_SetPriorityGrouping+0x44>)
 8003338:	68bb      	ldr	r3, [r7, #8]
 800333a:	60d3      	str	r3, [r2, #12]
}
 800333c:	bf00      	nop
 800333e:	3714      	adds	r7, #20
 8003340:	46bd      	mov	sp, r7
 8003342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003346:	4770      	bx	lr
 8003348:	e000ed00 	.word	0xe000ed00

0800334c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800334c:	b480      	push	{r7}
 800334e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003350:	4b04      	ldr	r3, [pc, #16]	; (8003364 <__NVIC_GetPriorityGrouping+0x18>)
 8003352:	68db      	ldr	r3, [r3, #12]
 8003354:	0a1b      	lsrs	r3, r3, #8
 8003356:	f003 0307 	and.w	r3, r3, #7
}
 800335a:	4618      	mov	r0, r3
 800335c:	46bd      	mov	sp, r7
 800335e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003362:	4770      	bx	lr
 8003364:	e000ed00 	.word	0xe000ed00

08003368 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003368:	b480      	push	{r7}
 800336a:	b083      	sub	sp, #12
 800336c:	af00      	add	r7, sp, #0
 800336e:	4603      	mov	r3, r0
 8003370:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003372:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003376:	2b00      	cmp	r3, #0
 8003378:	db0b      	blt.n	8003392 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800337a:	79fb      	ldrb	r3, [r7, #7]
 800337c:	f003 021f 	and.w	r2, r3, #31
 8003380:	4907      	ldr	r1, [pc, #28]	; (80033a0 <__NVIC_EnableIRQ+0x38>)
 8003382:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003386:	095b      	lsrs	r3, r3, #5
 8003388:	2001      	movs	r0, #1
 800338a:	fa00 f202 	lsl.w	r2, r0, r2
 800338e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8003392:	bf00      	nop
 8003394:	370c      	adds	r7, #12
 8003396:	46bd      	mov	sp, r7
 8003398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800339c:	4770      	bx	lr
 800339e:	bf00      	nop
 80033a0:	e000e100 	.word	0xe000e100

080033a4 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80033a4:	b480      	push	{r7}
 80033a6:	b083      	sub	sp, #12
 80033a8:	af00      	add	r7, sp, #0
 80033aa:	4603      	mov	r3, r0
 80033ac:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80033ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033b2:	2b00      	cmp	r3, #0
 80033b4:	db12      	blt.n	80033dc <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80033b6:	79fb      	ldrb	r3, [r7, #7]
 80033b8:	f003 021f 	and.w	r2, r3, #31
 80033bc:	490a      	ldr	r1, [pc, #40]	; (80033e8 <__NVIC_DisableIRQ+0x44>)
 80033be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033c2:	095b      	lsrs	r3, r3, #5
 80033c4:	2001      	movs	r0, #1
 80033c6:	fa00 f202 	lsl.w	r2, r0, r2
 80033ca:	3320      	adds	r3, #32
 80033cc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80033d0:	f3bf 8f4f 	dsb	sy
}
 80033d4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80033d6:	f3bf 8f6f 	isb	sy
}
 80033da:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 80033dc:	bf00      	nop
 80033de:	370c      	adds	r7, #12
 80033e0:	46bd      	mov	sp, r7
 80033e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033e6:	4770      	bx	lr
 80033e8:	e000e100 	.word	0xe000e100

080033ec <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80033ec:	b480      	push	{r7}
 80033ee:	b083      	sub	sp, #12
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	4603      	mov	r3, r0
 80033f4:	6039      	str	r1, [r7, #0]
 80033f6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80033f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	db0a      	blt.n	8003416 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003400:	683b      	ldr	r3, [r7, #0]
 8003402:	b2da      	uxtb	r2, r3
 8003404:	490c      	ldr	r1, [pc, #48]	; (8003438 <__NVIC_SetPriority+0x4c>)
 8003406:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800340a:	0112      	lsls	r2, r2, #4
 800340c:	b2d2      	uxtb	r2, r2
 800340e:	440b      	add	r3, r1
 8003410:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8003414:	e00a      	b.n	800342c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003416:	683b      	ldr	r3, [r7, #0]
 8003418:	b2da      	uxtb	r2, r3
 800341a:	4908      	ldr	r1, [pc, #32]	; (800343c <__NVIC_SetPriority+0x50>)
 800341c:	79fb      	ldrb	r3, [r7, #7]
 800341e:	f003 030f 	and.w	r3, r3, #15
 8003422:	3b04      	subs	r3, #4
 8003424:	0112      	lsls	r2, r2, #4
 8003426:	b2d2      	uxtb	r2, r2
 8003428:	440b      	add	r3, r1
 800342a:	761a      	strb	r2, [r3, #24]
}
 800342c:	bf00      	nop
 800342e:	370c      	adds	r7, #12
 8003430:	46bd      	mov	sp, r7
 8003432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003436:	4770      	bx	lr
 8003438:	e000e100 	.word	0xe000e100
 800343c:	e000ed00 	.word	0xe000ed00

08003440 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003440:	b480      	push	{r7}
 8003442:	b089      	sub	sp, #36	; 0x24
 8003444:	af00      	add	r7, sp, #0
 8003446:	60f8      	str	r0, [r7, #12]
 8003448:	60b9      	str	r1, [r7, #8]
 800344a:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 800344c:	68fb      	ldr	r3, [r7, #12]
 800344e:	f003 0307 	and.w	r3, r3, #7
 8003452:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003454:	69fb      	ldr	r3, [r7, #28]
 8003456:	f1c3 0307 	rsb	r3, r3, #7
 800345a:	2b04      	cmp	r3, #4
 800345c:	bf28      	it	cs
 800345e:	2304      	movcs	r3, #4
 8003460:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003462:	69fb      	ldr	r3, [r7, #28]
 8003464:	3304      	adds	r3, #4
 8003466:	2b06      	cmp	r3, #6
 8003468:	d902      	bls.n	8003470 <NVIC_EncodePriority+0x30>
 800346a:	69fb      	ldr	r3, [r7, #28]
 800346c:	3b03      	subs	r3, #3
 800346e:	e000      	b.n	8003472 <NVIC_EncodePriority+0x32>
 8003470:	2300      	movs	r3, #0
 8003472:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003474:	f04f 32ff 	mov.w	r2, #4294967295
 8003478:	69bb      	ldr	r3, [r7, #24]
 800347a:	fa02 f303 	lsl.w	r3, r2, r3
 800347e:	43da      	mvns	r2, r3
 8003480:	68bb      	ldr	r3, [r7, #8]
 8003482:	401a      	ands	r2, r3
 8003484:	697b      	ldr	r3, [r7, #20]
 8003486:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003488:	f04f 31ff 	mov.w	r1, #4294967295
 800348c:	697b      	ldr	r3, [r7, #20]
 800348e:	fa01 f303 	lsl.w	r3, r1, r3
 8003492:	43d9      	mvns	r1, r3
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003498:	4313      	orrs	r3, r2
         );
}
 800349a:	4618      	mov	r0, r3
 800349c:	3724      	adds	r7, #36	; 0x24
 800349e:	46bd      	mov	sp, r7
 80034a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034a4:	4770      	bx	lr

080034a6 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80034a6:	b580      	push	{r7, lr}
 80034a8:	b082      	sub	sp, #8
 80034aa:	af00      	add	r7, sp, #0
 80034ac:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80034ae:	6878      	ldr	r0, [r7, #4]
 80034b0:	f7ff ff28 	bl	8003304 <__NVIC_SetPriorityGrouping>
}
 80034b4:	bf00      	nop
 80034b6:	3708      	adds	r7, #8
 80034b8:	46bd      	mov	sp, r7
 80034ba:	bd80      	pop	{r7, pc}

080034bc <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80034bc:	b580      	push	{r7, lr}
 80034be:	b086      	sub	sp, #24
 80034c0:	af00      	add	r7, sp, #0
 80034c2:	4603      	mov	r3, r0
 80034c4:	60b9      	str	r1, [r7, #8]
 80034c6:	607a      	str	r2, [r7, #4]
 80034c8:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80034ca:	2300      	movs	r3, #0
 80034cc:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80034ce:	f7ff ff3d 	bl	800334c <__NVIC_GetPriorityGrouping>
 80034d2:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80034d4:	687a      	ldr	r2, [r7, #4]
 80034d6:	68b9      	ldr	r1, [r7, #8]
 80034d8:	6978      	ldr	r0, [r7, #20]
 80034da:	f7ff ffb1 	bl	8003440 <NVIC_EncodePriority>
 80034de:	4602      	mov	r2, r0
 80034e0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80034e4:	4611      	mov	r1, r2
 80034e6:	4618      	mov	r0, r3
 80034e8:	f7ff ff80 	bl	80033ec <__NVIC_SetPriority>
}
 80034ec:	bf00      	nop
 80034ee:	3718      	adds	r7, #24
 80034f0:	46bd      	mov	sp, r7
 80034f2:	bd80      	pop	{r7, pc}

080034f4 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b082      	sub	sp, #8
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	4603      	mov	r3, r0
 80034fc:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80034fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003502:	4618      	mov	r0, r3
 8003504:	f7ff ff30 	bl	8003368 <__NVIC_EnableIRQ>
}
 8003508:	bf00      	nop
 800350a:	3708      	adds	r7, #8
 800350c:	46bd      	mov	sp, r7
 800350e:	bd80      	pop	{r7, pc}

08003510 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8003510:	b580      	push	{r7, lr}
 8003512:	b082      	sub	sp, #8
 8003514:	af00      	add	r7, sp, #0
 8003516:	4603      	mov	r3, r0
 8003518:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 800351a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800351e:	4618      	mov	r0, r3
 8003520:	f7ff ff40 	bl	80033a4 <__NVIC_DisableIRQ>
}
 8003524:	bf00      	nop
 8003526:	3708      	adds	r7, #8
 8003528:	46bd      	mov	sp, r7
 800352a:	bd80      	pop	{r7, pc}

0800352c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800352c:	b580      	push	{r7, lr}
 800352e:	b082      	sub	sp, #8
 8003530:	af00      	add	r7, sp, #0
 8003532:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	2b00      	cmp	r3, #0
 8003538:	d101      	bne.n	800353e <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 800353a:	2301      	movs	r3, #1
 800353c:	e00e      	b.n	800355c <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	795b      	ldrb	r3, [r3, #5]
 8003542:	b2db      	uxtb	r3, r3
 8003544:	2b00      	cmp	r3, #0
 8003546:	d105      	bne.n	8003554 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	2200      	movs	r2, #0
 800354c:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800354e:	6878      	ldr	r0, [r7, #4]
 8003550:	f7fe fd56 	bl	8002000 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	2201      	movs	r2, #1
 8003558:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 800355a:	2300      	movs	r3, #0
}
 800355c:	4618      	mov	r0, r3
 800355e:	3708      	adds	r7, #8
 8003560:	46bd      	mov	sp, r7
 8003562:	bd80      	pop	{r7, pc}

08003564 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003564:	b580      	push	{r7, lr}
 8003566:	b082      	sub	sp, #8
 8003568:	af00      	add	r7, sp, #0
 800356a:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	2b00      	cmp	r3, #0
 8003570:	d101      	bne.n	8003576 <HAL_DMA2D_Init+0x12>
  {
     return HAL_ERROR;
 8003572:	2301      	movs	r3, #1
 8003574:	e03b      	b.n	80035ee <HAL_DMA2D_Init+0x8a>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800357c:	b2db      	uxtb	r3, r3
 800357e:	2b00      	cmp	r3, #0
 8003580:	d106      	bne.n	8003590 <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	2200      	movs	r2, #0
 8003586:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800358a:	6878      	ldr	r0, [r7, #4]
 800358c:	f7fe fd5a 	bl	8002044 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	2202      	movs	r2, #2
 8003594:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	685a      	ldr	r2, [r3, #4]
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	681b      	ldr	r3, [r3, #0]
 80035aa:	430a      	orrs	r2, r1
 80035ac:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	681b      	ldr	r3, [r3, #0]
 80035b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80035b4:	f023 0107 	bic.w	r1, r3, #7
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	689a      	ldr	r2, [r3, #8]
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	681b      	ldr	r3, [r3, #0]
 80035c0:	430a      	orrs	r2, r1
 80035c2:	635a      	str	r2, [r3, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035ca:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80035ce:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80035d2:	687a      	ldr	r2, [r7, #4]
 80035d4:	68d1      	ldr	r1, [r2, #12]
 80035d6:	687a      	ldr	r2, [r7, #4]
 80035d8:	6812      	ldr	r2, [r2, #0]
 80035da:	430b      	orrs	r3, r1
 80035dc:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	2200      	movs	r2, #0
 80035e2:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	2201      	movs	r2, #1
 80035e8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  return HAL_OK;
 80035ec:	2300      	movs	r3, #0
}
 80035ee:	4618      	mov	r0, r3
 80035f0:	3708      	adds	r7, #8
 80035f2:	46bd      	mov	sp, r7
 80035f4:	bd80      	pop	{r7, pc}
	...

080035f8 <HAL_DMA2D_DeInit>:
  *                 the configuration information for the DMA2D.
  * @retval None
  */

HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
{
 80035f8:	b580      	push	{r7, lr}
 80035fa:	b082      	sub	sp, #8
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	6078      	str	r0, [r7, #4]

  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	2b00      	cmp	r3, #0
 8003604:	d101      	bne.n	800360a <HAL_DMA2D_DeInit+0x12>
  {
     return HAL_ERROR;
 8003606:	2301      	movs	r3, #1
 8003608:	e05f      	b.n	80036ca <HAL_DMA2D_DeInit+0xd2>
  }

  /* Before aborting any DMA2D transfer or CLUT loading, check
     first whether or not DMA2D clock is enabled */
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 800360a:	4b32      	ldr	r3, [pc, #200]	; (80036d4 <HAL_DMA2D_DeInit+0xdc>)
 800360c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800360e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003612:	2b00      	cmp	r3, #0
 8003614:	d02e      	beq.n	8003674 <HAL_DMA2D_DeInit+0x7c>
  {
    /* Abort DMA2D transfer if any */
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	f003 0301 	and.w	r3, r3, #1
 8003620:	2b01      	cmp	r3, #1
 8003622:	d107      	bne.n	8003634 <HAL_DMA2D_DeInit+0x3c>
    {
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8003624:	6878      	ldr	r0, [r7, #4]
 8003626:	f000 f8c1 	bl	80037ac <HAL_DMA2D_Abort>
 800362a:	4603      	mov	r3, r0
 800362c:	2b00      	cmp	r3, #0
 800362e:	d021      	beq.n	8003674 <HAL_DMA2D_DeInit+0x7c>
      {
        /* Issue when aborting DMA2D transfer */
        return HAL_ERROR;
 8003630:	2301      	movs	r3, #1
 8003632:	e04a      	b.n	80036ca <HAL_DMA2D_DeInit+0xd2>
      }
    }
    else
    {
      /* Abort background CLUT loading if any */
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800363a:	f003 0320 	and.w	r3, r3, #32
 800363e:	2b20      	cmp	r3, #32
 8003640:	d108      	bne.n	8003654 <HAL_DMA2D_DeInit+0x5c>
      {
        if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 8003642:	2100      	movs	r1, #0
 8003644:	6878      	ldr	r0, [r7, #4]
 8003646:	f000 f8f7 	bl	8003838 <HAL_DMA2D_CLUTLoading_Abort>
 800364a:	4603      	mov	r3, r0
 800364c:	2b00      	cmp	r3, #0
 800364e:	d011      	beq.n	8003674 <HAL_DMA2D_DeInit+0x7c>
        {
          /* Issue when aborting background CLUT loading */
          return HAL_ERROR;
 8003650:	2301      	movs	r3, #1
 8003652:	e03a      	b.n	80036ca <HAL_DMA2D_DeInit+0xd2>
        }
      }
      else
      {
        /* Abort foreground CLUT loading if any */
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	681b      	ldr	r3, [r3, #0]
 8003658:	69db      	ldr	r3, [r3, #28]
 800365a:	f003 0320 	and.w	r3, r3, #32
 800365e:	2b20      	cmp	r3, #32
 8003660:	d108      	bne.n	8003674 <HAL_DMA2D_DeInit+0x7c>
        {
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8003662:	2101      	movs	r1, #1
 8003664:	6878      	ldr	r0, [r7, #4]
 8003666:	f000 f8e7 	bl	8003838 <HAL_DMA2D_CLUTLoading_Abort>
 800366a:	4603      	mov	r3, r0
 800366c:	2b00      	cmp	r3, #0
 800366e:	d001      	beq.n	8003674 <HAL_DMA2D_DeInit+0x7c>
          {
            /* Issue when aborting foreground CLUT loading */
            return HAL_ERROR;
 8003670:	2301      	movs	r3, #1
 8003672:	e02a      	b.n	80036ca <HAL_DMA2D_DeInit+0xd2>
      }
    }
  }

  /* Reset DMA2D control registers*/
  hdma2d->Instance->CR       =    0U;
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	2200      	movs	r2, #0
 800367a:	601a      	str	r2, [r3, #0]
  hdma2d->Instance->IFCR     = 0x3FU;
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	223f      	movs	r2, #63	; 0x3f
 8003682:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	2200      	movs	r2, #0
 800368a:	611a      	str	r2, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	681b      	ldr	r3, [r3, #0]
 8003690:	2200      	movs	r2, #0
 8003692:	619a      	str	r2, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	681b      	ldr	r3, [r3, #0]
 8003698:	2200      	movs	r2, #0
 800369a:	61da      	str	r2, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	2200      	movs	r2, #0
 80036a2:	625a      	str	r2, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 80036a4:	687b      	ldr	r3, [r7, #4]
 80036a6:	681b      	ldr	r3, [r3, #0]
 80036a8:	2200      	movs	r2, #0
 80036aa:	635a      	str	r2, [r3, #52]	; 0x34
    /* DeInit the low level hardware */
    hdma2d->MspDeInitCallback(hdma2d);

#else
  /* Carry on with de-initialization of low level hardware */
  HAL_DMA2D_MspDeInit(hdma2d);
 80036ac:	6878      	ldr	r0, [r7, #4]
 80036ae:	f7fe fcf1 	bl	8002094 <HAL_DMA2D_MspDeInit>
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	2200      	movs	r2, #0
 80036b6:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	2200      	movs	r2, #0
 80036bc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Release Lock */
  __HAL_UNLOCK(hdma2d);
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	2200      	movs	r2, #0
 80036c4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 80036c8:	2300      	movs	r3, #0
}
 80036ca:	4618      	mov	r0, r3
 80036cc:	3708      	adds	r7, #8
 80036ce:	46bd      	mov	sp, r7
 80036d0:	bd80      	pop	{r7, pc}
 80036d2:	bf00      	nop
 80036d4:	40023800 	.word	0x40023800

080036d8 <HAL_DMA2D_Start_IT>:
  * @param  Width      The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height     The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 80036d8:	b580      	push	{r7, lr}
 80036da:	b086      	sub	sp, #24
 80036dc:	af02      	add	r7, sp, #8
 80036de:	60f8      	str	r0, [r7, #12]
 80036e0:	60b9      	str	r1, [r7, #8]
 80036e2:	607a      	str	r2, [r7, #4]
 80036e4:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80036ec:	2b01      	cmp	r3, #1
 80036ee:	d101      	bne.n	80036f4 <HAL_DMA2D_Start_IT+0x1c>
 80036f0:	2302      	movs	r3, #2
 80036f2:	e020      	b.n	8003736 <HAL_DMA2D_Start_IT+0x5e>
 80036f4:	68fb      	ldr	r3, [r7, #12]
 80036f6:	2201      	movs	r2, #1
 80036f8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80036fc:	68fb      	ldr	r3, [r7, #12]
 80036fe:	2202      	movs	r2, #2
 8003700:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8003704:	69bb      	ldr	r3, [r7, #24]
 8003706:	9300      	str	r3, [sp, #0]
 8003708:	683b      	ldr	r3, [r7, #0]
 800370a:	687a      	ldr	r2, [r7, #4]
 800370c:	68b9      	ldr	r1, [r7, #8]
 800370e:	68f8      	ldr	r0, [r7, #12]
 8003710:	f000 fa84 	bl	8003c1c <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	681a      	ldr	r2, [r3, #0]
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8003722:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 8003724:	68fb      	ldr	r3, [r7, #12]
 8003726:	681b      	ldr	r3, [r3, #0]
 8003728:	681a      	ldr	r2, [r3, #0]
 800372a:	68fb      	ldr	r3, [r7, #12]
 800372c:	681b      	ldr	r3, [r3, #0]
 800372e:	f042 0201 	orr.w	r2, r2, #1
 8003732:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 8003734:	2300      	movs	r3, #0
}
 8003736:	4618      	mov	r0, r3
 8003738:	3710      	adds	r7, #16
 800373a:	46bd      	mov	sp, r7
 800373c:	bd80      	pop	{r7, pc}

0800373e <HAL_DMA2D_BlendingStart_IT>:
  * @param  Width       The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height      The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32_t  SrcAddress2, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 800373e:	b580      	push	{r7, lr}
 8003740:	b086      	sub	sp, #24
 8003742:	af02      	add	r7, sp, #8
 8003744:	60f8      	str	r0, [r7, #12]
 8003746:	60b9      	str	r1, [r7, #8]
 8003748:	607a      	str	r2, [r7, #4]
 800374a:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800374c:	68fb      	ldr	r3, [r7, #12]
 800374e:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003752:	2b01      	cmp	r3, #1
 8003754:	d101      	bne.n	800375a <HAL_DMA2D_BlendingStart_IT+0x1c>
 8003756:	2302      	movs	r3, #2
 8003758:	e024      	b.n	80037a4 <HAL_DMA2D_BlendingStart_IT+0x66>
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	2201      	movs	r2, #1
 800375e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	2202      	movs	r2, #2
 8003766:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure DMA2D Stream source2 address */
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	687a      	ldr	r2, [r7, #4]
 8003770:	615a      	str	r2, [r3, #20]

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 8003772:	69fb      	ldr	r3, [r7, #28]
 8003774:	9300      	str	r3, [sp, #0]
 8003776:	69bb      	ldr	r3, [r7, #24]
 8003778:	683a      	ldr	r2, [r7, #0]
 800377a:	68b9      	ldr	r1, [r7, #8]
 800377c:	68f8      	ldr	r0, [r7, #12]
 800377e:	f000 fa4d 	bl	8003c1c <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	681a      	ldr	r2, [r3, #0]
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8003790:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	681a      	ldr	r2, [r3, #0]
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	f042 0201 	orr.w	r2, r2, #1
 80037a0:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 80037a2:	2300      	movs	r3, #0
}
 80037a4:	4618      	mov	r0, r3
 80037a6:	3710      	adds	r7, #16
 80037a8:	46bd      	mov	sp, r7
 80037aa:	bd80      	pop	{r7, pc}

080037ac <HAL_DMA2D_Abort>:
  * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
  *                  the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
{
 80037ac:	b580      	push	{r7, lr}
 80037ae:	b084      	sub	sp, #16
 80037b0:	af00      	add	r7, sp, #0
 80037b2:	6078      	str	r0, [r7, #4]

  /* Abort the DMA2D transfer */
  /* START bit is reset to make sure not to set it again, in the event the HW clears it
     between the register read and the register write by the CPU (writing 0 has no
     effect on START bitvalue) */
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	681b      	ldr	r3, [r3, #0]
 80037ba:	f023 0205 	bic.w	r2, r3, #5
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	f042 0204 	orr.w	r2, r2, #4
 80037c6:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80037c8:	f7ff f9a2 	bl	8002b10 <HAL_GetTick>
 80037cc:	60f8      	str	r0, [r7, #12]

  /* Check if the DMA2D is effectively disabled */
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 80037ce:	e017      	b.n	8003800 <HAL_DMA2D_Abort+0x54>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 80037d0:	f7ff f99e 	bl	8002b10 <HAL_GetTick>
 80037d4:	4602      	mov	r2, r0
 80037d6:	68fb      	ldr	r3, [r7, #12]
 80037d8:	1ad3      	subs	r3, r2, r3
 80037da:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80037de:	d90f      	bls.n	8003800 <HAL_DMA2D_Abort+0x54>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80037e4:	f043 0220 	orr.w	r2, r3, #32
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	2203      	movs	r2, #3
 80037f0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	2200      	movs	r2, #0
 80037f8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 80037fc:	2303      	movs	r3, #3
 80037fe:	e017      	b.n	8003830 <HAL_DMA2D_Abort+0x84>
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	681b      	ldr	r3, [r3, #0]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	f003 0301 	and.w	r3, r3, #1
 800380a:	2b00      	cmp	r3, #0
 800380c:	d1e0      	bne.n	80037d0 <HAL_DMA2D_Abort+0x24>
    }
  }

  /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	681b      	ldr	r3, [r3, #0]
 8003812:	681a      	ldr	r2, [r3, #0]
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 800381c:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	2201      	movs	r2, #1
 8003822:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	2200      	movs	r2, #0
 800382a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 800382e:	2300      	movs	r3, #0
}
 8003830:	4618      	mov	r0, r3
 8003832:	3710      	adds	r7, #16
 8003834:	46bd      	mov	sp, r7
 8003836:	bd80      	pop	{r7, pc}

08003838 <HAL_DMA2D_CLUTLoading_Abort>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003838:	b580      	push	{r7, lr}
 800383a:	b084      	sub	sp, #16
 800383c:	af00      	add	r7, sp, #0
 800383e:	6078      	str	r0, [r7, #4]
 8003840:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	681b      	ldr	r3, [r3, #0]
 8003846:	3324      	adds	r3, #36	; 0x24
 8003848:	60fb      	str	r3, [r7, #12]

  /* Abort the CLUT loading */
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	681a      	ldr	r2, [r3, #0]
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	f042 0204 	orr.w	r2, r2, #4
 8003858:	601a      	str	r2, [r3, #0]

  /* If foreground CLUT loading is considered, update local variables */
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 800385a:	683b      	ldr	r3, [r7, #0]
 800385c:	2b01      	cmp	r3, #1
 800385e:	d103      	bne.n	8003868 <HAL_DMA2D_CLUTLoading_Abort+0x30>
  {
    reg  = &(hdma2d->Instance->FGPFCCR);
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	331c      	adds	r3, #28
 8003866:	60fb      	str	r3, [r7, #12]
  }


  /* Get tick */
  tickstart = HAL_GetTick();
 8003868:	f7ff f952 	bl	8002b10 <HAL_GetTick>
 800386c:	60b8      	str	r0, [r7, #8]

  /* Check if the CLUT loading is aborted */
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 800386e:	e017      	b.n	80038a0 <HAL_DMA2D_CLUTLoading_Abort+0x68>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8003870:	f7ff f94e 	bl	8002b10 <HAL_GetTick>
 8003874:	4602      	mov	r2, r0
 8003876:	68bb      	ldr	r3, [r7, #8]
 8003878:	1ad3      	subs	r3, r2, r3
 800387a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800387e:	d90f      	bls.n	80038a0 <HAL_DMA2D_CLUTLoading_Abort+0x68>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003884:	f043 0220 	orr.w	r2, r3, #32
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 800388c:	687b      	ldr	r3, [r7, #4]
 800388e:	2203      	movs	r2, #3
 8003890:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	2200      	movs	r2, #0
 8003898:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 800389c:	2303      	movs	r3, #3
 800389e:	e016      	b.n	80038ce <HAL_DMA2D_CLUTLoading_Abort+0x96>
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	f003 0320 	and.w	r3, r3, #32
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d1e1      	bne.n	8003870 <HAL_DMA2D_CLUTLoading_Abort+0x38>
    }
  }

  /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	681a      	ldr	r2, [r3, #0]
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 80038ba:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	2201      	movs	r2, #1
 80038c0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	2200      	movs	r2, #0
 80038c8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 80038cc:	2300      	movs	r3, #0
}
 80038ce:	4618      	mov	r0, r3
 80038d0:	3710      	adds	r7, #16
 80038d2:	46bd      	mov	sp, r7
 80038d4:	bd80      	pop	{r7, pc}

080038d6 <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 80038d6:	b580      	push	{r7, lr}
 80038d8:	b084      	sub	sp, #16
 80038da:	af00      	add	r7, sp, #0
 80038dc:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	685b      	ldr	r3, [r3, #4]
 80038e4:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	681b      	ldr	r3, [r3, #0]
 80038ec:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	f003 0301 	and.w	r3, r3, #1
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	d026      	beq.n	8003946 <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80038f8:	68bb      	ldr	r3, [r7, #8]
 80038fa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038fe:	2b00      	cmp	r3, #0
 8003900:	d021      	beq.n	8003946 <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	681b      	ldr	r3, [r3, #0]
 8003906:	681a      	ldr	r2, [r3, #0]
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003910:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003916:	f043 0201 	orr.w	r2, r3, #1
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800391e:	687b      	ldr	r3, [r7, #4]
 8003920:	681b      	ldr	r3, [r3, #0]
 8003922:	2201      	movs	r2, #1
 8003924:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	2204      	movs	r2, #4
 800392a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	2200      	movs	r2, #0
 8003932:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	695b      	ldr	r3, [r3, #20]
 800393a:	2b00      	cmp	r3, #0
 800393c:	d003      	beq.n	8003946 <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	695b      	ldr	r3, [r3, #20]
 8003942:	6878      	ldr	r0, [r7, #4]
 8003944:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003946:	68fb      	ldr	r3, [r7, #12]
 8003948:	f003 0320 	and.w	r3, r3, #32
 800394c:	2b00      	cmp	r3, #0
 800394e:	d026      	beq.n	800399e <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003950:	68bb      	ldr	r3, [r7, #8]
 8003952:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003956:	2b00      	cmp	r3, #0
 8003958:	d021      	beq.n	800399e <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	681a      	ldr	r2, [r3, #0]
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	681b      	ldr	r3, [r3, #0]
 8003964:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003968:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	2220      	movs	r2, #32
 8003970:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003976:	f043 0202 	orr.w	r2, r3, #2
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	2204      	movs	r2, #4
 8003982:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	2200      	movs	r2, #0
 800398a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	695b      	ldr	r3, [r3, #20]
 8003992:	2b00      	cmp	r3, #0
 8003994:	d003      	beq.n	800399e <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	695b      	ldr	r3, [r3, #20]
 800399a:	6878      	ldr	r0, [r7, #4]
 800399c:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800399e:	68fb      	ldr	r3, [r7, #12]
 80039a0:	f003 0308 	and.w	r3, r3, #8
 80039a4:	2b00      	cmp	r3, #0
 80039a6:	d026      	beq.n	80039f6 <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80039a8:	68bb      	ldr	r3, [r7, #8]
 80039aa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	d021      	beq.n	80039f6 <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	681a      	ldr	r2, [r3, #0]
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80039c0:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	2208      	movs	r2, #8
 80039c8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80039ce:	f043 0204 	orr.w	r2, r3, #4
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	2204      	movs	r2, #4
 80039da:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	2200      	movs	r2, #0
 80039e2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	695b      	ldr	r3, [r3, #20]
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	d003      	beq.n	80039f6 <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	695b      	ldr	r3, [r3, #20]
 80039f2:	6878      	ldr	r0, [r7, #4]
 80039f4:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80039f6:	68fb      	ldr	r3, [r7, #12]
 80039f8:	f003 0304 	and.w	r3, r3, #4
 80039fc:	2b00      	cmp	r3, #0
 80039fe:	d013      	beq.n	8003a28 <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003a00:	68bb      	ldr	r3, [r7, #8]
 8003a02:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003a06:	2b00      	cmp	r3, #0
 8003a08:	d00e      	beq.n	8003a28 <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	681b      	ldr	r3, [r3, #0]
 8003a0e:	681a      	ldr	r2, [r3, #0]
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003a18:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	681b      	ldr	r3, [r3, #0]
 8003a1e:	2204      	movs	r2, #4
 8003a20:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003a22:	6878      	ldr	r0, [r7, #4]
 8003a24:	f000 f853 	bl	8003ace <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003a28:	68fb      	ldr	r3, [r7, #12]
 8003a2a:	f003 0302 	and.w	r3, r3, #2
 8003a2e:	2b00      	cmp	r3, #0
 8003a30:	d024      	beq.n	8003a7c <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003a32:	68bb      	ldr	r3, [r7, #8]
 8003a34:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d01f      	beq.n	8003a7c <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	681a      	ldr	r2, [r3, #0]
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	681b      	ldr	r3, [r3, #0]
 8003a46:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003a4a:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	2202      	movs	r2, #2
 8003a52:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003a5c:	687b      	ldr	r3, [r7, #4]
 8003a5e:	2201      	movs	r2, #1
 8003a60:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	2200      	movs	r2, #0
 8003a68:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	691b      	ldr	r3, [r3, #16]
 8003a70:	2b00      	cmp	r3, #0
 8003a72:	d003      	beq.n	8003a7c <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	691b      	ldr	r3, [r3, #16]
 8003a78:	6878      	ldr	r0, [r7, #4]
 8003a7a:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	f003 0310 	and.w	r3, r3, #16
 8003a82:	2b00      	cmp	r3, #0
 8003a84:	d01f      	beq.n	8003ac6 <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003a86:	68bb      	ldr	r3, [r7, #8]
 8003a88:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d01a      	beq.n	8003ac6 <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	681b      	ldr	r3, [r3, #0]
 8003a94:	681a      	ldr	r2, [r3, #0]
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003a9e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	2210      	movs	r2, #16
 8003aa6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	2201      	movs	r2, #1
 8003ab4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	2200      	movs	r2, #0
 8003abc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003ac0:	6878      	ldr	r0, [r7, #4]
 8003ac2:	f000 f80e 	bl	8003ae2 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8003ac6:	bf00      	nop
 8003ac8:	3710      	adds	r7, #16
 8003aca:	46bd      	mov	sp, r7
 8003acc:	bd80      	pop	{r7, pc}

08003ace <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8003ace:	b480      	push	{r7}
 8003ad0:	b083      	sub	sp, #12
 8003ad2:	af00      	add	r7, sp, #0
 8003ad4:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 8003ad6:	bf00      	nop
 8003ad8:	370c      	adds	r7, #12
 8003ada:	46bd      	mov	sp, r7
 8003adc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ae0:	4770      	bx	lr

08003ae2 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8003ae2:	b480      	push	{r7}
 8003ae4:	b083      	sub	sp, #12
 8003ae6:	af00      	add	r7, sp, #0
 8003ae8:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 8003aea:	bf00      	nop
 8003aec:	370c      	adds	r7, #12
 8003aee:	46bd      	mov	sp, r7
 8003af0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003af4:	4770      	bx	lr
	...

08003af8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003af8:	b480      	push	{r7}
 8003afa:	b087      	sub	sp, #28
 8003afc:	af00      	add	r7, sp, #0
 8003afe:	6078      	str	r0, [r7, #4]
 8003b00:	6039      	str	r1, [r7, #0]
  uint32_t regMask, regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if(hdma2d->Init.Mode != DMA2D_R2M)
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	685b      	ldr	r3, [r3, #4]
 8003b06:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003b10:	2b01      	cmp	r3, #1
 8003b12:	d101      	bne.n	8003b18 <HAL_DMA2D_ConfigLayer+0x20>
 8003b14:	2302      	movs	r3, #2
 8003b16:	e079      	b.n	8003c0c <HAL_DMA2D_ConfigLayer+0x114>
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	2201      	movs	r2, #1
 8003b1c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	2202      	movs	r2, #2
 8003b24:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 8003b28:	683b      	ldr	r3, [r7, #0]
 8003b2a:	011b      	lsls	r3, r3, #4
 8003b2c:	3318      	adds	r3, #24
 8003b2e:	687a      	ldr	r2, [r7, #4]
 8003b30:	4413      	add	r3, r2
 8003b32:	613b      	str	r3, [r7, #16]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003b34:	693b      	ldr	r3, [r7, #16]
 8003b36:	685a      	ldr	r2, [r3, #4]
 8003b38:	693b      	ldr	r3, [r7, #16]
 8003b3a:	689b      	ldr	r3, [r3, #8]
 8003b3c:	041b      	lsls	r3, r3, #16
 8003b3e:	4313      	orrs	r3, r2
 8003b40:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 8003b42:	4b35      	ldr	r3, [pc, #212]	; (8003c18 <HAL_DMA2D_ConfigLayer+0x120>)
 8003b44:	60fb      	str	r3, [r7, #12]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b46:	693b      	ldr	r3, [r7, #16]
 8003b48:	685b      	ldr	r3, [r3, #4]
 8003b4a:	2b0a      	cmp	r3, #10
 8003b4c:	d003      	beq.n	8003b56 <HAL_DMA2D_ConfigLayer+0x5e>
 8003b4e:	693b      	ldr	r3, [r7, #16]
 8003b50:	685b      	ldr	r3, [r3, #4]
 8003b52:	2b09      	cmp	r3, #9
 8003b54:	d107      	bne.n	8003b66 <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003b56:	693b      	ldr	r3, [r7, #16]
 8003b58:	68db      	ldr	r3, [r3, #12]
 8003b5a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003b5e:	697a      	ldr	r2, [r7, #20]
 8003b60:	4313      	orrs	r3, r2
 8003b62:	617b      	str	r3, [r7, #20]
 8003b64:	e005      	b.n	8003b72 <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003b66:	693b      	ldr	r3, [r7, #16]
 8003b68:	68db      	ldr	r3, [r3, #12]
 8003b6a:	061b      	lsls	r3, r3, #24
 8003b6c:	697a      	ldr	r2, [r7, #20]
 8003b6e:	4313      	orrs	r3, r2
 8003b70:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003b72:	683b      	ldr	r3, [r7, #0]
 8003b74:	2b00      	cmp	r3, #0
 8003b76:	d120      	bne.n	8003bba <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003b7e:	68fb      	ldr	r3, [r7, #12]
 8003b80:	43db      	mvns	r3, r3
 8003b82:	ea02 0103 	and.w	r1, r2, r3
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	697a      	ldr	r2, [r7, #20]
 8003b8c:	430a      	orrs	r2, r1
 8003b8e:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	681b      	ldr	r3, [r3, #0]
 8003b94:	693a      	ldr	r2, [r7, #16]
 8003b96:	6812      	ldr	r2, [r2, #0]
 8003b98:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003b9a:	693b      	ldr	r3, [r7, #16]
 8003b9c:	685b      	ldr	r3, [r3, #4]
 8003b9e:	2b0a      	cmp	r3, #10
 8003ba0:	d003      	beq.n	8003baa <HAL_DMA2D_ConfigLayer+0xb2>
 8003ba2:	693b      	ldr	r3, [r7, #16]
 8003ba4:	685b      	ldr	r3, [r3, #4]
 8003ba6:	2b09      	cmp	r3, #9
 8003ba8:	d127      	bne.n	8003bfa <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8003baa:	693b      	ldr	r3, [r7, #16]
 8003bac:	68da      	ldr	r2, [r3, #12]
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003bb6:	629a      	str	r2, [r3, #40]	; 0x28
 8003bb8:	e01f      	b.n	8003bfa <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


     /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	681b      	ldr	r3, [r3, #0]
 8003bbe:	69da      	ldr	r2, [r3, #28]
 8003bc0:	68fb      	ldr	r3, [r7, #12]
 8003bc2:	43db      	mvns	r3, r3
 8003bc4:	ea02 0103 	and.w	r1, r2, r3
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	697a      	ldr	r2, [r7, #20]
 8003bce:	430a      	orrs	r2, r1
 8003bd0:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	693a      	ldr	r2, [r7, #16]
 8003bd8:	6812      	ldr	r2, [r2, #0]
 8003bda:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003bdc:	693b      	ldr	r3, [r7, #16]
 8003bde:	685b      	ldr	r3, [r3, #4]
 8003be0:	2b0a      	cmp	r3, #10
 8003be2:	d003      	beq.n	8003bec <HAL_DMA2D_ConfigLayer+0xf4>
 8003be4:	693b      	ldr	r3, [r7, #16]
 8003be6:	685b      	ldr	r3, [r3, #4]
 8003be8:	2b09      	cmp	r3, #9
 8003bea:	d106      	bne.n	8003bfa <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8003bec:	693b      	ldr	r3, [r7, #16]
 8003bee:	68da      	ldr	r2, [r3, #12]
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003bf8:	621a      	str	r2, [r3, #32]
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	2201      	movs	r2, #1
 8003bfe:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	2200      	movs	r2, #0
 8003c06:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003c0a:	2300      	movs	r3, #0
}
 8003c0c:	4618      	mov	r0, r3
 8003c0e:	371c      	adds	r7, #28
 8003c10:	46bd      	mov	sp, r7
 8003c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c16:	4770      	bx	lr
 8003c18:	ff03000f 	.word	0xff03000f

08003c1c <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8003c1c:	b480      	push	{r7}
 8003c1e:	b08b      	sub	sp, #44	; 0x2c
 8003c20:	af00      	add	r7, sp, #0
 8003c22:	60f8      	str	r0, [r7, #12]
 8003c24:	60b9      	str	r1, [r7, #8]
 8003c26:	607a      	str	r2, [r7, #4]
 8003c28:	603b      	str	r3, [r7, #0]
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c30:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 8003c34:	683b      	ldr	r3, [r7, #0]
 8003c36:	041a      	lsls	r2, r3, #16
 8003c38:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003c3a:	431a      	orrs	r2, r3
 8003c3c:	68fb      	ldr	r3, [r7, #12]
 8003c3e:	681b      	ldr	r3, [r3, #0]
 8003c40:	430a      	orrs	r2, r1
 8003c42:	645a      	str	r2, [r3, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	687a      	ldr	r2, [r7, #4]
 8003c4a:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003c4c:	68fb      	ldr	r3, [r7, #12]
 8003c4e:	685b      	ldr	r3, [r3, #4]
 8003c50:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003c54:	d174      	bne.n	8003d40 <DMA2D_SetConfig+0x124>
  {
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8003c56:	68bb      	ldr	r3, [r7, #8]
 8003c58:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003c5c:	623b      	str	r3, [r7, #32]
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8003c5e:	68bb      	ldr	r3, [r7, #8]
 8003c60:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8003c64:	61fb      	str	r3, [r7, #28]
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8003c66:	68bb      	ldr	r3, [r7, #8]
 8003c68:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8003c6c:	61bb      	str	r3, [r7, #24]
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8003c6e:	68bb      	ldr	r3, [r7, #8]
 8003c70:	b2db      	uxtb	r3, r3
 8003c72:	617b      	str	r3, [r7, #20]

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8003c74:	68fb      	ldr	r3, [r7, #12]
 8003c76:	689b      	ldr	r3, [r3, #8]
 8003c78:	2b00      	cmp	r3, #0
 8003c7a:	d108      	bne.n	8003c8e <DMA2D_SetConfig+0x72>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
 8003c7c:	69ba      	ldr	r2, [r7, #24]
 8003c7e:	69fb      	ldr	r3, [r7, #28]
 8003c80:	431a      	orrs	r2, r3
 8003c82:	6a3b      	ldr	r3, [r7, #32]
 8003c84:	4313      	orrs	r3, r2
 8003c86:	697a      	ldr	r2, [r7, #20]
 8003c88:	4313      	orrs	r3, r2
 8003c8a:	627b      	str	r3, [r7, #36]	; 0x24
 8003c8c:	e053      	b.n	8003d36 <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8003c8e:	68fb      	ldr	r3, [r7, #12]
 8003c90:	689b      	ldr	r3, [r3, #8]
 8003c92:	2b01      	cmp	r3, #1
 8003c94:	d106      	bne.n	8003ca4 <DMA2D_SetConfig+0x88>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8003c96:	69ba      	ldr	r2, [r7, #24]
 8003c98:	69fb      	ldr	r3, [r7, #28]
 8003c9a:	4313      	orrs	r3, r2
 8003c9c:	697a      	ldr	r2, [r7, #20]
 8003c9e:	4313      	orrs	r3, r2
 8003ca0:	627b      	str	r3, [r7, #36]	; 0x24
 8003ca2:	e048      	b.n	8003d36 <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	689b      	ldr	r3, [r3, #8]
 8003ca8:	2b02      	cmp	r3, #2
 8003caa:	d111      	bne.n	8003cd0 <DMA2D_SetConfig+0xb4>
    {
      tmp2 = (tmp2 >> 19U);
 8003cac:	69fb      	ldr	r3, [r7, #28]
 8003cae:	0cdb      	lsrs	r3, r3, #19
 8003cb0:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 10U);
 8003cb2:	69bb      	ldr	r3, [r7, #24]
 8003cb4:	0a9b      	lsrs	r3, r3, #10
 8003cb6:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8003cb8:	697b      	ldr	r3, [r7, #20]
 8003cba:	08db      	lsrs	r3, r3, #3
 8003cbc:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8003cbe:	69bb      	ldr	r3, [r7, #24]
 8003cc0:	015a      	lsls	r2, r3, #5
 8003cc2:	69fb      	ldr	r3, [r7, #28]
 8003cc4:	02db      	lsls	r3, r3, #11
 8003cc6:	4313      	orrs	r3, r2
 8003cc8:	697a      	ldr	r2, [r7, #20]
 8003cca:	4313      	orrs	r3, r2
 8003ccc:	627b      	str	r3, [r7, #36]	; 0x24
 8003cce:	e032      	b.n	8003d36 <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	689b      	ldr	r3, [r3, #8]
 8003cd4:	2b03      	cmp	r3, #3
 8003cd6:	d117      	bne.n	8003d08 <DMA2D_SetConfig+0xec>
    {
      tmp1 = (tmp1 >> 31U);
 8003cd8:	6a3b      	ldr	r3, [r7, #32]
 8003cda:	0fdb      	lsrs	r3, r3, #31
 8003cdc:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 19U);
 8003cde:	69fb      	ldr	r3, [r7, #28]
 8003ce0:	0cdb      	lsrs	r3, r3, #19
 8003ce2:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 11U);
 8003ce4:	69bb      	ldr	r3, [r7, #24]
 8003ce6:	0adb      	lsrs	r3, r3, #11
 8003ce8:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8003cea:	697b      	ldr	r3, [r7, #20]
 8003cec:	08db      	lsrs	r3, r3, #3
 8003cee:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003cf0:	69bb      	ldr	r3, [r7, #24]
 8003cf2:	015a      	lsls	r2, r3, #5
 8003cf4:	69fb      	ldr	r3, [r7, #28]
 8003cf6:	029b      	lsls	r3, r3, #10
 8003cf8:	431a      	orrs	r2, r3
 8003cfa:	6a3b      	ldr	r3, [r7, #32]
 8003cfc:	03db      	lsls	r3, r3, #15
 8003cfe:	4313      	orrs	r3, r2
 8003d00:	697a      	ldr	r2, [r7, #20]
 8003d02:	4313      	orrs	r3, r2
 8003d04:	627b      	str	r3, [r7, #36]	; 0x24
 8003d06:	e016      	b.n	8003d36 <DMA2D_SetConfig+0x11a>
    }
    else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
    {
      tmp1 = (tmp1 >> 28U);
 8003d08:	6a3b      	ldr	r3, [r7, #32]
 8003d0a:	0f1b      	lsrs	r3, r3, #28
 8003d0c:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 20U);
 8003d0e:	69fb      	ldr	r3, [r7, #28]
 8003d10:	0d1b      	lsrs	r3, r3, #20
 8003d12:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 12U);
 8003d14:	69bb      	ldr	r3, [r7, #24]
 8003d16:	0b1b      	lsrs	r3, r3, #12
 8003d18:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 4U );
 8003d1a:	697b      	ldr	r3, [r7, #20]
 8003d1c:	091b      	lsrs	r3, r3, #4
 8003d1e:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8003d20:	69bb      	ldr	r3, [r7, #24]
 8003d22:	011a      	lsls	r2, r3, #4
 8003d24:	69fb      	ldr	r3, [r7, #28]
 8003d26:	021b      	lsls	r3, r3, #8
 8003d28:	431a      	orrs	r2, r3
 8003d2a:	6a3b      	ldr	r3, [r7, #32]
 8003d2c:	031b      	lsls	r3, r3, #12
 8003d2e:	4313      	orrs	r3, r2
 8003d30:	697a      	ldr	r2, [r7, #20]
 8003d32:	4313      	orrs	r3, r2
 8003d34:	627b      	str	r3, [r7, #36]	; 0x24
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003d3c:	639a      	str	r2, [r3, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8003d3e:	e003      	b.n	8003d48 <DMA2D_SetConfig+0x12c>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	68ba      	ldr	r2, [r7, #8]
 8003d46:	60da      	str	r2, [r3, #12]
}
 8003d48:	bf00      	nop
 8003d4a:	372c      	adds	r7, #44	; 0x2c
 8003d4c:	46bd      	mov	sp, r7
 8003d4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d52:	4770      	bx	lr

08003d54 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003d54:	b480      	push	{r7}
 8003d56:	b089      	sub	sp, #36	; 0x24
 8003d58:	af00      	add	r7, sp, #0
 8003d5a:	6078      	str	r0, [r7, #4]
 8003d5c:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003d5e:	2300      	movs	r3, #0
 8003d60:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003d62:	2300      	movs	r3, #0
 8003d64:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8003d66:	2300      	movs	r3, #0
 8003d68:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003d6a:	2300      	movs	r3, #0
 8003d6c:	61fb      	str	r3, [r7, #28]
 8003d6e:	e177      	b.n	8004060 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003d70:	2201      	movs	r2, #1
 8003d72:	69fb      	ldr	r3, [r7, #28]
 8003d74:	fa02 f303 	lsl.w	r3, r2, r3
 8003d78:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003d7a:	683b      	ldr	r3, [r7, #0]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	697a      	ldr	r2, [r7, #20]
 8003d80:	4013      	ands	r3, r2
 8003d82:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003d84:	693a      	ldr	r2, [r7, #16]
 8003d86:	697b      	ldr	r3, [r7, #20]
 8003d88:	429a      	cmp	r2, r3
 8003d8a:	f040 8166 	bne.w	800405a <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003d8e:	683b      	ldr	r3, [r7, #0]
 8003d90:	685b      	ldr	r3, [r3, #4]
 8003d92:	2b01      	cmp	r3, #1
 8003d94:	d00b      	beq.n	8003dae <HAL_GPIO_Init+0x5a>
 8003d96:	683b      	ldr	r3, [r7, #0]
 8003d98:	685b      	ldr	r3, [r3, #4]
 8003d9a:	2b02      	cmp	r3, #2
 8003d9c:	d007      	beq.n	8003dae <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003d9e:	683b      	ldr	r3, [r7, #0]
 8003da0:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003da2:	2b11      	cmp	r3, #17
 8003da4:	d003      	beq.n	8003dae <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003da6:	683b      	ldr	r3, [r7, #0]
 8003da8:	685b      	ldr	r3, [r3, #4]
 8003daa:	2b12      	cmp	r3, #18
 8003dac:	d130      	bne.n	8003e10 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	689b      	ldr	r3, [r3, #8]
 8003db2:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003db4:	69fb      	ldr	r3, [r7, #28]
 8003db6:	005b      	lsls	r3, r3, #1
 8003db8:	2203      	movs	r2, #3
 8003dba:	fa02 f303 	lsl.w	r3, r2, r3
 8003dbe:	43db      	mvns	r3, r3
 8003dc0:	69ba      	ldr	r2, [r7, #24]
 8003dc2:	4013      	ands	r3, r2
 8003dc4:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003dc6:	683b      	ldr	r3, [r7, #0]
 8003dc8:	68da      	ldr	r2, [r3, #12]
 8003dca:	69fb      	ldr	r3, [r7, #28]
 8003dcc:	005b      	lsls	r3, r3, #1
 8003dce:	fa02 f303 	lsl.w	r3, r2, r3
 8003dd2:	69ba      	ldr	r2, [r7, #24]
 8003dd4:	4313      	orrs	r3, r2
 8003dd6:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	69ba      	ldr	r2, [r7, #24]
 8003ddc:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	685b      	ldr	r3, [r3, #4]
 8003de2:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003de4:	2201      	movs	r2, #1
 8003de6:	69fb      	ldr	r3, [r7, #28]
 8003de8:	fa02 f303 	lsl.w	r3, r2, r3
 8003dec:	43db      	mvns	r3, r3
 8003dee:	69ba      	ldr	r2, [r7, #24]
 8003df0:	4013      	ands	r3, r2
 8003df2:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8003df4:	683b      	ldr	r3, [r7, #0]
 8003df6:	685b      	ldr	r3, [r3, #4]
 8003df8:	091b      	lsrs	r3, r3, #4
 8003dfa:	f003 0201 	and.w	r2, r3, #1
 8003dfe:	69fb      	ldr	r3, [r7, #28]
 8003e00:	fa02 f303 	lsl.w	r3, r2, r3
 8003e04:	69ba      	ldr	r2, [r7, #24]
 8003e06:	4313      	orrs	r3, r2
 8003e08:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	69ba      	ldr	r2, [r7, #24]
 8003e0e:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	68db      	ldr	r3, [r3, #12]
 8003e14:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003e16:	69fb      	ldr	r3, [r7, #28]
 8003e18:	005b      	lsls	r3, r3, #1
 8003e1a:	2203      	movs	r2, #3
 8003e1c:	fa02 f303 	lsl.w	r3, r2, r3
 8003e20:	43db      	mvns	r3, r3
 8003e22:	69ba      	ldr	r2, [r7, #24]
 8003e24:	4013      	ands	r3, r2
 8003e26:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003e28:	683b      	ldr	r3, [r7, #0]
 8003e2a:	689a      	ldr	r2, [r3, #8]
 8003e2c:	69fb      	ldr	r3, [r7, #28]
 8003e2e:	005b      	lsls	r3, r3, #1
 8003e30:	fa02 f303 	lsl.w	r3, r2, r3
 8003e34:	69ba      	ldr	r2, [r7, #24]
 8003e36:	4313      	orrs	r3, r2
 8003e38:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	69ba      	ldr	r2, [r7, #24]
 8003e3e:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003e40:	683b      	ldr	r3, [r7, #0]
 8003e42:	685b      	ldr	r3, [r3, #4]
 8003e44:	2b02      	cmp	r3, #2
 8003e46:	d003      	beq.n	8003e50 <HAL_GPIO_Init+0xfc>
 8003e48:	683b      	ldr	r3, [r7, #0]
 8003e4a:	685b      	ldr	r3, [r3, #4]
 8003e4c:	2b12      	cmp	r3, #18
 8003e4e:	d123      	bne.n	8003e98 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003e50:	69fb      	ldr	r3, [r7, #28]
 8003e52:	08da      	lsrs	r2, r3, #3
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	3208      	adds	r2, #8
 8003e58:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003e5c:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003e5e:	69fb      	ldr	r3, [r7, #28]
 8003e60:	f003 0307 	and.w	r3, r3, #7
 8003e64:	009b      	lsls	r3, r3, #2
 8003e66:	220f      	movs	r2, #15
 8003e68:	fa02 f303 	lsl.w	r3, r2, r3
 8003e6c:	43db      	mvns	r3, r3
 8003e6e:	69ba      	ldr	r2, [r7, #24]
 8003e70:	4013      	ands	r3, r2
 8003e72:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003e74:	683b      	ldr	r3, [r7, #0]
 8003e76:	691a      	ldr	r2, [r3, #16]
 8003e78:	69fb      	ldr	r3, [r7, #28]
 8003e7a:	f003 0307 	and.w	r3, r3, #7
 8003e7e:	009b      	lsls	r3, r3, #2
 8003e80:	fa02 f303 	lsl.w	r3, r2, r3
 8003e84:	69ba      	ldr	r2, [r7, #24]
 8003e86:	4313      	orrs	r3, r2
 8003e88:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8003e8a:	69fb      	ldr	r3, [r7, #28]
 8003e8c:	08da      	lsrs	r2, r3, #3
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	3208      	adds	r2, #8
 8003e92:	69b9      	ldr	r1, [r7, #24]
 8003e94:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003e9e:	69fb      	ldr	r3, [r7, #28]
 8003ea0:	005b      	lsls	r3, r3, #1
 8003ea2:	2203      	movs	r2, #3
 8003ea4:	fa02 f303 	lsl.w	r3, r2, r3
 8003ea8:	43db      	mvns	r3, r3
 8003eaa:	69ba      	ldr	r2, [r7, #24]
 8003eac:	4013      	ands	r3, r2
 8003eae:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003eb0:	683b      	ldr	r3, [r7, #0]
 8003eb2:	685b      	ldr	r3, [r3, #4]
 8003eb4:	f003 0203 	and.w	r2, r3, #3
 8003eb8:	69fb      	ldr	r3, [r7, #28]
 8003eba:	005b      	lsls	r3, r3, #1
 8003ebc:	fa02 f303 	lsl.w	r3, r2, r3
 8003ec0:	69ba      	ldr	r2, [r7, #24]
 8003ec2:	4313      	orrs	r3, r2
 8003ec4:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	69ba      	ldr	r2, [r7, #24]
 8003eca:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003ecc:	683b      	ldr	r3, [r7, #0]
 8003ece:	685b      	ldr	r3, [r3, #4]
 8003ed0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003ed4:	2b00      	cmp	r3, #0
 8003ed6:	f000 80c0 	beq.w	800405a <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003eda:	2300      	movs	r3, #0
 8003edc:	60fb      	str	r3, [r7, #12]
 8003ede:	4b66      	ldr	r3, [pc, #408]	; (8004078 <HAL_GPIO_Init+0x324>)
 8003ee0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003ee2:	4a65      	ldr	r2, [pc, #404]	; (8004078 <HAL_GPIO_Init+0x324>)
 8003ee4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003ee8:	6453      	str	r3, [r2, #68]	; 0x44
 8003eea:	4b63      	ldr	r3, [pc, #396]	; (8004078 <HAL_GPIO_Init+0x324>)
 8003eec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003eee:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003ef2:	60fb      	str	r3, [r7, #12]
 8003ef4:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8003ef6:	4a61      	ldr	r2, [pc, #388]	; (800407c <HAL_GPIO_Init+0x328>)
 8003ef8:	69fb      	ldr	r3, [r7, #28]
 8003efa:	089b      	lsrs	r3, r3, #2
 8003efc:	3302      	adds	r3, #2
 8003efe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003f02:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003f04:	69fb      	ldr	r3, [r7, #28]
 8003f06:	f003 0303 	and.w	r3, r3, #3
 8003f0a:	009b      	lsls	r3, r3, #2
 8003f0c:	220f      	movs	r2, #15
 8003f0e:	fa02 f303 	lsl.w	r3, r2, r3
 8003f12:	43db      	mvns	r3, r3
 8003f14:	69ba      	ldr	r2, [r7, #24]
 8003f16:	4013      	ands	r3, r2
 8003f18:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	4a58      	ldr	r2, [pc, #352]	; (8004080 <HAL_GPIO_Init+0x32c>)
 8003f1e:	4293      	cmp	r3, r2
 8003f20:	d037      	beq.n	8003f92 <HAL_GPIO_Init+0x23e>
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	4a57      	ldr	r2, [pc, #348]	; (8004084 <HAL_GPIO_Init+0x330>)
 8003f26:	4293      	cmp	r3, r2
 8003f28:	d031      	beq.n	8003f8e <HAL_GPIO_Init+0x23a>
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	4a56      	ldr	r2, [pc, #344]	; (8004088 <HAL_GPIO_Init+0x334>)
 8003f2e:	4293      	cmp	r3, r2
 8003f30:	d02b      	beq.n	8003f8a <HAL_GPIO_Init+0x236>
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	4a55      	ldr	r2, [pc, #340]	; (800408c <HAL_GPIO_Init+0x338>)
 8003f36:	4293      	cmp	r3, r2
 8003f38:	d025      	beq.n	8003f86 <HAL_GPIO_Init+0x232>
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	4a54      	ldr	r2, [pc, #336]	; (8004090 <HAL_GPIO_Init+0x33c>)
 8003f3e:	4293      	cmp	r3, r2
 8003f40:	d01f      	beq.n	8003f82 <HAL_GPIO_Init+0x22e>
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	4a53      	ldr	r2, [pc, #332]	; (8004094 <HAL_GPIO_Init+0x340>)
 8003f46:	4293      	cmp	r3, r2
 8003f48:	d019      	beq.n	8003f7e <HAL_GPIO_Init+0x22a>
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	4a52      	ldr	r2, [pc, #328]	; (8004098 <HAL_GPIO_Init+0x344>)
 8003f4e:	4293      	cmp	r3, r2
 8003f50:	d013      	beq.n	8003f7a <HAL_GPIO_Init+0x226>
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	4a51      	ldr	r2, [pc, #324]	; (800409c <HAL_GPIO_Init+0x348>)
 8003f56:	4293      	cmp	r3, r2
 8003f58:	d00d      	beq.n	8003f76 <HAL_GPIO_Init+0x222>
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	4a50      	ldr	r2, [pc, #320]	; (80040a0 <HAL_GPIO_Init+0x34c>)
 8003f5e:	4293      	cmp	r3, r2
 8003f60:	d007      	beq.n	8003f72 <HAL_GPIO_Init+0x21e>
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	4a4f      	ldr	r2, [pc, #316]	; (80040a4 <HAL_GPIO_Init+0x350>)
 8003f66:	4293      	cmp	r3, r2
 8003f68:	d101      	bne.n	8003f6e <HAL_GPIO_Init+0x21a>
 8003f6a:	2309      	movs	r3, #9
 8003f6c:	e012      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f6e:	230a      	movs	r3, #10
 8003f70:	e010      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f72:	2308      	movs	r3, #8
 8003f74:	e00e      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f76:	2307      	movs	r3, #7
 8003f78:	e00c      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f7a:	2306      	movs	r3, #6
 8003f7c:	e00a      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f7e:	2305      	movs	r3, #5
 8003f80:	e008      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f82:	2304      	movs	r3, #4
 8003f84:	e006      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f86:	2303      	movs	r3, #3
 8003f88:	e004      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f8a:	2302      	movs	r3, #2
 8003f8c:	e002      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f8e:	2301      	movs	r3, #1
 8003f90:	e000      	b.n	8003f94 <HAL_GPIO_Init+0x240>
 8003f92:	2300      	movs	r3, #0
 8003f94:	69fa      	ldr	r2, [r7, #28]
 8003f96:	f002 0203 	and.w	r2, r2, #3
 8003f9a:	0092      	lsls	r2, r2, #2
 8003f9c:	4093      	lsls	r3, r2
 8003f9e:	69ba      	ldr	r2, [r7, #24]
 8003fa0:	4313      	orrs	r3, r2
 8003fa2:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003fa4:	4935      	ldr	r1, [pc, #212]	; (800407c <HAL_GPIO_Init+0x328>)
 8003fa6:	69fb      	ldr	r3, [r7, #28]
 8003fa8:	089b      	lsrs	r3, r3, #2
 8003faa:	3302      	adds	r3, #2
 8003fac:	69ba      	ldr	r2, [r7, #24]
 8003fae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003fb2:	4b3d      	ldr	r3, [pc, #244]	; (80040a8 <HAL_GPIO_Init+0x354>)
 8003fb4:	681b      	ldr	r3, [r3, #0]
 8003fb6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003fb8:	693b      	ldr	r3, [r7, #16]
 8003fba:	43db      	mvns	r3, r3
 8003fbc:	69ba      	ldr	r2, [r7, #24]
 8003fbe:	4013      	ands	r3, r2
 8003fc0:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8003fc2:	683b      	ldr	r3, [r7, #0]
 8003fc4:	685b      	ldr	r3, [r3, #4]
 8003fc6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003fca:	2b00      	cmp	r3, #0
 8003fcc:	d003      	beq.n	8003fd6 <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8003fce:	69ba      	ldr	r2, [r7, #24]
 8003fd0:	693b      	ldr	r3, [r7, #16]
 8003fd2:	4313      	orrs	r3, r2
 8003fd4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8003fd6:	4a34      	ldr	r2, [pc, #208]	; (80040a8 <HAL_GPIO_Init+0x354>)
 8003fd8:	69bb      	ldr	r3, [r7, #24]
 8003fda:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8003fdc:	4b32      	ldr	r3, [pc, #200]	; (80040a8 <HAL_GPIO_Init+0x354>)
 8003fde:	685b      	ldr	r3, [r3, #4]
 8003fe0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003fe2:	693b      	ldr	r3, [r7, #16]
 8003fe4:	43db      	mvns	r3, r3
 8003fe6:	69ba      	ldr	r2, [r7, #24]
 8003fe8:	4013      	ands	r3, r2
 8003fea:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8003fec:	683b      	ldr	r3, [r7, #0]
 8003fee:	685b      	ldr	r3, [r3, #4]
 8003ff0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003ff4:	2b00      	cmp	r3, #0
 8003ff6:	d003      	beq.n	8004000 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8003ff8:	69ba      	ldr	r2, [r7, #24]
 8003ffa:	693b      	ldr	r3, [r7, #16]
 8003ffc:	4313      	orrs	r3, r2
 8003ffe:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8004000:	4a29      	ldr	r2, [pc, #164]	; (80040a8 <HAL_GPIO_Init+0x354>)
 8004002:	69bb      	ldr	r3, [r7, #24]
 8004004:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004006:	4b28      	ldr	r3, [pc, #160]	; (80040a8 <HAL_GPIO_Init+0x354>)
 8004008:	689b      	ldr	r3, [r3, #8]
 800400a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800400c:	693b      	ldr	r3, [r7, #16]
 800400e:	43db      	mvns	r3, r3
 8004010:	69ba      	ldr	r2, [r7, #24]
 8004012:	4013      	ands	r3, r2
 8004014:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8004016:	683b      	ldr	r3, [r7, #0]
 8004018:	685b      	ldr	r3, [r3, #4]
 800401a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800401e:	2b00      	cmp	r3, #0
 8004020:	d003      	beq.n	800402a <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8004022:	69ba      	ldr	r2, [r7, #24]
 8004024:	693b      	ldr	r3, [r7, #16]
 8004026:	4313      	orrs	r3, r2
 8004028:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 800402a:	4a1f      	ldr	r2, [pc, #124]	; (80040a8 <HAL_GPIO_Init+0x354>)
 800402c:	69bb      	ldr	r3, [r7, #24]
 800402e:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8004030:	4b1d      	ldr	r3, [pc, #116]	; (80040a8 <HAL_GPIO_Init+0x354>)
 8004032:	68db      	ldr	r3, [r3, #12]
 8004034:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004036:	693b      	ldr	r3, [r7, #16]
 8004038:	43db      	mvns	r3, r3
 800403a:	69ba      	ldr	r2, [r7, #24]
 800403c:	4013      	ands	r3, r2
 800403e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8004040:	683b      	ldr	r3, [r7, #0]
 8004042:	685b      	ldr	r3, [r3, #4]
 8004044:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004048:	2b00      	cmp	r3, #0
 800404a:	d003      	beq.n	8004054 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 800404c:	69ba      	ldr	r2, [r7, #24]
 800404e:	693b      	ldr	r3, [r7, #16]
 8004050:	4313      	orrs	r3, r2
 8004052:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004054:	4a14      	ldr	r2, [pc, #80]	; (80040a8 <HAL_GPIO_Init+0x354>)
 8004056:	69bb      	ldr	r3, [r7, #24]
 8004058:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800405a:	69fb      	ldr	r3, [r7, #28]
 800405c:	3301      	adds	r3, #1
 800405e:	61fb      	str	r3, [r7, #28]
 8004060:	69fb      	ldr	r3, [r7, #28]
 8004062:	2b0f      	cmp	r3, #15
 8004064:	f67f ae84 	bls.w	8003d70 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8004068:	bf00      	nop
 800406a:	bf00      	nop
 800406c:	3724      	adds	r7, #36	; 0x24
 800406e:	46bd      	mov	sp, r7
 8004070:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004074:	4770      	bx	lr
 8004076:	bf00      	nop
 8004078:	40023800 	.word	0x40023800
 800407c:	40013800 	.word	0x40013800
 8004080:	40020000 	.word	0x40020000
 8004084:	40020400 	.word	0x40020400
 8004088:	40020800 	.word	0x40020800
 800408c:	40020c00 	.word	0x40020c00
 8004090:	40021000 	.word	0x40021000
 8004094:	40021400 	.word	0x40021400
 8004098:	40021800 	.word	0x40021800
 800409c:	40021c00 	.word	0x40021c00
 80040a0:	40022000 	.word	0x40022000
 80040a4:	40022400 	.word	0x40022400
 80040a8:	40013c00 	.word	0x40013c00

080040ac <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80040ac:	b480      	push	{r7}
 80040ae:	b083      	sub	sp, #12
 80040b0:	af00      	add	r7, sp, #0
 80040b2:	6078      	str	r0, [r7, #4]
 80040b4:	460b      	mov	r3, r1
 80040b6:	807b      	strh	r3, [r7, #2]
 80040b8:	4613      	mov	r3, r2
 80040ba:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80040bc:	787b      	ldrb	r3, [r7, #1]
 80040be:	2b00      	cmp	r3, #0
 80040c0:	d003      	beq.n	80040ca <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80040c2:	887a      	ldrh	r2, [r7, #2]
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80040c8:	e003      	b.n	80040d2 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80040ca:	887b      	ldrh	r3, [r7, #2]
 80040cc:	041a      	lsls	r2, r3, #16
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	619a      	str	r2, [r3, #24]
}
 80040d2:	bf00      	nop
 80040d4:	370c      	adds	r7, #12
 80040d6:	46bd      	mov	sp, r7
 80040d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040dc:	4770      	bx	lr
	...

080040e0 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 80040e0:	b580      	push	{r7, lr}
 80040e2:	b084      	sub	sp, #16
 80040e4:	af00      	add	r7, sp, #0
 80040e6:	6078      	str	r0, [r7, #4]
  uint32_t tmp, tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	2b00      	cmp	r3, #0
 80040ec:	d101      	bne.n	80040f2 <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 80040ee:	2301      	movs	r3, #1
 80040f0:	e0bf      	b.n	8004272 <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 80040f8:	b2db      	uxtb	r3, r3
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	d106      	bne.n	800410c <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 80040fe:	687b      	ldr	r3, [r7, #4]
 8004100:	2200      	movs	r2, #0
 8004102:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 8004106:	6878      	ldr	r0, [r7, #4]
 8004108:	f7fd ffde 	bl	80020c8 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	2202      	movs	r2, #2
 8004110:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	681b      	ldr	r3, [r3, #0]
 8004118:	699a      	ldr	r2, [r3, #24]
 800411a:	687b      	ldr	r3, [r7, #4]
 800411c:	681b      	ldr	r3, [r3, #0]
 800411e:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8004122:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	681b      	ldr	r3, [r3, #0]
 8004128:	6999      	ldr	r1, [r3, #24]
 800412a:	687b      	ldr	r3, [r7, #4]
 800412c:	685a      	ldr	r2, [r3, #4]
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	689b      	ldr	r3, [r3, #8]
 8004132:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004138:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	691b      	ldr	r3, [r3, #16]
 800413e:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004140:	687b      	ldr	r3, [r7, #4]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	430a      	orrs	r2, r1
 8004146:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	681b      	ldr	r3, [r3, #0]
 800414c:	6899      	ldr	r1, [r3, #8]
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	681a      	ldr	r2, [r3, #0]
 8004152:	4b4a      	ldr	r3, [pc, #296]	; (800427c <HAL_LTDC_Init+0x19c>)
 8004154:	400b      	ands	r3, r1
 8004156:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004158:	687b      	ldr	r3, [r7, #4]
 800415a:	695b      	ldr	r3, [r3, #20]
 800415c:	041b      	lsls	r3, r3, #16
 800415e:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	6899      	ldr	r1, [r3, #8]
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	699a      	ldr	r2, [r3, #24]
 800416a:	68fb      	ldr	r3, [r7, #12]
 800416c:	431a      	orrs	r2, r3
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	430a      	orrs	r2, r1
 8004174:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	681b      	ldr	r3, [r3, #0]
 800417a:	68d9      	ldr	r1, [r3, #12]
 800417c:	687b      	ldr	r3, [r7, #4]
 800417e:	681a      	ldr	r2, [r3, #0]
 8004180:	4b3e      	ldr	r3, [pc, #248]	; (800427c <HAL_LTDC_Init+0x19c>)
 8004182:	400b      	ands	r3, r1
 8004184:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	69db      	ldr	r3, [r3, #28]
 800418a:	041b      	lsls	r3, r3, #16
 800418c:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	68d9      	ldr	r1, [r3, #12]
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	6a1a      	ldr	r2, [r3, #32]
 8004198:	68fb      	ldr	r3, [r7, #12]
 800419a:	431a      	orrs	r2, r3
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	430a      	orrs	r2, r1
 80041a2:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	6919      	ldr	r1, [r3, #16]
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	681a      	ldr	r2, [r3, #0]
 80041ae:	4b33      	ldr	r3, [pc, #204]	; (800427c <HAL_LTDC_Init+0x19c>)
 80041b0:	400b      	ands	r3, r1
 80041b2:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041b8:	041b      	lsls	r3, r3, #16
 80041ba:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	6919      	ldr	r1, [r3, #16]
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80041c6:	68fb      	ldr	r3, [r7, #12]
 80041c8:	431a      	orrs	r2, r3
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	430a      	orrs	r2, r1
 80041d0:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	6959      	ldr	r1, [r3, #20]
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	681a      	ldr	r2, [r3, #0]
 80041dc:	4b27      	ldr	r3, [pc, #156]	; (800427c <HAL_LTDC_Init+0x19c>)
 80041de:	400b      	ands	r3, r1
 80041e0:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80041e6:	041b      	lsls	r3, r3, #16
 80041e8:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	6959      	ldr	r1, [r3, #20]
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041f4:	68fb      	ldr	r3, [r7, #12]
 80041f6:	431a      	orrs	r2, r3
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	430a      	orrs	r2, r1
 80041fe:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004206:	021b      	lsls	r3, r3, #8
 8004208:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8004210:	041b      	lsls	r3, r3, #16
 8004212:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	681b      	ldr	r3, [r3, #0]
 8004218:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	681b      	ldr	r3, [r3, #0]
 800421e:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8004222:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	681b      	ldr	r3, [r3, #0]
 8004228:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800422a:	68ba      	ldr	r2, [r7, #8]
 800422c:	68fb      	ldr	r3, [r7, #12]
 800422e:	4313      	orrs	r3, r2
 8004230:	687a      	ldr	r2, [r7, #4]
 8004232:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 8004236:	431a      	orrs	r2, r3
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	681b      	ldr	r3, [r3, #0]
 800423c:	430a      	orrs	r2, r1
 800423e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	681b      	ldr	r3, [r3, #0]
 8004244:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	f042 0206 	orr.w	r2, r2, #6
 800424e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	699a      	ldr	r2, [r3, #24]
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	f042 0201 	orr.w	r2, r2, #1
 800425e:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	2200      	movs	r2, #0
 8004264:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	2201      	movs	r2, #1
 800426c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 8004270:	2300      	movs	r3, #0
}
 8004272:	4618      	mov	r0, r3
 8004274:	3710      	adds	r7, #16
 8004276:	46bd      	mov	sp, r7
 8004278:	bd80      	pop	{r7, pc}
 800427a:	bf00      	nop
 800427c:	f000f800 	.word	0xf000f800

08004280 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8004280:	b580      	push	{r7, lr}
 8004282:	b084      	sub	sp, #16
 8004284:	af00      	add	r7, sp, #0
 8004286:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	681b      	ldr	r3, [r3, #0]
 800428c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800428e:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004296:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004298:	68fb      	ldr	r3, [r7, #12]
 800429a:	f003 0304 	and.w	r3, r3, #4
 800429e:	2b00      	cmp	r3, #0
 80042a0:	d023      	beq.n	80042ea <HAL_LTDC_IRQHandler+0x6a>
 80042a2:	68bb      	ldr	r3, [r7, #8]
 80042a4:	f003 0304 	and.w	r3, r3, #4
 80042a8:	2b00      	cmp	r3, #0
 80042aa:	d01e      	beq.n	80042ea <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	f022 0204 	bic.w	r2, r2, #4
 80042ba:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	2204      	movs	r2, #4
 80042c2:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80042ca:	f043 0201 	orr.w	r2, r3, #1
 80042ce:	687b      	ldr	r3, [r7, #4]
 80042d0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	2204      	movs	r2, #4
 80042d8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	2200      	movs	r2, #0
 80042e0:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 80042e4:	6878      	ldr	r0, [r7, #4]
 80042e6:	f000 f86f 	bl	80043c8 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80042ea:	68fb      	ldr	r3, [r7, #12]
 80042ec:	f003 0302 	and.w	r3, r3, #2
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	d023      	beq.n	800433c <HAL_LTDC_IRQHandler+0xbc>
 80042f4:	68bb      	ldr	r3, [r7, #8]
 80042f6:	f003 0302 	and.w	r3, r3, #2
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d01e      	beq.n	800433c <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	f022 0202 	bic.w	r2, r2, #2
 800430c:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	681b      	ldr	r3, [r3, #0]
 8004312:	2202      	movs	r2, #2
 8004314:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800431c:	f043 0202 	orr.w	r2, r3, #2
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	2204      	movs	r2, #4
 800432a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	2200      	movs	r2, #0
 8004332:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8004336:	6878      	ldr	r0, [r7, #4]
 8004338:	f000 f846 	bl	80043c8 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800433c:	68fb      	ldr	r3, [r7, #12]
 800433e:	f003 0301 	and.w	r3, r3, #1
 8004342:	2b00      	cmp	r3, #0
 8004344:	d01b      	beq.n	800437e <HAL_LTDC_IRQHandler+0xfe>
 8004346:	68bb      	ldr	r3, [r7, #8]
 8004348:	f003 0301 	and.w	r3, r3, #1
 800434c:	2b00      	cmp	r3, #0
 800434e:	d016      	beq.n	800437e <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	f022 0201 	bic.w	r2, r2, #1
 800435e:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	2201      	movs	r2, #1
 8004366:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	2201      	movs	r2, #1
 800436c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	2200      	movs	r2, #0
 8004374:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8004378:	6878      	ldr	r0, [r7, #4]
 800437a:	f007 fccd 	bl	800bd18 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800437e:	68fb      	ldr	r3, [r7, #12]
 8004380:	f003 0308 	and.w	r3, r3, #8
 8004384:	2b00      	cmp	r3, #0
 8004386:	d01b      	beq.n	80043c0 <HAL_LTDC_IRQHandler+0x140>
 8004388:	68bb      	ldr	r3, [r7, #8]
 800438a:	f003 0308 	and.w	r3, r3, #8
 800438e:	2b00      	cmp	r3, #0
 8004390:	d016      	beq.n	80043c0 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	681b      	ldr	r3, [r3, #0]
 8004396:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	f022 0208 	bic.w	r2, r2, #8
 80043a0:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	681b      	ldr	r3, [r3, #0]
 80043a6:	2208      	movs	r2, #8
 80043a8:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	2201      	movs	r2, #1
 80043ae:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	2200      	movs	r2, #0
 80043b6:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 80043ba:	6878      	ldr	r0, [r7, #4]
 80043bc:	f000 f80e 	bl	80043dc <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 80043c0:	bf00      	nop
 80043c2:	3710      	adds	r7, #16
 80043c4:	46bd      	mov	sp, r7
 80043c6:	bd80      	pop	{r7, pc}

080043c8 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 80043c8:	b480      	push	{r7}
 80043ca:	b083      	sub	sp, #12
 80043cc:	af00      	add	r7, sp, #0
 80043ce:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 80043d0:	bf00      	nop
 80043d2:	370c      	adds	r7, #12
 80043d4:	46bd      	mov	sp, r7
 80043d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043da:	4770      	bx	lr

080043dc <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 80043dc:	b480      	push	{r7}
 80043de:	b083      	sub	sp, #12
 80043e0:	af00      	add	r7, sp, #0
 80043e2:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 80043e4:	bf00      	nop
 80043e6:	370c      	adds	r7, #12
 80043e8:	46bd      	mov	sp, r7
 80043ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043ee:	4770      	bx	lr

080043f0 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80043f0:	b5b0      	push	{r4, r5, r7, lr}
 80043f2:	b084      	sub	sp, #16
 80043f4:	af00      	add	r7, sp, #0
 80043f6:	60f8      	str	r0, [r7, #12]
 80043f8:	60b9      	str	r1, [r7, #8]
 80043fa:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 80043fc:	68fb      	ldr	r3, [r7, #12]
 80043fe:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8004402:	2b01      	cmp	r3, #1
 8004404:	d101      	bne.n	800440a <HAL_LTDC_ConfigLayer+0x1a>
 8004406:	2302      	movs	r3, #2
 8004408:	e02c      	b.n	8004464 <HAL_LTDC_ConfigLayer+0x74>
 800440a:	68fb      	ldr	r3, [r7, #12]
 800440c:	2201      	movs	r2, #1
 800440e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004412:	68fb      	ldr	r3, [r7, #12]
 8004414:	2202      	movs	r2, #2
 8004416:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800441a:	68fa      	ldr	r2, [r7, #12]
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	2134      	movs	r1, #52	; 0x34
 8004420:	fb01 f303 	mul.w	r3, r1, r3
 8004424:	4413      	add	r3, r2
 8004426:	f103 0238 	add.w	r2, r3, #56	; 0x38
 800442a:	68bb      	ldr	r3, [r7, #8]
 800442c:	4614      	mov	r4, r2
 800442e:	461d      	mov	r5, r3
 8004430:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004432:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004434:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004436:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004438:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800443a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800443c:	682b      	ldr	r3, [r5, #0]
 800443e:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004440:	687a      	ldr	r2, [r7, #4]
 8004442:	68b9      	ldr	r1, [r7, #8]
 8004444:	68f8      	ldr	r0, [r7, #12]
 8004446:	f000 f849 	bl	80044dc <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800444a:	68fb      	ldr	r3, [r7, #12]
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	2201      	movs	r2, #1
 8004450:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 8004452:	68fb      	ldr	r3, [r7, #12]
 8004454:	2201      	movs	r2, #1
 8004456:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 800445a:	68fb      	ldr	r3, [r7, #12]
 800445c:	2200      	movs	r2, #0
 800445e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8004462:	2300      	movs	r3, #0
}
 8004464:	4618      	mov	r0, r3
 8004466:	3710      	adds	r7, #16
 8004468:	46bd      	mov	sp, r7
 800446a:	bdb0      	pop	{r4, r5, r7, pc}

0800446c <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 800446c:	b480      	push	{r7}
 800446e:	b083      	sub	sp, #12
 8004470:	af00      	add	r7, sp, #0
 8004472:	6078      	str	r0, [r7, #4]
 8004474:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 800447c:	2b01      	cmp	r3, #1
 800447e:	d101      	bne.n	8004484 <HAL_LTDC_ProgramLineEvent+0x18>
 8004480:	2302      	movs	r3, #2
 8004482:	e023      	b.n	80044cc <HAL_LTDC_ProgramLineEvent+0x60>
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	2201      	movs	r2, #1
 8004488:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	2202      	movs	r2, #2
 8004490:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004494:	687b      	ldr	r3, [r7, #4]
 8004496:	681b      	ldr	r3, [r3, #0]
 8004498:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	f022 0201 	bic.w	r2, r2, #1
 80044a2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 80044a4:	4a0c      	ldr	r2, [pc, #48]	; (80044d8 <HAL_LTDC_ProgramLineEvent+0x6c>)
 80044a6:	683b      	ldr	r3, [r7, #0]
 80044a8:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	f042 0201 	orr.w	r2, r2, #1
 80044b8:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 80044ba:	687b      	ldr	r3, [r7, #4]
 80044bc:	2201      	movs	r2, #1
 80044be:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	2200      	movs	r2, #0
 80044c6:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 80044ca:	2300      	movs	r3, #0
}
 80044cc:	4618      	mov	r0, r3
 80044ce:	370c      	adds	r7, #12
 80044d0:	46bd      	mov	sp, r7
 80044d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044d6:	4770      	bx	lr
 80044d8:	40016800 	.word	0x40016800

080044dc <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80044dc:	b480      	push	{r7}
 80044de:	b089      	sub	sp, #36	; 0x24
 80044e0:	af00      	add	r7, sp, #0
 80044e2:	60f8      	str	r0, [r7, #12]
 80044e4:	60b9      	str	r1, [r7, #8]
 80044e6:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80044e8:	68bb      	ldr	r3, [r7, #8]
 80044ea:	685a      	ldr	r2, [r3, #4]
 80044ec:	68fb      	ldr	r3, [r7, #12]
 80044ee:	681b      	ldr	r3, [r3, #0]
 80044f0:	68db      	ldr	r3, [r3, #12]
 80044f2:	0c1b      	lsrs	r3, r3, #16
 80044f4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044f8:	4413      	add	r3, r2
 80044fa:	041b      	lsls	r3, r3, #16
 80044fc:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80044fe:	68fb      	ldr	r3, [r7, #12]
 8004500:	681b      	ldr	r3, [r3, #0]
 8004502:	461a      	mov	r2, r3
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	01db      	lsls	r3, r3, #7
 8004508:	4413      	add	r3, r2
 800450a:	3384      	adds	r3, #132	; 0x84
 800450c:	685b      	ldr	r3, [r3, #4]
 800450e:	68fa      	ldr	r2, [r7, #12]
 8004510:	6812      	ldr	r2, [r2, #0]
 8004512:	4611      	mov	r1, r2
 8004514:	687a      	ldr	r2, [r7, #4]
 8004516:	01d2      	lsls	r2, r2, #7
 8004518:	440a      	add	r2, r1
 800451a:	3284      	adds	r2, #132	; 0x84
 800451c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8004520:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004522:	68bb      	ldr	r3, [r7, #8]
 8004524:	681a      	ldr	r2, [r3, #0]
 8004526:	68fb      	ldr	r3, [r7, #12]
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	68db      	ldr	r3, [r3, #12]
 800452c:	0c1b      	lsrs	r3, r3, #16
 800452e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004532:	4413      	add	r3, r2
 8004534:	1c5a      	adds	r2, r3, #1
 8004536:	68fb      	ldr	r3, [r7, #12]
 8004538:	681b      	ldr	r3, [r3, #0]
 800453a:	4619      	mov	r1, r3
 800453c:	687b      	ldr	r3, [r7, #4]
 800453e:	01db      	lsls	r3, r3, #7
 8004540:	440b      	add	r3, r1
 8004542:	3384      	adds	r3, #132	; 0x84
 8004544:	4619      	mov	r1, r3
 8004546:	69fb      	ldr	r3, [r7, #28]
 8004548:	4313      	orrs	r3, r2
 800454a:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800454c:	68bb      	ldr	r3, [r7, #8]
 800454e:	68da      	ldr	r2, [r3, #12]
 8004550:	68fb      	ldr	r3, [r7, #12]
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	68db      	ldr	r3, [r3, #12]
 8004556:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800455a:	4413      	add	r3, r2
 800455c:	041b      	lsls	r3, r3, #16
 800455e:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004560:	68fb      	ldr	r3, [r7, #12]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	461a      	mov	r2, r3
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	01db      	lsls	r3, r3, #7
 800456a:	4413      	add	r3, r2
 800456c:	3384      	adds	r3, #132	; 0x84
 800456e:	689b      	ldr	r3, [r3, #8]
 8004570:	68fa      	ldr	r2, [r7, #12]
 8004572:	6812      	ldr	r2, [r2, #0]
 8004574:	4611      	mov	r1, r2
 8004576:	687a      	ldr	r2, [r7, #4]
 8004578:	01d2      	lsls	r2, r2, #7
 800457a:	440a      	add	r2, r1
 800457c:	3284      	adds	r2, #132	; 0x84
 800457e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8004582:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004584:	68bb      	ldr	r3, [r7, #8]
 8004586:	689a      	ldr	r2, [r3, #8]
 8004588:	68fb      	ldr	r3, [r7, #12]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	68db      	ldr	r3, [r3, #12]
 800458e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004592:	4413      	add	r3, r2
 8004594:	1c5a      	adds	r2, r3, #1
 8004596:	68fb      	ldr	r3, [r7, #12]
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	4619      	mov	r1, r3
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	01db      	lsls	r3, r3, #7
 80045a0:	440b      	add	r3, r1
 80045a2:	3384      	adds	r3, #132	; 0x84
 80045a4:	4619      	mov	r1, r3
 80045a6:	69fb      	ldr	r3, [r7, #28]
 80045a8:	4313      	orrs	r3, r2
 80045aa:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80045ac:	68fb      	ldr	r3, [r7, #12]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	461a      	mov	r2, r3
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	01db      	lsls	r3, r3, #7
 80045b6:	4413      	add	r3, r2
 80045b8:	3384      	adds	r3, #132	; 0x84
 80045ba:	691b      	ldr	r3, [r3, #16]
 80045bc:	68fa      	ldr	r2, [r7, #12]
 80045be:	6812      	ldr	r2, [r2, #0]
 80045c0:	4611      	mov	r1, r2
 80045c2:	687a      	ldr	r2, [r7, #4]
 80045c4:	01d2      	lsls	r2, r2, #7
 80045c6:	440a      	add	r2, r1
 80045c8:	3284      	adds	r2, #132	; 0x84
 80045ca:	f023 0307 	bic.w	r3, r3, #7
 80045ce:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80045d0:	68fb      	ldr	r3, [r7, #12]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	461a      	mov	r2, r3
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	01db      	lsls	r3, r3, #7
 80045da:	4413      	add	r3, r2
 80045dc:	3384      	adds	r3, #132	; 0x84
 80045de:	461a      	mov	r2, r3
 80045e0:	68bb      	ldr	r3, [r7, #8]
 80045e2:	691b      	ldr	r3, [r3, #16]
 80045e4:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80045e6:	68bb      	ldr	r3, [r7, #8]
 80045e8:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 80045ec:	021b      	lsls	r3, r3, #8
 80045ee:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80045f0:	68bb      	ldr	r3, [r7, #8]
 80045f2:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 80045f6:	041b      	lsls	r3, r3, #16
 80045f8:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80045fa:	68bb      	ldr	r3, [r7, #8]
 80045fc:	699b      	ldr	r3, [r3, #24]
 80045fe:	061b      	lsls	r3, r3, #24
 8004600:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004602:	68fb      	ldr	r3, [r7, #12]
 8004604:	681b      	ldr	r3, [r3, #0]
 8004606:	461a      	mov	r2, r3
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	01db      	lsls	r3, r3, #7
 800460c:	4413      	add	r3, r2
 800460e:	3384      	adds	r3, #132	; 0x84
 8004610:	699b      	ldr	r3, [r3, #24]
 8004612:	68fb      	ldr	r3, [r7, #12]
 8004614:	681b      	ldr	r3, [r3, #0]
 8004616:	461a      	mov	r2, r3
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	01db      	lsls	r3, r3, #7
 800461c:	4413      	add	r3, r2
 800461e:	3384      	adds	r3, #132	; 0x84
 8004620:	461a      	mov	r2, r3
 8004622:	2300      	movs	r3, #0
 8004624:	6193      	str	r3, [r2, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8004626:	68bb      	ldr	r3, [r7, #8]
 8004628:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800462c:	461a      	mov	r2, r3
 800462e:	69fb      	ldr	r3, [r7, #28]
 8004630:	431a      	orrs	r2, r3
 8004632:	69bb      	ldr	r3, [r7, #24]
 8004634:	431a      	orrs	r2, r3
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	4619      	mov	r1, r3
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	01db      	lsls	r3, r3, #7
 8004640:	440b      	add	r3, r1
 8004642:	3384      	adds	r3, #132	; 0x84
 8004644:	4619      	mov	r1, r3
 8004646:	697b      	ldr	r3, [r7, #20]
 8004648:	4313      	orrs	r3, r2
 800464a:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800464c:	68fb      	ldr	r3, [r7, #12]
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	461a      	mov	r2, r3
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	01db      	lsls	r3, r3, #7
 8004656:	4413      	add	r3, r2
 8004658:	3384      	adds	r3, #132	; 0x84
 800465a:	695b      	ldr	r3, [r3, #20]
 800465c:	68fa      	ldr	r2, [r7, #12]
 800465e:	6812      	ldr	r2, [r2, #0]
 8004660:	4611      	mov	r1, r2
 8004662:	687a      	ldr	r2, [r7, #4]
 8004664:	01d2      	lsls	r2, r2, #7
 8004666:	440a      	add	r2, r1
 8004668:	3284      	adds	r2, #132	; 0x84
 800466a:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800466e:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004670:	68fb      	ldr	r3, [r7, #12]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	461a      	mov	r2, r3
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	01db      	lsls	r3, r3, #7
 800467a:	4413      	add	r3, r2
 800467c:	3384      	adds	r3, #132	; 0x84
 800467e:	461a      	mov	r2, r3
 8004680:	68bb      	ldr	r3, [r7, #8]
 8004682:	695b      	ldr	r3, [r3, #20]
 8004684:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004686:	68fb      	ldr	r3, [r7, #12]
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	461a      	mov	r2, r3
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	01db      	lsls	r3, r3, #7
 8004690:	4413      	add	r3, r2
 8004692:	3384      	adds	r3, #132	; 0x84
 8004694:	69db      	ldr	r3, [r3, #28]
 8004696:	68fa      	ldr	r2, [r7, #12]
 8004698:	6812      	ldr	r2, [r2, #0]
 800469a:	4611      	mov	r1, r2
 800469c:	687a      	ldr	r2, [r7, #4]
 800469e:	01d2      	lsls	r2, r2, #7
 80046a0:	440a      	add	r2, r1
 80046a2:	3284      	adds	r2, #132	; 0x84
 80046a4:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80046a8:	f023 0307 	bic.w	r3, r3, #7
 80046ac:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80046ae:	68bb      	ldr	r3, [r7, #8]
 80046b0:	69da      	ldr	r2, [r3, #28]
 80046b2:	68bb      	ldr	r3, [r7, #8]
 80046b4:	6a1b      	ldr	r3, [r3, #32]
 80046b6:	68f9      	ldr	r1, [r7, #12]
 80046b8:	6809      	ldr	r1, [r1, #0]
 80046ba:	4608      	mov	r0, r1
 80046bc:	6879      	ldr	r1, [r7, #4]
 80046be:	01c9      	lsls	r1, r1, #7
 80046c0:	4401      	add	r1, r0
 80046c2:	3184      	adds	r1, #132	; 0x84
 80046c4:	4313      	orrs	r3, r2
 80046c6:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80046c8:	68fb      	ldr	r3, [r7, #12]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	461a      	mov	r2, r3
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	01db      	lsls	r3, r3, #7
 80046d2:	4413      	add	r3, r2
 80046d4:	3384      	adds	r3, #132	; 0x84
 80046d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	461a      	mov	r2, r3
 80046de:	687b      	ldr	r3, [r7, #4]
 80046e0:	01db      	lsls	r3, r3, #7
 80046e2:	4413      	add	r3, r2
 80046e4:	3384      	adds	r3, #132	; 0x84
 80046e6:	461a      	mov	r2, r3
 80046e8:	2300      	movs	r3, #0
 80046ea:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	681b      	ldr	r3, [r3, #0]
 80046f0:	461a      	mov	r2, r3
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	01db      	lsls	r3, r3, #7
 80046f6:	4413      	add	r3, r2
 80046f8:	3384      	adds	r3, #132	; 0x84
 80046fa:	461a      	mov	r2, r3
 80046fc:	68bb      	ldr	r3, [r7, #8]
 80046fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004700:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004702:	68bb      	ldr	r3, [r7, #8]
 8004704:	691b      	ldr	r3, [r3, #16]
 8004706:	2b00      	cmp	r3, #0
 8004708:	d102      	bne.n	8004710 <LTDC_SetConfig+0x234>
  {
    tmp = 4U;
 800470a:	2304      	movs	r3, #4
 800470c:	61fb      	str	r3, [r7, #28]
 800470e:	e01b      	b.n	8004748 <LTDC_SetConfig+0x26c>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8004710:	68bb      	ldr	r3, [r7, #8]
 8004712:	691b      	ldr	r3, [r3, #16]
 8004714:	2b01      	cmp	r3, #1
 8004716:	d102      	bne.n	800471e <LTDC_SetConfig+0x242>
  {
    tmp = 3U;
 8004718:	2303      	movs	r3, #3
 800471a:	61fb      	str	r3, [r7, #28]
 800471c:	e014      	b.n	8004748 <LTDC_SetConfig+0x26c>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800471e:	68bb      	ldr	r3, [r7, #8]
 8004720:	691b      	ldr	r3, [r3, #16]
 8004722:	2b04      	cmp	r3, #4
 8004724:	d00b      	beq.n	800473e <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8004726:	68bb      	ldr	r3, [r7, #8]
 8004728:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800472a:	2b02      	cmp	r3, #2
 800472c:	d007      	beq.n	800473e <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800472e:	68bb      	ldr	r3, [r7, #8]
 8004730:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8004732:	2b03      	cmp	r3, #3
 8004734:	d003      	beq.n	800473e <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8004736:	68bb      	ldr	r3, [r7, #8]
 8004738:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800473a:	2b07      	cmp	r3, #7
 800473c:	d102      	bne.n	8004744 <LTDC_SetConfig+0x268>
  {
    tmp = 2U;
 800473e:	2302      	movs	r3, #2
 8004740:	61fb      	str	r3, [r7, #28]
 8004742:	e001      	b.n	8004748 <LTDC_SetConfig+0x26c>
  }
  else
  {
    tmp = 1U;
 8004744:	2301      	movs	r3, #1
 8004746:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004748:	68fb      	ldr	r3, [r7, #12]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	461a      	mov	r2, r3
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	01db      	lsls	r3, r3, #7
 8004752:	4413      	add	r3, r2
 8004754:	3384      	adds	r3, #132	; 0x84
 8004756:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004758:	68fa      	ldr	r2, [r7, #12]
 800475a:	6812      	ldr	r2, [r2, #0]
 800475c:	4611      	mov	r1, r2
 800475e:	687a      	ldr	r2, [r7, #4]
 8004760:	01d2      	lsls	r2, r2, #7
 8004762:	440a      	add	r2, r1
 8004764:	3284      	adds	r2, #132	; 0x84
 8004766:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800476a:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800476c:	68bb      	ldr	r3, [r7, #8]
 800476e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004770:	69fa      	ldr	r2, [r7, #28]
 8004772:	fb02 f303 	mul.w	r3, r2, r3
 8004776:	041a      	lsls	r2, r3, #16
 8004778:	68bb      	ldr	r3, [r7, #8]
 800477a:	6859      	ldr	r1, [r3, #4]
 800477c:	68bb      	ldr	r3, [r7, #8]
 800477e:	681b      	ldr	r3, [r3, #0]
 8004780:	1acb      	subs	r3, r1, r3
 8004782:	69f9      	ldr	r1, [r7, #28]
 8004784:	fb01 f303 	mul.w	r3, r1, r3
 8004788:	3303      	adds	r3, #3
 800478a:	68f9      	ldr	r1, [r7, #12]
 800478c:	6809      	ldr	r1, [r1, #0]
 800478e:	4608      	mov	r0, r1
 8004790:	6879      	ldr	r1, [r7, #4]
 8004792:	01c9      	lsls	r1, r1, #7
 8004794:	4401      	add	r1, r0
 8004796:	3184      	adds	r1, #132	; 0x84
 8004798:	4313      	orrs	r3, r2
 800479a:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800479c:	68fb      	ldr	r3, [r7, #12]
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	461a      	mov	r2, r3
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	01db      	lsls	r3, r3, #7
 80047a6:	4413      	add	r3, r2
 80047a8:	3384      	adds	r3, #132	; 0x84
 80047aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047ac:	68fa      	ldr	r2, [r7, #12]
 80047ae:	6812      	ldr	r2, [r2, #0]
 80047b0:	4611      	mov	r1, r2
 80047b2:	687a      	ldr	r2, [r7, #4]
 80047b4:	01d2      	lsls	r2, r2, #7
 80047b6:	440a      	add	r2, r1
 80047b8:	3284      	adds	r2, #132	; 0x84
 80047ba:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80047be:	f023 0307 	bic.w	r3, r3, #7
 80047c2:	6313      	str	r3, [r2, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	681b      	ldr	r3, [r3, #0]
 80047c8:	461a      	mov	r2, r3
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	01db      	lsls	r3, r3, #7
 80047ce:	4413      	add	r3, r2
 80047d0:	3384      	adds	r3, #132	; 0x84
 80047d2:	461a      	mov	r2, r3
 80047d4:	68bb      	ldr	r3, [r7, #8]
 80047d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80047d8:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80047da:	68fb      	ldr	r3, [r7, #12]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	461a      	mov	r2, r3
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	01db      	lsls	r3, r3, #7
 80047e4:	4413      	add	r3, r2
 80047e6:	3384      	adds	r3, #132	; 0x84
 80047e8:	681b      	ldr	r3, [r3, #0]
 80047ea:	68fa      	ldr	r2, [r7, #12]
 80047ec:	6812      	ldr	r2, [r2, #0]
 80047ee:	4611      	mov	r1, r2
 80047f0:	687a      	ldr	r2, [r7, #4]
 80047f2:	01d2      	lsls	r2, r2, #7
 80047f4:	440a      	add	r2, r1
 80047f6:	3284      	adds	r2, #132	; 0x84
 80047f8:	f043 0301 	orr.w	r3, r3, #1
 80047fc:	6013      	str	r3, [r2, #0]
}
 80047fe:	bf00      	nop
 8004800:	3724      	adds	r7, #36	; 0x24
 8004802:	46bd      	mov	sp, r7
 8004804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004808:	4770      	bx	lr
	...

0800480c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800480c:	b580      	push	{r7, lr}
 800480e:	b082      	sub	sp, #8
 8004810:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 8004812:	2300      	movs	r3, #0
 8004814:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8004816:	2300      	movs	r3, #0
 8004818:	603b      	str	r3, [r7, #0]
 800481a:	4b20      	ldr	r3, [pc, #128]	; (800489c <HAL_PWREx_EnableOverDrive+0x90>)
 800481c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800481e:	4a1f      	ldr	r2, [pc, #124]	; (800489c <HAL_PWREx_EnableOverDrive+0x90>)
 8004820:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004824:	6413      	str	r3, [r2, #64]	; 0x40
 8004826:	4b1d      	ldr	r3, [pc, #116]	; (800489c <HAL_PWREx_EnableOverDrive+0x90>)
 8004828:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800482a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800482e:	603b      	str	r3, [r7, #0]
 8004830:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8004832:	4b1b      	ldr	r3, [pc, #108]	; (80048a0 <HAL_PWREx_EnableOverDrive+0x94>)
 8004834:	2201      	movs	r2, #1
 8004836:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8004838:	f7fe f96a 	bl	8002b10 <HAL_GetTick>
 800483c:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800483e:	e009      	b.n	8004854 <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8004840:	f7fe f966 	bl	8002b10 <HAL_GetTick>
 8004844:	4602      	mov	r2, r0
 8004846:	687b      	ldr	r3, [r7, #4]
 8004848:	1ad3      	subs	r3, r2, r3
 800484a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800484e:	d901      	bls.n	8004854 <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 8004850:	2303      	movs	r3, #3
 8004852:	e01f      	b.n	8004894 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8004854:	4b13      	ldr	r3, [pc, #76]	; (80048a4 <HAL_PWREx_EnableOverDrive+0x98>)
 8004856:	685b      	ldr	r3, [r3, #4]
 8004858:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800485c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004860:	d1ee      	bne.n	8004840 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8004862:	4b11      	ldr	r3, [pc, #68]	; (80048a8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004864:	2201      	movs	r2, #1
 8004866:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8004868:	f7fe f952 	bl	8002b10 <HAL_GetTick>
 800486c:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800486e:	e009      	b.n	8004884 <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8004870:	f7fe f94e 	bl	8002b10 <HAL_GetTick>
 8004874:	4602      	mov	r2, r0
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	1ad3      	subs	r3, r2, r3
 800487a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800487e:	d901      	bls.n	8004884 <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 8004880:	2303      	movs	r3, #3
 8004882:	e007      	b.n	8004894 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8004884:	4b07      	ldr	r3, [pc, #28]	; (80048a4 <HAL_PWREx_EnableOverDrive+0x98>)
 8004886:	685b      	ldr	r3, [r3, #4]
 8004888:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800488c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8004890:	d1ee      	bne.n	8004870 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 8004892:	2300      	movs	r3, #0
}
 8004894:	4618      	mov	r0, r3
 8004896:	3708      	adds	r7, #8
 8004898:	46bd      	mov	sp, r7
 800489a:	bd80      	pop	{r7, pc}
 800489c:	40023800 	.word	0x40023800
 80048a0:	420e0040 	.word	0x420e0040
 80048a4:	40007000 	.word	0x40007000
 80048a8:	420e0044 	.word	0x420e0044

080048ac <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80048ac:	b580      	push	{r7, lr}
 80048ae:	b086      	sub	sp, #24
 80048b0:	af00      	add	r7, sp, #0
 80048b2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d101      	bne.n	80048be <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80048ba:	2301      	movs	r3, #1
 80048bc:	e25e      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	681b      	ldr	r3, [r3, #0]
 80048c2:	f003 0301 	and.w	r3, r3, #1
 80048c6:	2b00      	cmp	r3, #0
 80048c8:	d075      	beq.n	80049b6 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80048ca:	4b88      	ldr	r3, [pc, #544]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 80048cc:	689b      	ldr	r3, [r3, #8]
 80048ce:	f003 030c 	and.w	r3, r3, #12
 80048d2:	2b04      	cmp	r3, #4
 80048d4:	d00c      	beq.n	80048f0 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80048d6:	4b85      	ldr	r3, [pc, #532]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 80048d8:	689b      	ldr	r3, [r3, #8]
 80048da:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80048de:	2b08      	cmp	r3, #8
 80048e0:	d112      	bne.n	8004908 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80048e2:	4b82      	ldr	r3, [pc, #520]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 80048e4:	685b      	ldr	r3, [r3, #4]
 80048e6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80048ea:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80048ee:	d10b      	bne.n	8004908 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80048f0:	4b7e      	ldr	r3, [pc, #504]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	d05b      	beq.n	80049b4 <HAL_RCC_OscConfig+0x108>
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	685b      	ldr	r3, [r3, #4]
 8004900:	2b00      	cmp	r3, #0
 8004902:	d157      	bne.n	80049b4 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8004904:	2301      	movs	r3, #1
 8004906:	e239      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	685b      	ldr	r3, [r3, #4]
 800490c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004910:	d106      	bne.n	8004920 <HAL_RCC_OscConfig+0x74>
 8004912:	4b76      	ldr	r3, [pc, #472]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	4a75      	ldr	r2, [pc, #468]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004918:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800491c:	6013      	str	r3, [r2, #0]
 800491e:	e01d      	b.n	800495c <HAL_RCC_OscConfig+0xb0>
 8004920:	687b      	ldr	r3, [r7, #4]
 8004922:	685b      	ldr	r3, [r3, #4]
 8004924:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004928:	d10c      	bne.n	8004944 <HAL_RCC_OscConfig+0x98>
 800492a:	4b70      	ldr	r3, [pc, #448]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	4a6f      	ldr	r2, [pc, #444]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004930:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004934:	6013      	str	r3, [r2, #0]
 8004936:	4b6d      	ldr	r3, [pc, #436]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	4a6c      	ldr	r2, [pc, #432]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 800493c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004940:	6013      	str	r3, [r2, #0]
 8004942:	e00b      	b.n	800495c <HAL_RCC_OscConfig+0xb0>
 8004944:	4b69      	ldr	r3, [pc, #420]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	4a68      	ldr	r2, [pc, #416]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 800494a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800494e:	6013      	str	r3, [r2, #0]
 8004950:	4b66      	ldr	r3, [pc, #408]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	4a65      	ldr	r2, [pc, #404]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004956:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800495a:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	685b      	ldr	r3, [r3, #4]
 8004960:	2b00      	cmp	r3, #0
 8004962:	d013      	beq.n	800498c <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004964:	f7fe f8d4 	bl	8002b10 <HAL_GetTick>
 8004968:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800496a:	e008      	b.n	800497e <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800496c:	f7fe f8d0 	bl	8002b10 <HAL_GetTick>
 8004970:	4602      	mov	r2, r0
 8004972:	693b      	ldr	r3, [r7, #16]
 8004974:	1ad3      	subs	r3, r2, r3
 8004976:	2b64      	cmp	r3, #100	; 0x64
 8004978:	d901      	bls.n	800497e <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 800497a:	2303      	movs	r3, #3
 800497c:	e1fe      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800497e:	4b5b      	ldr	r3, [pc, #364]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004986:	2b00      	cmp	r3, #0
 8004988:	d0f0      	beq.n	800496c <HAL_RCC_OscConfig+0xc0>
 800498a:	e014      	b.n	80049b6 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800498c:	f7fe f8c0 	bl	8002b10 <HAL_GetTick>
 8004990:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004992:	e008      	b.n	80049a6 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004994:	f7fe f8bc 	bl	8002b10 <HAL_GetTick>
 8004998:	4602      	mov	r2, r0
 800499a:	693b      	ldr	r3, [r7, #16]
 800499c:	1ad3      	subs	r3, r2, r3
 800499e:	2b64      	cmp	r3, #100	; 0x64
 80049a0:	d901      	bls.n	80049a6 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80049a2:	2303      	movs	r3, #3
 80049a4:	e1ea      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80049a6:	4b51      	ldr	r3, [pc, #324]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80049ae:	2b00      	cmp	r3, #0
 80049b0:	d1f0      	bne.n	8004994 <HAL_RCC_OscConfig+0xe8>
 80049b2:	e000      	b.n	80049b6 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80049b4:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	f003 0302 	and.w	r3, r3, #2
 80049be:	2b00      	cmp	r3, #0
 80049c0:	d063      	beq.n	8004a8a <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80049c2:	4b4a      	ldr	r3, [pc, #296]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 80049c4:	689b      	ldr	r3, [r3, #8]
 80049c6:	f003 030c 	and.w	r3, r3, #12
 80049ca:	2b00      	cmp	r3, #0
 80049cc:	d00b      	beq.n	80049e6 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80049ce:	4b47      	ldr	r3, [pc, #284]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 80049d0:	689b      	ldr	r3, [r3, #8]
 80049d2:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80049d6:	2b08      	cmp	r3, #8
 80049d8:	d11c      	bne.n	8004a14 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80049da:	4b44      	ldr	r3, [pc, #272]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 80049dc:	685b      	ldr	r3, [r3, #4]
 80049de:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80049e2:	2b00      	cmp	r3, #0
 80049e4:	d116      	bne.n	8004a14 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80049e6:	4b41      	ldr	r3, [pc, #260]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	f003 0302 	and.w	r3, r3, #2
 80049ee:	2b00      	cmp	r3, #0
 80049f0:	d005      	beq.n	80049fe <HAL_RCC_OscConfig+0x152>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	68db      	ldr	r3, [r3, #12]
 80049f6:	2b01      	cmp	r3, #1
 80049f8:	d001      	beq.n	80049fe <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 80049fa:	2301      	movs	r3, #1
 80049fc:	e1be      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80049fe:	4b3b      	ldr	r3, [pc, #236]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	691b      	ldr	r3, [r3, #16]
 8004a0a:	00db      	lsls	r3, r3, #3
 8004a0c:	4937      	ldr	r1, [pc, #220]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004a0e:	4313      	orrs	r3, r2
 8004a10:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004a12:	e03a      	b.n	8004a8a <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	68db      	ldr	r3, [r3, #12]
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	d020      	beq.n	8004a5e <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004a1c:	4b34      	ldr	r3, [pc, #208]	; (8004af0 <HAL_RCC_OscConfig+0x244>)
 8004a1e:	2201      	movs	r2, #1
 8004a20:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004a22:	f7fe f875 	bl	8002b10 <HAL_GetTick>
 8004a26:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004a28:	e008      	b.n	8004a3c <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004a2a:	f7fe f871 	bl	8002b10 <HAL_GetTick>
 8004a2e:	4602      	mov	r2, r0
 8004a30:	693b      	ldr	r3, [r7, #16]
 8004a32:	1ad3      	subs	r3, r2, r3
 8004a34:	2b02      	cmp	r3, #2
 8004a36:	d901      	bls.n	8004a3c <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8004a38:	2303      	movs	r3, #3
 8004a3a:	e19f      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004a3c:	4b2b      	ldr	r3, [pc, #172]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	f003 0302 	and.w	r3, r3, #2
 8004a44:	2b00      	cmp	r3, #0
 8004a46:	d0f0      	beq.n	8004a2a <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004a48:	4b28      	ldr	r3, [pc, #160]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	691b      	ldr	r3, [r3, #16]
 8004a54:	00db      	lsls	r3, r3, #3
 8004a56:	4925      	ldr	r1, [pc, #148]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004a58:	4313      	orrs	r3, r2
 8004a5a:	600b      	str	r3, [r1, #0]
 8004a5c:	e015      	b.n	8004a8a <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004a5e:	4b24      	ldr	r3, [pc, #144]	; (8004af0 <HAL_RCC_OscConfig+0x244>)
 8004a60:	2200      	movs	r2, #0
 8004a62:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004a64:	f7fe f854 	bl	8002b10 <HAL_GetTick>
 8004a68:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004a6a:	e008      	b.n	8004a7e <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004a6c:	f7fe f850 	bl	8002b10 <HAL_GetTick>
 8004a70:	4602      	mov	r2, r0
 8004a72:	693b      	ldr	r3, [r7, #16]
 8004a74:	1ad3      	subs	r3, r2, r3
 8004a76:	2b02      	cmp	r3, #2
 8004a78:	d901      	bls.n	8004a7e <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8004a7a:	2303      	movs	r3, #3
 8004a7c:	e17e      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004a7e:	4b1b      	ldr	r3, [pc, #108]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	f003 0302 	and.w	r3, r3, #2
 8004a86:	2b00      	cmp	r3, #0
 8004a88:	d1f0      	bne.n	8004a6c <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	f003 0308 	and.w	r3, r3, #8
 8004a92:	2b00      	cmp	r3, #0
 8004a94:	d036      	beq.n	8004b04 <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	695b      	ldr	r3, [r3, #20]
 8004a9a:	2b00      	cmp	r3, #0
 8004a9c:	d016      	beq.n	8004acc <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004a9e:	4b15      	ldr	r3, [pc, #84]	; (8004af4 <HAL_RCC_OscConfig+0x248>)
 8004aa0:	2201      	movs	r2, #1
 8004aa2:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004aa4:	f7fe f834 	bl	8002b10 <HAL_GetTick>
 8004aa8:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004aaa:	e008      	b.n	8004abe <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004aac:	f7fe f830 	bl	8002b10 <HAL_GetTick>
 8004ab0:	4602      	mov	r2, r0
 8004ab2:	693b      	ldr	r3, [r7, #16]
 8004ab4:	1ad3      	subs	r3, r2, r3
 8004ab6:	2b02      	cmp	r3, #2
 8004ab8:	d901      	bls.n	8004abe <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8004aba:	2303      	movs	r3, #3
 8004abc:	e15e      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004abe:	4b0b      	ldr	r3, [pc, #44]	; (8004aec <HAL_RCC_OscConfig+0x240>)
 8004ac0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004ac2:	f003 0302 	and.w	r3, r3, #2
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	d0f0      	beq.n	8004aac <HAL_RCC_OscConfig+0x200>
 8004aca:	e01b      	b.n	8004b04 <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004acc:	4b09      	ldr	r3, [pc, #36]	; (8004af4 <HAL_RCC_OscConfig+0x248>)
 8004ace:	2200      	movs	r2, #0
 8004ad0:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004ad2:	f7fe f81d 	bl	8002b10 <HAL_GetTick>
 8004ad6:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004ad8:	e00e      	b.n	8004af8 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004ada:	f7fe f819 	bl	8002b10 <HAL_GetTick>
 8004ade:	4602      	mov	r2, r0
 8004ae0:	693b      	ldr	r3, [r7, #16]
 8004ae2:	1ad3      	subs	r3, r2, r3
 8004ae4:	2b02      	cmp	r3, #2
 8004ae6:	d907      	bls.n	8004af8 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8004ae8:	2303      	movs	r3, #3
 8004aea:	e147      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
 8004aec:	40023800 	.word	0x40023800
 8004af0:	42470000 	.word	0x42470000
 8004af4:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004af8:	4b88      	ldr	r3, [pc, #544]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004afa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004afc:	f003 0302 	and.w	r3, r3, #2
 8004b00:	2b00      	cmp	r3, #0
 8004b02:	d1ea      	bne.n	8004ada <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	f003 0304 	and.w	r3, r3, #4
 8004b0c:	2b00      	cmp	r3, #0
 8004b0e:	f000 8097 	beq.w	8004c40 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004b12:	2300      	movs	r3, #0
 8004b14:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004b16:	4b81      	ldr	r3, [pc, #516]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004b18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b1a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004b1e:	2b00      	cmp	r3, #0
 8004b20:	d10f      	bne.n	8004b42 <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004b22:	2300      	movs	r3, #0
 8004b24:	60bb      	str	r3, [r7, #8]
 8004b26:	4b7d      	ldr	r3, [pc, #500]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004b28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b2a:	4a7c      	ldr	r2, [pc, #496]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004b2c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004b30:	6413      	str	r3, [r2, #64]	; 0x40
 8004b32:	4b7a      	ldr	r3, [pc, #488]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004b34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b36:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004b3a:	60bb      	str	r3, [r7, #8]
 8004b3c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004b3e:	2301      	movs	r3, #1
 8004b40:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004b42:	4b77      	ldr	r3, [pc, #476]	; (8004d20 <HAL_RCC_OscConfig+0x474>)
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	d118      	bne.n	8004b80 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004b4e:	4b74      	ldr	r3, [pc, #464]	; (8004d20 <HAL_RCC_OscConfig+0x474>)
 8004b50:	681b      	ldr	r3, [r3, #0]
 8004b52:	4a73      	ldr	r2, [pc, #460]	; (8004d20 <HAL_RCC_OscConfig+0x474>)
 8004b54:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b58:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004b5a:	f7fd ffd9 	bl	8002b10 <HAL_GetTick>
 8004b5e:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004b60:	e008      	b.n	8004b74 <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004b62:	f7fd ffd5 	bl	8002b10 <HAL_GetTick>
 8004b66:	4602      	mov	r2, r0
 8004b68:	693b      	ldr	r3, [r7, #16]
 8004b6a:	1ad3      	subs	r3, r2, r3
 8004b6c:	2b02      	cmp	r3, #2
 8004b6e:	d901      	bls.n	8004b74 <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8004b70:	2303      	movs	r3, #3
 8004b72:	e103      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004b74:	4b6a      	ldr	r3, [pc, #424]	; (8004d20 <HAL_RCC_OscConfig+0x474>)
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b7c:	2b00      	cmp	r3, #0
 8004b7e:	d0f0      	beq.n	8004b62 <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	689b      	ldr	r3, [r3, #8]
 8004b84:	2b01      	cmp	r3, #1
 8004b86:	d106      	bne.n	8004b96 <HAL_RCC_OscConfig+0x2ea>
 8004b88:	4b64      	ldr	r3, [pc, #400]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004b8a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004b8c:	4a63      	ldr	r2, [pc, #396]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004b8e:	f043 0301 	orr.w	r3, r3, #1
 8004b92:	6713      	str	r3, [r2, #112]	; 0x70
 8004b94:	e01c      	b.n	8004bd0 <HAL_RCC_OscConfig+0x324>
 8004b96:	687b      	ldr	r3, [r7, #4]
 8004b98:	689b      	ldr	r3, [r3, #8]
 8004b9a:	2b05      	cmp	r3, #5
 8004b9c:	d10c      	bne.n	8004bb8 <HAL_RCC_OscConfig+0x30c>
 8004b9e:	4b5f      	ldr	r3, [pc, #380]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004ba0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ba2:	4a5e      	ldr	r2, [pc, #376]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004ba4:	f043 0304 	orr.w	r3, r3, #4
 8004ba8:	6713      	str	r3, [r2, #112]	; 0x70
 8004baa:	4b5c      	ldr	r3, [pc, #368]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004bac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004bae:	4a5b      	ldr	r2, [pc, #364]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004bb0:	f043 0301 	orr.w	r3, r3, #1
 8004bb4:	6713      	str	r3, [r2, #112]	; 0x70
 8004bb6:	e00b      	b.n	8004bd0 <HAL_RCC_OscConfig+0x324>
 8004bb8:	4b58      	ldr	r3, [pc, #352]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004bba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004bbc:	4a57      	ldr	r2, [pc, #348]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004bbe:	f023 0301 	bic.w	r3, r3, #1
 8004bc2:	6713      	str	r3, [r2, #112]	; 0x70
 8004bc4:	4b55      	ldr	r3, [pc, #340]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004bc6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004bc8:	4a54      	ldr	r2, [pc, #336]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004bca:	f023 0304 	bic.w	r3, r3, #4
 8004bce:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	689b      	ldr	r3, [r3, #8]
 8004bd4:	2b00      	cmp	r3, #0
 8004bd6:	d015      	beq.n	8004c04 <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004bd8:	f7fd ff9a 	bl	8002b10 <HAL_GetTick>
 8004bdc:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004bde:	e00a      	b.n	8004bf6 <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004be0:	f7fd ff96 	bl	8002b10 <HAL_GetTick>
 8004be4:	4602      	mov	r2, r0
 8004be6:	693b      	ldr	r3, [r7, #16]
 8004be8:	1ad3      	subs	r3, r2, r3
 8004bea:	f241 3288 	movw	r2, #5000	; 0x1388
 8004bee:	4293      	cmp	r3, r2
 8004bf0:	d901      	bls.n	8004bf6 <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 8004bf2:	2303      	movs	r3, #3
 8004bf4:	e0c2      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004bf6:	4b49      	ldr	r3, [pc, #292]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004bf8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004bfa:	f003 0302 	and.w	r3, r3, #2
 8004bfe:	2b00      	cmp	r3, #0
 8004c00:	d0ee      	beq.n	8004be0 <HAL_RCC_OscConfig+0x334>
 8004c02:	e014      	b.n	8004c2e <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004c04:	f7fd ff84 	bl	8002b10 <HAL_GetTick>
 8004c08:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004c0a:	e00a      	b.n	8004c22 <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004c0c:	f7fd ff80 	bl	8002b10 <HAL_GetTick>
 8004c10:	4602      	mov	r2, r0
 8004c12:	693b      	ldr	r3, [r7, #16]
 8004c14:	1ad3      	subs	r3, r2, r3
 8004c16:	f241 3288 	movw	r2, #5000	; 0x1388
 8004c1a:	4293      	cmp	r3, r2
 8004c1c:	d901      	bls.n	8004c22 <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8004c1e:	2303      	movs	r3, #3
 8004c20:	e0ac      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004c22:	4b3e      	ldr	r3, [pc, #248]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004c24:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004c26:	f003 0302 	and.w	r3, r3, #2
 8004c2a:	2b00      	cmp	r3, #0
 8004c2c:	d1ee      	bne.n	8004c0c <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8004c2e:	7dfb      	ldrb	r3, [r7, #23]
 8004c30:	2b01      	cmp	r3, #1
 8004c32:	d105      	bne.n	8004c40 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004c34:	4b39      	ldr	r3, [pc, #228]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004c36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c38:	4a38      	ldr	r2, [pc, #224]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004c3a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004c3e:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	699b      	ldr	r3, [r3, #24]
 8004c44:	2b00      	cmp	r3, #0
 8004c46:	f000 8098 	beq.w	8004d7a <HAL_RCC_OscConfig+0x4ce>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004c4a:	4b34      	ldr	r3, [pc, #208]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004c4c:	689b      	ldr	r3, [r3, #8]
 8004c4e:	f003 030c 	and.w	r3, r3, #12
 8004c52:	2b08      	cmp	r3, #8
 8004c54:	d05c      	beq.n	8004d10 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	699b      	ldr	r3, [r3, #24]
 8004c5a:	2b02      	cmp	r3, #2
 8004c5c:	d141      	bne.n	8004ce2 <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004c5e:	4b31      	ldr	r3, [pc, #196]	; (8004d24 <HAL_RCC_OscConfig+0x478>)
 8004c60:	2200      	movs	r2, #0
 8004c62:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004c64:	f7fd ff54 	bl	8002b10 <HAL_GetTick>
 8004c68:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004c6a:	e008      	b.n	8004c7e <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004c6c:	f7fd ff50 	bl	8002b10 <HAL_GetTick>
 8004c70:	4602      	mov	r2, r0
 8004c72:	693b      	ldr	r3, [r7, #16]
 8004c74:	1ad3      	subs	r3, r2, r3
 8004c76:	2b02      	cmp	r3, #2
 8004c78:	d901      	bls.n	8004c7e <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8004c7a:	2303      	movs	r3, #3
 8004c7c:	e07e      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004c7e:	4b27      	ldr	r3, [pc, #156]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004c86:	2b00      	cmp	r3, #0
 8004c88:	d1f0      	bne.n	8004c6c <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004c8a:	687b      	ldr	r3, [r7, #4]
 8004c8c:	69da      	ldr	r2, [r3, #28]
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	6a1b      	ldr	r3, [r3, #32]
 8004c92:	431a      	orrs	r2, r3
 8004c94:	687b      	ldr	r3, [r7, #4]
 8004c96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c98:	019b      	lsls	r3, r3, #6
 8004c9a:	431a      	orrs	r2, r3
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ca0:	085b      	lsrs	r3, r3, #1
 8004ca2:	3b01      	subs	r3, #1
 8004ca4:	041b      	lsls	r3, r3, #16
 8004ca6:	431a      	orrs	r2, r3
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004cac:	061b      	lsls	r3, r3, #24
 8004cae:	491b      	ldr	r1, [pc, #108]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004cb0:	4313      	orrs	r3, r2
 8004cb2:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004cb4:	4b1b      	ldr	r3, [pc, #108]	; (8004d24 <HAL_RCC_OscConfig+0x478>)
 8004cb6:	2201      	movs	r2, #1
 8004cb8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004cba:	f7fd ff29 	bl	8002b10 <HAL_GetTick>
 8004cbe:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004cc0:	e008      	b.n	8004cd4 <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004cc2:	f7fd ff25 	bl	8002b10 <HAL_GetTick>
 8004cc6:	4602      	mov	r2, r0
 8004cc8:	693b      	ldr	r3, [r7, #16]
 8004cca:	1ad3      	subs	r3, r2, r3
 8004ccc:	2b02      	cmp	r3, #2
 8004cce:	d901      	bls.n	8004cd4 <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8004cd0:	2303      	movs	r3, #3
 8004cd2:	e053      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004cd4:	4b11      	ldr	r3, [pc, #68]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004cdc:	2b00      	cmp	r3, #0
 8004cde:	d0f0      	beq.n	8004cc2 <HAL_RCC_OscConfig+0x416>
 8004ce0:	e04b      	b.n	8004d7a <HAL_RCC_OscConfig+0x4ce>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004ce2:	4b10      	ldr	r3, [pc, #64]	; (8004d24 <HAL_RCC_OscConfig+0x478>)
 8004ce4:	2200      	movs	r2, #0
 8004ce6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004ce8:	f7fd ff12 	bl	8002b10 <HAL_GetTick>
 8004cec:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004cee:	e008      	b.n	8004d02 <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004cf0:	f7fd ff0e 	bl	8002b10 <HAL_GetTick>
 8004cf4:	4602      	mov	r2, r0
 8004cf6:	693b      	ldr	r3, [r7, #16]
 8004cf8:	1ad3      	subs	r3, r2, r3
 8004cfa:	2b02      	cmp	r3, #2
 8004cfc:	d901      	bls.n	8004d02 <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8004cfe:	2303      	movs	r3, #3
 8004d00:	e03c      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004d02:	4b06      	ldr	r3, [pc, #24]	; (8004d1c <HAL_RCC_OscConfig+0x470>)
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004d0a:	2b00      	cmp	r3, #0
 8004d0c:	d1f0      	bne.n	8004cf0 <HAL_RCC_OscConfig+0x444>
 8004d0e:	e034      	b.n	8004d7a <HAL_RCC_OscConfig+0x4ce>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	699b      	ldr	r3, [r3, #24]
 8004d14:	2b01      	cmp	r3, #1
 8004d16:	d107      	bne.n	8004d28 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8004d18:	2301      	movs	r3, #1
 8004d1a:	e02f      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
 8004d1c:	40023800 	.word	0x40023800
 8004d20:	40007000 	.word	0x40007000
 8004d24:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8004d28:	4b16      	ldr	r3, [pc, #88]	; (8004d84 <HAL_RCC_OscConfig+0x4d8>)
 8004d2a:	689b      	ldr	r3, [r3, #8]
 8004d2c:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004d2e:	68fb      	ldr	r3, [r7, #12]
 8004d30:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	69db      	ldr	r3, [r3, #28]
 8004d38:	429a      	cmp	r2, r3
 8004d3a:	d11c      	bne.n	8004d76 <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004d3c:	68fb      	ldr	r3, [r7, #12]
 8004d3e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004d46:	429a      	cmp	r2, r3
 8004d48:	d115      	bne.n	8004d76 <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8004d4a:	68fa      	ldr	r2, [r7, #12]
 8004d4c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004d50:	4013      	ands	r3, r2
 8004d52:	687a      	ldr	r2, [r7, #4]
 8004d54:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004d56:	4293      	cmp	r3, r2
 8004d58:	d10d      	bne.n	8004d76 <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004d5a:	68fb      	ldr	r3, [r7, #12]
 8004d5c:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8004d64:	429a      	cmp	r2, r3
 8004d66:	d106      	bne.n	8004d76 <HAL_RCC_OscConfig+0x4ca>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8004d68:	68fb      	ldr	r3, [r7, #12]
 8004d6a:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8004d6e:	687b      	ldr	r3, [r7, #4]
 8004d70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004d72:	429a      	cmp	r2, r3
 8004d74:	d001      	beq.n	8004d7a <HAL_RCC_OscConfig+0x4ce>
        {
          return HAL_ERROR;
 8004d76:	2301      	movs	r3, #1
 8004d78:	e000      	b.n	8004d7c <HAL_RCC_OscConfig+0x4d0>
        }
      }
    }
  }
  return HAL_OK;
 8004d7a:	2300      	movs	r3, #0
}
 8004d7c:	4618      	mov	r0, r3
 8004d7e:	3718      	adds	r7, #24
 8004d80:	46bd      	mov	sp, r7
 8004d82:	bd80      	pop	{r7, pc}
 8004d84:	40023800 	.word	0x40023800

08004d88 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004d88:	b580      	push	{r7, lr}
 8004d8a:	b084      	sub	sp, #16
 8004d8c:	af00      	add	r7, sp, #0
 8004d8e:	6078      	str	r0, [r7, #4]
 8004d90:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	2b00      	cmp	r3, #0
 8004d96:	d101      	bne.n	8004d9c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004d98:	2301      	movs	r3, #1
 8004d9a:	e0cc      	b.n	8004f36 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004d9c:	4b68      	ldr	r3, [pc, #416]	; (8004f40 <HAL_RCC_ClockConfig+0x1b8>)
 8004d9e:	681b      	ldr	r3, [r3, #0]
 8004da0:	f003 030f 	and.w	r3, r3, #15
 8004da4:	683a      	ldr	r2, [r7, #0]
 8004da6:	429a      	cmp	r2, r3
 8004da8:	d90c      	bls.n	8004dc4 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004daa:	4b65      	ldr	r3, [pc, #404]	; (8004f40 <HAL_RCC_ClockConfig+0x1b8>)
 8004dac:	683a      	ldr	r2, [r7, #0]
 8004dae:	b2d2      	uxtb	r2, r2
 8004db0:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004db2:	4b63      	ldr	r3, [pc, #396]	; (8004f40 <HAL_RCC_ClockConfig+0x1b8>)
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	f003 030f 	and.w	r3, r3, #15
 8004dba:	683a      	ldr	r2, [r7, #0]
 8004dbc:	429a      	cmp	r2, r3
 8004dbe:	d001      	beq.n	8004dc4 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8004dc0:	2301      	movs	r3, #1
 8004dc2:	e0b8      	b.n	8004f36 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	681b      	ldr	r3, [r3, #0]
 8004dc8:	f003 0302 	and.w	r3, r3, #2
 8004dcc:	2b00      	cmp	r3, #0
 8004dce:	d020      	beq.n	8004e12 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004dd0:	687b      	ldr	r3, [r7, #4]
 8004dd2:	681b      	ldr	r3, [r3, #0]
 8004dd4:	f003 0304 	and.w	r3, r3, #4
 8004dd8:	2b00      	cmp	r3, #0
 8004dda:	d005      	beq.n	8004de8 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8004ddc:	4b59      	ldr	r3, [pc, #356]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004dde:	689b      	ldr	r3, [r3, #8]
 8004de0:	4a58      	ldr	r2, [pc, #352]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004de2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8004de6:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	f003 0308 	and.w	r3, r3, #8
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	d005      	beq.n	8004e00 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8004df4:	4b53      	ldr	r3, [pc, #332]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004df6:	689b      	ldr	r3, [r3, #8]
 8004df8:	4a52      	ldr	r2, [pc, #328]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004dfa:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8004dfe:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004e00:	4b50      	ldr	r3, [pc, #320]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004e02:	689b      	ldr	r3, [r3, #8]
 8004e04:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	689b      	ldr	r3, [r3, #8]
 8004e0c:	494d      	ldr	r1, [pc, #308]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004e0e:	4313      	orrs	r3, r2
 8004e10:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	f003 0301 	and.w	r3, r3, #1
 8004e1a:	2b00      	cmp	r3, #0
 8004e1c:	d044      	beq.n	8004ea8 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	685b      	ldr	r3, [r3, #4]
 8004e22:	2b01      	cmp	r3, #1
 8004e24:	d107      	bne.n	8004e36 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004e26:	4b47      	ldr	r3, [pc, #284]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004e2e:	2b00      	cmp	r3, #0
 8004e30:	d119      	bne.n	8004e66 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8004e32:	2301      	movs	r3, #1
 8004e34:	e07f      	b.n	8004f36 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	685b      	ldr	r3, [r3, #4]
 8004e3a:	2b02      	cmp	r3, #2
 8004e3c:	d003      	beq.n	8004e46 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 8004e3e:	687b      	ldr	r3, [r7, #4]
 8004e40:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004e42:	2b03      	cmp	r3, #3
 8004e44:	d107      	bne.n	8004e56 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004e46:	4b3f      	ldr	r3, [pc, #252]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004e48:	681b      	ldr	r3, [r3, #0]
 8004e4a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	d109      	bne.n	8004e66 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8004e52:	2301      	movs	r3, #1
 8004e54:	e06f      	b.n	8004f36 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004e56:	4b3b      	ldr	r3, [pc, #236]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004e58:	681b      	ldr	r3, [r3, #0]
 8004e5a:	f003 0302 	and.w	r3, r3, #2
 8004e5e:	2b00      	cmp	r3, #0
 8004e60:	d101      	bne.n	8004e66 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8004e62:	2301      	movs	r3, #1
 8004e64:	e067      	b.n	8004f36 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004e66:	4b37      	ldr	r3, [pc, #220]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004e68:	689b      	ldr	r3, [r3, #8]
 8004e6a:	f023 0203 	bic.w	r2, r3, #3
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	685b      	ldr	r3, [r3, #4]
 8004e72:	4934      	ldr	r1, [pc, #208]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004e74:	4313      	orrs	r3, r2
 8004e76:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004e78:	f7fd fe4a 	bl	8002b10 <HAL_GetTick>
 8004e7c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004e7e:	e00a      	b.n	8004e96 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004e80:	f7fd fe46 	bl	8002b10 <HAL_GetTick>
 8004e84:	4602      	mov	r2, r0
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	1ad3      	subs	r3, r2, r3
 8004e8a:	f241 3288 	movw	r2, #5000	; 0x1388
 8004e8e:	4293      	cmp	r3, r2
 8004e90:	d901      	bls.n	8004e96 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8004e92:	2303      	movs	r3, #3
 8004e94:	e04f      	b.n	8004f36 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004e96:	4b2b      	ldr	r3, [pc, #172]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004e98:	689b      	ldr	r3, [r3, #8]
 8004e9a:	f003 020c 	and.w	r2, r3, #12
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	685b      	ldr	r3, [r3, #4]
 8004ea2:	009b      	lsls	r3, r3, #2
 8004ea4:	429a      	cmp	r2, r3
 8004ea6:	d1eb      	bne.n	8004e80 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8004ea8:	4b25      	ldr	r3, [pc, #148]	; (8004f40 <HAL_RCC_ClockConfig+0x1b8>)
 8004eaa:	681b      	ldr	r3, [r3, #0]
 8004eac:	f003 030f 	and.w	r3, r3, #15
 8004eb0:	683a      	ldr	r2, [r7, #0]
 8004eb2:	429a      	cmp	r2, r3
 8004eb4:	d20c      	bcs.n	8004ed0 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004eb6:	4b22      	ldr	r3, [pc, #136]	; (8004f40 <HAL_RCC_ClockConfig+0x1b8>)
 8004eb8:	683a      	ldr	r2, [r7, #0]
 8004eba:	b2d2      	uxtb	r2, r2
 8004ebc:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004ebe:	4b20      	ldr	r3, [pc, #128]	; (8004f40 <HAL_RCC_ClockConfig+0x1b8>)
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	f003 030f 	and.w	r3, r3, #15
 8004ec6:	683a      	ldr	r2, [r7, #0]
 8004ec8:	429a      	cmp	r2, r3
 8004eca:	d001      	beq.n	8004ed0 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8004ecc:	2301      	movs	r3, #1
 8004ece:	e032      	b.n	8004f36 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	681b      	ldr	r3, [r3, #0]
 8004ed4:	f003 0304 	and.w	r3, r3, #4
 8004ed8:	2b00      	cmp	r3, #0
 8004eda:	d008      	beq.n	8004eee <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004edc:	4b19      	ldr	r3, [pc, #100]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004ede:	689b      	ldr	r3, [r3, #8]
 8004ee0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	68db      	ldr	r3, [r3, #12]
 8004ee8:	4916      	ldr	r1, [pc, #88]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004eea:	4313      	orrs	r3, r2
 8004eec:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	f003 0308 	and.w	r3, r3, #8
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	d009      	beq.n	8004f0e <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8004efa:	4b12      	ldr	r3, [pc, #72]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004efc:	689b      	ldr	r3, [r3, #8]
 8004efe:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	691b      	ldr	r3, [r3, #16]
 8004f06:	00db      	lsls	r3, r3, #3
 8004f08:	490e      	ldr	r1, [pc, #56]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004f0a:	4313      	orrs	r3, r2
 8004f0c:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004f0e:	f000 f821 	bl	8004f54 <HAL_RCC_GetSysClockFreq>
 8004f12:	4602      	mov	r2, r0
 8004f14:	4b0b      	ldr	r3, [pc, #44]	; (8004f44 <HAL_RCC_ClockConfig+0x1bc>)
 8004f16:	689b      	ldr	r3, [r3, #8]
 8004f18:	091b      	lsrs	r3, r3, #4
 8004f1a:	f003 030f 	and.w	r3, r3, #15
 8004f1e:	490a      	ldr	r1, [pc, #40]	; (8004f48 <HAL_RCC_ClockConfig+0x1c0>)
 8004f20:	5ccb      	ldrb	r3, [r1, r3]
 8004f22:	fa22 f303 	lsr.w	r3, r2, r3
 8004f26:	4a09      	ldr	r2, [pc, #36]	; (8004f4c <HAL_RCC_ClockConfig+0x1c4>)
 8004f28:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8004f2a:	4b09      	ldr	r3, [pc, #36]	; (8004f50 <HAL_RCC_ClockConfig+0x1c8>)
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	4618      	mov	r0, r3
 8004f30:	f7fd fc14 	bl	800275c <HAL_InitTick>

  return HAL_OK;
 8004f34:	2300      	movs	r3, #0
}
 8004f36:	4618      	mov	r0, r3
 8004f38:	3710      	adds	r7, #16
 8004f3a:	46bd      	mov	sp, r7
 8004f3c:	bd80      	pop	{r7, pc}
 8004f3e:	bf00      	nop
 8004f40:	40023c00 	.word	0x40023c00
 8004f44:	40023800 	.word	0x40023800
 8004f48:	0801eda4 	.word	0x0801eda4
 8004f4c:	20000004 	.word	0x20000004
 8004f50:	20000008 	.word	0x20000008

08004f54 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004f54:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004f58:	b094      	sub	sp, #80	; 0x50
 8004f5a:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8004f5c:	2300      	movs	r3, #0
 8004f5e:	647b      	str	r3, [r7, #68]	; 0x44
 8004f60:	2300      	movs	r3, #0
 8004f62:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004f64:	2300      	movs	r3, #0
 8004f66:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t sysclockfreq = 0U;
 8004f68:	2300      	movs	r3, #0
 8004f6a:	64bb      	str	r3, [r7, #72]	; 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004f6c:	4b79      	ldr	r3, [pc, #484]	; (8005154 <HAL_RCC_GetSysClockFreq+0x200>)
 8004f6e:	689b      	ldr	r3, [r3, #8]
 8004f70:	f003 030c 	and.w	r3, r3, #12
 8004f74:	2b08      	cmp	r3, #8
 8004f76:	d00d      	beq.n	8004f94 <HAL_RCC_GetSysClockFreq+0x40>
 8004f78:	2b08      	cmp	r3, #8
 8004f7a:	f200 80e1 	bhi.w	8005140 <HAL_RCC_GetSysClockFreq+0x1ec>
 8004f7e:	2b00      	cmp	r3, #0
 8004f80:	d002      	beq.n	8004f88 <HAL_RCC_GetSysClockFreq+0x34>
 8004f82:	2b04      	cmp	r3, #4
 8004f84:	d003      	beq.n	8004f8e <HAL_RCC_GetSysClockFreq+0x3a>
 8004f86:	e0db      	b.n	8005140 <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8004f88:	4b73      	ldr	r3, [pc, #460]	; (8005158 <HAL_RCC_GetSysClockFreq+0x204>)
 8004f8a:	64bb      	str	r3, [r7, #72]	; 0x48
       break;
 8004f8c:	e0db      	b.n	8005146 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8004f8e:	4b73      	ldr	r3, [pc, #460]	; (800515c <HAL_RCC_GetSysClockFreq+0x208>)
 8004f90:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 8004f92:	e0d8      	b.n	8005146 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8004f94:	4b6f      	ldr	r3, [pc, #444]	; (8005154 <HAL_RCC_GetSysClockFreq+0x200>)
 8004f96:	685b      	ldr	r3, [r3, #4]
 8004f98:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004f9c:	647b      	str	r3, [r7, #68]	; 0x44
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8004f9e:	4b6d      	ldr	r3, [pc, #436]	; (8005154 <HAL_RCC_GetSysClockFreq+0x200>)
 8004fa0:	685b      	ldr	r3, [r3, #4]
 8004fa2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004fa6:	2b00      	cmp	r3, #0
 8004fa8:	d063      	beq.n	8005072 <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004faa:	4b6a      	ldr	r3, [pc, #424]	; (8005154 <HAL_RCC_GetSysClockFreq+0x200>)
 8004fac:	685b      	ldr	r3, [r3, #4]
 8004fae:	099b      	lsrs	r3, r3, #6
 8004fb0:	2200      	movs	r2, #0
 8004fb2:	63bb      	str	r3, [r7, #56]	; 0x38
 8004fb4:	63fa      	str	r2, [r7, #60]	; 0x3c
 8004fb6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004fb8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004fbc:	633b      	str	r3, [r7, #48]	; 0x30
 8004fbe:	2300      	movs	r3, #0
 8004fc0:	637b      	str	r3, [r7, #52]	; 0x34
 8004fc2:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8004fc6:	4622      	mov	r2, r4
 8004fc8:	462b      	mov	r3, r5
 8004fca:	f04f 0000 	mov.w	r0, #0
 8004fce:	f04f 0100 	mov.w	r1, #0
 8004fd2:	0159      	lsls	r1, r3, #5
 8004fd4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004fd8:	0150      	lsls	r0, r2, #5
 8004fda:	4602      	mov	r2, r0
 8004fdc:	460b      	mov	r3, r1
 8004fde:	4621      	mov	r1, r4
 8004fe0:	1a51      	subs	r1, r2, r1
 8004fe2:	6139      	str	r1, [r7, #16]
 8004fe4:	4629      	mov	r1, r5
 8004fe6:	eb63 0301 	sbc.w	r3, r3, r1
 8004fea:	617b      	str	r3, [r7, #20]
 8004fec:	f04f 0200 	mov.w	r2, #0
 8004ff0:	f04f 0300 	mov.w	r3, #0
 8004ff4:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004ff8:	4659      	mov	r1, fp
 8004ffa:	018b      	lsls	r3, r1, #6
 8004ffc:	4651      	mov	r1, sl
 8004ffe:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005002:	4651      	mov	r1, sl
 8005004:	018a      	lsls	r2, r1, #6
 8005006:	4651      	mov	r1, sl
 8005008:	ebb2 0801 	subs.w	r8, r2, r1
 800500c:	4659      	mov	r1, fp
 800500e:	eb63 0901 	sbc.w	r9, r3, r1
 8005012:	f04f 0200 	mov.w	r2, #0
 8005016:	f04f 0300 	mov.w	r3, #0
 800501a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800501e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005022:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005026:	4690      	mov	r8, r2
 8005028:	4699      	mov	r9, r3
 800502a:	4623      	mov	r3, r4
 800502c:	eb18 0303 	adds.w	r3, r8, r3
 8005030:	60bb      	str	r3, [r7, #8]
 8005032:	462b      	mov	r3, r5
 8005034:	eb49 0303 	adc.w	r3, r9, r3
 8005038:	60fb      	str	r3, [r7, #12]
 800503a:	f04f 0200 	mov.w	r2, #0
 800503e:	f04f 0300 	mov.w	r3, #0
 8005042:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8005046:	4629      	mov	r1, r5
 8005048:	024b      	lsls	r3, r1, #9
 800504a:	4621      	mov	r1, r4
 800504c:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005050:	4621      	mov	r1, r4
 8005052:	024a      	lsls	r2, r1, #9
 8005054:	4610      	mov	r0, r2
 8005056:	4619      	mov	r1, r3
 8005058:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800505a:	2200      	movs	r2, #0
 800505c:	62bb      	str	r3, [r7, #40]	; 0x28
 800505e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005060:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8005064:	f7fb fdb0 	bl	8000bc8 <__aeabi_uldivmod>
 8005068:	4602      	mov	r2, r0
 800506a:	460b      	mov	r3, r1
 800506c:	4613      	mov	r3, r2
 800506e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005070:	e058      	b.n	8005124 <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005072:	4b38      	ldr	r3, [pc, #224]	; (8005154 <HAL_RCC_GetSysClockFreq+0x200>)
 8005074:	685b      	ldr	r3, [r3, #4]
 8005076:	099b      	lsrs	r3, r3, #6
 8005078:	2200      	movs	r2, #0
 800507a:	4618      	mov	r0, r3
 800507c:	4611      	mov	r1, r2
 800507e:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005082:	623b      	str	r3, [r7, #32]
 8005084:	2300      	movs	r3, #0
 8005086:	627b      	str	r3, [r7, #36]	; 0x24
 8005088:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 800508c:	4642      	mov	r2, r8
 800508e:	464b      	mov	r3, r9
 8005090:	f04f 0000 	mov.w	r0, #0
 8005094:	f04f 0100 	mov.w	r1, #0
 8005098:	0159      	lsls	r1, r3, #5
 800509a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800509e:	0150      	lsls	r0, r2, #5
 80050a0:	4602      	mov	r2, r0
 80050a2:	460b      	mov	r3, r1
 80050a4:	4641      	mov	r1, r8
 80050a6:	ebb2 0a01 	subs.w	sl, r2, r1
 80050aa:	4649      	mov	r1, r9
 80050ac:	eb63 0b01 	sbc.w	fp, r3, r1
 80050b0:	f04f 0200 	mov.w	r2, #0
 80050b4:	f04f 0300 	mov.w	r3, #0
 80050b8:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80050bc:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80050c0:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80050c4:	ebb2 040a 	subs.w	r4, r2, sl
 80050c8:	eb63 050b 	sbc.w	r5, r3, fp
 80050cc:	f04f 0200 	mov.w	r2, #0
 80050d0:	f04f 0300 	mov.w	r3, #0
 80050d4:	00eb      	lsls	r3, r5, #3
 80050d6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80050da:	00e2      	lsls	r2, r4, #3
 80050dc:	4614      	mov	r4, r2
 80050de:	461d      	mov	r5, r3
 80050e0:	4643      	mov	r3, r8
 80050e2:	18e3      	adds	r3, r4, r3
 80050e4:	603b      	str	r3, [r7, #0]
 80050e6:	464b      	mov	r3, r9
 80050e8:	eb45 0303 	adc.w	r3, r5, r3
 80050ec:	607b      	str	r3, [r7, #4]
 80050ee:	f04f 0200 	mov.w	r2, #0
 80050f2:	f04f 0300 	mov.w	r3, #0
 80050f6:	e9d7 4500 	ldrd	r4, r5, [r7]
 80050fa:	4629      	mov	r1, r5
 80050fc:	028b      	lsls	r3, r1, #10
 80050fe:	4621      	mov	r1, r4
 8005100:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005104:	4621      	mov	r1, r4
 8005106:	028a      	lsls	r2, r1, #10
 8005108:	4610      	mov	r0, r2
 800510a:	4619      	mov	r1, r3
 800510c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800510e:	2200      	movs	r2, #0
 8005110:	61bb      	str	r3, [r7, #24]
 8005112:	61fa      	str	r2, [r7, #28]
 8005114:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005118:	f7fb fd56 	bl	8000bc8 <__aeabi_uldivmod>
 800511c:	4602      	mov	r2, r0
 800511e:	460b      	mov	r3, r1
 8005120:	4613      	mov	r3, r2
 8005122:	64fb      	str	r3, [r7, #76]	; 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005124:	4b0b      	ldr	r3, [pc, #44]	; (8005154 <HAL_RCC_GetSysClockFreq+0x200>)
 8005126:	685b      	ldr	r3, [r3, #4]
 8005128:	0c1b      	lsrs	r3, r3, #16
 800512a:	f003 0303 	and.w	r3, r3, #3
 800512e:	3301      	adds	r3, #1
 8005130:	005b      	lsls	r3, r3, #1
 8005132:	643b      	str	r3, [r7, #64]	; 0x40

      sysclockfreq = pllvco/pllp;
 8005134:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8005136:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005138:	fbb2 f3f3 	udiv	r3, r2, r3
 800513c:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 800513e:	e002      	b.n	8005146 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8005140:	4b05      	ldr	r3, [pc, #20]	; (8005158 <HAL_RCC_GetSysClockFreq+0x204>)
 8005142:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 8005144:	bf00      	nop
    }
  }
  return sysclockfreq;
 8005146:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 8005148:	4618      	mov	r0, r3
 800514a:	3750      	adds	r7, #80	; 0x50
 800514c:	46bd      	mov	sp, r7
 800514e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005152:	bf00      	nop
 8005154:	40023800 	.word	0x40023800
 8005158:	00f42400 	.word	0x00f42400
 800515c:	007a1200 	.word	0x007a1200

08005160 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005160:	b480      	push	{r7}
 8005162:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8005164:	4b03      	ldr	r3, [pc, #12]	; (8005174 <HAL_RCC_GetHCLKFreq+0x14>)
 8005166:	681b      	ldr	r3, [r3, #0]
}
 8005168:	4618      	mov	r0, r3
 800516a:	46bd      	mov	sp, r7
 800516c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005170:	4770      	bx	lr
 8005172:	bf00      	nop
 8005174:	20000004 	.word	0x20000004

08005178 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005178:	b580      	push	{r7, lr}
 800517a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800517c:	f7ff fff0 	bl	8005160 <HAL_RCC_GetHCLKFreq>
 8005180:	4602      	mov	r2, r0
 8005182:	4b05      	ldr	r3, [pc, #20]	; (8005198 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005184:	689b      	ldr	r3, [r3, #8]
 8005186:	0a9b      	lsrs	r3, r3, #10
 8005188:	f003 0307 	and.w	r3, r3, #7
 800518c:	4903      	ldr	r1, [pc, #12]	; (800519c <HAL_RCC_GetPCLK1Freq+0x24>)
 800518e:	5ccb      	ldrb	r3, [r1, r3]
 8005190:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005194:	4618      	mov	r0, r3
 8005196:	bd80      	pop	{r7, pc}
 8005198:	40023800 	.word	0x40023800
 800519c:	0801edb4 	.word	0x0801edb4

080051a0 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80051a0:	b580      	push	{r7, lr}
 80051a2:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80051a4:	f7ff ffdc 	bl	8005160 <HAL_RCC_GetHCLKFreq>
 80051a8:	4602      	mov	r2, r0
 80051aa:	4b05      	ldr	r3, [pc, #20]	; (80051c0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80051ac:	689b      	ldr	r3, [r3, #8]
 80051ae:	0b5b      	lsrs	r3, r3, #13
 80051b0:	f003 0307 	and.w	r3, r3, #7
 80051b4:	4903      	ldr	r1, [pc, #12]	; (80051c4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80051b6:	5ccb      	ldrb	r3, [r1, r3]
 80051b8:	fa22 f303 	lsr.w	r3, r2, r3
}
 80051bc:	4618      	mov	r0, r3
 80051be:	bd80      	pop	{r7, pc}
 80051c0:	40023800 	.word	0x40023800
 80051c4:	0801edb4 	.word	0x0801edb4

080051c8 <HAL_RCC_GetClockConfig>:
  * will be configured.
  * @param  pFLatency Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
 80051c8:	b480      	push	{r7}
 80051ca:	b083      	sub	sp, #12
 80051cc:	af00      	add	r7, sp, #0
 80051ce:	6078      	str	r0, [r7, #4]
 80051d0:	6039      	str	r1, [r7, #0]
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	220f      	movs	r2, #15
 80051d6:	601a      	str	r2, [r3, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80051d8:	4b12      	ldr	r3, [pc, #72]	; (8005224 <HAL_RCC_GetClockConfig+0x5c>)
 80051da:	689b      	ldr	r3, [r3, #8]
 80051dc:	f003 0203 	and.w	r2, r3, #3
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80051e4:	4b0f      	ldr	r3, [pc, #60]	; (8005224 <HAL_RCC_GetClockConfig+0x5c>)
 80051e6:	689b      	ldr	r3, [r3, #8]
 80051e8:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80051f0:	4b0c      	ldr	r3, [pc, #48]	; (8005224 <HAL_RCC_GetClockConfig+0x5c>)
 80051f2:	689b      	ldr	r3, [r3, #8]
 80051f4:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80051fc:	4b09      	ldr	r3, [pc, #36]	; (8005224 <HAL_RCC_GetClockConfig+0x5c>)
 80051fe:	689b      	ldr	r3, [r3, #8]
 8005200:	08db      	lsrs	r3, r3, #3
 8005202:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	611a      	str	r2, [r3, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800520a:	4b07      	ldr	r3, [pc, #28]	; (8005228 <HAL_RCC_GetClockConfig+0x60>)
 800520c:	681b      	ldr	r3, [r3, #0]
 800520e:	f003 020f 	and.w	r2, r3, #15
 8005212:	683b      	ldr	r3, [r7, #0]
 8005214:	601a      	str	r2, [r3, #0]
}
 8005216:	bf00      	nop
 8005218:	370c      	adds	r7, #12
 800521a:	46bd      	mov	sp, r7
 800521c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005220:	4770      	bx	lr
 8005222:	bf00      	nop
 8005224:	40023800 	.word	0x40023800
 8005228:	40023c00 	.word	0x40023c00

0800522c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800522c:	b580      	push	{r7, lr}
 800522e:	b086      	sub	sp, #24
 8005230:	af00      	add	r7, sp, #0
 8005232:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8005234:	2300      	movs	r3, #0
 8005236:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 8005238:	2300      	movs	r3, #0
 800523a:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	681b      	ldr	r3, [r3, #0]
 8005240:	f003 0301 	and.w	r3, r3, #1
 8005244:	2b00      	cmp	r3, #0
 8005246:	d10b      	bne.n	8005260 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005250:	2b00      	cmp	r3, #0
 8005252:	d105      	bne.n	8005260 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8005254:	687b      	ldr	r3, [r7, #4]
 8005256:	681b      	ldr	r3, [r3, #0]
 8005258:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800525c:	2b00      	cmp	r3, #0
 800525e:	d075      	beq.n	800534c <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8005260:	4b91      	ldr	r3, [pc, #580]	; (80054a8 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8005262:	2200      	movs	r2, #0
 8005264:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005266:	f7fd fc53 	bl	8002b10 <HAL_GetTick>
 800526a:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800526c:	e008      	b.n	8005280 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800526e:	f7fd fc4f 	bl	8002b10 <HAL_GetTick>
 8005272:	4602      	mov	r2, r0
 8005274:	697b      	ldr	r3, [r7, #20]
 8005276:	1ad3      	subs	r3, r2, r3
 8005278:	2b02      	cmp	r3, #2
 800527a:	d901      	bls.n	8005280 <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 800527c:	2303      	movs	r3, #3
 800527e:	e189      	b.n	8005594 <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005280:	4b8a      	ldr	r3, [pc, #552]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005282:	681b      	ldr	r3, [r3, #0]
 8005284:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005288:	2b00      	cmp	r3, #0
 800528a:	d1f0      	bne.n	800526e <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	f003 0301 	and.w	r3, r3, #1
 8005294:	2b00      	cmp	r3, #0
 8005296:	d009      	beq.n	80052ac <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	685b      	ldr	r3, [r3, #4]
 800529c:	019a      	lsls	r2, r3, #6
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	689b      	ldr	r3, [r3, #8]
 80052a2:	071b      	lsls	r3, r3, #28
 80052a4:	4981      	ldr	r1, [pc, #516]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80052a6:	4313      	orrs	r3, r2
 80052a8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	f003 0302 	and.w	r3, r3, #2
 80052b4:	2b00      	cmp	r3, #0
 80052b6:	d01f      	beq.n	80052f8 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80052b8:	4b7c      	ldr	r3, [pc, #496]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80052ba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80052be:	0f1b      	lsrs	r3, r3, #28
 80052c0:	f003 0307 	and.w	r3, r3, #7
 80052c4:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	685b      	ldr	r3, [r3, #4]
 80052ca:	019a      	lsls	r2, r3, #6
 80052cc:	687b      	ldr	r3, [r7, #4]
 80052ce:	68db      	ldr	r3, [r3, #12]
 80052d0:	061b      	lsls	r3, r3, #24
 80052d2:	431a      	orrs	r2, r3
 80052d4:	693b      	ldr	r3, [r7, #16]
 80052d6:	071b      	lsls	r3, r3, #28
 80052d8:	4974      	ldr	r1, [pc, #464]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80052da:	4313      	orrs	r3, r2
 80052dc:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80052e0:	4b72      	ldr	r3, [pc, #456]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80052e2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80052e6:	f023 021f 	bic.w	r2, r3, #31
 80052ea:	687b      	ldr	r3, [r7, #4]
 80052ec:	69db      	ldr	r3, [r3, #28]
 80052ee:	3b01      	subs	r3, #1
 80052f0:	496e      	ldr	r1, [pc, #440]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80052f2:	4313      	orrs	r3, r2
 80052f4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005300:	2b00      	cmp	r3, #0
 8005302:	d00d      	beq.n	8005320 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	685b      	ldr	r3, [r3, #4]
 8005308:	019a      	lsls	r2, r3, #6
 800530a:	687b      	ldr	r3, [r7, #4]
 800530c:	68db      	ldr	r3, [r3, #12]
 800530e:	061b      	lsls	r3, r3, #24
 8005310:	431a      	orrs	r2, r3
 8005312:	687b      	ldr	r3, [r7, #4]
 8005314:	689b      	ldr	r3, [r3, #8]
 8005316:	071b      	lsls	r3, r3, #28
 8005318:	4964      	ldr	r1, [pc, #400]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800531a:	4313      	orrs	r3, r2
 800531c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8005320:	4b61      	ldr	r3, [pc, #388]	; (80054a8 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8005322:	2201      	movs	r2, #1
 8005324:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005326:	f7fd fbf3 	bl	8002b10 <HAL_GetTick>
 800532a:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800532c:	e008      	b.n	8005340 <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800532e:	f7fd fbef 	bl	8002b10 <HAL_GetTick>
 8005332:	4602      	mov	r2, r0
 8005334:	697b      	ldr	r3, [r7, #20]
 8005336:	1ad3      	subs	r3, r2, r3
 8005338:	2b02      	cmp	r3, #2
 800533a:	d901      	bls.n	8005340 <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 800533c:	2303      	movs	r3, #3
 800533e:	e129      	b.n	8005594 <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005340:	4b5a      	ldr	r3, [pc, #360]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005348:	2b00      	cmp	r3, #0
 800534a:	d0f0      	beq.n	800532e <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	f003 0304 	and.w	r3, r3, #4
 8005354:	2b00      	cmp	r3, #0
 8005356:	d105      	bne.n	8005364 <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	681b      	ldr	r3, [r3, #0]
 800535c:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005360:	2b00      	cmp	r3, #0
 8005362:	d079      	beq.n	8005458 <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005364:	4b52      	ldr	r3, [pc, #328]	; (80054b0 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8005366:	2200      	movs	r2, #0
 8005368:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800536a:	f7fd fbd1 	bl	8002b10 <HAL_GetTick>
 800536e:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005370:	e008      	b.n	8005384 <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005372:	f7fd fbcd 	bl	8002b10 <HAL_GetTick>
 8005376:	4602      	mov	r2, r0
 8005378:	697b      	ldr	r3, [r7, #20]
 800537a:	1ad3      	subs	r3, r2, r3
 800537c:	2b02      	cmp	r3, #2
 800537e:	d901      	bls.n	8005384 <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005380:	2303      	movs	r3, #3
 8005382:	e107      	b.n	8005594 <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005384:	4b49      	ldr	r3, [pc, #292]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800538c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005390:	d0ef      	beq.n	8005372 <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	681b      	ldr	r3, [r3, #0]
 8005396:	f003 0304 	and.w	r3, r3, #4
 800539a:	2b00      	cmp	r3, #0
 800539c:	d020      	beq.n	80053e0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800539e:	4b43      	ldr	r3, [pc, #268]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80053a0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80053a4:	0f1b      	lsrs	r3, r3, #28
 80053a6:	f003 0307 	and.w	r3, r3, #7
 80053aa:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	691b      	ldr	r3, [r3, #16]
 80053b0:	019a      	lsls	r2, r3, #6
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	695b      	ldr	r3, [r3, #20]
 80053b6:	061b      	lsls	r3, r3, #24
 80053b8:	431a      	orrs	r2, r3
 80053ba:	693b      	ldr	r3, [r7, #16]
 80053bc:	071b      	lsls	r3, r3, #28
 80053be:	493b      	ldr	r1, [pc, #236]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80053c0:	4313      	orrs	r3, r2
 80053c2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80053c6:	4b39      	ldr	r3, [pc, #228]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80053c8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80053cc:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	6a1b      	ldr	r3, [r3, #32]
 80053d4:	3b01      	subs	r3, #1
 80053d6:	021b      	lsls	r3, r3, #8
 80053d8:	4934      	ldr	r1, [pc, #208]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80053da:	4313      	orrs	r3, r2
 80053dc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	681b      	ldr	r3, [r3, #0]
 80053e4:	f003 0308 	and.w	r3, r3, #8
 80053e8:	2b00      	cmp	r3, #0
 80053ea:	d01e      	beq.n	800542a <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80053ec:	4b2f      	ldr	r3, [pc, #188]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80053ee:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80053f2:	0e1b      	lsrs	r3, r3, #24
 80053f4:	f003 030f 	and.w	r3, r3, #15
 80053f8:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	691b      	ldr	r3, [r3, #16]
 80053fe:	019a      	lsls	r2, r3, #6
 8005400:	693b      	ldr	r3, [r7, #16]
 8005402:	061b      	lsls	r3, r3, #24
 8005404:	431a      	orrs	r2, r3
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	699b      	ldr	r3, [r3, #24]
 800540a:	071b      	lsls	r3, r3, #28
 800540c:	4927      	ldr	r1, [pc, #156]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800540e:	4313      	orrs	r3, r2
 8005410:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005414:	4b25      	ldr	r3, [pc, #148]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005416:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800541a:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005422:	4922      	ldr	r1, [pc, #136]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005424:	4313      	orrs	r3, r2
 8005426:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800542a:	4b21      	ldr	r3, [pc, #132]	; (80054b0 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800542c:	2201      	movs	r2, #1
 800542e:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005430:	f7fd fb6e 	bl	8002b10 <HAL_GetTick>
 8005434:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005436:	e008      	b.n	800544a <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005438:	f7fd fb6a 	bl	8002b10 <HAL_GetTick>
 800543c:	4602      	mov	r2, r0
 800543e:	697b      	ldr	r3, [r7, #20]
 8005440:	1ad3      	subs	r3, r2, r3
 8005442:	2b02      	cmp	r3, #2
 8005444:	d901      	bls.n	800544a <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005446:	2303      	movs	r3, #3
 8005448:	e0a4      	b.n	8005594 <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800544a:	4b18      	ldr	r3, [pc, #96]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005452:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005456:	d1ef      	bne.n	8005438 <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	681b      	ldr	r3, [r3, #0]
 800545c:	f003 0320 	and.w	r3, r3, #32
 8005460:	2b00      	cmp	r3, #0
 8005462:	f000 808b 	beq.w	800557c <HAL_RCCEx_PeriphCLKConfig+0x350>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8005466:	2300      	movs	r3, #0
 8005468:	60fb      	str	r3, [r7, #12]
 800546a:	4b10      	ldr	r3, [pc, #64]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800546c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800546e:	4a0f      	ldr	r2, [pc, #60]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005470:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005474:	6413      	str	r3, [r2, #64]	; 0x40
 8005476:	4b0d      	ldr	r3, [pc, #52]	; (80054ac <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005478:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800547a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800547e:	60fb      	str	r3, [r7, #12]
 8005480:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8005482:	4b0c      	ldr	r3, [pc, #48]	; (80054b4 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8005484:	681b      	ldr	r3, [r3, #0]
 8005486:	4a0b      	ldr	r2, [pc, #44]	; (80054b4 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8005488:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800548c:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800548e:	f7fd fb3f 	bl	8002b10 <HAL_GetTick>
 8005492:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005494:	e010      	b.n	80054b8 <HAL_RCCEx_PeriphCLKConfig+0x28c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8005496:	f7fd fb3b 	bl	8002b10 <HAL_GetTick>
 800549a:	4602      	mov	r2, r0
 800549c:	697b      	ldr	r3, [r7, #20]
 800549e:	1ad3      	subs	r3, r2, r3
 80054a0:	2b02      	cmp	r3, #2
 80054a2:	d909      	bls.n	80054b8 <HAL_RCCEx_PeriphCLKConfig+0x28c>
      {
        return HAL_TIMEOUT;
 80054a4:	2303      	movs	r3, #3
 80054a6:	e075      	b.n	8005594 <HAL_RCCEx_PeriphCLKConfig+0x368>
 80054a8:	42470068 	.word	0x42470068
 80054ac:	40023800 	.word	0x40023800
 80054b0:	42470070 	.word	0x42470070
 80054b4:	40007000 	.word	0x40007000
    while((PWR->CR & PWR_CR_DBP) == RESET)
 80054b8:	4b38      	ldr	r3, [pc, #224]	; (800559c <HAL_RCCEx_PeriphCLKConfig+0x370>)
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80054c0:	2b00      	cmp	r3, #0
 80054c2:	d0e8      	beq.n	8005496 <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80054c4:	4b36      	ldr	r3, [pc, #216]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80054c6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80054c8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80054cc:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80054ce:	693b      	ldr	r3, [r7, #16]
 80054d0:	2b00      	cmp	r3, #0
 80054d2:	d02f      	beq.n	8005534 <HAL_RCCEx_PeriphCLKConfig+0x308>
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80054d8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80054dc:	693a      	ldr	r2, [r7, #16]
 80054de:	429a      	cmp	r2, r3
 80054e0:	d028      	beq.n	8005534 <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80054e2:	4b2f      	ldr	r3, [pc, #188]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80054e4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80054e6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80054ea:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 80054ec:	4b2d      	ldr	r3, [pc, #180]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 80054ee:	2201      	movs	r2, #1
 80054f0:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 80054f2:	4b2c      	ldr	r3, [pc, #176]	; (80055a4 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 80054f4:	2200      	movs	r2, #0
 80054f6:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 80054f8:	4a29      	ldr	r2, [pc, #164]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80054fa:	693b      	ldr	r3, [r7, #16]
 80054fc:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80054fe:	4b28      	ldr	r3, [pc, #160]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005500:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005502:	f003 0301 	and.w	r3, r3, #1
 8005506:	2b01      	cmp	r3, #1
 8005508:	d114      	bne.n	8005534 <HAL_RCCEx_PeriphCLKConfig+0x308>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 800550a:	f7fd fb01 	bl	8002b10 <HAL_GetTick>
 800550e:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005510:	e00a      	b.n	8005528 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005512:	f7fd fafd 	bl	8002b10 <HAL_GetTick>
 8005516:	4602      	mov	r2, r0
 8005518:	697b      	ldr	r3, [r7, #20]
 800551a:	1ad3      	subs	r3, r2, r3
 800551c:	f241 3288 	movw	r2, #5000	; 0x1388
 8005520:	4293      	cmp	r3, r2
 8005522:	d901      	bls.n	8005528 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
          {
            return HAL_TIMEOUT;
 8005524:	2303      	movs	r3, #3
 8005526:	e035      	b.n	8005594 <HAL_RCCEx_PeriphCLKConfig+0x368>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005528:	4b1d      	ldr	r3, [pc, #116]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800552a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800552c:	f003 0302 	and.w	r3, r3, #2
 8005530:	2b00      	cmp	r3, #0
 8005532:	d0ee      	beq.n	8005512 <HAL_RCCEx_PeriphCLKConfig+0x2e6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005538:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800553c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8005540:	d10d      	bne.n	800555e <HAL_RCCEx_PeriphCLKConfig+0x332>
 8005542:	4b17      	ldr	r3, [pc, #92]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005544:	689b      	ldr	r3, [r3, #8]
 8005546:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 800554a:	687b      	ldr	r3, [r7, #4]
 800554c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800554e:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8005552:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005556:	4912      	ldr	r1, [pc, #72]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005558:	4313      	orrs	r3, r2
 800555a:	608b      	str	r3, [r1, #8]
 800555c:	e005      	b.n	800556a <HAL_RCCEx_PeriphCLKConfig+0x33e>
 800555e:	4b10      	ldr	r3, [pc, #64]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005560:	689b      	ldr	r3, [r3, #8]
 8005562:	4a0f      	ldr	r2, [pc, #60]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005564:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8005568:	6093      	str	r3, [r2, #8]
 800556a:	4b0d      	ldr	r3, [pc, #52]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800556c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005572:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005576:	490a      	ldr	r1, [pc, #40]	; (80055a0 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005578:	4313      	orrs	r3, r2
 800557a:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	f003 0310 	and.w	r3, r3, #16
 8005584:	2b00      	cmp	r3, #0
 8005586:	d004      	beq.n	8005592 <HAL_RCCEx_PeriphCLKConfig+0x366>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 800558e:	4b06      	ldr	r3, [pc, #24]	; (80055a8 <HAL_RCCEx_PeriphCLKConfig+0x37c>)
 8005590:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 8005592:	2300      	movs	r3, #0
}
 8005594:	4618      	mov	r0, r3
 8005596:	3718      	adds	r7, #24
 8005598:	46bd      	mov	sp, r7
 800559a:	bd80      	pop	{r7, pc}
 800559c:	40007000 	.word	0x40007000
 80055a0:	40023800 	.word	0x40023800
 80055a4:	42470e40 	.word	0x42470e40
 80055a8:	424711e0 	.word	0x424711e0

080055ac <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80055ac:	b580      	push	{r7, lr}
 80055ae:	b082      	sub	sp, #8
 80055b0:	af00      	add	r7, sp, #0
 80055b2:	6078      	str	r0, [r7, #4]
 80055b4:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80055b6:	687b      	ldr	r3, [r7, #4]
 80055b8:	2b00      	cmp	r3, #0
 80055ba:	d101      	bne.n	80055c0 <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 80055bc:	2301      	movs	r3, #1
 80055be:	e025      	b.n	800560c <HAL_SDRAM_Init+0x60>
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80055c0:	687b      	ldr	r3, [r7, #4]
 80055c2:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 80055c6:	b2db      	uxtb	r3, r3
 80055c8:	2b00      	cmp	r3, #0
 80055ca:	d106      	bne.n	80055da <HAL_SDRAM_Init+0x2e>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	2200      	movs	r2, #0
 80055d0:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80055d4:	6878      	ldr	r0, [r7, #4]
 80055d6:	f7fd f8b7 	bl	8002748 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	2202      	movs	r2, #2
 80055de:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	681a      	ldr	r2, [r3, #0]
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	3304      	adds	r3, #4
 80055ea:	4619      	mov	r1, r3
 80055ec:	4610      	mov	r0, r2
 80055ee:	f002 fac3 	bl	8007b78 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	6818      	ldr	r0, [r3, #0]
 80055f6:	687b      	ldr	r3, [r7, #4]
 80055f8:	685b      	ldr	r3, [r3, #4]
 80055fa:	461a      	mov	r2, r3
 80055fc:	6839      	ldr	r1, [r7, #0]
 80055fe:	f002 fb2e 	bl	8007c5e <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005602:	687b      	ldr	r3, [r7, #4]
 8005604:	2201      	movs	r2, #1
 8005606:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;
 800560a:	2300      	movs	r3, #0
}
 800560c:	4618      	mov	r0, r3
 800560e:	3708      	adds	r7, #8
 8005610:	46bd      	mov	sp, r7
 8005612:	bd80      	pop	{r7, pc}

08005614 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8005614:	b580      	push	{r7, lr}
 8005616:	b084      	sub	sp, #16
 8005618:	af00      	add	r7, sp, #0
 800561a:	60f8      	str	r0, [r7, #12]
 800561c:	60b9      	str	r1, [r7, #8]
 800561e:	607a      	str	r2, [r7, #4]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005620:	68fb      	ldr	r3, [r7, #12]
 8005622:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8005626:	b2db      	uxtb	r3, r3
 8005628:	2b02      	cmp	r3, #2
 800562a:	d101      	bne.n	8005630 <HAL_SDRAM_SendCommand+0x1c>
  {
    return HAL_BUSY;
 800562c:	2302      	movs	r3, #2
 800562e:	e018      	b.n	8005662 <HAL_SDRAM_SendCommand+0x4e>
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005630:	68fb      	ldr	r3, [r7, #12]
 8005632:	2202      	movs	r2, #2
 8005634:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	687a      	ldr	r2, [r7, #4]
 800563e:	68b9      	ldr	r1, [r7, #8]
 8005640:	4618      	mov	r0, r3
 8005642:	f002 fb8b 	bl	8007d5c <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8005646:	68bb      	ldr	r3, [r7, #8]
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	2b02      	cmp	r3, #2
 800564c:	d104      	bne.n	8005658 <HAL_SDRAM_SendCommand+0x44>
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800564e:	68fb      	ldr	r3, [r7, #12]
 8005650:	2205      	movs	r2, #5
 8005652:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8005656:	e003      	b.n	8005660 <HAL_SDRAM_SendCommand+0x4c>
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005658:	68fb      	ldr	r3, [r7, #12]
 800565a:	2201      	movs	r2, #1
 800565c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8005660:	2300      	movs	r3, #0
}
 8005662:	4618      	mov	r0, r3
 8005664:	3710      	adds	r7, #16
 8005666:	46bd      	mov	sp, r7
 8005668:	bd80      	pop	{r7, pc}

0800566a <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800566a:	b580      	push	{r7, lr}
 800566c:	b082      	sub	sp, #8
 800566e:	af00      	add	r7, sp, #0
 8005670:	6078      	str	r0, [r7, #4]
 8005672:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800567a:	b2db      	uxtb	r3, r3
 800567c:	2b02      	cmp	r3, #2
 800567e:	d101      	bne.n	8005684 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
 8005680:	2302      	movs	r3, #2
 8005682:	e00e      	b.n	80056a2 <HAL_SDRAM_ProgramRefreshRate+0x38>
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	2202      	movs	r2, #2
 8005688:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	681b      	ldr	r3, [r3, #0]
 8005690:	6839      	ldr	r1, [r7, #0]
 8005692:	4618      	mov	r0, r3
 8005694:	f002 fb9e 	bl	8007dd4 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	2201      	movs	r2, #1
 800569c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;   
 80056a0:	2300      	movs	r3, #0
}
 80056a2:	4618      	mov	r0, r3
 80056a4:	3708      	adds	r7, #8
 80056a6:	46bd      	mov	sp, r7
 80056a8:	bd80      	pop	{r7, pc}

080056aa <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80056aa:	b580      	push	{r7, lr}
 80056ac:	b082      	sub	sp, #8
 80056ae:	af00      	add	r7, sp, #0
 80056b0:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80056b2:	687b      	ldr	r3, [r7, #4]
 80056b4:	2b00      	cmp	r3, #0
 80056b6:	d101      	bne.n	80056bc <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 80056b8:	2301      	movs	r3, #1
 80056ba:	e056      	b.n	800576a <HAL_SPI_Init+0xc0>
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	2200      	movs	r2, #0
 80056c0:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80056c8:	b2db      	uxtb	r3, r3
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d106      	bne.n	80056dc <HAL_SPI_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	2200      	movs	r2, #0
 80056d2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 80056d6:	6878      	ldr	r0, [r7, #4]
 80056d8:	f7fc fe0c 	bl	80022f4 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 80056dc:	687b      	ldr	r3, [r7, #4]
 80056de:	2202      	movs	r2, #2
 80056e0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	681b      	ldr	r3, [r3, #0]
 80056e8:	681a      	ldr	r2, [r3, #0]
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	681b      	ldr	r3, [r3, #0]
 80056ee:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80056f2:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	685a      	ldr	r2, [r3, #4]
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	689b      	ldr	r3, [r3, #8]
 80056fc:	431a      	orrs	r2, r3
 80056fe:	687b      	ldr	r3, [r7, #4]
 8005700:	68db      	ldr	r3, [r3, #12]
 8005702:	431a      	orrs	r2, r3
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	691b      	ldr	r3, [r3, #16]
 8005708:	431a      	orrs	r2, r3
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	695b      	ldr	r3, [r3, #20]
 800570e:	431a      	orrs	r2, r3
 8005710:	687b      	ldr	r3, [r7, #4]
 8005712:	699b      	ldr	r3, [r3, #24]
 8005714:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005718:	431a      	orrs	r2, r3
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	69db      	ldr	r3, [r3, #28]
 800571e:	431a      	orrs	r2, r3
 8005720:	687b      	ldr	r3, [r7, #4]
 8005722:	6a1b      	ldr	r3, [r3, #32]
 8005724:	ea42 0103 	orr.w	r1, r2, r3
 8005728:	687b      	ldr	r3, [r7, #4]
 800572a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	430a      	orrs	r2, r1
 8005732:	601a      	str	r2, [r3, #0]
                                  hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_SSM) |
                                  hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalculation));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	699b      	ldr	r3, [r3, #24]
 8005738:	0c1b      	lsrs	r3, r3, #16
 800573a:	f003 0104 	and.w	r1, r3, #4
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005742:	687b      	ldr	r3, [r7, #4]
 8005744:	681b      	ldr	r3, [r3, #0]
 8005746:	430a      	orrs	r2, r1
 8005748:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800574a:	687b      	ldr	r3, [r7, #4]
 800574c:	681b      	ldr	r3, [r3, #0]
 800574e:	69da      	ldr	r2, [r3, #28]
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005758:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	2200      	movs	r2, #0
 800575e:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	2201      	movs	r2, #1
 8005764:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8005768:	2300      	movs	r3, #0
}
 800576a:	4618      	mov	r0, r3
 800576c:	3708      	adds	r7, #8
 800576e:	46bd      	mov	sp, r7
 8005770:	bd80      	pop	{r7, pc}

08005772 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005772:	b580      	push	{r7, lr}
 8005774:	b088      	sub	sp, #32
 8005776:	af00      	add	r7, sp, #0
 8005778:	60f8      	str	r0, [r7, #12]
 800577a:	60b9      	str	r1, [r7, #8]
 800577c:	603b      	str	r3, [r7, #0]
 800577e:	4613      	mov	r3, r2
 8005780:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8005782:	2300      	movs	r3, #0
 8005784:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005786:	68fb      	ldr	r3, [r7, #12]
 8005788:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800578c:	2b01      	cmp	r3, #1
 800578e:	d101      	bne.n	8005794 <HAL_SPI_Transmit+0x22>
 8005790:	2302      	movs	r3, #2
 8005792:	e11e      	b.n	80059d2 <HAL_SPI_Transmit+0x260>
 8005794:	68fb      	ldr	r3, [r7, #12]
 8005796:	2201      	movs	r2, #1
 8005798:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800579c:	f7fd f9b8 	bl	8002b10 <HAL_GetTick>
 80057a0:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 80057a2:	88fb      	ldrh	r3, [r7, #6]
 80057a4:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 80057a6:	68fb      	ldr	r3, [r7, #12]
 80057a8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80057ac:	b2db      	uxtb	r3, r3
 80057ae:	2b01      	cmp	r3, #1
 80057b0:	d002      	beq.n	80057b8 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 80057b2:	2302      	movs	r3, #2
 80057b4:	77fb      	strb	r3, [r7, #31]
    goto error;
 80057b6:	e103      	b.n	80059c0 <HAL_SPI_Transmit+0x24e>
  }

  if ((pData == NULL) || (Size == 0U))
 80057b8:	68bb      	ldr	r3, [r7, #8]
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	d002      	beq.n	80057c4 <HAL_SPI_Transmit+0x52>
 80057be:	88fb      	ldrh	r3, [r7, #6]
 80057c0:	2b00      	cmp	r3, #0
 80057c2:	d102      	bne.n	80057ca <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 80057c4:	2301      	movs	r3, #1
 80057c6:	77fb      	strb	r3, [r7, #31]
    goto error;
 80057c8:	e0fa      	b.n	80059c0 <HAL_SPI_Transmit+0x24e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80057ca:	68fb      	ldr	r3, [r7, #12]
 80057cc:	2203      	movs	r2, #3
 80057ce:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80057d2:	68fb      	ldr	r3, [r7, #12]
 80057d4:	2200      	movs	r2, #0
 80057d6:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80057d8:	68fb      	ldr	r3, [r7, #12]
 80057da:	68ba      	ldr	r2, [r7, #8]
 80057dc:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 80057de:	68fb      	ldr	r3, [r7, #12]
 80057e0:	88fa      	ldrh	r2, [r7, #6]
 80057e2:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 80057e4:	68fb      	ldr	r3, [r7, #12]
 80057e6:	88fa      	ldrh	r2, [r7, #6]
 80057e8:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80057ea:	68fb      	ldr	r3, [r7, #12]
 80057ec:	2200      	movs	r2, #0
 80057ee:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80057f0:	68fb      	ldr	r3, [r7, #12]
 80057f2:	2200      	movs	r2, #0
 80057f4:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80057f6:	68fb      	ldr	r3, [r7, #12]
 80057f8:	2200      	movs	r2, #0
 80057fa:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 80057fc:	68fb      	ldr	r3, [r7, #12]
 80057fe:	2200      	movs	r2, #0
 8005800:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8005802:	68fb      	ldr	r3, [r7, #12]
 8005804:	2200      	movs	r2, #0
 8005806:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005808:	68fb      	ldr	r3, [r7, #12]
 800580a:	689b      	ldr	r3, [r3, #8]
 800580c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005810:	d107      	bne.n	8005822 <HAL_SPI_Transmit+0xb0>
  {
    SPI_1LINE_TX(hspi);
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	681a      	ldr	r2, [r3, #0]
 8005818:	68fb      	ldr	r3, [r7, #12]
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005820:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005822:	68fb      	ldr	r3, [r7, #12]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	681b      	ldr	r3, [r3, #0]
 8005828:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800582c:	2b40      	cmp	r3, #64	; 0x40
 800582e:	d007      	beq.n	8005840 <HAL_SPI_Transmit+0xce>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	681b      	ldr	r3, [r3, #0]
 8005834:	681a      	ldr	r2, [r3, #0]
 8005836:	68fb      	ldr	r3, [r7, #12]
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800583e:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005840:	68fb      	ldr	r3, [r7, #12]
 8005842:	68db      	ldr	r3, [r3, #12]
 8005844:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005848:	d14b      	bne.n	80058e2 <HAL_SPI_Transmit+0x170>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800584a:	68fb      	ldr	r3, [r7, #12]
 800584c:	685b      	ldr	r3, [r3, #4]
 800584e:	2b00      	cmp	r3, #0
 8005850:	d002      	beq.n	8005858 <HAL_SPI_Transmit+0xe6>
 8005852:	8afb      	ldrh	r3, [r7, #22]
 8005854:	2b01      	cmp	r3, #1
 8005856:	d13e      	bne.n	80058d6 <HAL_SPI_Transmit+0x164>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005858:	68fb      	ldr	r3, [r7, #12]
 800585a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800585c:	881a      	ldrh	r2, [r3, #0]
 800585e:	68fb      	ldr	r3, [r7, #12]
 8005860:	681b      	ldr	r3, [r3, #0]
 8005862:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005864:	68fb      	ldr	r3, [r7, #12]
 8005866:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005868:	1c9a      	adds	r2, r3, #2
 800586a:	68fb      	ldr	r3, [r7, #12]
 800586c:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800586e:	68fb      	ldr	r3, [r7, #12]
 8005870:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005872:	b29b      	uxth	r3, r3
 8005874:	3b01      	subs	r3, #1
 8005876:	b29a      	uxth	r2, r3
 8005878:	68fb      	ldr	r3, [r7, #12]
 800587a:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 800587c:	e02b      	b.n	80058d6 <HAL_SPI_Transmit+0x164>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800587e:	68fb      	ldr	r3, [r7, #12]
 8005880:	681b      	ldr	r3, [r3, #0]
 8005882:	689b      	ldr	r3, [r3, #8]
 8005884:	f003 0302 	and.w	r3, r3, #2
 8005888:	2b02      	cmp	r3, #2
 800588a:	d112      	bne.n	80058b2 <HAL_SPI_Transmit+0x140>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800588c:	68fb      	ldr	r3, [r7, #12]
 800588e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005890:	881a      	ldrh	r2, [r3, #0]
 8005892:	68fb      	ldr	r3, [r7, #12]
 8005894:	681b      	ldr	r3, [r3, #0]
 8005896:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005898:	68fb      	ldr	r3, [r7, #12]
 800589a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800589c:	1c9a      	adds	r2, r3, #2
 800589e:	68fb      	ldr	r3, [r7, #12]
 80058a0:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 80058a2:	68fb      	ldr	r3, [r7, #12]
 80058a4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80058a6:	b29b      	uxth	r3, r3
 80058a8:	3b01      	subs	r3, #1
 80058aa:	b29a      	uxth	r2, r3
 80058ac:	68fb      	ldr	r3, [r7, #12]
 80058ae:	86da      	strh	r2, [r3, #54]	; 0x36
 80058b0:	e011      	b.n	80058d6 <HAL_SPI_Transmit+0x164>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80058b2:	f7fd f92d 	bl	8002b10 <HAL_GetTick>
 80058b6:	4602      	mov	r2, r0
 80058b8:	69bb      	ldr	r3, [r7, #24]
 80058ba:	1ad3      	subs	r3, r2, r3
 80058bc:	683a      	ldr	r2, [r7, #0]
 80058be:	429a      	cmp	r2, r3
 80058c0:	d803      	bhi.n	80058ca <HAL_SPI_Transmit+0x158>
 80058c2:	683b      	ldr	r3, [r7, #0]
 80058c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80058c8:	d102      	bne.n	80058d0 <HAL_SPI_Transmit+0x15e>
 80058ca:	683b      	ldr	r3, [r7, #0]
 80058cc:	2b00      	cmp	r3, #0
 80058ce:	d102      	bne.n	80058d6 <HAL_SPI_Transmit+0x164>
        {
          errorcode = HAL_TIMEOUT;
 80058d0:	2303      	movs	r3, #3
 80058d2:	77fb      	strb	r3, [r7, #31]
          goto error;
 80058d4:	e074      	b.n	80059c0 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 80058d6:	68fb      	ldr	r3, [r7, #12]
 80058d8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80058da:	b29b      	uxth	r3, r3
 80058dc:	2b00      	cmp	r3, #0
 80058de:	d1ce      	bne.n	800587e <HAL_SPI_Transmit+0x10c>
 80058e0:	e04c      	b.n	800597c <HAL_SPI_Transmit+0x20a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80058e2:	68fb      	ldr	r3, [r7, #12]
 80058e4:	685b      	ldr	r3, [r3, #4]
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	d002      	beq.n	80058f0 <HAL_SPI_Transmit+0x17e>
 80058ea:	8afb      	ldrh	r3, [r7, #22]
 80058ec:	2b01      	cmp	r3, #1
 80058ee:	d140      	bne.n	8005972 <HAL_SPI_Transmit+0x200>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80058f0:	68fb      	ldr	r3, [r7, #12]
 80058f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80058f4:	68fb      	ldr	r3, [r7, #12]
 80058f6:	681b      	ldr	r3, [r3, #0]
 80058f8:	330c      	adds	r3, #12
 80058fa:	7812      	ldrb	r2, [r2, #0]
 80058fc:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80058fe:	68fb      	ldr	r3, [r7, #12]
 8005900:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005902:	1c5a      	adds	r2, r3, #1
 8005904:	68fb      	ldr	r3, [r7, #12]
 8005906:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8005908:	68fb      	ldr	r3, [r7, #12]
 800590a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800590c:	b29b      	uxth	r3, r3
 800590e:	3b01      	subs	r3, #1
 8005910:	b29a      	uxth	r2, r3
 8005912:	68fb      	ldr	r3, [r7, #12]
 8005914:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8005916:	e02c      	b.n	8005972 <HAL_SPI_Transmit+0x200>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005918:	68fb      	ldr	r3, [r7, #12]
 800591a:	681b      	ldr	r3, [r3, #0]
 800591c:	689b      	ldr	r3, [r3, #8]
 800591e:	f003 0302 	and.w	r3, r3, #2
 8005922:	2b02      	cmp	r3, #2
 8005924:	d113      	bne.n	800594e <HAL_SPI_Transmit+0x1dc>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005926:	68fb      	ldr	r3, [r7, #12]
 8005928:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	330c      	adds	r3, #12
 8005930:	7812      	ldrb	r2, [r2, #0]
 8005932:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005934:	68fb      	ldr	r3, [r7, #12]
 8005936:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005938:	1c5a      	adds	r2, r3, #1
 800593a:	68fb      	ldr	r3, [r7, #12]
 800593c:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 800593e:	68fb      	ldr	r3, [r7, #12]
 8005940:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005942:	b29b      	uxth	r3, r3
 8005944:	3b01      	subs	r3, #1
 8005946:	b29a      	uxth	r2, r3
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	86da      	strh	r2, [r3, #54]	; 0x36
 800594c:	e011      	b.n	8005972 <HAL_SPI_Transmit+0x200>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800594e:	f7fd f8df 	bl	8002b10 <HAL_GetTick>
 8005952:	4602      	mov	r2, r0
 8005954:	69bb      	ldr	r3, [r7, #24]
 8005956:	1ad3      	subs	r3, r2, r3
 8005958:	683a      	ldr	r2, [r7, #0]
 800595a:	429a      	cmp	r2, r3
 800595c:	d803      	bhi.n	8005966 <HAL_SPI_Transmit+0x1f4>
 800595e:	683b      	ldr	r3, [r7, #0]
 8005960:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005964:	d102      	bne.n	800596c <HAL_SPI_Transmit+0x1fa>
 8005966:	683b      	ldr	r3, [r7, #0]
 8005968:	2b00      	cmp	r3, #0
 800596a:	d102      	bne.n	8005972 <HAL_SPI_Transmit+0x200>
        {
          errorcode = HAL_TIMEOUT;
 800596c:	2303      	movs	r3, #3
 800596e:	77fb      	strb	r3, [r7, #31]
          goto error;
 8005970:	e026      	b.n	80059c0 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 8005972:	68fb      	ldr	r3, [r7, #12]
 8005974:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005976:	b29b      	uxth	r3, r3
 8005978:	2b00      	cmp	r3, #0
 800597a:	d1cd      	bne.n	8005918 <HAL_SPI_Transmit+0x1a6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800597c:	69ba      	ldr	r2, [r7, #24]
 800597e:	6839      	ldr	r1, [r7, #0]
 8005980:	68f8      	ldr	r0, [r7, #12]
 8005982:	f000 f895 	bl	8005ab0 <SPI_EndRxTxTransaction>
 8005986:	4603      	mov	r3, r0
 8005988:	2b00      	cmp	r3, #0
 800598a:	d002      	beq.n	8005992 <HAL_SPI_Transmit+0x220>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800598c:	68fb      	ldr	r3, [r7, #12]
 800598e:	2220      	movs	r2, #32
 8005990:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005992:	68fb      	ldr	r3, [r7, #12]
 8005994:	689b      	ldr	r3, [r3, #8]
 8005996:	2b00      	cmp	r3, #0
 8005998:	d10a      	bne.n	80059b0 <HAL_SPI_Transmit+0x23e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800599a:	2300      	movs	r3, #0
 800599c:	613b      	str	r3, [r7, #16]
 800599e:	68fb      	ldr	r3, [r7, #12]
 80059a0:	681b      	ldr	r3, [r3, #0]
 80059a2:	68db      	ldr	r3, [r3, #12]
 80059a4:	613b      	str	r3, [r7, #16]
 80059a6:	68fb      	ldr	r3, [r7, #12]
 80059a8:	681b      	ldr	r3, [r3, #0]
 80059aa:	689b      	ldr	r3, [r3, #8]
 80059ac:	613b      	str	r3, [r7, #16]
 80059ae:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80059b0:	68fb      	ldr	r3, [r7, #12]
 80059b2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80059b4:	2b00      	cmp	r3, #0
 80059b6:	d002      	beq.n	80059be <HAL_SPI_Transmit+0x24c>
  {
    errorcode = HAL_ERROR;
 80059b8:	2301      	movs	r3, #1
 80059ba:	77fb      	strb	r3, [r7, #31]
 80059bc:	e000      	b.n	80059c0 <HAL_SPI_Transmit+0x24e>
  }

error:
 80059be:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 80059c0:	68fb      	ldr	r3, [r7, #12]
 80059c2:	2201      	movs	r2, #1
 80059c4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80059c8:	68fb      	ldr	r3, [r7, #12]
 80059ca:	2200      	movs	r2, #0
 80059cc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 80059d0:	7ffb      	ldrb	r3, [r7, #31]
}
 80059d2:	4618      	mov	r0, r3
 80059d4:	3720      	adds	r7, #32
 80059d6:	46bd      	mov	sp, r7
 80059d8:	bd80      	pop	{r7, pc}

080059da <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80059da:	b580      	push	{r7, lr}
 80059dc:	b084      	sub	sp, #16
 80059de:	af00      	add	r7, sp, #0
 80059e0:	60f8      	str	r0, [r7, #12]
 80059e2:	60b9      	str	r1, [r7, #8]
 80059e4:	603b      	str	r3, [r7, #0]
 80059e6:	4613      	mov	r3, r2
 80059e8:	71fb      	strb	r3, [r7, #7]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80059ea:	e04c      	b.n	8005a86 <SPI_WaitFlagStateUntilTimeout+0xac>
  {
    if (Timeout != HAL_MAX_DELAY)
 80059ec:	683b      	ldr	r3, [r7, #0]
 80059ee:	f1b3 3fff 	cmp.w	r3, #4294967295
 80059f2:	d048      	beq.n	8005a86 <SPI_WaitFlagStateUntilTimeout+0xac>
    {
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 80059f4:	f7fd f88c 	bl	8002b10 <HAL_GetTick>
 80059f8:	4602      	mov	r2, r0
 80059fa:	69bb      	ldr	r3, [r7, #24]
 80059fc:	1ad3      	subs	r3, r2, r3
 80059fe:	683a      	ldr	r2, [r7, #0]
 8005a00:	429a      	cmp	r2, r3
 8005a02:	d902      	bls.n	8005a0a <SPI_WaitFlagStateUntilTimeout+0x30>
 8005a04:	683b      	ldr	r3, [r7, #0]
 8005a06:	2b00      	cmp	r3, #0
 8005a08:	d13d      	bne.n	8005a86 <SPI_WaitFlagStateUntilTimeout+0xac>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
        on both master and slave sides in order to resynchronize the master
        and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005a0a:	68fb      	ldr	r3, [r7, #12]
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	685a      	ldr	r2, [r3, #4]
 8005a10:	68fb      	ldr	r3, [r7, #12]
 8005a12:	681b      	ldr	r3, [r3, #0]
 8005a14:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005a18:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005a1a:	68fb      	ldr	r3, [r7, #12]
 8005a1c:	685b      	ldr	r3, [r3, #4]
 8005a1e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005a22:	d111      	bne.n	8005a48 <SPI_WaitFlagStateUntilTimeout+0x6e>
 8005a24:	68fb      	ldr	r3, [r7, #12]
 8005a26:	689b      	ldr	r3, [r3, #8]
 8005a28:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005a2c:	d004      	beq.n	8005a38 <SPI_WaitFlagStateUntilTimeout+0x5e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005a2e:	68fb      	ldr	r3, [r7, #12]
 8005a30:	689b      	ldr	r3, [r3, #8]
 8005a32:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005a36:	d107      	bne.n	8005a48 <SPI_WaitFlagStateUntilTimeout+0x6e>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8005a38:	68fb      	ldr	r3, [r7, #12]
 8005a3a:	681b      	ldr	r3, [r3, #0]
 8005a3c:	681a      	ldr	r2, [r3, #0]
 8005a3e:	68fb      	ldr	r3, [r7, #12]
 8005a40:	681b      	ldr	r3, [r3, #0]
 8005a42:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005a46:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005a48:	68fb      	ldr	r3, [r7, #12]
 8005a4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005a4c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005a50:	d10f      	bne.n	8005a72 <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          SPI_RESET_CRC(hspi);
 8005a52:	68fb      	ldr	r3, [r7, #12]
 8005a54:	681b      	ldr	r3, [r3, #0]
 8005a56:	681a      	ldr	r2, [r3, #0]
 8005a58:	68fb      	ldr	r3, [r7, #12]
 8005a5a:	681b      	ldr	r3, [r3, #0]
 8005a5c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005a60:	601a      	str	r2, [r3, #0]
 8005a62:	68fb      	ldr	r3, [r7, #12]
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	681a      	ldr	r2, [r3, #0]
 8005a68:	68fb      	ldr	r3, [r7, #12]
 8005a6a:	681b      	ldr	r3, [r3, #0]
 8005a6c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005a70:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8005a72:	68fb      	ldr	r3, [r7, #12]
 8005a74:	2201      	movs	r2, #1
 8005a76:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8005a7a:	68fb      	ldr	r3, [r7, #12]
 8005a7c:	2200      	movs	r2, #0
 8005a7e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 8005a82:	2303      	movs	r3, #3
 8005a84:	e00f      	b.n	8005aa6 <SPI_WaitFlagStateUntilTimeout+0xcc>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005a86:	68fb      	ldr	r3, [r7, #12]
 8005a88:	681b      	ldr	r3, [r3, #0]
 8005a8a:	689a      	ldr	r2, [r3, #8]
 8005a8c:	68bb      	ldr	r3, [r7, #8]
 8005a8e:	4013      	ands	r3, r2
 8005a90:	68ba      	ldr	r2, [r7, #8]
 8005a92:	429a      	cmp	r2, r3
 8005a94:	bf0c      	ite	eq
 8005a96:	2301      	moveq	r3, #1
 8005a98:	2300      	movne	r3, #0
 8005a9a:	b2db      	uxtb	r3, r3
 8005a9c:	461a      	mov	r2, r3
 8005a9e:	79fb      	ldrb	r3, [r7, #7]
 8005aa0:	429a      	cmp	r2, r3
 8005aa2:	d1a3      	bne.n	80059ec <SPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }

  return HAL_OK;
 8005aa4:	2300      	movs	r3, #0
}
 8005aa6:	4618      	mov	r0, r3
 8005aa8:	3710      	adds	r7, #16
 8005aaa:	46bd      	mov	sp, r7
 8005aac:	bd80      	pop	{r7, pc}
	...

08005ab0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005ab0:	b580      	push	{r7, lr}
 8005ab2:	b088      	sub	sp, #32
 8005ab4:	af02      	add	r7, sp, #8
 8005ab6:	60f8      	str	r0, [r7, #12]
 8005ab8:	60b9      	str	r1, [r7, #8]
 8005aba:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005abc:	4b1b      	ldr	r3, [pc, #108]	; (8005b2c <SPI_EndRxTxTransaction+0x7c>)
 8005abe:	681b      	ldr	r3, [r3, #0]
 8005ac0:	4a1b      	ldr	r2, [pc, #108]	; (8005b30 <SPI_EndRxTxTransaction+0x80>)
 8005ac2:	fba2 2303 	umull	r2, r3, r2, r3
 8005ac6:	0d5b      	lsrs	r3, r3, #21
 8005ac8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005acc:	fb02 f303 	mul.w	r3, r2, r3
 8005ad0:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005ad2:	68fb      	ldr	r3, [r7, #12]
 8005ad4:	685b      	ldr	r3, [r3, #4]
 8005ad6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005ada:	d112      	bne.n	8005b02 <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	9300      	str	r3, [sp, #0]
 8005ae0:	68bb      	ldr	r3, [r7, #8]
 8005ae2:	2200      	movs	r2, #0
 8005ae4:	2180      	movs	r1, #128	; 0x80
 8005ae6:	68f8      	ldr	r0, [r7, #12]
 8005ae8:	f7ff ff77 	bl	80059da <SPI_WaitFlagStateUntilTimeout>
 8005aec:	4603      	mov	r3, r0
 8005aee:	2b00      	cmp	r3, #0
 8005af0:	d016      	beq.n	8005b20 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005af6:	f043 0220 	orr.w	r2, r3, #32
 8005afa:	68fb      	ldr	r3, [r7, #12]
 8005afc:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8005afe:	2303      	movs	r3, #3
 8005b00:	e00f      	b.n	8005b22 <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8005b02:	697b      	ldr	r3, [r7, #20]
 8005b04:	2b00      	cmp	r3, #0
 8005b06:	d00a      	beq.n	8005b1e <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8005b08:	697b      	ldr	r3, [r7, #20]
 8005b0a:	3b01      	subs	r3, #1
 8005b0c:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	689b      	ldr	r3, [r3, #8]
 8005b14:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005b18:	2b80      	cmp	r3, #128	; 0x80
 8005b1a:	d0f2      	beq.n	8005b02 <SPI_EndRxTxTransaction+0x52>
 8005b1c:	e000      	b.n	8005b20 <SPI_EndRxTxTransaction+0x70>
        break;
 8005b1e:	bf00      	nop
  }

  return HAL_OK;
 8005b20:	2300      	movs	r3, #0
}
 8005b22:	4618      	mov	r0, r3
 8005b24:	3718      	adds	r7, #24
 8005b26:	46bd      	mov	sp, r7
 8005b28:	bd80      	pop	{r7, pc}
 8005b2a:	bf00      	nop
 8005b2c:	20000004 	.word	0x20000004
 8005b30:	165e9f81 	.word	0x165e9f81

08005b34 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8005b34:	b580      	push	{r7, lr}
 8005b36:	b082      	sub	sp, #8
 8005b38:	af00      	add	r7, sp, #0
 8005b3a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	2b00      	cmp	r3, #0
 8005b40:	d101      	bne.n	8005b46 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8005b42:	2301      	movs	r3, #1
 8005b44:	e01d      	b.n	8005b82 <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005b4c:	b2db      	uxtb	r3, r3
 8005b4e:	2b00      	cmp	r3, #0
 8005b50:	d106      	bne.n	8005b60 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	2200      	movs	r2, #0
 8005b56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8005b5a:	6878      	ldr	r0, [r7, #4]
 8005b5c:	f7fc fc12 	bl	8002384 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	2202      	movs	r2, #2
 8005b64:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	681a      	ldr	r2, [r3, #0]
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	3304      	adds	r3, #4
 8005b70:	4619      	mov	r1, r3
 8005b72:	4610      	mov	r0, r2
 8005b74:	f000 fc92 	bl	800649c <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	2201      	movs	r2, #1
 8005b7c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005b80:	2300      	movs	r3, #0
}
 8005b82:	4618      	mov	r0, r3
 8005b84:	3708      	adds	r7, #8
 8005b86:	46bd      	mov	sp, r7
 8005b88:	bd80      	pop	{r7, pc}

08005b8a <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8005b8a:	b480      	push	{r7}
 8005b8c:	b085      	sub	sp, #20
 8005b8e:	af00      	add	r7, sp, #0
 8005b90:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8005b92:	687b      	ldr	r3, [r7, #4]
 8005b94:	681b      	ldr	r3, [r3, #0]
 8005b96:	68da      	ldr	r2, [r3, #12]
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	f042 0201 	orr.w	r2, r2, #1
 8005ba0:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	681b      	ldr	r3, [r3, #0]
 8005ba6:	689b      	ldr	r3, [r3, #8]
 8005ba8:	f003 0307 	and.w	r3, r3, #7
 8005bac:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005bae:	68fb      	ldr	r3, [r7, #12]
 8005bb0:	2b06      	cmp	r3, #6
 8005bb2:	d007      	beq.n	8005bc4 <HAL_TIM_Base_Start_IT+0x3a>
  {
    __HAL_TIM_ENABLE(htim);
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	681a      	ldr	r2, [r3, #0]
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	681b      	ldr	r3, [r3, #0]
 8005bbe:	f042 0201 	orr.w	r2, r2, #1
 8005bc2:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005bc4:	2300      	movs	r3, #0
}
 8005bc6:	4618      	mov	r0, r3
 8005bc8:	3714      	adds	r7, #20
 8005bca:	46bd      	mov	sp, r7
 8005bcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bd0:	4770      	bx	lr

08005bd2 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8005bd2:	b580      	push	{r7, lr}
 8005bd4:	b082      	sub	sp, #8
 8005bd6:	af00      	add	r7, sp, #0
 8005bd8:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	2b00      	cmp	r3, #0
 8005bde:	d101      	bne.n	8005be4 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8005be0:	2301      	movs	r3, #1
 8005be2:	e01d      	b.n	8005c20 <HAL_TIM_PWM_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005bea:	b2db      	uxtb	r3, r3
 8005bec:	2b00      	cmp	r3, #0
 8005bee:	d106      	bne.n	8005bfe <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	2200      	movs	r2, #0
 8005bf4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8005bf8:	6878      	ldr	r0, [r7, #4]
 8005bfa:	f000 f815 	bl	8005c28 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	2202      	movs	r2, #2
 8005c02:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	681a      	ldr	r2, [r3, #0]
 8005c0a:	687b      	ldr	r3, [r7, #4]
 8005c0c:	3304      	adds	r3, #4
 8005c0e:	4619      	mov	r1, r3
 8005c10:	4610      	mov	r0, r2
 8005c12:	f000 fc43 	bl	800649c <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	2201      	movs	r2, #1
 8005c1a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005c1e:	2300      	movs	r3, #0
}
 8005c20:	4618      	mov	r0, r3
 8005c22:	3708      	adds	r7, #8
 8005c24:	46bd      	mov	sp, r7
 8005c26:	bd80      	pop	{r7, pc}

08005c28 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8005c28:	b480      	push	{r7}
 8005c2a:	b083      	sub	sp, #12
 8005c2c:	af00      	add	r7, sp, #0
 8005c2e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8005c30:	bf00      	nop
 8005c32:	370c      	adds	r7, #12
 8005c34:	46bd      	mov	sp, r7
 8005c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c3a:	4770      	bx	lr

08005c3c <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8005c3c:	b580      	push	{r7, lr}
 8005c3e:	b084      	sub	sp, #16
 8005c40:	af00      	add	r7, sp, #0
 8005c42:	6078      	str	r0, [r7, #4]
 8005c44:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	681b      	ldr	r3, [r3, #0]
 8005c4a:	2201      	movs	r2, #1
 8005c4c:	6839      	ldr	r1, [r7, #0]
 8005c4e:	4618      	mov	r0, r3
 8005c50:	f001 f838 	bl	8006cc4 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8005c54:	687b      	ldr	r3, [r7, #4]
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	4a15      	ldr	r2, [pc, #84]	; (8005cb0 <HAL_TIM_PWM_Start+0x74>)
 8005c5a:	4293      	cmp	r3, r2
 8005c5c:	d004      	beq.n	8005c68 <HAL_TIM_PWM_Start+0x2c>
 8005c5e:	687b      	ldr	r3, [r7, #4]
 8005c60:	681b      	ldr	r3, [r3, #0]
 8005c62:	4a14      	ldr	r2, [pc, #80]	; (8005cb4 <HAL_TIM_PWM_Start+0x78>)
 8005c64:	4293      	cmp	r3, r2
 8005c66:	d101      	bne.n	8005c6c <HAL_TIM_PWM_Start+0x30>
 8005c68:	2301      	movs	r3, #1
 8005c6a:	e000      	b.n	8005c6e <HAL_TIM_PWM_Start+0x32>
 8005c6c:	2300      	movs	r3, #0
 8005c6e:	2b00      	cmp	r3, #0
 8005c70:	d007      	beq.n	8005c82 <HAL_TIM_PWM_Start+0x46>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	681b      	ldr	r3, [r3, #0]
 8005c7c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005c80:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	681b      	ldr	r3, [r3, #0]
 8005c86:	689b      	ldr	r3, [r3, #8]
 8005c88:	f003 0307 	and.w	r3, r3, #7
 8005c8c:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	2b06      	cmp	r3, #6
 8005c92:	d007      	beq.n	8005ca4 <HAL_TIM_PWM_Start+0x68>
  {
    __HAL_TIM_ENABLE(htim);
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	681b      	ldr	r3, [r3, #0]
 8005c98:	681a      	ldr	r2, [r3, #0]
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	681b      	ldr	r3, [r3, #0]
 8005c9e:	f042 0201 	orr.w	r2, r2, #1
 8005ca2:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005ca4:	2300      	movs	r3, #0
}
 8005ca6:	4618      	mov	r0, r3
 8005ca8:	3710      	adds	r7, #16
 8005caa:	46bd      	mov	sp, r7
 8005cac:	bd80      	pop	{r7, pc}
 8005cae:	bf00      	nop
 8005cb0:	40010000 	.word	0x40010000
 8005cb4:	40010400 	.word	0x40010400

08005cb8 <HAL_TIM_IC_Init>:
  *         Ex: call @ref HAL_TIM_IC_DeInit() before HAL_TIM_IC_Init()
  * @param  htim TIM Input Capture handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_Init(TIM_HandleTypeDef *htim)
{
 8005cb8:	b580      	push	{r7, lr}
 8005cba:	b082      	sub	sp, #8
 8005cbc:	af00      	add	r7, sp, #0
 8005cbe:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8005cc0:	687b      	ldr	r3, [r7, #4]
 8005cc2:	2b00      	cmp	r3, #0
 8005cc4:	d101      	bne.n	8005cca <HAL_TIM_IC_Init+0x12>
  {
    return HAL_ERROR;
 8005cc6:	2301      	movs	r3, #1
 8005cc8:	e01d      	b.n	8005d06 <HAL_TIM_IC_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005cd0:	b2db      	uxtb	r3, r3
 8005cd2:	2b00      	cmp	r3, #0
 8005cd4:	d106      	bne.n	8005ce4 <HAL_TIM_IC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	2200      	movs	r2, #0
 8005cda:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->IC_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_IC_MspInit(htim);
 8005cde:	6878      	ldr	r0, [r7, #4]
 8005ce0:	f000 f815 	bl	8005d0e <HAL_TIM_IC_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	2202      	movs	r2, #2
 8005ce8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the input capture */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	681a      	ldr	r2, [r3, #0]
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	3304      	adds	r3, #4
 8005cf4:	4619      	mov	r1, r3
 8005cf6:	4610      	mov	r0, r2
 8005cf8:	f000 fbd0 	bl	800649c <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	2201      	movs	r2, #1
 8005d00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005d04:	2300      	movs	r3, #0
}
 8005d06:	4618      	mov	r0, r3
 8005d08:	3708      	adds	r7, #8
 8005d0a:	46bd      	mov	sp, r7
 8005d0c:	bd80      	pop	{r7, pc}

08005d0e <HAL_TIM_IC_MspInit>:
  * @brief  Initializes the TIM Input Capture MSP.
  * @param  htim TIM Input Capture handle
  * @retval None
  */
__weak void HAL_TIM_IC_MspInit(TIM_HandleTypeDef *htim)
{
 8005d0e:	b480      	push	{r7}
 8005d10:	b083      	sub	sp, #12
 8005d12:	af00      	add	r7, sp, #0
 8005d14:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_MspInit could be implemented in the user file
   */
}
 8005d16:	bf00      	nop
 8005d18:	370c      	adds	r7, #12
 8005d1a:	46bd      	mov	sp, r7
 8005d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d20:	4770      	bx	lr

08005d22 <HAL_TIM_IC_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8005d22:	b580      	push	{r7, lr}
 8005d24:	b084      	sub	sp, #16
 8005d26:	af00      	add	r7, sp, #0
 8005d28:	6078      	str	r0, [r7, #4]
 8005d2a:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Input Capture channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	681b      	ldr	r3, [r3, #0]
 8005d30:	2201      	movs	r2, #1
 8005d32:	6839      	ldr	r1, [r7, #0]
 8005d34:	4618      	mov	r0, r3
 8005d36:	f000 ffc5 	bl	8006cc4 <TIM_CCxChannelCmd>

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005d3a:	687b      	ldr	r3, [r7, #4]
 8005d3c:	681b      	ldr	r3, [r3, #0]
 8005d3e:	689b      	ldr	r3, [r3, #8]
 8005d40:	f003 0307 	and.w	r3, r3, #7
 8005d44:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	2b06      	cmp	r3, #6
 8005d4a:	d007      	beq.n	8005d5c <HAL_TIM_IC_Start+0x3a>
  {
    __HAL_TIM_ENABLE(htim);
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	681a      	ldr	r2, [r3, #0]
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	f042 0201 	orr.w	r2, r2, #1
 8005d5a:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005d5c:	2300      	movs	r3, #0
}
 8005d5e:	4618      	mov	r0, r3
 8005d60:	3710      	adds	r7, #16
 8005d62:	46bd      	mov	sp, r7
 8005d64:	bd80      	pop	{r7, pc}

08005d66 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8005d66:	b580      	push	{r7, lr}
 8005d68:	b082      	sub	sp, #8
 8005d6a:	af00      	add	r7, sp, #0
 8005d6c:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8005d6e:	687b      	ldr	r3, [r7, #4]
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	691b      	ldr	r3, [r3, #16]
 8005d74:	f003 0302 	and.w	r3, r3, #2
 8005d78:	2b02      	cmp	r3, #2
 8005d7a:	d122      	bne.n	8005dc2 <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	681b      	ldr	r3, [r3, #0]
 8005d80:	68db      	ldr	r3, [r3, #12]
 8005d82:	f003 0302 	and.w	r3, r3, #2
 8005d86:	2b02      	cmp	r3, #2
 8005d88:	d11b      	bne.n	8005dc2 <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8005d8a:	687b      	ldr	r3, [r7, #4]
 8005d8c:	681b      	ldr	r3, [r3, #0]
 8005d8e:	f06f 0202 	mvn.w	r2, #2
 8005d92:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	2201      	movs	r2, #1
 8005d98:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005d9a:	687b      	ldr	r3, [r7, #4]
 8005d9c:	681b      	ldr	r3, [r3, #0]
 8005d9e:	699b      	ldr	r3, [r3, #24]
 8005da0:	f003 0303 	and.w	r3, r3, #3
 8005da4:	2b00      	cmp	r3, #0
 8005da6:	d003      	beq.n	8005db0 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8005da8:	6878      	ldr	r0, [r7, #4]
 8005daa:	f000 fb59 	bl	8006460 <HAL_TIM_IC_CaptureCallback>
 8005dae:	e005      	b.n	8005dbc <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8005db0:	6878      	ldr	r0, [r7, #4]
 8005db2:	f000 fb4b 	bl	800644c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005db6:	6878      	ldr	r0, [r7, #4]
 8005db8:	f000 fb5c 	bl	8006474 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005dbc:	687b      	ldr	r3, [r7, #4]
 8005dbe:	2200      	movs	r2, #0
 8005dc0:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8005dc2:	687b      	ldr	r3, [r7, #4]
 8005dc4:	681b      	ldr	r3, [r3, #0]
 8005dc6:	691b      	ldr	r3, [r3, #16]
 8005dc8:	f003 0304 	and.w	r3, r3, #4
 8005dcc:	2b04      	cmp	r3, #4
 8005dce:	d122      	bne.n	8005e16 <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8005dd0:	687b      	ldr	r3, [r7, #4]
 8005dd2:	681b      	ldr	r3, [r3, #0]
 8005dd4:	68db      	ldr	r3, [r3, #12]
 8005dd6:	f003 0304 	and.w	r3, r3, #4
 8005dda:	2b04      	cmp	r3, #4
 8005ddc:	d11b      	bne.n	8005e16 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	681b      	ldr	r3, [r3, #0]
 8005de2:	f06f 0204 	mvn.w	r2, #4
 8005de6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	2202      	movs	r2, #2
 8005dec:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	699b      	ldr	r3, [r3, #24]
 8005df4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005df8:	2b00      	cmp	r3, #0
 8005dfa:	d003      	beq.n	8005e04 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005dfc:	6878      	ldr	r0, [r7, #4]
 8005dfe:	f000 fb2f 	bl	8006460 <HAL_TIM_IC_CaptureCallback>
 8005e02:	e005      	b.n	8005e10 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005e04:	6878      	ldr	r0, [r7, #4]
 8005e06:	f000 fb21 	bl	800644c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005e0a:	6878      	ldr	r0, [r7, #4]
 8005e0c:	f000 fb32 	bl	8006474 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	2200      	movs	r2, #0
 8005e14:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8005e16:	687b      	ldr	r3, [r7, #4]
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	691b      	ldr	r3, [r3, #16]
 8005e1c:	f003 0308 	and.w	r3, r3, #8
 8005e20:	2b08      	cmp	r3, #8
 8005e22:	d122      	bne.n	8005e6a <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8005e24:	687b      	ldr	r3, [r7, #4]
 8005e26:	681b      	ldr	r3, [r3, #0]
 8005e28:	68db      	ldr	r3, [r3, #12]
 8005e2a:	f003 0308 	and.w	r3, r3, #8
 8005e2e:	2b08      	cmp	r3, #8
 8005e30:	d11b      	bne.n	8005e6a <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	f06f 0208 	mvn.w	r2, #8
 8005e3a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8005e3c:	687b      	ldr	r3, [r7, #4]
 8005e3e:	2204      	movs	r2, #4
 8005e40:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005e42:	687b      	ldr	r3, [r7, #4]
 8005e44:	681b      	ldr	r3, [r3, #0]
 8005e46:	69db      	ldr	r3, [r3, #28]
 8005e48:	f003 0303 	and.w	r3, r3, #3
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d003      	beq.n	8005e58 <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005e50:	6878      	ldr	r0, [r7, #4]
 8005e52:	f000 fb05 	bl	8006460 <HAL_TIM_IC_CaptureCallback>
 8005e56:	e005      	b.n	8005e64 <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005e58:	6878      	ldr	r0, [r7, #4]
 8005e5a:	f000 faf7 	bl	800644c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005e5e:	6878      	ldr	r0, [r7, #4]
 8005e60:	f000 fb08 	bl	8006474 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	2200      	movs	r2, #0
 8005e68:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	691b      	ldr	r3, [r3, #16]
 8005e70:	f003 0310 	and.w	r3, r3, #16
 8005e74:	2b10      	cmp	r3, #16
 8005e76:	d122      	bne.n	8005ebe <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	681b      	ldr	r3, [r3, #0]
 8005e7c:	68db      	ldr	r3, [r3, #12]
 8005e7e:	f003 0310 	and.w	r3, r3, #16
 8005e82:	2b10      	cmp	r3, #16
 8005e84:	d11b      	bne.n	8005ebe <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8005e86:	687b      	ldr	r3, [r7, #4]
 8005e88:	681b      	ldr	r3, [r3, #0]
 8005e8a:	f06f 0210 	mvn.w	r2, #16
 8005e8e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	2208      	movs	r2, #8
 8005e94:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	681b      	ldr	r3, [r3, #0]
 8005e9a:	69db      	ldr	r3, [r3, #28]
 8005e9c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005ea0:	2b00      	cmp	r3, #0
 8005ea2:	d003      	beq.n	8005eac <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005ea4:	6878      	ldr	r0, [r7, #4]
 8005ea6:	f000 fadb 	bl	8006460 <HAL_TIM_IC_CaptureCallback>
 8005eaa:	e005      	b.n	8005eb8 <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005eac:	6878      	ldr	r0, [r7, #4]
 8005eae:	f000 facd 	bl	800644c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005eb2:	6878      	ldr	r0, [r7, #4]
 8005eb4:	f000 fade 	bl	8006474 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005eb8:	687b      	ldr	r3, [r7, #4]
 8005eba:	2200      	movs	r2, #0
 8005ebc:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	691b      	ldr	r3, [r3, #16]
 8005ec4:	f003 0301 	and.w	r3, r3, #1
 8005ec8:	2b01      	cmp	r3, #1
 8005eca:	d10e      	bne.n	8005eea <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	68db      	ldr	r3, [r3, #12]
 8005ed2:	f003 0301 	and.w	r3, r3, #1
 8005ed6:	2b01      	cmp	r3, #1
 8005ed8:	d107      	bne.n	8005eea <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8005eda:	687b      	ldr	r3, [r7, #4]
 8005edc:	681b      	ldr	r3, [r3, #0]
 8005ede:	f06f 0201 	mvn.w	r2, #1
 8005ee2:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8005ee4:	6878      	ldr	r0, [r7, #4]
 8005ee6:	f7fc f805 	bl	8001ef4 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8005eea:	687b      	ldr	r3, [r7, #4]
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	691b      	ldr	r3, [r3, #16]
 8005ef0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005ef4:	2b80      	cmp	r3, #128	; 0x80
 8005ef6:	d10e      	bne.n	8005f16 <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8005ef8:	687b      	ldr	r3, [r7, #4]
 8005efa:	681b      	ldr	r3, [r3, #0]
 8005efc:	68db      	ldr	r3, [r3, #12]
 8005efe:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005f02:	2b80      	cmp	r3, #128	; 0x80
 8005f04:	d107      	bne.n	8005f16 <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8005f0e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8005f10:	6878      	ldr	r0, [r7, #4]
 8005f12:	f000 ff83 	bl	8006e1c <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	691b      	ldr	r3, [r3, #16]
 8005f1c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005f20:	2b40      	cmp	r3, #64	; 0x40
 8005f22:	d10e      	bne.n	8005f42 <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	681b      	ldr	r3, [r3, #0]
 8005f28:	68db      	ldr	r3, [r3, #12]
 8005f2a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005f2e:	2b40      	cmp	r3, #64	; 0x40
 8005f30:	d107      	bne.n	8005f42 <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	681b      	ldr	r3, [r3, #0]
 8005f36:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8005f3a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8005f3c:	6878      	ldr	r0, [r7, #4]
 8005f3e:	f000 faa3 	bl	8006488 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8005f42:	687b      	ldr	r3, [r7, #4]
 8005f44:	681b      	ldr	r3, [r3, #0]
 8005f46:	691b      	ldr	r3, [r3, #16]
 8005f48:	f003 0320 	and.w	r3, r3, #32
 8005f4c:	2b20      	cmp	r3, #32
 8005f4e:	d10e      	bne.n	8005f6e <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	681b      	ldr	r3, [r3, #0]
 8005f54:	68db      	ldr	r3, [r3, #12]
 8005f56:	f003 0320 	and.w	r3, r3, #32
 8005f5a:	2b20      	cmp	r3, #32
 8005f5c:	d107      	bne.n	8005f6e <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005f5e:	687b      	ldr	r3, [r7, #4]
 8005f60:	681b      	ldr	r3, [r3, #0]
 8005f62:	f06f 0220 	mvn.w	r2, #32
 8005f66:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8005f68:	6878      	ldr	r0, [r7, #4]
 8005f6a:	f000 ff4d 	bl	8006e08 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8005f6e:	bf00      	nop
 8005f70:	3708      	adds	r7, #8
 8005f72:	46bd      	mov	sp, r7
 8005f74:	bd80      	pop	{r7, pc}

08005f76 <HAL_TIM_IC_ConfigChannel>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_IC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_IC_InitTypeDef *sConfig, uint32_t Channel)
{
 8005f76:	b580      	push	{r7, lr}
 8005f78:	b084      	sub	sp, #16
 8005f7a:	af00      	add	r7, sp, #0
 8005f7c:	60f8      	str	r0, [r7, #12]
 8005f7e:	60b9      	str	r1, [r7, #8]
 8005f80:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_IC_SELECTION(sConfig->ICSelection));
  assert_param(IS_TIM_IC_PRESCALER(sConfig->ICPrescaler));
  assert_param(IS_TIM_IC_FILTER(sConfig->ICFilter));

  /* Process Locked */
  __HAL_LOCK(htim);
 8005f82:	68fb      	ldr	r3, [r7, #12]
 8005f84:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005f88:	2b01      	cmp	r3, #1
 8005f8a:	d101      	bne.n	8005f90 <HAL_TIM_IC_ConfigChannel+0x1a>
 8005f8c:	2302      	movs	r3, #2
 8005f8e:	e08a      	b.n	80060a6 <HAL_TIM_IC_ConfigChannel+0x130>
 8005f90:	68fb      	ldr	r3, [r7, #12]
 8005f92:	2201      	movs	r2, #1
 8005f94:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8005f98:	68fb      	ldr	r3, [r7, #12]
 8005f9a:	2202      	movs	r2, #2
 8005f9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  if (Channel == TIM_CHANNEL_1)
 8005fa0:	687b      	ldr	r3, [r7, #4]
 8005fa2:	2b00      	cmp	r3, #0
 8005fa4:	d11b      	bne.n	8005fde <HAL_TIM_IC_ConfigChannel+0x68>
  {
    /* TI1 Configuration */
    TIM_TI1_SetConfig(htim->Instance,
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	6818      	ldr	r0, [r3, #0]
 8005faa:	68bb      	ldr	r3, [r7, #8]
 8005fac:	6819      	ldr	r1, [r3, #0]
 8005fae:	68bb      	ldr	r3, [r7, #8]
 8005fb0:	685a      	ldr	r2, [r3, #4]
 8005fb2:	68bb      	ldr	r3, [r7, #8]
 8005fb4:	68db      	ldr	r3, [r3, #12]
 8005fb6:	f000 fcc1 	bl	800693c <TIM_TI1_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC1PSC Bits */
    htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	681b      	ldr	r3, [r3, #0]
 8005fbe:	699a      	ldr	r2, [r3, #24]
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	f022 020c 	bic.w	r2, r2, #12
 8005fc8:	619a      	str	r2, [r3, #24]

    /* Set the IC1PSC value */
    htim->Instance->CCMR1 |= sConfig->ICPrescaler;
 8005fca:	68fb      	ldr	r3, [r7, #12]
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	6999      	ldr	r1, [r3, #24]
 8005fd0:	68bb      	ldr	r3, [r7, #8]
 8005fd2:	689a      	ldr	r2, [r3, #8]
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	430a      	orrs	r2, r1
 8005fda:	619a      	str	r2, [r3, #24]
 8005fdc:	e05a      	b.n	8006094 <HAL_TIM_IC_ConfigChannel+0x11e>
  }
  else if (Channel == TIM_CHANNEL_2)
 8005fde:	687b      	ldr	r3, [r7, #4]
 8005fe0:	2b04      	cmp	r3, #4
 8005fe2:	d11c      	bne.n	800601e <HAL_TIM_IC_ConfigChannel+0xa8>
  {
    /* TI2 Configuration */
    assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

    TIM_TI2_SetConfig(htim->Instance,
 8005fe4:	68fb      	ldr	r3, [r7, #12]
 8005fe6:	6818      	ldr	r0, [r3, #0]
 8005fe8:	68bb      	ldr	r3, [r7, #8]
 8005fea:	6819      	ldr	r1, [r3, #0]
 8005fec:	68bb      	ldr	r3, [r7, #8]
 8005fee:	685a      	ldr	r2, [r3, #4]
 8005ff0:	68bb      	ldr	r3, [r7, #8]
 8005ff2:	68db      	ldr	r3, [r3, #12]
 8005ff4:	f000 fd45 	bl	8006a82 <TIM_TI2_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC2PSC Bits */
    htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	681b      	ldr	r3, [r3, #0]
 8005ffc:	699a      	ldr	r2, [r3, #24]
 8005ffe:	68fb      	ldr	r3, [r7, #12]
 8006000:	681b      	ldr	r3, [r3, #0]
 8006002:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8006006:	619a      	str	r2, [r3, #24]

    /* Set the IC2PSC value */
    htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
 8006008:	68fb      	ldr	r3, [r7, #12]
 800600a:	681b      	ldr	r3, [r3, #0]
 800600c:	6999      	ldr	r1, [r3, #24]
 800600e:	68bb      	ldr	r3, [r7, #8]
 8006010:	689b      	ldr	r3, [r3, #8]
 8006012:	021a      	lsls	r2, r3, #8
 8006014:	68fb      	ldr	r3, [r7, #12]
 8006016:	681b      	ldr	r3, [r3, #0]
 8006018:	430a      	orrs	r2, r1
 800601a:	619a      	str	r2, [r3, #24]
 800601c:	e03a      	b.n	8006094 <HAL_TIM_IC_ConfigChannel+0x11e>
  }
  else if (Channel == TIM_CHANNEL_3)
 800601e:	687b      	ldr	r3, [r7, #4]
 8006020:	2b08      	cmp	r3, #8
 8006022:	d11b      	bne.n	800605c <HAL_TIM_IC_ConfigChannel+0xe6>
  {
    /* TI3 Configuration */
    assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

    TIM_TI3_SetConfig(htim->Instance,
 8006024:	68fb      	ldr	r3, [r7, #12]
 8006026:	6818      	ldr	r0, [r3, #0]
 8006028:	68bb      	ldr	r3, [r7, #8]
 800602a:	6819      	ldr	r1, [r3, #0]
 800602c:	68bb      	ldr	r3, [r7, #8]
 800602e:	685a      	ldr	r2, [r3, #4]
 8006030:	68bb      	ldr	r3, [r7, #8]
 8006032:	68db      	ldr	r3, [r3, #12]
 8006034:	f000 fd92 	bl	8006b5c <TIM_TI3_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC3PSC Bits */
    htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	69da      	ldr	r2, [r3, #28]
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	681b      	ldr	r3, [r3, #0]
 8006042:	f022 020c 	bic.w	r2, r2, #12
 8006046:	61da      	str	r2, [r3, #28]

    /* Set the IC3PSC value */
    htim->Instance->CCMR2 |= sConfig->ICPrescaler;
 8006048:	68fb      	ldr	r3, [r7, #12]
 800604a:	681b      	ldr	r3, [r3, #0]
 800604c:	69d9      	ldr	r1, [r3, #28]
 800604e:	68bb      	ldr	r3, [r7, #8]
 8006050:	689a      	ldr	r2, [r3, #8]
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	681b      	ldr	r3, [r3, #0]
 8006056:	430a      	orrs	r2, r1
 8006058:	61da      	str	r2, [r3, #28]
 800605a:	e01b      	b.n	8006094 <HAL_TIM_IC_ConfigChannel+0x11e>
  else
  {
    /* TI4 Configuration */
    assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

    TIM_TI4_SetConfig(htim->Instance,
 800605c:	68fb      	ldr	r3, [r7, #12]
 800605e:	6818      	ldr	r0, [r3, #0]
 8006060:	68bb      	ldr	r3, [r7, #8]
 8006062:	6819      	ldr	r1, [r3, #0]
 8006064:	68bb      	ldr	r3, [r7, #8]
 8006066:	685a      	ldr	r2, [r3, #4]
 8006068:	68bb      	ldr	r3, [r7, #8]
 800606a:	68db      	ldr	r3, [r3, #12]
 800606c:	f000 fdb2 	bl	8006bd4 <TIM_TI4_SetConfig>
                      sConfig->ICPolarity,
                      sConfig->ICSelection,
                      sConfig->ICFilter);

    /* Reset the IC4PSC Bits */
    htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
 8006070:	68fb      	ldr	r3, [r7, #12]
 8006072:	681b      	ldr	r3, [r3, #0]
 8006074:	69da      	ldr	r2, [r3, #28]
 8006076:	68fb      	ldr	r3, [r7, #12]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800607e:	61da      	str	r2, [r3, #28]

    /* Set the IC4PSC value */
    htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
 8006080:	68fb      	ldr	r3, [r7, #12]
 8006082:	681b      	ldr	r3, [r3, #0]
 8006084:	69d9      	ldr	r1, [r3, #28]
 8006086:	68bb      	ldr	r3, [r7, #8]
 8006088:	689b      	ldr	r3, [r3, #8]
 800608a:	021a      	lsls	r2, r3, #8
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	430a      	orrs	r2, r1
 8006092:	61da      	str	r2, [r3, #28]
  }

  htim->State = HAL_TIM_STATE_READY;
 8006094:	68fb      	ldr	r3, [r7, #12]
 8006096:	2201      	movs	r2, #1
 8006098:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800609c:	68fb      	ldr	r3, [r7, #12]
 800609e:	2200      	movs	r2, #0
 80060a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 80060a4:	2300      	movs	r3, #0
}
 80060a6:	4618      	mov	r0, r3
 80060a8:	3710      	adds	r7, #16
 80060aa:	46bd      	mov	sp, r7
 80060ac:	bd80      	pop	{r7, pc}
	...

080060b0 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 80060b0:	b580      	push	{r7, lr}
 80060b2:	b084      	sub	sp, #16
 80060b4:	af00      	add	r7, sp, #0
 80060b6:	60f8      	str	r0, [r7, #12]
 80060b8:	60b9      	str	r1, [r7, #8]
 80060ba:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 80060bc:	68fb      	ldr	r3, [r7, #12]
 80060be:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80060c2:	2b01      	cmp	r3, #1
 80060c4:	d101      	bne.n	80060ca <HAL_TIM_PWM_ConfigChannel+0x1a>
 80060c6:	2302      	movs	r3, #2
 80060c8:	e0b4      	b.n	8006234 <HAL_TIM_PWM_ConfigChannel+0x184>
 80060ca:	68fb      	ldr	r3, [r7, #12]
 80060cc:	2201      	movs	r2, #1
 80060ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80060d2:	68fb      	ldr	r3, [r7, #12]
 80060d4:	2202      	movs	r2, #2
 80060d6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  switch (Channel)
 80060da:	687b      	ldr	r3, [r7, #4]
 80060dc:	2b0c      	cmp	r3, #12
 80060de:	f200 809f 	bhi.w	8006220 <HAL_TIM_PWM_ConfigChannel+0x170>
 80060e2:	a201      	add	r2, pc, #4	; (adr r2, 80060e8 <HAL_TIM_PWM_ConfigChannel+0x38>)
 80060e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80060e8:	0800611d 	.word	0x0800611d
 80060ec:	08006221 	.word	0x08006221
 80060f0:	08006221 	.word	0x08006221
 80060f4:	08006221 	.word	0x08006221
 80060f8:	0800615d 	.word	0x0800615d
 80060fc:	08006221 	.word	0x08006221
 8006100:	08006221 	.word	0x08006221
 8006104:	08006221 	.word	0x08006221
 8006108:	0800619f 	.word	0x0800619f
 800610c:	08006221 	.word	0x08006221
 8006110:	08006221 	.word	0x08006221
 8006114:	08006221 	.word	0x08006221
 8006118:	080061df 	.word	0x080061df
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800611c:	68fb      	ldr	r3, [r7, #12]
 800611e:	681b      	ldr	r3, [r3, #0]
 8006120:	68b9      	ldr	r1, [r7, #8]
 8006122:	4618      	mov	r0, r3
 8006124:	f000 fa5a 	bl	80065dc <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8006128:	68fb      	ldr	r3, [r7, #12]
 800612a:	681b      	ldr	r3, [r3, #0]
 800612c:	699a      	ldr	r2, [r3, #24]
 800612e:	68fb      	ldr	r3, [r7, #12]
 8006130:	681b      	ldr	r3, [r3, #0]
 8006132:	f042 0208 	orr.w	r2, r2, #8
 8006136:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8006138:	68fb      	ldr	r3, [r7, #12]
 800613a:	681b      	ldr	r3, [r3, #0]
 800613c:	699a      	ldr	r2, [r3, #24]
 800613e:	68fb      	ldr	r3, [r7, #12]
 8006140:	681b      	ldr	r3, [r3, #0]
 8006142:	f022 0204 	bic.w	r2, r2, #4
 8006146:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8006148:	68fb      	ldr	r3, [r7, #12]
 800614a:	681b      	ldr	r3, [r3, #0]
 800614c:	6999      	ldr	r1, [r3, #24]
 800614e:	68bb      	ldr	r3, [r7, #8]
 8006150:	691a      	ldr	r2, [r3, #16]
 8006152:	68fb      	ldr	r3, [r7, #12]
 8006154:	681b      	ldr	r3, [r3, #0]
 8006156:	430a      	orrs	r2, r1
 8006158:	619a      	str	r2, [r3, #24]
      break;
 800615a:	e062      	b.n	8006222 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800615c:	68fb      	ldr	r3, [r7, #12]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	68b9      	ldr	r1, [r7, #8]
 8006162:	4618      	mov	r0, r3
 8006164:	f000 faaa 	bl	80066bc <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8006168:	68fb      	ldr	r3, [r7, #12]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	699a      	ldr	r2, [r3, #24]
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	681b      	ldr	r3, [r3, #0]
 8006172:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006176:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8006178:	68fb      	ldr	r3, [r7, #12]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	699a      	ldr	r2, [r3, #24]
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	681b      	ldr	r3, [r3, #0]
 8006182:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006186:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8006188:	68fb      	ldr	r3, [r7, #12]
 800618a:	681b      	ldr	r3, [r3, #0]
 800618c:	6999      	ldr	r1, [r3, #24]
 800618e:	68bb      	ldr	r3, [r7, #8]
 8006190:	691b      	ldr	r3, [r3, #16]
 8006192:	021a      	lsls	r2, r3, #8
 8006194:	68fb      	ldr	r3, [r7, #12]
 8006196:	681b      	ldr	r3, [r3, #0]
 8006198:	430a      	orrs	r2, r1
 800619a:	619a      	str	r2, [r3, #24]
      break;
 800619c:	e041      	b.n	8006222 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800619e:	68fb      	ldr	r3, [r7, #12]
 80061a0:	681b      	ldr	r3, [r3, #0]
 80061a2:	68b9      	ldr	r1, [r7, #8]
 80061a4:	4618      	mov	r0, r3
 80061a6:	f000 faff 	bl	80067a8 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80061aa:	68fb      	ldr	r3, [r7, #12]
 80061ac:	681b      	ldr	r3, [r3, #0]
 80061ae:	69da      	ldr	r2, [r3, #28]
 80061b0:	68fb      	ldr	r3, [r7, #12]
 80061b2:	681b      	ldr	r3, [r3, #0]
 80061b4:	f042 0208 	orr.w	r2, r2, #8
 80061b8:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80061ba:	68fb      	ldr	r3, [r7, #12]
 80061bc:	681b      	ldr	r3, [r3, #0]
 80061be:	69da      	ldr	r2, [r3, #28]
 80061c0:	68fb      	ldr	r3, [r7, #12]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	f022 0204 	bic.w	r2, r2, #4
 80061c8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80061ca:	68fb      	ldr	r3, [r7, #12]
 80061cc:	681b      	ldr	r3, [r3, #0]
 80061ce:	69d9      	ldr	r1, [r3, #28]
 80061d0:	68bb      	ldr	r3, [r7, #8]
 80061d2:	691a      	ldr	r2, [r3, #16]
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	681b      	ldr	r3, [r3, #0]
 80061d8:	430a      	orrs	r2, r1
 80061da:	61da      	str	r2, [r3, #28]
      break;
 80061dc:	e021      	b.n	8006222 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80061de:	68fb      	ldr	r3, [r7, #12]
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	68b9      	ldr	r1, [r7, #8]
 80061e4:	4618      	mov	r0, r3
 80061e6:	f000 fb53 	bl	8006890 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80061ea:	68fb      	ldr	r3, [r7, #12]
 80061ec:	681b      	ldr	r3, [r3, #0]
 80061ee:	69da      	ldr	r2, [r3, #28]
 80061f0:	68fb      	ldr	r3, [r7, #12]
 80061f2:	681b      	ldr	r3, [r3, #0]
 80061f4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80061f8:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80061fa:	68fb      	ldr	r3, [r7, #12]
 80061fc:	681b      	ldr	r3, [r3, #0]
 80061fe:	69da      	ldr	r2, [r3, #28]
 8006200:	68fb      	ldr	r3, [r7, #12]
 8006202:	681b      	ldr	r3, [r3, #0]
 8006204:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006208:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800620a:	68fb      	ldr	r3, [r7, #12]
 800620c:	681b      	ldr	r3, [r3, #0]
 800620e:	69d9      	ldr	r1, [r3, #28]
 8006210:	68bb      	ldr	r3, [r7, #8]
 8006212:	691b      	ldr	r3, [r3, #16]
 8006214:	021a      	lsls	r2, r3, #8
 8006216:	68fb      	ldr	r3, [r7, #12]
 8006218:	681b      	ldr	r3, [r3, #0]
 800621a:	430a      	orrs	r2, r1
 800621c:	61da      	str	r2, [r3, #28]
      break;
 800621e:	e000      	b.n	8006222 <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      break;
 8006220:	bf00      	nop
  }

  htim->State = HAL_TIM_STATE_READY;
 8006222:	68fb      	ldr	r3, [r7, #12]
 8006224:	2201      	movs	r2, #1
 8006226:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800622a:	68fb      	ldr	r3, [r7, #12]
 800622c:	2200      	movs	r2, #0
 800622e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8006232:	2300      	movs	r3, #0
}
 8006234:	4618      	mov	r0, r3
 8006236:	3710      	adds	r7, #16
 8006238:	46bd      	mov	sp, r7
 800623a:	bd80      	pop	{r7, pc}

0800623c <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800623c:	b580      	push	{r7, lr}
 800623e:	b084      	sub	sp, #16
 8006240:	af00      	add	r7, sp, #0
 8006242:	6078      	str	r0, [r7, #4]
 8006244:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800624c:	2b01      	cmp	r3, #1
 800624e:	d101      	bne.n	8006254 <HAL_TIM_ConfigClockSource+0x18>
 8006250:	2302      	movs	r3, #2
 8006252:	e0b3      	b.n	80063bc <HAL_TIM_ConfigClockSource+0x180>
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	2201      	movs	r2, #1
 8006258:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	2202      	movs	r2, #2
 8006260:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	681b      	ldr	r3, [r3, #0]
 8006268:	689b      	ldr	r3, [r3, #8]
 800626a:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 800626c:	68fb      	ldr	r3, [r7, #12]
 800626e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8006272:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006274:	68fb      	ldr	r3, [r7, #12]
 8006276:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800627a:	60fb      	str	r3, [r7, #12]
  htim->Instance->SMCR = tmpsmcr;
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	681b      	ldr	r3, [r3, #0]
 8006280:	68fa      	ldr	r2, [r7, #12]
 8006282:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8006284:	683b      	ldr	r3, [r7, #0]
 8006286:	681b      	ldr	r3, [r3, #0]
 8006288:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800628c:	d03e      	beq.n	800630c <HAL_TIM_ConfigClockSource+0xd0>
 800628e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006292:	f200 8087 	bhi.w	80063a4 <HAL_TIM_ConfigClockSource+0x168>
 8006296:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800629a:	f000 8085 	beq.w	80063a8 <HAL_TIM_ConfigClockSource+0x16c>
 800629e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80062a2:	d87f      	bhi.n	80063a4 <HAL_TIM_ConfigClockSource+0x168>
 80062a4:	2b70      	cmp	r3, #112	; 0x70
 80062a6:	d01a      	beq.n	80062de <HAL_TIM_ConfigClockSource+0xa2>
 80062a8:	2b70      	cmp	r3, #112	; 0x70
 80062aa:	d87b      	bhi.n	80063a4 <HAL_TIM_ConfigClockSource+0x168>
 80062ac:	2b60      	cmp	r3, #96	; 0x60
 80062ae:	d050      	beq.n	8006352 <HAL_TIM_ConfigClockSource+0x116>
 80062b0:	2b60      	cmp	r3, #96	; 0x60
 80062b2:	d877      	bhi.n	80063a4 <HAL_TIM_ConfigClockSource+0x168>
 80062b4:	2b50      	cmp	r3, #80	; 0x50
 80062b6:	d03c      	beq.n	8006332 <HAL_TIM_ConfigClockSource+0xf6>
 80062b8:	2b50      	cmp	r3, #80	; 0x50
 80062ba:	d873      	bhi.n	80063a4 <HAL_TIM_ConfigClockSource+0x168>
 80062bc:	2b40      	cmp	r3, #64	; 0x40
 80062be:	d058      	beq.n	8006372 <HAL_TIM_ConfigClockSource+0x136>
 80062c0:	2b40      	cmp	r3, #64	; 0x40
 80062c2:	d86f      	bhi.n	80063a4 <HAL_TIM_ConfigClockSource+0x168>
 80062c4:	2b30      	cmp	r3, #48	; 0x30
 80062c6:	d064      	beq.n	8006392 <HAL_TIM_ConfigClockSource+0x156>
 80062c8:	2b30      	cmp	r3, #48	; 0x30
 80062ca:	d86b      	bhi.n	80063a4 <HAL_TIM_ConfigClockSource+0x168>
 80062cc:	2b20      	cmp	r3, #32
 80062ce:	d060      	beq.n	8006392 <HAL_TIM_ConfigClockSource+0x156>
 80062d0:	2b20      	cmp	r3, #32
 80062d2:	d867      	bhi.n	80063a4 <HAL_TIM_ConfigClockSource+0x168>
 80062d4:	2b00      	cmp	r3, #0
 80062d6:	d05c      	beq.n	8006392 <HAL_TIM_ConfigClockSource+0x156>
 80062d8:	2b10      	cmp	r3, #16
 80062da:	d05a      	beq.n	8006392 <HAL_TIM_ConfigClockSource+0x156>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
      break;
    }

    default:
      break;
 80062dc:	e062      	b.n	80063a4 <HAL_TIM_ConfigClockSource+0x168>
      TIM_ETR_SetConfig(htim->Instance,
 80062de:	687b      	ldr	r3, [r7, #4]
 80062e0:	6818      	ldr	r0, [r3, #0]
 80062e2:	683b      	ldr	r3, [r7, #0]
 80062e4:	6899      	ldr	r1, [r3, #8]
 80062e6:	683b      	ldr	r3, [r7, #0]
 80062e8:	685a      	ldr	r2, [r3, #4]
 80062ea:	683b      	ldr	r3, [r7, #0]
 80062ec:	68db      	ldr	r3, [r3, #12]
 80062ee:	f000 fcc9 	bl	8006c84 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 80062f2:	687b      	ldr	r3, [r7, #4]
 80062f4:	681b      	ldr	r3, [r3, #0]
 80062f6:	689b      	ldr	r3, [r3, #8]
 80062f8:	60fb      	str	r3, [r7, #12]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80062fa:	68fb      	ldr	r3, [r7, #12]
 80062fc:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8006300:	60fb      	str	r3, [r7, #12]
      htim->Instance->SMCR = tmpsmcr;
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	68fa      	ldr	r2, [r7, #12]
 8006308:	609a      	str	r2, [r3, #8]
      break;
 800630a:	e04e      	b.n	80063aa <HAL_TIM_ConfigClockSource+0x16e>
      TIM_ETR_SetConfig(htim->Instance,
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	6818      	ldr	r0, [r3, #0]
 8006310:	683b      	ldr	r3, [r7, #0]
 8006312:	6899      	ldr	r1, [r3, #8]
 8006314:	683b      	ldr	r3, [r7, #0]
 8006316:	685a      	ldr	r2, [r3, #4]
 8006318:	683b      	ldr	r3, [r7, #0]
 800631a:	68db      	ldr	r3, [r3, #12]
 800631c:	f000 fcb2 	bl	8006c84 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8006320:	687b      	ldr	r3, [r7, #4]
 8006322:	681b      	ldr	r3, [r3, #0]
 8006324:	689a      	ldr	r2, [r3, #8]
 8006326:	687b      	ldr	r3, [r7, #4]
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800632e:	609a      	str	r2, [r3, #8]
      break;
 8006330:	e03b      	b.n	80063aa <HAL_TIM_ConfigClockSource+0x16e>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8006332:	687b      	ldr	r3, [r7, #4]
 8006334:	6818      	ldr	r0, [r3, #0]
 8006336:	683b      	ldr	r3, [r7, #0]
 8006338:	6859      	ldr	r1, [r3, #4]
 800633a:	683b      	ldr	r3, [r7, #0]
 800633c:	68db      	ldr	r3, [r3, #12]
 800633e:	461a      	mov	r2, r3
 8006340:	f000 fb70 	bl	8006a24 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	2150      	movs	r1, #80	; 0x50
 800634a:	4618      	mov	r0, r3
 800634c:	f000 fc7f 	bl	8006c4e <TIM_ITRx_SetConfig>
      break;
 8006350:	e02b      	b.n	80063aa <HAL_TIM_ConfigClockSource+0x16e>
      TIM_TI2_ConfigInputStage(htim->Instance,
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	6818      	ldr	r0, [r3, #0]
 8006356:	683b      	ldr	r3, [r7, #0]
 8006358:	6859      	ldr	r1, [r3, #4]
 800635a:	683b      	ldr	r3, [r7, #0]
 800635c:	68db      	ldr	r3, [r3, #12]
 800635e:	461a      	mov	r2, r3
 8006360:	f000 fbcc 	bl	8006afc <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	681b      	ldr	r3, [r3, #0]
 8006368:	2160      	movs	r1, #96	; 0x60
 800636a:	4618      	mov	r0, r3
 800636c:	f000 fc6f 	bl	8006c4e <TIM_ITRx_SetConfig>
      break;
 8006370:	e01b      	b.n	80063aa <HAL_TIM_ConfigClockSource+0x16e>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8006372:	687b      	ldr	r3, [r7, #4]
 8006374:	6818      	ldr	r0, [r3, #0]
 8006376:	683b      	ldr	r3, [r7, #0]
 8006378:	6859      	ldr	r1, [r3, #4]
 800637a:	683b      	ldr	r3, [r7, #0]
 800637c:	68db      	ldr	r3, [r3, #12]
 800637e:	461a      	mov	r2, r3
 8006380:	f000 fb50 	bl	8006a24 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8006384:	687b      	ldr	r3, [r7, #4]
 8006386:	681b      	ldr	r3, [r3, #0]
 8006388:	2140      	movs	r1, #64	; 0x40
 800638a:	4618      	mov	r0, r3
 800638c:	f000 fc5f 	bl	8006c4e <TIM_ITRx_SetConfig>
      break;
 8006390:	e00b      	b.n	80063aa <HAL_TIM_ConfigClockSource+0x16e>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8006392:	687b      	ldr	r3, [r7, #4]
 8006394:	681a      	ldr	r2, [r3, #0]
 8006396:	683b      	ldr	r3, [r7, #0]
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	4619      	mov	r1, r3
 800639c:	4610      	mov	r0, r2
 800639e:	f000 fc56 	bl	8006c4e <TIM_ITRx_SetConfig>
      break;
 80063a2:	e002      	b.n	80063aa <HAL_TIM_ConfigClockSource+0x16e>
      break;
 80063a4:	bf00      	nop
 80063a6:	e000      	b.n	80063aa <HAL_TIM_ConfigClockSource+0x16e>
      break;
 80063a8:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	2201      	movs	r2, #1
 80063ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80063b2:	687b      	ldr	r3, [r7, #4]
 80063b4:	2200      	movs	r2, #0
 80063b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 80063ba:	2300      	movs	r3, #0
}
 80063bc:	4618      	mov	r0, r3
 80063be:	3710      	adds	r7, #16
 80063c0:	46bd      	mov	sp, r7
 80063c2:	bd80      	pop	{r7, pc}

080063c4 <HAL_TIM_ReadCapturedValue>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval Captured value
  */
uint32_t HAL_TIM_ReadCapturedValue(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 80063c4:	b480      	push	{r7}
 80063c6:	b085      	sub	sp, #20
 80063c8:	af00      	add	r7, sp, #0
 80063ca:	6078      	str	r0, [r7, #4]
 80063cc:	6039      	str	r1, [r7, #0]
  uint32_t tmpreg = 0U;
 80063ce:	2300      	movs	r3, #0
 80063d0:	60fb      	str	r3, [r7, #12]

  switch (Channel)
 80063d2:	683b      	ldr	r3, [r7, #0]
 80063d4:	2b0c      	cmp	r3, #12
 80063d6:	d831      	bhi.n	800643c <HAL_TIM_ReadCapturedValue+0x78>
 80063d8:	a201      	add	r2, pc, #4	; (adr r2, 80063e0 <HAL_TIM_ReadCapturedValue+0x1c>)
 80063da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80063de:	bf00      	nop
 80063e0:	08006415 	.word	0x08006415
 80063e4:	0800643d 	.word	0x0800643d
 80063e8:	0800643d 	.word	0x0800643d
 80063ec:	0800643d 	.word	0x0800643d
 80063f0:	0800641f 	.word	0x0800641f
 80063f4:	0800643d 	.word	0x0800643d
 80063f8:	0800643d 	.word	0x0800643d
 80063fc:	0800643d 	.word	0x0800643d
 8006400:	08006429 	.word	0x08006429
 8006404:	0800643d 	.word	0x0800643d
 8006408:	0800643d 	.word	0x0800643d
 800640c:	0800643d 	.word	0x0800643d
 8006410:	08006433 	.word	0x08006433
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Return the capture 1 value */
      tmpreg =  htim->Instance->CCR1;
 8006414:	687b      	ldr	r3, [r7, #4]
 8006416:	681b      	ldr	r3, [r3, #0]
 8006418:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800641a:	60fb      	str	r3, [r7, #12]

      break;
 800641c:	e00f      	b.n	800643e <HAL_TIM_ReadCapturedValue+0x7a>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Return the capture 2 value */
      tmpreg =   htim->Instance->CCR2;
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	681b      	ldr	r3, [r3, #0]
 8006422:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006424:	60fb      	str	r3, [r7, #12]

      break;
 8006426:	e00a      	b.n	800643e <HAL_TIM_ReadCapturedValue+0x7a>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Return the capture 3 value */
      tmpreg =   htim->Instance->CCR3;
 8006428:	687b      	ldr	r3, [r7, #4]
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800642e:	60fb      	str	r3, [r7, #12]

      break;
 8006430:	e005      	b.n	800643e <HAL_TIM_ReadCapturedValue+0x7a>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Return the capture 4 value */
      tmpreg =   htim->Instance->CCR4;
 8006432:	687b      	ldr	r3, [r7, #4]
 8006434:	681b      	ldr	r3, [r3, #0]
 8006436:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006438:	60fb      	str	r3, [r7, #12]

      break;
 800643a:	e000      	b.n	800643e <HAL_TIM_ReadCapturedValue+0x7a>
    }

    default:
      break;
 800643c:	bf00      	nop
  }

  return tmpreg;
 800643e:	68fb      	ldr	r3, [r7, #12]
}
 8006440:	4618      	mov	r0, r3
 8006442:	3714      	adds	r7, #20
 8006444:	46bd      	mov	sp, r7
 8006446:	f85d 7b04 	ldr.w	r7, [sp], #4
 800644a:	4770      	bx	lr

0800644c <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800644c:	b480      	push	{r7}
 800644e:	b083      	sub	sp, #12
 8006450:	af00      	add	r7, sp, #0
 8006452:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8006454:	bf00      	nop
 8006456:	370c      	adds	r7, #12
 8006458:	46bd      	mov	sp, r7
 800645a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800645e:	4770      	bx	lr

08006460 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8006460:	b480      	push	{r7}
 8006462:	b083      	sub	sp, #12
 8006464:	af00      	add	r7, sp, #0
 8006466:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8006468:	bf00      	nop
 800646a:	370c      	adds	r7, #12
 800646c:	46bd      	mov	sp, r7
 800646e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006472:	4770      	bx	lr

08006474 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8006474:	b480      	push	{r7}
 8006476:	b083      	sub	sp, #12
 8006478:	af00      	add	r7, sp, #0
 800647a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 800647c:	bf00      	nop
 800647e:	370c      	adds	r7, #12
 8006480:	46bd      	mov	sp, r7
 8006482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006486:	4770      	bx	lr

08006488 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 8006488:	b480      	push	{r7}
 800648a:	b083      	sub	sp, #12
 800648c:	af00      	add	r7, sp, #0
 800648e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8006490:	bf00      	nop
 8006492:	370c      	adds	r7, #12
 8006494:	46bd      	mov	sp, r7
 8006496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800649a:	4770      	bx	lr

0800649c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 800649c:	b480      	push	{r7}
 800649e:	b085      	sub	sp, #20
 80064a0:	af00      	add	r7, sp, #0
 80064a2:	6078      	str	r0, [r7, #4]
 80064a4:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80064a6:	687b      	ldr	r3, [r7, #4]
 80064a8:	681b      	ldr	r3, [r3, #0]
 80064aa:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80064ac:	687b      	ldr	r3, [r7, #4]
 80064ae:	4a40      	ldr	r2, [pc, #256]	; (80065b0 <TIM_Base_SetConfig+0x114>)
 80064b0:	4293      	cmp	r3, r2
 80064b2:	d013      	beq.n	80064dc <TIM_Base_SetConfig+0x40>
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80064ba:	d00f      	beq.n	80064dc <TIM_Base_SetConfig+0x40>
 80064bc:	687b      	ldr	r3, [r7, #4]
 80064be:	4a3d      	ldr	r2, [pc, #244]	; (80065b4 <TIM_Base_SetConfig+0x118>)
 80064c0:	4293      	cmp	r3, r2
 80064c2:	d00b      	beq.n	80064dc <TIM_Base_SetConfig+0x40>
 80064c4:	687b      	ldr	r3, [r7, #4]
 80064c6:	4a3c      	ldr	r2, [pc, #240]	; (80065b8 <TIM_Base_SetConfig+0x11c>)
 80064c8:	4293      	cmp	r3, r2
 80064ca:	d007      	beq.n	80064dc <TIM_Base_SetConfig+0x40>
 80064cc:	687b      	ldr	r3, [r7, #4]
 80064ce:	4a3b      	ldr	r2, [pc, #236]	; (80065bc <TIM_Base_SetConfig+0x120>)
 80064d0:	4293      	cmp	r3, r2
 80064d2:	d003      	beq.n	80064dc <TIM_Base_SetConfig+0x40>
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	4a3a      	ldr	r2, [pc, #232]	; (80065c0 <TIM_Base_SetConfig+0x124>)
 80064d8:	4293      	cmp	r3, r2
 80064da:	d108      	bne.n	80064ee <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80064dc:	68fb      	ldr	r3, [r7, #12]
 80064de:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80064e2:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80064e4:	683b      	ldr	r3, [r7, #0]
 80064e6:	685b      	ldr	r3, [r3, #4]
 80064e8:	68fa      	ldr	r2, [r7, #12]
 80064ea:	4313      	orrs	r3, r2
 80064ec:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	4a2f      	ldr	r2, [pc, #188]	; (80065b0 <TIM_Base_SetConfig+0x114>)
 80064f2:	4293      	cmp	r3, r2
 80064f4:	d02b      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80064fc:	d027      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	4a2c      	ldr	r2, [pc, #176]	; (80065b4 <TIM_Base_SetConfig+0x118>)
 8006502:	4293      	cmp	r3, r2
 8006504:	d023      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 8006506:	687b      	ldr	r3, [r7, #4]
 8006508:	4a2b      	ldr	r2, [pc, #172]	; (80065b8 <TIM_Base_SetConfig+0x11c>)
 800650a:	4293      	cmp	r3, r2
 800650c:	d01f      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	4a2a      	ldr	r2, [pc, #168]	; (80065bc <TIM_Base_SetConfig+0x120>)
 8006512:	4293      	cmp	r3, r2
 8006514:	d01b      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	4a29      	ldr	r2, [pc, #164]	; (80065c0 <TIM_Base_SetConfig+0x124>)
 800651a:	4293      	cmp	r3, r2
 800651c:	d017      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	4a28      	ldr	r2, [pc, #160]	; (80065c4 <TIM_Base_SetConfig+0x128>)
 8006522:	4293      	cmp	r3, r2
 8006524:	d013      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 8006526:	687b      	ldr	r3, [r7, #4]
 8006528:	4a27      	ldr	r2, [pc, #156]	; (80065c8 <TIM_Base_SetConfig+0x12c>)
 800652a:	4293      	cmp	r3, r2
 800652c:	d00f      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	4a26      	ldr	r2, [pc, #152]	; (80065cc <TIM_Base_SetConfig+0x130>)
 8006532:	4293      	cmp	r3, r2
 8006534:	d00b      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	4a25      	ldr	r2, [pc, #148]	; (80065d0 <TIM_Base_SetConfig+0x134>)
 800653a:	4293      	cmp	r3, r2
 800653c:	d007      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	4a24      	ldr	r2, [pc, #144]	; (80065d4 <TIM_Base_SetConfig+0x138>)
 8006542:	4293      	cmp	r3, r2
 8006544:	d003      	beq.n	800654e <TIM_Base_SetConfig+0xb2>
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	4a23      	ldr	r2, [pc, #140]	; (80065d8 <TIM_Base_SetConfig+0x13c>)
 800654a:	4293      	cmp	r3, r2
 800654c:	d108      	bne.n	8006560 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800654e:	68fb      	ldr	r3, [r7, #12]
 8006550:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006554:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006556:	683b      	ldr	r3, [r7, #0]
 8006558:	68db      	ldr	r3, [r3, #12]
 800655a:	68fa      	ldr	r2, [r7, #12]
 800655c:	4313      	orrs	r3, r2
 800655e:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006560:	68fb      	ldr	r3, [r7, #12]
 8006562:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8006566:	683b      	ldr	r3, [r7, #0]
 8006568:	695b      	ldr	r3, [r3, #20]
 800656a:	4313      	orrs	r3, r2
 800656c:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 800656e:	687b      	ldr	r3, [r7, #4]
 8006570:	68fa      	ldr	r2, [r7, #12]
 8006572:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006574:	683b      	ldr	r3, [r7, #0]
 8006576:	689a      	ldr	r2, [r3, #8]
 8006578:	687b      	ldr	r3, [r7, #4]
 800657a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800657c:	683b      	ldr	r3, [r7, #0]
 800657e:	681a      	ldr	r2, [r3, #0]
 8006580:	687b      	ldr	r3, [r7, #4]
 8006582:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	4a0a      	ldr	r2, [pc, #40]	; (80065b0 <TIM_Base_SetConfig+0x114>)
 8006588:	4293      	cmp	r3, r2
 800658a:	d003      	beq.n	8006594 <TIM_Base_SetConfig+0xf8>
 800658c:	687b      	ldr	r3, [r7, #4]
 800658e:	4a0c      	ldr	r2, [pc, #48]	; (80065c0 <TIM_Base_SetConfig+0x124>)
 8006590:	4293      	cmp	r3, r2
 8006592:	d103      	bne.n	800659c <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006594:	683b      	ldr	r3, [r7, #0]
 8006596:	691a      	ldr	r2, [r3, #16]
 8006598:	687b      	ldr	r3, [r7, #4]
 800659a:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	2201      	movs	r2, #1
 80065a0:	615a      	str	r2, [r3, #20]
}
 80065a2:	bf00      	nop
 80065a4:	3714      	adds	r7, #20
 80065a6:	46bd      	mov	sp, r7
 80065a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065ac:	4770      	bx	lr
 80065ae:	bf00      	nop
 80065b0:	40010000 	.word	0x40010000
 80065b4:	40000400 	.word	0x40000400
 80065b8:	40000800 	.word	0x40000800
 80065bc:	40000c00 	.word	0x40000c00
 80065c0:	40010400 	.word	0x40010400
 80065c4:	40014000 	.word	0x40014000
 80065c8:	40014400 	.word	0x40014400
 80065cc:	40014800 	.word	0x40014800
 80065d0:	40001800 	.word	0x40001800
 80065d4:	40001c00 	.word	0x40001c00
 80065d8:	40002000 	.word	0x40002000

080065dc <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80065dc:	b480      	push	{r7}
 80065de:	b087      	sub	sp, #28
 80065e0:	af00      	add	r7, sp, #0
 80065e2:	6078      	str	r0, [r7, #4]
 80065e4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	6a1b      	ldr	r3, [r3, #32]
 80065ea:	f023 0201 	bic.w	r2, r3, #1
 80065ee:	687b      	ldr	r3, [r7, #4]
 80065f0:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	6a1b      	ldr	r3, [r3, #32]
 80065f6:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80065f8:	687b      	ldr	r3, [r7, #4]
 80065fa:	685b      	ldr	r3, [r3, #4]
 80065fc:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80065fe:	687b      	ldr	r3, [r7, #4]
 8006600:	699b      	ldr	r3, [r3, #24]
 8006602:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8006604:	68fb      	ldr	r3, [r7, #12]
 8006606:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800660a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800660c:	68fb      	ldr	r3, [r7, #12]
 800660e:	f023 0303 	bic.w	r3, r3, #3
 8006612:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8006614:	683b      	ldr	r3, [r7, #0]
 8006616:	681b      	ldr	r3, [r3, #0]
 8006618:	68fa      	ldr	r2, [r7, #12]
 800661a:	4313      	orrs	r3, r2
 800661c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 800661e:	697b      	ldr	r3, [r7, #20]
 8006620:	f023 0302 	bic.w	r3, r3, #2
 8006624:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8006626:	683b      	ldr	r3, [r7, #0]
 8006628:	689b      	ldr	r3, [r3, #8]
 800662a:	697a      	ldr	r2, [r7, #20]
 800662c:	4313      	orrs	r3, r2
 800662e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8006630:	687b      	ldr	r3, [r7, #4]
 8006632:	4a20      	ldr	r2, [pc, #128]	; (80066b4 <TIM_OC1_SetConfig+0xd8>)
 8006634:	4293      	cmp	r3, r2
 8006636:	d003      	beq.n	8006640 <TIM_OC1_SetConfig+0x64>
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	4a1f      	ldr	r2, [pc, #124]	; (80066b8 <TIM_OC1_SetConfig+0xdc>)
 800663c:	4293      	cmp	r3, r2
 800663e:	d10c      	bne.n	800665a <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8006640:	697b      	ldr	r3, [r7, #20]
 8006642:	f023 0308 	bic.w	r3, r3, #8
 8006646:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8006648:	683b      	ldr	r3, [r7, #0]
 800664a:	68db      	ldr	r3, [r3, #12]
 800664c:	697a      	ldr	r2, [r7, #20]
 800664e:	4313      	orrs	r3, r2
 8006650:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8006652:	697b      	ldr	r3, [r7, #20]
 8006654:	f023 0304 	bic.w	r3, r3, #4
 8006658:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	4a15      	ldr	r2, [pc, #84]	; (80066b4 <TIM_OC1_SetConfig+0xd8>)
 800665e:	4293      	cmp	r3, r2
 8006660:	d003      	beq.n	800666a <TIM_OC1_SetConfig+0x8e>
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	4a14      	ldr	r2, [pc, #80]	; (80066b8 <TIM_OC1_SetConfig+0xdc>)
 8006666:	4293      	cmp	r3, r2
 8006668:	d111      	bne.n	800668e <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800666a:	693b      	ldr	r3, [r7, #16]
 800666c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006670:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8006672:	693b      	ldr	r3, [r7, #16]
 8006674:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006678:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800667a:	683b      	ldr	r3, [r7, #0]
 800667c:	695b      	ldr	r3, [r3, #20]
 800667e:	693a      	ldr	r2, [r7, #16]
 8006680:	4313      	orrs	r3, r2
 8006682:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8006684:	683b      	ldr	r3, [r7, #0]
 8006686:	699b      	ldr	r3, [r3, #24]
 8006688:	693a      	ldr	r2, [r7, #16]
 800668a:	4313      	orrs	r3, r2
 800668c:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800668e:	687b      	ldr	r3, [r7, #4]
 8006690:	693a      	ldr	r2, [r7, #16]
 8006692:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8006694:	687b      	ldr	r3, [r7, #4]
 8006696:	68fa      	ldr	r2, [r7, #12]
 8006698:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800669a:	683b      	ldr	r3, [r7, #0]
 800669c:	685a      	ldr	r2, [r3, #4]
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	697a      	ldr	r2, [r7, #20]
 80066a6:	621a      	str	r2, [r3, #32]
}
 80066a8:	bf00      	nop
 80066aa:	371c      	adds	r7, #28
 80066ac:	46bd      	mov	sp, r7
 80066ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066b2:	4770      	bx	lr
 80066b4:	40010000 	.word	0x40010000
 80066b8:	40010400 	.word	0x40010400

080066bc <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80066bc:	b480      	push	{r7}
 80066be:	b087      	sub	sp, #28
 80066c0:	af00      	add	r7, sp, #0
 80066c2:	6078      	str	r0, [r7, #4]
 80066c4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80066c6:	687b      	ldr	r3, [r7, #4]
 80066c8:	6a1b      	ldr	r3, [r3, #32]
 80066ca:	f023 0210 	bic.w	r2, r3, #16
 80066ce:	687b      	ldr	r3, [r7, #4]
 80066d0:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	6a1b      	ldr	r3, [r3, #32]
 80066d6:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	685b      	ldr	r3, [r3, #4]
 80066dc:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	699b      	ldr	r3, [r3, #24]
 80066e2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 80066e4:	68fb      	ldr	r3, [r7, #12]
 80066e6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80066ea:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80066ec:	68fb      	ldr	r3, [r7, #12]
 80066ee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80066f2:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80066f4:	683b      	ldr	r3, [r7, #0]
 80066f6:	681b      	ldr	r3, [r3, #0]
 80066f8:	021b      	lsls	r3, r3, #8
 80066fa:	68fa      	ldr	r2, [r7, #12]
 80066fc:	4313      	orrs	r3, r2
 80066fe:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8006700:	697b      	ldr	r3, [r7, #20]
 8006702:	f023 0320 	bic.w	r3, r3, #32
 8006706:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8006708:	683b      	ldr	r3, [r7, #0]
 800670a:	689b      	ldr	r3, [r3, #8]
 800670c:	011b      	lsls	r3, r3, #4
 800670e:	697a      	ldr	r2, [r7, #20]
 8006710:	4313      	orrs	r3, r2
 8006712:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	4a22      	ldr	r2, [pc, #136]	; (80067a0 <TIM_OC2_SetConfig+0xe4>)
 8006718:	4293      	cmp	r3, r2
 800671a:	d003      	beq.n	8006724 <TIM_OC2_SetConfig+0x68>
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	4a21      	ldr	r2, [pc, #132]	; (80067a4 <TIM_OC2_SetConfig+0xe8>)
 8006720:	4293      	cmp	r3, r2
 8006722:	d10d      	bne.n	8006740 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8006724:	697b      	ldr	r3, [r7, #20]
 8006726:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800672a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800672c:	683b      	ldr	r3, [r7, #0]
 800672e:	68db      	ldr	r3, [r3, #12]
 8006730:	011b      	lsls	r3, r3, #4
 8006732:	697a      	ldr	r2, [r7, #20]
 8006734:	4313      	orrs	r3, r2
 8006736:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8006738:	697b      	ldr	r3, [r7, #20]
 800673a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800673e:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	4a17      	ldr	r2, [pc, #92]	; (80067a0 <TIM_OC2_SetConfig+0xe4>)
 8006744:	4293      	cmp	r3, r2
 8006746:	d003      	beq.n	8006750 <TIM_OC2_SetConfig+0x94>
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	4a16      	ldr	r2, [pc, #88]	; (80067a4 <TIM_OC2_SetConfig+0xe8>)
 800674c:	4293      	cmp	r3, r2
 800674e:	d113      	bne.n	8006778 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8006750:	693b      	ldr	r3, [r7, #16]
 8006752:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006756:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8006758:	693b      	ldr	r3, [r7, #16]
 800675a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800675e:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8006760:	683b      	ldr	r3, [r7, #0]
 8006762:	695b      	ldr	r3, [r3, #20]
 8006764:	009b      	lsls	r3, r3, #2
 8006766:	693a      	ldr	r2, [r7, #16]
 8006768:	4313      	orrs	r3, r2
 800676a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800676c:	683b      	ldr	r3, [r7, #0]
 800676e:	699b      	ldr	r3, [r3, #24]
 8006770:	009b      	lsls	r3, r3, #2
 8006772:	693a      	ldr	r2, [r7, #16]
 8006774:	4313      	orrs	r3, r2
 8006776:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006778:	687b      	ldr	r3, [r7, #4]
 800677a:	693a      	ldr	r2, [r7, #16]
 800677c:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800677e:	687b      	ldr	r3, [r7, #4]
 8006780:	68fa      	ldr	r2, [r7, #12]
 8006782:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8006784:	683b      	ldr	r3, [r7, #0]
 8006786:	685a      	ldr	r2, [r3, #4]
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	697a      	ldr	r2, [r7, #20]
 8006790:	621a      	str	r2, [r3, #32]
}
 8006792:	bf00      	nop
 8006794:	371c      	adds	r7, #28
 8006796:	46bd      	mov	sp, r7
 8006798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800679c:	4770      	bx	lr
 800679e:	bf00      	nop
 80067a0:	40010000 	.word	0x40010000
 80067a4:	40010400 	.word	0x40010400

080067a8 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80067a8:	b480      	push	{r7}
 80067aa:	b087      	sub	sp, #28
 80067ac:	af00      	add	r7, sp, #0
 80067ae:	6078      	str	r0, [r7, #4]
 80067b0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80067b2:	687b      	ldr	r3, [r7, #4]
 80067b4:	6a1b      	ldr	r3, [r3, #32]
 80067b6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80067ba:	687b      	ldr	r3, [r7, #4]
 80067bc:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	6a1b      	ldr	r3, [r3, #32]
 80067c2:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	685b      	ldr	r3, [r3, #4]
 80067c8:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80067ca:	687b      	ldr	r3, [r7, #4]
 80067cc:	69db      	ldr	r3, [r3, #28]
 80067ce:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 80067d0:	68fb      	ldr	r3, [r7, #12]
 80067d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80067d6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80067d8:	68fb      	ldr	r3, [r7, #12]
 80067da:	f023 0303 	bic.w	r3, r3, #3
 80067de:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80067e0:	683b      	ldr	r3, [r7, #0]
 80067e2:	681b      	ldr	r3, [r3, #0]
 80067e4:	68fa      	ldr	r2, [r7, #12]
 80067e6:	4313      	orrs	r3, r2
 80067e8:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 80067ea:	697b      	ldr	r3, [r7, #20]
 80067ec:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80067f0:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80067f2:	683b      	ldr	r3, [r7, #0]
 80067f4:	689b      	ldr	r3, [r3, #8]
 80067f6:	021b      	lsls	r3, r3, #8
 80067f8:	697a      	ldr	r2, [r7, #20]
 80067fa:	4313      	orrs	r3, r2
 80067fc:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	4a21      	ldr	r2, [pc, #132]	; (8006888 <TIM_OC3_SetConfig+0xe0>)
 8006802:	4293      	cmp	r3, r2
 8006804:	d003      	beq.n	800680e <TIM_OC3_SetConfig+0x66>
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	4a20      	ldr	r2, [pc, #128]	; (800688c <TIM_OC3_SetConfig+0xe4>)
 800680a:	4293      	cmp	r3, r2
 800680c:	d10d      	bne.n	800682a <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 800680e:	697b      	ldr	r3, [r7, #20]
 8006810:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006814:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8006816:	683b      	ldr	r3, [r7, #0]
 8006818:	68db      	ldr	r3, [r3, #12]
 800681a:	021b      	lsls	r3, r3, #8
 800681c:	697a      	ldr	r2, [r7, #20]
 800681e:	4313      	orrs	r3, r2
 8006820:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8006822:	697b      	ldr	r3, [r7, #20]
 8006824:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006828:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800682a:	687b      	ldr	r3, [r7, #4]
 800682c:	4a16      	ldr	r2, [pc, #88]	; (8006888 <TIM_OC3_SetConfig+0xe0>)
 800682e:	4293      	cmp	r3, r2
 8006830:	d003      	beq.n	800683a <TIM_OC3_SetConfig+0x92>
 8006832:	687b      	ldr	r3, [r7, #4]
 8006834:	4a15      	ldr	r2, [pc, #84]	; (800688c <TIM_OC3_SetConfig+0xe4>)
 8006836:	4293      	cmp	r3, r2
 8006838:	d113      	bne.n	8006862 <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 800683a:	693b      	ldr	r3, [r7, #16]
 800683c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006840:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8006842:	693b      	ldr	r3, [r7, #16]
 8006844:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006848:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 800684a:	683b      	ldr	r3, [r7, #0]
 800684c:	695b      	ldr	r3, [r3, #20]
 800684e:	011b      	lsls	r3, r3, #4
 8006850:	693a      	ldr	r2, [r7, #16]
 8006852:	4313      	orrs	r3, r2
 8006854:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8006856:	683b      	ldr	r3, [r7, #0]
 8006858:	699b      	ldr	r3, [r3, #24]
 800685a:	011b      	lsls	r3, r3, #4
 800685c:	693a      	ldr	r2, [r7, #16]
 800685e:	4313      	orrs	r3, r2
 8006860:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8006862:	687b      	ldr	r3, [r7, #4]
 8006864:	693a      	ldr	r2, [r7, #16]
 8006866:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8006868:	687b      	ldr	r3, [r7, #4]
 800686a:	68fa      	ldr	r2, [r7, #12]
 800686c:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800686e:	683b      	ldr	r3, [r7, #0]
 8006870:	685a      	ldr	r2, [r3, #4]
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006876:	687b      	ldr	r3, [r7, #4]
 8006878:	697a      	ldr	r2, [r7, #20]
 800687a:	621a      	str	r2, [r3, #32]
}
 800687c:	bf00      	nop
 800687e:	371c      	adds	r7, #28
 8006880:	46bd      	mov	sp, r7
 8006882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006886:	4770      	bx	lr
 8006888:	40010000 	.word	0x40010000
 800688c:	40010400 	.word	0x40010400

08006890 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8006890:	b480      	push	{r7}
 8006892:	b087      	sub	sp, #28
 8006894:	af00      	add	r7, sp, #0
 8006896:	6078      	str	r0, [r7, #4]
 8006898:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	6a1b      	ldr	r3, [r3, #32]
 800689e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80068a2:	687b      	ldr	r3, [r7, #4]
 80068a4:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	6a1b      	ldr	r3, [r3, #32]
 80068aa:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	685b      	ldr	r3, [r3, #4]
 80068b0:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80068b2:	687b      	ldr	r3, [r7, #4]
 80068b4:	69db      	ldr	r3, [r3, #28]
 80068b6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 80068b8:	68fb      	ldr	r3, [r7, #12]
 80068ba:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80068be:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 80068c0:	68fb      	ldr	r3, [r7, #12]
 80068c2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80068c6:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80068c8:	683b      	ldr	r3, [r7, #0]
 80068ca:	681b      	ldr	r3, [r3, #0]
 80068cc:	021b      	lsls	r3, r3, #8
 80068ce:	68fa      	ldr	r2, [r7, #12]
 80068d0:	4313      	orrs	r3, r2
 80068d2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 80068d4:	693b      	ldr	r3, [r7, #16]
 80068d6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80068da:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 80068dc:	683b      	ldr	r3, [r7, #0]
 80068de:	689b      	ldr	r3, [r3, #8]
 80068e0:	031b      	lsls	r3, r3, #12
 80068e2:	693a      	ldr	r2, [r7, #16]
 80068e4:	4313      	orrs	r3, r2
 80068e6:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	4a12      	ldr	r2, [pc, #72]	; (8006934 <TIM_OC4_SetConfig+0xa4>)
 80068ec:	4293      	cmp	r3, r2
 80068ee:	d003      	beq.n	80068f8 <TIM_OC4_SetConfig+0x68>
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	4a11      	ldr	r2, [pc, #68]	; (8006938 <TIM_OC4_SetConfig+0xa8>)
 80068f4:	4293      	cmp	r3, r2
 80068f6:	d109      	bne.n	800690c <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 80068f8:	697b      	ldr	r3, [r7, #20]
 80068fa:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80068fe:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8006900:	683b      	ldr	r3, [r7, #0]
 8006902:	695b      	ldr	r3, [r3, #20]
 8006904:	019b      	lsls	r3, r3, #6
 8006906:	697a      	ldr	r2, [r7, #20]
 8006908:	4313      	orrs	r3, r2
 800690a:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	697a      	ldr	r2, [r7, #20]
 8006910:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	68fa      	ldr	r2, [r7, #12]
 8006916:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8006918:	683b      	ldr	r3, [r7, #0]
 800691a:	685a      	ldr	r2, [r3, #4]
 800691c:	687b      	ldr	r3, [r7, #4]
 800691e:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8006920:	687b      	ldr	r3, [r7, #4]
 8006922:	693a      	ldr	r2, [r7, #16]
 8006924:	621a      	str	r2, [r3, #32]
}
 8006926:	bf00      	nop
 8006928:	371c      	adds	r7, #28
 800692a:	46bd      	mov	sp, r7
 800692c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006930:	4770      	bx	lr
 8006932:	bf00      	nop
 8006934:	40010000 	.word	0x40010000
 8006938:	40010400 	.word	0x40010400

0800693c <TIM_TI1_SetConfig>:
  *       (on channel2 path) is used as the input signal. Therefore CCMR1 must be
  *        protected against un-initialized filter and polarity values.
  */
void TIM_TI1_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                       uint32_t TIM_ICFilter)
{
 800693c:	b480      	push	{r7}
 800693e:	b087      	sub	sp, #28
 8006940:	af00      	add	r7, sp, #0
 8006942:	60f8      	str	r0, [r7, #12]
 8006944:	60b9      	str	r1, [r7, #8]
 8006946:	607a      	str	r2, [r7, #4]
 8006948:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800694a:	68fb      	ldr	r3, [r7, #12]
 800694c:	6a1b      	ldr	r3, [r3, #32]
 800694e:	f023 0201 	bic.w	r2, r3, #1
 8006952:	68fb      	ldr	r3, [r7, #12]
 8006954:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006956:	68fb      	ldr	r3, [r7, #12]
 8006958:	699b      	ldr	r3, [r3, #24]
 800695a:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 800695c:	68fb      	ldr	r3, [r7, #12]
 800695e:	6a1b      	ldr	r3, [r3, #32]
 8006960:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  if (IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 8006962:	68fb      	ldr	r3, [r7, #12]
 8006964:	4a28      	ldr	r2, [pc, #160]	; (8006a08 <TIM_TI1_SetConfig+0xcc>)
 8006966:	4293      	cmp	r3, r2
 8006968:	d01b      	beq.n	80069a2 <TIM_TI1_SetConfig+0x66>
 800696a:	68fb      	ldr	r3, [r7, #12]
 800696c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006970:	d017      	beq.n	80069a2 <TIM_TI1_SetConfig+0x66>
 8006972:	68fb      	ldr	r3, [r7, #12]
 8006974:	4a25      	ldr	r2, [pc, #148]	; (8006a0c <TIM_TI1_SetConfig+0xd0>)
 8006976:	4293      	cmp	r3, r2
 8006978:	d013      	beq.n	80069a2 <TIM_TI1_SetConfig+0x66>
 800697a:	68fb      	ldr	r3, [r7, #12]
 800697c:	4a24      	ldr	r2, [pc, #144]	; (8006a10 <TIM_TI1_SetConfig+0xd4>)
 800697e:	4293      	cmp	r3, r2
 8006980:	d00f      	beq.n	80069a2 <TIM_TI1_SetConfig+0x66>
 8006982:	68fb      	ldr	r3, [r7, #12]
 8006984:	4a23      	ldr	r2, [pc, #140]	; (8006a14 <TIM_TI1_SetConfig+0xd8>)
 8006986:	4293      	cmp	r3, r2
 8006988:	d00b      	beq.n	80069a2 <TIM_TI1_SetConfig+0x66>
 800698a:	68fb      	ldr	r3, [r7, #12]
 800698c:	4a22      	ldr	r2, [pc, #136]	; (8006a18 <TIM_TI1_SetConfig+0xdc>)
 800698e:	4293      	cmp	r3, r2
 8006990:	d007      	beq.n	80069a2 <TIM_TI1_SetConfig+0x66>
 8006992:	68fb      	ldr	r3, [r7, #12]
 8006994:	4a21      	ldr	r2, [pc, #132]	; (8006a1c <TIM_TI1_SetConfig+0xe0>)
 8006996:	4293      	cmp	r3, r2
 8006998:	d003      	beq.n	80069a2 <TIM_TI1_SetConfig+0x66>
 800699a:	68fb      	ldr	r3, [r7, #12]
 800699c:	4a20      	ldr	r2, [pc, #128]	; (8006a20 <TIM_TI1_SetConfig+0xe4>)
 800699e:	4293      	cmp	r3, r2
 80069a0:	d101      	bne.n	80069a6 <TIM_TI1_SetConfig+0x6a>
 80069a2:	2301      	movs	r3, #1
 80069a4:	e000      	b.n	80069a8 <TIM_TI1_SetConfig+0x6c>
 80069a6:	2300      	movs	r3, #0
 80069a8:	2b00      	cmp	r3, #0
 80069aa:	d008      	beq.n	80069be <TIM_TI1_SetConfig+0x82>
  {
    tmpccmr1 &= ~TIM_CCMR1_CC1S;
 80069ac:	697b      	ldr	r3, [r7, #20]
 80069ae:	f023 0303 	bic.w	r3, r3, #3
 80069b2:	617b      	str	r3, [r7, #20]
    tmpccmr1 |= TIM_ICSelection;
 80069b4:	697a      	ldr	r2, [r7, #20]
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	4313      	orrs	r3, r2
 80069ba:	617b      	str	r3, [r7, #20]
 80069bc:	e003      	b.n	80069c6 <TIM_TI1_SetConfig+0x8a>
  }
  else
  {
    tmpccmr1 |= TIM_CCMR1_CC1S_0;
 80069be:	697b      	ldr	r3, [r7, #20]
 80069c0:	f043 0301 	orr.w	r3, r3, #1
 80069c4:	617b      	str	r3, [r7, #20]
  }

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80069c6:	697b      	ldr	r3, [r7, #20]
 80069c8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80069cc:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
 80069ce:	683b      	ldr	r3, [r7, #0]
 80069d0:	011b      	lsls	r3, r3, #4
 80069d2:	b2db      	uxtb	r3, r3
 80069d4:	697a      	ldr	r2, [r7, #20]
 80069d6:	4313      	orrs	r3, r2
 80069d8:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80069da:	693b      	ldr	r3, [r7, #16]
 80069dc:	f023 030a 	bic.w	r3, r3, #10
 80069e0:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
 80069e2:	68bb      	ldr	r3, [r7, #8]
 80069e4:	f003 030a 	and.w	r3, r3, #10
 80069e8:	693a      	ldr	r2, [r7, #16]
 80069ea:	4313      	orrs	r3, r2
 80069ec:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 80069ee:	68fb      	ldr	r3, [r7, #12]
 80069f0:	697a      	ldr	r2, [r7, #20]
 80069f2:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80069f4:	68fb      	ldr	r3, [r7, #12]
 80069f6:	693a      	ldr	r2, [r7, #16]
 80069f8:	621a      	str	r2, [r3, #32]
}
 80069fa:	bf00      	nop
 80069fc:	371c      	adds	r7, #28
 80069fe:	46bd      	mov	sp, r7
 8006a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a04:	4770      	bx	lr
 8006a06:	bf00      	nop
 8006a08:	40010000 	.word	0x40010000
 8006a0c:	40000400 	.word	0x40000400
 8006a10:	40000800 	.word	0x40000800
 8006a14:	40000c00 	.word	0x40000c00
 8006a18:	40010400 	.word	0x40010400
 8006a1c:	40014000 	.word	0x40014000
 8006a20:	40001800 	.word	0x40001800

08006a24 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006a24:	b480      	push	{r7}
 8006a26:	b087      	sub	sp, #28
 8006a28:	af00      	add	r7, sp, #0
 8006a2a:	60f8      	str	r0, [r7, #12]
 8006a2c:	60b9      	str	r1, [r7, #8]
 8006a2e:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8006a30:	68fb      	ldr	r3, [r7, #12]
 8006a32:	6a1b      	ldr	r3, [r3, #32]
 8006a34:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8006a36:	68fb      	ldr	r3, [r7, #12]
 8006a38:	6a1b      	ldr	r3, [r3, #32]
 8006a3a:	f023 0201 	bic.w	r2, r3, #1
 8006a3e:	68fb      	ldr	r3, [r7, #12]
 8006a40:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	699b      	ldr	r3, [r3, #24]
 8006a46:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8006a48:	693b      	ldr	r3, [r7, #16]
 8006a4a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006a4e:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	011b      	lsls	r3, r3, #4
 8006a54:	693a      	ldr	r2, [r7, #16]
 8006a56:	4313      	orrs	r3, r2
 8006a58:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8006a5a:	697b      	ldr	r3, [r7, #20]
 8006a5c:	f023 030a 	bic.w	r3, r3, #10
 8006a60:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8006a62:	697a      	ldr	r2, [r7, #20]
 8006a64:	68bb      	ldr	r3, [r7, #8]
 8006a66:	4313      	orrs	r3, r2
 8006a68:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8006a6a:	68fb      	ldr	r3, [r7, #12]
 8006a6c:	693a      	ldr	r2, [r7, #16]
 8006a6e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006a70:	68fb      	ldr	r3, [r7, #12]
 8006a72:	697a      	ldr	r2, [r7, #20]
 8006a74:	621a      	str	r2, [r3, #32]
}
 8006a76:	bf00      	nop
 8006a78:	371c      	adds	r7, #28
 8006a7a:	46bd      	mov	sp, r7
 8006a7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a80:	4770      	bx	lr

08006a82 <TIM_TI2_SetConfig>:
  *       (on channel1 path) is used as the input signal. Therefore CCMR1 must be
  *        protected against un-initialized filter and polarity values.
  */
static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                              uint32_t TIM_ICFilter)
{
 8006a82:	b480      	push	{r7}
 8006a84:	b087      	sub	sp, #28
 8006a86:	af00      	add	r7, sp, #0
 8006a88:	60f8      	str	r0, [r7, #12]
 8006a8a:	60b9      	str	r1, [r7, #8]
 8006a8c:	607a      	str	r2, [r7, #4]
 8006a8e:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	6a1b      	ldr	r3, [r3, #32]
 8006a94:	f023 0210 	bic.w	r2, r3, #16
 8006a98:	68fb      	ldr	r3, [r7, #12]
 8006a9a:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006a9c:	68fb      	ldr	r3, [r7, #12]
 8006a9e:	699b      	ldr	r3, [r3, #24]
 8006aa0:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	6a1b      	ldr	r3, [r3, #32]
 8006aa6:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  tmpccmr1 &= ~TIM_CCMR1_CC2S;
 8006aa8:	697b      	ldr	r3, [r7, #20]
 8006aaa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006aae:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICSelection << 8U);
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	021b      	lsls	r3, r3, #8
 8006ab4:	697a      	ldr	r2, [r7, #20]
 8006ab6:	4313      	orrs	r3, r2
 8006ab8:	617b      	str	r3, [r7, #20]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8006aba:	697b      	ldr	r3, [r7, #20]
 8006abc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8006ac0:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 8006ac2:	683b      	ldr	r3, [r7, #0]
 8006ac4:	031b      	lsls	r3, r3, #12
 8006ac6:	b29b      	uxth	r3, r3
 8006ac8:	697a      	ldr	r2, [r7, #20]
 8006aca:	4313      	orrs	r3, r2
 8006acc:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8006ace:	693b      	ldr	r3, [r7, #16]
 8006ad0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8006ad4:	613b      	str	r3, [r7, #16]
  tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 8006ad6:	68bb      	ldr	r3, [r7, #8]
 8006ad8:	011b      	lsls	r3, r3, #4
 8006ada:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 8006ade:	693a      	ldr	r2, [r7, #16]
 8006ae0:	4313      	orrs	r3, r2
 8006ae2:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8006ae4:	68fb      	ldr	r3, [r7, #12]
 8006ae6:	697a      	ldr	r2, [r7, #20]
 8006ae8:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006aea:	68fb      	ldr	r3, [r7, #12]
 8006aec:	693a      	ldr	r2, [r7, #16]
 8006aee:	621a      	str	r2, [r3, #32]
}
 8006af0:	bf00      	nop
 8006af2:	371c      	adds	r7, #28
 8006af4:	46bd      	mov	sp, r7
 8006af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006afa:	4770      	bx	lr

08006afc <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006afc:	b480      	push	{r7}
 8006afe:	b087      	sub	sp, #28
 8006b00:	af00      	add	r7, sp, #0
 8006b02:	60f8      	str	r0, [r7, #12]
 8006b04:	60b9      	str	r1, [r7, #8]
 8006b06:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006b08:	68fb      	ldr	r3, [r7, #12]
 8006b0a:	6a1b      	ldr	r3, [r3, #32]
 8006b0c:	f023 0210 	bic.w	r2, r3, #16
 8006b10:	68fb      	ldr	r3, [r7, #12]
 8006b12:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006b14:	68fb      	ldr	r3, [r7, #12]
 8006b16:	699b      	ldr	r3, [r3, #24]
 8006b18:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006b1a:	68fb      	ldr	r3, [r7, #12]
 8006b1c:	6a1b      	ldr	r3, [r3, #32]
 8006b1e:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8006b20:	697b      	ldr	r3, [r7, #20]
 8006b22:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8006b26:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	031b      	lsls	r3, r3, #12
 8006b2c:	697a      	ldr	r2, [r7, #20]
 8006b2e:	4313      	orrs	r3, r2
 8006b30:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8006b32:	693b      	ldr	r3, [r7, #16]
 8006b34:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8006b38:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8006b3a:	68bb      	ldr	r3, [r7, #8]
 8006b3c:	011b      	lsls	r3, r3, #4
 8006b3e:	693a      	ldr	r2, [r7, #16]
 8006b40:	4313      	orrs	r3, r2
 8006b42:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8006b44:	68fb      	ldr	r3, [r7, #12]
 8006b46:	697a      	ldr	r2, [r7, #20]
 8006b48:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006b4a:	68fb      	ldr	r3, [r7, #12]
 8006b4c:	693a      	ldr	r2, [r7, #16]
 8006b4e:	621a      	str	r2, [r3, #32]
}
 8006b50:	bf00      	nop
 8006b52:	371c      	adds	r7, #28
 8006b54:	46bd      	mov	sp, r7
 8006b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b5a:	4770      	bx	lr

08006b5c <TIM_TI3_SetConfig>:
  *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be
  *        protected against un-initialized filter and polarity values.
  */
static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                              uint32_t TIM_ICFilter)
{
 8006b5c:	b480      	push	{r7}
 8006b5e:	b087      	sub	sp, #28
 8006b60:	af00      	add	r7, sp, #0
 8006b62:	60f8      	str	r0, [r7, #12]
 8006b64:	60b9      	str	r1, [r7, #8]
 8006b66:	607a      	str	r2, [r7, #4]
 8006b68:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr2;
  uint32_t tmpccer;

  /* Disable the Channel 3: Reset the CC3E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8006b6a:	68fb      	ldr	r3, [r7, #12]
 8006b6c:	6a1b      	ldr	r3, [r3, #32]
 8006b6e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006b72:	68fb      	ldr	r3, [r7, #12]
 8006b74:	621a      	str	r2, [r3, #32]
  tmpccmr2 = TIMx->CCMR2;
 8006b76:	68fb      	ldr	r3, [r7, #12]
 8006b78:	69db      	ldr	r3, [r3, #28]
 8006b7a:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006b7c:	68fb      	ldr	r3, [r7, #12]
 8006b7e:	6a1b      	ldr	r3, [r3, #32]
 8006b80:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  tmpccmr2 &= ~TIM_CCMR2_CC3S;
 8006b82:	697b      	ldr	r3, [r7, #20]
 8006b84:	f023 0303 	bic.w	r3, r3, #3
 8006b88:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= TIM_ICSelection;
 8006b8a:	697a      	ldr	r2, [r7, #20]
 8006b8c:	687b      	ldr	r3, [r7, #4]
 8006b8e:	4313      	orrs	r3, r2
 8006b90:	617b      	str	r3, [r7, #20]

  /* Set the filter */
  tmpccmr2 &= ~TIM_CCMR2_IC3F;
 8006b92:	697b      	ldr	r3, [r7, #20]
 8006b94:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006b98:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 8006b9a:	683b      	ldr	r3, [r7, #0]
 8006b9c:	011b      	lsls	r3, r3, #4
 8006b9e:	b2db      	uxtb	r3, r3
 8006ba0:	697a      	ldr	r2, [r7, #20]
 8006ba2:	4313      	orrs	r3, r2
 8006ba4:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= ~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 8006ba6:	693b      	ldr	r3, [r7, #16]
 8006ba8:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 8006bac:	613b      	str	r3, [r7, #16]
  tmpccer |= ((TIM_ICPolarity << 8U) & (TIM_CCER_CC3P | TIM_CCER_CC3NP));
 8006bae:	68bb      	ldr	r3, [r7, #8]
 8006bb0:	021b      	lsls	r3, r3, #8
 8006bb2:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 8006bb6:	693a      	ldr	r2, [r7, #16]
 8006bb8:	4313      	orrs	r3, r2
 8006bba:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
 8006bbc:	68fb      	ldr	r3, [r7, #12]
 8006bbe:	697a      	ldr	r2, [r7, #20]
 8006bc0:	61da      	str	r2, [r3, #28]
  TIMx->CCER = tmpccer;
 8006bc2:	68fb      	ldr	r3, [r7, #12]
 8006bc4:	693a      	ldr	r2, [r7, #16]
 8006bc6:	621a      	str	r2, [r3, #32]
}
 8006bc8:	bf00      	nop
 8006bca:	371c      	adds	r7, #28
 8006bcc:	46bd      	mov	sp, r7
 8006bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bd2:	4770      	bx	lr

08006bd4 <TIM_TI4_SetConfig>:
  *        protected against un-initialized filter and polarity values.
  * @retval None
  */
static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
                              uint32_t TIM_ICFilter)
{
 8006bd4:	b480      	push	{r7}
 8006bd6:	b087      	sub	sp, #28
 8006bd8:	af00      	add	r7, sp, #0
 8006bda:	60f8      	str	r0, [r7, #12]
 8006bdc:	60b9      	str	r1, [r7, #8]
 8006bde:	607a      	str	r2, [r7, #4]
 8006be0:	603b      	str	r3, [r7, #0]
  uint32_t tmpccmr2;
  uint32_t tmpccer;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8006be2:	68fb      	ldr	r3, [r7, #12]
 8006be4:	6a1b      	ldr	r3, [r3, #32]
 8006be6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8006bea:	68fb      	ldr	r3, [r7, #12]
 8006bec:	621a      	str	r2, [r3, #32]
  tmpccmr2 = TIMx->CCMR2;
 8006bee:	68fb      	ldr	r3, [r7, #12]
 8006bf0:	69db      	ldr	r3, [r3, #28]
 8006bf2:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006bf4:	68fb      	ldr	r3, [r7, #12]
 8006bf6:	6a1b      	ldr	r3, [r3, #32]
 8006bf8:	613b      	str	r3, [r7, #16]

  /* Select the Input */
  tmpccmr2 &= ~TIM_CCMR2_CC4S;
 8006bfa:	697b      	ldr	r3, [r7, #20]
 8006bfc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006c00:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= (TIM_ICSelection << 8U);
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	021b      	lsls	r3, r3, #8
 8006c06:	697a      	ldr	r2, [r7, #20]
 8006c08:	4313      	orrs	r3, r2
 8006c0a:	617b      	str	r3, [r7, #20]

  /* Set the filter */
  tmpccmr2 &= ~TIM_CCMR2_IC4F;
 8006c0c:	697b      	ldr	r3, [r7, #20]
 8006c0e:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8006c12:	617b      	str	r3, [r7, #20]
  tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 8006c14:	683b      	ldr	r3, [r7, #0]
 8006c16:	031b      	lsls	r3, r3, #12
 8006c18:	b29b      	uxth	r3, r3
 8006c1a:	697a      	ldr	r2, [r7, #20]
 8006c1c:	4313      	orrs	r3, r2
 8006c1e:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= ~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 8006c20:	693b      	ldr	r3, [r7, #16]
 8006c22:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 8006c26:	613b      	str	r3, [r7, #16]
  tmpccer |= ((TIM_ICPolarity << 12U) & (TIM_CCER_CC4P | TIM_CCER_CC4NP));
 8006c28:	68bb      	ldr	r3, [r7, #8]
 8006c2a:	031b      	lsls	r3, r3, #12
 8006c2c:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 8006c30:	693a      	ldr	r2, [r7, #16]
 8006c32:	4313      	orrs	r3, r2
 8006c34:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
 8006c36:	68fb      	ldr	r3, [r7, #12]
 8006c38:	697a      	ldr	r2, [r7, #20]
 8006c3a:	61da      	str	r2, [r3, #28]
  TIMx->CCER = tmpccer ;
 8006c3c:	68fb      	ldr	r3, [r7, #12]
 8006c3e:	693a      	ldr	r2, [r7, #16]
 8006c40:	621a      	str	r2, [r3, #32]
}
 8006c42:	bf00      	nop
 8006c44:	371c      	adds	r7, #28
 8006c46:	46bd      	mov	sp, r7
 8006c48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c4c:	4770      	bx	lr

08006c4e <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8006c4e:	b480      	push	{r7}
 8006c50:	b085      	sub	sp, #20
 8006c52:	af00      	add	r7, sp, #0
 8006c54:	6078      	str	r0, [r7, #4]
 8006c56:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	689b      	ldr	r3, [r3, #8]
 8006c5c:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8006c5e:	68fb      	ldr	r3, [r7, #12]
 8006c60:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006c64:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006c66:	683a      	ldr	r2, [r7, #0]
 8006c68:	68fb      	ldr	r3, [r7, #12]
 8006c6a:	4313      	orrs	r3, r2
 8006c6c:	f043 0307 	orr.w	r3, r3, #7
 8006c70:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	68fa      	ldr	r2, [r7, #12]
 8006c76:	609a      	str	r2, [r3, #8]
}
 8006c78:	bf00      	nop
 8006c7a:	3714      	adds	r7, #20
 8006c7c:	46bd      	mov	sp, r7
 8006c7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c82:	4770      	bx	lr

08006c84 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8006c84:	b480      	push	{r7}
 8006c86:	b087      	sub	sp, #28
 8006c88:	af00      	add	r7, sp, #0
 8006c8a:	60f8      	str	r0, [r7, #12]
 8006c8c:	60b9      	str	r1, [r7, #8]
 8006c8e:	607a      	str	r2, [r7, #4]
 8006c90:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8006c92:	68fb      	ldr	r3, [r7, #12]
 8006c94:	689b      	ldr	r3, [r3, #8]
 8006c96:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006c98:	697b      	ldr	r3, [r7, #20]
 8006c9a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006c9e:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8006ca0:	683b      	ldr	r3, [r7, #0]
 8006ca2:	021a      	lsls	r2, r3, #8
 8006ca4:	687b      	ldr	r3, [r7, #4]
 8006ca6:	431a      	orrs	r2, r3
 8006ca8:	68bb      	ldr	r3, [r7, #8]
 8006caa:	4313      	orrs	r3, r2
 8006cac:	697a      	ldr	r2, [r7, #20]
 8006cae:	4313      	orrs	r3, r2
 8006cb0:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006cb2:	68fb      	ldr	r3, [r7, #12]
 8006cb4:	697a      	ldr	r2, [r7, #20]
 8006cb6:	609a      	str	r2, [r3, #8]
}
 8006cb8:	bf00      	nop
 8006cba:	371c      	adds	r7, #28
 8006cbc:	46bd      	mov	sp, r7
 8006cbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cc2:	4770      	bx	lr

08006cc4 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8006cc4:	b480      	push	{r7}
 8006cc6:	b087      	sub	sp, #28
 8006cc8:	af00      	add	r7, sp, #0
 8006cca:	60f8      	str	r0, [r7, #12]
 8006ccc:	60b9      	str	r1, [r7, #8]
 8006cce:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8006cd0:	68bb      	ldr	r3, [r7, #8]
 8006cd2:	f003 031f 	and.w	r3, r3, #31
 8006cd6:	2201      	movs	r2, #1
 8006cd8:	fa02 f303 	lsl.w	r3, r2, r3
 8006cdc:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8006cde:	68fb      	ldr	r3, [r7, #12]
 8006ce0:	6a1a      	ldr	r2, [r3, #32]
 8006ce2:	697b      	ldr	r3, [r7, #20]
 8006ce4:	43db      	mvns	r3, r3
 8006ce6:	401a      	ands	r2, r3
 8006ce8:	68fb      	ldr	r3, [r7, #12]
 8006cea:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8006cec:	68fb      	ldr	r3, [r7, #12]
 8006cee:	6a1a      	ldr	r2, [r3, #32]
 8006cf0:	68bb      	ldr	r3, [r7, #8]
 8006cf2:	f003 031f 	and.w	r3, r3, #31
 8006cf6:	6879      	ldr	r1, [r7, #4]
 8006cf8:	fa01 f303 	lsl.w	r3, r1, r3
 8006cfc:	431a      	orrs	r2, r3
 8006cfe:	68fb      	ldr	r3, [r7, #12]
 8006d00:	621a      	str	r2, [r3, #32]
}
 8006d02:	bf00      	nop
 8006d04:	371c      	adds	r7, #28
 8006d06:	46bd      	mov	sp, r7
 8006d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d0c:	4770      	bx	lr
	...

08006d10 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8006d10:	b480      	push	{r7}
 8006d12:	b085      	sub	sp, #20
 8006d14:	af00      	add	r7, sp, #0
 8006d16:	6078      	str	r0, [r7, #4]
 8006d18:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006d20:	2b01      	cmp	r3, #1
 8006d22:	d101      	bne.n	8006d28 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006d24:	2302      	movs	r3, #2
 8006d26:	e05a      	b.n	8006dde <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	2201      	movs	r2, #1
 8006d2c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006d30:	687b      	ldr	r3, [r7, #4]
 8006d32:	2202      	movs	r2, #2
 8006d34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8006d38:	687b      	ldr	r3, [r7, #4]
 8006d3a:	681b      	ldr	r3, [r3, #0]
 8006d3c:	685b      	ldr	r3, [r3, #4]
 8006d3e:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8006d40:	687b      	ldr	r3, [r7, #4]
 8006d42:	681b      	ldr	r3, [r3, #0]
 8006d44:	689b      	ldr	r3, [r3, #8]
 8006d46:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8006d48:	68fb      	ldr	r3, [r7, #12]
 8006d4a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006d4e:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8006d50:	683b      	ldr	r3, [r7, #0]
 8006d52:	681b      	ldr	r3, [r3, #0]
 8006d54:	68fa      	ldr	r2, [r7, #12]
 8006d56:	4313      	orrs	r3, r2
 8006d58:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	681b      	ldr	r3, [r3, #0]
 8006d5e:	68fa      	ldr	r2, [r7, #12]
 8006d60:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006d62:	687b      	ldr	r3, [r7, #4]
 8006d64:	681b      	ldr	r3, [r3, #0]
 8006d66:	4a21      	ldr	r2, [pc, #132]	; (8006dec <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8006d68:	4293      	cmp	r3, r2
 8006d6a:	d022      	beq.n	8006db2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	681b      	ldr	r3, [r3, #0]
 8006d70:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006d74:	d01d      	beq.n	8006db2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d76:	687b      	ldr	r3, [r7, #4]
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	4a1d      	ldr	r2, [pc, #116]	; (8006df0 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8006d7c:	4293      	cmp	r3, r2
 8006d7e:	d018      	beq.n	8006db2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d80:	687b      	ldr	r3, [r7, #4]
 8006d82:	681b      	ldr	r3, [r3, #0]
 8006d84:	4a1b      	ldr	r2, [pc, #108]	; (8006df4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8006d86:	4293      	cmp	r3, r2
 8006d88:	d013      	beq.n	8006db2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d8a:	687b      	ldr	r3, [r7, #4]
 8006d8c:	681b      	ldr	r3, [r3, #0]
 8006d8e:	4a1a      	ldr	r2, [pc, #104]	; (8006df8 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8006d90:	4293      	cmp	r3, r2
 8006d92:	d00e      	beq.n	8006db2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	681b      	ldr	r3, [r3, #0]
 8006d98:	4a18      	ldr	r2, [pc, #96]	; (8006dfc <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8006d9a:	4293      	cmp	r3, r2
 8006d9c:	d009      	beq.n	8006db2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	4a17      	ldr	r2, [pc, #92]	; (8006e00 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006da4:	4293      	cmp	r3, r2
 8006da6:	d004      	beq.n	8006db2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	681b      	ldr	r3, [r3, #0]
 8006dac:	4a15      	ldr	r2, [pc, #84]	; (8006e04 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8006dae:	4293      	cmp	r3, r2
 8006db0:	d10c      	bne.n	8006dcc <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8006db2:	68bb      	ldr	r3, [r7, #8]
 8006db4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006db8:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8006dba:	683b      	ldr	r3, [r7, #0]
 8006dbc:	685b      	ldr	r3, [r3, #4]
 8006dbe:	68ba      	ldr	r2, [r7, #8]
 8006dc0:	4313      	orrs	r3, r2
 8006dc2:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	68ba      	ldr	r2, [r7, #8]
 8006dca:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	2201      	movs	r2, #1
 8006dd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	2200      	movs	r2, #0
 8006dd8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8006ddc:	2300      	movs	r3, #0
}
 8006dde:	4618      	mov	r0, r3
 8006de0:	3714      	adds	r7, #20
 8006de2:	46bd      	mov	sp, r7
 8006de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006de8:	4770      	bx	lr
 8006dea:	bf00      	nop
 8006dec:	40010000 	.word	0x40010000
 8006df0:	40000400 	.word	0x40000400
 8006df4:	40000800 	.word	0x40000800
 8006df8:	40000c00 	.word	0x40000c00
 8006dfc:	40010400 	.word	0x40010400
 8006e00:	40014000 	.word	0x40014000
 8006e04:	40001800 	.word	0x40001800

08006e08 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8006e08:	b480      	push	{r7}
 8006e0a:	b083      	sub	sp, #12
 8006e0c:	af00      	add	r7, sp, #0
 8006e0e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8006e10:	bf00      	nop
 8006e12:	370c      	adds	r7, #12
 8006e14:	46bd      	mov	sp, r7
 8006e16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e1a:	4770      	bx	lr

08006e1c <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8006e1c:	b480      	push	{r7}
 8006e1e:	b083      	sub	sp, #12
 8006e20:	af00      	add	r7, sp, #0
 8006e22:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8006e24:	bf00      	nop
 8006e26:	370c      	adds	r7, #12
 8006e28:	46bd      	mov	sp, r7
 8006e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e2e:	4770      	bx	lr

08006e30 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8006e30:	b580      	push	{r7, lr}
 8006e32:	b082      	sub	sp, #8
 8006e34:	af00      	add	r7, sp, #0
 8006e36:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8006e38:	687b      	ldr	r3, [r7, #4]
 8006e3a:	2b00      	cmp	r3, #0
 8006e3c:	d101      	bne.n	8006e42 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8006e3e:	2301      	movs	r3, #1
 8006e40:	e03f      	b.n	8006ec2 <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 8006e42:	687b      	ldr	r3, [r7, #4]
 8006e44:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8006e48:	b2db      	uxtb	r3, r3
 8006e4a:	2b00      	cmp	r3, #0
 8006e4c:	d106      	bne.n	8006e5c <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8006e4e:	687b      	ldr	r3, [r7, #4]
 8006e50:	2200      	movs	r2, #0
 8006e52:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8006e56:	6878      	ldr	r0, [r7, #4]
 8006e58:	f7fb fb66 	bl	8002528 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	2224      	movs	r2, #36	; 0x24
 8006e60:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8006e64:	687b      	ldr	r3, [r7, #4]
 8006e66:	681b      	ldr	r3, [r3, #0]
 8006e68:	68da      	ldr	r2, [r3, #12]
 8006e6a:	687b      	ldr	r3, [r7, #4]
 8006e6c:	681b      	ldr	r3, [r3, #0]
 8006e6e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006e72:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8006e74:	6878      	ldr	r0, [r7, #4]
 8006e76:	f000 f9b1 	bl	80071dc <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	681b      	ldr	r3, [r3, #0]
 8006e7e:	691a      	ldr	r2, [r3, #16]
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	681b      	ldr	r3, [r3, #0]
 8006e84:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006e88:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006e8a:	687b      	ldr	r3, [r7, #4]
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	695a      	ldr	r2, [r3, #20]
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	681b      	ldr	r3, [r3, #0]
 8006e94:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006e98:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	681b      	ldr	r3, [r3, #0]
 8006e9e:	68da      	ldr	r2, [r3, #12]
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	681b      	ldr	r3, [r3, #0]
 8006ea4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006ea8:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006eaa:	687b      	ldr	r3, [r7, #4]
 8006eac:	2200      	movs	r2, #0
 8006eae:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	2220      	movs	r2, #32
 8006eb4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	2220      	movs	r2, #32
 8006ebc:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
 8006ec0:	2300      	movs	r3, #0
}
 8006ec2:	4618      	mov	r0, r3
 8006ec4:	3708      	adds	r7, #8
 8006ec6:	46bd      	mov	sp, r7
 8006ec8:	bd80      	pop	{r7, pc}

08006eca <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006eca:	b580      	push	{r7, lr}
 8006ecc:	b088      	sub	sp, #32
 8006ece:	af02      	add	r7, sp, #8
 8006ed0:	60f8      	str	r0, [r7, #12]
 8006ed2:	60b9      	str	r1, [r7, #8]
 8006ed4:	603b      	str	r3, [r7, #0]
 8006ed6:	4613      	mov	r3, r2
 8006ed8:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 8006eda:	2300      	movs	r3, #0
 8006edc:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8006ede:	68fb      	ldr	r3, [r7, #12]
 8006ee0:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8006ee4:	b2db      	uxtb	r3, r3
 8006ee6:	2b20      	cmp	r3, #32
 8006ee8:	f040 8083 	bne.w	8006ff2 <HAL_UART_Transmit+0x128>
  {
    if ((pData == NULL) || (Size == 0U))
 8006eec:	68bb      	ldr	r3, [r7, #8]
 8006eee:	2b00      	cmp	r3, #0
 8006ef0:	d002      	beq.n	8006ef8 <HAL_UART_Transmit+0x2e>
 8006ef2:	88fb      	ldrh	r3, [r7, #6]
 8006ef4:	2b00      	cmp	r3, #0
 8006ef6:	d101      	bne.n	8006efc <HAL_UART_Transmit+0x32>
    {
      return  HAL_ERROR;
 8006ef8:	2301      	movs	r3, #1
 8006efa:	e07b      	b.n	8006ff4 <HAL_UART_Transmit+0x12a>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8006efc:	68fb      	ldr	r3, [r7, #12]
 8006efe:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8006f02:	2b01      	cmp	r3, #1
 8006f04:	d101      	bne.n	8006f0a <HAL_UART_Transmit+0x40>
 8006f06:	2302      	movs	r3, #2
 8006f08:	e074      	b.n	8006ff4 <HAL_UART_Transmit+0x12a>
 8006f0a:	68fb      	ldr	r3, [r7, #12]
 8006f0c:	2201      	movs	r2, #1
 8006f0e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006f12:	68fb      	ldr	r3, [r7, #12]
 8006f14:	2200      	movs	r2, #0
 8006f16:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006f18:	68fb      	ldr	r3, [r7, #12]
 8006f1a:	2221      	movs	r2, #33	; 0x21
 8006f1c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 8006f20:	f7fb fdf6 	bl	8002b10 <HAL_GetTick>
 8006f24:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 8006f26:	68fb      	ldr	r3, [r7, #12]
 8006f28:	88fa      	ldrh	r2, [r7, #6]
 8006f2a:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 8006f2c:	68fb      	ldr	r3, [r7, #12]
 8006f2e:	88fa      	ldrh	r2, [r7, #6]
 8006f30:	84da      	strh	r2, [r3, #38]	; 0x26

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8006f32:	68fb      	ldr	r3, [r7, #12]
 8006f34:	2200      	movs	r2, #0
 8006f36:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    while (huart->TxXferCount > 0U)
 8006f3a:	e042      	b.n	8006fc2 <HAL_UART_Transmit+0xf8>
    {
      huart->TxXferCount--;
 8006f3c:	68fb      	ldr	r3, [r7, #12]
 8006f3e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006f40:	b29b      	uxth	r3, r3
 8006f42:	3b01      	subs	r3, #1
 8006f44:	b29a      	uxth	r2, r3
 8006f46:	68fb      	ldr	r3, [r7, #12]
 8006f48:	84da      	strh	r2, [r3, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006f4a:	68fb      	ldr	r3, [r7, #12]
 8006f4c:	689b      	ldr	r3, [r3, #8]
 8006f4e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006f52:	d122      	bne.n	8006f9a <HAL_UART_Transmit+0xd0>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006f54:	683b      	ldr	r3, [r7, #0]
 8006f56:	9300      	str	r3, [sp, #0]
 8006f58:	697b      	ldr	r3, [r7, #20]
 8006f5a:	2200      	movs	r2, #0
 8006f5c:	2180      	movs	r1, #128	; 0x80
 8006f5e:	68f8      	ldr	r0, [r7, #12]
 8006f60:	f000 f8f2 	bl	8007148 <UART_WaitOnFlagUntilTimeout>
 8006f64:	4603      	mov	r3, r0
 8006f66:	2b00      	cmp	r3, #0
 8006f68:	d001      	beq.n	8006f6e <HAL_UART_Transmit+0xa4>
        {
          return HAL_TIMEOUT;
 8006f6a:	2303      	movs	r3, #3
 8006f6c:	e042      	b.n	8006ff4 <HAL_UART_Transmit+0x12a>
        }
        tmp = (uint16_t *) pData;
 8006f6e:	68bb      	ldr	r3, [r7, #8]
 8006f70:	613b      	str	r3, [r7, #16]
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 8006f72:	693b      	ldr	r3, [r7, #16]
 8006f74:	881b      	ldrh	r3, [r3, #0]
 8006f76:	461a      	mov	r2, r3
 8006f78:	68fb      	ldr	r3, [r7, #12]
 8006f7a:	681b      	ldr	r3, [r3, #0]
 8006f7c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006f80:	605a      	str	r2, [r3, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 8006f82:	68fb      	ldr	r3, [r7, #12]
 8006f84:	691b      	ldr	r3, [r3, #16]
 8006f86:	2b00      	cmp	r3, #0
 8006f88:	d103      	bne.n	8006f92 <HAL_UART_Transmit+0xc8>
        {
          pData += 2U;
 8006f8a:	68bb      	ldr	r3, [r7, #8]
 8006f8c:	3302      	adds	r3, #2
 8006f8e:	60bb      	str	r3, [r7, #8]
 8006f90:	e017      	b.n	8006fc2 <HAL_UART_Transmit+0xf8>
        }
        else
        {
          pData += 1U;
 8006f92:	68bb      	ldr	r3, [r7, #8]
 8006f94:	3301      	adds	r3, #1
 8006f96:	60bb      	str	r3, [r7, #8]
 8006f98:	e013      	b.n	8006fc2 <HAL_UART_Transmit+0xf8>
        }
      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006f9a:	683b      	ldr	r3, [r7, #0]
 8006f9c:	9300      	str	r3, [sp, #0]
 8006f9e:	697b      	ldr	r3, [r7, #20]
 8006fa0:	2200      	movs	r2, #0
 8006fa2:	2180      	movs	r1, #128	; 0x80
 8006fa4:	68f8      	ldr	r0, [r7, #12]
 8006fa6:	f000 f8cf 	bl	8007148 <UART_WaitOnFlagUntilTimeout>
 8006faa:	4603      	mov	r3, r0
 8006fac:	2b00      	cmp	r3, #0
 8006fae:	d001      	beq.n	8006fb4 <HAL_UART_Transmit+0xea>
        {
          return HAL_TIMEOUT;
 8006fb0:	2303      	movs	r3, #3
 8006fb2:	e01f      	b.n	8006ff4 <HAL_UART_Transmit+0x12a>
        }
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 8006fb4:	68bb      	ldr	r3, [r7, #8]
 8006fb6:	1c5a      	adds	r2, r3, #1
 8006fb8:	60ba      	str	r2, [r7, #8]
 8006fba:	781a      	ldrb	r2, [r3, #0]
 8006fbc:	68fb      	ldr	r3, [r7, #12]
 8006fbe:	681b      	ldr	r3, [r3, #0]
 8006fc0:	605a      	str	r2, [r3, #4]
    while (huart->TxXferCount > 0U)
 8006fc2:	68fb      	ldr	r3, [r7, #12]
 8006fc4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8006fc6:	b29b      	uxth	r3, r3
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	d1b7      	bne.n	8006f3c <HAL_UART_Transmit+0x72>
      }
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8006fcc:	683b      	ldr	r3, [r7, #0]
 8006fce:	9300      	str	r3, [sp, #0]
 8006fd0:	697b      	ldr	r3, [r7, #20]
 8006fd2:	2200      	movs	r2, #0
 8006fd4:	2140      	movs	r1, #64	; 0x40
 8006fd6:	68f8      	ldr	r0, [r7, #12]
 8006fd8:	f000 f8b6 	bl	8007148 <UART_WaitOnFlagUntilTimeout>
 8006fdc:	4603      	mov	r3, r0
 8006fde:	2b00      	cmp	r3, #0
 8006fe0:	d001      	beq.n	8006fe6 <HAL_UART_Transmit+0x11c>
    {
      return HAL_TIMEOUT;
 8006fe2:	2303      	movs	r3, #3
 8006fe4:	e006      	b.n	8006ff4 <HAL_UART_Transmit+0x12a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8006fe6:	68fb      	ldr	r3, [r7, #12]
 8006fe8:	2220      	movs	r2, #32
 8006fea:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    return HAL_OK;
 8006fee:	2300      	movs	r3, #0
 8006ff0:	e000      	b.n	8006ff4 <HAL_UART_Transmit+0x12a>
  }
  else
  {
    return HAL_BUSY;
 8006ff2:	2302      	movs	r3, #2
  }
}
 8006ff4:	4618      	mov	r0, r3
 8006ff6:	3718      	adds	r7, #24
 8006ff8:	46bd      	mov	sp, r7
 8006ffa:	bd80      	pop	{r7, pc}

08006ffc <HAL_UART_Receive>:
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006ffc:	b580      	push	{r7, lr}
 8006ffe:	b088      	sub	sp, #32
 8007000:	af02      	add	r7, sp, #8
 8007002:	60f8      	str	r0, [r7, #12]
 8007004:	60b9      	str	r1, [r7, #8]
 8007006:	603b      	str	r3, [r7, #0]
 8007008:	4613      	mov	r3, r2
 800700a:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 800700c:	2300      	movs	r3, #0
 800700e:	617b      	str	r3, [r7, #20]

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8007010:	68fb      	ldr	r3, [r7, #12]
 8007012:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8007016:	b2db      	uxtb	r3, r3
 8007018:	2b20      	cmp	r3, #32
 800701a:	f040 8090 	bne.w	800713e <HAL_UART_Receive+0x142>
  {
    if ((pData == NULL) || (Size == 0U))
 800701e:	68bb      	ldr	r3, [r7, #8]
 8007020:	2b00      	cmp	r3, #0
 8007022:	d002      	beq.n	800702a <HAL_UART_Receive+0x2e>
 8007024:	88fb      	ldrh	r3, [r7, #6]
 8007026:	2b00      	cmp	r3, #0
 8007028:	d101      	bne.n	800702e <HAL_UART_Receive+0x32>
    {
      return  HAL_ERROR;
 800702a:	2301      	movs	r3, #1
 800702c:	e088      	b.n	8007140 <HAL_UART_Receive+0x144>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 800702e:	68fb      	ldr	r3, [r7, #12]
 8007030:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8007034:	2b01      	cmp	r3, #1
 8007036:	d101      	bne.n	800703c <HAL_UART_Receive+0x40>
 8007038:	2302      	movs	r3, #2
 800703a:	e081      	b.n	8007140 <HAL_UART_Receive+0x144>
 800703c:	68fb      	ldr	r3, [r7, #12]
 800703e:	2201      	movs	r2, #1
 8007040:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007044:	68fb      	ldr	r3, [r7, #12]
 8007046:	2200      	movs	r2, #0
 8007048:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 800704a:	68fb      	ldr	r3, [r7, #12]
 800704c:	2222      	movs	r2, #34	; 0x22
 800704e:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 8007052:	f7fb fd5d 	bl	8002b10 <HAL_GetTick>
 8007056:	6178      	str	r0, [r7, #20]

    huart->RxXferSize = Size;
 8007058:	68fb      	ldr	r3, [r7, #12]
 800705a:	88fa      	ldrh	r2, [r7, #6]
 800705c:	859a      	strh	r2, [r3, #44]	; 0x2c
    huart->RxXferCount = Size;
 800705e:	68fb      	ldr	r3, [r7, #12]
 8007060:	88fa      	ldrh	r2, [r7, #6]
 8007062:	85da      	strh	r2, [r3, #46]	; 0x2e

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8007064:	68fb      	ldr	r3, [r7, #12]
 8007066:	2200      	movs	r2, #0
 8007068:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Check the remain data to be received */
    while (huart->RxXferCount > 0U)
 800706c:	e05c      	b.n	8007128 <HAL_UART_Receive+0x12c>
    {
      huart->RxXferCount--;
 800706e:	68fb      	ldr	r3, [r7, #12]
 8007070:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8007072:	b29b      	uxth	r3, r3
 8007074:	3b01      	subs	r3, #1
 8007076:	b29a      	uxth	r2, r3
 8007078:	68fb      	ldr	r3, [r7, #12]
 800707a:	85da      	strh	r2, [r3, #46]	; 0x2e
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800707c:	68fb      	ldr	r3, [r7, #12]
 800707e:	689b      	ldr	r3, [r3, #8]
 8007080:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007084:	d12b      	bne.n	80070de <HAL_UART_Receive+0xe2>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 8007086:	683b      	ldr	r3, [r7, #0]
 8007088:	9300      	str	r3, [sp, #0]
 800708a:	697b      	ldr	r3, [r7, #20]
 800708c:	2200      	movs	r2, #0
 800708e:	2120      	movs	r1, #32
 8007090:	68f8      	ldr	r0, [r7, #12]
 8007092:	f000 f859 	bl	8007148 <UART_WaitOnFlagUntilTimeout>
 8007096:	4603      	mov	r3, r0
 8007098:	2b00      	cmp	r3, #0
 800709a:	d001      	beq.n	80070a0 <HAL_UART_Receive+0xa4>
        {
          return HAL_TIMEOUT;
 800709c:	2303      	movs	r3, #3
 800709e:	e04f      	b.n	8007140 <HAL_UART_Receive+0x144>
        }
        tmp = (uint16_t *) pData;
 80070a0:	68bb      	ldr	r3, [r7, #8]
 80070a2:	613b      	str	r3, [r7, #16]
        if (huart->Init.Parity == UART_PARITY_NONE)
 80070a4:	68fb      	ldr	r3, [r7, #12]
 80070a6:	691b      	ldr	r3, [r3, #16]
 80070a8:	2b00      	cmp	r3, #0
 80070aa:	d10c      	bne.n	80070c6 <HAL_UART_Receive+0xca>
        {
          *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80070ac:	68fb      	ldr	r3, [r7, #12]
 80070ae:	681b      	ldr	r3, [r3, #0]
 80070b0:	685b      	ldr	r3, [r3, #4]
 80070b2:	b29b      	uxth	r3, r3
 80070b4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80070b8:	b29a      	uxth	r2, r3
 80070ba:	693b      	ldr	r3, [r7, #16]
 80070bc:	801a      	strh	r2, [r3, #0]
          pData += 2U;
 80070be:	68bb      	ldr	r3, [r7, #8]
 80070c0:	3302      	adds	r3, #2
 80070c2:	60bb      	str	r3, [r7, #8]
 80070c4:	e030      	b.n	8007128 <HAL_UART_Receive+0x12c>
        }
        else
        {
          *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 80070c6:	68fb      	ldr	r3, [r7, #12]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	685b      	ldr	r3, [r3, #4]
 80070cc:	b29b      	uxth	r3, r3
 80070ce:	b2db      	uxtb	r3, r3
 80070d0:	b29a      	uxth	r2, r3
 80070d2:	693b      	ldr	r3, [r7, #16]
 80070d4:	801a      	strh	r2, [r3, #0]
          pData += 1U;
 80070d6:	68bb      	ldr	r3, [r7, #8]
 80070d8:	3301      	adds	r3, #1
 80070da:	60bb      	str	r3, [r7, #8]
 80070dc:	e024      	b.n	8007128 <HAL_UART_Receive+0x12c>
        }

      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 80070de:	683b      	ldr	r3, [r7, #0]
 80070e0:	9300      	str	r3, [sp, #0]
 80070e2:	697b      	ldr	r3, [r7, #20]
 80070e4:	2200      	movs	r2, #0
 80070e6:	2120      	movs	r1, #32
 80070e8:	68f8      	ldr	r0, [r7, #12]
 80070ea:	f000 f82d 	bl	8007148 <UART_WaitOnFlagUntilTimeout>
 80070ee:	4603      	mov	r3, r0
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	d001      	beq.n	80070f8 <HAL_UART_Receive+0xfc>
        {
          return HAL_TIMEOUT;
 80070f4:	2303      	movs	r3, #3
 80070f6:	e023      	b.n	8007140 <HAL_UART_Receive+0x144>
        }
        if (huart->Init.Parity == UART_PARITY_NONE)
 80070f8:	68fb      	ldr	r3, [r7, #12]
 80070fa:	691b      	ldr	r3, [r3, #16]
 80070fc:	2b00      	cmp	r3, #0
 80070fe:	d108      	bne.n	8007112 <HAL_UART_Receive+0x116>
        {
          *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8007100:	68fb      	ldr	r3, [r7, #12]
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	6859      	ldr	r1, [r3, #4]
 8007106:	68bb      	ldr	r3, [r7, #8]
 8007108:	1c5a      	adds	r2, r3, #1
 800710a:	60ba      	str	r2, [r7, #8]
 800710c:	b2ca      	uxtb	r2, r1
 800710e:	701a      	strb	r2, [r3, #0]
 8007110:	e00a      	b.n	8007128 <HAL_UART_Receive+0x12c>
        }
        else
        {
          *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8007112:	68fb      	ldr	r3, [r7, #12]
 8007114:	681b      	ldr	r3, [r3, #0]
 8007116:	685b      	ldr	r3, [r3, #4]
 8007118:	b2da      	uxtb	r2, r3
 800711a:	68bb      	ldr	r3, [r7, #8]
 800711c:	1c59      	adds	r1, r3, #1
 800711e:	60b9      	str	r1, [r7, #8]
 8007120:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8007124:	b2d2      	uxtb	r2, r2
 8007126:	701a      	strb	r2, [r3, #0]
    while (huart->RxXferCount > 0U)
 8007128:	68fb      	ldr	r3, [r7, #12]
 800712a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800712c:	b29b      	uxth	r3, r3
 800712e:	2b00      	cmp	r3, #0
 8007130:	d19d      	bne.n	800706e <HAL_UART_Receive+0x72>

      }
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 8007132:	68fb      	ldr	r3, [r7, #12]
 8007134:	2220      	movs	r2, #32
 8007136:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

    return HAL_OK;
 800713a:	2300      	movs	r3, #0
 800713c:	e000      	b.n	8007140 <HAL_UART_Receive+0x144>
  }
  else
  {
    return HAL_BUSY;
 800713e:	2302      	movs	r3, #2
  }
}
 8007140:	4618      	mov	r0, r3
 8007142:	3718      	adds	r7, #24
 8007144:	46bd      	mov	sp, r7
 8007146:	bd80      	pop	{r7, pc}

08007148 <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 8007148:	b580      	push	{r7, lr}
 800714a:	b084      	sub	sp, #16
 800714c:	af00      	add	r7, sp, #0
 800714e:	60f8      	str	r0, [r7, #12]
 8007150:	60b9      	str	r1, [r7, #8]
 8007152:	603b      	str	r3, [r7, #0]
 8007154:	4613      	mov	r3, r2
 8007156:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8007158:	e02c      	b.n	80071b4 <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800715a:	69bb      	ldr	r3, [r7, #24]
 800715c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007160:	d028      	beq.n	80071b4 <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8007162:	69bb      	ldr	r3, [r7, #24]
 8007164:	2b00      	cmp	r3, #0
 8007166:	d007      	beq.n	8007178 <UART_WaitOnFlagUntilTimeout+0x30>
 8007168:	f7fb fcd2 	bl	8002b10 <HAL_GetTick>
 800716c:	4602      	mov	r2, r0
 800716e:	683b      	ldr	r3, [r7, #0]
 8007170:	1ad3      	subs	r3, r2, r3
 8007172:	69ba      	ldr	r2, [r7, #24]
 8007174:	429a      	cmp	r2, r3
 8007176:	d21d      	bcs.n	80071b4 <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8007178:	68fb      	ldr	r3, [r7, #12]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	68da      	ldr	r2, [r3, #12]
 800717e:	68fb      	ldr	r3, [r7, #12]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8007186:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8007188:	68fb      	ldr	r3, [r7, #12]
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	695a      	ldr	r2, [r3, #20]
 800718e:	68fb      	ldr	r3, [r7, #12]
 8007190:	681b      	ldr	r3, [r3, #0]
 8007192:	f022 0201 	bic.w	r2, r2, #1
 8007196:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
 8007198:	68fb      	ldr	r3, [r7, #12]
 800719a:	2220      	movs	r2, #32
 800719c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 80071a0:	68fb      	ldr	r3, [r7, #12]
 80071a2:	2220      	movs	r2, #32
 80071a4:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 80071a8:	68fb      	ldr	r3, [r7, #12]
 80071aa:	2200      	movs	r2, #0
 80071ac:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

        return HAL_TIMEOUT;
 80071b0:	2303      	movs	r3, #3
 80071b2:	e00f      	b.n	80071d4 <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80071b4:	68fb      	ldr	r3, [r7, #12]
 80071b6:	681b      	ldr	r3, [r3, #0]
 80071b8:	681a      	ldr	r2, [r3, #0]
 80071ba:	68bb      	ldr	r3, [r7, #8]
 80071bc:	4013      	ands	r3, r2
 80071be:	68ba      	ldr	r2, [r7, #8]
 80071c0:	429a      	cmp	r2, r3
 80071c2:	bf0c      	ite	eq
 80071c4:	2301      	moveq	r3, #1
 80071c6:	2300      	movne	r3, #0
 80071c8:	b2db      	uxtb	r3, r3
 80071ca:	461a      	mov	r2, r3
 80071cc:	79fb      	ldrb	r3, [r7, #7]
 80071ce:	429a      	cmp	r2, r3
 80071d0:	d0c3      	beq.n	800715a <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 80071d2:	2300      	movs	r3, #0
}
 80071d4:	4618      	mov	r0, r3
 80071d6:	3710      	adds	r7, #16
 80071d8:	46bd      	mov	sp, r7
 80071da:	bd80      	pop	{r7, pc}

080071dc <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 80071dc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80071e0:	f5ad 7d02 	sub.w	sp, sp, #520	; 0x208
 80071e4:	af00      	add	r7, sp, #0
 80071e6:	f8c7 01fc 	str.w	r0, [r7, #508]	; 0x1fc
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80071ea:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071ee:	681b      	ldr	r3, [r3, #0]
 80071f0:	691b      	ldr	r3, [r3, #16]
 80071f2:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 80071f6:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80071fa:	68d9      	ldr	r1, [r3, #12]
 80071fc:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007200:	681a      	ldr	r2, [r3, #0]
 8007202:	ea40 0301 	orr.w	r3, r0, r1
 8007206:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8007208:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800720c:	689a      	ldr	r2, [r3, #8]
 800720e:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007212:	691b      	ldr	r3, [r3, #16]
 8007214:	431a      	orrs	r2, r3
 8007216:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800721a:	695b      	ldr	r3, [r3, #20]
 800721c:	431a      	orrs	r2, r3
 800721e:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007222:	69db      	ldr	r3, [r3, #28]
 8007224:	4313      	orrs	r3, r2
 8007226:	f8c7 3204 	str.w	r3, [r7, #516]	; 0x204
  MODIFY_REG(huart->Instance->CR1,
 800722a:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800722e:	681b      	ldr	r3, [r3, #0]
 8007230:	68db      	ldr	r3, [r3, #12]
 8007232:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8007236:	f021 010c 	bic.w	r1, r1, #12
 800723a:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800723e:	681a      	ldr	r2, [r3, #0]
 8007240:	f8d7 3204 	ldr.w	r3, [r7, #516]	; 0x204
 8007244:	430b      	orrs	r3, r1
 8007246:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8007248:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800724c:	681b      	ldr	r3, [r3, #0]
 800724e:	695b      	ldr	r3, [r3, #20]
 8007250:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8007254:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007258:	6999      	ldr	r1, [r3, #24]
 800725a:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800725e:	681a      	ldr	r2, [r3, #0]
 8007260:	ea40 0301 	orr.w	r3, r0, r1
 8007264:	6153      	str	r3, [r2, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8007266:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800726a:	69db      	ldr	r3, [r3, #28]
 800726c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007270:	f040 824a 	bne.w	8007708 <UART_SetConfig+0x52c>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8007274:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007278:	681a      	ldr	r2, [r3, #0]
 800727a:	4b96      	ldr	r3, [pc, #600]	; (80074d4 <UART_SetConfig+0x2f8>)
 800727c:	429a      	cmp	r2, r3
 800727e:	d006      	beq.n	800728e <UART_SetConfig+0xb2>
 8007280:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007284:	681a      	ldr	r2, [r3, #0]
 8007286:	4b94      	ldr	r3, [pc, #592]	; (80074d8 <UART_SetConfig+0x2fc>)
 8007288:	429a      	cmp	r2, r3
 800728a:	f040 8129 	bne.w	80074e0 <UART_SetConfig+0x304>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 800728e:	f7fd ff87 	bl	80051a0 <HAL_RCC_GetPCLK2Freq>
 8007292:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8007296:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800729a:	2200      	movs	r2, #0
 800729c:	f8c7 31f0 	str.w	r3, [r7, #496]	; 0x1f0
 80072a0:	f8c7 21f4 	str.w	r2, [r7, #500]	; 0x1f4
 80072a4:	e9d7 457c 	ldrd	r4, r5, [r7, #496]	; 0x1f0
 80072a8:	4622      	mov	r2, r4
 80072aa:	462b      	mov	r3, r5
 80072ac:	1891      	adds	r1, r2, r2
 80072ae:	f8c7 10d0 	str.w	r1, [r7, #208]	; 0xd0
 80072b2:	415b      	adcs	r3, r3
 80072b4:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80072b8:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	; 0xd0
 80072bc:	4621      	mov	r1, r4
 80072be:	1851      	adds	r1, r2, r1
 80072c0:	f8c7 10c8 	str.w	r1, [r7, #200]	; 0xc8
 80072c4:	4629      	mov	r1, r5
 80072c6:	414b      	adcs	r3, r1
 80072c8:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 80072cc:	f04f 0200 	mov.w	r2, #0
 80072d0:	f04f 0300 	mov.w	r3, #0
 80072d4:	e9d7 8932 	ldrd	r8, r9, [r7, #200]	; 0xc8
 80072d8:	4649      	mov	r1, r9
 80072da:	00cb      	lsls	r3, r1, #3
 80072dc:	4641      	mov	r1, r8
 80072de:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80072e2:	4641      	mov	r1, r8
 80072e4:	00ca      	lsls	r2, r1, #3
 80072e6:	4610      	mov	r0, r2
 80072e8:	4619      	mov	r1, r3
 80072ea:	4603      	mov	r3, r0
 80072ec:	4622      	mov	r2, r4
 80072ee:	189b      	adds	r3, r3, r2
 80072f0:	f8c7 31e8 	str.w	r3, [r7, #488]	; 0x1e8
 80072f4:	462b      	mov	r3, r5
 80072f6:	460a      	mov	r2, r1
 80072f8:	eb42 0303 	adc.w	r3, r2, r3
 80072fc:	f8c7 31ec 	str.w	r3, [r7, #492]	; 0x1ec
 8007300:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007304:	685b      	ldr	r3, [r3, #4]
 8007306:	2200      	movs	r2, #0
 8007308:	f8c7 31e0 	str.w	r3, [r7, #480]	; 0x1e0
 800730c:	f8c7 21e4 	str.w	r2, [r7, #484]	; 0x1e4
 8007310:	e9d7 1278 	ldrd	r1, r2, [r7, #480]	; 0x1e0
 8007314:	460b      	mov	r3, r1
 8007316:	18db      	adds	r3, r3, r3
 8007318:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800731c:	4613      	mov	r3, r2
 800731e:	eb42 0303 	adc.w	r3, r2, r3
 8007322:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8007326:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	; 0xc0
 800732a:	e9d7 017a 	ldrd	r0, r1, [r7, #488]	; 0x1e8
 800732e:	f7f9 fc4b 	bl	8000bc8 <__aeabi_uldivmod>
 8007332:	4602      	mov	r2, r0
 8007334:	460b      	mov	r3, r1
 8007336:	4b69      	ldr	r3, [pc, #420]	; (80074dc <UART_SetConfig+0x300>)
 8007338:	fba3 2302 	umull	r2, r3, r3, r2
 800733c:	095b      	lsrs	r3, r3, #5
 800733e:	011c      	lsls	r4, r3, #4
 8007340:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007344:	2200      	movs	r2, #0
 8007346:	f8c7 31d8 	str.w	r3, [r7, #472]	; 0x1d8
 800734a:	f8c7 21dc 	str.w	r2, [r7, #476]	; 0x1dc
 800734e:	e9d7 8976 	ldrd	r8, r9, [r7, #472]	; 0x1d8
 8007352:	4642      	mov	r2, r8
 8007354:	464b      	mov	r3, r9
 8007356:	1891      	adds	r1, r2, r2
 8007358:	f8c7 10b8 	str.w	r1, [r7, #184]	; 0xb8
 800735c:	415b      	adcs	r3, r3
 800735e:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 8007362:	e9d7 232e 	ldrd	r2, r3, [r7, #184]	; 0xb8
 8007366:	4641      	mov	r1, r8
 8007368:	1851      	adds	r1, r2, r1
 800736a:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 800736e:	4649      	mov	r1, r9
 8007370:	414b      	adcs	r3, r1
 8007372:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8007376:	f04f 0200 	mov.w	r2, #0
 800737a:	f04f 0300 	mov.w	r3, #0
 800737e:	e9d7 ab2c 	ldrd	sl, fp, [r7, #176]	; 0xb0
 8007382:	4659      	mov	r1, fp
 8007384:	00cb      	lsls	r3, r1, #3
 8007386:	4651      	mov	r1, sl
 8007388:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800738c:	4651      	mov	r1, sl
 800738e:	00ca      	lsls	r2, r1, #3
 8007390:	4610      	mov	r0, r2
 8007392:	4619      	mov	r1, r3
 8007394:	4603      	mov	r3, r0
 8007396:	4642      	mov	r2, r8
 8007398:	189b      	adds	r3, r3, r2
 800739a:	f8c7 31d0 	str.w	r3, [r7, #464]	; 0x1d0
 800739e:	464b      	mov	r3, r9
 80073a0:	460a      	mov	r2, r1
 80073a2:	eb42 0303 	adc.w	r3, r2, r3
 80073a6:	f8c7 31d4 	str.w	r3, [r7, #468]	; 0x1d4
 80073aa:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80073ae:	685b      	ldr	r3, [r3, #4]
 80073b0:	2200      	movs	r2, #0
 80073b2:	f8c7 31c8 	str.w	r3, [r7, #456]	; 0x1c8
 80073b6:	f8c7 21cc 	str.w	r2, [r7, #460]	; 0x1cc
 80073ba:	e9d7 1272 	ldrd	r1, r2, [r7, #456]	; 0x1c8
 80073be:	460b      	mov	r3, r1
 80073c0:	18db      	adds	r3, r3, r3
 80073c2:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80073c6:	4613      	mov	r3, r2
 80073c8:	eb42 0303 	adc.w	r3, r2, r3
 80073cc:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80073d0:	e9d7 232a 	ldrd	r2, r3, [r7, #168]	; 0xa8
 80073d4:	e9d7 0174 	ldrd	r0, r1, [r7, #464]	; 0x1d0
 80073d8:	f7f9 fbf6 	bl	8000bc8 <__aeabi_uldivmod>
 80073dc:	4602      	mov	r2, r0
 80073de:	460b      	mov	r3, r1
 80073e0:	4611      	mov	r1, r2
 80073e2:	4b3e      	ldr	r3, [pc, #248]	; (80074dc <UART_SetConfig+0x300>)
 80073e4:	fba3 2301 	umull	r2, r3, r3, r1
 80073e8:	095b      	lsrs	r3, r3, #5
 80073ea:	2264      	movs	r2, #100	; 0x64
 80073ec:	fb02 f303 	mul.w	r3, r2, r3
 80073f0:	1acb      	subs	r3, r1, r3
 80073f2:	00db      	lsls	r3, r3, #3
 80073f4:	f103 0232 	add.w	r2, r3, #50	; 0x32
 80073f8:	4b38      	ldr	r3, [pc, #224]	; (80074dc <UART_SetConfig+0x300>)
 80073fa:	fba3 2302 	umull	r2, r3, r3, r2
 80073fe:	095b      	lsrs	r3, r3, #5
 8007400:	005b      	lsls	r3, r3, #1
 8007402:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8007406:	441c      	add	r4, r3
 8007408:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800740c:	2200      	movs	r2, #0
 800740e:	f8c7 31c0 	str.w	r3, [r7, #448]	; 0x1c0
 8007412:	f8c7 21c4 	str.w	r2, [r7, #452]	; 0x1c4
 8007416:	e9d7 8970 	ldrd	r8, r9, [r7, #448]	; 0x1c0
 800741a:	4642      	mov	r2, r8
 800741c:	464b      	mov	r3, r9
 800741e:	1891      	adds	r1, r2, r2
 8007420:	f8c7 10a0 	str.w	r1, [r7, #160]	; 0xa0
 8007424:	415b      	adcs	r3, r3
 8007426:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800742a:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800742e:	4641      	mov	r1, r8
 8007430:	1851      	adds	r1, r2, r1
 8007432:	f8c7 1098 	str.w	r1, [r7, #152]	; 0x98
 8007436:	4649      	mov	r1, r9
 8007438:	414b      	adcs	r3, r1
 800743a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800743e:	f04f 0200 	mov.w	r2, #0
 8007442:	f04f 0300 	mov.w	r3, #0
 8007446:	e9d7 ab26 	ldrd	sl, fp, [r7, #152]	; 0x98
 800744a:	4659      	mov	r1, fp
 800744c:	00cb      	lsls	r3, r1, #3
 800744e:	4651      	mov	r1, sl
 8007450:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007454:	4651      	mov	r1, sl
 8007456:	00ca      	lsls	r2, r1, #3
 8007458:	4610      	mov	r0, r2
 800745a:	4619      	mov	r1, r3
 800745c:	4603      	mov	r3, r0
 800745e:	4642      	mov	r2, r8
 8007460:	189b      	adds	r3, r3, r2
 8007462:	f8c7 31b8 	str.w	r3, [r7, #440]	; 0x1b8
 8007466:	464b      	mov	r3, r9
 8007468:	460a      	mov	r2, r1
 800746a:	eb42 0303 	adc.w	r3, r2, r3
 800746e:	f8c7 31bc 	str.w	r3, [r7, #444]	; 0x1bc
 8007472:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007476:	685b      	ldr	r3, [r3, #4]
 8007478:	2200      	movs	r2, #0
 800747a:	f8c7 31b0 	str.w	r3, [r7, #432]	; 0x1b0
 800747e:	f8c7 21b4 	str.w	r2, [r7, #436]	; 0x1b4
 8007482:	e9d7 126c 	ldrd	r1, r2, [r7, #432]	; 0x1b0
 8007486:	460b      	mov	r3, r1
 8007488:	18db      	adds	r3, r3, r3
 800748a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800748e:	4613      	mov	r3, r2
 8007490:	eb42 0303 	adc.w	r3, r2, r3
 8007494:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8007498:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	; 0x90
 800749c:	e9d7 016e 	ldrd	r0, r1, [r7, #440]	; 0x1b8
 80074a0:	f7f9 fb92 	bl	8000bc8 <__aeabi_uldivmod>
 80074a4:	4602      	mov	r2, r0
 80074a6:	460b      	mov	r3, r1
 80074a8:	4b0c      	ldr	r3, [pc, #48]	; (80074dc <UART_SetConfig+0x300>)
 80074aa:	fba3 1302 	umull	r1, r3, r3, r2
 80074ae:	095b      	lsrs	r3, r3, #5
 80074b0:	2164      	movs	r1, #100	; 0x64
 80074b2:	fb01 f303 	mul.w	r3, r1, r3
 80074b6:	1ad3      	subs	r3, r2, r3
 80074b8:	00db      	lsls	r3, r3, #3
 80074ba:	3332      	adds	r3, #50	; 0x32
 80074bc:	4a07      	ldr	r2, [pc, #28]	; (80074dc <UART_SetConfig+0x300>)
 80074be:	fba2 2303 	umull	r2, r3, r2, r3
 80074c2:	095b      	lsrs	r3, r3, #5
 80074c4:	f003 0207 	and.w	r2, r3, #7
 80074c8:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80074cc:	681b      	ldr	r3, [r3, #0]
 80074ce:	4422      	add	r2, r4
 80074d0:	609a      	str	r2, [r3, #8]
 80074d2:	e349      	b.n	8007b68 <UART_SetConfig+0x98c>
 80074d4:	40011000 	.word	0x40011000
 80074d8:	40011400 	.word	0x40011400
 80074dc:	51eb851f 	.word	0x51eb851f
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 80074e0:	f7fd fe4a 	bl	8005178 <HAL_RCC_GetPCLK1Freq>
 80074e4:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80074e8:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80074ec:	2200      	movs	r2, #0
 80074ee:	f8c7 31a8 	str.w	r3, [r7, #424]	; 0x1a8
 80074f2:	f8c7 21ac 	str.w	r2, [r7, #428]	; 0x1ac
 80074f6:	e9d7 456a 	ldrd	r4, r5, [r7, #424]	; 0x1a8
 80074fa:	4622      	mov	r2, r4
 80074fc:	462b      	mov	r3, r5
 80074fe:	1891      	adds	r1, r2, r2
 8007500:	f8c7 1088 	str.w	r1, [r7, #136]	; 0x88
 8007504:	415b      	adcs	r3, r3
 8007506:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800750a:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 800750e:	4621      	mov	r1, r4
 8007510:	eb12 0a01 	adds.w	sl, r2, r1
 8007514:	4629      	mov	r1, r5
 8007516:	eb43 0b01 	adc.w	fp, r3, r1
 800751a:	f04f 0200 	mov.w	r2, #0
 800751e:	f04f 0300 	mov.w	r3, #0
 8007522:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8007526:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800752a:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800752e:	4692      	mov	sl, r2
 8007530:	469b      	mov	fp, r3
 8007532:	4623      	mov	r3, r4
 8007534:	eb1a 0303 	adds.w	r3, sl, r3
 8007538:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 800753c:	462b      	mov	r3, r5
 800753e:	eb4b 0303 	adc.w	r3, fp, r3
 8007542:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 8007546:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800754a:	685b      	ldr	r3, [r3, #4]
 800754c:	2200      	movs	r2, #0
 800754e:	f8c7 3198 	str.w	r3, [r7, #408]	; 0x198
 8007552:	f8c7 219c 	str.w	r2, [r7, #412]	; 0x19c
 8007556:	e9d7 1266 	ldrd	r1, r2, [r7, #408]	; 0x198
 800755a:	460b      	mov	r3, r1
 800755c:	18db      	adds	r3, r3, r3
 800755e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8007562:	4613      	mov	r3, r2
 8007564:	eb42 0303 	adc.w	r3, r2, r3
 8007568:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800756c:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	; 0x80
 8007570:	e9d7 0168 	ldrd	r0, r1, [r7, #416]	; 0x1a0
 8007574:	f7f9 fb28 	bl	8000bc8 <__aeabi_uldivmod>
 8007578:	4602      	mov	r2, r0
 800757a:	460b      	mov	r3, r1
 800757c:	4b61      	ldr	r3, [pc, #388]	; (8007704 <UART_SetConfig+0x528>)
 800757e:	fba3 2302 	umull	r2, r3, r3, r2
 8007582:	095b      	lsrs	r3, r3, #5
 8007584:	011c      	lsls	r4, r3, #4
 8007586:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800758a:	2200      	movs	r2, #0
 800758c:	f8c7 3190 	str.w	r3, [r7, #400]	; 0x190
 8007590:	f8c7 2194 	str.w	r2, [r7, #404]	; 0x194
 8007594:	e9d7 8964 	ldrd	r8, r9, [r7, #400]	; 0x190
 8007598:	4642      	mov	r2, r8
 800759a:	464b      	mov	r3, r9
 800759c:	1891      	adds	r1, r2, r2
 800759e:	67b9      	str	r1, [r7, #120]	; 0x78
 80075a0:	415b      	adcs	r3, r3
 80075a2:	67fb      	str	r3, [r7, #124]	; 0x7c
 80075a4:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 80075a8:	4641      	mov	r1, r8
 80075aa:	1851      	adds	r1, r2, r1
 80075ac:	6739      	str	r1, [r7, #112]	; 0x70
 80075ae:	4649      	mov	r1, r9
 80075b0:	414b      	adcs	r3, r1
 80075b2:	677b      	str	r3, [r7, #116]	; 0x74
 80075b4:	f04f 0200 	mov.w	r2, #0
 80075b8:	f04f 0300 	mov.w	r3, #0
 80075bc:	e9d7 ab1c 	ldrd	sl, fp, [r7, #112]	; 0x70
 80075c0:	4659      	mov	r1, fp
 80075c2:	00cb      	lsls	r3, r1, #3
 80075c4:	4651      	mov	r1, sl
 80075c6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80075ca:	4651      	mov	r1, sl
 80075cc:	00ca      	lsls	r2, r1, #3
 80075ce:	4610      	mov	r0, r2
 80075d0:	4619      	mov	r1, r3
 80075d2:	4603      	mov	r3, r0
 80075d4:	4642      	mov	r2, r8
 80075d6:	189b      	adds	r3, r3, r2
 80075d8:	f8c7 3188 	str.w	r3, [r7, #392]	; 0x188
 80075dc:	464b      	mov	r3, r9
 80075de:	460a      	mov	r2, r1
 80075e0:	eb42 0303 	adc.w	r3, r2, r3
 80075e4:	f8c7 318c 	str.w	r3, [r7, #396]	; 0x18c
 80075e8:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80075ec:	685b      	ldr	r3, [r3, #4]
 80075ee:	2200      	movs	r2, #0
 80075f0:	f8c7 3180 	str.w	r3, [r7, #384]	; 0x180
 80075f4:	f8c7 2184 	str.w	r2, [r7, #388]	; 0x184
 80075f8:	e9d7 1260 	ldrd	r1, r2, [r7, #384]	; 0x180
 80075fc:	460b      	mov	r3, r1
 80075fe:	18db      	adds	r3, r3, r3
 8007600:	66bb      	str	r3, [r7, #104]	; 0x68
 8007602:	4613      	mov	r3, r2
 8007604:	eb42 0303 	adc.w	r3, r2, r3
 8007608:	66fb      	str	r3, [r7, #108]	; 0x6c
 800760a:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800760e:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 8007612:	f7f9 fad9 	bl	8000bc8 <__aeabi_uldivmod>
 8007616:	4602      	mov	r2, r0
 8007618:	460b      	mov	r3, r1
 800761a:	4611      	mov	r1, r2
 800761c:	4b39      	ldr	r3, [pc, #228]	; (8007704 <UART_SetConfig+0x528>)
 800761e:	fba3 2301 	umull	r2, r3, r3, r1
 8007622:	095b      	lsrs	r3, r3, #5
 8007624:	2264      	movs	r2, #100	; 0x64
 8007626:	fb02 f303 	mul.w	r3, r2, r3
 800762a:	1acb      	subs	r3, r1, r3
 800762c:	00db      	lsls	r3, r3, #3
 800762e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8007632:	4b34      	ldr	r3, [pc, #208]	; (8007704 <UART_SetConfig+0x528>)
 8007634:	fba3 2302 	umull	r2, r3, r3, r2
 8007638:	095b      	lsrs	r3, r3, #5
 800763a:	005b      	lsls	r3, r3, #1
 800763c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8007640:	441c      	add	r4, r3
 8007642:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007646:	2200      	movs	r2, #0
 8007648:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800764c:	f8c7 217c 	str.w	r2, [r7, #380]	; 0x17c
 8007650:	e9d7 895e 	ldrd	r8, r9, [r7, #376]	; 0x178
 8007654:	4642      	mov	r2, r8
 8007656:	464b      	mov	r3, r9
 8007658:	1891      	adds	r1, r2, r2
 800765a:	6639      	str	r1, [r7, #96]	; 0x60
 800765c:	415b      	adcs	r3, r3
 800765e:	667b      	str	r3, [r7, #100]	; 0x64
 8007660:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8007664:	4641      	mov	r1, r8
 8007666:	1851      	adds	r1, r2, r1
 8007668:	65b9      	str	r1, [r7, #88]	; 0x58
 800766a:	4649      	mov	r1, r9
 800766c:	414b      	adcs	r3, r1
 800766e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8007670:	f04f 0200 	mov.w	r2, #0
 8007674:	f04f 0300 	mov.w	r3, #0
 8007678:	e9d7 ab16 	ldrd	sl, fp, [r7, #88]	; 0x58
 800767c:	4659      	mov	r1, fp
 800767e:	00cb      	lsls	r3, r1, #3
 8007680:	4651      	mov	r1, sl
 8007682:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007686:	4651      	mov	r1, sl
 8007688:	00ca      	lsls	r2, r1, #3
 800768a:	4610      	mov	r0, r2
 800768c:	4619      	mov	r1, r3
 800768e:	4603      	mov	r3, r0
 8007690:	4642      	mov	r2, r8
 8007692:	189b      	adds	r3, r3, r2
 8007694:	f8c7 3170 	str.w	r3, [r7, #368]	; 0x170
 8007698:	464b      	mov	r3, r9
 800769a:	460a      	mov	r2, r1
 800769c:	eb42 0303 	adc.w	r3, r2, r3
 80076a0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80076a4:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80076a8:	685b      	ldr	r3, [r3, #4]
 80076aa:	2200      	movs	r2, #0
 80076ac:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
 80076b0:	f8c7 216c 	str.w	r2, [r7, #364]	; 0x16c
 80076b4:	e9d7 125a 	ldrd	r1, r2, [r7, #360]	; 0x168
 80076b8:	460b      	mov	r3, r1
 80076ba:	18db      	adds	r3, r3, r3
 80076bc:	653b      	str	r3, [r7, #80]	; 0x50
 80076be:	4613      	mov	r3, r2
 80076c0:	eb42 0303 	adc.w	r3, r2, r3
 80076c4:	657b      	str	r3, [r7, #84]	; 0x54
 80076c6:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 80076ca:	e9d7 015c 	ldrd	r0, r1, [r7, #368]	; 0x170
 80076ce:	f7f9 fa7b 	bl	8000bc8 <__aeabi_uldivmod>
 80076d2:	4602      	mov	r2, r0
 80076d4:	460b      	mov	r3, r1
 80076d6:	4b0b      	ldr	r3, [pc, #44]	; (8007704 <UART_SetConfig+0x528>)
 80076d8:	fba3 1302 	umull	r1, r3, r3, r2
 80076dc:	095b      	lsrs	r3, r3, #5
 80076de:	2164      	movs	r1, #100	; 0x64
 80076e0:	fb01 f303 	mul.w	r3, r1, r3
 80076e4:	1ad3      	subs	r3, r2, r3
 80076e6:	00db      	lsls	r3, r3, #3
 80076e8:	3332      	adds	r3, #50	; 0x32
 80076ea:	4a06      	ldr	r2, [pc, #24]	; (8007704 <UART_SetConfig+0x528>)
 80076ec:	fba2 2303 	umull	r2, r3, r2, r3
 80076f0:	095b      	lsrs	r3, r3, #5
 80076f2:	f003 0207 	and.w	r2, r3, #7
 80076f6:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80076fa:	681b      	ldr	r3, [r3, #0]
 80076fc:	4422      	add	r2, r4
 80076fe:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 8007700:	e232      	b.n	8007b68 <UART_SetConfig+0x98c>
 8007702:	bf00      	nop
 8007704:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8007708:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800770c:	681a      	ldr	r2, [r3, #0]
 800770e:	4b8d      	ldr	r3, [pc, #564]	; (8007944 <UART_SetConfig+0x768>)
 8007710:	429a      	cmp	r2, r3
 8007712:	d006      	beq.n	8007722 <UART_SetConfig+0x546>
 8007714:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007718:	681a      	ldr	r2, [r3, #0]
 800771a:	4b8b      	ldr	r3, [pc, #556]	; (8007948 <UART_SetConfig+0x76c>)
 800771c:	429a      	cmp	r2, r3
 800771e:	f040 8117 	bne.w	8007950 <UART_SetConfig+0x774>
      pclk = HAL_RCC_GetPCLK2Freq();
 8007722:	f7fd fd3d 	bl	80051a0 <HAL_RCC_GetPCLK2Freq>
 8007726:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800772a:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800772e:	2200      	movs	r2, #0
 8007730:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
 8007734:	f8c7 2164 	str.w	r2, [r7, #356]	; 0x164
 8007738:	e9d7 4558 	ldrd	r4, r5, [r7, #352]	; 0x160
 800773c:	4622      	mov	r2, r4
 800773e:	462b      	mov	r3, r5
 8007740:	1891      	adds	r1, r2, r2
 8007742:	64b9      	str	r1, [r7, #72]	; 0x48
 8007744:	415b      	adcs	r3, r3
 8007746:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007748:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800774c:	4621      	mov	r1, r4
 800774e:	eb12 0801 	adds.w	r8, r2, r1
 8007752:	4629      	mov	r1, r5
 8007754:	eb43 0901 	adc.w	r9, r3, r1
 8007758:	f04f 0200 	mov.w	r2, #0
 800775c:	f04f 0300 	mov.w	r3, #0
 8007760:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8007764:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007768:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800776c:	4690      	mov	r8, r2
 800776e:	4699      	mov	r9, r3
 8007770:	4623      	mov	r3, r4
 8007772:	eb18 0303 	adds.w	r3, r8, r3
 8007776:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 800777a:	462b      	mov	r3, r5
 800777c:	eb49 0303 	adc.w	r3, r9, r3
 8007780:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c
 8007784:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007788:	685b      	ldr	r3, [r3, #4]
 800778a:	2200      	movs	r2, #0
 800778c:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8007790:	f8c7 2154 	str.w	r2, [r7, #340]	; 0x154
 8007794:	f04f 0200 	mov.w	r2, #0
 8007798:	f04f 0300 	mov.w	r3, #0
 800779c:	e9d7 4554 	ldrd	r4, r5, [r7, #336]	; 0x150
 80077a0:	4629      	mov	r1, r5
 80077a2:	008b      	lsls	r3, r1, #2
 80077a4:	4621      	mov	r1, r4
 80077a6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80077aa:	4621      	mov	r1, r4
 80077ac:	008a      	lsls	r2, r1, #2
 80077ae:	e9d7 0156 	ldrd	r0, r1, [r7, #344]	; 0x158
 80077b2:	f7f9 fa09 	bl	8000bc8 <__aeabi_uldivmod>
 80077b6:	4602      	mov	r2, r0
 80077b8:	460b      	mov	r3, r1
 80077ba:	4b64      	ldr	r3, [pc, #400]	; (800794c <UART_SetConfig+0x770>)
 80077bc:	fba3 2302 	umull	r2, r3, r3, r2
 80077c0:	095b      	lsrs	r3, r3, #5
 80077c2:	011c      	lsls	r4, r3, #4
 80077c4:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80077c8:	2200      	movs	r2, #0
 80077ca:	f8c7 3148 	str.w	r3, [r7, #328]	; 0x148
 80077ce:	f8c7 214c 	str.w	r2, [r7, #332]	; 0x14c
 80077d2:	e9d7 8952 	ldrd	r8, r9, [r7, #328]	; 0x148
 80077d6:	4642      	mov	r2, r8
 80077d8:	464b      	mov	r3, r9
 80077da:	1891      	adds	r1, r2, r2
 80077dc:	6439      	str	r1, [r7, #64]	; 0x40
 80077de:	415b      	adcs	r3, r3
 80077e0:	647b      	str	r3, [r7, #68]	; 0x44
 80077e2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80077e6:	4641      	mov	r1, r8
 80077e8:	1851      	adds	r1, r2, r1
 80077ea:	63b9      	str	r1, [r7, #56]	; 0x38
 80077ec:	4649      	mov	r1, r9
 80077ee:	414b      	adcs	r3, r1
 80077f0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80077f2:	f04f 0200 	mov.w	r2, #0
 80077f6:	f04f 0300 	mov.w	r3, #0
 80077fa:	e9d7 ab0e 	ldrd	sl, fp, [r7, #56]	; 0x38
 80077fe:	4659      	mov	r1, fp
 8007800:	00cb      	lsls	r3, r1, #3
 8007802:	4651      	mov	r1, sl
 8007804:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007808:	4651      	mov	r1, sl
 800780a:	00ca      	lsls	r2, r1, #3
 800780c:	4610      	mov	r0, r2
 800780e:	4619      	mov	r1, r3
 8007810:	4603      	mov	r3, r0
 8007812:	4642      	mov	r2, r8
 8007814:	189b      	adds	r3, r3, r2
 8007816:	f8c7 3140 	str.w	r3, [r7, #320]	; 0x140
 800781a:	464b      	mov	r3, r9
 800781c:	460a      	mov	r2, r1
 800781e:	eb42 0303 	adc.w	r3, r2, r3
 8007822:	f8c7 3144 	str.w	r3, [r7, #324]	; 0x144
 8007826:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800782a:	685b      	ldr	r3, [r3, #4]
 800782c:	2200      	movs	r2, #0
 800782e:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
 8007832:	f8c7 213c 	str.w	r2, [r7, #316]	; 0x13c
 8007836:	f04f 0200 	mov.w	r2, #0
 800783a:	f04f 0300 	mov.w	r3, #0
 800783e:	e9d7 894e 	ldrd	r8, r9, [r7, #312]	; 0x138
 8007842:	4649      	mov	r1, r9
 8007844:	008b      	lsls	r3, r1, #2
 8007846:	4641      	mov	r1, r8
 8007848:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800784c:	4641      	mov	r1, r8
 800784e:	008a      	lsls	r2, r1, #2
 8007850:	e9d7 0150 	ldrd	r0, r1, [r7, #320]	; 0x140
 8007854:	f7f9 f9b8 	bl	8000bc8 <__aeabi_uldivmod>
 8007858:	4602      	mov	r2, r0
 800785a:	460b      	mov	r3, r1
 800785c:	4b3b      	ldr	r3, [pc, #236]	; (800794c <UART_SetConfig+0x770>)
 800785e:	fba3 1302 	umull	r1, r3, r3, r2
 8007862:	095b      	lsrs	r3, r3, #5
 8007864:	2164      	movs	r1, #100	; 0x64
 8007866:	fb01 f303 	mul.w	r3, r1, r3
 800786a:	1ad3      	subs	r3, r2, r3
 800786c:	011b      	lsls	r3, r3, #4
 800786e:	3332      	adds	r3, #50	; 0x32
 8007870:	4a36      	ldr	r2, [pc, #216]	; (800794c <UART_SetConfig+0x770>)
 8007872:	fba2 2303 	umull	r2, r3, r2, r3
 8007876:	095b      	lsrs	r3, r3, #5
 8007878:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800787c:	441c      	add	r4, r3
 800787e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007882:	2200      	movs	r2, #0
 8007884:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
 8007888:	f8c7 2134 	str.w	r2, [r7, #308]	; 0x134
 800788c:	e9d7 894c 	ldrd	r8, r9, [r7, #304]	; 0x130
 8007890:	4642      	mov	r2, r8
 8007892:	464b      	mov	r3, r9
 8007894:	1891      	adds	r1, r2, r2
 8007896:	6339      	str	r1, [r7, #48]	; 0x30
 8007898:	415b      	adcs	r3, r3
 800789a:	637b      	str	r3, [r7, #52]	; 0x34
 800789c:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80078a0:	4641      	mov	r1, r8
 80078a2:	1851      	adds	r1, r2, r1
 80078a4:	62b9      	str	r1, [r7, #40]	; 0x28
 80078a6:	4649      	mov	r1, r9
 80078a8:	414b      	adcs	r3, r1
 80078aa:	62fb      	str	r3, [r7, #44]	; 0x2c
 80078ac:	f04f 0200 	mov.w	r2, #0
 80078b0:	f04f 0300 	mov.w	r3, #0
 80078b4:	e9d7 ab0a 	ldrd	sl, fp, [r7, #40]	; 0x28
 80078b8:	4659      	mov	r1, fp
 80078ba:	00cb      	lsls	r3, r1, #3
 80078bc:	4651      	mov	r1, sl
 80078be:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80078c2:	4651      	mov	r1, sl
 80078c4:	00ca      	lsls	r2, r1, #3
 80078c6:	4610      	mov	r0, r2
 80078c8:	4619      	mov	r1, r3
 80078ca:	4603      	mov	r3, r0
 80078cc:	4642      	mov	r2, r8
 80078ce:	189b      	adds	r3, r3, r2
 80078d0:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 80078d4:	464b      	mov	r3, r9
 80078d6:	460a      	mov	r2, r1
 80078d8:	eb42 0303 	adc.w	r3, r2, r3
 80078dc:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 80078e0:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80078e4:	685b      	ldr	r3, [r3, #4]
 80078e6:	2200      	movs	r2, #0
 80078e8:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 80078ec:	f8c7 2124 	str.w	r2, [r7, #292]	; 0x124
 80078f0:	f04f 0200 	mov.w	r2, #0
 80078f4:	f04f 0300 	mov.w	r3, #0
 80078f8:	e9d7 8948 	ldrd	r8, r9, [r7, #288]	; 0x120
 80078fc:	4649      	mov	r1, r9
 80078fe:	008b      	lsls	r3, r1, #2
 8007900:	4641      	mov	r1, r8
 8007902:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007906:	4641      	mov	r1, r8
 8007908:	008a      	lsls	r2, r1, #2
 800790a:	e9d7 014a 	ldrd	r0, r1, [r7, #296]	; 0x128
 800790e:	f7f9 f95b 	bl	8000bc8 <__aeabi_uldivmod>
 8007912:	4602      	mov	r2, r0
 8007914:	460b      	mov	r3, r1
 8007916:	4b0d      	ldr	r3, [pc, #52]	; (800794c <UART_SetConfig+0x770>)
 8007918:	fba3 1302 	umull	r1, r3, r3, r2
 800791c:	095b      	lsrs	r3, r3, #5
 800791e:	2164      	movs	r1, #100	; 0x64
 8007920:	fb01 f303 	mul.w	r3, r1, r3
 8007924:	1ad3      	subs	r3, r2, r3
 8007926:	011b      	lsls	r3, r3, #4
 8007928:	3332      	adds	r3, #50	; 0x32
 800792a:	4a08      	ldr	r2, [pc, #32]	; (800794c <UART_SetConfig+0x770>)
 800792c:	fba2 2303 	umull	r2, r3, r2, r3
 8007930:	095b      	lsrs	r3, r3, #5
 8007932:	f003 020f 	and.w	r2, r3, #15
 8007936:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 800793a:	681b      	ldr	r3, [r3, #0]
 800793c:	4422      	add	r2, r4
 800793e:	609a      	str	r2, [r3, #8]
 8007940:	e112      	b.n	8007b68 <UART_SetConfig+0x98c>
 8007942:	bf00      	nop
 8007944:	40011000 	.word	0x40011000
 8007948:	40011400 	.word	0x40011400
 800794c:	51eb851f 	.word	0x51eb851f
      pclk = HAL_RCC_GetPCLK1Freq();
 8007950:	f7fd fc12 	bl	8005178 <HAL_RCC_GetPCLK1Freq>
 8007954:	f8c7 0200 	str.w	r0, [r7, #512]	; 0x200
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8007958:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800795c:	2200      	movs	r2, #0
 800795e:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8007962:	f8c7 211c 	str.w	r2, [r7, #284]	; 0x11c
 8007966:	e9d7 8946 	ldrd	r8, r9, [r7, #280]	; 0x118
 800796a:	4642      	mov	r2, r8
 800796c:	464b      	mov	r3, r9
 800796e:	1891      	adds	r1, r2, r2
 8007970:	6239      	str	r1, [r7, #32]
 8007972:	415b      	adcs	r3, r3
 8007974:	627b      	str	r3, [r7, #36]	; 0x24
 8007976:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800797a:	4641      	mov	r1, r8
 800797c:	1854      	adds	r4, r2, r1
 800797e:	4649      	mov	r1, r9
 8007980:	eb43 0501 	adc.w	r5, r3, r1
 8007984:	f04f 0200 	mov.w	r2, #0
 8007988:	f04f 0300 	mov.w	r3, #0
 800798c:	00eb      	lsls	r3, r5, #3
 800798e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8007992:	00e2      	lsls	r2, r4, #3
 8007994:	4614      	mov	r4, r2
 8007996:	461d      	mov	r5, r3
 8007998:	4643      	mov	r3, r8
 800799a:	18e3      	adds	r3, r4, r3
 800799c:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 80079a0:	464b      	mov	r3, r9
 80079a2:	eb45 0303 	adc.w	r3, r5, r3
 80079a6:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 80079aa:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 80079ae:	685b      	ldr	r3, [r3, #4]
 80079b0:	2200      	movs	r2, #0
 80079b2:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 80079b6:	f8c7 210c 	str.w	r2, [r7, #268]	; 0x10c
 80079ba:	f04f 0200 	mov.w	r2, #0
 80079be:	f04f 0300 	mov.w	r3, #0
 80079c2:	e9d7 4542 	ldrd	r4, r5, [r7, #264]	; 0x108
 80079c6:	4629      	mov	r1, r5
 80079c8:	008b      	lsls	r3, r1, #2
 80079ca:	4621      	mov	r1, r4
 80079cc:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80079d0:	4621      	mov	r1, r4
 80079d2:	008a      	lsls	r2, r1, #2
 80079d4:	e9d7 0144 	ldrd	r0, r1, [r7, #272]	; 0x110
 80079d8:	f7f9 f8f6 	bl	8000bc8 <__aeabi_uldivmod>
 80079dc:	4602      	mov	r2, r0
 80079de:	460b      	mov	r3, r1
 80079e0:	4b64      	ldr	r3, [pc, #400]	; (8007b74 <UART_SetConfig+0x998>)
 80079e2:	fba3 2302 	umull	r2, r3, r3, r2
 80079e6:	095b      	lsrs	r3, r3, #5
 80079e8:	011c      	lsls	r4, r3, #4
 80079ea:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80079ee:	2200      	movs	r2, #0
 80079f0:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 80079f4:	f8c7 2104 	str.w	r2, [r7, #260]	; 0x104
 80079f8:	e9d7 8940 	ldrd	r8, r9, [r7, #256]	; 0x100
 80079fc:	4642      	mov	r2, r8
 80079fe:	464b      	mov	r3, r9
 8007a00:	1891      	adds	r1, r2, r2
 8007a02:	61b9      	str	r1, [r7, #24]
 8007a04:	415b      	adcs	r3, r3
 8007a06:	61fb      	str	r3, [r7, #28]
 8007a08:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007a0c:	4641      	mov	r1, r8
 8007a0e:	1851      	adds	r1, r2, r1
 8007a10:	6139      	str	r1, [r7, #16]
 8007a12:	4649      	mov	r1, r9
 8007a14:	414b      	adcs	r3, r1
 8007a16:	617b      	str	r3, [r7, #20]
 8007a18:	f04f 0200 	mov.w	r2, #0
 8007a1c:	f04f 0300 	mov.w	r3, #0
 8007a20:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8007a24:	4659      	mov	r1, fp
 8007a26:	00cb      	lsls	r3, r1, #3
 8007a28:	4651      	mov	r1, sl
 8007a2a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007a2e:	4651      	mov	r1, sl
 8007a30:	00ca      	lsls	r2, r1, #3
 8007a32:	4610      	mov	r0, r2
 8007a34:	4619      	mov	r1, r3
 8007a36:	4603      	mov	r3, r0
 8007a38:	4642      	mov	r2, r8
 8007a3a:	189b      	adds	r3, r3, r2
 8007a3c:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8007a40:	464b      	mov	r3, r9
 8007a42:	460a      	mov	r2, r1
 8007a44:	eb42 0303 	adc.w	r3, r2, r3
 8007a48:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8007a4c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007a50:	685b      	ldr	r3, [r3, #4]
 8007a52:	2200      	movs	r2, #0
 8007a54:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8007a58:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
 8007a5c:	f04f 0200 	mov.w	r2, #0
 8007a60:	f04f 0300 	mov.w	r3, #0
 8007a64:	e9d7 893c 	ldrd	r8, r9, [r7, #240]	; 0xf0
 8007a68:	4649      	mov	r1, r9
 8007a6a:	008b      	lsls	r3, r1, #2
 8007a6c:	4641      	mov	r1, r8
 8007a6e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007a72:	4641      	mov	r1, r8
 8007a74:	008a      	lsls	r2, r1, #2
 8007a76:	e9d7 013e 	ldrd	r0, r1, [r7, #248]	; 0xf8
 8007a7a:	f7f9 f8a5 	bl	8000bc8 <__aeabi_uldivmod>
 8007a7e:	4602      	mov	r2, r0
 8007a80:	460b      	mov	r3, r1
 8007a82:	4b3c      	ldr	r3, [pc, #240]	; (8007b74 <UART_SetConfig+0x998>)
 8007a84:	fba3 1302 	umull	r1, r3, r3, r2
 8007a88:	095b      	lsrs	r3, r3, #5
 8007a8a:	2164      	movs	r1, #100	; 0x64
 8007a8c:	fb01 f303 	mul.w	r3, r1, r3
 8007a90:	1ad3      	subs	r3, r2, r3
 8007a92:	011b      	lsls	r3, r3, #4
 8007a94:	3332      	adds	r3, #50	; 0x32
 8007a96:	4a37      	ldr	r2, [pc, #220]	; (8007b74 <UART_SetConfig+0x998>)
 8007a98:	fba2 2303 	umull	r2, r3, r2, r3
 8007a9c:	095b      	lsrs	r3, r3, #5
 8007a9e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8007aa2:	441c      	add	r4, r3
 8007aa4:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007aa8:	2200      	movs	r2, #0
 8007aaa:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8007aae:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8007ab2:	e9d7 893a 	ldrd	r8, r9, [r7, #232]	; 0xe8
 8007ab6:	4642      	mov	r2, r8
 8007ab8:	464b      	mov	r3, r9
 8007aba:	1891      	adds	r1, r2, r2
 8007abc:	60b9      	str	r1, [r7, #8]
 8007abe:	415b      	adcs	r3, r3
 8007ac0:	60fb      	str	r3, [r7, #12]
 8007ac2:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007ac6:	4641      	mov	r1, r8
 8007ac8:	1851      	adds	r1, r2, r1
 8007aca:	6039      	str	r1, [r7, #0]
 8007acc:	4649      	mov	r1, r9
 8007ace:	414b      	adcs	r3, r1
 8007ad0:	607b      	str	r3, [r7, #4]
 8007ad2:	f04f 0200 	mov.w	r2, #0
 8007ad6:	f04f 0300 	mov.w	r3, #0
 8007ada:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8007ade:	4659      	mov	r1, fp
 8007ae0:	00cb      	lsls	r3, r1, #3
 8007ae2:	4651      	mov	r1, sl
 8007ae4:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007ae8:	4651      	mov	r1, sl
 8007aea:	00ca      	lsls	r2, r1, #3
 8007aec:	4610      	mov	r0, r2
 8007aee:	4619      	mov	r1, r3
 8007af0:	4603      	mov	r3, r0
 8007af2:	4642      	mov	r2, r8
 8007af4:	189b      	adds	r3, r3, r2
 8007af6:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8007afa:	464b      	mov	r3, r9
 8007afc:	460a      	mov	r2, r1
 8007afe:	eb42 0303 	adc.w	r3, r2, r3
 8007b02:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8007b06:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007b0a:	685b      	ldr	r3, [r3, #4]
 8007b0c:	2200      	movs	r2, #0
 8007b0e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8007b12:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8007b16:	f04f 0200 	mov.w	r2, #0
 8007b1a:	f04f 0300 	mov.w	r3, #0
 8007b1e:	e9d7 8936 	ldrd	r8, r9, [r7, #216]	; 0xd8
 8007b22:	4649      	mov	r1, r9
 8007b24:	008b      	lsls	r3, r1, #2
 8007b26:	4641      	mov	r1, r8
 8007b28:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8007b2c:	4641      	mov	r1, r8
 8007b2e:	008a      	lsls	r2, r1, #2
 8007b30:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8007b34:	f7f9 f848 	bl	8000bc8 <__aeabi_uldivmod>
 8007b38:	4602      	mov	r2, r0
 8007b3a:	460b      	mov	r3, r1
 8007b3c:	4b0d      	ldr	r3, [pc, #52]	; (8007b74 <UART_SetConfig+0x998>)
 8007b3e:	fba3 1302 	umull	r1, r3, r3, r2
 8007b42:	095b      	lsrs	r3, r3, #5
 8007b44:	2164      	movs	r1, #100	; 0x64
 8007b46:	fb01 f303 	mul.w	r3, r1, r3
 8007b4a:	1ad3      	subs	r3, r2, r3
 8007b4c:	011b      	lsls	r3, r3, #4
 8007b4e:	3332      	adds	r3, #50	; 0x32
 8007b50:	4a08      	ldr	r2, [pc, #32]	; (8007b74 <UART_SetConfig+0x998>)
 8007b52:	fba2 2303 	umull	r2, r3, r2, r3
 8007b56:	095b      	lsrs	r3, r3, #5
 8007b58:	f003 020f 	and.w	r2, r3, #15
 8007b5c:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8007b60:	681b      	ldr	r3, [r3, #0]
 8007b62:	4422      	add	r2, r4
 8007b64:	609a      	str	r2, [r3, #8]
}
 8007b66:	e7ff      	b.n	8007b68 <UART_SetConfig+0x98c>
 8007b68:	bf00      	nop
 8007b6a:	f507 7702 	add.w	r7, r7, #520	; 0x208
 8007b6e:	46bd      	mov	sp, r7
 8007b70:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007b74:	51eb851f 	.word	0x51eb851f

08007b78 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007b78:	b480      	push	{r7}
 8007b7a:	b085      	sub	sp, #20
 8007b7c:	af00      	add	r7, sp, #0
 8007b7e:	6078      	str	r0, [r7, #4]
 8007b80:	6039      	str	r1, [r7, #0]
  uint32_t tmpr1 = 0U;
 8007b82:	2300      	movs	r3, #0
 8007b84:	60fb      	str	r3, [r7, #12]
  uint32_t tmpr2 = 0U;
 8007b86:	2300      	movs	r3, #0
 8007b88:	60bb      	str	r3, [r7, #8]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007b8a:	683b      	ldr	r3, [r7, #0]
 8007b8c:	681b      	ldr	r3, [r3, #0]
 8007b8e:	2b01      	cmp	r3, #1
 8007b90:	d029      	beq.n	8007be6 <FMC_SDRAM_Init+0x6e>
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	681b      	ldr	r3, [r3, #0]
 8007b96:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007b98:	68fb      	ldr	r3, [r7, #12]
 8007b9a:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8007b9e:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8007ba2:	60fb      	str	r3, [r7, #12]
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007ba4:	683b      	ldr	r3, [r7, #0]
 8007ba6:	685a      	ldr	r2, [r3, #4]
                                               Init->RowBitsNumber      |\
 8007ba8:	683b      	ldr	r3, [r7, #0]
 8007baa:	689b      	ldr	r3, [r3, #8]
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007bac:	431a      	orrs	r2, r3
                                               Init->MemoryDataWidth    |\
 8007bae:	683b      	ldr	r3, [r7, #0]
 8007bb0:	68db      	ldr	r3, [r3, #12]
                                               Init->RowBitsNumber      |\
 8007bb2:	431a      	orrs	r2, r3
                                               Init->InternalBankNumber |\
 8007bb4:	683b      	ldr	r3, [r7, #0]
 8007bb6:	691b      	ldr	r3, [r3, #16]
                                               Init->MemoryDataWidth    |\
 8007bb8:	431a      	orrs	r2, r3
                                               Init->CASLatency         |\
 8007bba:	683b      	ldr	r3, [r7, #0]
 8007bbc:	695b      	ldr	r3, [r3, #20]
                                               Init->InternalBankNumber |\
 8007bbe:	431a      	orrs	r2, r3
                                               Init->WriteProtection    |\
 8007bc0:	683b      	ldr	r3, [r7, #0]
 8007bc2:	699b      	ldr	r3, [r3, #24]
                                               Init->CASLatency         |\
 8007bc4:	431a      	orrs	r2, r3
                                               Init->SDClockPeriod      |\
 8007bc6:	683b      	ldr	r3, [r7, #0]
 8007bc8:	69db      	ldr	r3, [r3, #28]
                                               Init->WriteProtection    |\
 8007bca:	431a      	orrs	r2, r3
                                               Init->ReadBurst          |\
 8007bcc:	683b      	ldr	r3, [r7, #0]
 8007bce:	6a1b      	ldr	r3, [r3, #32]
                                               Init->SDClockPeriod      |\
 8007bd0:	431a      	orrs	r2, r3
                                               Init->ReadPipeDelay
 8007bd2:	683b      	ldr	r3, [r7, #0]
 8007bd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                                               Init->ReadBurst          |\
 8007bd6:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007bd8:	68fa      	ldr	r2, [r7, #12]
 8007bda:	4313      	orrs	r3, r2
 8007bdc:	60fb      	str	r3, [r7, #12]
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	68fa      	ldr	r2, [r7, #12]
 8007be2:	601a      	str	r2, [r3, #0]
 8007be4:	e034      	b.n	8007c50 <FMC_SDRAM_Init+0xd8>
  }
  else /* FMC_Bank2_SDRAM */                      
  {
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	681b      	ldr	r3, [r3, #0]
 8007bea:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8007bec:	68fb      	ldr	r3, [r7, #12]
 8007bee:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8007bf2:	60fb      	str	r3, [r7, #12]
    
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007bf4:	683b      	ldr	r3, [r7, #0]
 8007bf6:	69da      	ldr	r2, [r3, #28]
                        Init->ReadBurst          |\
 8007bf8:	683b      	ldr	r3, [r7, #0]
 8007bfa:	6a1b      	ldr	r3, [r3, #32]
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007bfc:	431a      	orrs	r2, r3
                        Init->ReadPipeDelay);  
 8007bfe:	683b      	ldr	r3, [r7, #0]
 8007c00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                        Init->ReadBurst          |\
 8007c02:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007c04:	68fa      	ldr	r2, [r7, #12]
 8007c06:	4313      	orrs	r3, r2
 8007c08:	60fb      	str	r3, [r7, #12]
    
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8007c0a:	687b      	ldr	r3, [r7, #4]
 8007c0c:	685b      	ldr	r3, [r3, #4]
 8007c0e:	60bb      	str	r3, [r7, #8]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007c10:	68bb      	ldr	r3, [r7, #8]
 8007c12:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8007c16:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8007c1a:	60bb      	str	r3, [r7, #8]
                          FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                          FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));

    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007c1c:	683b      	ldr	r3, [r7, #0]
 8007c1e:	685a      	ldr	r2, [r3, #4]
                       Init->RowBitsNumber      |\
 8007c20:	683b      	ldr	r3, [r7, #0]
 8007c22:	689b      	ldr	r3, [r3, #8]
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007c24:	431a      	orrs	r2, r3
                       Init->MemoryDataWidth    |\
 8007c26:	683b      	ldr	r3, [r7, #0]
 8007c28:	68db      	ldr	r3, [r3, #12]
                       Init->RowBitsNumber      |\
 8007c2a:	431a      	orrs	r2, r3
                       Init->InternalBankNumber |\
 8007c2c:	683b      	ldr	r3, [r7, #0]
 8007c2e:	691b      	ldr	r3, [r3, #16]
                       Init->MemoryDataWidth    |\
 8007c30:	431a      	orrs	r2, r3
                       Init->CASLatency         |\
 8007c32:	683b      	ldr	r3, [r7, #0]
 8007c34:	695b      	ldr	r3, [r3, #20]
                       Init->InternalBankNumber |\
 8007c36:	431a      	orrs	r2, r3
                       Init->WriteProtection);
 8007c38:	683b      	ldr	r3, [r7, #0]
 8007c3a:	699b      	ldr	r3, [r3, #24]
                       Init->CASLatency         |\
 8007c3c:	4313      	orrs	r3, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007c3e:	68ba      	ldr	r2, [r7, #8]
 8007c40:	4313      	orrs	r3, r2
 8007c42:	60bb      	str	r3, [r7, #8]

    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	68fa      	ldr	r2, [r7, #12]
 8007c48:	601a      	str	r2, [r3, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007c4a:	687b      	ldr	r3, [r7, #4]
 8007c4c:	68ba      	ldr	r2, [r7, #8]
 8007c4e:	605a      	str	r2, [r3, #4]
  }  
  
  return HAL_OK;
 8007c50:	2300      	movs	r3, #0
}
 8007c52:	4618      	mov	r0, r3
 8007c54:	3714      	adds	r7, #20
 8007c56:	46bd      	mov	sp, r7
 8007c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c5c:	4770      	bx	lr

08007c5e <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8007c5e:	b480      	push	{r7}
 8007c60:	b087      	sub	sp, #28
 8007c62:	af00      	add	r7, sp, #0
 8007c64:	60f8      	str	r0, [r7, #12]
 8007c66:	60b9      	str	r1, [r7, #8]
 8007c68:	607a      	str	r2, [r7, #4]
  uint32_t tmpr1 = 0U;
 8007c6a:	2300      	movs	r3, #0
 8007c6c:	617b      	str	r3, [r7, #20]
  uint32_t tmpr2 = 0U;
 8007c6e:	2300      	movs	r3, #0
 8007c70:	613b      	str	r3, [r7, #16]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8007c72:	687b      	ldr	r3, [r7, #4]
 8007c74:	2b01      	cmp	r3, #1
 8007c76:	d02e      	beq.n	8007cd6 <FMC_SDRAM_Timing_Init+0x78>
  { 
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007c78:	68fb      	ldr	r3, [r7, #12]
 8007c7a:	689b      	ldr	r3, [r3, #8]
 8007c7c:	617b      	str	r3, [r7, #20]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007c7e:	697b      	ldr	r3, [r7, #20]
 8007c80:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8007c84:	617b      	str	r3, [r7, #20]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007c86:	68bb      	ldr	r3, [r7, #8]
 8007c88:	681b      	ldr	r3, [r3, #0]
 8007c8a:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007c8c:	68bb      	ldr	r3, [r7, #8]
 8007c8e:	685b      	ldr	r3, [r3, #4]
 8007c90:	3b01      	subs	r3, #1
 8007c92:	011b      	lsls	r3, r3, #4
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007c94:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007c96:	68bb      	ldr	r3, [r7, #8]
 8007c98:	689b      	ldr	r3, [r3, #8]
 8007c9a:	3b01      	subs	r3, #1
 8007c9c:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8007c9e:	431a      	orrs	r2, r3
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007ca0:	68bb      	ldr	r3, [r7, #8]
 8007ca2:	68db      	ldr	r3, [r3, #12]
 8007ca4:	3b01      	subs	r3, #1
 8007ca6:	031b      	lsls	r3, r3, #12
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8007ca8:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007caa:	68bb      	ldr	r3, [r7, #8]
 8007cac:	691b      	ldr	r3, [r3, #16]
 8007cae:	3b01      	subs	r3, #1
 8007cb0:	041b      	lsls	r3, r3, #16
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007cb2:	431a      	orrs	r2, r3
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8007cb4:	68bb      	ldr	r3, [r7, #8]
 8007cb6:	695b      	ldr	r3, [r3, #20]
 8007cb8:	3b01      	subs	r3, #1
 8007cba:	051b      	lsls	r3, r3, #20
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8007cbc:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U));
 8007cbe:	68bb      	ldr	r3, [r7, #8]
 8007cc0:	699b      	ldr	r3, [r3, #24]
 8007cc2:	3b01      	subs	r3, #1
 8007cc4:	061b      	lsls	r3, r3, #24
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007cc6:	4313      	orrs	r3, r2
 8007cc8:	697a      	ldr	r2, [r7, #20]
 8007cca:	4313      	orrs	r3, r2
 8007ccc:	617b      	str	r3, [r7, #20]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007cce:	68fb      	ldr	r3, [r7, #12]
 8007cd0:	697a      	ldr	r2, [r7, #20]
 8007cd2:	609a      	str	r2, [r3, #8]
 8007cd4:	e03b      	b.n	8007d4e <FMC_SDRAM_Timing_Init+0xf0>
  }
   else /* FMC_Bank2_SDRAM */
  {
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007cd6:	68fb      	ldr	r3, [r7, #12]
 8007cd8:	689b      	ldr	r3, [r3, #8]
 8007cda:	617b      	str	r3, [r7, #20]
    
    /* Clear TRC and TRP bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007cdc:	697b      	ldr	r3, [r7, #20]
 8007cde:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8007ce2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8007ce6:	617b      	str	r3, [r7, #20]
    
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007ce8:	68bb      	ldr	r3, [r7, #8]
 8007cea:	68db      	ldr	r3, [r3, #12]
 8007cec:	3b01      	subs	r3, #1
 8007cee:	031a      	lsls	r2, r3, #12
                        (((Timing->RPDelay)-1U) << 20U)); 
 8007cf0:	68bb      	ldr	r3, [r7, #8]
 8007cf2:	695b      	ldr	r3, [r3, #20]
 8007cf4:	3b01      	subs	r3, #1
 8007cf6:	051b      	lsls	r3, r3, #20
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007cf8:	4313      	orrs	r3, r2
 8007cfa:	697a      	ldr	r2, [r7, #20]
 8007cfc:	4313      	orrs	r3, r2
 8007cfe:	617b      	str	r3, [r7, #20]
    
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007d00:	68fb      	ldr	r3, [r7, #12]
 8007d02:	68db      	ldr	r3, [r3, #12]
 8007d04:	613b      	str	r3, [r7, #16]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007d06:	693b      	ldr	r3, [r7, #16]
 8007d08:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8007d0c:	613b      	str	r3, [r7, #16]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007d0e:	68bb      	ldr	r3, [r7, #8]
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 8007d14:	68bb      	ldr	r3, [r7, #8]
 8007d16:	685b      	ldr	r3, [r3, #4]
 8007d18:	3b01      	subs	r3, #1
 8007d1a:	011b      	lsls	r3, r3, #4
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007d1c:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 8007d1e:	68bb      	ldr	r3, [r7, #8]
 8007d20:	689b      	ldr	r3, [r3, #8]
 8007d22:	3b01      	subs	r3, #1
 8007d24:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 8007d26:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)     |\
 8007d28:	68bb      	ldr	r3, [r7, #8]
 8007d2a:	691b      	ldr	r3, [r3, #16]
 8007d2c:	3b01      	subs	r3, #1
 8007d2e:	041b      	lsls	r3, r3, #16
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 8007d30:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U)));   
 8007d32:	68bb      	ldr	r3, [r7, #8]
 8007d34:	699b      	ldr	r3, [r3, #24]
 8007d36:	3b01      	subs	r3, #1
 8007d38:	061b      	lsls	r3, r3, #24
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007d3a:	4313      	orrs	r3, r2
 8007d3c:	693a      	ldr	r2, [r7, #16]
 8007d3e:	4313      	orrs	r3, r2
 8007d40:	613b      	str	r3, [r7, #16]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007d42:	68fb      	ldr	r3, [r7, #12]
 8007d44:	697a      	ldr	r2, [r7, #20]
 8007d46:	609a      	str	r2, [r3, #8]
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8007d48:	68fb      	ldr	r3, [r7, #12]
 8007d4a:	693a      	ldr	r2, [r7, #16]
 8007d4c:	60da      	str	r2, [r3, #12]
  }
  return HAL_OK;
 8007d4e:	2300      	movs	r3, #0
}
 8007d50:	4618      	mov	r0, r3
 8007d52:	371c      	adds	r7, #28
 8007d54:	46bd      	mov	sp, r7
 8007d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d5a:	4770      	bx	lr

08007d5c <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007d5c:	b580      	push	{r7, lr}
 8007d5e:	b086      	sub	sp, #24
 8007d60:	af00      	add	r7, sp, #0
 8007d62:	60f8      	str	r0, [r7, #12]
 8007d64:	60b9      	str	r1, [r7, #8]
 8007d66:	607a      	str	r2, [r7, #4]
  __IO uint32_t tmpr = 0U;
 8007d68:	2300      	movs	r3, #0
 8007d6a:	613b      	str	r3, [r7, #16]
  uint32_t tickstart = 0U;
 8007d6c:	2300      	movs	r3, #0
 8007d6e:	617b      	str	r3, [r7, #20]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007d70:	68bb      	ldr	r3, [r7, #8]
 8007d72:	681a      	ldr	r2, [r3, #0]
                    (Command->CommandTarget)                |\
 8007d74:	68bb      	ldr	r3, [r7, #8]
 8007d76:	685b      	ldr	r3, [r3, #4]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007d78:	431a      	orrs	r2, r3
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007d7a:	68bb      	ldr	r3, [r7, #8]
 8007d7c:	689b      	ldr	r3, [r3, #8]
 8007d7e:	3b01      	subs	r3, #1
 8007d80:	015b      	lsls	r3, r3, #5
                    (Command->CommandTarget)                |\
 8007d82:	431a      	orrs	r2, r3
                    ((Command->ModeRegisterDefinition) << 9U)
 8007d84:	68bb      	ldr	r3, [r7, #8]
 8007d86:	68db      	ldr	r3, [r3, #12]
 8007d88:	025b      	lsls	r3, r3, #9
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007d8a:	4313      	orrs	r3, r2
 8007d8c:	613b      	str	r3, [r7, #16]
                    );
    
  Device->SDCMR = tmpr;
 8007d8e:	693a      	ldr	r2, [r7, #16]
 8007d90:	68fb      	ldr	r3, [r7, #12]
 8007d92:	611a      	str	r2, [r3, #16]

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007d94:	f7fa febc 	bl	8002b10 <HAL_GetTick>
 8007d98:	6178      	str	r0, [r7, #20]

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007d9a:	e010      	b.n	8007dbe <FMC_SDRAM_SendCommand+0x62>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8007d9c:	687b      	ldr	r3, [r7, #4]
 8007d9e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007da2:	d00c      	beq.n	8007dbe <FMC_SDRAM_SendCommand+0x62>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007da4:	687b      	ldr	r3, [r7, #4]
 8007da6:	2b00      	cmp	r3, #0
 8007da8:	d007      	beq.n	8007dba <FMC_SDRAM_SendCommand+0x5e>
 8007daa:	f7fa feb1 	bl	8002b10 <HAL_GetTick>
 8007dae:	4602      	mov	r2, r0
 8007db0:	697b      	ldr	r3, [r7, #20]
 8007db2:	1ad3      	subs	r3, r2, r3
 8007db4:	687a      	ldr	r2, [r7, #4]
 8007db6:	429a      	cmp	r2, r3
 8007db8:	d201      	bcs.n	8007dbe <FMC_SDRAM_SendCommand+0x62>
      {
        return HAL_TIMEOUT;
 8007dba:	2303      	movs	r3, #3
 8007dbc:	e006      	b.n	8007dcc <FMC_SDRAM_SendCommand+0x70>
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007dbe:	68fb      	ldr	r3, [r7, #12]
 8007dc0:	699b      	ldr	r3, [r3, #24]
 8007dc2:	f003 0320 	and.w	r3, r3, #32
 8007dc6:	2b20      	cmp	r3, #32
 8007dc8:	d0e8      	beq.n	8007d9c <FMC_SDRAM_SendCommand+0x40>
      }
    }
  }

  return HAL_OK;
 8007dca:	2300      	movs	r3, #0
}
 8007dcc:	4618      	mov	r0, r3
 8007dce:	3718      	adds	r7, #24
 8007dd0:	46bd      	mov	sp, r7
 8007dd2:	bd80      	pop	{r7, pc}

08007dd4 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance  
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 8007dd4:	b480      	push	{r7}
 8007dd6:	b083      	sub	sp, #12
 8007dd8:	af00      	add	r7, sp, #0
 8007dda:	6078      	str	r0, [r7, #4]
 8007ddc:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007dde:	687b      	ldr	r3, [r7, #4]
 8007de0:	695a      	ldr	r2, [r3, #20]
 8007de2:	683b      	ldr	r3, [r7, #0]
 8007de4:	005b      	lsls	r3, r3, #1
 8007de6:	431a      	orrs	r2, r3
 8007de8:	687b      	ldr	r3, [r7, #4]
 8007dea:	615a      	str	r2, [r3, #20]
  
  return HAL_OK;   
 8007dec:	2300      	movs	r3, #0
}
 8007dee:	4618      	mov	r0, r3
 8007df0:	370c      	adds	r7, #12
 8007df2:	46bd      	mov	sp, r7
 8007df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007df8:	4770      	bx	lr

08007dfa <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8007dfa:	b580      	push	{r7, lr}
 8007dfc:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8007dfe:	f003 fba7 	bl	800b550 <touchgfx_init>
}
 8007e02:	bf00      	nop
 8007e04:	bd80      	pop	{r7, pc}

08007e06 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8007e06:	b580      	push	{r7, lr}
 8007e08:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8007e0a:	f003 fbd1 	bl	800b5b0 <touchgfx_taskEntry>
}
 8007e0e:	bf00      	nop
 8007e10:	bd80      	pop	{r7, pc}
	...

08007e14 <_ZN8touchgfx12FontProviderD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~FontProvider()
 8007e14:	b480      	push	{r7}
 8007e16:	b083      	sub	sp, #12
 8007e18:	af00      	add	r7, sp, #0
 8007e1a:	6078      	str	r0, [r7, #4]
    {
 8007e1c:	4a04      	ldr	r2, [pc, #16]	; (8007e30 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8007e1e:	687b      	ldr	r3, [r7, #4]
 8007e20:	601a      	str	r2, [r3, #0]
    }
 8007e22:	687b      	ldr	r3, [r7, #4]
 8007e24:	4618      	mov	r0, r3
 8007e26:	370c      	adds	r7, #12
 8007e28:	46bd      	mov	sp, r7
 8007e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e2e:	4770      	bx	lr
 8007e30:	0801edd8 	.word	0x0801edd8

08007e34 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8007e34:	b580      	push	{r7, lr}
 8007e36:	b082      	sub	sp, #8
 8007e38:	af00      	add	r7, sp, #0
 8007e3a:	6078      	str	r0, [r7, #4]
    }
 8007e3c:	6878      	ldr	r0, [r7, #4]
 8007e3e:	f7ff ffe9 	bl	8007e14 <_ZN8touchgfx12FontProviderD1Ev>
 8007e42:	2104      	movs	r1, #4
 8007e44:	6878      	ldr	r0, [r7, #4]
 8007e46:	f013 fd72 	bl	801b92e <_ZdlPvj>
 8007e4a:	687b      	ldr	r3, [r7, #4]
 8007e4c:	4618      	mov	r0, r3
 8007e4e:	3708      	adds	r7, #8
 8007e50:	46bd      	mov	sp, r7
 8007e52:	bd80      	pop	{r7, pc}

08007e54 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8007e54:	b580      	push	{r7, lr}
 8007e56:	b082      	sub	sp, #8
 8007e58:	af00      	add	r7, sp, #0
 8007e5a:	6078      	str	r0, [r7, #4]
 8007e5c:	460b      	mov	r3, r1
 8007e5e:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8007e60:	887b      	ldrh	r3, [r7, #2]
 8007e62:	2b02      	cmp	r3, #2
 8007e64:	d010      	beq.n	8007e88 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 8007e66:	2b02      	cmp	r3, #2
 8007e68:	dc13      	bgt.n	8007e92 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 8007e6a:	2b00      	cmp	r3, #0
 8007e6c:	d002      	beq.n	8007e74 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 8007e6e:	2b01      	cmp	r3, #1
 8007e70:	d005      	beq.n	8007e7e <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 8007e72:	e00e      	b.n	8007e92 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8007e74:	f001 ff5c 	bl	8009d30 <_ZN17TypedTextDatabase8getFontsEv>
 8007e78:	4603      	mov	r3, r0
 8007e7a:	681b      	ldr	r3, [r3, #0]
 8007e7c:	e00a      	b.n	8007e94 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8007e7e:	f001 ff57 	bl	8009d30 <_ZN17TypedTextDatabase8getFontsEv>
 8007e82:	4603      	mov	r3, r0
 8007e84:	685b      	ldr	r3, [r3, #4]
 8007e86:	e005      	b.n	8007e94 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8007e88:	f001 ff52 	bl	8009d30 <_ZN17TypedTextDatabase8getFontsEv>
 8007e8c:	4603      	mov	r3, r0
 8007e8e:	689b      	ldr	r3, [r3, #8]
 8007e90:	e000      	b.n	8007e94 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 8007e92:	2300      	movs	r3, #0
    }
}
 8007e94:	4618      	mov	r0, r3
 8007e96:	3708      	adds	r7, #8
 8007e98:	46bd      	mov	sp, r7
 8007e9a:	bd80      	pop	{r7, pc}

08007e9c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8007e9c:	b580      	push	{r7, lr}
 8007e9e:	b082      	sub	sp, #8
 8007ea0:	af00      	add	r7, sp, #0
 8007ea2:	6078      	str	r0, [r7, #4]
 8007ea4:	4a05      	ldr	r2, [pc, #20]	; (8007ebc <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	601a      	str	r2, [r3, #0]
 8007eaa:	687b      	ldr	r3, [r7, #4]
 8007eac:	4618      	mov	r0, r3
 8007eae:	f7ff ffb1 	bl	8007e14 <_ZN8touchgfx12FontProviderD1Ev>
 8007eb2:	687b      	ldr	r3, [r7, #4]
 8007eb4:	4618      	mov	r0, r3
 8007eb6:	3708      	adds	r7, #8
 8007eb8:	46bd      	mov	sp, r7
 8007eba:	bd80      	pop	{r7, pc}
 8007ebc:	0801edc4 	.word	0x0801edc4

08007ec0 <_ZN23ApplicationFontProviderD0Ev>:
 8007ec0:	b580      	push	{r7, lr}
 8007ec2:	b082      	sub	sp, #8
 8007ec4:	af00      	add	r7, sp, #0
 8007ec6:	6078      	str	r0, [r7, #4]
 8007ec8:	6878      	ldr	r0, [r7, #4]
 8007eca:	f7ff ffe7 	bl	8007e9c <_ZN23ApplicationFontProviderD1Ev>
 8007ece:	2104      	movs	r1, #4
 8007ed0:	6878      	ldr	r0, [r7, #4]
 8007ed2:	f013 fd2c 	bl	801b92e <_ZdlPvj>
 8007ed6:	687b      	ldr	r3, [r7, #4]
 8007ed8:	4618      	mov	r0, r3
 8007eda:	3708      	adds	r7, #8
 8007edc:	46bd      	mov	sp, r7
 8007ede:	bd80      	pop	{r7, pc}

08007ee0 <_ZN8touchgfx4FontD1Ev>:
 *        It provides utility functions such as obtaining string width and font height.
 */
class Font
{
public:
    virtual ~Font() { }
 8007ee0:	b480      	push	{r7}
 8007ee2:	b083      	sub	sp, #12
 8007ee4:	af00      	add	r7, sp, #0
 8007ee6:	6078      	str	r0, [r7, #4]
 8007ee8:	4a04      	ldr	r2, [pc, #16]	; (8007efc <_ZN8touchgfx4FontD1Ev+0x1c>)
 8007eea:	687b      	ldr	r3, [r7, #4]
 8007eec:	601a      	str	r2, [r3, #0]
 8007eee:	687b      	ldr	r3, [r7, #4]
 8007ef0:	4618      	mov	r0, r3
 8007ef2:	370c      	adds	r7, #12
 8007ef4:	46bd      	mov	sp, r7
 8007ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007efa:	4770      	bx	lr
 8007efc:	08020348 	.word	0x08020348

08007f00 <_ZN8touchgfx4FontD0Ev>:
 8007f00:	b580      	push	{r7, lr}
 8007f02:	b082      	sub	sp, #8
 8007f04:	af00      	add	r7, sp, #0
 8007f06:	6078      	str	r0, [r7, #4]
 8007f08:	6878      	ldr	r0, [r7, #4]
 8007f0a:	f7ff ffe9 	bl	8007ee0 <_ZN8touchgfx4FontD1Ev>
 8007f0e:	2110      	movs	r1, #16
 8007f10:	6878      	ldr	r0, [r7, #4]
 8007f12:	f013 fd0c 	bl	801b92e <_ZdlPvj>
 8007f16:	687b      	ldr	r3, [r7, #4]
 8007f18:	4618      	mov	r0, r3
 8007f1a:	3708      	adds	r7, #8
 8007f1c:	46bd      	mov	sp, r7
 8007f1e:	bd80      	pop	{r7, pc}

08007f20 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getGlyph
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8007f20:	b590      	push	{r4, r7, lr}
 8007f22:	b087      	sub	sp, #28
 8007f24:	af00      	add	r7, sp, #0
 8007f26:	6078      	str	r0, [r7, #4]
 8007f28:	460b      	mov	r3, r1
 8007f2a:	807b      	strh	r3, [r7, #2]
    {
        const uint8_t* dummyPixelDataPointer = 0;
 8007f2c:	2300      	movs	r3, #0
 8007f2e:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8007f30:	2300      	movs	r3, #0
 8007f32:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8007f34:	687b      	ldr	r3, [r7, #4]
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	3308      	adds	r3, #8
 8007f3a:	681c      	ldr	r4, [r3, #0]
 8007f3c:	f107 030f 	add.w	r3, r7, #15
 8007f40:	f107 0210 	add.w	r2, r7, #16
 8007f44:	8879      	ldrh	r1, [r7, #2]
 8007f46:	6878      	ldr	r0, [r7, #4]
 8007f48:	47a0      	blx	r4
 8007f4a:	6178      	str	r0, [r7, #20]
        return glyph;
 8007f4c:	697b      	ldr	r3, [r7, #20]
    }
 8007f4e:	4618      	mov	r0, r3
 8007f50:	371c      	adds	r7, #28
 8007f52:	46bd      	mov	sp, r7
 8007f54:	bd90      	pop	{r4, r7, pc}

08007f56 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     *        character, use the glyph for the character returned by this function. If 0 (zero)
     *        is returned, there is no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8007f56:	b480      	push	{r7}
 8007f58:	b083      	sub	sp, #12
 8007f5a:	af00      	add	r7, sp, #0
 8007f5c:	6078      	str	r0, [r7, #4]
    {
        return falllbackCharacter;
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	895b      	ldrh	r3, [r3, #10]
    }
 8007f62:	4618      	mov	r0, r3
 8007f64:	370c      	adds	r7, #12
 8007f66:	46bd      	mov	sp, r7
 8007f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f6c:	4770      	bx	lr

08007f6e <_ZNK8touchgfx4Font15getEllipsisCharEv>:
    *        Gets ellipsis character for the given font. This is the character which is used
    *        when truncating long lines.
    *
    * @return The ellipsis character for the typography.
    */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8007f6e:	b480      	push	{r7}
 8007f70:	b083      	sub	sp, #12
 8007f72:	af00      	add	r7, sp, #0
 8007f74:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8007f76:	687b      	ldr	r3, [r7, #4]
 8007f78:	899b      	ldrh	r3, [r3, #12]
    }
 8007f7a:	4618      	mov	r0, r3
 8007f7c:	370c      	adds	r7, #12
 8007f7e:	46bd      	mov	sp, r7
 8007f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f84:	4770      	bx	lr

08007f86 <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     *
     * @return The height in pixels of this font.
     */
    virtual uint16_t getFontHeight() const
 8007f86:	b480      	push	{r7}
 8007f88:	b083      	sub	sp, #12
 8007f8a:	af00      	add	r7, sp, #0
 8007f8c:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	889b      	ldrh	r3, [r3, #4]
    }
 8007f92:	4618      	mov	r0, r3
 8007f94:	370c      	adds	r7, #12
 8007f96:	46bd      	mov	sp, r7
 8007f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f9c:	4770      	bx	lr

08007f9e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *        into account that certain characters (eg 'g') have pixels below the baseline,
     *        thus making the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    virtual uint16_t getMinimumTextHeight() const
 8007f9e:	b480      	push	{r7}
 8007fa0:	b083      	sub	sp, #12
 8007fa2:	af00      	add	r7, sp, #0
 8007fa4:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 8007fa6:	687b      	ldr	r3, [r7, #4]
 8007fa8:	889a      	ldrh	r2, [r3, #4]
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	799b      	ldrb	r3, [r3, #6]
 8007fae:	b29b      	uxth	r3, r3
 8007fb0:	4413      	add	r3, r2
 8007fb2:	b29b      	uxth	r3, r3
    }
 8007fb4:	4618      	mov	r0, r3
 8007fb6:	370c      	adds	r7, #12
 8007fb8:	46bd      	mov	sp, r7
 8007fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fbe:	4770      	bx	lr

08007fc0 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     *        Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    virtual uint8_t getBitsPerPixel() const
 8007fc0:	b480      	push	{r7}
 8007fc2:	b083      	sub	sp, #12
 8007fc4:	af00      	add	r7, sp, #0
 8007fc6:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8007fc8:	687b      	ldr	r3, [r7, #4]
 8007fca:	79db      	ldrb	r3, [r3, #7]
 8007fcc:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8007fd0:	b2db      	uxtb	r3, r3
    }
 8007fd2:	4618      	mov	r0, r3
 8007fd4:	370c      	adds	r7, #12
 8007fd6:	46bd      	mov	sp, r7
 8007fd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fdc:	4770      	bx	lr

08007fde <_ZNK8touchgfx4Font15getDataFormatA4Ev>:
     *
     *        Are the glyphs saved using ST A4 format.
     *
     * @return True if the font is stored using A4 format, false otherwise.
     */
    virtual uint8_t getDataFormatA4() const
 8007fde:	b480      	push	{r7}
 8007fe0:	b083      	sub	sp, #12
 8007fe2:	af00      	add	r7, sp, #0
 8007fe4:	6078      	str	r0, [r7, #4]
    {
        return a4;
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	79db      	ldrb	r3, [r3, #7]
 8007fea:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8007fee:	b2db      	uxtb	r3, r3
    }
 8007ff0:	4618      	mov	r0, r3
 8007ff2:	370c      	adds	r7, #12
 8007ff4:	46bd      	mov	sp, r7
 8007ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ffa:	4770      	bx	lr

08007ffc <_ZN8touchgfx9ConstFontD1Ev>:
 * @note Pure virtual class. Create an application-
 *          specific implementation of getPixelData.
 *
 * @see Font
 */
class ConstFont : public Font
 8007ffc:	b580      	push	{r7, lr}
 8007ffe:	b082      	sub	sp, #8
 8008000:	af00      	add	r7, sp, #0
 8008002:	6078      	str	r0, [r7, #4]
 8008004:	4a05      	ldr	r2, [pc, #20]	; (800801c <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8008006:	687b      	ldr	r3, [r7, #4]
 8008008:	601a      	str	r2, [r3, #0]
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	4618      	mov	r0, r3
 800800e:	f7ff ff67 	bl	8007ee0 <_ZN8touchgfx4FontD1Ev>
 8008012:	687b      	ldr	r3, [r7, #4]
 8008014:	4618      	mov	r0, r3
 8008016:	3708      	adds	r7, #8
 8008018:	46bd      	mov	sp, r7
 800801a:	bd80      	pop	{r7, pc}
 800801c:	08020400 	.word	0x08020400

08008020 <_ZN8touchgfx9ConstFontD0Ev>:
 8008020:	b580      	push	{r7, lr}
 8008022:	b082      	sub	sp, #8
 8008024:	af00      	add	r7, sp, #0
 8008026:	6078      	str	r0, [r7, #4]
 8008028:	6878      	ldr	r0, [r7, #4]
 800802a:	f7ff ffe7 	bl	8007ffc <_ZN8touchgfx9ConstFontD1Ev>
 800802e:	2118      	movs	r1, #24
 8008030:	6878      	ldr	r0, [r7, #4]
 8008032:	f013 fc7c 	bl	801b92e <_ZdlPvj>
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	4618      	mov	r0, r3
 800803a:	3708      	adds	r7, #8
 800803c:	46bd      	mov	sp, r7
 800803e:	bd80      	pop	{r7, pc}

08008040 <_ZN8touchgfx13GeneratedFontD1Ev>:
 *        An GeneratedFont has both glyph table and glyph data placed in a flash which
 *        supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 8008040:	b580      	push	{r7, lr}
 8008042:	b082      	sub	sp, #8
 8008044:	af00      	add	r7, sp, #0
 8008046:	6078      	str	r0, [r7, #4]
 8008048:	4a05      	ldr	r2, [pc, #20]	; (8008060 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800804a:	687b      	ldr	r3, [r7, #4]
 800804c:	601a      	str	r2, [r3, #0]
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	4618      	mov	r0, r3
 8008052:	f7ff ffd3 	bl	8007ffc <_ZN8touchgfx9ConstFontD1Ev>
 8008056:	687b      	ldr	r3, [r7, #4]
 8008058:	4618      	mov	r0, r3
 800805a:	3708      	adds	r7, #8
 800805c:	46bd      	mov	sp, r7
 800805e:	bd80      	pop	{r7, pc}
 8008060:	0801edec 	.word	0x0801edec

08008064 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8008064:	b580      	push	{r7, lr}
 8008066:	b082      	sub	sp, #8
 8008068:	af00      	add	r7, sp, #0
 800806a:	6078      	str	r0, [r7, #4]
 800806c:	6878      	ldr	r0, [r7, #4]
 800806e:	f7ff ffe7 	bl	8008040 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008072:	2124      	movs	r1, #36	; 0x24
 8008074:	6878      	ldr	r0, [r7, #4]
 8008076:	f013 fc5a 	bl	801b92e <_ZdlPvj>
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	4618      	mov	r0, r3
 800807e:	3708      	adds	r7, #8
 8008080:	46bd      	mov	sp, r7
 8008082:	bd80      	pop	{r7, pc}

08008084 <_ZNK8touchgfx9TypedText7getFontEv>:
     *
     *        Gets the font associated with this TypedText.
     *
     * @return The font.
     */
    const Font* getFont() const
 8008084:	b580      	push	{r7, lr}
 8008086:	b082      	sub	sp, #8
 8008088:	af00      	add	r7, sp, #0
 800808a:	6078      	str	r0, [r7, #4]
    {
        assertValid();
 800808c:	6878      	ldr	r0, [r7, #4]
 800808e:	f000 f82d 	bl	80080ec <_ZNK8touchgfx9TypedText11assertValidEv>
        return fonts[typedTexts[typedTextId].fontIdx];
 8008092:	4b08      	ldr	r3, [pc, #32]	; (80080b4 <_ZNK8touchgfx9TypedText7getFontEv+0x30>)
 8008094:	681a      	ldr	r2, [r3, #0]
 8008096:	4b08      	ldr	r3, [pc, #32]	; (80080b8 <_ZNK8touchgfx9TypedText7getFontEv+0x34>)
 8008098:	6819      	ldr	r1, [r3, #0]
 800809a:	687b      	ldr	r3, [r7, #4]
 800809c:	881b      	ldrh	r3, [r3, #0]
 800809e:	005b      	lsls	r3, r3, #1
 80080a0:	440b      	add	r3, r1
 80080a2:	781b      	ldrb	r3, [r3, #0]
 80080a4:	009b      	lsls	r3, r3, #2
 80080a6:	4413      	add	r3, r2
 80080a8:	681b      	ldr	r3, [r3, #0]
    }
 80080aa:	4618      	mov	r0, r3
 80080ac:	3708      	adds	r7, #8
 80080ae:	46bd      	mov	sp, r7
 80080b0:	bd80      	pop	{r7, pc}
 80080b2:	bf00      	nop
 80080b4:	20001818 	.word	0x20001818
 80080b8:	20001810 	.word	0x20001810

080080bc <_ZNK8touchgfx9TypedText16getTextDirectionEv>:
     *
     *        Gets the text direction associated with this TypedText.
     *
     * @return The alignment.
     */
    TextDirection getTextDirection() const
 80080bc:	b580      	push	{r7, lr}
 80080be:	b082      	sub	sp, #8
 80080c0:	af00      	add	r7, sp, #0
 80080c2:	6078      	str	r0, [r7, #4]
    {
        assertValid();
 80080c4:	6878      	ldr	r0, [r7, #4]
 80080c6:	f000 f811 	bl	80080ec <_ZNK8touchgfx9TypedText11assertValidEv>
        return typedTexts[typedTextId].direction;
 80080ca:	4b07      	ldr	r3, [pc, #28]	; (80080e8 <_ZNK8touchgfx9TypedText16getTextDirectionEv+0x2c>)
 80080cc:	681a      	ldr	r2, [r3, #0]
 80080ce:	687b      	ldr	r3, [r7, #4]
 80080d0:	881b      	ldrh	r3, [r3, #0]
 80080d2:	005b      	lsls	r3, r3, #1
 80080d4:	4413      	add	r3, r2
 80080d6:	785b      	ldrb	r3, [r3, #1]
 80080d8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80080dc:	b2db      	uxtb	r3, r3
    }
 80080de:	4618      	mov	r0, r3
 80080e0:	3708      	adds	r7, #8
 80080e2:	46bd      	mov	sp, r7
 80080e4:	bd80      	pop	{r7, pc}
 80080e6:	bf00      	nop
 80080e8:	20001810 	.word	0x20001810

080080ec <_ZNK8touchgfx9TypedText11assertValidEv>:
    {
        texts = t;
    }

private:
    void assertValid() const
 80080ec:	b580      	push	{r7, lr}
 80080ee:	b082      	sub	sp, #8
 80080f0:	af00      	add	r7, sp, #0
 80080f2:	6078      	str	r0, [r7, #4]
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80080f4:	4b0c      	ldr	r3, [pc, #48]	; (8008128 <_ZNK8touchgfx9TypedText11assertValidEv+0x3c>)
 80080f6:	681b      	ldr	r3, [r3, #0]
 80080f8:	2b00      	cmp	r3, #0
 80080fa:	d105      	bne.n	8008108 <_ZNK8touchgfx9TypedText11assertValidEv+0x1c>
 80080fc:	4b0b      	ldr	r3, [pc, #44]	; (800812c <_ZNK8touchgfx9TypedText11assertValidEv+0x40>)
 80080fe:	4a0c      	ldr	r2, [pc, #48]	; (8008130 <_ZNK8touchgfx9TypedText11assertValidEv+0x44>)
 8008100:	21de      	movs	r1, #222	; 0xde
 8008102:	480c      	ldr	r0, [pc, #48]	; (8008134 <_ZNK8touchgfx9TypedText11assertValidEv+0x48>)
 8008104:	f013 fc42 	bl	801b98c <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8008108:	687b      	ldr	r3, [r7, #4]
 800810a:	881a      	ldrh	r2, [r3, #0]
 800810c:	4b0a      	ldr	r3, [pc, #40]	; (8008138 <_ZNK8touchgfx9TypedText11assertValidEv+0x4c>)
 800810e:	881b      	ldrh	r3, [r3, #0]
 8008110:	429a      	cmp	r2, r3
 8008112:	d305      	bcc.n	8008120 <_ZNK8touchgfx9TypedText11assertValidEv+0x34>
 8008114:	4b09      	ldr	r3, [pc, #36]	; (800813c <_ZNK8touchgfx9TypedText11assertValidEv+0x50>)
 8008116:	4a06      	ldr	r2, [pc, #24]	; (8008130 <_ZNK8touchgfx9TypedText11assertValidEv+0x44>)
 8008118:	21df      	movs	r1, #223	; 0xdf
 800811a:	4806      	ldr	r0, [pc, #24]	; (8008134 <_ZNK8touchgfx9TypedText11assertValidEv+0x48>)
 800811c:	f013 fc36 	bl	801b98c <__assert_func>
    }
 8008120:	bf00      	nop
 8008122:	3708      	adds	r7, #8
 8008124:	46bd      	mov	sp, r7
 8008126:	bd80      	pop	{r7, pc}
 8008128:	20001810 	.word	0x20001810
 800812c:	0801e6ac 	.word	0x0801e6ac
 8008130:	0801e6f0 	.word	0x0801e6f0
 8008134:	0801e720 	.word	0x0801e720
 8008138:	20001814 	.word	0x20001814
 800813c:	0801e764 	.word	0x0801e764

08008140 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>:
    uint16_t kerningTablePos() const
 8008140:	b480      	push	{r7}
 8008142:	b083      	sub	sp, #12
 8008144:	af00      	add	r7, sp, #0
 8008146:	6078      	str	r0, [r7, #4]
        return (((uint16_t)(flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10)) << 8) | (uint16_t)_kerningTablePos;
 8008148:	687b      	ldr	r3, [r7, #4]
 800814a:	7b5b      	ldrb	r3, [r3, #13]
 800814c:	021b      	lsls	r3, r3, #8
 800814e:	b21b      	sxth	r3, r3
 8008150:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008154:	b21a      	sxth	r2, r3
 8008156:	687b      	ldr	r3, [r7, #4]
 8008158:	7adb      	ldrb	r3, [r3, #11]
 800815a:	b21b      	sxth	r3, r3
 800815c:	4313      	orrs	r3, r2
 800815e:	b21b      	sxth	r3, r3
 8008160:	b29b      	uxth	r3, r3
    }
 8008162:	4618      	mov	r0, r3
 8008164:	370c      	adds	r7, #12
 8008166:	46bd      	mov	sp, r7
 8008168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800816c:	4770      	bx	lr

0800816e <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     *
     *        Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 800816e:	b480      	push	{r7}
 8008170:	b083      	sub	sp, #12
 8008172:	af00      	add	r7, sp, #0
 8008174:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8008176:	687b      	ldr	r3, [r7, #4]
 8008178:	6a1b      	ldr	r3, [r3, #32]
    }
 800817a:	4618      	mov	r0, r3
 800817c:	370c      	adds	r7, #12
 800817e:	46bd      	mov	sp, r7
 8008180:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008184:	4770      	bx	lr
	...

08008188 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t dataFormatA4, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8008188:	b580      	push	{r7, lr}
 800818a:	b08c      	sub	sp, #48	; 0x30
 800818c:	af08      	add	r7, sp, #32
 800818e:	60f8      	str	r0, [r7, #12]
 8008190:	60b9      	str	r1, [r7, #8]
 8008192:	4611      	mov	r1, r2
 8008194:	461a      	mov	r2, r3
 8008196:	460b      	mov	r3, r1
 8008198:	80fb      	strh	r3, [r7, #6]
 800819a:	4613      	mov	r3, r2
 800819c:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, dataFormatA4, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
 800819e:	68f8      	ldr	r0, [r7, #12]
 80081a0:	88b9      	ldrh	r1, [r7, #4]
 80081a2:	88fa      	ldrh	r2, [r7, #6]
 80081a4:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 80081a6:	9306      	str	r3, [sp, #24]
 80081a8:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 80081aa:	9305      	str	r3, [sp, #20]
 80081ac:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80081b0:	9304      	str	r3, [sp, #16]
 80081b2:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80081b6:	9303      	str	r3, [sp, #12]
 80081b8:	f897 3020 	ldrb.w	r3, [r7, #32]
 80081bc:	9302      	str	r3, [sp, #8]
 80081be:	7f3b      	ldrb	r3, [r7, #28]
 80081c0:	9301      	str	r3, [sp, #4]
 80081c2:	7e3b      	ldrb	r3, [r7, #24]
 80081c4:	9300      	str	r3, [sp, #0]
 80081c6:	460b      	mov	r3, r1
 80081c8:	68b9      	ldr	r1, [r7, #8]
 80081ca:	f006 fe45 	bl	800ee58 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80081ce:	4a08      	ldr	r2, [pc, #32]	; (80081f0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
 80081d0:	68fb      	ldr	r3, [r7, #12]
 80081d2:	601a      	str	r2, [r3, #0]
 80081d4:	68fb      	ldr	r3, [r7, #12]
 80081d6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80081d8:	619a      	str	r2, [r3, #24]
 80081da:	68fb      	ldr	r3, [r7, #12]
 80081dc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80081de:	61da      	str	r2, [r3, #28]
 80081e0:	68fb      	ldr	r3, [r7, #12]
 80081e2:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80081e4:	621a      	str	r2, [r3, #32]
{
}
 80081e6:	68fb      	ldr	r3, [r7, #12]
 80081e8:	4618      	mov	r0, r3
 80081ea:	3710      	adds	r7, #16
 80081ec:	46bd      	mov	sp, r7
 80081ee:	bd80      	pop	{r7, pc}
 80081f0:	0801edec 	.word	0x0801edec

080081f4 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80081f4:	b480      	push	{r7}
 80081f6:	b085      	sub	sp, #20
 80081f8:	af00      	add	r7, sp, #0
 80081fa:	6078      	str	r0, [r7, #4]
 80081fc:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	699b      	ldr	r3, [r3, #24]
 8008202:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8008204:	683b      	ldr	r3, [r7, #0]
 8008206:	889b      	ldrh	r3, [r3, #4]
 8008208:	0adb      	lsrs	r3, r3, #11
 800820a:	b29b      	uxth	r3, r3
 800820c:	009b      	lsls	r3, r3, #2
 800820e:	68fa      	ldr	r2, [r7, #12]
 8008210:	4413      	add	r3, r2
 8008212:	681a      	ldr	r2, [r3, #0]
 8008214:	683b      	ldr	r3, [r7, #0]
 8008216:	681b      	ldr	r3, [r3, #0]
 8008218:	4413      	add	r3, r2
}
 800821a:	4618      	mov	r0, r3
 800821c:	3714      	adds	r7, #20
 800821e:	46bd      	mov	sp, r7
 8008220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008224:	4770      	bx	lr

08008226 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8008226:	b580      	push	{r7, lr}
 8008228:	b086      	sub	sp, #24
 800822a:	af00      	add	r7, sp, #0
 800822c:	60f8      	str	r0, [r7, #12]
 800822e:	460b      	mov	r3, r1
 8008230:	607a      	str	r2, [r7, #4]
 8008232:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8008234:	687b      	ldr	r3, [r7, #4]
 8008236:	2b00      	cmp	r3, #0
 8008238:	d003      	beq.n	8008242 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800823a:	687b      	ldr	r3, [r7, #4]
 800823c:	7b1b      	ldrb	r3, [r3, #12]
 800823e:	2b00      	cmp	r3, #0
 8008240:	d101      	bne.n	8008246 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8008242:	2300      	movs	r3, #0
 8008244:	e023      	b.n	800828e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    }

    uint16_t kerningTablePos = glyph->kerningTablePos();
 8008246:	6878      	ldr	r0, [r7, #4]
 8008248:	f7ff ff7a 	bl	8008140 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>
 800824c:	4603      	mov	r3, r0
 800824e:	82bb      	strh	r3, [r7, #20]
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8008250:	8abb      	ldrh	r3, [r7, #20]
 8008252:	82fb      	strh	r3, [r7, #22]
 8008254:	8afa      	ldrh	r2, [r7, #22]
 8008256:	8abb      	ldrh	r3, [r7, #20]
 8008258:	6879      	ldr	r1, [r7, #4]
 800825a:	7b09      	ldrb	r1, [r1, #12]
 800825c:	440b      	add	r3, r1
 800825e:	429a      	cmp	r2, r3
 8008260:	da14      	bge.n	800828c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
    {
        if (prevChar == kerningData[i].unicodePrevChar)
 8008262:	68fb      	ldr	r3, [r7, #12]
 8008264:	69da      	ldr	r2, [r3, #28]
 8008266:	8afb      	ldrh	r3, [r7, #22]
 8008268:	009b      	lsls	r3, r3, #2
 800826a:	4413      	add	r3, r2
 800826c:	881b      	ldrh	r3, [r3, #0]
 800826e:	897a      	ldrh	r2, [r7, #10]
 8008270:	429a      	cmp	r2, r3
 8008272:	d107      	bne.n	8008284 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x5e>
        {
            return kerningData[i].distance;
 8008274:	68fb      	ldr	r3, [r7, #12]
 8008276:	69da      	ldr	r2, [r3, #28]
 8008278:	8afb      	ldrh	r3, [r7, #22]
 800827a:	009b      	lsls	r3, r3, #2
 800827c:	4413      	add	r3, r2
 800827e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8008282:	e004      	b.n	800828e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8008284:	8afb      	ldrh	r3, [r7, #22]
 8008286:	3301      	adds	r3, #1
 8008288:	82fb      	strh	r3, [r7, #22]
 800828a:	e7e3      	b.n	8008254 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
        }
    }
    return 0;
 800828c:	2300      	movs	r3, #0
}
 800828e:	4618      	mov	r0, r3
 8008290:	3718      	adds	r7, #24
 8008292:	46bd      	mov	sp, r7
 8008294:	bd80      	pop	{r7, pc}
	...

08008298 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_10_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 20, 10, 2, 4, 1, 1, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8008298:	b580      	push	{r7, lr}
 800829a:	af00      	add	r7, sp, #0
 800829c:	4801      	ldr	r0, [pc, #4]	; (80082a4 <__tcf_0+0xc>)
 800829e:	f7ff fecf 	bl	8008040 <_ZN8touchgfx13GeneratedFontD1Ev>
 80082a2:	bd80      	pop	{r7, pc}
 80082a4:	20000618 	.word	0x20000618

080082a8 <_Z23getFont_verdana_10_4bppv>:
{
 80082a8:	b580      	push	{r7, lr}
 80082aa:	b08a      	sub	sp, #40	; 0x28
 80082ac:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 20, 10, 2, 4, 1, 1, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 80082ae:	4b1e      	ldr	r3, [pc, #120]	; (8008328 <_Z23getFont_verdana_10_4bppv+0x80>)
 80082b0:	781b      	ldrb	r3, [r3, #0]
 80082b2:	f3bf 8f5b 	dmb	ish
 80082b6:	b2db      	uxtb	r3, r3
 80082b8:	f003 0301 	and.w	r3, r3, #1
 80082bc:	2b00      	cmp	r3, #0
 80082be:	bf0c      	ite	eq
 80082c0:	2301      	moveq	r3, #1
 80082c2:	2300      	movne	r3, #0
 80082c4:	b2db      	uxtb	r3, r3
 80082c6:	2b00      	cmp	r3, #0
 80082c8:	d02a      	beq.n	8008320 <_Z23getFont_verdana_10_4bppv+0x78>
 80082ca:	4817      	ldr	r0, [pc, #92]	; (8008328 <_Z23getFont_verdana_10_4bppv+0x80>)
 80082cc:	f013 fb31 	bl	801b932 <__cxa_guard_acquire>
 80082d0:	4603      	mov	r3, r0
 80082d2:	2b00      	cmp	r3, #0
 80082d4:	bf14      	ite	ne
 80082d6:	2301      	movne	r3, #1
 80082d8:	2300      	moveq	r3, #0
 80082da:	b2db      	uxtb	r3, r3
 80082dc:	2b00      	cmp	r3, #0
 80082de:	d01f      	beq.n	8008320 <_Z23getFont_verdana_10_4bppv+0x78>
 80082e0:	2300      	movs	r3, #0
 80082e2:	9309      	str	r3, [sp, #36]	; 0x24
 80082e4:	2300      	movs	r3, #0
 80082e6:	9308      	str	r3, [sp, #32]
 80082e8:	233f      	movs	r3, #63	; 0x3f
 80082ea:	9307      	str	r3, [sp, #28]
 80082ec:	4b0f      	ldr	r3, [pc, #60]	; (800832c <_Z23getFont_verdana_10_4bppv+0x84>)
 80082ee:	9306      	str	r3, [sp, #24]
 80082f0:	4b0f      	ldr	r3, [pc, #60]	; (8008330 <_Z23getFont_verdana_10_4bppv+0x88>)
 80082f2:	9305      	str	r3, [sp, #20]
 80082f4:	2300      	movs	r3, #0
 80082f6:	9304      	str	r3, [sp, #16]
 80082f8:	2301      	movs	r3, #1
 80082fa:	9303      	str	r3, [sp, #12]
 80082fc:	2301      	movs	r3, #1
 80082fe:	9302      	str	r3, [sp, #8]
 8008300:	2304      	movs	r3, #4
 8008302:	9301      	str	r3, [sp, #4]
 8008304:	2302      	movs	r3, #2
 8008306:	9300      	str	r3, [sp, #0]
 8008308:	230a      	movs	r3, #10
 800830a:	2214      	movs	r2, #20
 800830c:	4909      	ldr	r1, [pc, #36]	; (8008334 <_Z23getFont_verdana_10_4bppv+0x8c>)
 800830e:	480a      	ldr	r0, [pc, #40]	; (8008338 <_Z23getFont_verdana_10_4bppv+0x90>)
 8008310:	f7ff ff3a 	bl	8008188 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8008314:	4809      	ldr	r0, [pc, #36]	; (800833c <_Z23getFont_verdana_10_4bppv+0x94>)
 8008316:	f013 fb57 	bl	801b9c8 <atexit>
 800831a:	4803      	ldr	r0, [pc, #12]	; (8008328 <_Z23getFont_verdana_10_4bppv+0x80>)
 800831c:	f013 fb15 	bl	801b94a <__cxa_guard_release>
    return verdana_10_4bpp;
 8008320:	4b05      	ldr	r3, [pc, #20]	; (8008338 <_Z23getFont_verdana_10_4bppv+0x90>)
}
 8008322:	4618      	mov	r0, r3
 8008324:	46bd      	mov	sp, r7
 8008326:	bd80      	pop	{r7, pc}
 8008328:	2000063c 	.word	0x2000063c
 800832c:	0802282c 	.word	0x0802282c
 8008330:	0801ee38 	.word	0x0801ee38
 8008334:	08022870 	.word	0x08022870
 8008338:	20000618 	.word	0x20000618
 800833c:	08008299 	.word	0x08008299

08008340 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_20_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 2, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8008340:	b580      	push	{r7, lr}
 8008342:	af00      	add	r7, sp, #0
 8008344:	4801      	ldr	r0, [pc, #4]	; (800834c <__tcf_0+0xc>)
 8008346:	f7ff fe7b 	bl	8008040 <_ZN8touchgfx13GeneratedFontD1Ev>
 800834a:	bd80      	pop	{r7, pc}
 800834c:	20000640 	.word	0x20000640

08008350 <_Z23getFont_verdana_20_4bppv>:
{
 8008350:	b580      	push	{r7, lr}
 8008352:	b08a      	sub	sp, #40	; 0x28
 8008354:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 2, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8008356:	4b1e      	ldr	r3, [pc, #120]	; (80083d0 <_Z23getFont_verdana_20_4bppv+0x80>)
 8008358:	781b      	ldrb	r3, [r3, #0]
 800835a:	f3bf 8f5b 	dmb	ish
 800835e:	b2db      	uxtb	r3, r3
 8008360:	f003 0301 	and.w	r3, r3, #1
 8008364:	2b00      	cmp	r3, #0
 8008366:	bf0c      	ite	eq
 8008368:	2301      	moveq	r3, #1
 800836a:	2300      	movne	r3, #0
 800836c:	b2db      	uxtb	r3, r3
 800836e:	2b00      	cmp	r3, #0
 8008370:	d02a      	beq.n	80083c8 <_Z23getFont_verdana_20_4bppv+0x78>
 8008372:	4817      	ldr	r0, [pc, #92]	; (80083d0 <_Z23getFont_verdana_20_4bppv+0x80>)
 8008374:	f013 fadd 	bl	801b932 <__cxa_guard_acquire>
 8008378:	4603      	mov	r3, r0
 800837a:	2b00      	cmp	r3, #0
 800837c:	bf14      	ite	ne
 800837e:	2301      	movne	r3, #1
 8008380:	2300      	moveq	r3, #0
 8008382:	b2db      	uxtb	r3, r3
 8008384:	2b00      	cmp	r3, #0
 8008386:	d01f      	beq.n	80083c8 <_Z23getFont_verdana_20_4bppv+0x78>
 8008388:	2300      	movs	r3, #0
 800838a:	9309      	str	r3, [sp, #36]	; 0x24
 800838c:	2300      	movs	r3, #0
 800838e:	9308      	str	r3, [sp, #32]
 8008390:	233f      	movs	r3, #63	; 0x3f
 8008392:	9307      	str	r3, [sp, #28]
 8008394:	4b0f      	ldr	r3, [pc, #60]	; (80083d4 <_Z23getFont_verdana_20_4bppv+0x84>)
 8008396:	9306      	str	r3, [sp, #24]
 8008398:	4b0f      	ldr	r3, [pc, #60]	; (80083d8 <_Z23getFont_verdana_20_4bppv+0x88>)
 800839a:	9305      	str	r3, [sp, #20]
 800839c:	2302      	movs	r3, #2
 800839e:	9304      	str	r3, [sp, #16]
 80083a0:	2300      	movs	r3, #0
 80083a2:	9303      	str	r3, [sp, #12]
 80083a4:	2301      	movs	r3, #1
 80083a6:	9302      	str	r3, [sp, #8]
 80083a8:	2304      	movs	r3, #4
 80083aa:	9301      	str	r3, [sp, #4]
 80083ac:	2304      	movs	r3, #4
 80083ae:	9300      	str	r3, [sp, #0]
 80083b0:	2314      	movs	r3, #20
 80083b2:	221e      	movs	r2, #30
 80083b4:	4909      	ldr	r1, [pc, #36]	; (80083dc <_Z23getFont_verdana_20_4bppv+0x8c>)
 80083b6:	480a      	ldr	r0, [pc, #40]	; (80083e0 <_Z23getFont_verdana_20_4bppv+0x90>)
 80083b8:	f7ff fee6 	bl	8008188 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80083bc:	4809      	ldr	r0, [pc, #36]	; (80083e4 <_Z23getFont_verdana_20_4bppv+0x94>)
 80083be:	f013 fb03 	bl	801b9c8 <atexit>
 80083c2:	4803      	ldr	r0, [pc, #12]	; (80083d0 <_Z23getFont_verdana_20_4bppv+0x80>)
 80083c4:	f013 fac1 	bl	801b94a <__cxa_guard_release>
    return verdana_20_4bpp;
 80083c8:	4b05      	ldr	r3, [pc, #20]	; (80083e0 <_Z23getFont_verdana_20_4bppv+0x90>)
}
 80083ca:	4618      	mov	r0, r3
 80083cc:	46bd      	mov	sp, r7
 80083ce:	bd80      	pop	{r7, pc}
 80083d0:	20000664 	.word	0x20000664
 80083d4:	08022830 	.word	0x08022830
 80083d8:	0801ee3c 	.word	0x0801ee3c
 80083dc:	08022988 	.word	0x08022988
 80083e0:	20000640 	.word	0x20000640
 80083e4:	08008341 	.word	0x08008341

080083e8 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_40_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80083e8:	b580      	push	{r7, lr}
 80083ea:	af00      	add	r7, sp, #0
 80083ec:	4801      	ldr	r0, [pc, #4]	; (80083f4 <__tcf_0+0xc>)
 80083ee:	f7ff fe27 	bl	8008040 <_ZN8touchgfx13GeneratedFontD1Ev>
 80083f2:	bd80      	pop	{r7, pc}
 80083f4:	20000668 	.word	0x20000668

080083f8 <_Z23getFont_verdana_40_4bppv>:
{
 80083f8:	b580      	push	{r7, lr}
 80083fa:	b08a      	sub	sp, #40	; 0x28
 80083fc:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80083fe:	4b1e      	ldr	r3, [pc, #120]	; (8008478 <_Z23getFont_verdana_40_4bppv+0x80>)
 8008400:	781b      	ldrb	r3, [r3, #0]
 8008402:	f3bf 8f5b 	dmb	ish
 8008406:	b2db      	uxtb	r3, r3
 8008408:	f003 0301 	and.w	r3, r3, #1
 800840c:	2b00      	cmp	r3, #0
 800840e:	bf0c      	ite	eq
 8008410:	2301      	moveq	r3, #1
 8008412:	2300      	movne	r3, #0
 8008414:	b2db      	uxtb	r3, r3
 8008416:	2b00      	cmp	r3, #0
 8008418:	d02a      	beq.n	8008470 <_Z23getFont_verdana_40_4bppv+0x78>
 800841a:	4817      	ldr	r0, [pc, #92]	; (8008478 <_Z23getFont_verdana_40_4bppv+0x80>)
 800841c:	f013 fa89 	bl	801b932 <__cxa_guard_acquire>
 8008420:	4603      	mov	r3, r0
 8008422:	2b00      	cmp	r3, #0
 8008424:	bf14      	ite	ne
 8008426:	2301      	movne	r3, #1
 8008428:	2300      	moveq	r3, #0
 800842a:	b2db      	uxtb	r3, r3
 800842c:	2b00      	cmp	r3, #0
 800842e:	d01f      	beq.n	8008470 <_Z23getFont_verdana_40_4bppv+0x78>
 8008430:	2300      	movs	r3, #0
 8008432:	9309      	str	r3, [sp, #36]	; 0x24
 8008434:	2300      	movs	r3, #0
 8008436:	9308      	str	r3, [sp, #32]
 8008438:	233f      	movs	r3, #63	; 0x3f
 800843a:	9307      	str	r3, [sp, #28]
 800843c:	4b0f      	ldr	r3, [pc, #60]	; (800847c <_Z23getFont_verdana_40_4bppv+0x84>)
 800843e:	9306      	str	r3, [sp, #24]
 8008440:	4b0f      	ldr	r3, [pc, #60]	; (8008480 <_Z23getFont_verdana_40_4bppv+0x88>)
 8008442:	9305      	str	r3, [sp, #20]
 8008444:	2300      	movs	r3, #0
 8008446:	9304      	str	r3, [sp, #16]
 8008448:	2300      	movs	r3, #0
 800844a:	9303      	str	r3, [sp, #12]
 800844c:	2301      	movs	r3, #1
 800844e:	9302      	str	r3, [sp, #8]
 8008450:	2304      	movs	r3, #4
 8008452:	9301      	str	r3, [sp, #4]
 8008454:	2300      	movs	r3, #0
 8008456:	9300      	str	r3, [sp, #0]
 8008458:	2328      	movs	r3, #40	; 0x28
 800845a:	2201      	movs	r2, #1
 800845c:	4909      	ldr	r1, [pc, #36]	; (8008484 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800845e:	480a      	ldr	r0, [pc, #40]	; (8008488 <_Z23getFont_verdana_40_4bppv+0x90>)
 8008460:	f7ff fe92 	bl	8008188 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8008464:	4809      	ldr	r0, [pc, #36]	; (800848c <_Z23getFont_verdana_40_4bppv+0x94>)
 8008466:	f013 faaf 	bl	801b9c8 <atexit>
 800846a:	4803      	ldr	r0, [pc, #12]	; (8008478 <_Z23getFont_verdana_40_4bppv+0x80>)
 800846c:	f013 fa6d 	bl	801b94a <__cxa_guard_release>
    return verdana_40_4bpp;
 8008470:	4b05      	ldr	r3, [pc, #20]	; (8008488 <_Z23getFont_verdana_40_4bppv+0x90>)
}
 8008472:	4618      	mov	r0, r3
 8008474:	46bd      	mov	sp, r7
 8008476:	bd80      	pop	{r7, pc}
 8008478:	2000068c 	.word	0x2000068c
 800847c:	0802286c 	.word	0x0802286c
 8008480:	0801ee40 	.word	0x0801ee40
 8008484:	08022b2c 	.word	0x08022b2c
 8008488:	20000668 	.word	0x20000668
 800848c:	080083e9 	.word	0x080083e9

08008490 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8008490:	b480      	push	{r7}
 8008492:	b083      	sub	sp, #12
 8008494:	af00      	add	r7, sp, #0
 8008496:	6078      	str	r0, [r7, #4]
 8008498:	6039      	str	r1, [r7, #0]
 800849a:	683b      	ldr	r3, [r7, #0]
 800849c:	4618      	mov	r0, r3
 800849e:	370c      	adds	r7, #12
 80084a0:	46bd      	mov	sp, r7
 80084a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084a6:	4770      	bx	lr

080084a8 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     *        This handler is invoked when a mouse click or display touch event has been
     *        detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80084a8:	b480      	push	{r7}
 80084aa:	b083      	sub	sp, #12
 80084ac:	af00      	add	r7, sp, #0
 80084ae:	6078      	str	r0, [r7, #4]
 80084b0:	6039      	str	r1, [r7, #0]
    {
    }
 80084b2:	bf00      	nop
 80084b4:	370c      	adds	r7, #12
 80084b6:	46bd      	mov	sp, r7
 80084b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084bc:	4770      	bx	lr

080084be <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
     *
     *        This handler is invoked when a drag event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 80084be:	b480      	push	{r7}
 80084c0:	b083      	sub	sp, #12
 80084c2:	af00      	add	r7, sp, #0
 80084c4:	6078      	str	r0, [r7, #4]
 80084c6:	6039      	str	r1, [r7, #0]
    {
    }
 80084c8:	bf00      	nop
 80084ca:	370c      	adds	r7, #12
 80084cc:	46bd      	mov	sp, r7
 80084ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084d2:	4770      	bx	lr

080084d4 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
     *
     *        This handler is invoked when a gesture event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80084d4:	b480      	push	{r7}
 80084d6:	b083      	sub	sp, #12
 80084d8:	af00      	add	r7, sp, #0
 80084da:	6078      	str	r0, [r7, #4]
 80084dc:	6039      	str	r1, [r7, #0]
    {
    }
 80084de:	bf00      	nop
 80084e0:	370c      	adds	r7, #12
 80084e2:	46bd      	mov	sp, r7
 80084e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084e8:	4770      	bx	lr

080084ea <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
     *        This handler is invoked when a key (or button) event has been detected by the
     *        system.
     *
     * @param c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 80084ea:	b480      	push	{r7}
 80084ec:	b083      	sub	sp, #12
 80084ee:	af00      	add	r7, sp, #0
 80084f0:	6078      	str	r0, [r7, #4]
 80084f2:	460b      	mov	r3, r1
 80084f4:	70fb      	strb	r3, [r7, #3]
    {
    }
 80084f6:	bf00      	nop
 80084f8:	370c      	adds	r7, #12
 80084fa:	46bd      	mov	sp, r7
 80084fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008500:	4770      	bx	lr

08008502 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:
     * @brief This handler is invoked when a system tick event has been generated.
     *
     *        This handler is invoked when a system tick event has been generated. The system
     *        tick period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8008502:	b480      	push	{r7}
 8008504:	b083      	sub	sp, #12
 8008506:	af00      	add	r7, sp, #0
 8008508:	6078      	str	r0, [r7, #4]
    {
    }
 800850a:	bf00      	nop
 800850c:	370c      	adds	r7, #12
 800850e:	46bd      	mov	sp, r7
 8008510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008514:	4770      	bx	lr

08008516 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:
     *
     * @brief This handler is invoked when a change screen event is pending.
     *
     *        This handler is invoked when a change screen event is pending.
     */
    virtual void handlePendingScreenTransition()
 8008516:	b480      	push	{r7}
 8008518:	b083      	sub	sp, #12
 800851a:	af00      	add	r7, sp, #0
 800851c:	6078      	str	r0, [r7, #4]
    {
    }
 800851e:	bf00      	nop
 8008520:	370c      	adds	r7, #12
 8008522:	46bd      	mov	sp, r7
 8008524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008528:	4770      	bx	lr
	...

0800852c <_ZN8touchgfx15UIEventListenerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~UIEventListener()
 800852c:	b480      	push	{r7}
 800852e:	b083      	sub	sp, #12
 8008530:	af00      	add	r7, sp, #0
 8008532:	6078      	str	r0, [r7, #4]
    {
 8008534:	4a04      	ldr	r2, [pc, #16]	; (8008548 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8008536:	687b      	ldr	r3, [r7, #4]
 8008538:	601a      	str	r2, [r3, #0]
    }
 800853a:	687b      	ldr	r3, [r7, #4]
 800853c:	4618      	mov	r0, r3
 800853e:	370c      	adds	r7, #12
 8008540:	46bd      	mov	sp, r7
 8008542:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008546:	4770      	bx	lr
 8008548:	0801ef34 	.word	0x0801ef34

0800854c <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800854c:	b580      	push	{r7, lr}
 800854e:	b082      	sub	sp, #8
 8008550:	af00      	add	r7, sp, #0
 8008552:	6078      	str	r0, [r7, #4]
    }
 8008554:	6878      	ldr	r0, [r7, #4]
 8008556:	f7ff ffe9 	bl	800852c <_ZN8touchgfx15UIEventListenerD1Ev>
 800855a:	2104      	movs	r1, #4
 800855c:	6878      	ldr	r0, [r7, #4]
 800855e:	f013 f9e6 	bl	801b92e <_ZdlPvj>
 8008562:	687b      	ldr	r3, [r7, #4]
 8008564:	4618      	mov	r0, r3
 8008566:	3708      	adds	r7, #8
 8008568:	46bd      	mov	sp, r7
 800856a:	bd80      	pop	{r7, pc}

0800856c <_ZN8touchgfx10TransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs the Transition.
     */
    Transition() :
 800856c:	b480      	push	{r7}
 800856e:	b083      	sub	sp, #12
 8008570:	af00      	add	r7, sp, #0
 8008572:	6078      	str	r0, [r7, #4]
        screenContainer(0), done(false)
 8008574:	4a07      	ldr	r2, [pc, #28]	; (8008594 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 8008576:	687b      	ldr	r3, [r7, #4]
 8008578:	601a      	str	r2, [r3, #0]
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	2200      	movs	r2, #0
 800857e:	605a      	str	r2, [r3, #4]
 8008580:	687b      	ldr	r3, [r7, #4]
 8008582:	2200      	movs	r2, #0
 8008584:	721a      	strb	r2, [r3, #8]
    {
    }
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	4618      	mov	r0, r3
 800858a:	370c      	adds	r7, #12
 800858c:	46bd      	mov	sp, r7
 800858e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008592:	4770      	bx	lr
 8008594:	0801ef14 	.word	0x0801ef14

08008598 <_ZN8touchgfx10TransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Transition()
 8008598:	b480      	push	{r7}
 800859a:	b083      	sub	sp, #12
 800859c:	af00      	add	r7, sp, #0
 800859e:	6078      	str	r0, [r7, #4]
    {
 80085a0:	4a04      	ldr	r2, [pc, #16]	; (80085b4 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 80085a2:	687b      	ldr	r3, [r7, #4]
 80085a4:	601a      	str	r2, [r3, #0]
    }
 80085a6:	687b      	ldr	r3, [r7, #4]
 80085a8:	4618      	mov	r0, r3
 80085aa:	370c      	adds	r7, #12
 80085ac:	46bd      	mov	sp, r7
 80085ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085b2:	4770      	bx	lr
 80085b4:	0801ef14 	.word	0x0801ef14

080085b8 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 80085b8:	b580      	push	{r7, lr}
 80085ba:	b082      	sub	sp, #8
 80085bc:	af00      	add	r7, sp, #0
 80085be:	6078      	str	r0, [r7, #4]
    }
 80085c0:	6878      	ldr	r0, [r7, #4]
 80085c2:	f7ff ffe9 	bl	8008598 <_ZN8touchgfx10TransitionD1Ev>
 80085c6:	210c      	movs	r1, #12
 80085c8:	6878      	ldr	r0, [r7, #4]
 80085ca:	f013 f9b0 	bl	801b92e <_ZdlPvj>
 80085ce:	687b      	ldr	r3, [r7, #4]
 80085d0:	4618      	mov	r0, r3
 80085d2:	3708      	adds	r7, #8
 80085d4:	46bd      	mov	sp, r7
 80085d6:	bd80      	pop	{r7, pc}

080085d8 <_ZN8touchgfx10Transition15handleTickEventEv>:
     *
     * @brief Called for every tick when transitioning.
     *
     *        Called for every tick when transitioning. Base does nothing.
     */
    virtual void handleTickEvent() { }
 80085d8:	b480      	push	{r7}
 80085da:	b083      	sub	sp, #12
 80085dc:	af00      	add	r7, sp, #0
 80085de:	6078      	str	r0, [r7, #4]
 80085e0:	bf00      	nop
 80085e2:	370c      	adds	r7, #12
 80085e4:	46bd      	mov	sp, r7
 80085e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ea:	4770      	bx	lr

080085ec <_ZN8touchgfx10Transition8tearDownEv>:
     * @brief Tears down the Animation.
     *
     *        Tears down the Animation. Called before the d.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void tearDown() { }
 80085ec:	b480      	push	{r7}
 80085ee:	b083      	sub	sp, #12
 80085f0:	af00      	add	r7, sp, #0
 80085f2:	6078      	str	r0, [r7, #4]
 80085f4:	bf00      	nop
 80085f6:	370c      	adds	r7, #12
 80085f8:	46bd      	mov	sp, r7
 80085fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085fe:	4770      	bx	lr

08008600 <_ZN8touchgfx10Transition4initEv>:
     * @brief Initializes the transition.
     *
     *        Initializes the transition. Called after the c.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void init() { }
 8008600:	b480      	push	{r7}
 8008602:	b083      	sub	sp, #12
 8008604:	af00      	add	r7, sp, #0
 8008606:	6078      	str	r0, [r7, #4]
 8008608:	bf00      	nop
 800860a:	370c      	adds	r7, #12
 800860c:	46bd      	mov	sp, r7
 800860e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008612:	4770      	bx	lr

08008614 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *        Sets the screen container. Is used by Screen to enable the transition to access
     *        the container.
     *
     * @param [in] cont The container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8008614:	b480      	push	{r7}
 8008616:	b083      	sub	sp, #12
 8008618:	af00      	add	r7, sp, #0
 800861a:	6078      	str	r0, [r7, #4]
 800861c:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800861e:	687b      	ldr	r3, [r7, #4]
 8008620:	683a      	ldr	r2, [r7, #0]
 8008622:	605a      	str	r2, [r3, #4]
    }
 8008624:	bf00      	nop
 8008626:	370c      	adds	r7, #12
 8008628:	46bd      	mov	sp, r7
 800862a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800862e:	4770      	bx	lr

08008630 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *        provide a means to switch screen from places that does not have access to a
     *        pointer to the new screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8008630:	b480      	push	{r7}
 8008632:	b083      	sub	sp, #12
 8008634:	af00      	add	r7, sp, #0
 8008636:	6078      	str	r0, [r7, #4]
 8008638:	460b      	mov	r3, r1
 800863a:	70fb      	strb	r3, [r7, #3]
    {
    }
 800863c:	bf00      	nop
 800863e:	370c      	adds	r7, #12
 8008640:	46bd      	mov	sp, r7
 8008642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008646:	4770      	bx	lr

08008648 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
     *
     * @brief Destructor.
     *
     *        Empty virtual destructor.
     */
    virtual ~GenericCallback()
 8008648:	b480      	push	{r7}
 800864a:	b083      	sub	sp, #12
 800864c:	af00      	add	r7, sp, #0
 800864e:	6078      	str	r0, [r7, #4]
    {
 8008650:	4a04      	ldr	r2, [pc, #16]	; (8008664 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8008652:	687b      	ldr	r3, [r7, #4]
 8008654:	601a      	str	r2, [r3, #0]
    }
 8008656:	687b      	ldr	r3, [r7, #4]
 8008658:	4618      	mov	r0, r3
 800865a:	370c      	adds	r7, #12
 800865c:	46bd      	mov	sp, r7
 800865e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008662:	4770      	bx	lr
 8008664:	0801eefc 	.word	0x0801eefc

08008668 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8008668:	b580      	push	{r7, lr}
 800866a:	b082      	sub	sp, #8
 800866c:	af00      	add	r7, sp, #0
 800866e:	6078      	str	r0, [r7, #4]
    }
 8008670:	6878      	ldr	r0, [r7, #4]
 8008672:	f7ff ffe9 	bl	8008648 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8008676:	2104      	movs	r1, #4
 8008678:	6878      	ldr	r0, [r7, #4]
 800867a:	f013 f958 	bl	801b92e <_ZdlPvj>
 800867e:	687b      	ldr	r3, [r7, #4]
 8008680:	4618      	mov	r0, r3
 8008682:	3708      	adds	r7, #8
 8008684:	46bd      	mov	sp, r7
 8008686:	bd80      	pop	{r7, pc}

08008688 <_ZN8touchgfx3HAL11getInstanceEv>:
     *
     *        Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8008688:	b480      	push	{r7}
 800868a:	af00      	add	r7, sp, #0
    {
        return instance;
 800868c:	4b03      	ldr	r3, [pc, #12]	; (800869c <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800868e:	681b      	ldr	r3, [r3, #0]
    }
 8008690:	4618      	mov	r0, r3
 8008692:	46bd      	mov	sp, r7
 8008694:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008698:	4770      	bx	lr
 800869a:	bf00      	nop
 800869c:	200017a0 	.word	0x200017a0

080086a0 <_ZN8touchgfx3HAL3lcdEv>:
     *
     *        Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 80086a0:	b480      	push	{r7}
 80086a2:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80086a4:	4b0b      	ldr	r3, [pc, #44]	; (80086d4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80086a6:	681b      	ldr	r3, [r3, #0]
 80086a8:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 80086ac:	2b00      	cmp	r3, #0
 80086ae:	d008      	beq.n	80086c2 <_ZN8touchgfx3HAL3lcdEv+0x22>
 80086b0:	4b08      	ldr	r3, [pc, #32]	; (80086d4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80086b2:	681b      	ldr	r3, [r3, #0]
 80086b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80086b6:	2b00      	cmp	r3, #0
 80086b8:	d003      	beq.n	80086c2 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 80086ba:	4b06      	ldr	r3, [pc, #24]	; (80086d4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80086bc:	681b      	ldr	r3, [r3, #0]
 80086be:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80086c0:	e002      	b.n	80086c8 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        else
        {
            return instance->lcdRef;
 80086c2:	4b04      	ldr	r3, [pc, #16]	; (80086d4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80086c4:	681b      	ldr	r3, [r3, #0]
 80086c6:	689b      	ldr	r3, [r3, #8]
        }
    }
 80086c8:	4618      	mov	r0, r3
 80086ca:	46bd      	mov	sp, r7
 80086cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086d0:	4770      	bx	lr
 80086d2:	bf00      	nop
 80086d4:	200017a0 	.word	0x200017a0

080086d8 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 80086d8:	b580      	push	{r7, lr}
 80086da:	b082      	sub	sp, #8
 80086dc:	af00      	add	r7, sp, #0
 80086de:	6078      	str	r0, [r7, #4]
 80086e0:	4a05      	ldr	r2, [pc, #20]	; (80086f8 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 80086e2:	687b      	ldr	r3, [r7, #4]
 80086e4:	601a      	str	r2, [r3, #0]
 80086e6:	687b      	ldr	r3, [r7, #4]
 80086e8:	4618      	mov	r0, r3
 80086ea:	f7ff ff1f 	bl	800852c <_ZN8touchgfx15UIEventListenerD1Ev>
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	4618      	mov	r0, r3
 80086f2:	3708      	adds	r7, #8
 80086f4:	46bd      	mov	sp, r7
 80086f6:	bd80      	pop	{r7, pc}
 80086f8:	08020260 	.word	0x08020260

080086fc <_ZN8touchgfx11ApplicationD0Ev>:
 80086fc:	b580      	push	{r7, lr}
 80086fe:	b082      	sub	sp, #8
 8008700:	af00      	add	r7, sp, #0
 8008702:	6078      	str	r0, [r7, #4]
 8008704:	6878      	ldr	r0, [r7, #4]
 8008706:	f7ff ffe7 	bl	80086d8 <_ZN8touchgfx11ApplicationD1Ev>
 800870a:	f44f 7198 	mov.w	r1, #304	; 0x130
 800870e:	6878      	ldr	r0, [r7, #4]
 8008710:	f013 f90d 	bl	801b92e <_ZdlPvj>
 8008714:	687b      	ldr	r3, [r7, #4]
 8008716:	4618      	mov	r0, r3
 8008718:	3708      	adds	r7, #8
 800871a:	46bd      	mov	sp, r7
 800871c:	bd80      	pop	{r7, pc}
	...

08008720 <_ZN8touchgfx14MVPApplicationC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    MVPApplication() :
 8008720:	b580      	push	{r7, lr}
 8008722:	b082      	sub	sp, #8
 8008724:	af00      	add	r7, sp, #0
 8008726:	6078      	str	r0, [r7, #4]
        currentPresenter(0),
        pendingScreenTransitionCallback(0)
 8008728:	687b      	ldr	r3, [r7, #4]
 800872a:	4618      	mov	r0, r3
 800872c:	f005 fed0 	bl	800e4d0 <_ZN8touchgfx11ApplicationC1Ev>
 8008730:	4a09      	ldr	r2, [pc, #36]	; (8008758 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8008732:	687b      	ldr	r3, [r7, #4]
 8008734:	601a      	str	r2, [r3, #0]
 8008736:	687b      	ldr	r3, [r7, #4]
 8008738:	2200      	movs	r2, #0
 800873a:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 800873e:	687b      	ldr	r3, [r7, #4]
 8008740:	2200      	movs	r2, #0
 8008742:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    {
        instance = this;
 8008746:	687b      	ldr	r3, [r7, #4]
 8008748:	4a04      	ldr	r2, [pc, #16]	; (800875c <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800874a:	6013      	str	r3, [r2, #0]
    }
 800874c:	687b      	ldr	r3, [r7, #4]
 800874e:	4618      	mov	r0, r3
 8008750:	3708      	adds	r7, #8
 8008752:	46bd      	mov	sp, r7
 8008754:	bd80      	pop	{r7, pc}
 8008756:	bf00      	nop
 8008758:	0801eec0 	.word	0x0801eec0
 800875c:	2000180c 	.word	0x2000180c

08008760 <_ZN8touchgfx14MVPApplicationD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPApplication() { }
 8008760:	b580      	push	{r7, lr}
 8008762:	b082      	sub	sp, #8
 8008764:	af00      	add	r7, sp, #0
 8008766:	6078      	str	r0, [r7, #4]
 8008768:	4a05      	ldr	r2, [pc, #20]	; (8008780 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800876a:	687b      	ldr	r3, [r7, #4]
 800876c:	601a      	str	r2, [r3, #0]
 800876e:	687b      	ldr	r3, [r7, #4]
 8008770:	4618      	mov	r0, r3
 8008772:	f7ff ffb1 	bl	80086d8 <_ZN8touchgfx11ApplicationD1Ev>
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	4618      	mov	r0, r3
 800877a:	3708      	adds	r7, #8
 800877c:	46bd      	mov	sp, r7
 800877e:	bd80      	pop	{r7, pc}
 8008780:	0801eec0 	.word	0x0801eec0

08008784 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8008784:	b580      	push	{r7, lr}
 8008786:	b082      	sub	sp, #8
 8008788:	af00      	add	r7, sp, #0
 800878a:	6078      	str	r0, [r7, #4]
 800878c:	6878      	ldr	r0, [r7, #4]
 800878e:	f7ff ffe7 	bl	8008760 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008792:	f44f 719c 	mov.w	r1, #312	; 0x138
 8008796:	6878      	ldr	r0, [r7, #4]
 8008798:	f013 f8c9 	bl	801b92e <_ZdlPvj>
 800879c:	687b      	ldr	r3, [r7, #4]
 800879e:	4618      	mov	r0, r3
 80087a0:	3708      	adds	r7, #8
 80087a2:	46bd      	mov	sp, r7
 80087a4:	bd80      	pop	{r7, pc}

080087a6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     *
     * @brief Handles the pending screen transition.
     *
     *        Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80087a6:	b580      	push	{r7, lr}
 80087a8:	b082      	sub	sp, #8
 80087aa:	af00      	add	r7, sp, #0
 80087ac:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 80087ae:	6878      	ldr	r0, [r7, #4]
 80087b0:	f000 f804 	bl	80087bc <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 80087b4:	bf00      	nop
 80087b6:	3708      	adds	r7, #8
 80087b8:	46bd      	mov	sp, r7
 80087ba:	bd80      	pop	{r7, pc}

080087bc <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:
     * @brief Evaluates the pending Callback instances.
     *
     *        Evaluates the pending Callback instances. If a callback is valid, it is executed
     *        and a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 80087bc:	b580      	push	{r7, lr}
 80087be:	b082      	sub	sp, #8
 80087c0:	af00      	add	r7, sp, #0
 80087c2:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80087c4:	687b      	ldr	r3, [r7, #4]
 80087c6:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80087ca:	2b00      	cmp	r3, #0
 80087cc:	d00f      	beq.n	80087ee <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80087ce:	687b      	ldr	r3, [r7, #4]
 80087d0:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 80087d4:	687b      	ldr	r3, [r7, #4]
 80087d6:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80087da:	681b      	ldr	r3, [r3, #0]
 80087dc:	330c      	adds	r3, #12
 80087de:	681b      	ldr	r3, [r3, #0]
 80087e0:	4610      	mov	r0, r2
 80087e2:	4798      	blx	r3
 80087e4:	4603      	mov	r3, r0
 80087e6:	2b00      	cmp	r3, #0
 80087e8:	d001      	beq.n	80087ee <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80087ea:	2301      	movs	r3, #1
 80087ec:	e000      	b.n	80087f0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 80087ee:	2300      	movs	r3, #0
 80087f0:	2b00      	cmp	r3, #0
 80087f2:	d00e      	beq.n	8008812 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 80087fa:	687b      	ldr	r3, [r7, #4]
 80087fc:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	3308      	adds	r3, #8
 8008804:	681b      	ldr	r3, [r3, #0]
 8008806:	4610      	mov	r0, r2
 8008808:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800880a:	687b      	ldr	r3, [r7, #4]
 800880c:	2200      	movs	r2, #0
 800880e:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
        }
    }
 8008812:	bf00      	nop
 8008814:	3708      	adds	r7, #8
 8008816:	46bd      	mov	sp, r7
 8008818:	bd80      	pop	{r7, pc}

0800881a <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>:
 * @param [in] currentScreen    If non-null, the current screen.
 * @param [in] currentPresenter If non-null, the current presenter.
 * @param [in] currentTrans     If non-null, the current transaction.
 */
static inline void prepareTransition(Screen** currentScreen, Presenter** currentPresenter, Transition** currentTrans)
{
 800881a:	b580      	push	{r7, lr}
 800881c:	b084      	sub	sp, #16
 800881e:	af00      	add	r7, sp, #0
 8008820:	60f8      	str	r0, [r7, #12]
 8008822:	60b9      	str	r1, [r7, #8]
 8008824:	607a      	str	r2, [r7, #4]
    Application::getInstance()->clearAllTimerWidgets();
 8008826:	f005 fe33 	bl	800e490 <_ZN8touchgfx11Application11getInstanceEv>
 800882a:	4603      	mov	r3, r0
 800882c:	4618      	mov	r0, r3
 800882e:	f005 fe35 	bl	800e49c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>

    if (*currentTrans)
 8008832:	687b      	ldr	r3, [r7, #4]
 8008834:	681b      	ldr	r3, [r3, #0]
 8008836:	2b00      	cmp	r3, #0
 8008838:	d008      	beq.n	800884c <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x32>
    {
        (*currentTrans)->tearDown();
 800883a:	687b      	ldr	r3, [r7, #4]
 800883c:	681a      	ldr	r2, [r3, #0]
 800883e:	687b      	ldr	r3, [r7, #4]
 8008840:	681b      	ldr	r3, [r3, #0]
 8008842:	681b      	ldr	r3, [r3, #0]
 8008844:	330c      	adds	r3, #12
 8008846:	681b      	ldr	r3, [r3, #0]
 8008848:	4610      	mov	r0, r2
 800884a:	4798      	blx	r3
    }
    if (*currentTrans)
 800884c:	687b      	ldr	r3, [r7, #4]
 800884e:	681b      	ldr	r3, [r3, #0]
 8008850:	2b00      	cmp	r3, #0
 8008852:	d007      	beq.n	8008864 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x4a>
    {
        (*currentTrans)->~Transition();
 8008854:	687b      	ldr	r3, [r7, #4]
 8008856:	681a      	ldr	r2, [r3, #0]
 8008858:	687b      	ldr	r3, [r7, #4]
 800885a:	681b      	ldr	r3, [r3, #0]
 800885c:	681b      	ldr	r3, [r3, #0]
 800885e:	681b      	ldr	r3, [r3, #0]
 8008860:	4610      	mov	r0, r2
 8008862:	4798      	blx	r3
    }
    if (*currentScreen)
 8008864:	68fb      	ldr	r3, [r7, #12]
 8008866:	681b      	ldr	r3, [r3, #0]
 8008868:	2b00      	cmp	r3, #0
 800886a:	d008      	beq.n	800887e <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x64>
    {
        (*currentScreen)->tearDownScreen();
 800886c:	68fb      	ldr	r3, [r7, #12]
 800886e:	681a      	ldr	r2, [r3, #0]
 8008870:	68fb      	ldr	r3, [r7, #12]
 8008872:	681b      	ldr	r3, [r3, #0]
 8008874:	681b      	ldr	r3, [r3, #0]
 8008876:	3314      	adds	r3, #20
 8008878:	681b      	ldr	r3, [r3, #0]
 800887a:	4610      	mov	r0, r2
 800887c:	4798      	blx	r3
    }
    if (*currentPresenter)
 800887e:	68bb      	ldr	r3, [r7, #8]
 8008880:	681b      	ldr	r3, [r3, #0]
 8008882:	2b00      	cmp	r3, #0
 8008884:	d008      	beq.n	8008898 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x7e>
    {
        (*currentPresenter)->deactivate();
 8008886:	68bb      	ldr	r3, [r7, #8]
 8008888:	681a      	ldr	r2, [r3, #0]
 800888a:	68bb      	ldr	r3, [r7, #8]
 800888c:	681b      	ldr	r3, [r3, #0]
 800888e:	681b      	ldr	r3, [r3, #0]
 8008890:	3304      	adds	r3, #4
 8008892:	681b      	ldr	r3, [r3, #0]
 8008894:	4610      	mov	r0, r2
 8008896:	4798      	blx	r3
    }
    if (*currentScreen)
 8008898:	68fb      	ldr	r3, [r7, #12]
 800889a:	681b      	ldr	r3, [r3, #0]
 800889c:	2b00      	cmp	r3, #0
 800889e:	d007      	beq.n	80088b0 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x96>
    {
        (*currentScreen)->~Screen();
 80088a0:	68fb      	ldr	r3, [r7, #12]
 80088a2:	681a      	ldr	r2, [r3, #0]
 80088a4:	68fb      	ldr	r3, [r7, #12]
 80088a6:	681b      	ldr	r3, [r3, #0]
 80088a8:	681b      	ldr	r3, [r3, #0]
 80088aa:	681b      	ldr	r3, [r3, #0]
 80088ac:	4610      	mov	r0, r2
 80088ae:	4798      	blx	r3
    }
    if (*currentPresenter)
 80088b0:	68bb      	ldr	r3, [r7, #8]
 80088b2:	681b      	ldr	r3, [r3, #0]
 80088b4:	2b00      	cmp	r3, #0
 80088b6:	d008      	beq.n	80088ca <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0xb0>
    {
        (*currentPresenter)->~Presenter();
 80088b8:	68bb      	ldr	r3, [r7, #8]
 80088ba:	681a      	ldr	r2, [r3, #0]
 80088bc:	68bb      	ldr	r3, [r7, #8]
 80088be:	681b      	ldr	r3, [r3, #0]
 80088c0:	681b      	ldr	r3, [r3, #0]
 80088c2:	3308      	adds	r3, #8
 80088c4:	681b      	ldr	r3, [r3, #0]
 80088c6:	4610      	mov	r0, r2
 80088c8:	4798      	blx	r3
    }
}
 80088ca:	bf00      	nop
 80088cc:	3710      	adds	r7, #16
 80088ce:	46bd      	mov	sp, r7
 80088d0:	bd80      	pop	{r7, pc}

080088d2 <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>:
 * @param [in] newScreen     If non-null, the new screen.
 * @param [in] newPresenter  If non-null, the new presenter.
 * @param [in] newTransition If non-null, the new transition.
 */
static inline void finalizeTransition(Screen* newScreen, Presenter* newPresenter, Transition* newTransition)
{
 80088d2:	b580      	push	{r7, lr}
 80088d4:	b084      	sub	sp, #16
 80088d6:	af00      	add	r7, sp, #0
 80088d8:	60f8      	str	r0, [r7, #12]
 80088da:	60b9      	str	r1, [r7, #8]
 80088dc:	607a      	str	r2, [r7, #4]
    newScreen->setupScreen();
 80088de:	68fb      	ldr	r3, [r7, #12]
 80088e0:	681b      	ldr	r3, [r3, #0]
 80088e2:	330c      	adds	r3, #12
 80088e4:	681b      	ldr	r3, [r3, #0]
 80088e6:	68f8      	ldr	r0, [r7, #12]
 80088e8:	4798      	blx	r3
    newPresenter->activate();
 80088ea:	68bb      	ldr	r3, [r7, #8]
 80088ec:	681b      	ldr	r3, [r3, #0]
 80088ee:	681b      	ldr	r3, [r3, #0]
 80088f0:	68b8      	ldr	r0, [r7, #8]
 80088f2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80088f4:	6879      	ldr	r1, [r7, #4]
 80088f6:	68f8      	ldr	r0, [r7, #12]
 80088f8:	f006 fe74 	bl	800f5e4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	681b      	ldr	r3, [r3, #0]
 8008900:	3310      	adds	r3, #16
 8008902:	681b      	ldr	r3, [r3, #0]
 8008904:	6878      	ldr	r0, [r7, #4]
 8008906:	4798      	blx	r3

    Application::getInstance()->draw();
 8008908:	f005 fdc2 	bl	800e490 <_ZN8touchgfx11Application11getInstanceEv>
 800890c:	4603      	mov	r3, r0
 800890e:	681a      	ldr	r2, [r3, #0]
 8008910:	3228      	adds	r2, #40	; 0x28
 8008912:	6812      	ldr	r2, [r2, #0]
 8008914:	4618      	mov	r0, r3
 8008916:	4790      	blx	r2
}
 8008918:	bf00      	nop
 800891a:	3710      	adds	r7, #16
 800891c:	46bd      	mov	sp, r7
 800891e:	bd80      	pop	{r7, pc}

08008920 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8008920:	b480      	push	{r7}
 8008922:	b083      	sub	sp, #12
 8008924:	af00      	add	r7, sp, #0
 8008926:	6078      	str	r0, [r7, #4]
 8008928:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800892a:	687b      	ldr	r3, [r7, #4]
 800892c:	683a      	ldr	r2, [r7, #0]
 800892e:	601a      	str	r2, [r3, #0]
    }
 8008930:	bf00      	nop
 8008932:	370c      	adds	r7, #12
 8008934:	46bd      	mov	sp, r7
 8008936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800893a:	4770      	bx	lr

0800893c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800893c:	b580      	push	{r7, lr}
 800893e:	b082      	sub	sp, #8
 8008940:	af00      	add	r7, sp, #0
 8008942:	6078      	str	r0, [r7, #4]
 8008944:	4a08      	ldr	r2, [pc, #32]	; (8008968 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	601a      	str	r2, [r3, #0]
 800894a:	687b      	ldr	r3, [r7, #4]
 800894c:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8008950:	4618      	mov	r0, r3
 8008952:	f000 fa4f 	bl	8008df4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8008956:	687b      	ldr	r3, [r7, #4]
 8008958:	4618      	mov	r0, r3
 800895a:	f7ff ff01 	bl	8008760 <_ZN8touchgfx14MVPApplicationD1Ev>
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	4618      	mov	r0, r3
 8008962:	3708      	adds	r7, #8
 8008964:	46bd      	mov	sp, r7
 8008966:	bd80      	pop	{r7, pc}
 8008968:	0801ee6c 	.word	0x0801ee6c

0800896c <_ZN23FrontendApplicationBaseD0Ev>:
 800896c:	b580      	push	{r7, lr}
 800896e:	b082      	sub	sp, #8
 8008970:	af00      	add	r7, sp, #0
 8008972:	6078      	str	r0, [r7, #4]
 8008974:	6878      	ldr	r0, [r7, #4]
 8008976:	f7ff ffe1 	bl	800893c <_ZN23FrontendApplicationBaseD1Ev>
 800897a:	f44f 71a8 	mov.w	r1, #336	; 0x150
 800897e:	6878      	ldr	r0, [r7, #4]
 8008980:	f012 ffd5 	bl	801b92e <_ZdlPvj>
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	4618      	mov	r0, r3
 8008988:	3708      	adds	r7, #8
 800898a:	46bd      	mov	sp, r7
 800898c:	bd80      	pop	{r7, pc}
	...

08008990 <_ZN8touchgfx12NoTransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    NoTransition() : Transition() { }
 8008990:	b580      	push	{r7, lr}
 8008992:	b082      	sub	sp, #8
 8008994:	af00      	add	r7, sp, #0
 8008996:	6078      	str	r0, [r7, #4]
 8008998:	687b      	ldr	r3, [r7, #4]
 800899a:	4618      	mov	r0, r3
 800899c:	f7ff fde6 	bl	800856c <_ZN8touchgfx10TransitionC1Ev>
 80089a0:	4a03      	ldr	r2, [pc, #12]	; (80089b0 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 80089a2:	687b      	ldr	r3, [r7, #4]
 80089a4:	601a      	str	r2, [r3, #0]
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	4618      	mov	r0, r3
 80089aa:	3708      	adds	r7, #8
 80089ac:	46bd      	mov	sp, r7
 80089ae:	bd80      	pop	{r7, pc}
 80089b0:	0801ee4c 	.word	0x0801ee4c

080089b4 <_ZN8touchgfx12NoTransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~NoTransition() { }
 80089b4:	b580      	push	{r7, lr}
 80089b6:	b082      	sub	sp, #8
 80089b8:	af00      	add	r7, sp, #0
 80089ba:	6078      	str	r0, [r7, #4]
 80089bc:	4a05      	ldr	r2, [pc, #20]	; (80089d4 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	601a      	str	r2, [r3, #0]
 80089c2:	687b      	ldr	r3, [r7, #4]
 80089c4:	4618      	mov	r0, r3
 80089c6:	f7ff fde7 	bl	8008598 <_ZN8touchgfx10TransitionD1Ev>
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	4618      	mov	r0, r3
 80089ce:	3708      	adds	r7, #8
 80089d0:	46bd      	mov	sp, r7
 80089d2:	bd80      	pop	{r7, pc}
 80089d4:	0801ee4c 	.word	0x0801ee4c

080089d8 <_ZN8touchgfx12NoTransitionD0Ev>:
 80089d8:	b580      	push	{r7, lr}
 80089da:	b082      	sub	sp, #8
 80089dc:	af00      	add	r7, sp, #0
 80089de:	6078      	str	r0, [r7, #4]
 80089e0:	6878      	ldr	r0, [r7, #4]
 80089e2:	f7ff ffe7 	bl	80089b4 <_ZN8touchgfx12NoTransitionD1Ev>
 80089e6:	210c      	movs	r1, #12
 80089e8:	6878      	ldr	r0, [r7, #4]
 80089ea:	f012 ffa0 	bl	801b92e <_ZdlPvj>
 80089ee:	687b      	ldr	r3, [r7, #4]
 80089f0:	4618      	mov	r0, r3
 80089f2:	3708      	adds	r7, #8
 80089f4:	46bd      	mov	sp, r7
 80089f6:	bd80      	pop	{r7, pc}

080089f8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
     *
     * @brief Indicates that the transition is done after the first tick.
     *
     *        Indicates that the transition is done after the first tick.
     */
    virtual void handleTickEvent()
 80089f8:	b480      	push	{r7}
 80089fa:	b083      	sub	sp, #12
 80089fc:	af00      	add	r7, sp, #0
 80089fe:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8008a00:	687b      	ldr	r3, [r7, #4]
 8008a02:	2201      	movs	r2, #1
 8008a04:	721a      	strb	r2, [r3, #8]
    }
 8008a06:	bf00      	nop
 8008a08:	370c      	adds	r7, #12
 8008a0a:	46bd      	mov	sp, r7
 8008a0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a10:	4770      	bx	lr

08008a12 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 8008a12:	b480      	push	{r7}
 8008a14:	b083      	sub	sp, #12
 8008a16:	af00      	add	r7, sp, #0
 8008a18:	6078      	str	r0, [r7, #4]
 8008a1a:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	683a      	ldr	r2, [r7, #0]
 8008a20:	605a      	str	r2, [r3, #4]
    }
 8008a22:	bf00      	nop
 8008a24:	370c      	adds	r7, #12
 8008a26:	46bd      	mov	sp, r7
 8008a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a2c:	4770      	bx	lr
	...

08008a30 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008a30:	b580      	push	{r7, lr}
 8008a32:	b084      	sub	sp, #16
 8008a34:	af00      	add	r7, sp, #0
 8008a36:	60f8      	str	r0, [r7, #12]
 8008a38:	60b9      	str	r1, [r7, #8]
 8008a3a:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8008a3c:	68fb      	ldr	r3, [r7, #12]
 8008a3e:	4618      	mov	r0, r3
 8008a40:	f7ff fe6e 	bl	8008720 <_ZN8touchgfx14MVPApplicationC1Ev>
 8008a44:	4a13      	ldr	r2, [pc, #76]	; (8008a94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8008a46:	68fb      	ldr	r3, [r7, #12]
 8008a48:	601a      	str	r2, [r3, #0]
 8008a4a:	68fb      	ldr	r3, [r7, #12]
 8008a4c:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8008a50:	4618      	mov	r0, r3
 8008a52:	f000 f89f 	bl	8008b94 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 8008a56:	68fb      	ldr	r3, [r7, #12]
 8008a58:	687a      	ldr	r2, [r7, #4]
 8008a5a:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
 8008a5e:	68fb      	ldr	r3, [r7, #12]
 8008a60:	68ba      	ldr	r2, [r7, #8]
 8008a62:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8008a66:	f7ff fe0f 	bl	8008688 <_ZN8touchgfx3HAL11getInstanceEv>
 8008a6a:	4603      	mov	r3, r0
 8008a6c:	681a      	ldr	r2, [r3, #0]
 8008a6e:	3208      	adds	r2, #8
 8008a70:	6812      	ldr	r2, [r2, #0]
 8008a72:	2101      	movs	r1, #1
 8008a74:	4618      	mov	r0, r3
 8008a76:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8008a78:	2000      	movs	r0, #0
 8008a7a:	f001 f8e1 	bl	8009c40 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8008a7e:	f7ff fe0f 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 8008a82:	4603      	mov	r3, r0
 8008a84:	4618      	mov	r0, r3
 8008a86:	f00b fef0 	bl	801486a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8008a8a:	68fb      	ldr	r3, [r7, #12]
 8008a8c:	4618      	mov	r0, r3
 8008a8e:	3710      	adds	r7, #16
 8008a90:	46bd      	mov	sp, r7
 8008a92:	bd80      	pop	{r7, pc}
 8008a94:	0801ee6c 	.word	0x0801ee6c

08008a98 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8008a98:	b480      	push	{r7}
 8008a9a:	b083      	sub	sp, #12
 8008a9c:	af00      	add	r7, sp, #0
 8008a9e:	6078      	str	r0, [r7, #4]
 8008aa0:	6039      	str	r1, [r7, #0]
 8008aa2:	687b      	ldr	r3, [r7, #4]
 8008aa4:	4618      	mov	r0, r3
 8008aa6:	370c      	adds	r7, #12
 8008aa8:	46bd      	mov	sp, r7
 8008aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aae:	4770      	bx	lr

08008ab0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *       three arguments of any type.
 *
 * @tparam dest_type The type of the class in which the member function resides.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008ab0:	b580      	push	{r7, lr}
 8008ab2:	b082      	sub	sp, #8
 8008ab4:	af00      	add	r7, sp, #0
 8008ab6:	6078      	str	r0, [r7, #4]
 8008ab8:	6039      	str	r1, [r7, #0]
 8008aba:	687b      	ldr	r3, [r7, #4]
 8008abc:	683a      	ldr	r2, [r7, #0]
 8008abe:	4611      	mov	r1, r2
 8008ac0:	4618      	mov	r0, r3
 8008ac2:	f7ff ffe9 	bl	8008a98 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8008ac6:	683b      	ldr	r3, [r7, #0]
 8008ac8:	685a      	ldr	r2, [r3, #4]
 8008aca:	687b      	ldr	r3, [r7, #4]
 8008acc:	605a      	str	r2, [r3, #4]
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	683a      	ldr	r2, [r7, #0]
 8008ad2:	3308      	adds	r3, #8
 8008ad4:	3208      	adds	r2, #8
 8008ad6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008ada:	e883 0003 	stmia.w	r3, {r0, r1}
 8008ade:	687b      	ldr	r3, [r7, #4]
 8008ae0:	4618      	mov	r0, r3
 8008ae2:	3708      	adds	r7, #8
 8008ae4:	46bd      	mov	sp, r7
 8008ae6:	bd80      	pop	{r7, pc}

08008ae8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 8008ae8:	b590      	push	{r4, r7, lr}
 8008aea:	b089      	sub	sp, #36	; 0x24
 8008aec:	af00      	add	r7, sp, #0
 8008aee:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
 8008af0:	687b      	ldr	r3, [r7, #4]
 8008af2:	f503 749c 	add.w	r4, r3, #312	; 0x138
 8008af6:	4b10      	ldr	r3, [pc, #64]	; (8008b38 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 8008af8:	61bb      	str	r3, [r7, #24]
 8008afa:	2300      	movs	r3, #0
 8008afc:	61fb      	str	r3, [r7, #28]
 8008afe:	f107 0008 	add.w	r0, r7, #8
 8008b02:	f107 0318 	add.w	r3, r7, #24
 8008b06:	cb0c      	ldmia	r3, {r2, r3}
 8008b08:	6879      	ldr	r1, [r7, #4]
 8008b0a:	f000 f85f 	bl	8008bcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008b0e:	f107 0308 	add.w	r3, r7, #8
 8008b12:	4619      	mov	r1, r3
 8008b14:	4620      	mov	r0, r4
 8008b16:	f7ff ffcb 	bl	8008ab0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008b1a:	f107 0308 	add.w	r3, r7, #8
 8008b1e:	4618      	mov	r0, r3
 8008b20:	f000 f968 	bl	8008df4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	f503 729c 	add.w	r2, r3, #312	; 0x138
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
}
 8008b30:	bf00      	nop
 8008b32:	3724      	adds	r7, #36	; 0x24
 8008b34:	46bd      	mov	sp, r7
 8008b36:	bd90      	pop	{r4, r7, pc}
 8008b38:	08008b3d 	.word	0x08008b3d

08008b3c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8008b3c:	b580      	push	{r7, lr}
 8008b3e:	b084      	sub	sp, #16
 8008b40:	af02      	add	r7, sp, #8
 8008b42:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008b44:	687b      	ldr	r3, [r7, #4]
 8008b46:	f503 7198 	add.w	r1, r3, #304	; 0x130
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8008b50:	461a      	mov	r2, r3
 8008b52:	687b      	ldr	r3, [r7, #4]
 8008b54:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8008b58:	9300      	str	r3, [sp, #0]
 8008b5a:	4b04      	ldr	r3, [pc, #16]	; (8008b6c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 8008b5c:	4804      	ldr	r0, [pc, #16]	; (8008b70 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 8008b5e:	f000 f855 	bl	8008c0c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008b62:	bf00      	nop
 8008b64:	3708      	adds	r7, #8
 8008b66:	46bd      	mov	sp, r7
 8008b68:	bd80      	pop	{r7, pc}
 8008b6a:	bf00      	nop
 8008b6c:	20001800 	.word	0x20001800
 8008b70:	200017fc 	.word	0x200017fc

08008b74 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008b74:	b480      	push	{r7}
 8008b76:	b083      	sub	sp, #12
 8008b78:	af00      	add	r7, sp, #0
 8008b7a:	6078      	str	r0, [r7, #4]
 8008b7c:	4a04      	ldr	r2, [pc, #16]	; (8008b90 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008b7e:	687b      	ldr	r3, [r7, #4]
 8008b80:	601a      	str	r2, [r3, #0]
 8008b82:	687b      	ldr	r3, [r7, #4]
 8008b84:	4618      	mov	r0, r3
 8008b86:	370c      	adds	r7, #12
 8008b88:	46bd      	mov	sp, r7
 8008b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b8e:	4770      	bx	lr
 8008b90:	0801eefc 	.word	0x0801eefc

08008b94 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Initializes an empty callback.
     */
    Callback() : pobject(0), pmemfun_0(0) { }
 8008b94:	b580      	push	{r7, lr}
 8008b96:	b082      	sub	sp, #8
 8008b98:	af00      	add	r7, sp, #0
 8008b9a:	6078      	str	r0, [r7, #4]
 8008b9c:	687b      	ldr	r3, [r7, #4]
 8008b9e:	4618      	mov	r0, r3
 8008ba0:	f7ff ffe8 	bl	8008b74 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008ba4:	4a08      	ldr	r2, [pc, #32]	; (8008bc8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8008ba6:	687b      	ldr	r3, [r7, #4]
 8008ba8:	601a      	str	r2, [r3, #0]
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	2200      	movs	r2, #0
 8008bae:	605a      	str	r2, [r3, #4]
 8008bb0:	687b      	ldr	r3, [r7, #4]
 8008bb2:	2200      	movs	r2, #0
 8008bb4:	609a      	str	r2, [r3, #8]
 8008bb6:	687b      	ldr	r3, [r7, #4]
 8008bb8:	2200      	movs	r2, #0
 8008bba:	60da      	str	r2, [r3, #12]
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	4618      	mov	r0, r3
 8008bc0:	3708      	adds	r7, #8
 8008bc2:	46bd      	mov	sp, r7
 8008bc4:	bd80      	pop	{r7, pc}
 8008bc6:	bf00      	nop
 8008bc8:	0801eea8 	.word	0x0801eea8

08008bcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pobject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function
     *                       takes zero arguments.
     */
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 8008bcc:	b580      	push	{r7, lr}
 8008bce:	b084      	sub	sp, #16
 8008bd0:	af00      	add	r7, sp, #0
 8008bd2:	60f8      	str	r0, [r7, #12]
 8008bd4:	60b9      	str	r1, [r7, #8]
 8008bd6:	4639      	mov	r1, r7
 8008bd8:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 8008bdc:	68fb      	ldr	r3, [r7, #12]
 8008bde:	4618      	mov	r0, r3
 8008be0:	f7ff ffc8 	bl	8008b74 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008be4:	4a08      	ldr	r2, [pc, #32]	; (8008c08 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8008be6:	68fb      	ldr	r3, [r7, #12]
 8008be8:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 8008bea:	68fb      	ldr	r3, [r7, #12]
 8008bec:	68ba      	ldr	r2, [r7, #8]
 8008bee:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
 8008bf0:	68fb      	ldr	r3, [r7, #12]
 8008bf2:	3308      	adds	r3, #8
 8008bf4:	463a      	mov	r2, r7
 8008bf6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008bfa:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 8008bfe:	68fb      	ldr	r3, [r7, #12]
 8008c00:	4618      	mov	r0, r3
 8008c02:	3710      	adds	r7, #16
 8008c04:	46bd      	mov	sp, r7
 8008c06:	bd80      	pop	{r7, pc}
 8008c08:	0801eea8 	.word	0x0801eea8

08008c0c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template< class ScreenType, class PresenterType, class TransType, class ModelType  >
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008c0c:	b590      	push	{r4, r7, lr}
 8008c0e:	b089      	sub	sp, #36	; 0x24
 8008c10:	af00      	add	r7, sp, #0
 8008c12:	60f8      	str	r0, [r7, #12]
 8008c14:	60b9      	str	r1, [r7, #8]
 8008c16:	607a      	str	r2, [r7, #4]
 8008c18:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008c1a:	687b      	ldr	r3, [r7, #4]
 8008c1c:	689a      	ldr	r2, [r3, #8]
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	689b      	ldr	r3, [r3, #8]
 8008c22:	681b      	ldr	r3, [r3, #0]
 8008c24:	3320      	adds	r3, #32
 8008c26:	681b      	ldr	r3, [r3, #0]
 8008c28:	4610      	mov	r0, r2
 8008c2a:	4798      	blx	r3
 8008c2c:	4603      	mov	r3, r0
 8008c2e:	f5b3 7f05 	cmp.w	r3, #532	; 0x214
 8008c32:	d205      	bcs.n	8008c40 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008c34:	4b46      	ldr	r3, [pc, #280]	; (8008d50 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x144>)
 8008c36:	4a47      	ldr	r2, [pc, #284]	; (8008d54 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8008c38:	21c2      	movs	r1, #194	; 0xc2
 8008c3a:	4847      	ldr	r0, [pc, #284]	; (8008d58 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14c>)
 8008c3c:	f012 fea6 	bl	801b98c <__assert_func>
 8008c40:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008c42:	687b      	ldr	r3, [r7, #4]
 8008c44:	685a      	ldr	r2, [r3, #4]
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	685b      	ldr	r3, [r3, #4]
 8008c4a:	681b      	ldr	r3, [r3, #0]
 8008c4c:	3320      	adds	r3, #32
 8008c4e:	681b      	ldr	r3, [r3, #0]
 8008c50:	4610      	mov	r0, r2
 8008c52:	4798      	blx	r3
 8008c54:	4603      	mov	r3, r0
 8008c56:	2b0f      	cmp	r3, #15
 8008c58:	d805      	bhi.n	8008c66 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 8008c5a:	4b40      	ldr	r3, [pc, #256]	; (8008d5c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x150>)
 8008c5c:	4a3d      	ldr	r2, [pc, #244]	; (8008d54 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8008c5e:	21c3      	movs	r1, #195	; 0xc3
 8008c60:	483d      	ldr	r0, [pc, #244]	; (8008d58 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14c>)
 8008c62:	f012 fe93 	bl	801b98c <__assert_func>
 8008c66:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008c68:	687b      	ldr	r3, [r7, #4]
 8008c6a:	68da      	ldr	r2, [r3, #12]
 8008c6c:	687b      	ldr	r3, [r7, #4]
 8008c6e:	68db      	ldr	r3, [r3, #12]
 8008c70:	681b      	ldr	r3, [r3, #0]
 8008c72:	3320      	adds	r3, #32
 8008c74:	681b      	ldr	r3, [r3, #0]
 8008c76:	4610      	mov	r0, r2
 8008c78:	4798      	blx	r3
 8008c7a:	4603      	mov	r3, r0
 8008c7c:	2b0b      	cmp	r3, #11
 8008c7e:	d805      	bhi.n	8008c8c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
 8008c80:	4b37      	ldr	r3, [pc, #220]	; (8008d60 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x154>)
 8008c82:	4a34      	ldr	r2, [pc, #208]	; (8008d54 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x148>)
 8008c84:	21c4      	movs	r1, #196	; 0xc4
 8008c86:	4834      	ldr	r0, [pc, #208]	; (8008d58 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x14c>)
 8008c88:	f012 fe80 	bl	801b98c <__assert_func>
 8008c8c:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);
 8008c8e:	683a      	ldr	r2, [r7, #0]
 8008c90:	68b9      	ldr	r1, [r7, #8]
 8008c92:	68f8      	ldr	r0, [r7, #12]
 8008c94:	f7ff fdc1 	bl	800881a <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>

    TransType* newTransition = new (&heap.transitionStorage.at< TransType >(0)) TransType;
 8008c98:	687b      	ldr	r3, [r7, #4]
 8008c9a:	68db      	ldr	r3, [r3, #12]
 8008c9c:	2100      	movs	r1, #0
 8008c9e:	4618      	mov	r0, r3
 8008ca0:	f000 f860 	bl	8008d64 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008ca4:	4603      	mov	r3, r0
 8008ca6:	4619      	mov	r1, r3
 8008ca8:	200c      	movs	r0, #12
 8008caa:	f7ff fbf1 	bl	8008490 <_ZnwjPv>
 8008cae:	4604      	mov	r4, r0
 8008cb0:	4620      	mov	r0, r4
 8008cb2:	f7ff fe6d 	bl	8008990 <_ZN8touchgfx12NoTransitionC1Ev>
 8008cb6:	61fc      	str	r4, [r7, #28]
    ScreenType* newScreen = new (&heap.screenStorage.at< ScreenType >(0)) ScreenType;
 8008cb8:	687b      	ldr	r3, [r7, #4]
 8008cba:	689b      	ldr	r3, [r3, #8]
 8008cbc:	2100      	movs	r1, #0
 8008cbe:	4618      	mov	r0, r3
 8008cc0:	f000 f863 	bl	8008d8a <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 8008cc4:	4603      	mov	r3, r0
 8008cc6:	4619      	mov	r1, r3
 8008cc8:	f44f 7005 	mov.w	r0, #532	; 0x214
 8008ccc:	f7ff fbe0 	bl	8008490 <_ZnwjPv>
 8008cd0:	4604      	mov	r4, r0
 8008cd2:	4620      	mov	r0, r4
 8008cd4:	f001 f9c8 	bl	800a068 <_ZN11Screen1ViewC1Ev>
 8008cd8:	61bc      	str	r4, [r7, #24]
    PresenterType* newPresenter = new (&heap.presenterStorage.at< PresenterType >(0)) PresenterType(*newScreen);
 8008cda:	687b      	ldr	r3, [r7, #4]
 8008cdc:	685b      	ldr	r3, [r3, #4]
 8008cde:	2100      	movs	r1, #0
 8008ce0:	4618      	mov	r0, r3
 8008ce2:	f000 f865 	bl	8008db0 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 8008ce6:	4603      	mov	r3, r0
 8008ce8:	4619      	mov	r1, r3
 8008cea:	2010      	movs	r0, #16
 8008cec:	f7ff fbd0 	bl	8008490 <_ZnwjPv>
 8008cf0:	4604      	mov	r4, r0
 8008cf2:	69b9      	ldr	r1, [r7, #24]
 8008cf4:	4620      	mov	r0, r4
 8008cf6:	f001 f95f 	bl	8009fb8 <_ZN16Screen1PresenterC1ER11Screen1View>
 8008cfa:	617c      	str	r4, [r7, #20]
    *currentTrans = newTransition;
 8008cfc:	683b      	ldr	r3, [r7, #0]
 8008cfe:	69fa      	ldr	r2, [r7, #28]
 8008d00:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008d02:	68bb      	ldr	r3, [r7, #8]
 8008d04:	697a      	ldr	r2, [r7, #20]
 8008d06:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008d08:	68fb      	ldr	r3, [r7, #12]
 8008d0a:	69ba      	ldr	r2, [r7, #24]
 8008d0c:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008d0e:	697b      	ldr	r3, [r7, #20]
 8008d10:	2b00      	cmp	r3, #0
 8008d12:	d002      	beq.n	8008d1a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10e>
 8008d14:	697b      	ldr	r3, [r7, #20]
 8008d16:	3304      	adds	r3, #4
 8008d18:	e000      	b.n	8008d1c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x110>
 8008d1a:	2300      	movs	r3, #0
 8008d1c:	4619      	mov	r1, r3
 8008d1e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8008d20:	f7ff fdfe 	bl	8008920 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008d24:	697b      	ldr	r3, [r7, #20]
 8008d26:	3304      	adds	r3, #4
 8008d28:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8008d2a:	4618      	mov	r0, r3
 8008d2c:	f7ff fe71 	bl	8008a12 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008d30:	69bb      	ldr	r3, [r7, #24]
 8008d32:	6979      	ldr	r1, [r7, #20]
 8008d34:	4618      	mov	r0, r3
 8008d36:	f000 f84e 	bl	8008dd6 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);
 8008d3a:	69fa      	ldr	r2, [r7, #28]
 8008d3c:	6979      	ldr	r1, [r7, #20]
 8008d3e:	69b8      	ldr	r0, [r7, #24]
 8008d40:	f7ff fdc7 	bl	80088d2 <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>

    return newPresenter;
 8008d44:	697b      	ldr	r3, [r7, #20]
}
 8008d46:	4618      	mov	r0, r3
 8008d48:	3724      	adds	r7, #36	; 0x24
 8008d4a:	46bd      	mov	sp, r7
 8008d4c:	bd90      	pop	{r4, r7, pc}
 8008d4e:	bf00      	nop
 8008d50:	0801e7b8 	.word	0x0801e7b8
 8008d54:	0801e848 	.word	0x0801e848
 8008d58:	0801e94c 	.word	0x0801e94c
 8008d5c:	0801e990 	.word	0x0801e990
 8008d60:	0801ea34 	.word	0x0801ea34

08008d64 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template< typename T >
    T& at(const uint16_t index)
 8008d64:	b580      	push	{r7, lr}
 8008d66:	b082      	sub	sp, #8
 8008d68:	af00      	add	r7, sp, #0
 8008d6a:	6078      	str	r0, [r7, #4]
 8008d6c:	460b      	mov	r3, r1
 8008d6e:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8008d70:	687b      	ldr	r3, [r7, #4]
 8008d72:	681b      	ldr	r3, [r3, #0]
 8008d74:	3324      	adds	r3, #36	; 0x24
 8008d76:	681b      	ldr	r3, [r3, #0]
 8008d78:	887a      	ldrh	r2, [r7, #2]
 8008d7a:	4611      	mov	r1, r2
 8008d7c:	6878      	ldr	r0, [r7, #4]
 8008d7e:	4798      	blx	r3
 8008d80:	4603      	mov	r3, r0
    }
 8008d82:	4618      	mov	r0, r3
 8008d84:	3708      	adds	r7, #8
 8008d86:	46bd      	mov	sp, r7
 8008d88:	bd80      	pop	{r7, pc}

08008d8a <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 8008d8a:	b580      	push	{r7, lr}
 8008d8c:	b082      	sub	sp, #8
 8008d8e:	af00      	add	r7, sp, #0
 8008d90:	6078      	str	r0, [r7, #4]
 8008d92:	460b      	mov	r3, r1
 8008d94:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008d96:	687b      	ldr	r3, [r7, #4]
 8008d98:	681b      	ldr	r3, [r3, #0]
 8008d9a:	3324      	adds	r3, #36	; 0x24
 8008d9c:	681b      	ldr	r3, [r3, #0]
 8008d9e:	887a      	ldrh	r2, [r7, #2]
 8008da0:	4611      	mov	r1, r2
 8008da2:	6878      	ldr	r0, [r7, #4]
 8008da4:	4798      	blx	r3
 8008da6:	4603      	mov	r3, r0
    }
 8008da8:	4618      	mov	r0, r3
 8008daa:	3708      	adds	r7, #8
 8008dac:	46bd      	mov	sp, r7
 8008dae:	bd80      	pop	{r7, pc}

08008db0 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 8008db0:	b580      	push	{r7, lr}
 8008db2:	b082      	sub	sp, #8
 8008db4:	af00      	add	r7, sp, #0
 8008db6:	6078      	str	r0, [r7, #4]
 8008db8:	460b      	mov	r3, r1
 8008dba:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008dbc:	687b      	ldr	r3, [r7, #4]
 8008dbe:	681b      	ldr	r3, [r3, #0]
 8008dc0:	3324      	adds	r3, #36	; 0x24
 8008dc2:	681b      	ldr	r3, [r3, #0]
 8008dc4:	887a      	ldrh	r2, [r7, #2]
 8008dc6:	4611      	mov	r1, r2
 8008dc8:	6878      	ldr	r0, [r7, #4]
 8008dca:	4798      	blx	r3
 8008dcc:	4603      	mov	r3, r0
    }
 8008dce:	4618      	mov	r0, r3
 8008dd0:	3708      	adds	r7, #8
 8008dd2:	46bd      	mov	sp, r7
 8008dd4:	bd80      	pop	{r7, pc}

08008dd6 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     *        Binds an instance of a specific Presenter type (subclass) to the View instance.
     *        This function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 8008dd6:	b480      	push	{r7}
 8008dd8:	b083      	sub	sp, #12
 8008dda:	af00      	add	r7, sp, #0
 8008ddc:	6078      	str	r0, [r7, #4]
 8008dde:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 8008de0:	687b      	ldr	r3, [r7, #4]
 8008de2:	683a      	ldr	r2, [r7, #0]
 8008de4:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8008de6:	bf00      	nop
 8008de8:	370c      	adds	r7, #12
 8008dea:	46bd      	mov	sp, r7
 8008dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008df0:	4770      	bx	lr
	...

08008df4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008df4:	b580      	push	{r7, lr}
 8008df6:	b082      	sub	sp, #8
 8008df8:	af00      	add	r7, sp, #0
 8008dfa:	6078      	str	r0, [r7, #4]
 8008dfc:	4a05      	ldr	r2, [pc, #20]	; (8008e14 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8008dfe:	687b      	ldr	r3, [r7, #4]
 8008e00:	601a      	str	r2, [r3, #0]
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	4618      	mov	r0, r3
 8008e06:	f7ff fc1f 	bl	8008648 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8008e0a:	687b      	ldr	r3, [r7, #4]
 8008e0c:	4618      	mov	r0, r3
 8008e0e:	3708      	adds	r7, #8
 8008e10:	46bd      	mov	sp, r7
 8008e12:	bd80      	pop	{r7, pc}
 8008e14:	0801eea8 	.word	0x0801eea8

08008e18 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8008e18:	b580      	push	{r7, lr}
 8008e1a:	b082      	sub	sp, #8
 8008e1c:	af00      	add	r7, sp, #0
 8008e1e:	6078      	str	r0, [r7, #4]
 8008e20:	6878      	ldr	r0, [r7, #4]
 8008e22:	f7ff ffe7 	bl	8008df4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8008e26:	2110      	movs	r1, #16
 8008e28:	6878      	ldr	r0, [r7, #4]
 8008e2a:	f012 fd80 	bl	801b92e <_ZdlPvj>
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	4618      	mov	r0, r3
 8008e32:	3708      	adds	r7, #8
 8008e34:	46bd      	mov	sp, r7
 8008e36:	bd80      	pop	{r7, pc}

08008e38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * @brief Calls the member function.
     *
     *        Calls the member function. Do not call execute unless isValid() returns true (ie.
     *        a pointer to the object and the function has been set).
     */
    virtual void execute()
 8008e38:	b580      	push	{r7, lr}
 8008e3a:	b082      	sub	sp, #8
 8008e3c:	af00      	add	r7, sp, #0
 8008e3e:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 8008e40:	687b      	ldr	r3, [r7, #4]
 8008e42:	685b      	ldr	r3, [r3, #4]
 8008e44:	687a      	ldr	r2, [r7, #4]
 8008e46:	68d2      	ldr	r2, [r2, #12]
 8008e48:	1052      	asrs	r2, r2, #1
 8008e4a:	1899      	adds	r1, r3, r2
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	68db      	ldr	r3, [r3, #12]
 8008e50:	f003 0301 	and.w	r3, r3, #1
 8008e54:	2b00      	cmp	r3, #0
 8008e56:	d102      	bne.n	8008e5e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8008e58:	687b      	ldr	r3, [r7, #4]
 8008e5a:	689b      	ldr	r3, [r3, #8]
 8008e5c:	e00a      	b.n	8008e74 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8008e5e:	687b      	ldr	r3, [r7, #4]
 8008e60:	685b      	ldr	r3, [r3, #4]
 8008e62:	687a      	ldr	r2, [r7, #4]
 8008e64:	68d2      	ldr	r2, [r2, #12]
 8008e66:	1052      	asrs	r2, r2, #1
 8008e68:	4413      	add	r3, r2
 8008e6a:	681b      	ldr	r3, [r3, #0]
 8008e6c:	687a      	ldr	r2, [r7, #4]
 8008e6e:	6892      	ldr	r2, [r2, #8]
 8008e70:	4413      	add	r3, r2
 8008e72:	681b      	ldr	r3, [r3, #0]
 8008e74:	4608      	mov	r0, r1
 8008e76:	4798      	blx	r3
    }
 8008e78:	bf00      	nop
 8008e7a:	3708      	adds	r7, #8
 8008e7c:	46bd      	mov	sp, r7
 8008e7e:	bd80      	pop	{r7, pc}

08008e80 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     *        Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8008e80:	b480      	push	{r7}
 8008e82:	b083      	sub	sp, #12
 8008e84:	af00      	add	r7, sp, #0
 8008e86:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	685b      	ldr	r3, [r3, #4]
 8008e8c:	2b00      	cmp	r3, #0
 8008e8e:	d010      	beq.n	8008eb2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8008e90:	687b      	ldr	r3, [r7, #4]
 8008e92:	689b      	ldr	r3, [r3, #8]
 8008e94:	2b00      	cmp	r3, #0
 8008e96:	d107      	bne.n	8008ea8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8008e98:	687b      	ldr	r3, [r7, #4]
 8008e9a:	68db      	ldr	r3, [r3, #12]
 8008e9c:	f003 0301 	and.w	r3, r3, #1
 8008ea0:	2b00      	cmp	r3, #0
 8008ea2:	d101      	bne.n	8008ea8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8008ea4:	2301      	movs	r3, #1
 8008ea6:	e000      	b.n	8008eaa <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8008ea8:	2300      	movs	r3, #0
 8008eaa:	2b01      	cmp	r3, #1
 8008eac:	d001      	beq.n	8008eb2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8008eae:	2301      	movs	r3, #1
 8008eb0:	e000      	b.n	8008eb4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8008eb2:	2300      	movs	r3, #0
    }
 8008eb4:	4618      	mov	r0, r3
 8008eb6:	370c      	adds	r7, #12
 8008eb8:	46bd      	mov	sp, r7
 8008eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ebe:	4770      	bx	lr

08008ec0 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param col The color.
     *
     * @see Color::getColorFrom24BitRGB()
     */
    colortype(uint32_t col)
 8008ec0:	b480      	push	{r7}
 8008ec2:	b083      	sub	sp, #12
 8008ec4:	af00      	add	r7, sp, #0
 8008ec6:	6078      	str	r0, [r7, #4]
 8008ec8:	6039      	str	r1, [r7, #0]
    {
        color = col;
 8008eca:	687b      	ldr	r3, [r7, #4]
 8008ecc:	683a      	ldr	r2, [r7, #0]
 8008ece:	601a      	str	r2, [r3, #0]
    }
 8008ed0:	687b      	ldr	r3, [r7, #4]
 8008ed2:	4618      	mov	r0, r3
 8008ed4:	370c      	adds	r7, #12
 8008ed6:	46bd      	mov	sp, r7
 8008ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008edc:	4770      	bx	lr

08008ede <_ZN8touchgfx4RectC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Resulting in an empty Rect with coordinates 0,0.
     */
    Rect()
 8008ede:	b480      	push	{r7}
 8008ee0:	b083      	sub	sp, #12
 8008ee2:	af00      	add	r7, sp, #0
 8008ee4:	6078      	str	r0, [r7, #4]
    {
        this->x = 0;
 8008ee6:	687b      	ldr	r3, [r7, #4]
 8008ee8:	2200      	movs	r2, #0
 8008eea:	801a      	strh	r2, [r3, #0]
        this->y = 0;
 8008eec:	687b      	ldr	r3, [r7, #4]
 8008eee:	2200      	movs	r2, #0
 8008ef0:	805a      	strh	r2, [r3, #2]
        this->width = 0;
 8008ef2:	687b      	ldr	r3, [r7, #4]
 8008ef4:	2200      	movs	r2, #0
 8008ef6:	809a      	strh	r2, [r3, #4]
        this->height = 0;
 8008ef8:	687b      	ldr	r3, [r7, #4]
 8008efa:	2200      	movs	r2, #0
 8008efc:	80da      	strh	r2, [r3, #6]
    }
 8008efe:	687b      	ldr	r3, [r7, #4]
 8008f00:	4618      	mov	r0, r3
 8008f02:	370c      	adds	r7, #12
 8008f04:	46bd      	mov	sp, r7
 8008f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f0a:	4770      	bx	lr

08008f0c <_ZN8touchgfx4RectC1Essss>:
     * @param x      The x coordinate.
     * @param y      The y coordinate.
     * @param width  The width.
     * @param height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
 8008f0c:	b480      	push	{r7}
 8008f0e:	b085      	sub	sp, #20
 8008f10:	af00      	add	r7, sp, #0
 8008f12:	60f8      	str	r0, [r7, #12]
 8008f14:	4608      	mov	r0, r1
 8008f16:	4611      	mov	r1, r2
 8008f18:	461a      	mov	r2, r3
 8008f1a:	4603      	mov	r3, r0
 8008f1c:	817b      	strh	r3, [r7, #10]
 8008f1e:	460b      	mov	r3, r1
 8008f20:	813b      	strh	r3, [r7, #8]
 8008f22:	4613      	mov	r3, r2
 8008f24:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
 8008f26:	68fb      	ldr	r3, [r7, #12]
 8008f28:	897a      	ldrh	r2, [r7, #10]
 8008f2a:	801a      	strh	r2, [r3, #0]
        this->y = y;
 8008f2c:	68fb      	ldr	r3, [r7, #12]
 8008f2e:	893a      	ldrh	r2, [r7, #8]
 8008f30:	805a      	strh	r2, [r3, #2]
        this->width = width;
 8008f32:	68fb      	ldr	r3, [r7, #12]
 8008f34:	88fa      	ldrh	r2, [r7, #6]
 8008f36:	809a      	strh	r2, [r3, #4]
        this->height = height;
 8008f38:	68fb      	ldr	r3, [r7, #12]
 8008f3a:	8b3a      	ldrh	r2, [r7, #24]
 8008f3c:	80da      	strh	r2, [r3, #6]
    }
 8008f3e:	68fb      	ldr	r3, [r7, #12]
 8008f40:	4618      	mov	r0, r3
 8008f42:	3714      	adds	r7, #20
 8008f44:	46bd      	mov	sp, r7
 8008f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f4a:	4770      	bx	lr

08008f4c <_ZN8touchgfx6BitmapC1Et>:
     *        Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     *        array.
     *
     * @param id The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
 8008f4c:	b480      	push	{r7}
 8008f4e:	b083      	sub	sp, #12
 8008f50:	af00      	add	r7, sp, #0
 8008f52:	6078      	str	r0, [r7, #4]
 8008f54:	460b      	mov	r3, r1
 8008f56:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8008f58:	687b      	ldr	r3, [r7, #4]
 8008f5a:	887a      	ldrh	r2, [r7, #2]
 8008f5c:	801a      	strh	r2, [r3, #0]
    {
    }
 8008f5e:	687b      	ldr	r3, [r7, #4]
 8008f60:	4618      	mov	r0, r3
 8008f62:	370c      	adds	r7, #12
 8008f64:	46bd      	mov	sp, r7
 8008f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f6a:	4770      	bx	lr

08008f6c <_ZN8touchgfx8DrawableC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Drawable() : rect(0, 0, 0, 0),
 8008f6c:	b580      	push	{r7, lr}
 8008f6e:	b084      	sub	sp, #16
 8008f70:	af02      	add	r7, sp, #8
 8008f72:	6078      	str	r0, [r7, #4]
        parent(0),
        nextSibling(0),
        nextDrawChainElement(0),
        touchable(false),
        visible(true)
 8008f74:	4a13      	ldr	r2, [pc, #76]	; (8008fc4 <_ZN8touchgfx8DrawableC1Ev+0x58>)
 8008f76:	687b      	ldr	r3, [r7, #4]
 8008f78:	601a      	str	r2, [r3, #0]
 8008f7a:	687b      	ldr	r3, [r7, #4]
 8008f7c:	1d18      	adds	r0, r3, #4
 8008f7e:	2300      	movs	r3, #0
 8008f80:	9300      	str	r3, [sp, #0]
 8008f82:	2300      	movs	r3, #0
 8008f84:	2200      	movs	r2, #0
 8008f86:	2100      	movs	r1, #0
 8008f88:	f7ff ffc0 	bl	8008f0c <_ZN8touchgfx4RectC1Essss>
 8008f8c:	687b      	ldr	r3, [r7, #4]
 8008f8e:	330c      	adds	r3, #12
 8008f90:	4618      	mov	r0, r3
 8008f92:	f7ff ffa4 	bl	8008ede <_ZN8touchgfx4RectC1Ev>
 8008f96:	687b      	ldr	r3, [r7, #4]
 8008f98:	2200      	movs	r2, #0
 8008f9a:	615a      	str	r2, [r3, #20]
 8008f9c:	687b      	ldr	r3, [r7, #4]
 8008f9e:	2200      	movs	r2, #0
 8008fa0:	619a      	str	r2, [r3, #24]
 8008fa2:	687b      	ldr	r3, [r7, #4]
 8008fa4:	2200      	movs	r2, #0
 8008fa6:	61da      	str	r2, [r3, #28]
 8008fa8:	687b      	ldr	r3, [r7, #4]
 8008faa:	2200      	movs	r2, #0
 8008fac:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8008fb0:	687b      	ldr	r3, [r7, #4]
 8008fb2:	2201      	movs	r2, #1
 8008fb4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8008fb8:	687b      	ldr	r3, [r7, #4]
 8008fba:	4618      	mov	r0, r3
 8008fbc:	3708      	adds	r7, #8
 8008fbe:	46bd      	mov	sp, r7
 8008fc0:	bd80      	pop	{r7, pc}
 8008fc2:	bf00      	nop
 8008fc4:	08020398 	.word	0x08020398

08008fc8 <_ZN8touchgfx8DrawableD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Drawable() { }
 8008fc8:	b480      	push	{r7}
 8008fca:	b083      	sub	sp, #12
 8008fcc:	af00      	add	r7, sp, #0
 8008fce:	6078      	str	r0, [r7, #4]
 8008fd0:	4a04      	ldr	r2, [pc, #16]	; (8008fe4 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8008fd2:	687b      	ldr	r3, [r7, #4]
 8008fd4:	601a      	str	r2, [r3, #0]
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	4618      	mov	r0, r3
 8008fda:	370c      	adds	r7, #12
 8008fdc:	46bd      	mov	sp, r7
 8008fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fe2:	4770      	bx	lr
 8008fe4:	08020398 	.word	0x08020398

08008fe8 <_ZN8touchgfx8DrawableD0Ev>:
 8008fe8:	b580      	push	{r7, lr}
 8008fea:	b082      	sub	sp, #8
 8008fec:	af00      	add	r7, sp, #0
 8008fee:	6078      	str	r0, [r7, #4]
 8008ff0:	6878      	ldr	r0, [r7, #4]
 8008ff2:	f7ff ffe9 	bl	8008fc8 <_ZN8touchgfx8DrawableD1Ev>
 8008ff6:	2128      	movs	r1, #40	; 0x28
 8008ff8:	6878      	ldr	r0, [r7, #4]
 8008ffa:	f012 fc98 	bl	801b92e <_ZdlPvj>
 8008ffe:	687b      	ldr	r3, [r7, #4]
 8009000:	4618      	mov	r0, r3
 8009002:	3708      	adds	r7, #8
 8009004:	46bd      	mov	sp, r7
 8009006:	bd80      	pop	{r7, pc}

08009008 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param x      The x coordinate of this Drawable.
     * @param y      The y coordinate of this Drawable.
     * @param width  The width of this Drawable.
     * @param height The height of this Drawable.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009008:	b580      	push	{r7, lr}
 800900a:	b084      	sub	sp, #16
 800900c:	af00      	add	r7, sp, #0
 800900e:	60f8      	str	r0, [r7, #12]
 8009010:	4608      	mov	r0, r1
 8009012:	4611      	mov	r1, r2
 8009014:	461a      	mov	r2, r3
 8009016:	4603      	mov	r3, r0
 8009018:	817b      	strh	r3, [r7, #10]
 800901a:	460b      	mov	r3, r1
 800901c:	813b      	strh	r3, [r7, #8]
 800901e:	4613      	mov	r3, r2
 8009020:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8009022:	68fb      	ldr	r3, [r7, #12]
 8009024:	681b      	ldr	r3, [r3, #0]
 8009026:	3334      	adds	r3, #52	; 0x34
 8009028:	681b      	ldr	r3, [r3, #0]
 800902a:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800902e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8009032:	68f8      	ldr	r0, [r7, #12]
 8009034:	4798      	blx	r3
        setWidth(width);
 8009036:	68fb      	ldr	r3, [r7, #12]
 8009038:	681b      	ldr	r3, [r3, #0]
 800903a:	3338      	adds	r3, #56	; 0x38
 800903c:	681b      	ldr	r3, [r3, #0]
 800903e:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8009042:	4611      	mov	r1, r2
 8009044:	68f8      	ldr	r0, [r7, #12]
 8009046:	4798      	blx	r3
        setHeight(height);
 8009048:	68fb      	ldr	r3, [r7, #12]
 800904a:	681b      	ldr	r3, [r3, #0]
 800904c:	333c      	adds	r3, #60	; 0x3c
 800904e:	681b      	ldr	r3, [r3, #0]
 8009050:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8009054:	4611      	mov	r1, r2
 8009056:	68f8      	ldr	r0, [r7, #12]
 8009058:	4798      	blx	r3
    }
 800905a:	bf00      	nop
 800905c:	3710      	adds	r7, #16
 800905e:	46bd      	mov	sp, r7
 8009060:	bd80      	pop	{r7, pc}

08009062 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     */
    virtual void setX(int16_t x)
 8009062:	b480      	push	{r7}
 8009064:	b083      	sub	sp, #12
 8009066:	af00      	add	r7, sp, #0
 8009068:	6078      	str	r0, [r7, #4]
 800906a:	460b      	mov	r3, r1
 800906c:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800906e:	687b      	ldr	r3, [r7, #4]
 8009070:	887a      	ldrh	r2, [r7, #2]
 8009072:	809a      	strh	r2, [r3, #4]
    }
 8009074:	bf00      	nop
 8009076:	370c      	adds	r7, #12
 8009078:	46bd      	mov	sp, r7
 800907a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800907e:	4770      	bx	lr

08009080 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setY(int16_t y)
 8009080:	b480      	push	{r7}
 8009082:	b083      	sub	sp, #12
 8009084:	af00      	add	r7, sp, #0
 8009086:	6078      	str	r0, [r7, #4]
 8009088:	460b      	mov	r3, r1
 800908a:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800908c:	687b      	ldr	r3, [r7, #4]
 800908e:	887a      	ldrh	r2, [r7, #2]
 8009090:	80da      	strh	r2, [r3, #6]
    }
 8009092:	bf00      	nop
 8009094:	370c      	adds	r7, #12
 8009096:	46bd      	mov	sp, r7
 8009098:	f85d 7b04 	ldr.w	r7, [sp], #4
 800909c:	4770      	bx	lr

0800909e <_ZN8touchgfx8Drawable5setXYEss>:
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setXY(int16_t x, int16_t y)
 800909e:	b580      	push	{r7, lr}
 80090a0:	b082      	sub	sp, #8
 80090a2:	af00      	add	r7, sp, #0
 80090a4:	6078      	str	r0, [r7, #4]
 80090a6:	460b      	mov	r3, r1
 80090a8:	807b      	strh	r3, [r7, #2]
 80090aa:	4613      	mov	r3, r2
 80090ac:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 80090ae:	687b      	ldr	r3, [r7, #4]
 80090b0:	681b      	ldr	r3, [r3, #0]
 80090b2:	332c      	adds	r3, #44	; 0x2c
 80090b4:	681b      	ldr	r3, [r3, #0]
 80090b6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80090ba:	4611      	mov	r1, r2
 80090bc:	6878      	ldr	r0, [r7, #4]
 80090be:	4798      	blx	r3
        setY(y);
 80090c0:	687b      	ldr	r3, [r7, #4]
 80090c2:	681b      	ldr	r3, [r3, #0]
 80090c4:	3330      	adds	r3, #48	; 0x30
 80090c6:	681b      	ldr	r3, [r3, #0]
 80090c8:	f9b7 2000 	ldrsh.w	r2, [r7]
 80090cc:	4611      	mov	r1, r2
 80090ce:	6878      	ldr	r0, [r7, #4]
 80090d0:	4798      	blx	r3
    }
 80090d2:	bf00      	nop
 80090d4:	3708      	adds	r7, #8
 80090d6:	46bd      	mov	sp, r7
 80090d8:	bd80      	pop	{r7, pc}

080090da <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param width The new width.
     */
    virtual void setWidth(int16_t width)
 80090da:	b480      	push	{r7}
 80090dc:	b083      	sub	sp, #12
 80090de:	af00      	add	r7, sp, #0
 80090e0:	6078      	str	r0, [r7, #4]
 80090e2:	460b      	mov	r3, r1
 80090e4:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 80090e6:	687b      	ldr	r3, [r7, #4]
 80090e8:	887a      	ldrh	r2, [r7, #2]
 80090ea:	811a      	strh	r2, [r3, #8]
    }
 80090ec:	bf00      	nop
 80090ee:	370c      	adds	r7, #12
 80090f0:	46bd      	mov	sp, r7
 80090f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090f6:	4770      	bx	lr

080090f8 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param height The new height.
     */
    virtual void setHeight(int16_t height)
 80090f8:	b480      	push	{r7}
 80090fa:	b083      	sub	sp, #12
 80090fc:	af00      	add	r7, sp, #0
 80090fe:	6078      	str	r0, [r7, #4]
 8009100:	460b      	mov	r3, r1
 8009102:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009104:	687b      	ldr	r3, [r7, #4]
 8009106:	887a      	ldrh	r2, [r7, #2]
 8009108:	815a      	strh	r2, [r3, #10]
    }
 800910a:	bf00      	nop
 800910c:	370c      	adds	r7, #12
 800910e:	46bd      	mov	sp, r7
 8009110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009114:	4770      	bx	lr

08009116 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     *
     *        This function can be called on parent nodes to signal that the size of one or
     *        more of its children has changed. Currently only used in ScrollableContainer to
     *        redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged() { }
 8009116:	b480      	push	{r7}
 8009118:	b083      	sub	sp, #12
 800911a:	af00      	add	r7, sp, #0
 800911c:	6078      	str	r0, [r7, #4]
 800911e:	bf00      	nop
 8009120:	370c      	adds	r7, #12
 8009122:	46bd      	mov	sp, r7
 8009124:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009128:	4770      	bx	lr

0800912a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *        Defines the event handler interface for ClickEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt) { }
 800912a:	b480      	push	{r7}
 800912c:	b083      	sub	sp, #12
 800912e:	af00      	add	r7, sp, #0
 8009130:	6078      	str	r0, [r7, #4]
 8009132:	6039      	str	r1, [r7, #0]
 8009134:	bf00      	nop
 8009136:	370c      	adds	r7, #12
 8009138:	46bd      	mov	sp, r7
 800913a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800913e:	4770      	bx	lr

08009140 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *        Defines the event handler interface for GestureEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt) { }
 8009140:	b480      	push	{r7}
 8009142:	b083      	sub	sp, #12
 8009144:	af00      	add	r7, sp, #0
 8009146:	6078      	str	r0, [r7, #4]
 8009148:	6039      	str	r1, [r7, #0]
 800914a:	bf00      	nop
 800914c:	370c      	adds	r7, #12
 800914e:	46bd      	mov	sp, r7
 8009150:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009154:	4770      	bx	lr

08009156 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *        Defines the event handler interface for DragEvents. The event is only received if
     *        the drawable is touchable.
     *
     * @param evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt) { }
 8009156:	b480      	push	{r7}
 8009158:	b083      	sub	sp, #12
 800915a:	af00      	add	r7, sp, #0
 800915c:	6078      	str	r0, [r7, #4]
 800915e:	6039      	str	r1, [r7, #0]
 8009160:	bf00      	nop
 8009162:	370c      	adds	r7, #12
 8009164:	46bd      	mov	sp, r7
 8009166:	f85d 7b04 	ldr.w	r7, [sp], #4
 800916a:	4770      	bx	lr

0800916c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *        Called periodically by the framework if the Drawable instance has subscribed to
     *        timer ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent() { }
 800916c:	b480      	push	{r7}
 800916e:	b083      	sub	sp, #12
 8009170:	af00      	add	r7, sp, #0
 8009172:	6078      	str	r0, [r7, #4]
 8009174:	bf00      	nop
 8009176:	370c      	adds	r7, #12
 8009178:	46bd      	mov	sp, r7
 800917a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800917e:	4770      	bx	lr

08009180 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     * @return true if the Drawable is visible.
     * @return True if visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009180:	b480      	push	{r7}
 8009182:	b083      	sub	sp, #12
 8009184:	af00      	add	r7, sp, #0
 8009186:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800918e:	4618      	mov	r0, r3
 8009190:	370c      	adds	r7, #12
 8009192:	46bd      	mov	sp, r7
 8009194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009198:	4770      	bx	lr

0800919a <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800919a:	b480      	push	{r7}
 800919c:	b083      	sub	sp, #12
 800919e:	af00      	add	r7, sp, #0
 80091a0:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 80091a2:	687b      	ldr	r3, [r7, #4]
 80091a4:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 80091a8:	4618      	mov	r0, r3
 80091aa:	370c      	adds	r7, #12
 80091ac:	46bd      	mov	sp, r7
 80091ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091b2:	4770      	bx	lr

080091b4 <_ZN8touchgfx8Drawable6moveToEss>:
     * @note Will redraw the appropriate areas of the screen.
     *
     * @param x The absolute position to move to.
     * @param y The absolute position to move to.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80091b4:	b580      	push	{r7, lr}
 80091b6:	b082      	sub	sp, #8
 80091b8:	af00      	add	r7, sp, #0
 80091ba:	6078      	str	r0, [r7, #4]
 80091bc:	460b      	mov	r3, r1
 80091be:	807b      	strh	r3, [r7, #2]
 80091c0:	4613      	mov	r3, r2
 80091c2:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 80091c4:	687b      	ldr	r3, [r7, #4]
 80091c6:	681b      	ldr	r3, [r3, #0]
 80091c8:	3354      	adds	r3, #84	; 0x54
 80091ca:	681b      	ldr	r3, [r3, #0]
 80091cc:	8879      	ldrh	r1, [r7, #2]
 80091ce:	687a      	ldr	r2, [r7, #4]
 80091d0:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 80091d4:	b292      	uxth	r2, r2
 80091d6:	1a8a      	subs	r2, r1, r2
 80091d8:	b292      	uxth	r2, r2
 80091da:	b210      	sxth	r0, r2
 80091dc:	8839      	ldrh	r1, [r7, #0]
 80091de:	687a      	ldr	r2, [r7, #4]
 80091e0:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 80091e4:	b292      	uxth	r2, r2
 80091e6:	1a8a      	subs	r2, r1, r2
 80091e8:	b292      	uxth	r2, r2
 80091ea:	b212      	sxth	r2, r2
 80091ec:	4601      	mov	r1, r0
 80091ee:	6878      	ldr	r0, [r7, #4]
 80091f0:	4798      	blx	r3
    }
 80091f2:	bf00      	nop
 80091f4:	3708      	adds	r7, #8
 80091f6:	46bd      	mov	sp, r7
 80091f8:	bd80      	pop	{r7, pc}

080091fa <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     *        Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 80091fa:	b480      	push	{r7}
 80091fc:	b083      	sub	sp, #12
 80091fe:	af00      	add	r7, sp, #0
 8009200:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8009202:	687b      	ldr	r3, [r7, #4]
 8009204:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009208:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800920a:	687b      	ldr	r3, [r7, #4]
 800920c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009210:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8009212:	687b      	ldr	r3, [r7, #4]
 8009214:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009218:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800921a:	bf00      	nop
 800921c:	370c      	adds	r7, #12
 800921e:	46bd      	mov	sp, r7
 8009220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009224:	4770      	bx	lr

08009226 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     *
     * @param invalidatedArea              Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8009226:	b580      	push	{r7, lr}
 8009228:	b084      	sub	sp, #16
 800922a:	af00      	add	r7, sp, #0
 800922c:	60f8      	str	r0, [r7, #12]
 800922e:	60b9      	str	r1, [r7, #8]
 8009230:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 8009232:	68f8      	ldr	r0, [r7, #12]
 8009234:	f7ff ffe1 	bl	80091fa <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8009238:	687b      	ldr	r3, [r7, #4]
 800923a:	681a      	ldr	r2, [r3, #0]
 800923c:	68fb      	ldr	r3, [r7, #12]
 800923e:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8009240:	687b      	ldr	r3, [r7, #4]
 8009242:	68fa      	ldr	r2, [r7, #12]
 8009244:	601a      	str	r2, [r3, #0]
    }
 8009246:	bf00      	nop
 8009248:	3710      	adds	r7, #16
 800924a:	46bd      	mov	sp, r7
 800924c:	bd80      	pop	{r7, pc}
	...

08009250 <_ZN8touchgfx9ContainerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Container() { }
 8009250:	b580      	push	{r7, lr}
 8009252:	b082      	sub	sp, #8
 8009254:	af00      	add	r7, sp, #0
 8009256:	6078      	str	r0, [r7, #4]
 8009258:	4a05      	ldr	r2, [pc, #20]	; (8009270 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	601a      	str	r2, [r3, #0]
 800925e:	687b      	ldr	r3, [r7, #4]
 8009260:	4618      	mov	r0, r3
 8009262:	f7ff feb1 	bl	8008fc8 <_ZN8touchgfx8DrawableD1Ev>
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	4618      	mov	r0, r3
 800926a:	3708      	adds	r7, #8
 800926c:	46bd      	mov	sp, r7
 800926e:	bd80      	pop	{r7, pc}
 8009270:	0801f6ac 	.word	0x0801f6ac

08009274 <_ZN8touchgfx9ContainerD0Ev>:
 8009274:	b580      	push	{r7, lr}
 8009276:	b082      	sub	sp, #8
 8009278:	af00      	add	r7, sp, #0
 800927a:	6078      	str	r0, [r7, #4]
 800927c:	6878      	ldr	r0, [r7, #4]
 800927e:	f7ff ffe7 	bl	8009250 <_ZN8touchgfx9ContainerD1Ev>
 8009282:	212c      	movs	r1, #44	; 0x2c
 8009284:	6878      	ldr	r0, [r7, #4]
 8009286:	f012 fb52 	bl	801b92e <_ZdlPvj>
 800928a:	687b      	ldr	r3, [r7, #4]
 800928c:	4618      	mov	r0, r3
 800928e:	3708      	adds	r7, #8
 8009290:	46bd      	mov	sp, r7
 8009292:	bd80      	pop	{r7, pc}

08009294 <_ZN8touchgfx6ScreenD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Screen() { }
 8009294:	b580      	push	{r7, lr}
 8009296:	b082      	sub	sp, #8
 8009298:	af00      	add	r7, sp, #0
 800929a:	6078      	str	r0, [r7, #4]
 800929c:	4a06      	ldr	r2, [pc, #24]	; (80092b8 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800929e:	687b      	ldr	r3, [r7, #4]
 80092a0:	601a      	str	r2, [r3, #0]
 80092a2:	687b      	ldr	r3, [r7, #4]
 80092a4:	3304      	adds	r3, #4
 80092a6:	4618      	mov	r0, r3
 80092a8:	f7ff ffd2 	bl	8009250 <_ZN8touchgfx9ContainerD1Ev>
 80092ac:	687b      	ldr	r3, [r7, #4]
 80092ae:	4618      	mov	r0, r3
 80092b0:	3708      	adds	r7, #8
 80092b2:	46bd      	mov	sp, r7
 80092b4:	bd80      	pop	{r7, pc}
 80092b6:	bf00      	nop
 80092b8:	08020490 	.word	0x08020490

080092bc <_ZN8touchgfx6ScreenD0Ev>:
 80092bc:	b580      	push	{r7, lr}
 80092be:	b082      	sub	sp, #8
 80092c0:	af00      	add	r7, sp, #0
 80092c2:	6078      	str	r0, [r7, #4]
 80092c4:	6878      	ldr	r0, [r7, #4]
 80092c6:	f7ff ffe5 	bl	8009294 <_ZN8touchgfx6ScreenD1Ev>
 80092ca:	213c      	movs	r1, #60	; 0x3c
 80092cc:	6878      	ldr	r0, [r7, #4]
 80092ce:	f012 fb2e 	bl	801b92e <_ZdlPvj>
 80092d2:	687b      	ldr	r3, [r7, #4]
 80092d4:	4618      	mov	r0, r3
 80092d6:	3708      	adds	r7, #8
 80092d8:	46bd      	mov	sp, r7
 80092da:	bd80      	pop	{r7, pc}

080092dc <_ZN8touchgfx6Screen11setupScreenEv>:
     *        Base version does nothing, but place any screen specific initialization code in
     *        an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void setupScreen() { }
 80092dc:	b480      	push	{r7}
 80092de:	b083      	sub	sp, #12
 80092e0:	af00      	add	r7, sp, #0
 80092e2:	6078      	str	r0, [r7, #4]
 80092e4:	bf00      	nop
 80092e6:	370c      	adds	r7, #12
 80092e8:	46bd      	mov	sp, r7
 80092ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092ee:	4770      	bx	lr

080092f0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *        Base version does nothing, but override to do screen specific initialization code
     *        that has to be done after the transition to the screen.
     *
     * @see touchgfx::Application::handleTick()
     */
    virtual void afterTransition() { }
 80092f0:	b480      	push	{r7}
 80092f2:	b083      	sub	sp, #12
 80092f4:	af00      	add	r7, sp, #0
 80092f6:	6078      	str	r0, [r7, #4]
 80092f8:	bf00      	nop
 80092fa:	370c      	adds	r7, #12
 80092fc:	46bd      	mov	sp, r7
 80092fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009302:	4770      	bx	lr

08009304 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *        displayed. Base version does nothing, but place any screen specific cleanup code
     *        in an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void tearDownScreen() { }
 8009304:	b480      	push	{r7}
 8009306:	b083      	sub	sp, #12
 8009308:	af00      	add	r7, sp, #0
 800930a:	6078      	str	r0, [r7, #4]
 800930c:	bf00      	nop
 800930e:	370c      	adds	r7, #12
 8009310:	46bd      	mov	sp, r7
 8009312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009316:	4770      	bx	lr

08009318 <_ZN8touchgfx6Screen15handleTickEventEv>:
     *        Application::TICK_INTERVAL_MS.
     *
     *        Called by the Application on the current screen with a frequency of
     *        Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8009318:	b480      	push	{r7}
 800931a:	b083      	sub	sp, #12
 800931c:	af00      	add	r7, sp, #0
 800931e:	6078      	str	r0, [r7, #4]
    {
    }
 8009320:	bf00      	nop
 8009322:	370c      	adds	r7, #12
 8009324:	46bd      	mov	sp, r7
 8009326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800932a:	4770      	bx	lr

0800932c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *        Called by the Application on the reception of a "key", the meaning of which is
     *        platform/application specific. Default implementation does nothing.
     *
     * @param key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800932c:	b480      	push	{r7}
 800932e:	b083      	sub	sp, #12
 8009330:	af00      	add	r7, sp, #0
 8009332:	6078      	str	r0, [r7, #4]
 8009334:	460b      	mov	r3, r1
 8009336:	70fb      	strb	r3, [r7, #3]
    {
    }
 8009338:	bf00      	nop
 800933a:	370c      	adds	r7, #12
 800933c:	46bd      	mov	sp, r7
 800933e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009342:	4770      	bx	lr

08009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     *
     * @param [in] d The Drawable to add.
     */
    void add(Drawable& d)
 8009344:	b580      	push	{r7, lr}
 8009346:	b082      	sub	sp, #8
 8009348:	af00      	add	r7, sp, #0
 800934a:	6078      	str	r0, [r7, #4]
 800934c:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800934e:	687b      	ldr	r3, [r7, #4]
 8009350:	3304      	adds	r3, #4
 8009352:	6839      	ldr	r1, [r7, #0]
 8009354:	4618      	mov	r0, r3
 8009356:	f002 fe45 	bl	800bfe4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800935a:	bf00      	nop
 800935c:	3708      	adds	r7, #8
 800935e:	46bd      	mov	sp, r7
 8009360:	bd80      	pop	{r7, pc}
	...

08009364 <_ZN8touchgfx6WidgetC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Widget() : Drawable() { }
 8009364:	b580      	push	{r7, lr}
 8009366:	b082      	sub	sp, #8
 8009368:	af00      	add	r7, sp, #0
 800936a:	6078      	str	r0, [r7, #4]
 800936c:	687b      	ldr	r3, [r7, #4]
 800936e:	4618      	mov	r0, r3
 8009370:	f7ff fdfc 	bl	8008f6c <_ZN8touchgfx8DrawableC1Ev>
 8009374:	4a03      	ldr	r2, [pc, #12]	; (8009384 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8009376:	687b      	ldr	r3, [r7, #4]
 8009378:	601a      	str	r2, [r3, #0]
 800937a:	687b      	ldr	r3, [r7, #4]
 800937c:	4618      	mov	r0, r3
 800937e:	3708      	adds	r7, #8
 8009380:	46bd      	mov	sp, r7
 8009382:	bd80      	pop	{r7, pc}
 8009384:	0801efc4 	.word	0x0801efc4

08009388 <_ZN8touchgfx6WidgetD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Widget() { }
 8009388:	b580      	push	{r7, lr}
 800938a:	b082      	sub	sp, #8
 800938c:	af00      	add	r7, sp, #0
 800938e:	6078      	str	r0, [r7, #4]
 8009390:	4a05      	ldr	r2, [pc, #20]	; (80093a8 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8009392:	687b      	ldr	r3, [r7, #4]
 8009394:	601a      	str	r2, [r3, #0]
 8009396:	687b      	ldr	r3, [r7, #4]
 8009398:	4618      	mov	r0, r3
 800939a:	f7ff fe15 	bl	8008fc8 <_ZN8touchgfx8DrawableD1Ev>
 800939e:	687b      	ldr	r3, [r7, #4]
 80093a0:	4618      	mov	r0, r3
 80093a2:	3708      	adds	r7, #8
 80093a4:	46bd      	mov	sp, r7
 80093a6:	bd80      	pop	{r7, pc}
 80093a8:	0801efc4 	.word	0x0801efc4

080093ac <_ZN8touchgfx6WidgetD0Ev>:
 80093ac:	b580      	push	{r7, lr}
 80093ae:	b082      	sub	sp, #8
 80093b0:	af00      	add	r7, sp, #0
 80093b2:	6078      	str	r0, [r7, #4]
 80093b4:	6878      	ldr	r0, [r7, #4]
 80093b6:	f7ff ffe7 	bl	8009388 <_ZN8touchgfx6WidgetD1Ev>
 80093ba:	2128      	movs	r1, #40	; 0x28
 80093bc:	6878      	ldr	r0, [r7, #4]
 80093be:	f012 fab6 	bl	801b92e <_ZdlPvj>
 80093c2:	687b      	ldr	r3, [r7, #4]
 80093c4:	4618      	mov	r0, r3
 80093c6:	3708      	adds	r7, #8
 80093c8:	46bd      	mov	sp, r7
 80093ca:	bd80      	pop	{r7, pc}

080093cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param x          The point of intersection expressed in coordinates relative to the parent.
     * @param y          The y coordinate.
     * @param [out] last Result will be placed here.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 80093cc:	b580      	push	{r7, lr}
 80093ce:	b084      	sub	sp, #16
 80093d0:	af00      	add	r7, sp, #0
 80093d2:	60f8      	str	r0, [r7, #12]
 80093d4:	607b      	str	r3, [r7, #4]
 80093d6:	460b      	mov	r3, r1
 80093d8:	817b      	strh	r3, [r7, #10]
 80093da:	4613      	mov	r3, r2
 80093dc:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 80093de:	68fb      	ldr	r3, [r7, #12]
 80093e0:	4618      	mov	r0, r3
 80093e2:	f7ff fecd 	bl	8009180 <_ZNK8touchgfx8Drawable9isVisibleEv>
 80093e6:	4603      	mov	r3, r0
 80093e8:	2b00      	cmp	r3, #0
 80093ea:	d008      	beq.n	80093fe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 80093ec:	68fb      	ldr	r3, [r7, #12]
 80093ee:	4618      	mov	r0, r3
 80093f0:	f7ff fed3 	bl	800919a <_ZNK8touchgfx8Drawable11isTouchableEv>
 80093f4:	4603      	mov	r3, r0
 80093f6:	2b00      	cmp	r3, #0
 80093f8:	d001      	beq.n	80093fe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 80093fa:	2301      	movs	r3, #1
 80093fc:	e000      	b.n	8009400 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 80093fe:	2300      	movs	r3, #0
 8009400:	2b00      	cmp	r3, #0
 8009402:	d002      	beq.n	800940a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8009404:	68fa      	ldr	r2, [r7, #12]
 8009406:	687b      	ldr	r3, [r7, #4]
 8009408:	601a      	str	r2, [r3, #0]
        }
    }
 800940a:	bf00      	nop
 800940c:	3710      	adds	r7, #16
 800940e:	46bd      	mov	sp, r7
 8009410:	bd80      	pop	{r7, pc}
	...

08009414 <_ZN8touchgfx3BoxC1Ev>:
     *
     * @brief Constructor.
     *
     *        Constructs a new Box with a default alpha value of 255 (solid)
     */
    Box() : Widget(), alpha(255), color(0), reportAsSolid(false)
 8009414:	b580      	push	{r7, lr}
 8009416:	b082      	sub	sp, #8
 8009418:	af00      	add	r7, sp, #0
 800941a:	6078      	str	r0, [r7, #4]
 800941c:	687b      	ldr	r3, [r7, #4]
 800941e:	4618      	mov	r0, r3
 8009420:	f7ff ffa0 	bl	8009364 <_ZN8touchgfx6WidgetC1Ev>
 8009424:	4a0a      	ldr	r2, [pc, #40]	; (8009450 <_ZN8touchgfx3BoxC1Ev+0x3c>)
 8009426:	687b      	ldr	r3, [r7, #4]
 8009428:	601a      	str	r2, [r3, #0]
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	22ff      	movs	r2, #255	; 0xff
 800942e:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 8009432:	687b      	ldr	r3, [r7, #4]
 8009434:	3328      	adds	r3, #40	; 0x28
 8009436:	2100      	movs	r1, #0
 8009438:	4618      	mov	r0, r3
 800943a:	f7ff fd41 	bl	8008ec0 <_ZN8touchgfx9colortypeC1Em>
 800943e:	687b      	ldr	r3, [r7, #4]
 8009440:	2200      	movs	r2, #0
 8009442:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
    }
 8009446:	687b      	ldr	r3, [r7, #4]
 8009448:	4618      	mov	r0, r3
 800944a:	3708      	adds	r7, #8
 800944c:	46bd      	mov	sp, r7
 800944e:	bd80      	pop	{r7, pc}
 8009450:	08020014 	.word	0x08020014

08009454 <_ZN8touchgfx3BoxD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Box() {}
 8009454:	b580      	push	{r7, lr}
 8009456:	b082      	sub	sp, #8
 8009458:	af00      	add	r7, sp, #0
 800945a:	6078      	str	r0, [r7, #4]
 800945c:	4a05      	ldr	r2, [pc, #20]	; (8009474 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800945e:	687b      	ldr	r3, [r7, #4]
 8009460:	601a      	str	r2, [r3, #0]
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	4618      	mov	r0, r3
 8009466:	f7ff ff8f 	bl	8009388 <_ZN8touchgfx6WidgetD1Ev>
 800946a:	687b      	ldr	r3, [r7, #4]
 800946c:	4618      	mov	r0, r3
 800946e:	3708      	adds	r7, #8
 8009470:	46bd      	mov	sp, r7
 8009472:	bd80      	pop	{r7, pc}
 8009474:	08020014 	.word	0x08020014

08009478 <_ZN8touchgfx3BoxD0Ev>:
 8009478:	b580      	push	{r7, lr}
 800947a:	b082      	sub	sp, #8
 800947c:	af00      	add	r7, sp, #0
 800947e:	6078      	str	r0, [r7, #4]
 8009480:	6878      	ldr	r0, [r7, #4]
 8009482:	f7ff ffe7 	bl	8009454 <_ZN8touchgfx3BoxD1Ev>
 8009486:	2130      	movs	r1, #48	; 0x30
 8009488:	6878      	ldr	r0, [r7, #4]
 800948a:	f012 fa50 	bl	801b92e <_ZdlPvj>
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	4618      	mov	r0, r3
 8009492:	3708      	adds	r7, #8
 8009494:	46bd      	mov	sp, r7
 8009496:	bd80      	pop	{r7, pc}

08009498 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     *        Sets the color of the rectangle.
     *
     * @param color The color of the box.
     */
    void setColor(colortype color)
 8009498:	b480      	push	{r7}
 800949a:	b083      	sub	sp, #12
 800949c:	af00      	add	r7, sp, #0
 800949e:	6078      	str	r0, [r7, #4]
 80094a0:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 80094a2:	687b      	ldr	r3, [r7, #4]
 80094a4:	683a      	ldr	r2, [r7, #0]
 80094a6:	629a      	str	r2, [r3, #40]	; 0x28
    }
 80094a8:	bf00      	nop
 80094aa:	370c      	adds	r7, #12
 80094ac:	46bd      	mov	sp, r7
 80094ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094b2:	4770      	bx	lr

080094b4 <_ZN8touchgfx9TypedTextC1Et>:
    explicit TypedText(const TypedTextId id = TYPED_TEXT_INVALID) : typedTextId(id)
 80094b4:	b480      	push	{r7}
 80094b6:	b083      	sub	sp, #12
 80094b8:	af00      	add	r7, sp, #0
 80094ba:	6078      	str	r0, [r7, #4]
 80094bc:	460b      	mov	r3, r1
 80094be:	807b      	strh	r3, [r7, #2]
 80094c0:	687b      	ldr	r3, [r7, #4]
 80094c2:	887a      	ldrh	r2, [r7, #2]
 80094c4:	801a      	strh	r2, [r3, #0]
    }
 80094c6:	687b      	ldr	r3, [r7, #4]
 80094c8:	4618      	mov	r0, r3
 80094ca:	370c      	adds	r7, #12
 80094cc:	46bd      	mov	sp, r7
 80094ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094d2:	4770      	bx	lr

080094d4 <_ZN8touchgfx8TextAreaC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Create an empty TextArea. Default color is black.
     */
    TextArea()
 80094d4:	b580      	push	{r7, lr}
 80094d6:	b082      	sub	sp, #8
 80094d8:	af00      	add	r7, sp, #0
 80094da:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80094dc:	687b      	ldr	r3, [r7, #4]
 80094de:	4618      	mov	r0, r3
 80094e0:	f7ff ff40 	bl	8009364 <_ZN8touchgfx6WidgetC1Ev>
 80094e4:	4a13      	ldr	r2, [pc, #76]	; (8009534 <_ZN8touchgfx8TextAreaC1Ev+0x60>)
 80094e6:	687b      	ldr	r3, [r7, #4]
 80094e8:	601a      	str	r2, [r3, #0]
 80094ea:	687b      	ldr	r3, [r7, #4]
 80094ec:	3326      	adds	r3, #38	; 0x26
 80094ee:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80094f2:	4618      	mov	r0, r3
 80094f4:	f7ff ffde 	bl	80094b4 <_ZN8touchgfx9TypedTextC1Et>
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	3328      	adds	r3, #40	; 0x28
 80094fc:	2100      	movs	r1, #0
 80094fe:	4618      	mov	r0, r3
 8009500:	f7ff fcde 	bl	8008ec0 <_ZN8touchgfx9colortypeC1Em>
 8009504:	687b      	ldr	r3, [r7, #4]
 8009506:	2200      	movs	r2, #0
 8009508:	859a      	strh	r2, [r3, #44]	; 0x2c
 800950a:	687b      	ldr	r3, [r7, #4]
 800950c:	22ff      	movs	r2, #255	; 0xff
 800950e:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 8009512:	687b      	ldr	r3, [r7, #4]
 8009514:	2200      	movs	r2, #0
 8009516:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
 800951a:	687b      	ldr	r3, [r7, #4]
 800951c:	2200      	movs	r2, #0
 800951e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 8009522:	687b      	ldr	r3, [r7, #4]
 8009524:	2200      	movs	r2, #0
 8009526:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
    {
    }
 800952a:	687b      	ldr	r3, [r7, #4]
 800952c:	4618      	mov	r0, r3
 800952e:	3708      	adds	r7, #8
 8009530:	46bd      	mov	sp, r7
 8009532:	bd80      	pop	{r7, pc}
 8009534:	0801ff98 	.word	0x0801ff98

08009538 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>:
     *
     *        Sets the color of the text.
     *
     * @param color The color to use.
     */
    inline void setColor(colortype color)
 8009538:	b480      	push	{r7}
 800953a:	b083      	sub	sp, #12
 800953c:	af00      	add	r7, sp, #0
 800953e:	6078      	str	r0, [r7, #4]
 8009540:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	683a      	ldr	r2, [r7, #0]
 8009546:	629a      	str	r2, [r3, #40]	; 0x28
    }
 8009548:	bf00      	nop
 800954a:	370c      	adds	r7, #12
 800954c:	46bd      	mov	sp, r7
 800954e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009552:	4770      	bx	lr

08009554 <_ZN8touchgfx8TextArea14setLinespacingEs>:
     *
     *        Sets the line spacing of the TextArea.
     *
     * @param space The line spacing of use in the TextArea.
     */
    inline void setLinespacing(int16_t space)
 8009554:	b480      	push	{r7}
 8009556:	b083      	sub	sp, #12
 8009558:	af00      	add	r7, sp, #0
 800955a:	6078      	str	r0, [r7, #4]
 800955c:	460b      	mov	r3, r1
 800955e:	807b      	strh	r3, [r7, #2]
    {
        linespace = space;
 8009560:	687b      	ldr	r3, [r7, #4]
 8009562:	887a      	ldrh	r2, [r7, #2]
 8009564:	859a      	strh	r2, [r3, #44]	; 0x2c
    }
 8009566:	bf00      	nop
 8009568:	370c      	adds	r7, #12
 800956a:	46bd      	mov	sp, r7
 800956c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009570:	4770      	bx	lr
	...

08009574 <_ZN8touchgfx14AbstractButtonD1Ev>:
 *        clickable element that has two states - pressed or released - and executes an action
 *        when the pressed->released transition is made.
 *
 * @see Widget
 */
class AbstractButton : public Widget
 8009574:	b580      	push	{r7, lr}
 8009576:	b082      	sub	sp, #8
 8009578:	af00      	add	r7, sp, #0
 800957a:	6078      	str	r0, [r7, #4]
 800957c:	4a05      	ldr	r2, [pc, #20]	; (8009594 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	601a      	str	r2, [r3, #0]
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	4618      	mov	r0, r3
 8009586:	f7ff feff 	bl	8009388 <_ZN8touchgfx6WidgetD1Ev>
 800958a:	687b      	ldr	r3, [r7, #4]
 800958c:	4618      	mov	r0, r3
 800958e:	3708      	adds	r7, #8
 8009590:	46bd      	mov	sp, r7
 8009592:	bd80      	pop	{r7, pc}
 8009594:	0801febc 	.word	0x0801febc

08009598 <_ZN8touchgfx14AbstractButtonD0Ev>:
 8009598:	b580      	push	{r7, lr}
 800959a:	b082      	sub	sp, #8
 800959c:	af00      	add	r7, sp, #0
 800959e:	6078      	str	r0, [r7, #4]
 80095a0:	6878      	ldr	r0, [r7, #4]
 80095a2:	f7ff ffe7 	bl	8009574 <_ZN8touchgfx14AbstractButtonD1Ev>
 80095a6:	2130      	movs	r1, #48	; 0x30
 80095a8:	6878      	ldr	r0, [r7, #4]
 80095aa:	f012 f9c0 	bl	801b92e <_ZdlPvj>
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	4618      	mov	r0, r3
 80095b2:	3708      	adds	r7, #8
 80095b4:	46bd      	mov	sp, r7
 80095b6:	bd80      	pop	{r7, pc}

080095b8 <_ZN8touchgfx6ButtonD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Button() { }
 80095b8:	b580      	push	{r7, lr}
 80095ba:	b082      	sub	sp, #8
 80095bc:	af00      	add	r7, sp, #0
 80095be:	6078      	str	r0, [r7, #4]
 80095c0:	4a05      	ldr	r2, [pc, #20]	; (80095d8 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 80095c2:	687b      	ldr	r3, [r7, #4]
 80095c4:	601a      	str	r2, [r3, #0]
 80095c6:	687b      	ldr	r3, [r7, #4]
 80095c8:	4618      	mov	r0, r3
 80095ca:	f7ff ffd3 	bl	8009574 <_ZN8touchgfx14AbstractButtonD1Ev>
 80095ce:	687b      	ldr	r3, [r7, #4]
 80095d0:	4618      	mov	r0, r3
 80095d2:	3708      	adds	r7, #8
 80095d4:	46bd      	mov	sp, r7
 80095d6:	bd80      	pop	{r7, pc}
 80095d8:	080200e0 	.word	0x080200e0

080095dc <_ZN8touchgfx6ButtonD0Ev>:
 80095dc:	b580      	push	{r7, lr}
 80095de:	b082      	sub	sp, #8
 80095e0:	af00      	add	r7, sp, #0
 80095e2:	6078      	str	r0, [r7, #4]
 80095e4:	6878      	ldr	r0, [r7, #4]
 80095e6:	f7ff ffe7 	bl	80095b8 <_ZN8touchgfx6ButtonD1Ev>
 80095ea:	2134      	movs	r1, #52	; 0x34
 80095ec:	6878      	ldr	r0, [r7, #4]
 80095ee:	f012 f99e 	bl	801b92e <_ZdlPvj>
 80095f2:	687b      	ldr	r3, [r7, #4]
 80095f4:	4618      	mov	r0, r3
 80095f6:	3708      	adds	r7, #8
 80095f8:	46bd      	mov	sp, r7
 80095fa:	bd80      	pop	{r7, pc}

080095fc <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
     * @param bmpReleased The bitmap to show in the "normal" state, ie when button is not pressed.
     * @param bmpPressed  The bitmap to show when the button is pressed.
     *
     * @see Button::setBitmaps
     */
    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
 80095fc:	b580      	push	{r7, lr}
 80095fe:	b084      	sub	sp, #16
 8009600:	af00      	add	r7, sp, #0
 8009602:	60f8      	str	r0, [r7, #12]
 8009604:	60b9      	str	r1, [r7, #8]
 8009606:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bmpPressed;
 8009608:	68fb      	ldr	r3, [r7, #12]
 800960a:	687a      	ldr	r2, [r7, #4]
 800960c:	8812      	ldrh	r2, [r2, #0]
 800960e:	869a      	strh	r2, [r3, #52]	; 0x34
        Button::setBitmaps(bmpReleased, bmpPressed);
 8009610:	68fb      	ldr	r3, [r7, #12]
 8009612:	687a      	ldr	r2, [r7, #4]
 8009614:	68b9      	ldr	r1, [r7, #8]
 8009616:	4618      	mov	r0, r3
 8009618:	f003 feaa 	bl	800d370 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 800961c:	bf00      	nop
 800961e:	3710      	adds	r7, #16
 8009620:	46bd      	mov	sp, r7
 8009622:	bd80      	pop	{r7, pc}

08009624 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 8009624:	b580      	push	{r7, lr}
 8009626:	b082      	sub	sp, #8
 8009628:	af00      	add	r7, sp, #0
 800962a:	6078      	str	r0, [r7, #4]
 800962c:	4a05      	ldr	r2, [pc, #20]	; (8009644 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 800962e:	687b      	ldr	r3, [r7, #4]
 8009630:	601a      	str	r2, [r3, #0]
 8009632:	687b      	ldr	r3, [r7, #4]
 8009634:	4618      	mov	r0, r3
 8009636:	f7ff fe2d 	bl	8009294 <_ZN8touchgfx6ScreenD1Ev>
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	4618      	mov	r0, r3
 800963e:	3708      	adds	r7, #8
 8009640:	46bd      	mov	sp, r7
 8009642:	bd80      	pop	{r7, pc}
 8009644:	0801ef90 	.word	0x0801ef90

08009648 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 8009648:	b580      	push	{r7, lr}
 800964a:	b082      	sub	sp, #8
 800964c:	af00      	add	r7, sp, #0
 800964e:	6078      	str	r0, [r7, #4]
 8009650:	6878      	ldr	r0, [r7, #4]
 8009652:	f7ff ffe7 	bl	8009624 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 8009656:	2140      	movs	r1, #64	; 0x40
 8009658:	6878      	ldr	r0, [r7, #4]
 800965a:	f012 f968 	bl	801b92e <_ZdlPvj>
 800965e:	687b      	ldr	r3, [r7, #4]
 8009660:	4618      	mov	r0, r3
 8009662:	3708      	adds	r7, #8
 8009664:	46bd      	mov	sp, r7
 8009666:	bd80      	pop	{r7, pc}

08009668 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8009668:	b580      	push	{r7, lr}
 800966a:	b082      	sub	sp, #8
 800966c:	af00      	add	r7, sp, #0
 800966e:	6078      	str	r0, [r7, #4]
 8009670:	4a1e      	ldr	r2, [pc, #120]	; (80096ec <_ZN15Screen1ViewBaseD1Ev+0x84>)
 8009672:	687b      	ldr	r3, [r7, #4]
 8009674:	601a      	str	r2, [r3, #0]
 8009676:	687b      	ldr	r3, [r7, #4]
 8009678:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 800967c:	4618      	mov	r0, r3
 800967e:	f000 fa6d 	bl	8009b5c <_ZN8touchgfx8TextAreaD1Ev>
 8009682:	687b      	ldr	r3, [r7, #4]
 8009684:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 8009688:	4618      	mov	r0, r3
 800968a:	f000 fa67 	bl	8009b5c <_ZN8touchgfx8TextAreaD1Ev>
 800968e:	687b      	ldr	r3, [r7, #4]
 8009690:	f503 73ba 	add.w	r3, r3, #372	; 0x174
 8009694:	4618      	mov	r0, r3
 8009696:	f000 fa83 	bl	8009ba0 <_ZN8touchgfx12ToggleButtonD1Ev>
 800969a:	687b      	ldr	r3, [r7, #4]
 800969c:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 80096a0:	4618      	mov	r0, r3
 80096a2:	f000 fa5b 	bl	8009b5c <_ZN8touchgfx8TextAreaD1Ev>
 80096a6:	687b      	ldr	r3, [r7, #4]
 80096a8:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 80096ac:	4618      	mov	r0, r3
 80096ae:	f000 fa55 	bl	8009b5c <_ZN8touchgfx8TextAreaD1Ev>
 80096b2:	687b      	ldr	r3, [r7, #4]
 80096b4:	33d8      	adds	r3, #216	; 0xd8
 80096b6:	4618      	mov	r0, r3
 80096b8:	f000 fa50 	bl	8009b5c <_ZN8touchgfx8TextAreaD1Ev>
 80096bc:	687b      	ldr	r3, [r7, #4]
 80096be:	33a4      	adds	r3, #164	; 0xa4
 80096c0:	4618      	mov	r0, r3
 80096c2:	f000 fa4b 	bl	8009b5c <_ZN8touchgfx8TextAreaD1Ev>
 80096c6:	687b      	ldr	r3, [r7, #4]
 80096c8:	3370      	adds	r3, #112	; 0x70
 80096ca:	4618      	mov	r0, r3
 80096cc:	f000 fa46 	bl	8009b5c <_ZN8touchgfx8TextAreaD1Ev>
 80096d0:	687b      	ldr	r3, [r7, #4]
 80096d2:	3340      	adds	r3, #64	; 0x40
 80096d4:	4618      	mov	r0, r3
 80096d6:	f7ff febd 	bl	8009454 <_ZN8touchgfx3BoxD1Ev>
 80096da:	687b      	ldr	r3, [r7, #4]
 80096dc:	4618      	mov	r0, r3
 80096de:	f7ff ffa1 	bl	8009624 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 80096e2:	687b      	ldr	r3, [r7, #4]
 80096e4:	4618      	mov	r0, r3
 80096e6:	3708      	adds	r7, #8
 80096e8:	46bd      	mov	sp, r7
 80096ea:	bd80      	pop	{r7, pc}
 80096ec:	0801ef5c 	.word	0x0801ef5c

080096f0 <_ZN15Screen1ViewBaseD0Ev>:
 80096f0:	b580      	push	{r7, lr}
 80096f2:	b082      	sub	sp, #8
 80096f4:	af00      	add	r7, sp, #0
 80096f6:	6078      	str	r0, [r7, #4]
 80096f8:	6878      	ldr	r0, [r7, #4]
 80096fa:	f7ff ffb5 	bl	8009668 <_ZN15Screen1ViewBaseD1Ev>
 80096fe:	f44f 7105 	mov.w	r1, #532	; 0x214
 8009702:	6878      	ldr	r0, [r7, #4]
 8009704:	f012 f913 	bl	801b92e <_ZdlPvj>
 8009708:	687b      	ldr	r3, [r7, #4]
 800970a:	4618      	mov	r0, r3
 800970c:	3708      	adds	r7, #8
 800970e:	46bd      	mov	sp, r7
 8009710:	bd80      	pop	{r7, pc}
	...

08009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     * @param green Value of the green part (0-255).
     * @param blue  Value of the blue part (0-255).
     *
     * @return The color representation depending on LCD color format.
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8009714:	b590      	push	{r4, r7, lr}
 8009716:	b083      	sub	sp, #12
 8009718:	af00      	add	r7, sp, #0
 800971a:	4603      	mov	r3, r0
 800971c:	71fb      	strb	r3, [r7, #7]
 800971e:	460b      	mov	r3, r1
 8009720:	71bb      	strb	r3, [r7, #6]
 8009722:	4613      	mov	r3, r2
 8009724:	717b      	strb	r3, [r7, #5]
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 8009726:	f7fe ffaf 	bl	8008688 <_ZN8touchgfx3HAL11getInstanceEv>
 800972a:	4603      	mov	r3, r0
 800972c:	2b00      	cmp	r3, #0
 800972e:	d105      	bne.n	800973c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x28>
 8009730:	4b0a      	ldr	r3, [pc, #40]	; (800975c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x48>)
 8009732:	4a0b      	ldr	r2, [pc, #44]	; (8009760 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x4c>)
 8009734:	2138      	movs	r1, #56	; 0x38
 8009736:	480b      	ldr	r0, [pc, #44]	; (8009764 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x50>)
 8009738:	f012 f928 	bl	801b98c <__assert_func>
 800973c:	bf00      	nop
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 800973e:	f7fe ffaf 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 8009742:	6803      	ldr	r3, [r0, #0]
 8009744:	332c      	adds	r3, #44	; 0x2c
 8009746:	681c      	ldr	r4, [r3, #0]
 8009748:	797b      	ldrb	r3, [r7, #5]
 800974a:	79ba      	ldrb	r2, [r7, #6]
 800974c:	79f9      	ldrb	r1, [r7, #7]
 800974e:	47a0      	blx	r4
 8009750:	4603      	mov	r3, r0
    }
 8009752:	4618      	mov	r0, r3
 8009754:	370c      	adds	r7, #12
 8009756:	46bd      	mov	sp, r7
 8009758:	bd90      	pop	{r4, r7, pc}
 800975a:	bf00      	nop
 800975c:	0801ead8 	.word	0x0801ead8
 8009760:	0801eb1c 	.word	0x0801eb1c
 8009764:	0801eb78 	.word	0x0801eb78

08009768 <_ZN15Screen1ViewBaseC1Ev>:
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

Screen1ViewBase::Screen1ViewBase()
 8009768:	b590      	push	{r4, r7, lr}
 800976a:	b08f      	sub	sp, #60	; 0x3c
 800976c:	af02      	add	r7, sp, #8
 800976e:	6078      	str	r0, [r7, #4]
 8009770:	687b      	ldr	r3, [r7, #4]
 8009772:	4618      	mov	r0, r3
 8009774:	f000 f9dc 	bl	8009b30 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 8009778:	4adc      	ldr	r2, [pc, #880]	; (8009aec <_ZN15Screen1ViewBaseC1Ev+0x384>)
 800977a:	687b      	ldr	r3, [r7, #4]
 800977c:	601a      	str	r2, [r3, #0]
 800977e:	687b      	ldr	r3, [r7, #4]
 8009780:	3340      	adds	r3, #64	; 0x40
 8009782:	4618      	mov	r0, r3
 8009784:	f7ff fe46 	bl	8009414 <_ZN8touchgfx3BoxC1Ev>
 8009788:	687b      	ldr	r3, [r7, #4]
 800978a:	3370      	adds	r3, #112	; 0x70
 800978c:	4618      	mov	r0, r3
 800978e:	f7ff fea1 	bl	80094d4 <_ZN8touchgfx8TextAreaC1Ev>
 8009792:	687b      	ldr	r3, [r7, #4]
 8009794:	33a4      	adds	r3, #164	; 0xa4
 8009796:	4618      	mov	r0, r3
 8009798:	f7ff fe9c 	bl	80094d4 <_ZN8touchgfx8TextAreaC1Ev>
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	33d8      	adds	r3, #216	; 0xd8
 80097a0:	4618      	mov	r0, r3
 80097a2:	f7ff fe97 	bl	80094d4 <_ZN8touchgfx8TextAreaC1Ev>
 80097a6:	687b      	ldr	r3, [r7, #4]
 80097a8:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 80097ac:	4618      	mov	r0, r3
 80097ae:	f7ff fe91 	bl	80094d4 <_ZN8touchgfx8TextAreaC1Ev>
 80097b2:	687b      	ldr	r3, [r7, #4]
 80097b4:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 80097b8:	4618      	mov	r0, r3
 80097ba:	f7ff fe8b 	bl	80094d4 <_ZN8touchgfx8TextAreaC1Ev>
 80097be:	687b      	ldr	r3, [r7, #4]
 80097c0:	f503 73ba 	add.w	r3, r3, #372	; 0x174
 80097c4:	4618      	mov	r0, r3
 80097c6:	f003 fc39 	bl	800d03c <_ZN8touchgfx12ToggleButtonC1Ev>
 80097ca:	687b      	ldr	r3, [r7, #4]
 80097cc:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 80097d0:	4618      	mov	r0, r3
 80097d2:	f7ff fe7f 	bl	80094d4 <_ZN8touchgfx8TextAreaC1Ev>
 80097d6:	687b      	ldr	r3, [r7, #4]
 80097d8:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 80097dc:	4618      	mov	r0, r3
 80097de:	f7ff fe79 	bl	80094d4 <_ZN8touchgfx8TextAreaC1Ev>
{

    box1.setPosition(0, 0, 240, 320);
 80097e2:	687b      	ldr	r3, [r7, #4]
 80097e4:	f103 0040 	add.w	r0, r3, #64	; 0x40
 80097e8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80097ec:	9300      	str	r3, [sp, #0]
 80097ee:	23f0      	movs	r3, #240	; 0xf0
 80097f0:	2200      	movs	r2, #0
 80097f2:	2100      	movs	r1, #0
 80097f4:	f7ff fc08 	bl	8009008 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80097f8:	687b      	ldr	r3, [r7, #4]
 80097fa:	f103 0440 	add.w	r4, r3, #64	; 0x40
 80097fe:	22ff      	movs	r2, #255	; 0xff
 8009800:	21ff      	movs	r1, #255	; 0xff
 8009802:	20ff      	movs	r0, #255	; 0xff
 8009804:	f7ff ff86 	bl	8009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8009808:	4603      	mov	r3, r0
 800980a:	4619      	mov	r1, r3
 800980c:	4620      	mov	r0, r4
 800980e:	f7ff fe43 	bl	8009498 <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    textArea1.setXY(24, 0);
 8009812:	687b      	ldr	r3, [r7, #4]
 8009814:	3370      	adds	r3, #112	; 0x70
 8009816:	2200      	movs	r2, #0
 8009818:	2118      	movs	r1, #24
 800981a:	4618      	mov	r0, r3
 800981c:	f7ff fc3f 	bl	800909e <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8009820:	687b      	ldr	r3, [r7, #4]
 8009822:	f103 0470 	add.w	r4, r3, #112	; 0x70
 8009826:	2200      	movs	r2, #0
 8009828:	2100      	movs	r1, #0
 800982a:	2000      	movs	r0, #0
 800982c:	f7ff ff72 	bl	8009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8009830:	4603      	mov	r3, r0
 8009832:	4619      	mov	r1, r3
 8009834:	4620      	mov	r0, r4
 8009836:	f7ff fe7f 	bl	8009538 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea1.setLinespacing(0);
 800983a:	687b      	ldr	r3, [r7, #4]
 800983c:	3370      	adds	r3, #112	; 0x70
 800983e:	2100      	movs	r1, #0
 8009840:	4618      	mov	r0, r3
 8009842:	f7ff fe87 	bl	8009554 <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8009846:	687b      	ldr	r3, [r7, #4]
 8009848:	f103 0470 	add.w	r4, r3, #112	; 0x70
 800984c:	f107 030c 	add.w	r3, r7, #12
 8009850:	2100      	movs	r1, #0
 8009852:	4618      	mov	r0, r3
 8009854:	f7ff fe2e 	bl	80094b4 <_ZN8touchgfx9TypedTextC1Et>
 8009858:	89b9      	ldrh	r1, [r7, #12]
 800985a:	4620      	mov	r0, r4
 800985c:	f003 fd4e 	bl	800d2fc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2.setXY(18, 58);
 8009860:	687b      	ldr	r3, [r7, #4]
 8009862:	33a4      	adds	r3, #164	; 0xa4
 8009864:	223a      	movs	r2, #58	; 0x3a
 8009866:	2112      	movs	r1, #18
 8009868:	4618      	mov	r0, r3
 800986a:	f7ff fc18 	bl	800909e <_ZN8touchgfx8Drawable5setXYEss>
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800986e:	687b      	ldr	r3, [r7, #4]
 8009870:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8009874:	2200      	movs	r2, #0
 8009876:	2100      	movs	r1, #0
 8009878:	2000      	movs	r0, #0
 800987a:	f7ff ff4b 	bl	8009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800987e:	4603      	mov	r3, r0
 8009880:	4619      	mov	r1, r3
 8009882:	4620      	mov	r0, r4
 8009884:	f7ff fe58 	bl	8009538 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2.setLinespacing(0);
 8009888:	687b      	ldr	r3, [r7, #4]
 800988a:	33a4      	adds	r3, #164	; 0xa4
 800988c:	2100      	movs	r1, #0
 800988e:	4618      	mov	r0, r3
 8009890:	f7ff fe60 	bl	8009554 <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 8009894:	687b      	ldr	r3, [r7, #4]
 8009896:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 800989a:	f107 0310 	add.w	r3, r7, #16
 800989e:	2101      	movs	r1, #1
 80098a0:	4618      	mov	r0, r3
 80098a2:	f7ff fe07 	bl	80094b4 <_ZN8touchgfx9TypedTextC1Et>
 80098a6:	8a39      	ldrh	r1, [r7, #16]
 80098a8:	4620      	mov	r0, r4
 80098aa:	f003 fd27 	bl	800d2fc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2_2.setXY(103, 115);
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	33d8      	adds	r3, #216	; 0xd8
 80098b2:	2273      	movs	r2, #115	; 0x73
 80098b4:	2167      	movs	r1, #103	; 0x67
 80098b6:	4618      	mov	r0, r3
 80098b8:	f7ff fbf1 	bl	800909e <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80098bc:	687b      	ldr	r3, [r7, #4]
 80098be:	f103 04d8 	add.w	r4, r3, #216	; 0xd8
 80098c2:	2200      	movs	r2, #0
 80098c4:	2100      	movs	r1, #0
 80098c6:	2000      	movs	r0, #0
 80098c8:	f7ff ff24 	bl	8009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80098cc:	4603      	mov	r3, r0
 80098ce:	4619      	mov	r1, r3
 80098d0:	4620      	mov	r0, r4
 80098d2:	f7ff fe31 	bl	8009538 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_2.setLinespacing(0);
 80098d6:	687b      	ldr	r3, [r7, #4]
 80098d8:	33d8      	adds	r3, #216	; 0xd8
 80098da:	2100      	movs	r1, #0
 80098dc:	4618      	mov	r0, r3
 80098de:	f7ff fe39 	bl	8009554 <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
 80098e2:	687b      	ldr	r3, [r7, #4]
 80098e4:	f103 04d8 	add.w	r4, r3, #216	; 0xd8
 80098e8:	f107 0314 	add.w	r3, r7, #20
 80098ec:	2102      	movs	r1, #2
 80098ee:	4618      	mov	r0, r3
 80098f0:	f7ff fde0 	bl	80094b4 <_ZN8touchgfx9TypedTextC1Et>
 80098f4:	8ab9      	ldrh	r1, [r7, #20]
 80098f6:	4620      	mov	r0, r4
 80098f8:	f003 fd00 	bl	800d2fc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2_3.setXY(40, 231);
 80098fc:	687b      	ldr	r3, [r7, #4]
 80098fe:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 8009902:	22e7      	movs	r2, #231	; 0xe7
 8009904:	2128      	movs	r1, #40	; 0x28
 8009906:	4618      	mov	r0, r3
 8009908:	f7ff fbc9 	bl	800909e <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_3.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	f503 7486 	add.w	r4, r3, #268	; 0x10c
 8009912:	2200      	movs	r2, #0
 8009914:	2100      	movs	r1, #0
 8009916:	2000      	movs	r0, #0
 8009918:	f7ff fefc 	bl	8009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800991c:	4603      	mov	r3, r0
 800991e:	4619      	mov	r1, r3
 8009920:	4620      	mov	r0, r4
 8009922:	f7ff fe09 	bl	8009538 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_3.setLinespacing(0);
 8009926:	687b      	ldr	r3, [r7, #4]
 8009928:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 800992c:	2100      	movs	r1, #0
 800992e:	4618      	mov	r0, r3
 8009930:	f7ff fe10 	bl	8009554 <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));
 8009934:	687b      	ldr	r3, [r7, #4]
 8009936:	f503 7486 	add.w	r4, r3, #268	; 0x10c
 800993a:	f107 0318 	add.w	r3, r7, #24
 800993e:	2103      	movs	r1, #3
 8009940:	4618      	mov	r0, r3
 8009942:	f7ff fdb7 	bl	80094b4 <_ZN8touchgfx9TypedTextC1Et>
 8009946:	8b39      	ldrh	r1, [r7, #24]
 8009948:	4620      	mov	r0, r4
 800994a:	f003 fcd7 	bl	800d2fc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2_4.setXY(52, 83);
 800994e:	687b      	ldr	r3, [r7, #4]
 8009950:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8009954:	2253      	movs	r2, #83	; 0x53
 8009956:	2134      	movs	r1, #52	; 0x34
 8009958:	4618      	mov	r0, r3
 800995a:	f7ff fba0 	bl	800909e <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_4.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800995e:	687b      	ldr	r3, [r7, #4]
 8009960:	f503 74a0 	add.w	r4, r3, #320	; 0x140
 8009964:	2200      	movs	r2, #0
 8009966:	2100      	movs	r1, #0
 8009968:	2000      	movs	r0, #0
 800996a:	f7ff fed3 	bl	8009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800996e:	4603      	mov	r3, r0
 8009970:	4619      	mov	r1, r3
 8009972:	4620      	mov	r0, r4
 8009974:	f7ff fde0 	bl	8009538 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_4.setLinespacing(0);
 8009978:	687b      	ldr	r3, [r7, #4]
 800997a:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 800997e:	2100      	movs	r1, #0
 8009980:	4618      	mov	r0, r3
 8009982:	f7ff fde7 	bl	8009554 <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID11));
 8009986:	687b      	ldr	r3, [r7, #4]
 8009988:	f503 74a0 	add.w	r4, r3, #320	; 0x140
 800998c:	f107 031c 	add.w	r3, r7, #28
 8009990:	2104      	movs	r1, #4
 8009992:	4618      	mov	r0, r3
 8009994:	f7ff fd8e 	bl	80094b4 <_ZN8touchgfx9TypedTextC1Et>
 8009998:	8bb9      	ldrh	r1, [r7, #28]
 800999a:	4620      	mov	r0, r4
 800999c:	f003 fcae 	bl	800d2fc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    toggleButton1.setXY(52, 244);
 80099a0:	687b      	ldr	r3, [r7, #4]
 80099a2:	f503 73ba 	add.w	r3, r3, #372	; 0x174
 80099a6:	22f4      	movs	r2, #244	; 0xf4
 80099a8:	2134      	movs	r1, #52	; 0x34
 80099aa:	4618      	mov	r0, r3
 80099ac:	f7ff fb77 	bl	800909e <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
 80099b0:	687b      	ldr	r3, [r7, #4]
 80099b2:	f503 74ba 	add.w	r4, r3, #372	; 0x174
 80099b6:	f107 0320 	add.w	r3, r7, #32
 80099ba:	2100      	movs	r1, #0
 80099bc:	4618      	mov	r0, r3
 80099be:	f7ff fac5 	bl	8008f4c <_ZN8touchgfx6BitmapC1Et>
 80099c2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80099c6:	2101      	movs	r1, #1
 80099c8:	4618      	mov	r0, r3
 80099ca:	f7ff fabf 	bl	8008f4c <_ZN8touchgfx6BitmapC1Et>
 80099ce:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80099d2:	f107 0320 	add.w	r3, r7, #32
 80099d6:	4619      	mov	r1, r3
 80099d8:	4620      	mov	r0, r4
 80099da:	f7ff fe0f 	bl	80095fc <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>

    textArea2_5.setXY(18, 195);
 80099de:	687b      	ldr	r3, [r7, #4]
 80099e0:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 80099e4:	22c3      	movs	r2, #195	; 0xc3
 80099e6:	2112      	movs	r1, #18
 80099e8:	4618      	mov	r0, r3
 80099ea:	f7ff fb58 	bl	800909e <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_5.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80099ee:	687b      	ldr	r3, [r7, #4]
 80099f0:	f503 74d6 	add.w	r4, r3, #428	; 0x1ac
 80099f4:	2200      	movs	r2, #0
 80099f6:	2100      	movs	r1, #0
 80099f8:	2000      	movs	r0, #0
 80099fa:	f7ff fe8b 	bl	8009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80099fe:	4603      	mov	r3, r0
 8009a00:	4619      	mov	r1, r3
 8009a02:	4620      	mov	r0, r4
 8009a04:	f7ff fd98 	bl	8009538 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_5.setLinespacing(0);
 8009a08:	687b      	ldr	r3, [r7, #4]
 8009a0a:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 8009a0e:	2100      	movs	r1, #0
 8009a10:	4618      	mov	r0, r3
 8009a12:	f7ff fd9f 	bl	8009554 <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));
 8009a16:	687b      	ldr	r3, [r7, #4]
 8009a18:	f503 74d6 	add.w	r4, r3, #428	; 0x1ac
 8009a1c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8009a20:	2105      	movs	r1, #5
 8009a22:	4618      	mov	r0, r3
 8009a24:	f7ff fd46 	bl	80094b4 <_ZN8touchgfx9TypedTextC1Et>
 8009a28:	8d39      	ldrh	r1, [r7, #40]	; 0x28
 8009a2a:	4620      	mov	r0, r4
 8009a2c:	f003 fc66 	bl	800d2fc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    textArea2_5_1.setXY(161, 195);
 8009a30:	687b      	ldr	r3, [r7, #4]
 8009a32:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8009a36:	22c3      	movs	r2, #195	; 0xc3
 8009a38:	21a1      	movs	r1, #161	; 0xa1
 8009a3a:	4618      	mov	r0, r3
 8009a3c:	f7ff fb2f 	bl	800909e <_ZN8touchgfx8Drawable5setXYEss>
    textArea2_5_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8009a40:	687b      	ldr	r3, [r7, #4]
 8009a42:	f503 74f0 	add.w	r4, r3, #480	; 0x1e0
 8009a46:	2200      	movs	r2, #0
 8009a48:	2100      	movs	r1, #0
 8009a4a:	2000      	movs	r0, #0
 8009a4c:	f7ff fe62 	bl	8009714 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8009a50:	4603      	mov	r3, r0
 8009a52:	4619      	mov	r1, r3
 8009a54:	4620      	mov	r0, r4
 8009a56:	f7ff fd6f 	bl	8009538 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea2_5_1.setLinespacing(0);
 8009a5a:	687b      	ldr	r3, [r7, #4]
 8009a5c:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8009a60:	2100      	movs	r1, #0
 8009a62:	4618      	mov	r0, r3
 8009a64:	f7ff fd76 	bl	8009554 <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea2_5_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID13));
 8009a68:	687b      	ldr	r3, [r7, #4]
 8009a6a:	f503 74f0 	add.w	r4, r3, #480	; 0x1e0
 8009a6e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8009a72:	2106      	movs	r1, #6
 8009a74:	4618      	mov	r0, r3
 8009a76:	f7ff fd1d 	bl	80094b4 <_ZN8touchgfx9TypedTextC1Et>
 8009a7a:	8db9      	ldrh	r1, [r7, #44]	; 0x2c
 8009a7c:	4620      	mov	r0, r4
 8009a7e:	f003 fc3d 	bl	800d2fc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    add(box1);
 8009a82:	687a      	ldr	r2, [r7, #4]
 8009a84:	687b      	ldr	r3, [r7, #4]
 8009a86:	3340      	adds	r3, #64	; 0x40
 8009a88:	4619      	mov	r1, r3
 8009a8a:	4610      	mov	r0, r2
 8009a8c:	f7ff fc5a 	bl	8009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea1);
 8009a90:	687a      	ldr	r2, [r7, #4]
 8009a92:	687b      	ldr	r3, [r7, #4]
 8009a94:	3370      	adds	r3, #112	; 0x70
 8009a96:	4619      	mov	r1, r3
 8009a98:	4610      	mov	r0, r2
 8009a9a:	f7ff fc53 	bl	8009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2);
 8009a9e:	687a      	ldr	r2, [r7, #4]
 8009aa0:	687b      	ldr	r3, [r7, #4]
 8009aa2:	33a4      	adds	r3, #164	; 0xa4
 8009aa4:	4619      	mov	r1, r3
 8009aa6:	4610      	mov	r0, r2
 8009aa8:	f7ff fc4c 	bl	8009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2_2);
 8009aac:	687a      	ldr	r2, [r7, #4]
 8009aae:	687b      	ldr	r3, [r7, #4]
 8009ab0:	33d8      	adds	r3, #216	; 0xd8
 8009ab2:	4619      	mov	r1, r3
 8009ab4:	4610      	mov	r0, r2
 8009ab6:	f7ff fc45 	bl	8009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2_3);
 8009aba:	687a      	ldr	r2, [r7, #4]
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	f503 7386 	add.w	r3, r3, #268	; 0x10c
 8009ac2:	4619      	mov	r1, r3
 8009ac4:	4610      	mov	r0, r2
 8009ac6:	f7ff fc3d 	bl	8009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2_4);
 8009aca:	687a      	ldr	r2, [r7, #4]
 8009acc:	687b      	ldr	r3, [r7, #4]
 8009ace:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8009ad2:	4619      	mov	r1, r3
 8009ad4:	4610      	mov	r0, r2
 8009ad6:	f7ff fc35 	bl	8009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(toggleButton1);
 8009ada:	687a      	ldr	r2, [r7, #4]
 8009adc:	687b      	ldr	r3, [r7, #4]
 8009ade:	f503 73ba 	add.w	r3, r3, #372	; 0x174
 8009ae2:	4619      	mov	r1, r3
 8009ae4:	4610      	mov	r0, r2
 8009ae6:	f7ff fc2d 	bl	8009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
 8009aea:	e001      	b.n	8009af0 <_ZN15Screen1ViewBaseC1Ev+0x388>
 8009aec:	0801ef5c 	.word	0x0801ef5c
    add(textArea2_5);
 8009af0:	687a      	ldr	r2, [r7, #4]
 8009af2:	687b      	ldr	r3, [r7, #4]
 8009af4:	f503 73d6 	add.w	r3, r3, #428	; 0x1ac
 8009af8:	4619      	mov	r1, r3
 8009afa:	4610      	mov	r0, r2
 8009afc:	f7ff fc22 	bl	8009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea2_5_1);
 8009b00:	687a      	ldr	r2, [r7, #4]
 8009b02:	687b      	ldr	r3, [r7, #4]
 8009b04:	f503 73f0 	add.w	r3, r3, #480	; 0x1e0
 8009b08:	4619      	mov	r1, r3
 8009b0a:	4610      	mov	r0, r2
 8009b0c:	f7ff fc1a 	bl	8009344 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 8009b10:	687b      	ldr	r3, [r7, #4]
 8009b12:	4618      	mov	r0, r3
 8009b14:	3734      	adds	r7, #52	; 0x34
 8009b16:	46bd      	mov	sp, r7
 8009b18:	bd90      	pop	{r4, r7, pc}
 8009b1a:	bf00      	nop

08009b1c <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 8009b1c:	b480      	push	{r7}
 8009b1e:	b083      	sub	sp, #12
 8009b20:	af00      	add	r7, sp, #0
 8009b22:	6078      	str	r0, [r7, #4]

}
 8009b24:	bf00      	nop
 8009b26:	370c      	adds	r7, #12
 8009b28:	46bd      	mov	sp, r7
 8009b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b2e:	4770      	bx	lr

08009b30 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View() : presenter(0)
 8009b30:	b580      	push	{r7, lr}
 8009b32:	b082      	sub	sp, #8
 8009b34:	af00      	add	r7, sp, #0
 8009b36:	6078      	str	r0, [r7, #4]
 8009b38:	687b      	ldr	r3, [r7, #4]
 8009b3a:	4618      	mov	r0, r3
 8009b3c:	f005 fbd8 	bl	800f2f0 <_ZN8touchgfx6ScreenC1Ev>
 8009b40:	4a05      	ldr	r2, [pc, #20]	; (8009b58 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 8009b42:	687b      	ldr	r3, [r7, #4]
 8009b44:	601a      	str	r2, [r3, #0]
 8009b46:	687b      	ldr	r3, [r7, #4]
 8009b48:	2200      	movs	r2, #0
 8009b4a:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8009b4c:	687b      	ldr	r3, [r7, #4]
 8009b4e:	4618      	mov	r0, r3
 8009b50:	3708      	adds	r7, #8
 8009b52:	46bd      	mov	sp, r7
 8009b54:	bd80      	pop	{r7, pc}
 8009b56:	bf00      	nop
 8009b58:	0801ef90 	.word	0x0801ef90

08009b5c <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 8009b5c:	b580      	push	{r7, lr}
 8009b5e:	b082      	sub	sp, #8
 8009b60:	af00      	add	r7, sp, #0
 8009b62:	6078      	str	r0, [r7, #4]
 8009b64:	4a05      	ldr	r2, [pc, #20]	; (8009b7c <_ZN8touchgfx8TextAreaD1Ev+0x20>)
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	601a      	str	r2, [r3, #0]
 8009b6a:	687b      	ldr	r3, [r7, #4]
 8009b6c:	4618      	mov	r0, r3
 8009b6e:	f7ff fc0b 	bl	8009388 <_ZN8touchgfx6WidgetD1Ev>
 8009b72:	687b      	ldr	r3, [r7, #4]
 8009b74:	4618      	mov	r0, r3
 8009b76:	3708      	adds	r7, #8
 8009b78:	46bd      	mov	sp, r7
 8009b7a:	bd80      	pop	{r7, pc}
 8009b7c:	0801ff98 	.word	0x0801ff98

08009b80 <_ZN8touchgfx8TextAreaD0Ev>:
 8009b80:	b580      	push	{r7, lr}
 8009b82:	b082      	sub	sp, #8
 8009b84:	af00      	add	r7, sp, #0
 8009b86:	6078      	str	r0, [r7, #4]
 8009b88:	6878      	ldr	r0, [r7, #4]
 8009b8a:	f7ff ffe7 	bl	8009b5c <_ZN8touchgfx8TextAreaD1Ev>
 8009b8e:	2134      	movs	r1, #52	; 0x34
 8009b90:	6878      	ldr	r0, [r7, #4]
 8009b92:	f011 fecc 	bl	801b92e <_ZdlPvj>
 8009b96:	687b      	ldr	r3, [r7, #4]
 8009b98:	4618      	mov	r0, r3
 8009b9a:	3708      	adds	r7, #8
 8009b9c:	46bd      	mov	sp, r7
 8009b9e:	bd80      	pop	{r7, pc}

08009ba0 <_ZN8touchgfx12ToggleButtonD1Ev>:
class ToggleButton : public Button
 8009ba0:	b580      	push	{r7, lr}
 8009ba2:	b082      	sub	sp, #8
 8009ba4:	af00      	add	r7, sp, #0
 8009ba6:	6078      	str	r0, [r7, #4]
 8009ba8:	4a05      	ldr	r2, [pc, #20]	; (8009bc0 <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 8009baa:	687b      	ldr	r3, [r7, #4]
 8009bac:	601a      	str	r2, [r3, #0]
 8009bae:	687b      	ldr	r3, [r7, #4]
 8009bb0:	4618      	mov	r0, r3
 8009bb2:	f7ff fd01 	bl	80095b8 <_ZN8touchgfx6ButtonD1Ev>
 8009bb6:	687b      	ldr	r3, [r7, #4]
 8009bb8:	4618      	mov	r0, r3
 8009bba:	3708      	adds	r7, #8
 8009bbc:	46bd      	mov	sp, r7
 8009bbe:	bd80      	pop	{r7, pc}
 8009bc0:	0801ff28 	.word	0x0801ff28

08009bc4 <_ZN8touchgfx12ToggleButtonD0Ev>:
 8009bc4:	b580      	push	{r7, lr}
 8009bc6:	b082      	sub	sp, #8
 8009bc8:	af00      	add	r7, sp, #0
 8009bca:	6078      	str	r0, [r7, #4]
 8009bcc:	6878      	ldr	r0, [r7, #4]
 8009bce:	f7ff ffe7 	bl	8009ba0 <_ZN8touchgfx12ToggleButtonD1Ev>
 8009bd2:	2138      	movs	r1, #56	; 0x38
 8009bd4:	6878      	ldr	r0, [r7, #4]
 8009bd6:	f011 feaa 	bl	801b92e <_ZdlPvj>
 8009bda:	687b      	ldr	r3, [r7, #4]
 8009bdc:	4618      	mov	r0, r3
 8009bde:	3708      	adds	r7, #8
 8009be0:	46bd      	mov	sp, r7
 8009be2:	bd80      	pop	{r7, pc}

08009be4 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 8009be4:	b480      	push	{r7}
 8009be6:	af00      	add	r7, sp, #0
    return bitmap_database;
 8009be8:	4b02      	ldr	r3, [pc, #8]	; (8009bf4 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 8009bea:	4618      	mov	r0, r3
 8009bec:	46bd      	mov	sp, r7
 8009bee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bf2:	4770      	bx	lr
 8009bf4:	0801f024 	.word	0x0801f024

08009bf8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 8009bf8:	b480      	push	{r7}
 8009bfa:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 8009bfc:	2302      	movs	r3, #2
}
 8009bfe:	4618      	mov	r0, r3
 8009c00:	46bd      	mov	sp, r7
 8009c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c06:	4770      	bx	lr

08009c08 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8009c08:	b480      	push	{r7}
 8009c0a:	b085      	sub	sp, #20
 8009c0c:	af00      	add	r7, sp, #0
 8009c0e:	60f8      	str	r0, [r7, #12]
 8009c10:	60b9      	str	r1, [r7, #8]
 8009c12:	4613      	mov	r3, r2
 8009c14:	80fb      	strh	r3, [r7, #6]
        typedTexts = data;
 8009c16:	4a07      	ldr	r2, [pc, #28]	; (8009c34 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8009c18:	68fb      	ldr	r3, [r7, #12]
 8009c1a:	6013      	str	r3, [r2, #0]
        fonts = f;
 8009c1c:	4a06      	ldr	r2, [pc, #24]	; (8009c38 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 8009c1e:	68bb      	ldr	r3, [r7, #8]
 8009c20:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 8009c22:	4a06      	ldr	r2, [pc, #24]	; (8009c3c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 8009c24:	88fb      	ldrh	r3, [r7, #6]
 8009c26:	8013      	strh	r3, [r2, #0]
    }
 8009c28:	bf00      	nop
 8009c2a:	3714      	adds	r7, #20
 8009c2c:	46bd      	mov	sp, r7
 8009c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c32:	4770      	bx	lr
 8009c34:	20001810 	.word	0x20001810
 8009c38:	20001818 	.word	0x20001818
 8009c3c:	20001814 	.word	0x20001814

08009c40 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8009c40:	b590      	push	{r4, r7, lr}
 8009c42:	b085      	sub	sp, #20
 8009c44:	af00      	add	r7, sp, #0
 8009c46:	4603      	mov	r3, r0
 8009c48:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 8009c4a:	2300      	movs	r3, #0
 8009c4c:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8009c4e:	88fb      	ldrh	r3, [r7, #6]
 8009c50:	2b00      	cmp	r3, #0
 8009c52:	d127      	bne.n	8009ca4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 8009c54:	88fb      	ldrh	r3, [r7, #6]
 8009c56:	4a1e      	ldr	r2, [pc, #120]	; (8009cd0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8009c58:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009c5c:	2b00      	cmp	r3, #0
 8009c5e:	d016      	beq.n	8009c8e <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8009c60:	88fb      	ldrh	r3, [r7, #6]
 8009c62:	4a1b      	ldr	r2, [pc, #108]	; (8009cd0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8009c64:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009c68:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8009c6a:	68bb      	ldr	r3, [r7, #8]
 8009c6c:	681b      	ldr	r3, [r3, #0]
 8009c6e:	68ba      	ldr	r2, [r7, #8]
 8009c70:	4413      	add	r3, r2
 8009c72:	4a18      	ldr	r2, [pc, #96]	; (8009cd4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8009c74:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8009c76:	68bb      	ldr	r3, [r7, #8]
 8009c78:	685b      	ldr	r3, [r3, #4]
 8009c7a:	68ba      	ldr	r2, [r7, #8]
 8009c7c:	4413      	add	r3, r2
 8009c7e:	4a16      	ldr	r2, [pc, #88]	; (8009cd8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8009c80:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8009c82:	68bb      	ldr	r3, [r7, #8]
 8009c84:	689b      	ldr	r3, [r3, #8]
 8009c86:	68ba      	ldr	r2, [r7, #8]
 8009c88:	4413      	add	r3, r2
 8009c8a:	60fb      	str	r3, [r7, #12]
 8009c8c:	e00a      	b.n	8009ca4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 8009c8e:	4b11      	ldr	r3, [pc, #68]	; (8009cd4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8009c90:	4a12      	ldr	r2, [pc, #72]	; (8009cdc <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 8009c92:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8009c94:	4a12      	ldr	r2, [pc, #72]	; (8009ce0 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 8009c96:	4b10      	ldr	r3, [pc, #64]	; (8009cd8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8009c98:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8009c9a:	88fb      	ldrh	r3, [r7, #6]
 8009c9c:	4a11      	ldr	r2, [pc, #68]	; (8009ce4 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 8009c9e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009ca2:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8009ca4:	68fb      	ldr	r3, [r7, #12]
 8009ca6:	2b00      	cmp	r3, #0
 8009ca8:	d00d      	beq.n	8009cc6 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 8009caa:	4a0f      	ldr	r2, [pc, #60]	; (8009ce8 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 8009cac:	88fb      	ldrh	r3, [r7, #6]
 8009cae:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8009cb0:	f000 f83e 	bl	8009d30 <_ZN17TypedTextDatabase8getFontsEv>
 8009cb4:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8009cb6:	f000 f833 	bl	8009d20 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 8009cba:	4603      	mov	r3, r0
 8009cbc:	461a      	mov	r2, r3
 8009cbe:	4621      	mov	r1, r4
 8009cc0:	68f8      	ldr	r0, [r7, #12]
 8009cc2:	f7ff ffa1 	bl	8009c08 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 8009cc6:	bf00      	nop
 8009cc8:	3714      	adds	r7, #20
 8009cca:	46bd      	mov	sp, r7
 8009ccc:	bd90      	pop	{r4, r7, pc}
 8009cce:	bf00      	nop
 8009cd0:	200006a0 	.word	0x200006a0
 8009cd4:	200006a8 	.word	0x200006a8
 8009cd8:	200006ac 	.word	0x200006ac
 8009cdc:	0802c358 	.word	0x0802c358
 8009ce0:	0802c33c 	.word	0x0802c33c
 8009ce4:	0802c42c 	.word	0x0802c42c
 8009ce8:	200006a4 	.word	0x200006a4

08009cec <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 8009cec:	b480      	push	{r7}
 8009cee:	b083      	sub	sp, #12
 8009cf0:	af00      	add	r7, sp, #0
 8009cf2:	6078      	str	r0, [r7, #4]
 8009cf4:	460b      	mov	r3, r1
 8009cf6:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8009cf8:	4b07      	ldr	r3, [pc, #28]	; (8009d18 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 8009cfa:	681a      	ldr	r2, [r3, #0]
 8009cfc:	4b07      	ldr	r3, [pc, #28]	; (8009d1c <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 8009cfe:	6819      	ldr	r1, [r3, #0]
 8009d00:	887b      	ldrh	r3, [r7, #2]
 8009d02:	009b      	lsls	r3, r3, #2
 8009d04:	440b      	add	r3, r1
 8009d06:	681b      	ldr	r3, [r3, #0]
 8009d08:	005b      	lsls	r3, r3, #1
 8009d0a:	4413      	add	r3, r2
}
 8009d0c:	4618      	mov	r0, r3
 8009d0e:	370c      	adds	r7, #12
 8009d10:	46bd      	mov	sp, r7
 8009d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d16:	4770      	bx	lr
 8009d18:	200006a8 	.word	0x200006a8
 8009d1c:	200006ac 	.word	0x200006ac

08009d20 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8009d20:	b480      	push	{r7}
 8009d22:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8009d24:	2307      	movs	r3, #7
}
 8009d26:	4618      	mov	r0, r3
 8009d28:	46bd      	mov	sp, r7
 8009d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d2e:	4770      	bx	lr

08009d30 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8009d30:	b480      	push	{r7}
 8009d32:	af00      	add	r7, sp, #0
    return _fonts;
 8009d34:	4b02      	ldr	r3, [pc, #8]	; (8009d40 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 8009d36:	4618      	mov	r0, r3
 8009d38:	46bd      	mov	sp, r7
 8009d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d3e:	4770      	bx	lr
 8009d40:	200006b0 	.word	0x200006b0

08009d44 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        _fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8009d44:	b580      	push	{r7, lr}
 8009d46:	b082      	sub	sp, #8
 8009d48:	af00      	add	r7, sp, #0
 8009d4a:	6078      	str	r0, [r7, #4]
 8009d4c:	6039      	str	r1, [r7, #0]
 8009d4e:	687b      	ldr	r3, [r7, #4]
 8009d50:	2b01      	cmp	r3, #1
 8009d52:	d113      	bne.n	8009d7c <_Z41__static_initialization_and_destruction_0ii+0x38>
 8009d54:	683b      	ldr	r3, [r7, #0]
 8009d56:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009d5a:	4293      	cmp	r3, r2
 8009d5c:	d10e      	bne.n	8009d7c <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 8009d5e:	f7fe faf7 	bl	8008350 <_Z23getFont_verdana_20_4bppv>
 8009d62:	4603      	mov	r3, r0
};
 8009d64:	4a07      	ldr	r2, [pc, #28]	; (8009d84 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009d66:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 8009d68:	f7fe fb46 	bl	80083f8 <_Z23getFont_verdana_40_4bppv>
 8009d6c:	4603      	mov	r3, r0
};
 8009d6e:	4a05      	ldr	r2, [pc, #20]	; (8009d84 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009d70:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 8009d72:	f7fe fa99 	bl	80082a8 <_Z23getFont_verdana_10_4bppv>
 8009d76:	4603      	mov	r3, r0
};
 8009d78:	4a02      	ldr	r2, [pc, #8]	; (8009d84 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009d7a:	6093      	str	r3, [r2, #8]
}  // namespace TypedTextDatabase
 8009d7c:	bf00      	nop
 8009d7e:	3708      	adds	r7, #8
 8009d80:	46bd      	mov	sp, r7
 8009d82:	bd80      	pop	{r7, pc}
 8009d84:	200006b0 	.word	0x200006b0

08009d88 <_GLOBAL__sub_I__fonts>:
 8009d88:	b580      	push	{r7, lr}
 8009d8a:	af00      	add	r7, sp, #0
 8009d8c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009d90:	2001      	movs	r0, #1
 8009d92:	f7ff ffd7 	bl	8009d44 <_Z41__static_initialization_and_destruction_0ii>
 8009d96:	bd80      	pop	{r7, pc}

08009d98 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009d98:	b580      	push	{r7, lr}
 8009d9a:	b082      	sub	sp, #8
 8009d9c:	af00      	add	r7, sp, #0
 8009d9e:	6078      	str	r0, [r7, #4]
 8009da0:	4a05      	ldr	r2, [pc, #20]	; (8009db8 <_ZN19FrontendApplicationD1Ev+0x20>)
 8009da2:	687b      	ldr	r3, [r7, #4]
 8009da4:	601a      	str	r2, [r3, #0]
 8009da6:	687b      	ldr	r3, [r7, #4]
 8009da8:	4618      	mov	r0, r3
 8009daa:	f7fe fdc7 	bl	800893c <_ZN23FrontendApplicationBaseD1Ev>
 8009dae:	687b      	ldr	r3, [r7, #4]
 8009db0:	4618      	mov	r0, r3
 8009db2:	3708      	adds	r7, #8
 8009db4:	46bd      	mov	sp, r7
 8009db6:	bd80      	pop	{r7, pc}
 8009db8:	0801f054 	.word	0x0801f054

08009dbc <_ZN19FrontendApplicationD0Ev>:
 8009dbc:	b580      	push	{r7, lr}
 8009dbe:	b082      	sub	sp, #8
 8009dc0:	af00      	add	r7, sp, #0
 8009dc2:	6078      	str	r0, [r7, #4]
 8009dc4:	6878      	ldr	r0, [r7, #4]
 8009dc6:	f7ff ffe7 	bl	8009d98 <_ZN19FrontendApplicationD1Ev>
 8009dca:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8009dce:	6878      	ldr	r0, [r7, #4]
 8009dd0:	f011 fdad 	bl	801b92e <_ZdlPvj>
 8009dd4:	687b      	ldr	r3, [r7, #4]
 8009dd6:	4618      	mov	r0, r3
 8009dd8:	3708      	adds	r7, #8
 8009dda:	46bd      	mov	sp, r7
 8009ddc:	bd80      	pop	{r7, pc}

08009dde <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8009dde:	b580      	push	{r7, lr}
 8009de0:	b082      	sub	sp, #8
 8009de2:	af00      	add	r7, sp, #0
 8009de4:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 8009de6:	687b      	ldr	r3, [r7, #4]
 8009de8:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8009dec:	4618      	mov	r0, r3
 8009dee:	f000 f82d 	bl	8009e4c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009df2:	687b      	ldr	r3, [r7, #4]
 8009df4:	4618      	mov	r0, r3
 8009df6:	f004 fa1f 	bl	800e238 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8009dfa:	bf00      	nop
 8009dfc:	3708      	adds	r7, #8
 8009dfe:	46bd      	mov	sp, r7
 8009e00:	bd80      	pop	{r7, pc}
	...

08009e04 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8009e04:	b580      	push	{r7, lr}
 8009e06:	b084      	sub	sp, #16
 8009e08:	af00      	add	r7, sp, #0
 8009e0a:	60f8      	str	r0, [r7, #12]
 8009e0c:	60b9      	str	r1, [r7, #8]
 8009e0e:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8009e10:	68fb      	ldr	r3, [r7, #12]
 8009e12:	687a      	ldr	r2, [r7, #4]
 8009e14:	68b9      	ldr	r1, [r7, #8]
 8009e16:	4618      	mov	r0, r3
 8009e18:	f7fe fe0a 	bl	8008a30 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009e1c:	4a03      	ldr	r2, [pc, #12]	; (8009e2c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8009e1e:	68fb      	ldr	r3, [r7, #12]
 8009e20:	601a      	str	r2, [r3, #0]
{

}
 8009e22:	68fb      	ldr	r3, [r7, #12]
 8009e24:	4618      	mov	r0, r3
 8009e26:	3710      	adds	r7, #16
 8009e28:	46bd      	mov	sp, r7
 8009e2a:	bd80      	pop	{r7, pc}
 8009e2c:	0801f054 	.word	0x0801f054

08009e30 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8009e30:	b480      	push	{r7}
 8009e32:	b083      	sub	sp, #12
 8009e34:	af00      	add	r7, sp, #0
 8009e36:	6078      	str	r0, [r7, #4]
 8009e38:	687b      	ldr	r3, [r7, #4]
 8009e3a:	2200      	movs	r2, #0
 8009e3c:	601a      	str	r2, [r3, #0]
{

}
 8009e3e:	687b      	ldr	r3, [r7, #4]
 8009e40:	4618      	mov	r0, r3
 8009e42:	370c      	adds	r7, #12
 8009e44:	46bd      	mov	sp, r7
 8009e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e4a:	4770      	bx	lr

08009e4c <_ZN5Model4tickEv>:

void Model::tick()
{
 8009e4c:	b480      	push	{r7}
 8009e4e:	b083      	sub	sp, #12
 8009e50:	af00      	add	r7, sp, #0
 8009e52:	6078      	str	r0, [r7, #4]

}
 8009e54:	bf00      	nop
 8009e56:	370c      	adds	r7, #12
 8009e58:	46bd      	mov	sp, r7
 8009e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e5e:	4770      	bx	lr

08009e60 <_ZN8touchgfx9Presenter8activateEv>:
     * @brief Place initialization code for the Presenter here.
     *
     *        The activate function is called automatically when a screen transition causes
     *        this Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8009e60:	b480      	push	{r7}
 8009e62:	b083      	sub	sp, #12
 8009e64:	af00      	add	r7, sp, #0
 8009e66:	6078      	str	r0, [r7, #4]
    {
    }
 8009e68:	bf00      	nop
 8009e6a:	370c      	adds	r7, #12
 8009e6c:	46bd      	mov	sp, r7
 8009e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e72:	4770      	bx	lr

08009e74 <_ZN8touchgfx9Presenter10deactivateEv>:
     * @brief Place cleanup code for the Presenter here.
     *
     *        The deactivate function is called automatically when a screen transition causes
     *        this Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8009e74:	b480      	push	{r7}
 8009e76:	b083      	sub	sp, #12
 8009e78:	af00      	add	r7, sp, #0
 8009e7a:	6078      	str	r0, [r7, #4]
    {
    }
 8009e7c:	bf00      	nop
 8009e7e:	370c      	adds	r7, #12
 8009e80:	46bd      	mov	sp, r7
 8009e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e86:	4770      	bx	lr

08009e88 <_ZN8touchgfx9PresenterD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Presenter()
 8009e88:	b480      	push	{r7}
 8009e8a:	b083      	sub	sp, #12
 8009e8c:	af00      	add	r7, sp, #0
 8009e8e:	6078      	str	r0, [r7, #4]
    {
 8009e90:	4a04      	ldr	r2, [pc, #16]	; (8009ea4 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 8009e92:	687b      	ldr	r3, [r7, #4]
 8009e94:	601a      	str	r2, [r3, #0]
    }
 8009e96:	687b      	ldr	r3, [r7, #4]
 8009e98:	4618      	mov	r0, r3
 8009e9a:	370c      	adds	r7, #12
 8009e9c:	46bd      	mov	sp, r7
 8009e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ea2:	4770      	bx	lr
 8009ea4:	0801f0c8 	.word	0x0801f0c8

08009ea8 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 8009ea8:	b580      	push	{r7, lr}
 8009eaa:	b082      	sub	sp, #8
 8009eac:	af00      	add	r7, sp, #0
 8009eae:	6078      	str	r0, [r7, #4]
    }
 8009eb0:	6878      	ldr	r0, [r7, #4]
 8009eb2:	f7ff ffe9 	bl	8009e88 <_ZN8touchgfx9PresenterD1Ev>
 8009eb6:	2104      	movs	r1, #4
 8009eb8:	6878      	ldr	r0, [r7, #4]
 8009eba:	f011 fd38 	bl	801b92e <_ZdlPvj>
 8009ebe:	687b      	ldr	r3, [r7, #4]
 8009ec0:	4618      	mov	r0, r3
 8009ec2:	3708      	adds	r7, #8
 8009ec4:	46bd      	mov	sp, r7
 8009ec6:	bd80      	pop	{r7, pc}

08009ec8 <_ZN8touchgfx9PresenterC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Presenter()
 8009ec8:	b480      	push	{r7}
 8009eca:	b083      	sub	sp, #12
 8009ecc:	af00      	add	r7, sp, #0
 8009ece:	6078      	str	r0, [r7, #4]
    {
 8009ed0:	4a04      	ldr	r2, [pc, #16]	; (8009ee4 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	601a      	str	r2, [r3, #0]
    }
 8009ed6:	687b      	ldr	r3, [r7, #4]
 8009ed8:	4618      	mov	r0, r3
 8009eda:	370c      	adds	r7, #12
 8009edc:	46bd      	mov	sp, r7
 8009ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ee2:	4770      	bx	lr
 8009ee4:	0801f0c8 	.word	0x0801f0c8

08009ee8 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 8009ee8:	b480      	push	{r7}
 8009eea:	b083      	sub	sp, #12
 8009eec:	af00      	add	r7, sp, #0
 8009eee:	6078      	str	r0, [r7, #4]
 8009ef0:	4a06      	ldr	r2, [pc, #24]	; (8009f0c <_ZN13ModelListenerC1Ev+0x24>)
 8009ef2:	687b      	ldr	r3, [r7, #4]
 8009ef4:	601a      	str	r2, [r3, #0]
 8009ef6:	687b      	ldr	r3, [r7, #4]
 8009ef8:	2200      	movs	r2, #0
 8009efa:	605a      	str	r2, [r3, #4]
 8009efc:	687b      	ldr	r3, [r7, #4]
 8009efe:	4618      	mov	r0, r3
 8009f00:	370c      	adds	r7, #12
 8009f02:	46bd      	mov	sp, r7
 8009f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f08:	4770      	bx	lr
 8009f0a:	bf00      	nop
 8009f0c:	0801f0b8 	.word	0x0801f0b8

08009f10 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 8009f10:	b480      	push	{r7}
 8009f12:	b083      	sub	sp, #12
 8009f14:	af00      	add	r7, sp, #0
 8009f16:	6078      	str	r0, [r7, #4]
 8009f18:	4a04      	ldr	r2, [pc, #16]	; (8009f2c <_ZN13ModelListenerD1Ev+0x1c>)
 8009f1a:	687b      	ldr	r3, [r7, #4]
 8009f1c:	601a      	str	r2, [r3, #0]
 8009f1e:	687b      	ldr	r3, [r7, #4]
 8009f20:	4618      	mov	r0, r3
 8009f22:	370c      	adds	r7, #12
 8009f24:	46bd      	mov	sp, r7
 8009f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f2a:	4770      	bx	lr
 8009f2c:	0801f0b8 	.word	0x0801f0b8

08009f30 <_ZN13ModelListenerD0Ev>:
 8009f30:	b580      	push	{r7, lr}
 8009f32:	b082      	sub	sp, #8
 8009f34:	af00      	add	r7, sp, #0
 8009f36:	6078      	str	r0, [r7, #4]
 8009f38:	6878      	ldr	r0, [r7, #4]
 8009f3a:	f7ff ffe9 	bl	8009f10 <_ZN13ModelListenerD1Ev>
 8009f3e:	2108      	movs	r1, #8
 8009f40:	6878      	ldr	r0, [r7, #4]
 8009f42:	f011 fcf4 	bl	801b92e <_ZdlPvj>
 8009f46:	687b      	ldr	r3, [r7, #4]
 8009f48:	4618      	mov	r0, r3
 8009f4a:	3708      	adds	r7, #8
 8009f4c:	46bd      	mov	sp, r7
 8009f4e:	bd80      	pop	{r7, pc}

08009f50 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8009f50:	b580      	push	{r7, lr}
 8009f52:	b082      	sub	sp, #8
 8009f54:	af00      	add	r7, sp, #0
 8009f56:	6078      	str	r0, [r7, #4]
 8009f58:	4a09      	ldr	r2, [pc, #36]	; (8009f80 <_ZN16Screen1PresenterD1Ev+0x30>)
 8009f5a:	687b      	ldr	r3, [r7, #4]
 8009f5c:	601a      	str	r2, [r3, #0]
 8009f5e:	4a09      	ldr	r2, [pc, #36]	; (8009f84 <_ZN16Screen1PresenterD1Ev+0x34>)
 8009f60:	687b      	ldr	r3, [r7, #4]
 8009f62:	605a      	str	r2, [r3, #4]
 8009f64:	687b      	ldr	r3, [r7, #4]
 8009f66:	3304      	adds	r3, #4
 8009f68:	4618      	mov	r0, r3
 8009f6a:	f7ff ffd1 	bl	8009f10 <_ZN13ModelListenerD1Ev>
 8009f6e:	687b      	ldr	r3, [r7, #4]
 8009f70:	4618      	mov	r0, r3
 8009f72:	f7ff ff89 	bl	8009e88 <_ZN8touchgfx9PresenterD1Ev>
 8009f76:	687b      	ldr	r3, [r7, #4]
 8009f78:	4618      	mov	r0, r3
 8009f7a:	3708      	adds	r7, #8
 8009f7c:	46bd      	mov	sp, r7
 8009f7e:	bd80      	pop	{r7, pc}
 8009f80:	0801f090 	.word	0x0801f090
 8009f84:	0801f0a8 	.word	0x0801f0a8

08009f88 <_ZThn4_N16Screen1PresenterD1Ev>:
 8009f88:	f1a0 0004 	sub.w	r0, r0, #4
 8009f8c:	e7e0      	b.n	8009f50 <_ZN16Screen1PresenterD1Ev>
 8009f8e:	bf00      	nop

08009f90 <_ZN16Screen1PresenterD0Ev>:
 8009f90:	b580      	push	{r7, lr}
 8009f92:	b082      	sub	sp, #8
 8009f94:	af00      	add	r7, sp, #0
 8009f96:	6078      	str	r0, [r7, #4]
 8009f98:	6878      	ldr	r0, [r7, #4]
 8009f9a:	f7ff ffd9 	bl	8009f50 <_ZN16Screen1PresenterD1Ev>
 8009f9e:	2110      	movs	r1, #16
 8009fa0:	6878      	ldr	r0, [r7, #4]
 8009fa2:	f011 fcc4 	bl	801b92e <_ZdlPvj>
 8009fa6:	687b      	ldr	r3, [r7, #4]
 8009fa8:	4618      	mov	r0, r3
 8009faa:	3708      	adds	r7, #8
 8009fac:	46bd      	mov	sp, r7
 8009fae:	bd80      	pop	{r7, pc}

08009fb0 <_ZThn4_N16Screen1PresenterD0Ev>:
 8009fb0:	f1a0 0004 	sub.w	r0, r0, #4
 8009fb4:	e7ec      	b.n	8009f90 <_ZN16Screen1PresenterD0Ev>
	...

08009fb8 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 8009fb8:	b580      	push	{r7, lr}
 8009fba:	b082      	sub	sp, #8
 8009fbc:	af00      	add	r7, sp, #0
 8009fbe:	6078      	str	r0, [r7, #4]
 8009fc0:	6039      	str	r1, [r7, #0]
    : view(v)
 8009fc2:	687b      	ldr	r3, [r7, #4]
 8009fc4:	4618      	mov	r0, r3
 8009fc6:	f7ff ff7f 	bl	8009ec8 <_ZN8touchgfx9PresenterC1Ev>
 8009fca:	687b      	ldr	r3, [r7, #4]
 8009fcc:	3304      	adds	r3, #4
 8009fce:	4618      	mov	r0, r3
 8009fd0:	f7ff ff8a 	bl	8009ee8 <_ZN13ModelListenerC1Ev>
 8009fd4:	4a06      	ldr	r2, [pc, #24]	; (8009ff0 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 8009fd6:	687b      	ldr	r3, [r7, #4]
 8009fd8:	601a      	str	r2, [r3, #0]
 8009fda:	4a06      	ldr	r2, [pc, #24]	; (8009ff4 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 8009fdc:	687b      	ldr	r3, [r7, #4]
 8009fde:	605a      	str	r2, [r3, #4]
 8009fe0:	687b      	ldr	r3, [r7, #4]
 8009fe2:	683a      	ldr	r2, [r7, #0]
 8009fe4:	60da      	str	r2, [r3, #12]
{

}
 8009fe6:	687b      	ldr	r3, [r7, #4]
 8009fe8:	4618      	mov	r0, r3
 8009fea:	3708      	adds	r7, #8
 8009fec:	46bd      	mov	sp, r7
 8009fee:	bd80      	pop	{r7, pc}
 8009ff0:	0801f090 	.word	0x0801f090
 8009ff4:	0801f0a8 	.word	0x0801f0a8

08009ff8 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 8009ff8:	b480      	push	{r7}
 8009ffa:	b083      	sub	sp, #12
 8009ffc:	af00      	add	r7, sp, #0
 8009ffe:	6078      	str	r0, [r7, #4]

}
 800a000:	bf00      	nop
 800a002:	370c      	adds	r7, #12
 800a004:	46bd      	mov	sp, r7
 800a006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a00a:	4770      	bx	lr

0800a00c <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 800a00c:	b480      	push	{r7}
 800a00e:	b083      	sub	sp, #12
 800a010:	af00      	add	r7, sp, #0
 800a012:	6078      	str	r0, [r7, #4]

}
 800a014:	bf00      	nop
 800a016:	370c      	adds	r7, #12
 800a018:	46bd      	mov	sp, r7
 800a01a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a01e:	4770      	bx	lr

0800a020 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800a020:	b580      	push	{r7, lr}
 800a022:	b082      	sub	sp, #8
 800a024:	af00      	add	r7, sp, #0
 800a026:	6078      	str	r0, [r7, #4]
 800a028:	4a05      	ldr	r2, [pc, #20]	; (800a040 <_ZN11Screen1ViewD1Ev+0x20>)
 800a02a:	687b      	ldr	r3, [r7, #4]
 800a02c:	601a      	str	r2, [r3, #0]
 800a02e:	687b      	ldr	r3, [r7, #4]
 800a030:	4618      	mov	r0, r3
 800a032:	f7ff fb19 	bl	8009668 <_ZN15Screen1ViewBaseD1Ev>
 800a036:	687b      	ldr	r3, [r7, #4]
 800a038:	4618      	mov	r0, r3
 800a03a:	3708      	adds	r7, #8
 800a03c:	46bd      	mov	sp, r7
 800a03e:	bd80      	pop	{r7, pc}
 800a040:	0801f0e0 	.word	0x0801f0e0

0800a044 <_ZN11Screen1ViewD0Ev>:
 800a044:	b580      	push	{r7, lr}
 800a046:	b082      	sub	sp, #8
 800a048:	af00      	add	r7, sp, #0
 800a04a:	6078      	str	r0, [r7, #4]
 800a04c:	6878      	ldr	r0, [r7, #4]
 800a04e:	f7ff ffe7 	bl	800a020 <_ZN11Screen1ViewD1Ev>
 800a052:	f44f 7105 	mov.w	r1, #532	; 0x214
 800a056:	6878      	ldr	r0, [r7, #4]
 800a058:	f011 fc69 	bl	801b92e <_ZdlPvj>
 800a05c:	687b      	ldr	r3, [r7, #4]
 800a05e:	4618      	mov	r0, r3
 800a060:	3708      	adds	r7, #8
 800a062:	46bd      	mov	sp, r7
 800a064:	bd80      	pop	{r7, pc}
	...

0800a068 <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 800a068:	b580      	push	{r7, lr}
 800a06a:	b082      	sub	sp, #8
 800a06c:	af00      	add	r7, sp, #0
 800a06e:	6078      	str	r0, [r7, #4]
 800a070:	687b      	ldr	r3, [r7, #4]
 800a072:	4618      	mov	r0, r3
 800a074:	f7ff fb78 	bl	8009768 <_ZN15Screen1ViewBaseC1Ev>
 800a078:	4a03      	ldr	r2, [pc, #12]	; (800a088 <_ZN11Screen1ViewC1Ev+0x20>)
 800a07a:	687b      	ldr	r3, [r7, #4]
 800a07c:	601a      	str	r2, [r3, #0]
{

}
 800a07e:	687b      	ldr	r3, [r7, #4]
 800a080:	4618      	mov	r0, r3
 800a082:	3708      	adds	r7, #8
 800a084:	46bd      	mov	sp, r7
 800a086:	bd80      	pop	{r7, pc}
 800a088:	0801f0e0 	.word	0x0801f0e0

0800a08c <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800a08c:	b580      	push	{r7, lr}
 800a08e:	b082      	sub	sp, #8
 800a090:	af00      	add	r7, sp, #0
 800a092:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800a094:	687b      	ldr	r3, [r7, #4]
 800a096:	4618      	mov	r0, r3
 800a098:	f7ff fd40 	bl	8009b1c <_ZN15Screen1ViewBase11setupScreenEv>
}
 800a09c:	bf00      	nop
 800a09e:	3708      	adds	r7, #8
 800a0a0:	46bd      	mov	sp, r7
 800a0a2:	bd80      	pop	{r7, pc}

0800a0a4 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800a0a4:	b580      	push	{r7, lr}
 800a0a6:	b082      	sub	sp, #8
 800a0a8:	af00      	add	r7, sp, #0
 800a0aa:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800a0ac:	687b      	ldr	r3, [r7, #4]
 800a0ae:	4618      	mov	r0, r3
 800a0b0:	f7ff f928 	bl	8009304 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800a0b4:	bf00      	nop
 800a0b6:	3708      	adds	r7, #8
 800a0b8:	46bd      	mov	sp, r7
 800a0ba:	bd80      	pop	{r7, pc}

0800a0bc <_ZN8touchgfx15TouchControllerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~TouchController()
 800a0bc:	b480      	push	{r7}
 800a0be:	b083      	sub	sp, #12
 800a0c0:	af00      	add	r7, sp, #0
 800a0c2:	6078      	str	r0, [r7, #4]
    {
 800a0c4:	4a04      	ldr	r2, [pc, #16]	; (800a0d8 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800a0c6:	687b      	ldr	r3, [r7, #4]
 800a0c8:	601a      	str	r2, [r3, #0]
    }
 800a0ca:	687b      	ldr	r3, [r7, #4]
 800a0cc:	4618      	mov	r0, r3
 800a0ce:	370c      	adds	r7, #12
 800a0d0:	46bd      	mov	sp, r7
 800a0d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0d6:	4770      	bx	lr
 800a0d8:	0801f12c 	.word	0x0801f12c

0800a0dc <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800a0dc:	b580      	push	{r7, lr}
 800a0de:	b082      	sub	sp, #8
 800a0e0:	af00      	add	r7, sp, #0
 800a0e2:	6078      	str	r0, [r7, #4]
    }
 800a0e4:	6878      	ldr	r0, [r7, #4]
 800a0e6:	f7ff ffe9 	bl	800a0bc <_ZN8touchgfx15TouchControllerD1Ev>
 800a0ea:	2104      	movs	r1, #4
 800a0ec:	6878      	ldr	r0, [r7, #4]
 800a0ee:	f011 fc1e 	bl	801b92e <_ZdlPvj>
 800a0f2:	687b      	ldr	r3, [r7, #4]
 800a0f4:	4618      	mov	r0, r3
 800a0f6:	3708      	adds	r7, #8
 800a0f8:	46bd      	mov	sp, r7
 800a0fa:	bd80      	pop	{r7, pc}

0800a0fc <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800a0fc:	b480      	push	{r7}
 800a0fe:	b083      	sub	sp, #12
 800a100:	af00      	add	r7, sp, #0
 800a102:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800a104:	bf00      	nop
 800a106:	370c      	adds	r7, #12
 800a108:	46bd      	mov	sp, r7
 800a10a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a10e:	4770      	bx	lr

0800a110 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800a110:	b480      	push	{r7}
 800a112:	b085      	sub	sp, #20
 800a114:	af00      	add	r7, sp, #0
 800a116:	60f8      	str	r0, [r7, #12]
 800a118:	60b9      	str	r1, [r7, #8]
 800a11a:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800a11c:	2300      	movs	r3, #0
}
 800a11e:	4618      	mov	r0, r3
 800a120:	3714      	adds	r7, #20
 800a122:	46bd      	mov	sp, r7
 800a124:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a128:	4770      	bx	lr
	...

0800a12c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800a12c:	b580      	push	{r7, lr}
 800a12e:	b082      	sub	sp, #8
 800a130:	af00      	add	r7, sp, #0
 800a132:	6078      	str	r0, [r7, #4]
 800a134:	4a05      	ldr	r2, [pc, #20]	; (800a14c <_ZN20STM32TouchControllerD1Ev+0x20>)
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	601a      	str	r2, [r3, #0]
 800a13a:	687b      	ldr	r3, [r7, #4]
 800a13c:	4618      	mov	r0, r3
 800a13e:	f7ff ffbd 	bl	800a0bc <_ZN8touchgfx15TouchControllerD1Ev>
 800a142:	687b      	ldr	r3, [r7, #4]
 800a144:	4618      	mov	r0, r3
 800a146:	3708      	adds	r7, #8
 800a148:	46bd      	mov	sp, r7
 800a14a:	bd80      	pop	{r7, pc}
 800a14c:	0801f114 	.word	0x0801f114

0800a150 <_ZN20STM32TouchControllerD0Ev>:
 800a150:	b580      	push	{r7, lr}
 800a152:	b082      	sub	sp, #8
 800a154:	af00      	add	r7, sp, #0
 800a156:	6078      	str	r0, [r7, #4]
 800a158:	6878      	ldr	r0, [r7, #4]
 800a15a:	f7ff ffe7 	bl	800a12c <_ZN20STM32TouchControllerD1Ev>
 800a15e:	2104      	movs	r1, #4
 800a160:	6878      	ldr	r0, [r7, #4]
 800a162:	f011 fbe4 	bl	801b92e <_ZdlPvj>
 800a166:	687b      	ldr	r3, [r7, #4]
 800a168:	4618      	mov	r0, r3
 800a16a:	3708      	adds	r7, #8
 800a16c:	46bd      	mov	sp, r7
 800a16e:	bd80      	pop	{r7, pc}

0800a170 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800a170:	b480      	push	{r7}
 800a172:	b083      	sub	sp, #12
 800a174:	af00      	add	r7, sp, #0
 800a176:	4603      	mov	r3, r0
 800a178:	71fb      	strb	r3, [r7, #7]

}
 800a17a:	bf00      	nop
 800a17c:	370c      	adds	r7, #12
 800a17e:	46bd      	mov	sp, r7
 800a180:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a184:	4770      	bx	lr

0800a186 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800a186:	b480      	push	{r7}
 800a188:	b083      	sub	sp, #12
 800a18a:	af00      	add	r7, sp, #0
 800a18c:	4603      	mov	r3, r0
 800a18e:	71fb      	strb	r3, [r7, #7]

}
 800a190:	bf00      	nop
 800a192:	370c      	adds	r7, #12
 800a194:	46bd      	mov	sp, r7
 800a196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a19a:	4770      	bx	lr

0800a19c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800a19c:	b480      	push	{r7}
 800a19e:	b083      	sub	sp, #12
 800a1a0:	af00      	add	r7, sp, #0
 800a1a2:	4603      	mov	r3, r0
 800a1a4:	71fb      	strb	r3, [r7, #7]

}
 800a1a6:	bf00      	nop
 800a1a8:	370c      	adds	r7, #12
 800a1aa:	46bd      	mov	sp, r7
 800a1ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1b0:	4770      	bx	lr
	...

0800a1b4 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800a1b4:	b480      	push	{r7}
 800a1b6:	b083      	sub	sp, #12
 800a1b8:	af00      	add	r7, sp, #0
 800a1ba:	6078      	str	r0, [r7, #4]
    {
 800a1bc:	4a04      	ldr	r2, [pc, #16]	; (800a1d0 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800a1be:	687b      	ldr	r3, [r7, #4]
 800a1c0:	601a      	str	r2, [r3, #0]
    }
 800a1c2:	687b      	ldr	r3, [r7, #4]
 800a1c4:	4618      	mov	r0, r3
 800a1c6:	370c      	adds	r7, #12
 800a1c8:	46bd      	mov	sp, r7
 800a1ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1ce:	4770      	bx	lr
 800a1d0:	0801f954 	.word	0x0801f954

0800a1d4 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800a1d4:	b580      	push	{r7, lr}
 800a1d6:	b082      	sub	sp, #8
 800a1d8:	af00      	add	r7, sp, #0
 800a1da:	6078      	str	r0, [r7, #4]
    }
 800a1dc:	6878      	ldr	r0, [r7, #4]
 800a1de:	f7ff ffe9 	bl	800a1b4 <_ZN8touchgfx3HALD1Ev>
 800a1e2:	2178      	movs	r1, #120	; 0x78
 800a1e4:	6878      	ldr	r0, [r7, #4]
 800a1e6:	f011 fba2 	bl	801b92e <_ZdlPvj>
 800a1ea:	687b      	ldr	r3, [r7, #4]
 800a1ec:	4618      	mov	r0, r3
 800a1ee:	3708      	adds	r7, #8
 800a1f0:	46bd      	mov	sp, r7
 800a1f2:	bd80      	pop	{r7, pc}

0800a1f4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800a1f4:	b480      	push	{r7}
 800a1f6:	b083      	sub	sp, #12
 800a1f8:	af00      	add	r7, sp, #0
 800a1fa:	6078      	str	r0, [r7, #4]
 800a1fc:	460b      	mov	r3, r1
 800a1fe:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800a200:	687b      	ldr	r3, [r7, #4]
 800a202:	78fa      	ldrb	r2, [r7, #3]
 800a204:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800a208:	687b      	ldr	r3, [r7, #4]
 800a20a:	2201      	movs	r2, #1
 800a20c:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 800a210:	bf00      	nop
 800a212:	370c      	adds	r7, #12
 800a214:	46bd      	mov	sp, r7
 800a216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a21a:	4770      	bx	lr

0800a21c <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *        As default, will return whatever blitcaps are reported by the associated DMA
     *        object.
     *
     * @return a bitmask of the supported blitcaps.
     */
    virtual BlitOperations getBlitCaps()
 800a21c:	b580      	push	{r7, lr}
 800a21e:	b082      	sub	sp, #8
 800a220:	af00      	add	r7, sp, #0
 800a222:	6078      	str	r0, [r7, #4]
    {
        return dma.getBlitCaps();
 800a224:	687b      	ldr	r3, [r7, #4]
 800a226:	685a      	ldr	r2, [r3, #4]
 800a228:	687b      	ldr	r3, [r7, #4]
 800a22a:	685b      	ldr	r3, [r3, #4]
 800a22c:	681b      	ldr	r3, [r3, #0]
 800a22e:	681b      	ldr	r3, [r3, #0]
 800a230:	4610      	mov	r0, r2
 800a232:	4798      	blx	r3
 800a234:	4603      	mov	r3, r0
    }
 800a236:	4618      	mov	r0, r3
 800a238:	3708      	adds	r7, #8
 800a23a:	46bd      	mov	sp, r7
 800a23c:	bd80      	pop	{r7, pc}

0800a23e <_ZN8touchgfx3HAL15backPorchExitedEv>:
     * @brief Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     *        Has to be called from within the LCD IRQ rutine when the Back Porch Exit is
     *        reached.
     */
    virtual void backPorchExited()
 800a23e:	b580      	push	{r7, lr}
 800a240:	b082      	sub	sp, #8
 800a242:	af00      	add	r7, sp, #0
 800a244:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800a246:	6878      	ldr	r0, [r7, #4]
 800a248:	f002 fd8c 	bl	800cd64 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800a24c:	687b      	ldr	r3, [r7, #4]
 800a24e:	681b      	ldr	r3, [r3, #0]
 800a250:	3390      	adds	r3, #144	; 0x90
 800a252:	681b      	ldr	r3, [r3, #0]
 800a254:	6878      	ldr	r0, [r7, #4]
 800a256:	4798      	blx	r3
    }
 800a258:	bf00      	nop
 800a25a:	3708      	adds	r7, #8
 800a25c:	46bd      	mov	sp, r7
 800a25e:	bd80      	pop	{r7, pc}

0800a260 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800a260:	b480      	push	{r7}
 800a262:	b083      	sub	sp, #12
 800a264:	af00      	add	r7, sp, #0
 800a266:	6078      	str	r0, [r7, #4]
 800a268:	6039      	str	r1, [r7, #0]
    {
        return false;
 800a26a:	2300      	movs	r3, #0
    }
 800a26c:	4618      	mov	r0, r3
 800a26e:	370c      	adds	r7, #12
 800a270:	46bd      	mov	sp, r7
 800a272:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a276:	4770      	bx	lr

0800a278 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
     * @param      useDoubleBuffering  (Optional) If true, reserve memory for an extra frame buffer.
     * @param      useAnimationStorage (Optional) If true, reserve memory for animation storage.
     *
     * @deprecated Use the setFramaBufferStartAddress with 'format' parameter instead of 'depth'
     */
    virtual void setFrameBufferStartAddress(void* adr, uint16_t depth = 16, bool useDoubleBuffering = true, bool useAnimationStorage = true)
 800a278:	b590      	push	{r4, r7, lr}
 800a27a:	b08b      	sub	sp, #44	; 0x2c
 800a27c:	af00      	add	r7, sp, #0
 800a27e:	60f8      	str	r0, [r7, #12]
 800a280:	60b9      	str	r1, [r7, #8]
 800a282:	4611      	mov	r1, r2
 800a284:	461a      	mov	r2, r3
 800a286:	460b      	mov	r3, r1
 800a288:	80fb      	strh	r3, [r7, #6]
 800a28a:	4613      	mov	r3, r2
 800a28c:	717b      	strb	r3, [r7, #5]
    {
        uint16_t stride = lcd().framebufferStride();
 800a28e:	f7fe fa07 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800a292:	4603      	mov	r3, r0
 800a294:	681a      	ldr	r2, [r3, #0]
 800a296:	3228      	adds	r2, #40	; 0x28
 800a298:	6812      	ldr	r2, [r2, #0]
 800a29a:	4618      	mov	r0, r3
 800a29c:	4790      	blx	r2
 800a29e:	4603      	mov	r3, r0
 800a2a0:	837b      	strh	r3, [r7, #26]
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 800a2a2:	8b7b      	ldrh	r3, [r7, #26]
 800a2a4:	4a3d      	ldr	r2, [pc, #244]	; (800a39c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x124>)
 800a2a6:	8812      	ldrh	r2, [r2, #0]
 800a2a8:	fb02 f303 	mul.w	r3, r2, r3
 800a2ac:	617b      	str	r3, [r7, #20]
        uint8_t* ptr = (uint8_t*)adr;
 800a2ae:	68bb      	ldr	r3, [r7, #8]
 800a2b0:	627b      	str	r3, [r7, #36]	; 0x24
        void* double_buf = 0;
 800a2b2:	2300      	movs	r3, #0
 800a2b4:	623b      	str	r3, [r7, #32]
        void* anim_store = 0;
 800a2b6:	2300      	movs	r3, #0
 800a2b8:	61fb      	str	r3, [r7, #28]
        if (useDoubleBuffering)
 800a2ba:	797b      	ldrb	r3, [r7, #5]
 800a2bc:	2b00      	cmp	r3, #0
 800a2be:	d005      	beq.n	800a2cc <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x54>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 800a2c0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a2c2:	697b      	ldr	r3, [r7, #20]
 800a2c4:	4413      	add	r3, r2
 800a2c6:	627b      	str	r3, [r7, #36]	; 0x24
            double_buf = (void*)ptr;
 800a2c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a2ca:	623b      	str	r3, [r7, #32]
        }
        if (useAnimationStorage)
 800a2cc:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 800a2d0:	2b00      	cmp	r3, #0
 800a2d2:	d005      	beq.n	800a2e0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x68>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800a2d4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a2d6:	697b      	ldr	r3, [r7, #20]
 800a2d8:	4413      	add	r3, r2
 800a2da:	627b      	str	r3, [r7, #36]	; 0x24
            anim_store = (void*)ptr;
 800a2dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a2de:	61fb      	str	r3, [r7, #28]
        }
        switch (depth)
 800a2e0:	88fb      	ldrh	r3, [r7, #6]
 800a2e2:	3b01      	subs	r3, #1
 800a2e4:	2b1f      	cmp	r3, #31
 800a2e6:	d84d      	bhi.n	800a384 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x10c>
 800a2e8:	a201      	add	r2, pc, #4	; (adr r2, 800a2f0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
 800a2ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a2ee:	bf00      	nop
 800a2f0:	0800a371 	.word	0x0800a371
 800a2f4:	0800a371 	.word	0x0800a371
 800a2f8:	0800a385 	.word	0x0800a385
 800a2fc:	0800a371 	.word	0x0800a371
 800a300:	0800a385 	.word	0x0800a385
 800a304:	0800a385 	.word	0x0800a385
 800a308:	0800a385 	.word	0x0800a385
 800a30c:	0800a371 	.word	0x0800a371
 800a310:	0800a385 	.word	0x0800a385
 800a314:	0800a385 	.word	0x0800a385
 800a318:	0800a385 	.word	0x0800a385
 800a31c:	0800a385 	.word	0x0800a385
 800a320:	0800a385 	.word	0x0800a385
 800a324:	0800a385 	.word	0x0800a385
 800a328:	0800a385 	.word	0x0800a385
 800a32c:	0800a371 	.word	0x0800a371
 800a330:	0800a385 	.word	0x0800a385
 800a334:	0800a385 	.word	0x0800a385
 800a338:	0800a385 	.word	0x0800a385
 800a33c:	0800a385 	.word	0x0800a385
 800a340:	0800a385 	.word	0x0800a385
 800a344:	0800a385 	.word	0x0800a385
 800a348:	0800a385 	.word	0x0800a385
 800a34c:	0800a371 	.word	0x0800a371
 800a350:	0800a385 	.word	0x0800a385
 800a354:	0800a385 	.word	0x0800a385
 800a358:	0800a385 	.word	0x0800a385
 800a35c:	0800a385 	.word	0x0800a385
 800a360:	0800a385 	.word	0x0800a385
 800a364:	0800a385 	.word	0x0800a385
 800a368:	0800a385 	.word	0x0800a385
 800a36c:	0800a371 	.word	0x0800a371
        case 16:
        case 8:
        case 4:
        case 2:
        case 1:
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 800a370:	68fb      	ldr	r3, [r7, #12]
 800a372:	681b      	ldr	r3, [r3, #0]
 800a374:	3374      	adds	r3, #116	; 0x74
 800a376:	681c      	ldr	r4, [r3, #0]
 800a378:	69fb      	ldr	r3, [r7, #28]
 800a37a:	6a3a      	ldr	r2, [r7, #32]
 800a37c:	68b9      	ldr	r1, [r7, #8]
 800a37e:	68f8      	ldr	r0, [r7, #12]
 800a380:	47a0      	blx	r4
            break;
 800a382:	e006      	b.n	800a392 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x11a>
        default:
            assert(0 && "Unsupported bit depth");
 800a384:	4b06      	ldr	r3, [pc, #24]	; (800a3a0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x128>)
 800a386:	4a07      	ldr	r2, [pc, #28]	; (800a3a4 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x12c>)
 800a388:	f240 3125 	movw	r1, #805	; 0x325
 800a38c:	4806      	ldr	r0, [pc, #24]	; (800a3a8 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x130>)
 800a38e:	f011 fafd 	bl	801b98c <__assert_func>
            break;
        }
    }
 800a392:	bf00      	nop
 800a394:	372c      	adds	r7, #44	; 0x2c
 800a396:	46bd      	mov	sp, r7
 800a398:	bd90      	pop	{r4, r7, pc}
 800a39a:	bf00      	nop
 800a39c:	2000179c 	.word	0x2000179c
 800a3a0:	0801ebb8 	.word	0x0801ebb8
 800a3a4:	0801ebd8 	.word	0x0801ebd8
 800a3a8:	0801ec2c 	.word	0x0801ec2c

0800a3ac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     *
     * @param [in] frameBuffer      Buffer for frame buffer data, must be non-null.
     * @param [in] doubleBuffer     If non-null, buffer for double buffer data. If null double buffering is disabled.
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage is disabled.
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800a3ac:	b580      	push	{r7, lr}
 800a3ae:	b084      	sub	sp, #16
 800a3b0:	af00      	add	r7, sp, #0
 800a3b2:	60f8      	str	r0, [r7, #12]
 800a3b4:	60b9      	str	r1, [r7, #8]
 800a3b6:	607a      	str	r2, [r7, #4]
 800a3b8:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800a3ba:	68bb      	ldr	r3, [r7, #8]
 800a3bc:	2b00      	cmp	r3, #0
 800a3be:	d106      	bne.n	800a3ce <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800a3c0:	4b11      	ldr	r3, [pc, #68]	; (800a408 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800a3c2:	4a12      	ldr	r2, [pc, #72]	; (800a40c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800a3c4:	f240 3137 	movw	r1, #823	; 0x337
 800a3c8:	4811      	ldr	r0, [pc, #68]	; (800a410 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
 800a3ca:	f011 fadf 	bl	801b98c <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800a3ce:	68fb      	ldr	r3, [r7, #12]
 800a3d0:	68ba      	ldr	r2, [r7, #8]
 800a3d2:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800a3d4:	68fb      	ldr	r3, [r7, #12]
 800a3d6:	687a      	ldr	r2, [r7, #4]
 800a3d8:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800a3da:	68fb      	ldr	r3, [r7, #12]
 800a3dc:	683a      	ldr	r2, [r7, #0]
 800a3de:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800a3e0:	687b      	ldr	r3, [r7, #4]
 800a3e2:	2b00      	cmp	r3, #0
 800a3e4:	bf14      	ite	ne
 800a3e6:	2301      	movne	r3, #1
 800a3e8:	2300      	moveq	r3, #0
 800a3ea:	b2da      	uxtb	r2, r3
 800a3ec:	4b09      	ldr	r3, [pc, #36]	; (800a414 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
 800a3ee:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800a3f0:	683b      	ldr	r3, [r7, #0]
 800a3f2:	2b00      	cmp	r3, #0
 800a3f4:	bf14      	ite	ne
 800a3f6:	2301      	movne	r3, #1
 800a3f8:	2300      	moveq	r3, #0
 800a3fa:	b2da      	uxtb	r2, r3
 800a3fc:	4b06      	ldr	r3, [pc, #24]	; (800a418 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
 800a3fe:	701a      	strb	r2, [r3, #0]
    }
 800a400:	bf00      	nop
 800a402:	3710      	adds	r7, #16
 800a404:	46bd      	mov	sp, r7
 800a406:	bd80      	pop	{r7, pc}
 800a408:	0801ec70 	.word	0x0801ec70
 800a40c:	0801eca8 	.word	0x0801eca8
 800a410:	0801ec2c 	.word	0x0801ec2c
 800a414:	2000179e 	.word	0x2000179e
 800a418:	2000179f 	.word	0x2000179f

0800a41c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param ms Number of milliseconds to wait.
     *
     * @see void registerTaskDelayFunction(void (*delayF)(uint16_t))
     */
    virtual void taskDelay(uint16_t ms)
 800a41c:	b580      	push	{r7, lr}
 800a41e:	b082      	sub	sp, #8
 800a420:	af00      	add	r7, sp, #0
 800a422:	6078      	str	r0, [r7, #4]
 800a424:	460b      	mov	r3, r1
 800a426:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a42c:	2b00      	cmp	r3, #0
 800a42e:	d004      	beq.n	800a43a <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800a430:	687b      	ldr	r3, [r7, #4]
 800a432:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a434:	887a      	ldrh	r2, [r7, #2]
 800a436:	4610      	mov	r0, r2
 800a438:	4798      	blx	r3
        }
    }
 800a43a:	bf00      	nop
 800a43c:	3708      	adds	r7, #8
 800a43e:	46bd      	mov	sp, r7
 800a440:	bd80      	pop	{r7, pc}

0800a442 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800a442:	b580      	push	{r7, lr}
 800a444:	b082      	sub	sp, #8
 800a446:	af00      	add	r7, sp, #0
 800a448:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800a44a:	687b      	ldr	r3, [r7, #4]
 800a44c:	685a      	ldr	r2, [r3, #4]
 800a44e:	687b      	ldr	r3, [r7, #4]
 800a450:	685b      	ldr	r3, [r3, #4]
 800a452:	681b      	ldr	r3, [r3, #0]
 800a454:	3318      	adds	r3, #24
 800a456:	681b      	ldr	r3, [r3, #0]
 800a458:	4610      	mov	r0, r2
 800a45a:	4798      	blx	r3
 800a45c:	4603      	mov	r3, r0
    }
 800a45e:	4618      	mov	r0, r3
 800a460:	3708      	adds	r7, #8
 800a462:	46bd      	mov	sp, r7
 800a464:	bd80      	pop	{r7, pc}
	...

0800a468 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
     *
     * @brief Perform the actual display orientation change.
     *
     *        Perform the actual display orientation change.
     */
    virtual void performDisplayOrientationChange()
 800a468:	b480      	push	{r7}
 800a46a:	b083      	sub	sp, #12
 800a46c:	af00      	add	r7, sp, #0
 800a46e:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800a470:	687b      	ldr	r3, [r7, #4]
 800a472:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 800a476:	687b      	ldr	r3, [r7, #4]
 800a478:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800a47c:	429a      	cmp	r2, r3
 800a47e:	d017      	beq.n	800a4b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
 800a480:	4b1a      	ldr	r3, [pc, #104]	; (800a4ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a482:	781b      	ldrb	r3, [r3, #0]
 800a484:	2b00      	cmp	r3, #0
 800a486:	d12a      	bne.n	800a4de <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800a488:	4b19      	ldr	r3, [pc, #100]	; (800a4f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a48a:	881a      	ldrh	r2, [r3, #0]
 800a48c:	4b19      	ldr	r3, [pc, #100]	; (800a4f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a48e:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800a490:	4b19      	ldr	r3, [pc, #100]	; (800a4f8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a492:	881a      	ldrh	r2, [r3, #0]
 800a494:	4b19      	ldr	r3, [pc, #100]	; (800a4fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a496:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800a498:	4b16      	ldr	r3, [pc, #88]	; (800a4f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a49a:	881a      	ldrh	r2, [r3, #0]
 800a49c:	4b16      	ldr	r3, [pc, #88]	; (800a4f8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a49e:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800a4a0:	4b16      	ldr	r3, [pc, #88]	; (800a4fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a4a2:	881a      	ldrh	r2, [r3, #0]
 800a4a4:	4b12      	ldr	r3, [pc, #72]	; (800a4f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a4a6:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 800a4a8:	4b10      	ldr	r3, [pc, #64]	; (800a4ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a4aa:	2201      	movs	r2, #1
 800a4ac:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800a4ae:	e016      	b.n	800a4de <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
 800a4b0:	4b0e      	ldr	r3, [pc, #56]	; (800a4ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a4b2:	781b      	ldrb	r3, [r3, #0]
 800a4b4:	2b00      	cmp	r3, #0
 800a4b6:	d012      	beq.n	800a4de <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800a4b8:	4b0f      	ldr	r3, [pc, #60]	; (800a4f8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a4ba:	881a      	ldrh	r2, [r3, #0]
 800a4bc:	4b0d      	ldr	r3, [pc, #52]	; (800a4f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a4be:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 800a4c0:	4b0b      	ldr	r3, [pc, #44]	; (800a4f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a4c2:	881a      	ldrh	r2, [r3, #0]
 800a4c4:	4b0d      	ldr	r3, [pc, #52]	; (800a4fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a4c6:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800a4c8:	4b0c      	ldr	r3, [pc, #48]	; (800a4fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800a4ca:	881a      	ldrh	r2, [r3, #0]
 800a4cc:	4b0a      	ldr	r3, [pc, #40]	; (800a4f8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800a4ce:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800a4d0:	4b08      	ldr	r3, [pc, #32]	; (800a4f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800a4d2:	881a      	ldrh	r2, [r3, #0]
 800a4d4:	4b06      	ldr	r3, [pc, #24]	; (800a4f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800a4d6:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 800a4d8:	4b04      	ldr	r3, [pc, #16]	; (800a4ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800a4da:	2200      	movs	r2, #0
 800a4dc:	701a      	strb	r2, [r3, #0]
    }
 800a4de:	bf00      	nop
 800a4e0:	370c      	adds	r7, #12
 800a4e2:	46bd      	mov	sp, r7
 800a4e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4e8:	4770      	bx	lr
 800a4ea:	bf00      	nop
 800a4ec:	20001798 	.word	0x20001798
 800a4f0:	20001794 	.word	0x20001794
 800a4f4:	2000179a 	.word	0x2000179a
 800a4f8:	20001796 	.word	0x20001796
 800a4fc:	2000179c 	.word	0x2000179c

0800a500 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800a500:	b580      	push	{r7, lr}
 800a502:	b082      	sub	sp, #8
 800a504:	af00      	add	r7, sp, #0
 800a506:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	4618      	mov	r0, r3
 800a50c:	f001 feac 	bl	800c268 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800a510:	bf00      	nop
 800a512:	3708      	adds	r7, #8
 800a514:	46bd      	mov	sp, r7
 800a516:	bd80      	pop	{r7, pc}

0800a518 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800a518:	b580      	push	{r7, lr}
 800a51a:	b082      	sub	sp, #8
 800a51c:	af00      	add	r7, sp, #0
 800a51e:	6078      	str	r0, [r7, #4]
 800a520:	4a05      	ldr	r2, [pc, #20]	; (800a538 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800a522:	687b      	ldr	r3, [r7, #4]
 800a524:	601a      	str	r2, [r3, #0]
 800a526:	687b      	ldr	r3, [r7, #4]
 800a528:	4618      	mov	r0, r3
 800a52a:	f7ff fe43 	bl	800a1b4 <_ZN8touchgfx3HALD1Ev>
 800a52e:	687b      	ldr	r3, [r7, #4]
 800a530:	4618      	mov	r0, r3
 800a532:	3708      	adds	r7, #8
 800a534:	46bd      	mov	sp, r7
 800a536:	bd80      	pop	{r7, pc}
 800a538:	0801f340 	.word	0x0801f340

0800a53c <_ZN20TouchGFXGeneratedHALD0Ev>:
 800a53c:	b580      	push	{r7, lr}
 800a53e:	b082      	sub	sp, #8
 800a540:	af00      	add	r7, sp, #0
 800a542:	6078      	str	r0, [r7, #4]
 800a544:	6878      	ldr	r0, [r7, #4]
 800a546:	f7ff ffe7 	bl	800a518 <_ZN20TouchGFXGeneratedHALD1Ev>
 800a54a:	2178      	movs	r1, #120	; 0x78
 800a54c:	6878      	ldr	r0, [r7, #4]
 800a54e:	f011 f9ee 	bl	801b92e <_ZdlPvj>
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	4618      	mov	r0, r3
 800a556:	3708      	adds	r7, #8
 800a558:	46bd      	mov	sp, r7
 800a55a:	bd80      	pop	{r7, pc}

0800a55c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800a55c:	b580      	push	{r7, lr}
 800a55e:	b082      	sub	sp, #8
 800a560:	af00      	add	r7, sp, #0
 800a562:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800a564:	687b      	ldr	r3, [r7, #4]
 800a566:	4618      	mov	r0, r3
 800a568:	f7ff ffca 	bl	800a500 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800a56c:	bf00      	nop
 800a56e:	3708      	adds	r7, #8
 800a570:	46bd      	mov	sp, r7
 800a572:	bd80      	pop	{r7, pc}

0800a574 <_ZN11TouchGFXHAL10initializeEv>:
#include "stm32f4xx.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800a574:	b580      	push	{r7, lr}
 800a576:	b082      	sub	sp, #8
 800a578:	af00      	add	r7, sp, #0
 800a57a:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800a57c:	687b      	ldr	r3, [r7, #4]
 800a57e:	4618      	mov	r0, r3
 800a580:	f001 faea 	bl	800bb58 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800a584:	bf00      	nop
 800a586:	3708      	adds	r7, #8
 800a588:	46bd      	mov	sp, r7
 800a58a:	bd80      	pop	{r7, pc}

0800a58c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800a58c:	b580      	push	{r7, lr}
 800a58e:	b082      	sub	sp, #8
 800a590:	af00      	add	r7, sp, #0
 800a592:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800a594:	687b      	ldr	r3, [r7, #4]
 800a596:	4618      	mov	r0, r3
 800a598:	f001 fb6a 	bl	800bc70 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800a59c:	4603      	mov	r3, r0
}
 800a59e:	4618      	mov	r0, r3
 800a5a0:	3708      	adds	r7, #8
 800a5a2:	46bd      	mov	sp, r7
 800a5a4:	bd80      	pop	{r7, pc}

0800a5a6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800a5a6:	b580      	push	{r7, lr}
 800a5a8:	b082      	sub	sp, #8
 800a5aa:	af00      	add	r7, sp, #0
 800a5ac:	6078      	str	r0, [r7, #4]
 800a5ae:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800a5b0:	687b      	ldr	r3, [r7, #4]
 800a5b2:	6839      	ldr	r1, [r7, #0]
 800a5b4:	4618      	mov	r0, r3
 800a5b6:	f001 fb69 	bl	800bc8c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800a5ba:	bf00      	nop
 800a5bc:	3708      	adds	r7, #8
 800a5be:	46bd      	mov	sp, r7
 800a5c0:	bd80      	pop	{r7, pc}

0800a5c2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800a5c2:	b580      	push	{r7, lr}
 800a5c4:	b082      	sub	sp, #8
 800a5c6:	af00      	add	r7, sp, #0
 800a5c8:	6078      	str	r0, [r7, #4]
 800a5ca:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	6839      	ldr	r1, [r7, #0]
 800a5d0:	4618      	mov	r0, r3
 800a5d2:	f001 fb71 	bl	800bcb8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800a5d6:	bf00      	nop
 800a5d8:	3708      	adds	r7, #8
 800a5da:	46bd      	mov	sp, r7
 800a5dc:	bd80      	pop	{r7, pc}

0800a5de <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800a5de:	b580      	push	{r7, lr}
 800a5e0:	b082      	sub	sp, #8
 800a5e2:	af00      	add	r7, sp, #0
 800a5e4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800a5e6:	687b      	ldr	r3, [r7, #4]
 800a5e8:	4618      	mov	r0, r3
 800a5ea:	f001 fae7 	bl	800bbbc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800a5ee:	bf00      	nop
 800a5f0:	3708      	adds	r7, #8
 800a5f2:	46bd      	mov	sp, r7
 800a5f4:	bd80      	pop	{r7, pc}

0800a5f6 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800a5f6:	b580      	push	{r7, lr}
 800a5f8:	b082      	sub	sp, #8
 800a5fa:	af00      	add	r7, sp, #0
 800a5fc:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	4618      	mov	r0, r3
 800a602:	f001 faeb 	bl	800bbdc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800a606:	bf00      	nop
 800a608:	3708      	adds	r7, #8
 800a60a:	46bd      	mov	sp, r7
 800a60c:	bd80      	pop	{r7, pc}

0800a60e <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800a60e:	b580      	push	{r7, lr}
 800a610:	b082      	sub	sp, #8
 800a612:	af00      	add	r7, sp, #0
 800a614:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	4618      	mov	r0, r3
 800a61a:	f001 faed 	bl	800bbf8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800a61e:	bf00      	nop
 800a620:	3708      	adds	r7, #8
 800a622:	46bd      	mov	sp, r7
 800a624:	bd80      	pop	{r7, pc}

0800a626 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800a626:	b580      	push	{r7, lr}
 800a628:	b082      	sub	sp, #8
 800a62a:	af00      	add	r7, sp, #0
 800a62c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800a62e:	687b      	ldr	r3, [r7, #4]
 800a630:	4618      	mov	r0, r3
 800a632:	f001 faef 	bl	800bc14 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800a636:	bf00      	nop
 800a638:	3708      	adds	r7, #8
 800a63a:	46bd      	mov	sp, r7
 800a63c:	bd80      	pop	{r7, pc}
	...

0800a640 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800a640:	b580      	push	{r7, lr}
 800a642:	b082      	sub	sp, #8
 800a644:	af00      	add	r7, sp, #0
 800a646:	6078      	str	r0, [r7, #4]
 800a648:	4a05      	ldr	r2, [pc, #20]	; (800a660 <_ZN11TouchGFXHALD1Ev+0x20>)
 800a64a:	687b      	ldr	r3, [r7, #4]
 800a64c:	601a      	str	r2, [r3, #0]
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	4618      	mov	r0, r3
 800a652:	f7ff ff61 	bl	800a518 <_ZN20TouchGFXGeneratedHALD1Ev>
 800a656:	687b      	ldr	r3, [r7, #4]
 800a658:	4618      	mov	r0, r3
 800a65a:	3708      	adds	r7, #8
 800a65c:	46bd      	mov	sp, r7
 800a65e:	bd80      	pop	{r7, pc}
 800a660:	0801f144 	.word	0x0801f144

0800a664 <_ZN11TouchGFXHALD0Ev>:
 800a664:	b580      	push	{r7, lr}
 800a666:	b082      	sub	sp, #8
 800a668:	af00      	add	r7, sp, #0
 800a66a:	6078      	str	r0, [r7, #4]
 800a66c:	6878      	ldr	r0, [r7, #4]
 800a66e:	f7ff ffe7 	bl	800a640 <_ZN11TouchGFXHALD1Ev>
 800a672:	2178      	movs	r1, #120	; 0x78
 800a674:	6878      	ldr	r0, [r7, #4]
 800a676:	f011 f95a 	bl	801b92e <_ZdlPvj>
 800a67a:	687b      	ldr	r3, [r7, #4]
 800a67c:	4618      	mov	r0, r3
 800a67e:	3708      	adds	r7, #8
 800a680:	46bd      	mov	sp, r7
 800a682:	bd80      	pop	{r7, pc}

0800a684 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800a684:	b480      	push	{r7}
 800a686:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800a688:	4b05      	ldr	r3, [pc, #20]	; (800a6a0 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800a68a:	2200      	movs	r2, #0
 800a68c:	601a      	str	r2, [r3, #0]
  vsync_sem = 0;
 800a68e:	4b05      	ldr	r3, [pc, #20]	; (800a6a4 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800a690:	2200      	movs	r2, #0
 800a692:	601a      	str	r2, [r3, #0]
}
 800a694:	bf00      	nop
 800a696:	46bd      	mov	sp, r7
 800a698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a69c:	4770      	bx	lr
 800a69e:	bf00      	nop
 800a6a0:	200006bc 	.word	0x200006bc
 800a6a4:	200006c0 	.word	0x200006c0

0800a6a8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800a6a8:	b480      	push	{r7}
 800a6aa:	af00      	add	r7, sp, #0
  while(fb_sem);
 800a6ac:	4b08      	ldr	r3, [pc, #32]	; (800a6d0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a6ae:	681b      	ldr	r3, [r3, #0]
 800a6b0:	2b00      	cmp	r3, #0
 800a6b2:	bf14      	ite	ne
 800a6b4:	2301      	movne	r3, #1
 800a6b6:	2300      	moveq	r3, #0
 800a6b8:	b2db      	uxtb	r3, r3
 800a6ba:	2b00      	cmp	r3, #0
 800a6bc:	d000      	beq.n	800a6c0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>
 800a6be:	e7f5      	b.n	800a6ac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x4>
  fb_sem = 1;
 800a6c0:	4b03      	ldr	r3, [pc, #12]	; (800a6d0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a6c2:	2201      	movs	r2, #1
 800a6c4:	601a      	str	r2, [r3, #0]
}
 800a6c6:	bf00      	nop
 800a6c8:	46bd      	mov	sp, r7
 800a6ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6ce:	4770      	bx	lr
 800a6d0:	200006bc 	.word	0x200006bc

0800a6d4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800a6d4:	b480      	push	{r7}
 800a6d6:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800a6d8:	4b03      	ldr	r3, [pc, #12]	; (800a6e8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800a6da:	2200      	movs	r2, #0
 800a6dc:	601a      	str	r2, [r3, #0]
}
 800a6de:	bf00      	nop
 800a6e0:	46bd      	mov	sp, r7
 800a6e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6e6:	4770      	bx	lr
 800a6e8:	200006bc 	.word	0x200006bc

0800a6ec <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800a6ec:	b480      	push	{r7}
 800a6ee:	af00      	add	r7, sp, #0
  fb_sem = 1;
 800a6f0:	4b03      	ldr	r3, [pc, #12]	; (800a700 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800a6f2:	2201      	movs	r2, #1
 800a6f4:	601a      	str	r2, [r3, #0]
}
 800a6f6:	bf00      	nop
 800a6f8:	46bd      	mov	sp, r7
 800a6fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6fe:	4770      	bx	lr
 800a700:	200006bc 	.word	0x200006bc

0800a704 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800a704:	b480      	push	{r7}
 800a706:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800a708:	4b03      	ldr	r3, [pc, #12]	; (800a718 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800a70a:	2200      	movs	r2, #0
 800a70c:	601a      	str	r2, [r3, #0]
}
 800a70e:	bf00      	nop
 800a710:	46bd      	mov	sp, r7
 800a712:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a716:	4770      	bx	lr
 800a718:	200006bc 	.word	0x200006bc

0800a71c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800a71c:	b480      	push	{r7}
 800a71e:	af00      	add	r7, sp, #0
  vsync_sem = 1;
 800a720:	4b03      	ldr	r3, [pc, #12]	; (800a730 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800a722:	2201      	movs	r2, #1
 800a724:	601a      	str	r2, [r3, #0]
}
 800a726:	bf00      	nop
 800a728:	46bd      	mov	sp, r7
 800a72a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a72e:	4770      	bx	lr
 800a730:	200006c0 	.word	0x200006c0

0800a734 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800a734:	b580      	push	{r7, lr}
 800a736:	af00      	add	r7, sp, #0
  if(vsync_sem)
 800a738:	4b0a      	ldr	r3, [pc, #40]	; (800a764 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a73a:	681b      	ldr	r3, [r3, #0]
 800a73c:	2b00      	cmp	r3, #0
 800a73e:	bf14      	ite	ne
 800a740:	2301      	movne	r3, #1
 800a742:	2300      	moveq	r3, #0
 800a744:	b2db      	uxtb	r3, r3
 800a746:	2b00      	cmp	r3, #0
 800a748:	d00a      	beq.n	800a760 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
  {
    vsync_sem = 0;
 800a74a:	4b06      	ldr	r3, [pc, #24]	; (800a764 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a74c:	2200      	movs	r2, #0
 800a74e:	601a      	str	r2, [r3, #0]
    HAL::getInstance()->backPorchExited();
 800a750:	f7fd ff9a 	bl	8008688 <_ZN8touchgfx3HAL11getInstanceEv>
 800a754:	4603      	mov	r3, r0
 800a756:	681a      	ldr	r2, [r3, #0]
 800a758:	3258      	adds	r2, #88	; 0x58
 800a75a:	6812      	ldr	r2, [r2, #0]
 800a75c:	4618      	mov	r0, r3
 800a75e:	4790      	blx	r2
  }
}
 800a760:	bf00      	nop
 800a762:	bd80      	pop	{r7, pc}
 800a764:	200006c0 	.word	0x200006c0

0800a768 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 800a768:	b580      	push	{r7, lr}
 800a76a:	b082      	sub	sp, #8
 800a76c:	af00      	add	r7, sp, #0
 800a76e:	4603      	mov	r3, r0
 800a770:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 800a772:	88fb      	ldrh	r3, [r7, #6]
 800a774:	4618      	mov	r0, r3
 800a776:	f7f8 f9d7 	bl	8002b28 <HAL_Delay>
}
 800a77a:	bf00      	nop
 800a77c:	3708      	adds	r7, #8
 800a77e:	46bd      	mov	sp, r7
 800a780:	bd80      	pop	{r7, pc}
	...

0800a784 <__NVIC_EnableIRQ>:
{
 800a784:	b480      	push	{r7}
 800a786:	b083      	sub	sp, #12
 800a788:	af00      	add	r7, sp, #0
 800a78a:	4603      	mov	r3, r0
 800a78c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a78e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a792:	2b00      	cmp	r3, #0
 800a794:	db0b      	blt.n	800a7ae <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a796:	79fb      	ldrb	r3, [r7, #7]
 800a798:	f003 021f 	and.w	r2, r3, #31
 800a79c:	4907      	ldr	r1, [pc, #28]	; (800a7bc <__NVIC_EnableIRQ+0x38>)
 800a79e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a7a2:	095b      	lsrs	r3, r3, #5
 800a7a4:	2001      	movs	r0, #1
 800a7a6:	fa00 f202 	lsl.w	r2, r0, r2
 800a7aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800a7ae:	bf00      	nop
 800a7b0:	370c      	adds	r7, #12
 800a7b2:	46bd      	mov	sp, r7
 800a7b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7b8:	4770      	bx	lr
 800a7ba:	bf00      	nop
 800a7bc:	e000e100 	.word	0xe000e100

0800a7c0 <__NVIC_DisableIRQ>:
{
 800a7c0:	b480      	push	{r7}
 800a7c2:	b083      	sub	sp, #12
 800a7c4:	af00      	add	r7, sp, #0
 800a7c6:	4603      	mov	r3, r0
 800a7c8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a7ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a7ce:	2b00      	cmp	r3, #0
 800a7d0:	db12      	blt.n	800a7f8 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a7d2:	79fb      	ldrb	r3, [r7, #7]
 800a7d4:	f003 021f 	and.w	r2, r3, #31
 800a7d8:	490a      	ldr	r1, [pc, #40]	; (800a804 <__NVIC_DisableIRQ+0x44>)
 800a7da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a7de:	095b      	lsrs	r3, r3, #5
 800a7e0:	2001      	movs	r0, #1
 800a7e2:	fa00 f202 	lsl.w	r2, r0, r2
 800a7e6:	3320      	adds	r3, #32
 800a7e8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800a7ec:	f3bf 8f4f 	dsb	sy
}
 800a7f0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800a7f2:	f3bf 8f6f 	isb	sy
}
 800a7f6:	bf00      	nop
}
 800a7f8:	bf00      	nop
 800a7fa:	370c      	adds	r7, #12
 800a7fc:	46bd      	mov	sp, r7
 800a7fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a802:	4770      	bx	lr
 800a804:	e000e100 	.word	0xe000e100

0800a808 <_ZN8touchgfx9colortypeC1Ev>:
    colortype() : color(0) {}
 800a808:	b480      	push	{r7}
 800a80a:	b083      	sub	sp, #12
 800a80c:	af00      	add	r7, sp, #0
 800a80e:	6078      	str	r0, [r7, #4]
 800a810:	687b      	ldr	r3, [r7, #4]
 800a812:	2200      	movs	r2, #0
 800a814:	601a      	str	r2, [r3, #0]
 800a816:	687b      	ldr	r3, [r7, #4]
 800a818:	4618      	mov	r0, r3
 800a81a:	370c      	adds	r7, #12
 800a81c:	46bd      	mov	sp, r7
 800a81e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a822:	4770      	bx	lr

0800a824 <_ZNK8touchgfx9colortype10getColor32Ev>:
    inline uint32_t getColor32() const
 800a824:	b480      	push	{r7}
 800a826:	b083      	sub	sp, #12
 800a828:	af00      	add	r7, sp, #0
 800a82a:	6078      	str	r0, [r7, #4]
        return color;
 800a82c:	687b      	ldr	r3, [r7, #4]
 800a82e:	681b      	ldr	r3, [r3, #0]
    }
 800a830:	4618      	mov	r0, r3
 800a832:	370c      	adds	r7, #12
 800a834:	46bd      	mov	sp, r7
 800a836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a83a:	4770      	bx	lr

0800a83c <_ZNK8touchgfx9colortypecvtEv>:
    operator uint16_t() const
 800a83c:	b480      	push	{r7}
 800a83e:	b083      	sub	sp, #12
 800a840:	af00      	add	r7, sp, #0
 800a842:	6078      	str	r0, [r7, #4]
        return (uint16_t)color;
 800a844:	687b      	ldr	r3, [r7, #4]
 800a846:	681b      	ldr	r3, [r3, #0]
 800a848:	b29b      	uxth	r3, r3
    }
 800a84a:	4618      	mov	r0, r3
 800a84c:	370c      	adds	r7, #12
 800a84e:	46bd      	mov	sp, r7
 800a850:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a854:	4770      	bx	lr
	...

0800a858 <_ZN8touchgfx9DMA_QueueD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Queue()
 800a858:	b480      	push	{r7}
 800a85a:	b083      	sub	sp, #12
 800a85c:	af00      	add	r7, sp, #0
 800a85e:	6078      	str	r0, [r7, #4]
    {
 800a860:	4a04      	ldr	r2, [pc, #16]	; (800a874 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800a862:	687b      	ldr	r3, [r7, #4]
 800a864:	601a      	str	r2, [r3, #0]
    }
 800a866:	687b      	ldr	r3, [r7, #4]
 800a868:	4618      	mov	r0, r3
 800a86a:	370c      	adds	r7, #12
 800a86c:	46bd      	mov	sp, r7
 800a86e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a872:	4770      	bx	lr
 800a874:	0801f248 	.word	0x0801f248

0800a878 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800a878:	b580      	push	{r7, lr}
 800a87a:	b082      	sub	sp, #8
 800a87c:	af00      	add	r7, sp, #0
 800a87e:	6078      	str	r0, [r7, #4]
    }
 800a880:	6878      	ldr	r0, [r7, #4]
 800a882:	f7ff ffe9 	bl	800a858 <_ZN8touchgfx9DMA_QueueD1Ev>
 800a886:	2104      	movs	r1, #4
 800a888:	6878      	ldr	r0, [r7, #4]
 800a88a:	f011 f850 	bl	801b92e <_ZdlPvj>
 800a88e:	687b      	ldr	r3, [r7, #4]
 800a890:	4618      	mov	r0, r3
 800a892:	3708      	adds	r7, #8
 800a894:	46bd      	mov	sp, r7
 800a896:	bd80      	pop	{r7, pc}

0800a898 <_ZN8touchgfx13DMA_Interface5flushEv>:
     *
     * @brief This function blocks until all DMA transfers in the queue have been completed.
     *
     *        This function blocks until all DMA transfers in the queue have been completed.
     */
    virtual void flush()
 800a898:	b580      	push	{r7, lr}
 800a89a:	b082      	sub	sp, #8
 800a89c:	af00      	add	r7, sp, #0
 800a89e:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800a8a0:	687b      	ldr	r3, [r7, #4]
 800a8a2:	681b      	ldr	r3, [r3, #0]
 800a8a4:	3344      	adds	r3, #68	; 0x44
 800a8a6:	681b      	ldr	r3, [r3, #0]
 800a8a8:	6878      	ldr	r0, [r7, #4]
 800a8aa:	4798      	blx	r3
    }
 800a8ac:	bf00      	nop
 800a8ae:	3708      	adds	r7, #8
 800a8b0:	46bd      	mov	sp, r7
 800a8b2:	bd80      	pop	{r7, pc}

0800a8b4 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
 800a8b4:	b480      	push	{r7}
 800a8b6:	b083      	sub	sp, #12
 800a8b8:	af00      	add	r7, sp, #0
 800a8ba:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800a8bc:	2300      	movs	r3, #0
    }
 800a8be:	4618      	mov	r0, r3
 800a8c0:	370c      	adds	r7, #12
 800a8c2:	46bd      	mov	sp, r7
 800a8c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8c8:	4770      	bx	lr
	...

0800a8cc <_ZN8touchgfx13DMA_InterfaceD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Interface()
 800a8cc:	b480      	push	{r7}
 800a8ce:	b083      	sub	sp, #12
 800a8d0:	af00      	add	r7, sp, #0
 800a8d2:	6078      	str	r0, [r7, #4]
    {
 800a8d4:	4a04      	ldr	r2, [pc, #16]	; (800a8e8 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800a8d6:	687b      	ldr	r3, [r7, #4]
 800a8d8:	601a      	str	r2, [r3, #0]
    }
 800a8da:	687b      	ldr	r3, [r7, #4]
 800a8dc:	4618      	mov	r0, r3
 800a8de:	370c      	adds	r7, #12
 800a8e0:	46bd      	mov	sp, r7
 800a8e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8e6:	4770      	bx	lr
 800a8e8:	0801fd98 	.word	0x0801fd98

0800a8ec <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800a8ec:	b580      	push	{r7, lr}
 800a8ee:	b082      	sub	sp, #8
 800a8f0:	af00      	add	r7, sp, #0
 800a8f2:	6078      	str	r0, [r7, #4]
    }
 800a8f4:	6878      	ldr	r0, [r7, #4]
 800a8f6:	f7ff ffe9 	bl	800a8cc <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800a8fa:	210c      	movs	r1, #12
 800a8fc:	6878      	ldr	r0, [r7, #4]
 800a8fe:	f011 f816 	bl	801b92e <_ZdlPvj>
 800a902:	687b      	ldr	r3, [r7, #4]
 800a904:	4618      	mov	r0, r3
 800a906:	3708      	adds	r7, #8
 800a908:	46bd      	mov	sp, r7
 800a90a:	bd80      	pop	{r7, pc}

0800a90c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
     *
     *        Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800a90c:	b480      	push	{r7}
 800a90e:	b083      	sub	sp, #12
 800a910:	af00      	add	r7, sp, #0
 800a912:	6078      	str	r0, [r7, #4]
 800a914:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800a916:	4a09      	ldr	r2, [pc, #36]	; (800a93c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800a918:	687b      	ldr	r3, [r7, #4]
 800a91a:	601a      	str	r2, [r3, #0]
 800a91c:	687b      	ldr	r3, [r7, #4]
 800a91e:	683a      	ldr	r2, [r7, #0]
 800a920:	605a      	str	r2, [r3, #4]
 800a922:	687b      	ldr	r3, [r7, #4]
 800a924:	2200      	movs	r2, #0
 800a926:	721a      	strb	r2, [r3, #8]
 800a928:	687b      	ldr	r3, [r7, #4]
 800a92a:	2200      	movs	r2, #0
 800a92c:	725a      	strb	r2, [r3, #9]
    {
    }
 800a92e:	687b      	ldr	r3, [r7, #4]
 800a930:	4618      	mov	r0, r3
 800a932:	370c      	adds	r7, #12
 800a934:	46bd      	mov	sp, r7
 800a936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a93a:	4770      	bx	lr
 800a93c:	0801fd98 	.word	0x0801fd98

0800a940 <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800a940:	b580      	push	{r7, lr}
 800a942:	b082      	sub	sp, #8
 800a944:	af00      	add	r7, sp, #0
 800a946:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800a948:	687b      	ldr	r3, [r7, #4]
 800a94a:	685a      	ldr	r2, [r3, #4]
 800a94c:	687b      	ldr	r3, [r7, #4]
 800a94e:	685b      	ldr	r3, [r3, #4]
 800a950:	681b      	ldr	r3, [r3, #0]
 800a952:	3314      	adds	r3, #20
 800a954:	681b      	ldr	r3, [r3, #0]
 800a956:	4610      	mov	r0, r2
 800a958:	4798      	blx	r3
    }
 800a95a:	bf00      	nop
 800a95c:	3708      	adds	r7, #8
 800a95e:	46bd      	mov	sp, r7
 800a960:	bd80      	pop	{r7, pc}

0800a962 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800a962:	b580      	push	{r7, lr}
 800a964:	b082      	sub	sp, #8
 800a966:	af00      	add	r7, sp, #0
 800a968:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800a96a:	687a      	ldr	r2, [r7, #4]
 800a96c:	687b      	ldr	r3, [r7, #4]
 800a96e:	681b      	ldr	r3, [r3, #0]
 800a970:	3328      	adds	r3, #40	; 0x28
 800a972:	681b      	ldr	r3, [r3, #0]
 800a974:	4610      	mov	r0, r2
 800a976:	4798      	blx	r3
    }
 800a978:	bf00      	nop
 800a97a:	3708      	adds	r7, #8
 800a97c:	46bd      	mov	sp, r7
 800a97e:	bd80      	pop	{r7, pc}

0800a980 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>:
/* USER CODE END user includes */

extern DMA2D_HandleTypeDef hdma2d;

static HAL_StatusTypeDef HAL_DMA2D_SetMode(DMA2D_HandleTypeDef *hdma2d, uint32_t mode, uint32_t color, uint32_t offset)
{
 800a980:	b480      	push	{r7}
 800a982:	b085      	sub	sp, #20
 800a984:	af00      	add	r7, sp, #0
 800a986:	60f8      	str	r0, [r7, #12]
 800a988:	60b9      	str	r1, [r7, #8]
 800a98a:	607a      	str	r2, [r7, #4]
 800a98c:	603b      	str	r3, [r7, #0]
    assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));

    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 800a98e:	68fb      	ldr	r3, [r7, #12]
 800a990:	681b      	ldr	r3, [r3, #0]
 800a992:	681b      	ldr	r3, [r3, #0]
 800a994:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 800a998:	68fb      	ldr	r3, [r7, #12]
 800a99a:	681b      	ldr	r3, [r3, #0]
 800a99c:	68ba      	ldr	r2, [r7, #8]
 800a99e:	430a      	orrs	r2, r1
 800a9a0:	601a      	str	r2, [r3, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 800a9a2:	68fb      	ldr	r3, [r7, #12]
 800a9a4:	681b      	ldr	r3, [r3, #0]
 800a9a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a9a8:	f023 0107 	bic.w	r1, r3, #7
 800a9ac:	68fb      	ldr	r3, [r7, #12]
 800a9ae:	681b      	ldr	r3, [r3, #0]
 800a9b0:	687a      	ldr	r2, [r7, #4]
 800a9b2:	430a      	orrs	r2, r1
 800a9b4:	635a      	str	r2, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 800a9b6:	68fb      	ldr	r3, [r7, #12]
 800a9b8:	681b      	ldr	r3, [r3, #0]
 800a9ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a9bc:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800a9c0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800a9c4:	68fa      	ldr	r2, [r7, #12]
 800a9c6:	6812      	ldr	r2, [r2, #0]
 800a9c8:	6839      	ldr	r1, [r7, #0]
 800a9ca:	430b      	orrs	r3, r1
 800a9cc:	6413      	str	r3, [r2, #64]	; 0x40

    return HAL_OK;
 800a9ce:	2300      	movs	r3, #0
}
 800a9d0:	4618      	mov	r0, r3
 800a9d2:	3714      	adds	r7, #20
 800a9d4:	46bd      	mov	sp, r7
 800a9d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9da:	4770      	bx	lr

0800a9dc <DMA2D_XferCpltCallback>:

extern "C" {

static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
{
 800a9dc:	b580      	push	{r7, lr}
 800a9de:	b082      	sub	sp, #8
 800a9e0:	af00      	add	r7, sp, #0
 800a9e2:	6078      	str	r0, [r7, #4]
    touchgfx::HAL::getInstance()->signalDMAInterrupt();
 800a9e4:	f7fd fe50 	bl	8008688 <_ZN8touchgfx3HAL11getInstanceEv>
 800a9e8:	4603      	mov	r3, r0
 800a9ea:	4618      	mov	r0, r3
 800a9ec:	f7ff ffa8 	bl	800a940 <_ZN8touchgfx3HAL18signalDMAInterruptEv>
}
 800a9f0:	bf00      	nop
 800a9f2:	3708      	adds	r7, #8
 800a9f4:	46bd      	mov	sp, r7
 800a9f6:	bd80      	pop	{r7, pc}

0800a9f8 <DMA2D_XferErrorCallback>:

static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
{
 800a9f8:	b580      	push	{r7, lr}
 800a9fa:	b082      	sub	sp, #8
 800a9fc:	af00      	add	r7, sp, #0
 800a9fe:	6078      	str	r0, [r7, #4]
    assert(0);
 800aa00:	4b02      	ldr	r3, [pc, #8]	; (800aa0c <DMA2D_XferErrorCallback+0x14>)
 800aa02:	4a03      	ldr	r2, [pc, #12]	; (800aa10 <DMA2D_XferErrorCallback+0x18>)
 800aa04:	2136      	movs	r1, #54	; 0x36
 800aa06:	4803      	ldr	r0, [pc, #12]	; (800aa14 <DMA2D_XferErrorCallback+0x1c>)
 800aa08:	f010 ffc0 	bl	801b98c <__assert_func>
 800aa0c:	0801ecf8 	.word	0x0801ecf8
 800aa10:	0801ecfc 	.word	0x0801ecfc
 800aa14:	0801ed30 	.word	0x0801ed30

0800aa18 <_ZN8touchgfx6BlitOpC1Ev>:
 *        (frame buffer) using DMA.
 *
 *        BlitOp instances carry the required information for performing operations on the LCD
 *        (frame buffer) using DMA.
 */
struct BlitOp
 800aa18:	b580      	push	{r7, lr}
 800aa1a:	b082      	sub	sp, #8
 800aa1c:	af00      	add	r7, sp, #0
 800aa1e:	6078      	str	r0, [r7, #4]
 800aa20:	687b      	ldr	r3, [r7, #4]
 800aa22:	3318      	adds	r3, #24
 800aa24:	4618      	mov	r0, r3
 800aa26:	f7ff feef 	bl	800a808 <_ZN8touchgfx9colortypeC1Ev>
 800aa2a:	687b      	ldr	r3, [r7, #4]
 800aa2c:	4618      	mov	r0, r3
 800aa2e:	3708      	adds	r7, #8
 800aa30:	46bd      	mov	sp, r7
 800aa32:	bd80      	pop	{r7, pc}

0800aa34 <_ZN10STM32F4DMAC1Ev>:
}

}

STM32F4DMA::STM32F4DMA()
 800aa34:	b5b0      	push	{r4, r5, r7, lr}
 800aa36:	b082      	sub	sp, #8
 800aa38:	af00      	add	r7, sp, #0
 800aa3a:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800aa3c:	687a      	ldr	r2, [r7, #4]
 800aa3e:	687b      	ldr	r3, [r7, #4]
 800aa40:	330c      	adds	r3, #12
 800aa42:	4619      	mov	r1, r3
 800aa44:	4610      	mov	r0, r2
 800aa46:	f7ff ff61 	bl	800a90c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800aa4a:	4a0e      	ldr	r2, [pc, #56]	; (800aa84 <_ZN10STM32F4DMAC1Ev+0x50>)
 800aa4c:	687b      	ldr	r3, [r7, #4]
 800aa4e:	601a      	str	r2, [r3, #0]
 800aa50:	687b      	ldr	r3, [r7, #4]
 800aa52:	f103 000c 	add.w	r0, r3, #12
 800aa56:	687b      	ldr	r3, [r7, #4]
 800aa58:	3320      	adds	r3, #32
 800aa5a:	2260      	movs	r2, #96	; 0x60
 800aa5c:	4619      	mov	r1, r3
 800aa5e:	f002 faa7 	bl	800cfb0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800aa62:	687b      	ldr	r3, [r7, #4]
 800aa64:	3320      	adds	r3, #32
 800aa66:	245f      	movs	r4, #95	; 0x5f
 800aa68:	461d      	mov	r5, r3
 800aa6a:	2c00      	cmp	r4, #0
 800aa6c:	db05      	blt.n	800aa7a <_ZN10STM32F4DMAC1Ev+0x46>
 800aa6e:	4628      	mov	r0, r5
 800aa70:	f7ff ffd2 	bl	800aa18 <_ZN8touchgfx6BlitOpC1Ev>
 800aa74:	3520      	adds	r5, #32
 800aa76:	3c01      	subs	r4, #1
 800aa78:	e7f7      	b.n	800aa6a <_ZN10STM32F4DMAC1Ev+0x36>
{}
 800aa7a:	687b      	ldr	r3, [r7, #4]
 800aa7c:	4618      	mov	r0, r3
 800aa7e:	3708      	adds	r7, #8
 800aa80:	46bd      	mov	sp, r7
 800aa82:	bdb0      	pop	{r4, r5, r7, pc}
 800aa84:	0801f1f8 	.word	0x0801f1f8

0800aa88 <_ZN10STM32F4DMAD1Ev>:

STM32F4DMA::~STM32F4DMA()
 800aa88:	b580      	push	{r7, lr}
 800aa8a:	b082      	sub	sp, #8
 800aa8c:	af00      	add	r7, sp, #0
 800aa8e:	6078      	str	r0, [r7, #4]
 800aa90:	4a0b      	ldr	r2, [pc, #44]	; (800aac0 <_ZN10STM32F4DMAD1Ev+0x38>)
 800aa92:	687b      	ldr	r3, [r7, #4]
 800aa94:	601a      	str	r2, [r3, #0]
{
    HAL_DMA2D_DeInit(&hdma2d);
 800aa96:	480b      	ldr	r0, [pc, #44]	; (800aac4 <_ZN10STM32F4DMAD1Ev+0x3c>)
 800aa98:	f7f8 fdae 	bl	80035f8 <HAL_DMA2D_DeInit>
    NVIC_DisableIRQ(DMA2D_IRQn);
 800aa9c:	205a      	movs	r0, #90	; 0x5a
 800aa9e:	f7ff fe8f 	bl	800a7c0 <__NVIC_DisableIRQ>
STM32F4DMA::~STM32F4DMA()
 800aaa2:	687b      	ldr	r3, [r7, #4]
 800aaa4:	330c      	adds	r3, #12
 800aaa6:	4618      	mov	r0, r3
 800aaa8:	f000 faa8 	bl	800affc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800aaac:	687b      	ldr	r3, [r7, #4]
 800aaae:	4618      	mov	r0, r3
 800aab0:	f7ff ff0c 	bl	800a8cc <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 800aab4:	687b      	ldr	r3, [r7, #4]
 800aab6:	4618      	mov	r0, r3
 800aab8:	3708      	adds	r7, #8
 800aaba:	46bd      	mov	sp, r7
 800aabc:	bd80      	pop	{r7, pc}
 800aabe:	bf00      	nop
 800aac0:	0801f1f8 	.word	0x0801f1f8
 800aac4:	200002dc 	.word	0x200002dc

0800aac8 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 800aac8:	b580      	push	{r7, lr}
 800aaca:	b082      	sub	sp, #8
 800aacc:	af00      	add	r7, sp, #0
 800aace:	6078      	str	r0, [r7, #4]
}
 800aad0:	6878      	ldr	r0, [r7, #4]
 800aad2:	f7ff ffd9 	bl	800aa88 <_ZN10STM32F4DMAD1Ev>
 800aad6:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 800aada:	6878      	ldr	r0, [r7, #4]
 800aadc:	f010 ff27 	bl	801b92e <_ZdlPvj>
 800aae0:	687b      	ldr	r3, [r7, #4]
 800aae2:	4618      	mov	r0, r3
 800aae4:	3708      	adds	r7, #8
 800aae6:	46bd      	mov	sp, r7
 800aae8:	bd80      	pop	{r7, pc}
	...

0800aaec <_ZN10STM32F4DMA10initializeEv>:

void STM32F4DMA::initialize()
{
 800aaec:	b580      	push	{r7, lr}
 800aaee:	b082      	sub	sp, #8
 800aaf0:	af00      	add	r7, sp, #0
 800aaf2:	6078      	str	r0, [r7, #4]
    hdma2d.Instance = DMA2D;
 800aaf4:	4b09      	ldr	r3, [pc, #36]	; (800ab1c <_ZN10STM32F4DMA10initializeEv+0x30>)
 800aaf6:	4a0a      	ldr	r2, [pc, #40]	; (800ab20 <_ZN10STM32F4DMA10initializeEv+0x34>)
 800aaf8:	601a      	str	r2, [r3, #0]
    HAL_DMA2D_Init(&hdma2d);
 800aafa:	4808      	ldr	r0, [pc, #32]	; (800ab1c <_ZN10STM32F4DMA10initializeEv+0x30>)
 800aafc:	f7f8 fd32 	bl	8003564 <HAL_DMA2D_Init>

    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800ab00:	4b06      	ldr	r3, [pc, #24]	; (800ab1c <_ZN10STM32F4DMA10initializeEv+0x30>)
 800ab02:	4a08      	ldr	r2, [pc, #32]	; (800ab24 <_ZN10STM32F4DMA10initializeEv+0x38>)
 800ab04:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800ab06:	4b05      	ldr	r3, [pc, #20]	; (800ab1c <_ZN10STM32F4DMA10initializeEv+0x30>)
 800ab08:	4a07      	ldr	r2, [pc, #28]	; (800ab28 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 800ab0a:	615a      	str	r2, [r3, #20]

    NVIC_EnableIRQ(DMA2D_IRQn);
 800ab0c:	205a      	movs	r0, #90	; 0x5a
 800ab0e:	f7ff fe39 	bl	800a784 <__NVIC_EnableIRQ>
}
 800ab12:	bf00      	nop
 800ab14:	3708      	adds	r7, #8
 800ab16:	46bd      	mov	sp, r7
 800ab18:	bd80      	pop	{r7, pc}
 800ab1a:	bf00      	nop
 800ab1c:	200002dc 	.word	0x200002dc
 800ab20:	4002b000 	.word	0x4002b000
 800ab24:	0800a9dd 	.word	0x0800a9dd
 800ab28:	0800a9f9 	.word	0x0800a9f9

0800ab2c <_ZN10STM32F4DMA11getBlitCapsEv>:

BlitOperations STM32F4DMA::getBlitCaps()
{
 800ab2c:	b480      	push	{r7}
 800ab2e:	b083      	sub	sp, #12
 800ab30:	af00      	add	r7, sp, #0
 800ab32:	6078      	str	r0, [r7, #4]
                                        | BLIT_OP_COPY
                                        | BLIT_OP_COPY_WITH_ALPHA
                                        | BLIT_OP_COPY_ARGB8888
                                        | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                        | BLIT_OP_COPY_A4
                                        | BLIT_OP_COPY_A8);
 800ab34:	f240 13ef 	movw	r3, #495	; 0x1ef
}
 800ab38:	4618      	mov	r0, r3
 800ab3a:	370c      	adds	r7, #12
 800ab3c:	46bd      	mov	sp, r7
 800ab3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab42:	4770      	bx	lr

0800ab44 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 800ab44:	b590      	push	{r4, r7, lr}
 800ab46:	b08d      	sub	sp, #52	; 0x34
 800ab48:	af02      	add	r7, sp, #8
 800ab4a:	6078      	str	r0, [r7, #4]
 800ab4c:	6039      	str	r1, [r7, #0]
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 800ab4e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800ab52:	627b      	str	r3, [r7, #36]	; 0x24
    uint32_t dma2dColorMode = 0;
 800ab54:	2300      	movs	r3, #0
 800ab56:	623b      	str	r3, [r7, #32]

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 800ab58:	683b      	ldr	r3, [r7, #0]
 800ab5a:	681b      	ldr	r3, [r3, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 800ab5c:	2b20      	cmp	r3, #32
 800ab5e:	d007      	beq.n	800ab70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 800ab60:	683b      	ldr	r3, [r7, #0]
 800ab62:	681b      	ldr	r3, [r3, #0]
 800ab64:	2b40      	cmp	r3, #64	; 0x40
 800ab66:	d003      	beq.n	800ab70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 800ab68:	683b      	ldr	r3, [r7, #0]
 800ab6a:	681b      	ldr	r3, [r3, #0]
 800ab6c:	2b04      	cmp	r3, #4
 800ab6e:	d101      	bne.n	800ab74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x30>
 800ab70:	2301      	movs	r3, #1
 800ab72:	e000      	b.n	800ab76 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x32>
 800ab74:	2300      	movs	r3, #0
    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 800ab76:	77fb      	strb	r3, [r7, #31]

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 800ab78:	683b      	ldr	r3, [r7, #0]
 800ab7a:	681b      	ldr	r3, [r3, #0]
                         || blitOp.operation == BLIT_OP_COPY_A8);
 800ab7c:	2b80      	cmp	r3, #128	; 0x80
 800ab7e:	d004      	beq.n	800ab8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x46>
 800ab80:	683b      	ldr	r3, [r7, #0]
 800ab82:	681b      	ldr	r3, [r3, #0]
 800ab84:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ab88:	d101      	bne.n	800ab8e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4a>
 800ab8a:	2301      	movs	r3, #1
 800ab8c:	e000      	b.n	800ab90 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
 800ab8e:	2300      	movs	r3, #0
    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 800ab90:	77bb      	strb	r3, [r7, #30]

    uint8_t bitDepth = HAL::lcd().bitDepth();
 800ab92:	f7fd fd85 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800ab96:	4603      	mov	r3, r0
 800ab98:	681a      	ldr	r2, [r3, #0]
 800ab9a:	3220      	adds	r2, #32
 800ab9c:	6812      	ldr	r2, [r2, #0]
 800ab9e:	4618      	mov	r0, r3
 800aba0:	4790      	blx	r2
 800aba2:	4603      	mov	r3, r0
 800aba4:	777b      	strb	r3, [r7, #29]

    switch (blitOp.operation)
 800aba6:	683b      	ldr	r3, [r7, #0]
 800aba8:	681b      	ldr	r3, [r3, #0]
 800abaa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800abae:	d012      	beq.n	800abd6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
 800abb0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800abb4:	d820      	bhi.n	800abf8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 800abb6:	2b80      	cmp	r3, #128	; 0x80
 800abb8:	d00a      	beq.n	800abd0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
 800abba:	2b80      	cmp	r3, #128	; 0x80
 800abbc:	d81c      	bhi.n	800abf8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 800abbe:	2b40      	cmp	r3, #64	; 0x40
 800abc0:	d017      	beq.n	800abf2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
 800abc2:	2b40      	cmp	r3, #64	; 0x40
 800abc4:	d818      	bhi.n	800abf8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
 800abc6:	2b04      	cmp	r3, #4
 800abc8:	d008      	beq.n	800abdc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x98>
 800abca:	2b20      	cmp	r3, #32
 800abcc:	d011      	beq.n	800abf2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
 800abce:	e013      	b.n	800abf8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
    {
    case BLIT_OP_COPY_A4:
        dma2dColorMode = CM_A4;
 800abd0:	230a      	movs	r3, #10
 800abd2:	623b      	str	r3, [r7, #32]
        break;
 800abd4:	e01a      	b.n	800ac0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    case BLIT_OP_COPY_A8:
        dma2dColorMode = CM_A8;
 800abd6:	2309      	movs	r3, #9
 800abd8:	623b      	str	r3, [r7, #32]
        break;
 800abda:	e017      	b.n	800ac0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    case BLIT_OP_COPY_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800abdc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800abe0:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800abe2:	7f7b      	ldrb	r3, [r7, #29]
 800abe4:	2b10      	cmp	r3, #16
 800abe6:	d101      	bne.n	800abec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 800abe8:	2302      	movs	r3, #2
 800abea:	e000      	b.n	800abee <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
 800abec:	2301      	movs	r3, #1
 800abee:	623b      	str	r3, [r7, #32]
        break;
 800abf0:	e00c      	b.n	800ac0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
 800abf2:	2300      	movs	r3, #0
 800abf4:	623b      	str	r3, [r7, #32]
        break;
 800abf6:	e009      	b.n	800ac0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc8>
    default:
        dma2dTransferMode = DMA2D_M2M;
 800abf8:	2300      	movs	r3, #0
 800abfa:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800abfc:	7f7b      	ldrb	r3, [r7, #29]
 800abfe:	2b10      	cmp	r3, #16
 800ac00:	d101      	bne.n	800ac06 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc2>
 800ac02:	2302      	movs	r3, #2
 800ac04:	e000      	b.n	800ac08 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc4>
 800ac06:	2301      	movs	r3, #1
 800ac08:	623b      	str	r3, [r7, #32]
        break;
 800ac0a:	bf00      	nop
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800ac0c:	4a77      	ldr	r2, [pc, #476]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ac10:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800ac12:	7f7b      	ldrb	r3, [r7, #29]
 800ac14:	2b10      	cmp	r3, #16
 800ac16:	d101      	bne.n	800ac1c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd8>
 800ac18:	2302      	movs	r3, #2
 800ac1a:	e000      	b.n	800ac1e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xda>
 800ac1c:	2301      	movs	r3, #1
 800ac1e:	4a73      	ldr	r2, [pc, #460]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac20:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800ac22:	683b      	ldr	r3, [r7, #0]
 800ac24:	8adb      	ldrh	r3, [r3, #22]
 800ac26:	461a      	mov	r2, r3
 800ac28:	683b      	ldr	r3, [r7, #0]
 800ac2a:	8a1b      	ldrh	r3, [r3, #16]
 800ac2c:	1ad3      	subs	r3, r2, r3
 800ac2e:	461a      	mov	r2, r3
 800ac30:	4b6e      	ldr	r3, [pc, #440]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac32:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800ac34:	7f7b      	ldrb	r3, [r7, #29]
 800ac36:	2b10      	cmp	r3, #16
 800ac38:	d101      	bne.n	800ac3e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 800ac3a:	2202      	movs	r2, #2
 800ac3c:	e000      	b.n	800ac40 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfc>
 800ac3e:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 800ac40:	683b      	ldr	r3, [r7, #0]
 800ac42:	8adb      	ldrh	r3, [r3, #22]
 800ac44:	4619      	mov	r1, r3
 800ac46:	683b      	ldr	r3, [r7, #0]
 800ac48:	8a1b      	ldrh	r3, [r3, #16]
 800ac4a:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800ac4c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800ac4e:	4867      	ldr	r0, [pc, #412]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac50:	f7ff fe96 	bl	800a980 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800ac54:	4a65      	ldr	r2, [pc, #404]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac56:	6a3b      	ldr	r3, [r7, #32]
 800ac58:	62d3      	str	r3, [r2, #44]	; 0x2c
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 800ac5a:	683b      	ldr	r3, [r7, #0]
 800ac5c:	8a9b      	ldrh	r3, [r3, #20]
 800ac5e:	461a      	mov	r2, r3
 800ac60:	683b      	ldr	r3, [r7, #0]
 800ac62:	8a1b      	ldrh	r3, [r3, #16]
 800ac64:	1ad3      	subs	r3, r2, r3
 800ac66:	461a      	mov	r2, r3
 800ac68:	4b60      	ldr	r3, [pc, #384]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac6a:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 800ac6c:	7ffb      	ldrb	r3, [r7, #31]
 800ac6e:	2b00      	cmp	r3, #0
 800ac70:	d103      	bne.n	800ac7a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 800ac72:	7fbb      	ldrb	r3, [r7, #30]
 800ac74:	2b00      	cmp	r3, #0
 800ac76:	f000 8084 	beq.w	800ad82 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x23e>
    {
        if (blitOp.alpha < 255)
 800ac7a:	683b      	ldr	r3, [r7, #0]
 800ac7c:	7f1b      	ldrb	r3, [r3, #28]
 800ac7e:	2bff      	cmp	r3, #255	; 0xff
 800ac80:	d008      	beq.n	800ac94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 800ac82:	4b5a      	ldr	r3, [pc, #360]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac84:	2202      	movs	r2, #2
 800ac86:	631a      	str	r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 800ac88:	683b      	ldr	r3, [r7, #0]
 800ac8a:	7f1b      	ldrb	r3, [r3, #28]
 800ac8c:	461a      	mov	r2, r3
 800ac8e:	4b57      	ldr	r3, [pc, #348]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac90:	635a      	str	r2, [r3, #52]	; 0x34
 800ac92:	e002      	b.n	800ac9a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 800ac94:	4b55      	ldr	r3, [pc, #340]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ac96:	2200      	movs	r2, #0
 800ac98:	631a      	str	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 800ac9a:	7fbb      	ldrb	r3, [r7, #30]
 800ac9c:	2b00      	cmp	r3, #0
 800ac9e:	d05b      	beq.n	800ad58 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x214>
        {
            if (bitDepth == 16)
 800aca0:	7f7b      	ldrb	r3, [r7, #29]
 800aca2:	2b10      	cmp	r3, #16
 800aca4:	d14c      	bne.n	800ad40 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1fc>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 800aca6:	683b      	ldr	r3, [r7, #0]
 800aca8:	3318      	adds	r3, #24
 800acaa:	4618      	mov	r0, r3
 800acac:	f7ff fdc6 	bl	800a83c <_ZNK8touchgfx9colortypecvtEv>
 800acb0:	4603      	mov	r3, r0
 800acb2:	0adb      	lsrs	r3, r3, #11
 800acb4:	b29b      	uxth	r3, r3
 800acb6:	f003 021f 	and.w	r2, r3, #31
 800acba:	4613      	mov	r3, r2
 800acbc:	021b      	lsls	r3, r3, #8
 800acbe:	1a9b      	subs	r3, r3, r2
 800acc0:	4a4b      	ldr	r2, [pc, #300]	; (800adf0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 800acc2:	fb82 1203 	smull	r1, r2, r2, r3
 800acc6:	441a      	add	r2, r3
 800acc8:	1112      	asrs	r2, r2, #4
 800acca:	17db      	asrs	r3, r3, #31
 800accc:	1ad3      	subs	r3, r2, r3
 800acce:	61bb      	str	r3, [r7, #24]
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 800acd0:	683b      	ldr	r3, [r7, #0]
 800acd2:	3318      	adds	r3, #24
 800acd4:	4618      	mov	r0, r3
 800acd6:	f7ff fdb1 	bl	800a83c <_ZNK8touchgfx9colortypecvtEv>
 800acda:	4603      	mov	r3, r0
 800acdc:	095b      	lsrs	r3, r3, #5
 800acde:	b29b      	uxth	r3, r3
 800ace0:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800ace4:	4613      	mov	r3, r2
 800ace6:	021b      	lsls	r3, r3, #8
 800ace8:	1a9b      	subs	r3, r3, r2
 800acea:	4a42      	ldr	r2, [pc, #264]	; (800adf4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>)
 800acec:	fb82 1203 	smull	r1, r2, r2, r3
 800acf0:	441a      	add	r2, r3
 800acf2:	1152      	asrs	r2, r2, #5
 800acf4:	17db      	asrs	r3, r3, #31
 800acf6:	1ad3      	subs	r3, r2, r3
 800acf8:	617b      	str	r3, [r7, #20]
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 800acfa:	683b      	ldr	r3, [r7, #0]
 800acfc:	3318      	adds	r3, #24
 800acfe:	4618      	mov	r0, r3
 800ad00:	f7ff fd9c 	bl	800a83c <_ZNK8touchgfx9colortypecvtEv>
 800ad04:	4603      	mov	r3, r0
 800ad06:	f003 021f 	and.w	r2, r3, #31
 800ad0a:	4613      	mov	r3, r2
 800ad0c:	021b      	lsls	r3, r3, #8
 800ad0e:	1a9b      	subs	r3, r3, r2
 800ad10:	4a37      	ldr	r2, [pc, #220]	; (800adf0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 800ad12:	fb82 1203 	smull	r1, r2, r2, r3
 800ad16:	441a      	add	r2, r3
 800ad18:	1112      	asrs	r2, r2, #4
 800ad1a:	17db      	asrs	r3, r3, #31
 800ad1c:	1ad3      	subs	r3, r2, r3
 800ad1e:	613b      	str	r3, [r7, #16]
                uint32_t alpha = blitOp.alpha;
 800ad20:	683b      	ldr	r3, [r7, #0]
 800ad22:	7f1b      	ldrb	r3, [r3, #28]
 800ad24:	60fb      	str	r3, [r7, #12]
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 800ad26:	68fb      	ldr	r3, [r7, #12]
 800ad28:	061a      	lsls	r2, r3, #24
 800ad2a:	69bb      	ldr	r3, [r7, #24]
 800ad2c:	041b      	lsls	r3, r3, #16
 800ad2e:	431a      	orrs	r2, r3
 800ad30:	697b      	ldr	r3, [r7, #20]
 800ad32:	021b      	lsls	r3, r3, #8
 800ad34:	431a      	orrs	r2, r3
 800ad36:	693b      	ldr	r3, [r7, #16]
 800ad38:	4313      	orrs	r3, r2
 800ad3a:	4a2c      	ldr	r2, [pc, #176]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad3c:	6353      	str	r3, [r2, #52]	; 0x34
 800ad3e:	e00b      	b.n	800ad58 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x214>
            }
            else
            {
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 800ad40:	683b      	ldr	r3, [r7, #0]
 800ad42:	3318      	adds	r3, #24
 800ad44:	4618      	mov	r0, r3
 800ad46:	f7ff fd6d 	bl	800a824 <_ZNK8touchgfx9colortype10getColor32Ev>
 800ad4a:	4602      	mov	r2, r0
 800ad4c:	683b      	ldr	r3, [r7, #0]
 800ad4e:	7f1b      	ldrb	r3, [r3, #28]
 800ad50:	061b      	lsls	r3, r3, #24
 800ad52:	4313      	orrs	r3, r2
 800ad54:	4a25      	ldr	r2, [pc, #148]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad56:	6353      	str	r3, [r2, #52]	; 0x34
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800ad58:	683b      	ldr	r3, [r7, #0]
 800ad5a:	8adb      	ldrh	r3, [r3, #22]
 800ad5c:	461a      	mov	r2, r3
 800ad5e:	683b      	ldr	r3, [r7, #0]
 800ad60:	8a1b      	ldrh	r3, [r3, #16]
 800ad62:	1ad3      	subs	r3, r2, r3
 800ad64:	461a      	mov	r2, r3
 800ad66:	4b21      	ldr	r3, [pc, #132]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad68:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800ad6a:	7f7b      	ldrb	r3, [r7, #29]
 800ad6c:	2b10      	cmp	r3, #16
 800ad6e:	d101      	bne.n	800ad74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
 800ad70:	2302      	movs	r3, #2
 800ad72:	e000      	b.n	800ad76 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x232>
 800ad74:	2301      	movs	r3, #1
 800ad76:	4a1d      	ldr	r2, [pc, #116]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad78:	61d3      	str	r3, [r2, #28]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800ad7a:	2100      	movs	r1, #0
 800ad7c:	481b      	ldr	r0, [pc, #108]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad7e:	f7f8 febb 	bl	8003af8 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 800ad82:	2101      	movs	r1, #1
 800ad84:	4819      	ldr	r0, [pc, #100]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800ad86:	f7f8 feb7 	bl	8003af8 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 800ad8a:	7ffb      	ldrb	r3, [r7, #31]
 800ad8c:	2b00      	cmp	r3, #0
 800ad8e:	d102      	bne.n	800ad96 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x252>
 800ad90:	7fbb      	ldrb	r3, [r7, #30]
 800ad92:	2b00      	cmp	r3, #0
 800ad94:	d015      	beq.n	800adc2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x27e>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pSrc,
 800ad96:	683b      	ldr	r3, [r7, #0]
 800ad98:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ad9a:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 800ad9c:	683b      	ldr	r3, [r7, #0]
 800ad9e:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ada0:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 800ada2:	683b      	ldr	r3, [r7, #0]
 800ada4:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800ada6:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800ada8:	683b      	ldr	r3, [r7, #0]
 800adaa:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800adac:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800adae:	683b      	ldr	r3, [r7, #0]
 800adb0:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800adb2:	9301      	str	r3, [sp, #4]
 800adb4:	9200      	str	r2, [sp, #0]
 800adb6:	4623      	mov	r3, r4
 800adb8:	4602      	mov	r2, r0
 800adba:	480c      	ldr	r0, [pc, #48]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800adbc:	f7f8 fcbf 	bl	800373e <HAL_DMA2D_BlendingStart_IT>
 800adc0:	e010      	b.n	800ade4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>
    }
    else
    {
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
 800adc2:	683b      	ldr	r3, [r7, #0]
 800adc4:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_Start_IT(&hdma2d,
 800adc6:	4619      	mov	r1, r3
                           (unsigned int)blitOp.pDst,
 800adc8:	683b      	ldr	r3, [r7, #0]
 800adca:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_Start_IT(&hdma2d,
 800adcc:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 800adce:	683b      	ldr	r3, [r7, #0]
 800add0:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d,
 800add2:	4618      	mov	r0, r3
                           blitOp.nSteps, blitOp.nLoops);
 800add4:	683b      	ldr	r3, [r7, #0]
 800add6:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d,
 800add8:	9300      	str	r3, [sp, #0]
 800adda:	4603      	mov	r3, r0
 800addc:	4803      	ldr	r0, [pc, #12]	; (800adec <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800adde:	f7f8 fc7b 	bl	80036d8 <HAL_DMA2D_Start_IT>
    }
}
 800ade2:	bf00      	nop
 800ade4:	bf00      	nop
 800ade6:	372c      	adds	r7, #44	; 0x2c
 800ade8:	46bd      	mov	sp, r7
 800adea:	bd90      	pop	{r4, r7, pc}
 800adec:	200002dc 	.word	0x200002dc
 800adf0:	84210843 	.word	0x84210843
 800adf4:	82082083 	.word	0x82082083

0800adf8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 800adf8:	b590      	push	{r4, r7, lr}
 800adfa:	b08d      	sub	sp, #52	; 0x34
 800adfc:	af02      	add	r7, sp, #8
 800adfe:	6078      	str	r0, [r7, #4]
 800ae00:	6039      	str	r1, [r7, #0]
    uint8_t bitDepth = HAL::lcd().bitDepth();
 800ae02:	f7fd fc4d 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800ae06:	4603      	mov	r3, r0
 800ae08:	681a      	ldr	r2, [r3, #0]
 800ae0a:	3220      	adds	r2, #32
 800ae0c:	6812      	ldr	r2, [r2, #0]
 800ae0e:	4618      	mov	r0, r3
 800ae10:	4790      	blx	r2
 800ae12:	4603      	mov	r3, r0
 800ae14:	77fb      	strb	r3, [r7, #31]
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800ae16:	7ffb      	ldrb	r3, [r7, #31]
 800ae18:	2b10      	cmp	r3, #16
 800ae1a:	d101      	bne.n	800ae20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x28>
 800ae1c:	2302      	movs	r3, #2
 800ae1e:	e000      	b.n	800ae22 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x2a>
 800ae20:	2301      	movs	r3, #1
 800ae22:	61bb      	str	r3, [r7, #24]

    uint32_t color = 0;
 800ae24:	2300      	movs	r3, #0
 800ae26:	623b      	str	r3, [r7, #32]
    if (bitDepth == 16)
 800ae28:	7ffb      	ldrb	r3, [r7, #31]
 800ae2a:	2b10      	cmp	r3, #16
 800ae2c:	d14b      	bne.n	800aec6 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 800ae2e:	683b      	ldr	r3, [r7, #0]
 800ae30:	3318      	adds	r3, #24
 800ae32:	4618      	mov	r0, r3
 800ae34:	f7ff fd02 	bl	800a83c <_ZNK8touchgfx9colortypecvtEv>
 800ae38:	4603      	mov	r3, r0
 800ae3a:	0adb      	lsrs	r3, r3, #11
 800ae3c:	b29b      	uxth	r3, r3
 800ae3e:	f003 021f 	and.w	r2, r3, #31
 800ae42:	4613      	mov	r3, r2
 800ae44:	021b      	lsls	r3, r3, #8
 800ae46:	1a9b      	subs	r3, r3, r2
 800ae48:	4a69      	ldr	r2, [pc, #420]	; (800aff0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 800ae4a:	fb82 1203 	smull	r1, r2, r2, r3
 800ae4e:	441a      	add	r2, r3
 800ae50:	1112      	asrs	r2, r2, #4
 800ae52:	17db      	asrs	r3, r3, #31
 800ae54:	1ad3      	subs	r3, r2, r3
 800ae56:	617b      	str	r3, [r7, #20]
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 800ae58:	683b      	ldr	r3, [r7, #0]
 800ae5a:	3318      	adds	r3, #24
 800ae5c:	4618      	mov	r0, r3
 800ae5e:	f7ff fced 	bl	800a83c <_ZNK8touchgfx9colortypecvtEv>
 800ae62:	4603      	mov	r3, r0
 800ae64:	095b      	lsrs	r3, r3, #5
 800ae66:	b29b      	uxth	r3, r3
 800ae68:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800ae6c:	4613      	mov	r3, r2
 800ae6e:	021b      	lsls	r3, r3, #8
 800ae70:	1a9b      	subs	r3, r3, r2
 800ae72:	4a60      	ldr	r2, [pc, #384]	; (800aff4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 800ae74:	fb82 1203 	smull	r1, r2, r2, r3
 800ae78:	441a      	add	r2, r3
 800ae7a:	1152      	asrs	r2, r2, #5
 800ae7c:	17db      	asrs	r3, r3, #31
 800ae7e:	1ad3      	subs	r3, r2, r3
 800ae80:	613b      	str	r3, [r7, #16]
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 800ae82:	683b      	ldr	r3, [r7, #0]
 800ae84:	3318      	adds	r3, #24
 800ae86:	4618      	mov	r0, r3
 800ae88:	f7ff fcd8 	bl	800a83c <_ZNK8touchgfx9colortypecvtEv>
 800ae8c:	4603      	mov	r3, r0
 800ae8e:	f003 021f 	and.w	r2, r3, #31
 800ae92:	4613      	mov	r3, r2
 800ae94:	021b      	lsls	r3, r3, #8
 800ae96:	1a9b      	subs	r3, r3, r2
 800ae98:	4a55      	ldr	r2, [pc, #340]	; (800aff0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 800ae9a:	fb82 1203 	smull	r1, r2, r2, r3
 800ae9e:	441a      	add	r2, r3
 800aea0:	1112      	asrs	r2, r2, #4
 800aea2:	17db      	asrs	r3, r3, #31
 800aea4:	1ad3      	subs	r3, r2, r3
 800aea6:	60fb      	str	r3, [r7, #12]
        uint32_t alpha = blitOp.alpha;
 800aea8:	683b      	ldr	r3, [r7, #0]
 800aeaa:	7f1b      	ldrb	r3, [r3, #28]
 800aeac:	60bb      	str	r3, [r7, #8]
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 800aeae:	68bb      	ldr	r3, [r7, #8]
 800aeb0:	061a      	lsls	r2, r3, #24
 800aeb2:	697b      	ldr	r3, [r7, #20]
 800aeb4:	041b      	lsls	r3, r3, #16
 800aeb6:	431a      	orrs	r2, r3
 800aeb8:	693b      	ldr	r3, [r7, #16]
 800aeba:	021b      	lsls	r3, r3, #8
 800aebc:	4313      	orrs	r3, r2
 800aebe:	68fa      	ldr	r2, [r7, #12]
 800aec0:	4313      	orrs	r3, r2
 800aec2:	623b      	str	r3, [r7, #32]
 800aec4:	e00b      	b.n	800aede <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe6>
    }
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 800aec6:	683b      	ldr	r3, [r7, #0]
 800aec8:	7f1b      	ldrb	r3, [r3, #28]
 800aeca:	061b      	lsls	r3, r3, #24
 800aecc:	461c      	mov	r4, r3
 800aece:	683b      	ldr	r3, [r7, #0]
 800aed0:	3318      	adds	r3, #24
 800aed2:	4618      	mov	r0, r3
 800aed4:	f7ff fca6 	bl	800a824 <_ZNK8touchgfx9colortype10getColor32Ev>
 800aed8:	4603      	mov	r3, r0
 800aeda:	4323      	orrs	r3, r4
 800aedc:	623b      	str	r3, [r7, #32]
    }

    switch (blitOp.operation)
 800aede:	683b      	ldr	r3, [r7, #0]
 800aee0:	681b      	ldr	r3, [r3, #0]
 800aee2:	2b08      	cmp	r3, #8
 800aee4:	d103      	bne.n	800aeee <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf6>
    {
    case BLIT_OP_FILL_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800aee6:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800aeea:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800aeec:	e003      	b.n	800aef6 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfe>
    default:
        dma2dTransferMode = DMA2D_R2M;
 800aeee:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 800aef2:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 800aef4:	bf00      	nop
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800aef6:	4a40      	ldr	r2, [pc, #256]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800aef8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800aefa:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 800aefc:	7ffb      	ldrb	r3, [r7, #31]
 800aefe:	2b10      	cmp	r3, #16
 800af00:	d101      	bne.n	800af06 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10e>
 800af02:	2302      	movs	r3, #2
 800af04:	e000      	b.n	800af08 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>
 800af06:	2301      	movs	r3, #1
 800af08:	4a3b      	ldr	r2, [pc, #236]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af0a:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800af0c:	683b      	ldr	r3, [r7, #0]
 800af0e:	8adb      	ldrh	r3, [r3, #22]
 800af10:	461a      	mov	r2, r3
 800af12:	683b      	ldr	r3, [r7, #0]
 800af14:	8a1b      	ldrh	r3, [r3, #16]
 800af16:	1ad3      	subs	r3, r2, r3
 800af18:	461a      	mov	r2, r3
 800af1a:	4b37      	ldr	r3, [pc, #220]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af1c:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800af1e:	7ffb      	ldrb	r3, [r7, #31]
 800af20:	2b10      	cmp	r3, #16
 800af22:	d101      	bne.n	800af28 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x130>
 800af24:	2202      	movs	r2, #2
 800af26:	e000      	b.n	800af2a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x132>
 800af28:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 800af2a:	683b      	ldr	r3, [r7, #0]
 800af2c:	8adb      	ldrh	r3, [r3, #22]
 800af2e:	4619      	mov	r1, r3
 800af30:	683b      	ldr	r3, [r7, #0]
 800af32:	8a1b      	ldrh	r3, [r3, #16]
 800af34:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800af36:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800af38:	482f      	ldr	r0, [pc, #188]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af3a:	f7ff fd21 	bl	800a980 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    if (dma2dTransferMode == DMA2D_M2M_BLEND) {
 800af3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af40:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800af44:	d11e      	bne.n	800af84 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18c>
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 800af46:	4b2c      	ldr	r3, [pc, #176]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af48:	2201      	movs	r2, #1
 800af4a:	631a      	str	r2, [r3, #48]	; 0x30
        hdma2d.LayerCfg[1].InputAlpha = color;
 800af4c:	4a2a      	ldr	r2, [pc, #168]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af4e:	6a3b      	ldr	r3, [r7, #32]
 800af50:	6353      	str	r3, [r2, #52]	; 0x34
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800af52:	4b29      	ldr	r3, [pc, #164]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af54:	2209      	movs	r2, #9
 800af56:	62da      	str	r2, [r3, #44]	; 0x2c
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 800af58:	683b      	ldr	r3, [r7, #0]
 800af5a:	8adb      	ldrh	r3, [r3, #22]
 800af5c:	461a      	mov	r2, r3
 800af5e:	683b      	ldr	r3, [r7, #0]
 800af60:	8a1b      	ldrh	r3, [r3, #16]
 800af62:	1ad3      	subs	r3, r2, r3
 800af64:	461a      	mov	r2, r3
 800af66:	4b24      	ldr	r3, [pc, #144]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af68:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800af6a:	7ffb      	ldrb	r3, [r7, #31]
 800af6c:	2b10      	cmp	r3, #16
 800af6e:	d101      	bne.n	800af74 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17c>
 800af70:	2302      	movs	r3, #2
 800af72:	e000      	b.n	800af76 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17e>
 800af74:	2301      	movs	r3, #1
 800af76:	4a20      	ldr	r2, [pc, #128]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af78:	61d3      	str	r3, [r2, #28]
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 800af7a:	2100      	movs	r1, #0
 800af7c:	481e      	ldr	r0, [pc, #120]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af7e:	f7f8 fdbb 	bl	8003af8 <HAL_DMA2D_ConfigLayer>
 800af82:	e005      	b.n	800af90 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x198>
    } else {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 800af84:	4a1c      	ldr	r2, [pc, #112]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af86:	69bb      	ldr	r3, [r7, #24]
 800af88:	62d3      	str	r3, [r2, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 800af8a:	4b1b      	ldr	r3, [pc, #108]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af8c:	2200      	movs	r2, #0
 800af8e:	629a      	str	r2, [r3, #40]	; 0x28
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 800af90:	2101      	movs	r1, #1
 800af92:	4819      	ldr	r0, [pc, #100]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800af94:	f7f8 fdb0 	bl	8003af8 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800af98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af9a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800af9e:	d115      	bne.n	800afcc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1d4>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pDst,
 800afa0:	683b      	ldr	r3, [r7, #0]
 800afa2:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800afa4:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 800afa6:	683b      	ldr	r3, [r7, #0]
 800afa8:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800afaa:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 800afac:	683b      	ldr	r3, [r7, #0]
 800afae:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800afb0:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800afb2:	683b      	ldr	r3, [r7, #0]
 800afb4:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800afb6:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 800afb8:	683b      	ldr	r3, [r7, #0]
 800afba:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800afbc:	9301      	str	r3, [sp, #4]
 800afbe:	9200      	str	r2, [sp, #0]
 800afc0:	4623      	mov	r3, r4
 800afc2:	4602      	mov	r2, r0
 800afc4:	480c      	ldr	r0, [pc, #48]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800afc6:	f7f8 fbba 	bl	800373e <HAL_DMA2D_BlendingStart_IT>
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 800afca:	e00d      	b.n	800afe8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f0>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800afcc:	683b      	ldr	r3, [r7, #0]
 800afce:	68db      	ldr	r3, [r3, #12]
 800afd0:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 800afd2:	683b      	ldr	r3, [r7, #0]
 800afd4:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800afd6:	4619      	mov	r1, r3
                           blitOp.nSteps, blitOp.nLoops);
 800afd8:	683b      	ldr	r3, [r7, #0]
 800afda:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 800afdc:	9300      	str	r3, [sp, #0]
 800afde:	460b      	mov	r3, r1
 800afe0:	6a39      	ldr	r1, [r7, #32]
 800afe2:	4805      	ldr	r0, [pc, #20]	; (800aff8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x200>)
 800afe4:	f7f8 fb78 	bl	80036d8 <HAL_DMA2D_Start_IT>
}
 800afe8:	bf00      	nop
 800afea:	372c      	adds	r7, #44	; 0x2c
 800afec:	46bd      	mov	sp, r7
 800afee:	bd90      	pop	{r4, r7, pc}
 800aff0:	84210843 	.word	0x84210843
 800aff4:	82082083 	.word	0x82082083
 800aff8:	200002dc 	.word	0x200002dc

0800affc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800affc:	b580      	push	{r7, lr}
 800affe:	b082      	sub	sp, #8
 800b000:	af00      	add	r7, sp, #0
 800b002:	6078      	str	r0, [r7, #4]
 800b004:	4a05      	ldr	r2, [pc, #20]	; (800b01c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800b006:	687b      	ldr	r3, [r7, #4]
 800b008:	601a      	str	r2, [r3, #0]
 800b00a:	687b      	ldr	r3, [r7, #4]
 800b00c:	4618      	mov	r0, r3
 800b00e:	f7ff fc23 	bl	800a858 <_ZN8touchgfx9DMA_QueueD1Ev>
 800b012:	687b      	ldr	r3, [r7, #4]
 800b014:	4618      	mov	r0, r3
 800b016:	3708      	adds	r7, #8
 800b018:	46bd      	mov	sp, r7
 800b01a:	bd80      	pop	{r7, pc}
 800b01c:	0801fde8 	.word	0x0801fde8

0800b020 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b020:	b580      	push	{r7, lr}
 800b022:	b082      	sub	sp, #8
 800b024:	af00      	add	r7, sp, #0
 800b026:	6078      	str	r0, [r7, #4]
 800b028:	6878      	ldr	r0, [r7, #4]
 800b02a:	f7ff ffe7 	bl	800affc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800b02e:	2114      	movs	r1, #20
 800b030:	6878      	ldr	r0, [r7, #4]
 800b032:	f010 fc7c 	bl	801b92e <_ZdlPvj>
 800b036:	687b      	ldr	r3, [r7, #4]
 800b038:	4618      	mov	r0, r3
 800b03a:	3708      	adds	r7, #8
 800b03c:	46bd      	mov	sp, r7
 800b03e:	bd80      	pop	{r7, pc}

0800b040 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
    static void registerTexts(const Texts* t)
 800b040:	b480      	push	{r7}
 800b042:	b083      	sub	sp, #12
 800b044:	af00      	add	r7, sp, #0
 800b046:	6078      	str	r0, [r7, #4]
        texts = t;
 800b048:	4a04      	ldr	r2, [pc, #16]	; (800b05c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800b04a:	687b      	ldr	r3, [r7, #4]
 800b04c:	6013      	str	r3, [r2, #0]
    }
 800b04e:	bf00      	nop
 800b050:	370c      	adds	r7, #12
 800b052:	46bd      	mov	sp, r7
 800b054:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b058:	4770      	bx	lr
 800b05a:	bf00      	nop
 800b05c:	2000181c 	.word	0x2000181c

0800b060 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800b060:	b480      	push	{r7}
 800b062:	b085      	sub	sp, #20
 800b064:	af00      	add	r7, sp, #0
 800b066:	60f8      	str	r0, [r7, #12]
 800b068:	60b9      	str	r1, [r7, #8]
 800b06a:	607a      	str	r2, [r7, #4]
 800b06c:	603b      	str	r3, [r7, #0]
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app) : presenterStorage(pres),
        screenStorage(scr),
        transitionStorage(tra),
        frontendApplication(app)
 800b06e:	4a0b      	ldr	r2, [pc, #44]	; (800b09c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800b070:	68fb      	ldr	r3, [r7, #12]
 800b072:	601a      	str	r2, [r3, #0]
 800b074:	68fb      	ldr	r3, [r7, #12]
 800b076:	68ba      	ldr	r2, [r7, #8]
 800b078:	605a      	str	r2, [r3, #4]
 800b07a:	68fb      	ldr	r3, [r7, #12]
 800b07c:	687a      	ldr	r2, [r7, #4]
 800b07e:	609a      	str	r2, [r3, #8]
 800b080:	68fb      	ldr	r3, [r7, #12]
 800b082:	683a      	ldr	r2, [r7, #0]
 800b084:	60da      	str	r2, [r3, #12]
 800b086:	68fb      	ldr	r3, [r7, #12]
 800b088:	69ba      	ldr	r2, [r7, #24]
 800b08a:	611a      	str	r2, [r3, #16]
    {
    }
 800b08c:	68fb      	ldr	r3, [r7, #12]
 800b08e:	4618      	mov	r0, r3
 800b090:	3714      	adds	r7, #20
 800b092:	46bd      	mov	sp, r7
 800b094:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b098:	4770      	bx	lr
 800b09a:	bf00      	nop
 800b09c:	0801f330 	.word	0x0801f330

0800b0a0 <_ZN8touchgfx7MVPHeapD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPHeap()
 800b0a0:	b480      	push	{r7}
 800b0a2:	b083      	sub	sp, #12
 800b0a4:	af00      	add	r7, sp, #0
 800b0a6:	6078      	str	r0, [r7, #4]
    {
 800b0a8:	4a04      	ldr	r2, [pc, #16]	; (800b0bc <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800b0aa:	687b      	ldr	r3, [r7, #4]
 800b0ac:	601a      	str	r2, [r3, #0]
    }
 800b0ae:	687b      	ldr	r3, [r7, #4]
 800b0b0:	4618      	mov	r0, r3
 800b0b2:	370c      	adds	r7, #12
 800b0b4:	46bd      	mov	sp, r7
 800b0b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0ba:	4770      	bx	lr
 800b0bc:	0801f330 	.word	0x0801f330

0800b0c0 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800b0c0:	b580      	push	{r7, lr}
 800b0c2:	b082      	sub	sp, #8
 800b0c4:	af00      	add	r7, sp, #0
 800b0c6:	6078      	str	r0, [r7, #4]
    }
 800b0c8:	6878      	ldr	r0, [r7, #4]
 800b0ca:	f7ff ffe9 	bl	800b0a0 <_ZN8touchgfx7MVPHeapD1Ev>
 800b0ce:	2114      	movs	r1, #20
 800b0d0:	6878      	ldr	r0, [r7, #4]
 800b0d2:	f010 fc2c 	bl	801b92e <_ZdlPvj>
 800b0d6:	687b      	ldr	r3, [r7, #4]
 800b0d8:	4618      	mov	r0, r3
 800b0da:	3708      	adds	r7, #8
 800b0dc:	46bd      	mov	sp, r7
 800b0de:	bd80      	pop	{r7, pc}

0800b0e0 <_ZN8touchgfx3LCDD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~LCD()
 800b0e0:	b480      	push	{r7}
 800b0e2:	b083      	sub	sp, #12
 800b0e4:	af00      	add	r7, sp, #0
 800b0e6:	6078      	str	r0, [r7, #4]
    {
 800b0e8:	4a04      	ldr	r2, [pc, #16]	; (800b0fc <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800b0ea:	687b      	ldr	r3, [r7, #4]
 800b0ec:	601a      	str	r2, [r3, #0]
    }
 800b0ee:	687b      	ldr	r3, [r7, #4]
 800b0f0:	4618      	mov	r0, r3
 800b0f2:	370c      	adds	r7, #12
 800b0f4:	46bd      	mov	sp, r7
 800b0f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0fa:	4770      	bx	lr
 800b0fc:	08020184 	.word	0x08020184

0800b100 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800b100:	b580      	push	{r7, lr}
 800b102:	b082      	sub	sp, #8
 800b104:	af00      	add	r7, sp, #0
 800b106:	6078      	str	r0, [r7, #4]
    }
 800b108:	6878      	ldr	r0, [r7, #4]
 800b10a:	f7ff ffe9 	bl	800b0e0 <_ZN8touchgfx3LCDD1Ev>
 800b10e:	2108      	movs	r1, #8
 800b110:	6878      	ldr	r0, [r7, #4]
 800b112:	f010 fc0c 	bl	801b92e <_ZdlPvj>
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	4618      	mov	r0, r3
 800b11a:	3708      	adds	r7, #8
 800b11c:	46bd      	mov	sp, r7
 800b11e:	bd80      	pop	{r7, pc}

0800b120 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
     *
     *        Defines the state of a drag.
     */
    struct DragState
    {
        DragState() : startX(0),
 800b120:	b480      	push	{r7}
 800b122:	b083      	sub	sp, #12
 800b124:	af00      	add	r7, sp, #0
 800b126:	6078      	str	r0, [r7, #4]
            downX(0),
            downY(0),
            tickCount(0),
            velocityX(0),
            velocityY(0),
            inProgress(false)
 800b128:	687b      	ldr	r3, [r7, #4]
 800b12a:	2200      	movs	r2, #0
 800b12c:	801a      	strh	r2, [r3, #0]
 800b12e:	687b      	ldr	r3, [r7, #4]
 800b130:	2200      	movs	r2, #0
 800b132:	805a      	strh	r2, [r3, #2]
 800b134:	687b      	ldr	r3, [r7, #4]
 800b136:	2200      	movs	r2, #0
 800b138:	809a      	strh	r2, [r3, #4]
 800b13a:	687b      	ldr	r3, [r7, #4]
 800b13c:	2200      	movs	r2, #0
 800b13e:	80da      	strh	r2, [r3, #6]
 800b140:	687b      	ldr	r3, [r7, #4]
 800b142:	2200      	movs	r2, #0
 800b144:	811a      	strh	r2, [r3, #8]
 800b146:	687b      	ldr	r3, [r7, #4]
 800b148:	2200      	movs	r2, #0
 800b14a:	815a      	strh	r2, [r3, #10]
 800b14c:	687b      	ldr	r3, [r7, #4]
 800b14e:	2200      	movs	r2, #0
 800b150:	819a      	strh	r2, [r3, #12]
 800b152:	687b      	ldr	r3, [r7, #4]
 800b154:	2200      	movs	r2, #0
 800b156:	739a      	strb	r2, [r3, #14]
        {
        }
 800b158:	687b      	ldr	r3, [r7, #4]
 800b15a:	4618      	mov	r0, r3
 800b15c:	370c      	adds	r7, #12
 800b15e:	46bd      	mov	sp, r7
 800b160:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b164:	4770      	bx	lr

0800b166 <_ZN8touchgfx8GesturesC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Does nothing.
     */
    Gestures() : listener(0), dragThresholdValue(0) { }
 800b166:	b580      	push	{r7, lr}
 800b168:	b082      	sub	sp, #8
 800b16a:	af00      	add	r7, sp, #0
 800b16c:	6078      	str	r0, [r7, #4]
 800b16e:	687b      	ldr	r3, [r7, #4]
 800b170:	4618      	mov	r0, r3
 800b172:	f7ff ffd5 	bl	800b120 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800b176:	687b      	ldr	r3, [r7, #4]
 800b178:	2200      	movs	r2, #0
 800b17a:	611a      	str	r2, [r3, #16]
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	2200      	movs	r2, #0
 800b180:	829a      	strh	r2, [r3, #20]
 800b182:	687b      	ldr	r3, [r7, #4]
 800b184:	4618      	mov	r0, r3
 800b186:	3708      	adds	r7, #8
 800b188:	46bd      	mov	sp, r7
 800b18a:	bd80      	pop	{r7, pc}

0800b18c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height) :
 800b18c:	b580      	push	{r7, lr}
 800b18e:	b084      	sub	sp, #16
 800b190:	af00      	add	r7, sp, #0
 800b192:	60f8      	str	r0, [r7, #12]
 800b194:	60b9      	str	r1, [r7, #8]
 800b196:	607a      	str	r2, [r7, #4]
 800b198:	603b      	str	r3, [r7, #0]
        displayOrientationChangeRequested(false)
 800b19a:	4a44      	ldr	r2, [pc, #272]	; (800b2ac <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x120>)
 800b19c:	68fb      	ldr	r3, [r7, #12]
 800b19e:	601a      	str	r2, [r3, #0]
 800b1a0:	68fb      	ldr	r3, [r7, #12]
 800b1a2:	68ba      	ldr	r2, [r7, #8]
 800b1a4:	605a      	str	r2, [r3, #4]
 800b1a6:	68fb      	ldr	r3, [r7, #12]
 800b1a8:	687a      	ldr	r2, [r7, #4]
 800b1aa:	609a      	str	r2, [r3, #8]
 800b1ac:	68fb      	ldr	r3, [r7, #12]
 800b1ae:	683a      	ldr	r2, [r7, #0]
 800b1b0:	60da      	str	r2, [r3, #12]
 800b1b2:	68fb      	ldr	r3, [r7, #12]
 800b1b4:	2200      	movs	r2, #0
 800b1b6:	611a      	str	r2, [r3, #16]
 800b1b8:	68fb      	ldr	r3, [r7, #12]
 800b1ba:	2200      	movs	r2, #0
 800b1bc:	615a      	str	r2, [r3, #20]
 800b1be:	68fb      	ldr	r3, [r7, #12]
 800b1c0:	2200      	movs	r2, #0
 800b1c2:	619a      	str	r2, [r3, #24]
 800b1c4:	68fb      	ldr	r3, [r7, #12]
 800b1c6:	331c      	adds	r3, #28
 800b1c8:	4618      	mov	r0, r3
 800b1ca:	f7ff ffcc 	bl	800b166 <_ZN8touchgfx8GesturesC1Ev>
 800b1ce:	68fb      	ldr	r3, [r7, #12]
 800b1d0:	2200      	movs	r2, #0
 800b1d2:	639a      	str	r2, [r3, #56]	; 0x38
 800b1d4:	68fb      	ldr	r3, [r7, #12]
 800b1d6:	2200      	movs	r2, #0
 800b1d8:	63da      	str	r2, [r3, #60]	; 0x3c
 800b1da:	68fb      	ldr	r3, [r7, #12]
 800b1dc:	2200      	movs	r2, #0
 800b1de:	641a      	str	r2, [r3, #64]	; 0x40
 800b1e0:	68fb      	ldr	r3, [r7, #12]
 800b1e2:	2200      	movs	r2, #0
 800b1e4:	645a      	str	r2, [r3, #68]	; 0x44
 800b1e6:	68fb      	ldr	r3, [r7, #12]
 800b1e8:	2200      	movs	r2, #0
 800b1ea:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800b1ee:	68fb      	ldr	r3, [r7, #12]
 800b1f0:	2201      	movs	r2, #1
 800b1f2:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 800b1f6:	68fb      	ldr	r3, [r7, #12]
 800b1f8:	2201      	movs	r2, #1
 800b1fa:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 800b1fe:	68fb      	ldr	r3, [r7, #12]
 800b200:	2200      	movs	r2, #0
 800b202:	64da      	str	r2, [r3, #76]	; 0x4c
 800b204:	68fb      	ldr	r3, [r7, #12]
 800b206:	3350      	adds	r3, #80	; 0x50
 800b208:	4618      	mov	r0, r3
 800b20a:	f7fd fe68 	bl	8008ede <_ZN8touchgfx4RectC1Ev>
 800b20e:	68fb      	ldr	r3, [r7, #12]
 800b210:	2201      	movs	r2, #1
 800b212:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 800b216:	68fb      	ldr	r3, [r7, #12]
 800b218:	2200      	movs	r2, #0
 800b21a:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 800b21e:	68fb      	ldr	r3, [r7, #12]
 800b220:	2200      	movs	r2, #0
 800b222:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 800b226:	68fb      	ldr	r3, [r7, #12]
 800b228:	2201      	movs	r2, #1
 800b22a:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 800b22e:	68fb      	ldr	r3, [r7, #12]
 800b230:	2200      	movs	r2, #0
 800b232:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800b236:	68fb      	ldr	r3, [r7, #12]
 800b238:	2200      	movs	r2, #0
 800b23a:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 800b23e:	68fb      	ldr	r3, [r7, #12]
 800b240:	2200      	movs	r2, #0
 800b242:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 800b246:	68fb      	ldr	r3, [r7, #12]
 800b248:	2200      	movs	r2, #0
 800b24a:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800b24e:	68fb      	ldr	r3, [r7, #12]
 800b250:	2200      	movs	r2, #0
 800b252:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800b256:	68fb      	ldr	r3, [r7, #12]
 800b258:	2200      	movs	r2, #0
 800b25a:	671a      	str	r2, [r3, #112]	; 0x70
 800b25c:	68fb      	ldr	r3, [r7, #12]
 800b25e:	2200      	movs	r2, #0
 800b260:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
        instance = this;
 800b264:	4a12      	ldr	r2, [pc, #72]	; (800b2b0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x124>)
 800b266:	68fb      	ldr	r3, [r7, #12]
 800b268:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
 800b26a:	4a12      	ldr	r2, [pc, #72]	; (800b2b4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800b26c:	8b3b      	ldrh	r3, [r7, #24]
 800b26e:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
 800b270:	4a11      	ldr	r2, [pc, #68]	; (800b2b8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800b272:	8bbb      	ldrh	r3, [r7, #28]
 800b274:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 800b276:	4b11      	ldr	r3, [pc, #68]	; (800b2bc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x130>)
 800b278:	2200      	movs	r2, #0
 800b27a:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800b27c:	4b0d      	ldr	r3, [pc, #52]	; (800b2b4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800b27e:	881a      	ldrh	r2, [r3, #0]
 800b280:	4b0f      	ldr	r3, [pc, #60]	; (800b2c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x134>)
 800b282:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800b284:	4b0c      	ldr	r3, [pc, #48]	; (800b2b8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800b286:	881a      	ldrh	r2, [r3, #0]
 800b288:	4b0e      	ldr	r3, [pc, #56]	; (800b2c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
 800b28a:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800b28c:	8b3a      	ldrh	r2, [r7, #24]
 800b28e:	8bbb      	ldrh	r3, [r7, #28]
 800b290:	429a      	cmp	r2, r3
 800b292:	bf34      	ite	cc
 800b294:	2301      	movcc	r3, #1
 800b296:	2300      	movcs	r3, #0
 800b298:	b2db      	uxtb	r3, r3
 800b29a:	461a      	mov	r2, r3
 800b29c:	68fb      	ldr	r3, [r7, #12]
 800b29e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800b2a2:	68fb      	ldr	r3, [r7, #12]
 800b2a4:	4618      	mov	r0, r3
 800b2a6:	3710      	adds	r7, #16
 800b2a8:	46bd      	mov	sp, r7
 800b2aa:	bd80      	pop	{r7, pc}
 800b2ac:	0801f954 	.word	0x0801f954
 800b2b0:	200017a0 	.word	0x200017a0
 800b2b4:	20001794 	.word	0x20001794
 800b2b8:	20001796 	.word	0x20001796
 800b2bc:	20001798 	.word	0x20001798
 800b2c0:	2000179a 	.word	0x2000179a
 800b2c4:	2000179c 	.word	0x2000179c

0800b2c8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800b2c8:	b580      	push	{r7, lr}
 800b2ca:	b082      	sub	sp, #8
 800b2cc:	af00      	add	r7, sp, #0
 800b2ce:	6078      	str	r0, [r7, #4]
 800b2d0:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800b2d2:	683b      	ldr	r3, [r7, #0]
 800b2d4:	4618      	mov	r0, r3
 800b2d6:	f7fd fc07 	bl	8008ae8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800b2da:	bf00      	nop
 800b2dc:	3708      	adds	r7, #8
 800b2de:	46bd      	mov	sp, r7
 800b2e0:	bd80      	pop	{r7, pc}
	...

0800b2e4 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800b2e4:	b580      	push	{r7, lr}
 800b2e6:	b086      	sub	sp, #24
 800b2e8:	af02      	add	r7, sp, #8
 800b2ea:	60f8      	str	r0, [r7, #12]
 800b2ec:	60b9      	str	r1, [r7, #8]
 800b2ee:	607a      	str	r2, [r7, #4]
 800b2f0:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800b2f2:	68f8      	ldr	r0, [r7, #12]
 800b2f4:	69bb      	ldr	r3, [r7, #24]
 800b2f6:	9300      	str	r3, [sp, #0]
 800b2f8:	683b      	ldr	r3, [r7, #0]
 800b2fa:	687a      	ldr	r2, [r7, #4]
 800b2fc:	68b9      	ldr	r1, [r7, #8]
 800b2fe:	f7ff feaf 	bl	800b060 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800b302:	4a04      	ldr	r2, [pc, #16]	; (800b314 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800b304:	68fb      	ldr	r3, [r7, #12]
 800b306:	601a      	str	r2, [r3, #0]
    {

    }
 800b308:	68fb      	ldr	r3, [r7, #12]
 800b30a:	4618      	mov	r0, r3
 800b30c:	3710      	adds	r7, #16
 800b30e:	46bd      	mov	sp, r7
 800b310:	bd80      	pop	{r7, pc}
 800b312:	bf00      	nop
 800b314:	0801f31c 	.word	0x0801f31c

0800b318 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800b318:	b580      	push	{r7, lr}
 800b31a:	af00      	add	r7, sp, #0
 800b31c:	4801      	ldr	r0, [pc, #4]	; (800b324 <__tcf_0+0xc>)
 800b31e:	f000 f9eb 	bl	800b6f8 <_ZN12FrontendHeapD1Ev>
 800b322:	bd80      	pop	{r7, pc}
 800b324:	200006c4 	.word	0x200006c4

0800b328 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800b328:	b580      	push	{r7, lr}
 800b32a:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800b32c:	4b12      	ldr	r3, [pc, #72]	; (800b378 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800b32e:	781b      	ldrb	r3, [r3, #0]
 800b330:	f3bf 8f5b 	dmb	ish
 800b334:	b2db      	uxtb	r3, r3
 800b336:	f003 0301 	and.w	r3, r3, #1
 800b33a:	2b00      	cmp	r3, #0
 800b33c:	bf0c      	ite	eq
 800b33e:	2301      	moveq	r3, #1
 800b340:	2300      	movne	r3, #0
 800b342:	b2db      	uxtb	r3, r3
 800b344:	2b00      	cmp	r3, #0
 800b346:	d013      	beq.n	800b370 <_ZN12FrontendHeap11getInstanceEv+0x48>
 800b348:	480b      	ldr	r0, [pc, #44]	; (800b378 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800b34a:	f010 faf2 	bl	801b932 <__cxa_guard_acquire>
 800b34e:	4603      	mov	r3, r0
 800b350:	2b00      	cmp	r3, #0
 800b352:	bf14      	ite	ne
 800b354:	2301      	movne	r3, #1
 800b356:	2300      	moveq	r3, #0
 800b358:	b2db      	uxtb	r3, r3
 800b35a:	2b00      	cmp	r3, #0
 800b35c:	d008      	beq.n	800b370 <_ZN12FrontendHeap11getInstanceEv+0x48>
 800b35e:	4807      	ldr	r0, [pc, #28]	; (800b37c <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800b360:	f000 f832 	bl	800b3c8 <_ZN12FrontendHeapC1Ev>
 800b364:	4806      	ldr	r0, [pc, #24]	; (800b380 <_ZN12FrontendHeap11getInstanceEv+0x58>)
 800b366:	f010 fb2f 	bl	801b9c8 <atexit>
 800b36a:	4803      	ldr	r0, [pc, #12]	; (800b378 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800b36c:	f010 faed 	bl	801b94a <__cxa_guard_release>
        return instance;
 800b370:	4b02      	ldr	r3, [pc, #8]	; (800b37c <_ZN12FrontendHeap11getInstanceEv+0x54>)
    }
 800b372:	4618      	mov	r0, r3
 800b374:	bd80      	pop	{r7, pc}
 800b376:	bf00      	nop
 800b378:	20000a74 	.word	0x20000a74
 800b37c:	200006c4 	.word	0x200006c4
 800b380:	0800b319 	.word	0x0800b319

0800b384 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800b384:	b580      	push	{r7, lr}
 800b386:	b082      	sub	sp, #8
 800b388:	af00      	add	r7, sp, #0
 800b38a:	6078      	str	r0, [r7, #4]
 800b38c:	4a05      	ldr	r2, [pc, #20]	; (800b3a4 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800b38e:	687b      	ldr	r3, [r7, #4]
 800b390:	601a      	str	r2, [r3, #0]
 800b392:	687b      	ldr	r3, [r7, #4]
 800b394:	4618      	mov	r0, r3
 800b396:	f7ff fe83 	bl	800b0a0 <_ZN8touchgfx7MVPHeapD1Ev>
 800b39a:	687b      	ldr	r3, [r7, #4]
 800b39c:	4618      	mov	r0, r3
 800b39e:	3708      	adds	r7, #8
 800b3a0:	46bd      	mov	sp, r7
 800b3a2:	bd80      	pop	{r7, pc}
 800b3a4:	0801f31c 	.word	0x0801f31c

0800b3a8 <_ZN16FrontendHeapBaseD0Ev>:
 800b3a8:	b580      	push	{r7, lr}
 800b3aa:	b082      	sub	sp, #8
 800b3ac:	af00      	add	r7, sp, #0
 800b3ae:	6078      	str	r0, [r7, #4]
 800b3b0:	6878      	ldr	r0, [r7, #4]
 800b3b2:	f7ff ffe7 	bl	800b384 <_ZN16FrontendHeapBaseD1Ev>
 800b3b6:	2114      	movs	r1, #20
 800b3b8:	6878      	ldr	r0, [r7, #4]
 800b3ba:	f010 fab8 	bl	801b92e <_ZdlPvj>
 800b3be:	687b      	ldr	r3, [r7, #4]
 800b3c0:	4618      	mov	r0, r3
 800b3c2:	3708      	adds	r7, #8
 800b3c4:	46bd      	mov	sp, r7
 800b3c6:	bd80      	pop	{r7, pc}

0800b3c8 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800b3c8:	b590      	push	{r4, r7, lr}
 800b3ca:	b085      	sub	sp, #20
 800b3cc:	af02      	add	r7, sp, #8
 800b3ce:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800b3d0:	6878      	ldr	r0, [r7, #4]
 800b3d2:	687b      	ldr	r3, [r7, #4]
 800b3d4:	f103 0114 	add.w	r1, r3, #20
 800b3d8:	687b      	ldr	r3, [r7, #4]
 800b3da:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800b3de:	687b      	ldr	r3, [r7, #4]
 800b3e0:	f503 7412 	add.w	r4, r3, #584	; 0x248
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800b3e4:	687b      	ldr	r3, [r7, #4]
 800b3e6:	f503 7317 	add.w	r3, r3, #604	; 0x25c
                     app(model, *this)
 800b3ea:	9300      	str	r3, [sp, #0]
 800b3ec:	4623      	mov	r3, r4
 800b3ee:	f7ff ff79 	bl	800b2e4 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800b3f2:	4a18      	ldr	r2, [pc, #96]	; (800b454 <_ZN12FrontendHeapC1Ev+0x8c>)
 800b3f4:	687b      	ldr	r3, [r7, #4]
 800b3f6:	601a      	str	r2, [r3, #0]
 800b3f8:	687b      	ldr	r3, [r7, #4]
 800b3fa:	3314      	adds	r3, #20
 800b3fc:	4618      	mov	r0, r3
 800b3fe:	f000 f8dd 	bl	800b5bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b402:	687b      	ldr	r3, [r7, #4]
 800b404:	332c      	adds	r3, #44	; 0x2c
 800b406:	4618      	mov	r0, r3
 800b408:	f000 f90c 	bl	800b624 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b40c:	687b      	ldr	r3, [r7, #4]
 800b40e:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800b412:	4618      	mov	r0, r3
 800b414:	f000 f93c 	bl	800b690 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b418:	687b      	ldr	r3, [r7, #4]
 800b41a:	f503 7017 	add.w	r0, r3, #604	; 0x25c
 800b41e:	687b      	ldr	r3, [r7, #4]
 800b420:	f503 736b 	add.w	r3, r3, #940	; 0x3ac
 800b424:	687a      	ldr	r2, [r7, #4]
 800b426:	4619      	mov	r1, r3
 800b428:	f7fe fcec 	bl	8009e04 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800b42c:	687b      	ldr	r3, [r7, #4]
 800b42e:	f503 736b 	add.w	r3, r3, #940	; 0x3ac
 800b432:	4618      	mov	r0, r3
 800b434:	f7fe fcfc 	bl	8009e30 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800b438:	687a      	ldr	r2, [r7, #4]
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	f503 7317 	add.w	r3, r3, #604	; 0x25c
 800b440:	4619      	mov	r1, r3
 800b442:	4610      	mov	r0, r2
 800b444:	f7ff ff40 	bl	800b2c8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800b448:	687b      	ldr	r3, [r7, #4]
 800b44a:	4618      	mov	r0, r3
 800b44c:	370c      	adds	r7, #12
 800b44e:	46bd      	mov	sp, r7
 800b450:	bd90      	pop	{r4, r7, pc}
 800b452:	bf00      	nop
 800b454:	0801f26c 	.word	0x0801f26c

0800b458 <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
{
public:
    LCD16bpp();

    virtual ~LCD16bpp()
 800b458:	b580      	push	{r7, lr}
 800b45a:	b082      	sub	sp, #8
 800b45c:	af00      	add	r7, sp, #0
 800b45e:	6078      	str	r0, [r7, #4]
    {
 800b460:	4a05      	ldr	r2, [pc, #20]	; (800b478 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	601a      	str	r2, [r3, #0]
 800b466:	687b      	ldr	r3, [r7, #4]
 800b468:	4618      	mov	r0, r3
 800b46a:	f7ff fe39 	bl	800b0e0 <_ZN8touchgfx3LCDD1Ev>
    }
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	4618      	mov	r0, r3
 800b472:	3708      	adds	r7, #8
 800b474:	46bd      	mov	sp, r7
 800b476:	bd80      	pop	{r7, pc}
 800b478:	08021420 	.word	0x08021420

0800b47c <_ZN8touchgfx8LCD16bppD0Ev>:
    virtual ~LCD16bpp()
 800b47c:	b580      	push	{r7, lr}
 800b47e:	b082      	sub	sp, #8
 800b480:	af00      	add	r7, sp, #0
 800b482:	6078      	str	r0, [r7, #4]
    }
 800b484:	6878      	ldr	r0, [r7, #4]
 800b486:	f7ff ffe7 	bl	800b458 <_ZN8touchgfx8LCD16bppD1Ev>
 800b48a:	2178      	movs	r1, #120	; 0x78
 800b48c:	6878      	ldr	r0, [r7, #4]
 800b48e:	f010 fa4e 	bl	801b92e <_ZdlPvj>
 800b492:	687b      	ldr	r3, [r7, #4]
 800b494:	4618      	mov	r0, r3
 800b496:	3708      	adds	r7, #8
 800b498:	46bd      	mov	sp, r7
 800b49a:	bd80      	pop	{r7, pc}

0800b49c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : touchgfx::HAL(dma, display, tc, width, height)
 800b49c:	b580      	push	{r7, lr}
 800b49e:	b086      	sub	sp, #24
 800b4a0:	af02      	add	r7, sp, #8
 800b4a2:	60f8      	str	r0, [r7, #12]
 800b4a4:	60b9      	str	r1, [r7, #8]
 800b4a6:	607a      	str	r2, [r7, #4]
 800b4a8:	603b      	str	r3, [r7, #0]
 800b4aa:	68f8      	ldr	r0, [r7, #12]
 800b4ac:	8bbb      	ldrh	r3, [r7, #28]
 800b4ae:	9301      	str	r3, [sp, #4]
 800b4b0:	8b3b      	ldrh	r3, [r7, #24]
 800b4b2:	9300      	str	r3, [sp, #0]
 800b4b4:	683b      	ldr	r3, [r7, #0]
 800b4b6:	687a      	ldr	r2, [r7, #4]
 800b4b8:	68b9      	ldr	r1, [r7, #8]
 800b4ba:	f7ff fe67 	bl	800b18c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800b4be:	4a04      	ldr	r2, [pc, #16]	; (800b4d0 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b4c0:	68fb      	ldr	r3, [r7, #12]
 800b4c2:	601a      	str	r2, [r3, #0]
    }
 800b4c4:	68fb      	ldr	r3, [r7, #12]
 800b4c6:	4618      	mov	r0, r3
 800b4c8:	3710      	adds	r7, #16
 800b4ca:	46bd      	mov	sp, r7
 800b4cc:	bd80      	pop	{r7, pc}
 800b4ce:	bf00      	nop
 800b4d0:	0801f340 	.word	0x0801f340

0800b4d4 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800b4d4:	b580      	push	{r7, lr}
 800b4d6:	b086      	sub	sp, #24
 800b4d8:	af02      	add	r7, sp, #8
 800b4da:	60f8      	str	r0, [r7, #12]
 800b4dc:	60b9      	str	r1, [r7, #8]
 800b4de:	607a      	str	r2, [r7, #4]
 800b4e0:	603b      	str	r3, [r7, #0]
 800b4e2:	68f8      	ldr	r0, [r7, #12]
 800b4e4:	8bbb      	ldrh	r3, [r7, #28]
 800b4e6:	9301      	str	r3, [sp, #4]
 800b4e8:	8b3b      	ldrh	r3, [r7, #24]
 800b4ea:	9300      	str	r3, [sp, #0]
 800b4ec:	683b      	ldr	r3, [r7, #0]
 800b4ee:	687a      	ldr	r2, [r7, #4]
 800b4f0:	68b9      	ldr	r1, [r7, #8]
 800b4f2:	f7ff ffd3 	bl	800b49c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b4f6:	4a04      	ldr	r2, [pc, #16]	; (800b508 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b4f8:	68fb      	ldr	r3, [r7, #12]
 800b4fa:	601a      	str	r2, [r3, #0]
    }
 800b4fc:	68fb      	ldr	r3, [r7, #12]
 800b4fe:	4618      	mov	r0, r3
 800b500:	3710      	adds	r7, #16
 800b502:	46bd      	mov	sp, r7
 800b504:	bd80      	pop	{r7, pc}
 800b506:	bf00      	nop
 800b508:	0801f144 	.word	0x0801f144

0800b50c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800b50c:	b480      	push	{r7}
 800b50e:	b083      	sub	sp, #12
 800b510:	af00      	add	r7, sp, #0
 800b512:	6078      	str	r0, [r7, #4]
 800b514:	4a04      	ldr	r2, [pc, #16]	; (800b528 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800b516:	687b      	ldr	r3, [r7, #4]
 800b518:	601a      	str	r2, [r3, #0]
 800b51a:	687b      	ldr	r3, [r7, #4]
 800b51c:	4618      	mov	r0, r3
 800b51e:	370c      	adds	r7, #12
 800b520:	46bd      	mov	sp, r7
 800b522:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b526:	4770      	bx	lr
 800b528:	0801f12c 	.word	0x0801f12c

0800b52c <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800b52c:	b580      	push	{r7, lr}
 800b52e:	b082      	sub	sp, #8
 800b530:	af00      	add	r7, sp, #0
 800b532:	6078      	str	r0, [r7, #4]
 800b534:	687b      	ldr	r3, [r7, #4]
 800b536:	4618      	mov	r0, r3
 800b538:	f7ff ffe8 	bl	800b50c <_ZN8touchgfx15TouchControllerC1Ev>
 800b53c:	4a03      	ldr	r2, [pc, #12]	; (800b54c <_ZN20STM32TouchControllerC1Ev+0x20>)
 800b53e:	687b      	ldr	r3, [r7, #4]
 800b540:	601a      	str	r2, [r3, #0]
 800b542:	687b      	ldr	r3, [r7, #4]
 800b544:	4618      	mov	r0, r3
 800b546:	3708      	adds	r7, #8
 800b548:	46bd      	mov	sp, r7
 800b54a:	bd80      	pop	{r7, pc}
 800b54c:	0801f114 	.word	0x0801f114

0800b550 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800b550:	b590      	push	{r4, r7, lr}
 800b552:	b085      	sub	sp, #20
 800b554:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800b556:	f7fe fb45 	bl	8009be4 <_ZN14BitmapDatabase11getInstanceEv>
 800b55a:	4604      	mov	r4, r0
 800b55c:	f7fe fb4c 	bl	8009bf8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800b560:	4603      	mov	r3, r0
 800b562:	4619      	mov	r1, r3
 800b564:	2300      	movs	r3, #0
 800b566:	9300      	str	r3, [sp, #0]
 800b568:	2300      	movs	r3, #0
 800b56a:	2200      	movs	r2, #0
 800b56c:	4620      	mov	r0, r4
 800b56e:	f004 fd41 	bl	800fff4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
 800b572:	480c      	ldr	r0, [pc, #48]	; (800b5a4 <touchgfx_init+0x54>)
 800b574:	f7ff fd64 	bl	800b040 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
 800b578:	2000      	movs	r0, #0
 800b57a:	f7fe fb61 	bl	8009c40 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 800b57e:	480a      	ldr	r0, [pc, #40]	; (800b5a8 <touchgfx_init+0x58>)
 800b580:	f004 fc86 	bl	800fe90 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
 800b584:	f7ff fed0 	bl	800b328 <_ZN12FrontendHeap11getInstanceEv>
 800b588:	6078      	str	r0, [r7, #4]
  (void)heap; // we need to obtain the reference above to initialize the frontend heap.

  hal.initialize();
 800b58a:	4808      	ldr	r0, [pc, #32]	; (800b5ac <touchgfx_init+0x5c>)
 800b58c:	f7fe fff2 	bl	800a574 <_ZN11TouchGFXHAL10initializeEv>
  hal.enableLCDControllerInterrupt();
 800b590:	4806      	ldr	r0, [pc, #24]	; (800b5ac <touchgfx_init+0x5c>)
 800b592:	f7ff f848 	bl	800a626 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>
  hal.enableInterrupts();
 800b596:	4805      	ldr	r0, [pc, #20]	; (800b5ac <touchgfx_init+0x5c>)
 800b598:	f7ff f82d 	bl	800a5f6 <_ZN11TouchGFXHAL16enableInterruptsEv>
}
 800b59c:	bf00      	nop
 800b59e:	370c      	adds	r7, #12
 800b5a0:	46bd      	mov	sp, r7
 800b5a2:	bd90      	pop	{r4, r7, pc}
 800b5a4:	20001714 	.word	0x20001714
 800b5a8:	20000020 	.word	0x20000020
 800b5ac:	20001718 	.word	0x20001718

0800b5b0 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800b5b0:	b580      	push	{r7, lr}
 800b5b2:	af00      	add	r7, sp, #0
 /*
  * This function check if a VSYNC has occured.
  * If VSYNC has occured, signal TouchGFX to start a rendering
  */
  OSWrappers::waitForVSync();
 800b5b4:	f7ff f8be 	bl	800a734 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
}
 800b5b8:	bf00      	nop
 800b5ba:	bd80      	pop	{r7, pc}

0800b5bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs an empty Partition.
     */
    Partition() : AbstractPartition()
 800b5bc:	b580      	push	{r7, lr}
 800b5be:	b082      	sub	sp, #8
 800b5c0:	af00      	add	r7, sp, #0
 800b5c2:	6078      	str	r0, [r7, #4]
 800b5c4:	687b      	ldr	r3, [r7, #4]
 800b5c6:	4618      	mov	r0, r3
 800b5c8:	f000 fc6c 	bl	800bea4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b5cc:	4a03      	ldr	r2, [pc, #12]	; (800b5dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	601a      	str	r2, [r3, #0]
    {
    }
 800b5d2:	687b      	ldr	r3, [r7, #4]
 800b5d4:	4618      	mov	r0, r3
 800b5d6:	3708      	adds	r7, #8
 800b5d8:	46bd      	mov	sp, r7
 800b5da:	bd80      	pop	{r7, pc}
 800b5dc:	0801f2e8 	.word	0x0801f2e8

0800b5e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    /**
     * @fn virtual Partition::~Partition()
     *
     * @brief Destructor.
     */
    virtual ~Partition()
 800b5e0:	b580      	push	{r7, lr}
 800b5e2:	b082      	sub	sp, #8
 800b5e4:	af00      	add	r7, sp, #0
 800b5e6:	6078      	str	r0, [r7, #4]
    {
    }
 800b5e8:	4a05      	ldr	r2, [pc, #20]	; (800b600 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b5ea:	687b      	ldr	r3, [r7, #4]
 800b5ec:	601a      	str	r2, [r3, #0]
 800b5ee:	687b      	ldr	r3, [r7, #4]
 800b5f0:	4618      	mov	r0, r3
 800b5f2:	f000 fc55 	bl	800bea0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b5f6:	687b      	ldr	r3, [r7, #4]
 800b5f8:	4618      	mov	r0, r3
 800b5fa:	3708      	adds	r7, #8
 800b5fc:	46bd      	mov	sp, r7
 800b5fe:	bd80      	pop	{r7, pc}
 800b600:	0801f2e8 	.word	0x0801f2e8

0800b604 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800b604:	b580      	push	{r7, lr}
 800b606:	b082      	sub	sp, #8
 800b608:	af00      	add	r7, sp, #0
 800b60a:	6078      	str	r0, [r7, #4]
    }
 800b60c:	6878      	ldr	r0, [r7, #4]
 800b60e:	f7ff ffe7 	bl	800b5e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b612:	2118      	movs	r1, #24
 800b614:	6878      	ldr	r0, [r7, #4]
 800b616:	f010 f98a 	bl	801b92e <_ZdlPvj>
 800b61a:	687b      	ldr	r3, [r7, #4]
 800b61c:	4618      	mov	r0, r3
 800b61e:	3708      	adds	r7, #8
 800b620:	46bd      	mov	sp, r7
 800b622:	bd80      	pop	{r7, pc}

0800b624 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800b624:	b580      	push	{r7, lr}
 800b626:	b082      	sub	sp, #8
 800b628:	af00      	add	r7, sp, #0
 800b62a:	6078      	str	r0, [r7, #4]
 800b62c:	687b      	ldr	r3, [r7, #4]
 800b62e:	4618      	mov	r0, r3
 800b630:	f000 fc38 	bl	800bea4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b634:	4a03      	ldr	r2, [pc, #12]	; (800b644 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b636:	687b      	ldr	r3, [r7, #4]
 800b638:	601a      	str	r2, [r3, #0]
    }
 800b63a:	687b      	ldr	r3, [r7, #4]
 800b63c:	4618      	mov	r0, r3
 800b63e:	3708      	adds	r7, #8
 800b640:	46bd      	mov	sp, r7
 800b642:	bd80      	pop	{r7, pc}
 800b644:	0801f2b4 	.word	0x0801f2b4

0800b648 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800b648:	b580      	push	{r7, lr}
 800b64a:	b082      	sub	sp, #8
 800b64c:	af00      	add	r7, sp, #0
 800b64e:	6078      	str	r0, [r7, #4]
    }
 800b650:	4a05      	ldr	r2, [pc, #20]	; (800b668 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b652:	687b      	ldr	r3, [r7, #4]
 800b654:	601a      	str	r2, [r3, #0]
 800b656:	687b      	ldr	r3, [r7, #4]
 800b658:	4618      	mov	r0, r3
 800b65a:	f000 fc21 	bl	800bea0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b65e:	687b      	ldr	r3, [r7, #4]
 800b660:	4618      	mov	r0, r3
 800b662:	3708      	adds	r7, #8
 800b664:	46bd      	mov	sp, r7
 800b666:	bd80      	pop	{r7, pc}
 800b668:	0801f2b4 	.word	0x0801f2b4

0800b66c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800b66c:	b580      	push	{r7, lr}
 800b66e:	b082      	sub	sp, #8
 800b670:	af00      	add	r7, sp, #0
 800b672:	6078      	str	r0, [r7, #4]
    }
 800b674:	6878      	ldr	r0, [r7, #4]
 800b676:	f7ff ffe7 	bl	800b648 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b67a:	f44f 7107 	mov.w	r1, #540	; 0x21c
 800b67e:	6878      	ldr	r0, [r7, #4]
 800b680:	f010 f955 	bl	801b92e <_ZdlPvj>
 800b684:	687b      	ldr	r3, [r7, #4]
 800b686:	4618      	mov	r0, r3
 800b688:	3708      	adds	r7, #8
 800b68a:	46bd      	mov	sp, r7
 800b68c:	bd80      	pop	{r7, pc}
	...

0800b690 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800b690:	b580      	push	{r7, lr}
 800b692:	b082      	sub	sp, #8
 800b694:	af00      	add	r7, sp, #0
 800b696:	6078      	str	r0, [r7, #4]
 800b698:	687b      	ldr	r3, [r7, #4]
 800b69a:	4618      	mov	r0, r3
 800b69c:	f000 fc02 	bl	800bea4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b6a0:	4a03      	ldr	r2, [pc, #12]	; (800b6b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b6a2:	687b      	ldr	r3, [r7, #4]
 800b6a4:	601a      	str	r2, [r3, #0]
    }
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	4618      	mov	r0, r3
 800b6aa:	3708      	adds	r7, #8
 800b6ac:	46bd      	mov	sp, r7
 800b6ae:	bd80      	pop	{r7, pc}
 800b6b0:	0801f280 	.word	0x0801f280

0800b6b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800b6b4:	b580      	push	{r7, lr}
 800b6b6:	b082      	sub	sp, #8
 800b6b8:	af00      	add	r7, sp, #0
 800b6ba:	6078      	str	r0, [r7, #4]
    }
 800b6bc:	4a05      	ldr	r2, [pc, #20]	; (800b6d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	601a      	str	r2, [r3, #0]
 800b6c2:	687b      	ldr	r3, [r7, #4]
 800b6c4:	4618      	mov	r0, r3
 800b6c6:	f000 fbeb 	bl	800bea0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b6ca:	687b      	ldr	r3, [r7, #4]
 800b6cc:	4618      	mov	r0, r3
 800b6ce:	3708      	adds	r7, #8
 800b6d0:	46bd      	mov	sp, r7
 800b6d2:	bd80      	pop	{r7, pc}
 800b6d4:	0801f280 	.word	0x0801f280

0800b6d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800b6d8:	b580      	push	{r7, lr}
 800b6da:	b082      	sub	sp, #8
 800b6dc:	af00      	add	r7, sp, #0
 800b6de:	6078      	str	r0, [r7, #4]
    }
 800b6e0:	6878      	ldr	r0, [r7, #4]
 800b6e2:	f7ff ffe7 	bl	800b6b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b6e6:	2114      	movs	r1, #20
 800b6e8:	6878      	ldr	r0, [r7, #4]
 800b6ea:	f010 f920 	bl	801b92e <_ZdlPvj>
 800b6ee:	687b      	ldr	r3, [r7, #4]
 800b6f0:	4618      	mov	r0, r3
 800b6f2:	3708      	adds	r7, #8
 800b6f4:	46bd      	mov	sp, r7
 800b6f6:	bd80      	pop	{r7, pc}

0800b6f8 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800b6f8:	b580      	push	{r7, lr}
 800b6fa:	b082      	sub	sp, #8
 800b6fc:	af00      	add	r7, sp, #0
 800b6fe:	6078      	str	r0, [r7, #4]
 800b700:	4a10      	ldr	r2, [pc, #64]	; (800b744 <_ZN12FrontendHeapD1Ev+0x4c>)
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	601a      	str	r2, [r3, #0]
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	f503 7317 	add.w	r3, r3, #604	; 0x25c
 800b70c:	4618      	mov	r0, r3
 800b70e:	f7fe fb43 	bl	8009d98 <_ZN19FrontendApplicationD1Ev>
 800b712:	687b      	ldr	r3, [r7, #4]
 800b714:	f503 7312 	add.w	r3, r3, #584	; 0x248
 800b718:	4618      	mov	r0, r3
 800b71a:	f7ff ffcb 	bl	800b6b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b71e:	687b      	ldr	r3, [r7, #4]
 800b720:	332c      	adds	r3, #44	; 0x2c
 800b722:	4618      	mov	r0, r3
 800b724:	f7ff ff90 	bl	800b648 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b728:	687b      	ldr	r3, [r7, #4]
 800b72a:	3314      	adds	r3, #20
 800b72c:	4618      	mov	r0, r3
 800b72e:	f7ff ff57 	bl	800b5e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b732:	687b      	ldr	r3, [r7, #4]
 800b734:	4618      	mov	r0, r3
 800b736:	f7ff fe25 	bl	800b384 <_ZN16FrontendHeapBaseD1Ev>
 800b73a:	687b      	ldr	r3, [r7, #4]
 800b73c:	4618      	mov	r0, r3
 800b73e:	3708      	adds	r7, #8
 800b740:	46bd      	mov	sp, r7
 800b742:	bd80      	pop	{r7, pc}
 800b744:	0801f26c 	.word	0x0801f26c

0800b748 <_ZN12FrontendHeapD0Ev>:
 800b748:	b580      	push	{r7, lr}
 800b74a:	b082      	sub	sp, #8
 800b74c:	af00      	add	r7, sp, #0
 800b74e:	6078      	str	r0, [r7, #4]
 800b750:	6878      	ldr	r0, [r7, #4]
 800b752:	f7ff ffd1 	bl	800b6f8 <_ZN12FrontendHeapD1Ev>
 800b756:	f44f 716c 	mov.w	r1, #944	; 0x3b0
 800b75a:	6878      	ldr	r0, [r7, #4]
 800b75c:	f010 f8e7 	bl	801b92e <_ZdlPvj>
 800b760:	687b      	ldr	r3, [r7, #4]
 800b762:	4618      	mov	r0, r3
 800b764:	3708      	adds	r7, #8
 800b766:	46bd      	mov	sp, r7
 800b768:	bd80      	pop	{r7, pc}
	...

0800b76c <_Z41__static_initialization_and_destruction_0ii>:
 800b76c:	b580      	push	{r7, lr}
 800b76e:	b084      	sub	sp, #16
 800b770:	af02      	add	r7, sp, #8
 800b772:	6078      	str	r0, [r7, #4]
 800b774:	6039      	str	r1, [r7, #0]
 800b776:	687b      	ldr	r3, [r7, #4]
 800b778:	2b01      	cmp	r3, #1
 800b77a:	d118      	bne.n	800b7ae <_Z41__static_initialization_and_destruction_0ii+0x42>
 800b77c:	683b      	ldr	r3, [r7, #0]
 800b77e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b782:	4293      	cmp	r3, r2
 800b784:	d113      	bne.n	800b7ae <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800b786:	4817      	ldr	r0, [pc, #92]	; (800b7e4 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b788:	f7ff fed0 	bl	800b52c <_ZN20STM32TouchControllerC1Ev>
static STM32F4DMA dma;
 800b78c:	4816      	ldr	r0, [pc, #88]	; (800b7e8 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b78e:	f7ff f951 	bl	800aa34 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 800b792:	4816      	ldr	r0, [pc, #88]	; (800b7ec <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b794:	f007 fc32 	bl	8012ffc <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 800b798:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800b79c:	9301      	str	r3, [sp, #4]
 800b79e:	23f0      	movs	r3, #240	; 0xf0
 800b7a0:	9300      	str	r3, [sp, #0]
 800b7a2:	4b10      	ldr	r3, [pc, #64]	; (800b7e4 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b7a4:	4a11      	ldr	r2, [pc, #68]	; (800b7ec <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b7a6:	4910      	ldr	r1, [pc, #64]	; (800b7e8 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b7a8:	4811      	ldr	r0, [pc, #68]	; (800b7f0 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b7aa:	f7ff fe93 	bl	800b4d4 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b7ae:	687b      	ldr	r3, [r7, #4]
 800b7b0:	2b00      	cmp	r3, #0
 800b7b2:	d113      	bne.n	800b7dc <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b7b4:	683b      	ldr	r3, [r7, #0]
 800b7b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b7ba:	4293      	cmp	r3, r2
 800b7bc:	d10e      	bne.n	800b7dc <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b7be:	480c      	ldr	r0, [pc, #48]	; (800b7f0 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b7c0:	f7fe ff3e 	bl	800a640 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800b7c4:	480b      	ldr	r0, [pc, #44]	; (800b7f4 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800b7c6:	f7fc fb69 	bl	8007e9c <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800b7ca:	4808      	ldr	r0, [pc, #32]	; (800b7ec <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b7cc:	f7ff fe44 	bl	800b458 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32F4DMA dma;
 800b7d0:	4805      	ldr	r0, [pc, #20]	; (800b7e8 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b7d2:	f7ff f959 	bl	800aa88 <_ZN10STM32F4DMAD1Ev>
static STM32TouchController tc;
 800b7d6:	4803      	ldr	r0, [pc, #12]	; (800b7e4 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b7d8:	f7fe fca8 	bl	800a12c <_ZN20STM32TouchControllerD1Ev>
}
 800b7dc:	bf00      	nop
 800b7de:	3708      	adds	r7, #8
 800b7e0:	46bd      	mov	sp, r7
 800b7e2:	bd80      	pop	{r7, pc}
 800b7e4:	20000a78 	.word	0x20000a78
 800b7e8:	20000a7c 	.word	0x20000a7c
 800b7ec:	2000169c 	.word	0x2000169c
 800b7f0:	20001718 	.word	0x20001718
 800b7f4:	20000020 	.word	0x20000020

0800b7f8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     *
     * @return An uint16_t.
     *
     * @see touchgfx::AbstractPartition::capacity()
     */
    virtual uint16_t capacity() const
 800b7f8:	b480      	push	{r7}
 800b7fa:	b083      	sub	sp, #12
 800b7fc:	af00      	add	r7, sp, #0
 800b7fe:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800b800:	2301      	movs	r3, #1
    }
 800b802:	4618      	mov	r0, r3
 800b804:	370c      	adds	r7, #12
 800b806:	46bd      	mov	sp, r7
 800b808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b80c:	4770      	bx	lr

0800b80e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     *
     * @return An uint32_t.
     *
     * @see touchgfx::AbstractPartition::element_size()
     */
    virtual uint32_t element_size()
 800b80e:	b480      	push	{r7}
 800b810:	b083      	sub	sp, #12
 800b812:	af00      	add	r7, sp, #0
 800b814:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800b816:	230c      	movs	r3, #12
    }
 800b818:	4618      	mov	r0, r3
 800b81a:	370c      	adds	r7, #12
 800b81c:	46bd      	mov	sp, r7
 800b81e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b822:	4770      	bx	lr

0800b824 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual void* element(uint16_t index)
 800b824:	b480      	push	{r7}
 800b826:	b083      	sub	sp, #12
 800b828:	af00      	add	r7, sp, #0
 800b82a:	6078      	str	r0, [r7, #4]
 800b82c:	460b      	mov	r3, r1
 800b82e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b830:	887a      	ldrh	r2, [r7, #2]
 800b832:	4613      	mov	r3, r2
 800b834:	005b      	lsls	r3, r3, #1
 800b836:	4413      	add	r3, r2
 800b838:	009b      	lsls	r3, r3, #2
 800b83a:	3308      	adds	r3, #8
 800b83c:	687a      	ldr	r2, [r7, #4]
 800b83e:	4413      	add	r3, r2
    }
 800b840:	4618      	mov	r0, r3
 800b842:	370c      	adds	r7, #12
 800b844:	46bd      	mov	sp, r7
 800b846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b84a:	4770      	bx	lr

0800b84c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual const void* element(uint16_t index) const
 800b84c:	b480      	push	{r7}
 800b84e:	b083      	sub	sp, #12
 800b850:	af00      	add	r7, sp, #0
 800b852:	6078      	str	r0, [r7, #4]
 800b854:	460b      	mov	r3, r1
 800b856:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b858:	887a      	ldrh	r2, [r7, #2]
 800b85a:	4613      	mov	r3, r2
 800b85c:	005b      	lsls	r3, r3, #1
 800b85e:	4413      	add	r3, r2
 800b860:	009b      	lsls	r3, r3, #2
 800b862:	3308      	adds	r3, #8
 800b864:	687a      	ldr	r2, [r7, #4]
 800b866:	4413      	add	r3, r2
    }
 800b868:	4618      	mov	r0, r3
 800b86a:	370c      	adds	r7, #12
 800b86c:	46bd      	mov	sp, r7
 800b86e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b872:	4770      	bx	lr

0800b874 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b874:	b480      	push	{r7}
 800b876:	b083      	sub	sp, #12
 800b878:	af00      	add	r7, sp, #0
 800b87a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b87c:	2301      	movs	r3, #1
    }
 800b87e:	4618      	mov	r0, r3
 800b880:	370c      	adds	r7, #12
 800b882:	46bd      	mov	sp, r7
 800b884:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b888:	4770      	bx	lr

0800b88a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b88a:	b480      	push	{r7}
 800b88c:	b083      	sub	sp, #12
 800b88e:	af00      	add	r7, sp, #0
 800b890:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b892:	f44f 7305 	mov.w	r3, #532	; 0x214
    }
 800b896:	4618      	mov	r0, r3
 800b898:	370c      	adds	r7, #12
 800b89a:	46bd      	mov	sp, r7
 800b89c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8a0:	4770      	bx	lr

0800b8a2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b8a2:	b480      	push	{r7}
 800b8a4:	b083      	sub	sp, #12
 800b8a6:	af00      	add	r7, sp, #0
 800b8a8:	6078      	str	r0, [r7, #4]
 800b8aa:	460b      	mov	r3, r1
 800b8ac:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b8ae:	887b      	ldrh	r3, [r7, #2]
 800b8b0:	f44f 7205 	mov.w	r2, #532	; 0x214
 800b8b4:	fb02 f303 	mul.w	r3, r2, r3
 800b8b8:	3308      	adds	r3, #8
 800b8ba:	687a      	ldr	r2, [r7, #4]
 800b8bc:	4413      	add	r3, r2
    }
 800b8be:	4618      	mov	r0, r3
 800b8c0:	370c      	adds	r7, #12
 800b8c2:	46bd      	mov	sp, r7
 800b8c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8c8:	4770      	bx	lr

0800b8ca <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b8ca:	b480      	push	{r7}
 800b8cc:	b083      	sub	sp, #12
 800b8ce:	af00      	add	r7, sp, #0
 800b8d0:	6078      	str	r0, [r7, #4]
 800b8d2:	460b      	mov	r3, r1
 800b8d4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b8d6:	887b      	ldrh	r3, [r7, #2]
 800b8d8:	f44f 7205 	mov.w	r2, #532	; 0x214
 800b8dc:	fb02 f303 	mul.w	r3, r2, r3
 800b8e0:	3308      	adds	r3, #8
 800b8e2:	687a      	ldr	r2, [r7, #4]
 800b8e4:	4413      	add	r3, r2
    }
 800b8e6:	4618      	mov	r0, r3
 800b8e8:	370c      	adds	r7, #12
 800b8ea:	46bd      	mov	sp, r7
 800b8ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8f0:	4770      	bx	lr

0800b8f2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b8f2:	b480      	push	{r7}
 800b8f4:	b083      	sub	sp, #12
 800b8f6:	af00      	add	r7, sp, #0
 800b8f8:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b8fa:	2301      	movs	r3, #1
    }
 800b8fc:	4618      	mov	r0, r3
 800b8fe:	370c      	adds	r7, #12
 800b900:	46bd      	mov	sp, r7
 800b902:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b906:	4770      	bx	lr

0800b908 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b908:	b480      	push	{r7}
 800b90a:	b083      	sub	sp, #12
 800b90c:	af00      	add	r7, sp, #0
 800b90e:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b910:	2310      	movs	r3, #16
    }
 800b912:	4618      	mov	r0, r3
 800b914:	370c      	adds	r7, #12
 800b916:	46bd      	mov	sp, r7
 800b918:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b91c:	4770      	bx	lr

0800b91e <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b91e:	b480      	push	{r7}
 800b920:	b083      	sub	sp, #12
 800b922:	af00      	add	r7, sp, #0
 800b924:	6078      	str	r0, [r7, #4]
 800b926:	460b      	mov	r3, r1
 800b928:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b92a:	887b      	ldrh	r3, [r7, #2]
 800b92c:	011b      	lsls	r3, r3, #4
 800b92e:	3308      	adds	r3, #8
 800b930:	687a      	ldr	r2, [r7, #4]
 800b932:	4413      	add	r3, r2
    }
 800b934:	4618      	mov	r0, r3
 800b936:	370c      	adds	r7, #12
 800b938:	46bd      	mov	sp, r7
 800b93a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b93e:	4770      	bx	lr

0800b940 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b940:	b480      	push	{r7}
 800b942:	b083      	sub	sp, #12
 800b944:	af00      	add	r7, sp, #0
 800b946:	6078      	str	r0, [r7, #4]
 800b948:	460b      	mov	r3, r1
 800b94a:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b94c:	887b      	ldrh	r3, [r7, #2]
 800b94e:	011b      	lsls	r3, r3, #4
 800b950:	3308      	adds	r3, #8
 800b952:	687a      	ldr	r2, [r7, #4]
 800b954:	4413      	add	r3, r2
    }
 800b956:	4618      	mov	r0, r3
 800b958:	370c      	adds	r7, #12
 800b95a:	46bd      	mov	sp, r7
 800b95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b960:	4770      	bx	lr

0800b962 <_GLOBAL__sub_I_touchgfx_init>:
 800b962:	b580      	push	{r7, lr}
 800b964:	af00      	add	r7, sp, #0
 800b966:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b96a:	2001      	movs	r0, #1
 800b96c:	f7ff fefe 	bl	800b76c <_Z41__static_initialization_and_destruction_0ii>
 800b970:	bd80      	pop	{r7, pc}

0800b972 <_GLOBAL__sub_D_touchgfx_init>:
 800b972:	b580      	push	{r7, lr}
 800b974:	af00      	add	r7, sp, #0
 800b976:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b97a:	2000      	movs	r0, #0
 800b97c:	f7ff fef6 	bl	800b76c <_Z41__static_initialization_and_destruction_0ii>
 800b980:	bd80      	pop	{r7, pc}

0800b982 <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800b982:	b580      	push	{r7, lr}
 800b984:	b082      	sub	sp, #8
 800b986:	af00      	add	r7, sp, #0
 800b988:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800b98a:	687b      	ldr	r3, [r7, #4]
 800b98c:	681b      	ldr	r3, [r3, #0]
 800b98e:	3318      	adds	r3, #24
 800b990:	681b      	ldr	r3, [r3, #0]
 800b992:	6878      	ldr	r0, [r7, #4]
 800b994:	4798      	blx	r3
    }
 800b996:	bf00      	nop
 800b998:	3708      	adds	r7, #8
 800b99a:	46bd      	mov	sp, r7
 800b99c:	bd80      	pop	{r7, pc}

0800b99e <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>:
    void lockDMAToFrontPorch(bool enableLock)
 800b99e:	b480      	push	{r7}
 800b9a0:	b083      	sub	sp, #12
 800b9a2:	af00      	add	r7, sp, #0
 800b9a4:	6078      	str	r0, [r7, #4]
 800b9a6:	460b      	mov	r3, r1
 800b9a8:	70fb      	strb	r3, [r7, #3]
        lockDMAToPorch = enableLock;
 800b9aa:	687b      	ldr	r3, [r7, #4]
 800b9ac:	78fa      	ldrb	r2, [r7, #3]
 800b9ae:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
    }
 800b9b2:	bf00      	nop
 800b9b4:	370c      	adds	r7, #12
 800b9b6:	46bd      	mov	sp, r7
 800b9b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9bc:	4770      	bx	lr

0800b9be <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800b9be:	b480      	push	{r7}
 800b9c0:	b083      	sub	sp, #12
 800b9c2:	af00      	add	r7, sp, #0
 800b9c4:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800b9c6:	687b      	ldr	r3, [r7, #4]
 800b9c8:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 800b9cc:	3301      	adds	r3, #1
 800b9ce:	b2da      	uxtb	r2, r3
 800b9d0:	687b      	ldr	r3, [r7, #4]
 800b9d2:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 800b9d6:	bf00      	nop
 800b9d8:	370c      	adds	r7, #12
 800b9da:	46bd      	mov	sp, r7
 800b9dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9e0:	4770      	bx	lr
	...

0800b9e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800b9e4:	b580      	push	{r7, lr}
 800b9e6:	b082      	sub	sp, #8
 800b9e8:	af00      	add	r7, sp, #0
 800b9ea:	6078      	str	r0, [r7, #4]
 800b9ec:	460b      	mov	r3, r1
 800b9ee:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800b9f0:	78fb      	ldrb	r3, [r7, #3]
 800b9f2:	2b00      	cmp	r3, #0
 800b9f4:	d002      	beq.n	800b9fc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800b9f6:	78fb      	ldrb	r3, [r7, #3]
 800b9f8:	2b02      	cmp	r3, #2
 800b9fa:	d105      	bne.n	800ba08 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800b9fc:	687b      	ldr	r3, [r7, #4]
 800b9fe:	78fa      	ldrb	r2, [r7, #3]
 800ba00:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800ba04:	2301      	movs	r3, #1
 800ba06:	e027      	b.n	800ba58 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        else if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800ba08:	78fb      	ldrb	r3, [r7, #3]
 800ba0a:	2b01      	cmp	r3, #1
 800ba0c:	d123      	bne.n	800ba56 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800ba0e:	687b      	ldr	r3, [r7, #4]
 800ba10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ba12:	2b00      	cmp	r3, #0
 800ba14:	d014      	beq.n	800ba40 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ba16:	687b      	ldr	r3, [r7, #4]
 800ba18:	681b      	ldr	r3, [r3, #0]
 800ba1a:	3380      	adds	r3, #128	; 0x80
 800ba1c:	681b      	ldr	r3, [r3, #0]
 800ba1e:	6878      	ldr	r0, [r7, #4]
 800ba20:	4798      	blx	r3
 800ba22:	4603      	mov	r3, r0
 800ba24:	461a      	mov	r2, r3
 800ba26:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ba2a:	429a      	cmp	r2, r3
 800ba2c:	d008      	beq.n	800ba40 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ba2e:	4b0c      	ldr	r3, [pc, #48]	; (800ba60 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800ba30:	781b      	ldrb	r3, [r3, #0]
 800ba32:	f083 0301 	eor.w	r3, r3, #1
 800ba36:	b2db      	uxtb	r3, r3
 800ba38:	2b00      	cmp	r3, #0
 800ba3a:	d001      	beq.n	800ba40 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800ba3c:	2301      	movs	r3, #1
 800ba3e:	e000      	b.n	800ba42 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800ba40:	2300      	movs	r3, #0
 800ba42:	2b00      	cmp	r3, #0
 800ba44:	d005      	beq.n	800ba52 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800ba46:	687b      	ldr	r3, [r7, #4]
 800ba48:	78fa      	ldrb	r2, [r7, #3]
 800ba4a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800ba4e:	2301      	movs	r3, #1
 800ba50:	e002      	b.n	800ba58 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800ba52:	2300      	movs	r3, #0
 800ba54:	e000      	b.n	800ba58 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800ba56:	2300      	movs	r3, #0
    }
 800ba58:	4618      	mov	r0, r3
 800ba5a:	3708      	adds	r7, #8
 800ba5c:	46bd      	mov	sp, r7
 800ba5e:	bd80      	pop	{r7, pc}
 800ba60:	2000179e 	.word	0x2000179e

0800ba64 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void(*delayF)(uint16_t))
 800ba64:	b480      	push	{r7}
 800ba66:	b083      	sub	sp, #12
 800ba68:	af00      	add	r7, sp, #0
 800ba6a:	6078      	str	r0, [r7, #4]
 800ba6c:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 800ba6e:	687b      	ldr	r3, [r7, #4]
 800ba70:	683a      	ldr	r2, [r7, #0]
 800ba72:	639a      	str	r2, [r3, #56]	; 0x38
    }
 800ba74:	bf00      	nop
 800ba76:	370c      	adds	r7, #12
 800ba78:	46bd      	mov	sp, r7
 800ba7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba7e:	4770      	bx	lr

0800ba80 <__NVIC_EnableIRQ>:
{
 800ba80:	b480      	push	{r7}
 800ba82:	b083      	sub	sp, #12
 800ba84:	af00      	add	r7, sp, #0
 800ba86:	4603      	mov	r3, r0
 800ba88:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800ba8a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ba8e:	2b00      	cmp	r3, #0
 800ba90:	db0b      	blt.n	800baaa <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800ba92:	79fb      	ldrb	r3, [r7, #7]
 800ba94:	f003 021f 	and.w	r2, r3, #31
 800ba98:	4907      	ldr	r1, [pc, #28]	; (800bab8 <__NVIC_EnableIRQ+0x38>)
 800ba9a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ba9e:	095b      	lsrs	r3, r3, #5
 800baa0:	2001      	movs	r0, #1
 800baa2:	fa00 f202 	lsl.w	r2, r0, r2
 800baa6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800baaa:	bf00      	nop
 800baac:	370c      	adds	r7, #12
 800baae:	46bd      	mov	sp, r7
 800bab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bab4:	4770      	bx	lr
 800bab6:	bf00      	nop
 800bab8:	e000e100 	.word	0xe000e100

0800babc <__NVIC_DisableIRQ>:
{
 800babc:	b480      	push	{r7}
 800babe:	b083      	sub	sp, #12
 800bac0:	af00      	add	r7, sp, #0
 800bac2:	4603      	mov	r3, r0
 800bac4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800bac6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800baca:	2b00      	cmp	r3, #0
 800bacc:	db12      	blt.n	800baf4 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800bace:	79fb      	ldrb	r3, [r7, #7]
 800bad0:	f003 021f 	and.w	r2, r3, #31
 800bad4:	490a      	ldr	r1, [pc, #40]	; (800bb00 <__NVIC_DisableIRQ+0x44>)
 800bad6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bada:	095b      	lsrs	r3, r3, #5
 800badc:	2001      	movs	r0, #1
 800bade:	fa00 f202 	lsl.w	r2, r0, r2
 800bae2:	3320      	adds	r3, #32
 800bae4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800bae8:	f3bf 8f4f 	dsb	sy
}
 800baec:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800baee:	f3bf 8f6f 	isb	sy
}
 800baf2:	bf00      	nop
}
 800baf4:	bf00      	nop
 800baf6:	370c      	adds	r7, #12
 800baf8:	46bd      	mov	sp, r7
 800bafa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bafe:	4770      	bx	lr
 800bb00:	e000e100 	.word	0xe000e100

0800bb04 <__NVIC_SetPriority>:
{
 800bb04:	b480      	push	{r7}
 800bb06:	b083      	sub	sp, #12
 800bb08:	af00      	add	r7, sp, #0
 800bb0a:	4603      	mov	r3, r0
 800bb0c:	6039      	str	r1, [r7, #0]
 800bb0e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800bb10:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bb14:	2b00      	cmp	r3, #0
 800bb16:	db0a      	blt.n	800bb2e <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800bb18:	683b      	ldr	r3, [r7, #0]
 800bb1a:	b2da      	uxtb	r2, r3
 800bb1c:	490c      	ldr	r1, [pc, #48]	; (800bb50 <__NVIC_SetPriority+0x4c>)
 800bb1e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800bb22:	0112      	lsls	r2, r2, #4
 800bb24:	b2d2      	uxtb	r2, r2
 800bb26:	440b      	add	r3, r1
 800bb28:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800bb2c:	e00a      	b.n	800bb44 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800bb2e:	683b      	ldr	r3, [r7, #0]
 800bb30:	b2da      	uxtb	r2, r3
 800bb32:	4908      	ldr	r1, [pc, #32]	; (800bb54 <__NVIC_SetPriority+0x50>)
 800bb34:	79fb      	ldrb	r3, [r7, #7]
 800bb36:	f003 030f 	and.w	r3, r3, #15
 800bb3a:	3b04      	subs	r3, #4
 800bb3c:	0112      	lsls	r2, r2, #4
 800bb3e:	b2d2      	uxtb	r2, r2
 800bb40:	440b      	add	r3, r1
 800bb42:	761a      	strb	r2, [r3, #24]
}
 800bb44:	bf00      	nop
 800bb46:	370c      	adds	r7, #12
 800bb48:	46bd      	mov	sp, r7
 800bb4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb4e:	4770      	bx	lr
 800bb50:	e000e100 	.word	0xe000e100
 800bb54:	e000ed00 	.word	0xe000ed00

0800bb58 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800bb58:	b5b0      	push	{r4, r5, r7, lr}
 800bb5a:	b082      	sub	sp, #8
 800bb5c:	af00      	add	r7, sp, #0
 800bb5e:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800bb60:	687b      	ldr	r3, [r7, #4]
 800bb62:	4618      	mov	r0, r3
 800bb64:	f000 fe76 	bl	800c854 <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(touchgfx::Application::getInstance()));
 800bb68:	687d      	ldr	r5, [r7, #4]
 800bb6a:	687b      	ldr	r3, [r7, #4]
 800bb6c:	681b      	ldr	r3, [r3, #0]
 800bb6e:	334c      	adds	r3, #76	; 0x4c
 800bb70:	681c      	ldr	r4, [r3, #0]
 800bb72:	f002 fc8d 	bl	800e490 <_ZN8touchgfx11Application11getInstanceEv>
 800bb76:	4603      	mov	r3, r0
 800bb78:	4619      	mov	r1, r3
 800bb7a:	4628      	mov	r0, r5
 800bb7c:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 800bb7e:	687b      	ldr	r3, [r7, #4]
 800bb80:	490d      	ldr	r1, [pc, #52]	; (800bbb8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x60>)
 800bb82:	4618      	mov	r0, r3
 800bb84:	f7ff ff6e 	bl	800ba64 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800bb88:	687b      	ldr	r3, [r7, #4]
 800bb8a:	2101      	movs	r1, #1
 800bb8c:	4618      	mov	r0, r3
 800bb8e:	f7ff ff29 	bl	800b9e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>

    setFrameBufferStartAddresses((void*)0xd0000000, (void*)0, (void*)0);
 800bb92:	6878      	ldr	r0, [r7, #4]
 800bb94:	687b      	ldr	r3, [r7, #4]
 800bb96:	681b      	ldr	r3, [r3, #0]
 800bb98:	3374      	adds	r3, #116	; 0x74
 800bb9a:	681c      	ldr	r4, [r3, #0]
 800bb9c:	2300      	movs	r3, #0
 800bb9e:	2200      	movs	r2, #0
 800bba0:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 800bba4:	47a0      	blx	r4
     * Set whether the DMA transfers are locked to the TFT update cycle. If
     * locked, DMA transfer will not begin until the TFT controller has finished
     * updating the display. If not locked, DMA transfers will begin as soon as
     * possible. Default is true (DMA is locked with TFT).
     */
    lockDMAToFrontPorch(true);
 800bba6:	687b      	ldr	r3, [r7, #4]
 800bba8:	2101      	movs	r1, #1
 800bbaa:	4618      	mov	r0, r3
 800bbac:	f7ff fef7 	bl	800b99e <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>
}
 800bbb0:	bf00      	nop
 800bbb2:	3708      	adds	r7, #8
 800bbb4:	46bd      	mov	sp, r7
 800bbb6:	bdb0      	pop	{r4, r5, r7, pc}
 800bbb8:	0800a769 	.word	0x0800a769

0800bbbc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800bbbc:	b580      	push	{r7, lr}
 800bbbe:	b082      	sub	sp, #8
 800bbc0:	af00      	add	r7, sp, #0
 800bbc2:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800bbc4:	2109      	movs	r1, #9
 800bbc6:	205a      	movs	r0, #90	; 0x5a
 800bbc8:	f7ff ff9c 	bl	800bb04 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800bbcc:	2109      	movs	r1, #9
 800bbce:	2058      	movs	r0, #88	; 0x58
 800bbd0:	f7ff ff98 	bl	800bb04 <__NVIC_SetPriority>
}
 800bbd4:	bf00      	nop
 800bbd6:	3708      	adds	r7, #8
 800bbd8:	46bd      	mov	sp, r7
 800bbda:	bd80      	pop	{r7, pc}

0800bbdc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800bbdc:	b580      	push	{r7, lr}
 800bbde:	b082      	sub	sp, #8
 800bbe0:	af00      	add	r7, sp, #0
 800bbe2:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800bbe4:	205a      	movs	r0, #90	; 0x5a
 800bbe6:	f7ff ff4b 	bl	800ba80 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800bbea:	2058      	movs	r0, #88	; 0x58
 800bbec:	f7ff ff48 	bl	800ba80 <__NVIC_EnableIRQ>
}
 800bbf0:	bf00      	nop
 800bbf2:	3708      	adds	r7, #8
 800bbf4:	46bd      	mov	sp, r7
 800bbf6:	bd80      	pop	{r7, pc}

0800bbf8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800bbf8:	b580      	push	{r7, lr}
 800bbfa:	b082      	sub	sp, #8
 800bbfc:	af00      	add	r7, sp, #0
 800bbfe:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800bc00:	205a      	movs	r0, #90	; 0x5a
 800bc02:	f7ff ff5b 	bl	800babc <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800bc06:	2058      	movs	r0, #88	; 0x58
 800bc08:	f7ff ff58 	bl	800babc <__NVIC_DisableIRQ>
}
 800bc0c:	bf00      	nop
 800bc0e:	3708      	adds	r7, #8
 800bc10:	46bd      	mov	sp, r7
 800bc12:	bd80      	pop	{r7, pc}

0800bc14 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800bc14:	b480      	push	{r7}
 800bc16:	b083      	sub	sp, #12
 800bc18:	af00      	add	r7, sp, #0
 800bc1a:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800bc1c:	4b11      	ldr	r3, [pc, #68]	; (800bc64 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bc1e:	68db      	ldr	r3, [r3, #12]
 800bc20:	b29b      	uxth	r3, r3
 800bc22:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800bc26:	b29b      	uxth	r3, r3
 800bc28:	3b01      	subs	r3, #1
 800bc2a:	b29a      	uxth	r2, r3
 800bc2c:	4b0e      	ldr	r3, [pc, #56]	; (800bc68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800bc2e:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800bc30:	4b0c      	ldr	r3, [pc, #48]	; (800bc64 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bc32:	691b      	ldr	r3, [r3, #16]
 800bc34:	b29b      	uxth	r3, r3
 800bc36:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800bc3a:	b29b      	uxth	r3, r3
 800bc3c:	3b01      	subs	r3, #1
 800bc3e:	b29a      	uxth	r2, r3
 800bc40:	4b0a      	ldr	r3, [pc, #40]	; (800bc6c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800bc42:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800bc44:	4b08      	ldr	r3, [pc, #32]	; (800bc68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800bc46:	881a      	ldrh	r2, [r3, #0]
 800bc48:	4b06      	ldr	r3, [pc, #24]	; (800bc64 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bc4a:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800bc4c:	4b05      	ldr	r3, [pc, #20]	; (800bc64 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bc4e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bc50:	4a04      	ldr	r2, [pc, #16]	; (800bc64 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800bc52:	f043 0301 	orr.w	r3, r3, #1
 800bc56:	6353      	str	r3, [r2, #52]	; 0x34
}
 800bc58:	bf00      	nop
 800bc5a:	370c      	adds	r7, #12
 800bc5c:	46bd      	mov	sp, r7
 800bc5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc62:	4770      	bx	lr
 800bc64:	40016800 	.word	0x40016800
 800bc68:	20001790 	.word	0x20001790
 800bc6c:	20001792 	.word	0x20001792

0800bc70 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800bc70:	b480      	push	{r7}
 800bc72:	b083      	sub	sp, #12
 800bc74:	af00      	add	r7, sp, #0
 800bc76:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800bc78:	4b03      	ldr	r3, [pc, #12]	; (800bc88 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800bc7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 800bc7c:	4618      	mov	r0, r3
 800bc7e:	370c      	adds	r7, #12
 800bc80:	46bd      	mov	sp, r7
 800bc82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc86:	4770      	bx	lr
 800bc88:	40016884 	.word	0x40016884

0800bc8c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800bc8c:	b480      	push	{r7}
 800bc8e:	b083      	sub	sp, #12
 800bc90:	af00      	add	r7, sp, #0
 800bc92:	6078      	str	r0, [r7, #4]
 800bc94:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800bc96:	4a06      	ldr	r2, [pc, #24]	; (800bcb0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800bc98:	683b      	ldr	r3, [r7, #0]
 800bc9a:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800bc9c:	4b05      	ldr	r3, [pc, #20]	; (800bcb4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800bc9e:	2201      	movs	r2, #1
 800bca0:	625a      	str	r2, [r3, #36]	; 0x24
}
 800bca2:	bf00      	nop
 800bca4:	370c      	adds	r7, #12
 800bca6:	46bd      	mov	sp, r7
 800bca8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcac:	4770      	bx	lr
 800bcae:	bf00      	nop
 800bcb0:	40016884 	.word	0x40016884
 800bcb4:	40016800 	.word	0x40016800

0800bcb8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800bcb8:	b580      	push	{r7, lr}
 800bcba:	b082      	sub	sp, #8
 800bcbc:	af00      	add	r7, sp, #0
 800bcbe:	6078      	str	r0, [r7, #4]
 800bcc0:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800bcc2:	687b      	ldr	r3, [r7, #4]
 800bcc4:	6839      	ldr	r1, [r7, #0]
 800bcc6:	4618      	mov	r0, r3
 800bcc8:	f000 fad4 	bl	800c274 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800bccc:	bf00      	nop
 800bcce:	3708      	adds	r7, #8
 800bcd0:	46bd      	mov	sp, r7
 800bcd2:	bd80      	pop	{r7, pc}

0800bcd4 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 800bcd4:	b480      	push	{r7}
 800bcd6:	b085      	sub	sp, #20
 800bcd8:	af00      	add	r7, sp, #0
 800bcda:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 800bcdc:	4b0d      	ldr	r3, [pc, #52]	; (800bd14 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800bcde:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bce0:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 800bce2:	4b0c      	ldr	r3, [pc, #48]	; (800bd14 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800bce4:	68db      	ldr	r3, [r3, #12]
 800bce6:	b29b      	uxth	r3, r3
 800bce8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800bcec:	b29b      	uxth	r3, r3
 800bcee:	3301      	adds	r3, #1
 800bcf0:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    if (curr < backPorchY)
 800bcf2:	89fa      	ldrh	r2, [r7, #14]
 800bcf4:	89bb      	ldrh	r3, [r7, #12]
 800bcf6:	429a      	cmp	r2, r3
 800bcf8:	d201      	bcs.n	800bcfe <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x2a>
    {
        return 0;
 800bcfa:	2300      	movs	r3, #0
 800bcfc:	e003      	b.n	800bd06 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
    }
    else
    {
        return curr - backPorchY;
 800bcfe:	89fa      	ldrh	r2, [r7, #14]
 800bd00:	89bb      	ldrh	r3, [r7, #12]
 800bd02:	1ad3      	subs	r3, r2, r3
 800bd04:	b29b      	uxth	r3, r3
    }
}
 800bd06:	4618      	mov	r0, r3
 800bd08:	3714      	adds	r7, #20
 800bd0a:	46bd      	mov	sp, r7
 800bd0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd10:	4770      	bx	lr
 800bd12:	bf00      	nop
 800bd14:	40016800 	.word	0x40016800

0800bd18 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
 800bd18:	b580      	push	{r7, lr}
 800bd1a:	b082      	sub	sp, #8
 800bd1c:	af00      	add	r7, sp, #0
 800bd1e:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
 800bd20:	4b1a      	ldr	r3, [pc, #104]	; (800bd8c <HAL_LTDC_LineEventCallback+0x74>)
 800bd22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bd24:	4a1a      	ldr	r2, [pc, #104]	; (800bd90 <HAL_LTDC_LineEventCallback+0x78>)
 800bd26:	8812      	ldrh	r2, [r2, #0]
 800bd28:	4293      	cmp	r3, r2
 800bd2a:	bf0c      	ite	eq
 800bd2c:	2301      	moveq	r3, #1
 800bd2e:	2300      	movne	r3, #0
 800bd30:	b2db      	uxtb	r3, r3
 800bd32:	2b00      	cmp	r3, #0
 800bd34:	d017      	beq.n	800bd66 <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800bd36:	4b17      	ldr	r3, [pc, #92]	; (800bd94 <HAL_LTDC_LineEventCallback+0x7c>)
 800bd38:	881b      	ldrh	r3, [r3, #0]
 800bd3a:	4619      	mov	r1, r3
 800bd3c:	6878      	ldr	r0, [r7, #4]
 800bd3e:	f7f8 fb95 	bl	800446c <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800bd42:	f7fc fca1 	bl	8008688 <_ZN8touchgfx3HAL11getInstanceEv>
 800bd46:	4603      	mov	r3, r0
 800bd48:	4618      	mov	r0, r3
 800bd4a:	f7ff fe38 	bl	800b9be <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800bd4e:	f7fe fce5 	bl	800a71c <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800bd52:	f7fc fc99 	bl	8008688 <_ZN8touchgfx3HAL11getInstanceEv>
 800bd56:	4603      	mov	r3, r0
 800bd58:	4618      	mov	r0, r3
 800bd5a:	f001 f803 	bl	800cd64 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800bd5e:	2000      	movs	r0, #0
 800bd60:	f7fe fa06 	bl	800a170 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 800bd64:	e00e      	b.n	800bd84 <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800bd66:	4b0a      	ldr	r3, [pc, #40]	; (800bd90 <HAL_LTDC_LineEventCallback+0x78>)
 800bd68:	881b      	ldrh	r3, [r3, #0]
 800bd6a:	4619      	mov	r1, r3
 800bd6c:	6878      	ldr	r0, [r7, #4]
 800bd6e:	f7f8 fb7d 	bl	800446c <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800bd72:	2000      	movs	r0, #0
 800bd74:	f7fe fa07 	bl	800a186 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
 800bd78:	f7fc fc86 	bl	8008688 <_ZN8touchgfx3HAL11getInstanceEv>
 800bd7c:	4603      	mov	r3, r0
 800bd7e:	4618      	mov	r0, r3
 800bd80:	f7ff fdff 	bl	800b982 <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
 800bd84:	bf00      	nop
 800bd86:	3708      	adds	r7, #8
 800bd88:	46bd      	mov	sp, r7
 800bd8a:	bd80      	pop	{r7, pc}
 800bd8c:	40016800 	.word	0x40016800
 800bd90:	20001790 	.word	0x20001790
 800bd94:	20001792 	.word	0x20001792

0800bd98 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800bd98:	8880      	ldrh	r0, [r0, #4]
 800bd9a:	4770      	bx	lr

0800bd9c <_ZN8touchgfx17AbstractPartition5clearEv>:
 800bd9c:	2300      	movs	r3, #0
 800bd9e:	8083      	strh	r3, [r0, #4]
 800bda0:	4770      	bx	lr
	...

0800bda4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800bda4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bda6:	6803      	ldr	r3, [r0, #0]
 800bda8:	4605      	mov	r5, r0
 800bdaa:	460e      	mov	r6, r1
 800bdac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bdae:	2100      	movs	r1, #0
 800bdb0:	4798      	blx	r3
 800bdb2:	682b      	ldr	r3, [r5, #0]
 800bdb4:	4604      	mov	r4, r0
 800bdb6:	6a1b      	ldr	r3, [r3, #32]
 800bdb8:	4628      	mov	r0, r5
 800bdba:	4798      	blx	r3
 800bdbc:	88ab      	ldrh	r3, [r5, #4]
 800bdbe:	1b34      	subs	r4, r6, r4
 800bdc0:	b2a4      	uxth	r4, r4
 800bdc2:	fbb4 f4f0 	udiv	r4, r4, r0
 800bdc6:	42a3      	cmp	r3, r4
 800bdc8:	d805      	bhi.n	800bdd6 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800bdca:	4b0e      	ldr	r3, [pc, #56]	; (800be04 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800bdcc:	4a0e      	ldr	r2, [pc, #56]	; (800be08 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800bdce:	211e      	movs	r1, #30
 800bdd0:	480e      	ldr	r0, [pc, #56]	; (800be0c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800bdd2:	f00f fddb 	bl	801b98c <__assert_func>
 800bdd6:	682b      	ldr	r3, [r5, #0]
 800bdd8:	2100      	movs	r1, #0
 800bdda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bddc:	4628      	mov	r0, r5
 800bdde:	4798      	blx	r3
 800bde0:	682b      	ldr	r3, [r5, #0]
 800bde2:	4607      	mov	r7, r0
 800bde4:	6a1b      	ldr	r3, [r3, #32]
 800bde6:	4628      	mov	r0, r5
 800bde8:	4798      	blx	r3
 800bdea:	1bf3      	subs	r3, r6, r7
 800bdec:	b29b      	uxth	r3, r3
 800bdee:	fbb3 f2f0 	udiv	r2, r3, r0
 800bdf2:	fb02 3010 	mls	r0, r2, r0, r3
 800bdf6:	b118      	cbz	r0, 800be00 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800bdf8:	4b05      	ldr	r3, [pc, #20]	; (800be10 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800bdfa:	4a03      	ldr	r2, [pc, #12]	; (800be08 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800bdfc:	211f      	movs	r1, #31
 800bdfe:	e7e7      	b.n	800bdd0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800be00:	4620      	mov	r0, r4
 800be02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be04:	0801f3ec 	.word	0x0801f3ec
 800be08:	0801f55a 	.word	0x0801f55a
 800be0c:	0801f401 	.word	0x0801f401
 800be10:	0801f42f 	.word	0x0801f42f

0800be14 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800be14:	b538      	push	{r3, r4, r5, lr}
 800be16:	6803      	ldr	r3, [r0, #0]
 800be18:	6a1b      	ldr	r3, [r3, #32]
 800be1a:	460d      	mov	r5, r1
 800be1c:	4604      	mov	r4, r0
 800be1e:	4798      	blx	r3
 800be20:	4285      	cmp	r5, r0
 800be22:	d905      	bls.n	800be30 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800be24:	4b0c      	ldr	r3, [pc, #48]	; (800be58 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800be26:	4a0d      	ldr	r2, [pc, #52]	; (800be5c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800be28:	212f      	movs	r1, #47	; 0x2f
 800be2a:	480d      	ldr	r0, [pc, #52]	; (800be60 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800be2c:	f00f fdae 	bl	801b98c <__assert_func>
 800be30:	6823      	ldr	r3, [r4, #0]
 800be32:	88a5      	ldrh	r5, [r4, #4]
 800be34:	69db      	ldr	r3, [r3, #28]
 800be36:	4620      	mov	r0, r4
 800be38:	4798      	blx	r3
 800be3a:	4285      	cmp	r5, r0
 800be3c:	d303      	bcc.n	800be46 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800be3e:	4b09      	ldr	r3, [pc, #36]	; (800be64 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800be40:	4a06      	ldr	r2, [pc, #24]	; (800be5c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800be42:	2130      	movs	r1, #48	; 0x30
 800be44:	e7f1      	b.n	800be2a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800be46:	6823      	ldr	r3, [r4, #0]
 800be48:	88a1      	ldrh	r1, [r4, #4]
 800be4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be4c:	4620      	mov	r0, r4
 800be4e:	4798      	blx	r3
 800be50:	88a3      	ldrh	r3, [r4, #4]
 800be52:	3301      	adds	r3, #1
 800be54:	80a3      	strh	r3, [r4, #4]
 800be56:	bd38      	pop	{r3, r4, r5, pc}
 800be58:	0801f4a9 	.word	0x0801f4a9
 800be5c:	0801f59d 	.word	0x0801f59d
 800be60:	0801f401 	.word	0x0801f401
 800be64:	0801f4c0 	.word	0x0801f4c0

0800be68 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800be68:	b570      	push	{r4, r5, r6, lr}
 800be6a:	6803      	ldr	r3, [r0, #0]
 800be6c:	6a1b      	ldr	r3, [r3, #32]
 800be6e:	4616      	mov	r6, r2
 800be70:	4604      	mov	r4, r0
 800be72:	460d      	mov	r5, r1
 800be74:	4798      	blx	r3
 800be76:	4286      	cmp	r6, r0
 800be78:	d905      	bls.n	800be86 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800be7a:	4b06      	ldr	r3, [pc, #24]	; (800be94 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800be7c:	4a06      	ldr	r2, [pc, #24]	; (800be98 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800be7e:	4807      	ldr	r0, [pc, #28]	; (800be9c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800be80:	2139      	movs	r1, #57	; 0x39
 800be82:	f00f fd83 	bl	801b98c <__assert_func>
 800be86:	6823      	ldr	r3, [r4, #0]
 800be88:	4629      	mov	r1, r5
 800be8a:	4620      	mov	r0, r4
 800be8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be92:	4718      	bx	r3
 800be94:	0801f4a9 	.word	0x0801f4a9
 800be98:	0801f510 	.word	0x0801f510
 800be9c:	0801f401 	.word	0x0801f401

0800bea0 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800bea0:	4770      	bx	lr
	...

0800bea4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800bea4:	4a02      	ldr	r2, [pc, #8]	; (800beb0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800bea6:	6002      	str	r2, [r0, #0]
 800bea8:	2200      	movs	r2, #0
 800beaa:	8082      	strh	r2, [r0, #4]
 800beac:	4770      	bx	lr
 800beae:	bf00      	nop
 800beb0:	0801f4e4 	.word	0x0801f4e4

0800beb4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800beb4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800beb6:	2000      	movs	r0, #0
 800beb8:	b12b      	cbz	r3, 800bec6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800beba:	b920      	cbnz	r0, 800bec6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800bebc:	1a5a      	subs	r2, r3, r1
 800bebe:	4250      	negs	r0, r2
 800bec0:	4150      	adcs	r0, r2
 800bec2:	699b      	ldr	r3, [r3, #24]
 800bec4:	e7f8      	b.n	800beb8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800bec6:	4770      	bx	lr

0800bec8 <_ZN8touchgfx9Container9removeAllEv>:
 800bec8:	2200      	movs	r2, #0
 800beca:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800becc:	b123      	cbz	r3, 800bed8 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800bece:	6999      	ldr	r1, [r3, #24]
 800bed0:	6281      	str	r1, [r0, #40]	; 0x28
 800bed2:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800bed6:	e7f8      	b.n	800beca <_ZN8touchgfx9Container9removeAllEv+0x2>
 800bed8:	4770      	bx	lr

0800beda <_ZN8touchgfx9Container6unlinkEv>:
 800beda:	2300      	movs	r3, #0
 800bedc:	6283      	str	r3, [r0, #40]	; 0x28
 800bede:	4770      	bx	lr

0800bee0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800bee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bee4:	461f      	mov	r7, r3
 800bee6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800beea:	460d      	mov	r5, r1
 800beec:	4616      	mov	r6, r2
 800beee:	b103      	cbz	r3, 800bef2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800bef0:	6038      	str	r0, [r7, #0]
 800bef2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bef4:	b314      	cbz	r4, 800bf3c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800bef6:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800befa:	b1eb      	cbz	r3, 800bf38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800befc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800bf00:	428d      	cmp	r5, r1
 800bf02:	db19      	blt.n	800bf38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bf04:	8923      	ldrh	r3, [r4, #8]
 800bf06:	b289      	uxth	r1, r1
 800bf08:	440b      	add	r3, r1
 800bf0a:	b21b      	sxth	r3, r3
 800bf0c:	429d      	cmp	r5, r3
 800bf0e:	da13      	bge.n	800bf38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bf10:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800bf14:	4296      	cmp	r6, r2
 800bf16:	db0f      	blt.n	800bf38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bf18:	8963      	ldrh	r3, [r4, #10]
 800bf1a:	b292      	uxth	r2, r2
 800bf1c:	4413      	add	r3, r2
 800bf1e:	b21b      	sxth	r3, r3
 800bf20:	429e      	cmp	r6, r3
 800bf22:	da09      	bge.n	800bf38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bf24:	6823      	ldr	r3, [r4, #0]
 800bf26:	1ab2      	subs	r2, r6, r2
 800bf28:	1a69      	subs	r1, r5, r1
 800bf2a:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800bf2e:	b212      	sxth	r2, r2
 800bf30:	463b      	mov	r3, r7
 800bf32:	b209      	sxth	r1, r1
 800bf34:	4620      	mov	r0, r4
 800bf36:	47c0      	blx	r8
 800bf38:	69a4      	ldr	r4, [r4, #24]
 800bf3a:	e7db      	b.n	800bef4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800bf3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bf40 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800bf40:	2200      	movs	r2, #0
 800bf42:	8002      	strh	r2, [r0, #0]
 800bf44:	8042      	strh	r2, [r0, #2]
 800bf46:	8082      	strh	r2, [r0, #4]
 800bf48:	80c2      	strh	r2, [r0, #6]
 800bf4a:	4770      	bx	lr

0800bf4c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800bf4c:	b570      	push	{r4, r5, r6, lr}
 800bf4e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bf50:	460d      	mov	r5, r1
 800bf52:	4616      	mov	r6, r2
 800bf54:	b13c      	cbz	r4, 800bf66 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800bf56:	6823      	ldr	r3, [r4, #0]
 800bf58:	4620      	mov	r0, r4
 800bf5a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800bf5c:	4632      	mov	r2, r6
 800bf5e:	4629      	mov	r1, r5
 800bf60:	4798      	blx	r3
 800bf62:	69a4      	ldr	r4, [r4, #24]
 800bf64:	e7f6      	b.n	800bf54 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800bf66:	bd70      	pop	{r4, r5, r6, pc}

0800bf68 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800bf68:	b538      	push	{r3, r4, r5, lr}
 800bf6a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bf6c:	460d      	mov	r5, r1
 800bf6e:	b134      	cbz	r4, 800bf7e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800bf70:	682b      	ldr	r3, [r5, #0]
 800bf72:	4621      	mov	r1, r4
 800bf74:	689b      	ldr	r3, [r3, #8]
 800bf76:	4628      	mov	r0, r5
 800bf78:	4798      	blx	r3
 800bf7a:	69a4      	ldr	r4, [r4, #24]
 800bf7c:	e7f7      	b.n	800bf6e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800bf7e:	bd38      	pop	{r3, r4, r5, pc}

0800bf80 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800bf80:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bf82:	b19b      	cbz	r3, 800bfac <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bf84:	428b      	cmp	r3, r1
 800bf86:	d109      	bne.n	800bf9c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800bf88:	699a      	ldr	r2, [r3, #24]
 800bf8a:	2100      	movs	r1, #0
 800bf8c:	6159      	str	r1, [r3, #20]
 800bf8e:	6282      	str	r2, [r0, #40]	; 0x28
 800bf90:	b902      	cbnz	r2, 800bf94 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800bf92:	4770      	bx	lr
 800bf94:	6199      	str	r1, [r3, #24]
 800bf96:	4770      	bx	lr
 800bf98:	4613      	mov	r3, r2
 800bf9a:	b13a      	cbz	r2, 800bfac <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bf9c:	699a      	ldr	r2, [r3, #24]
 800bf9e:	428a      	cmp	r2, r1
 800bfa0:	d1fa      	bne.n	800bf98 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800bfa2:	698a      	ldr	r2, [r1, #24]
 800bfa4:	619a      	str	r2, [r3, #24]
 800bfa6:	2300      	movs	r3, #0
 800bfa8:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800bfac:	4770      	bx	lr

0800bfae <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800bfae:	b410      	push	{r4}
 800bfb0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bfb2:	4604      	mov	r4, r0
 800bfb4:	b92b      	cbnz	r3, 800bfc2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800bfb6:	6803      	ldr	r3, [r0, #0]
 800bfb8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bfbc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800bfbe:	4611      	mov	r1, r2
 800bfc0:	4718      	bx	r3
 800bfc2:	b941      	cbnz	r1, 800bfd6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800bfc4:	6193      	str	r3, [r2, #24]
 800bfc6:	6282      	str	r2, [r0, #40]	; 0x28
 800bfc8:	6154      	str	r4, [r2, #20]
 800bfca:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bfce:	4770      	bx	lr
 800bfd0:	4603      	mov	r3, r0
 800bfd2:	2800      	cmp	r0, #0
 800bfd4:	d0f9      	beq.n	800bfca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800bfd6:	4299      	cmp	r1, r3
 800bfd8:	6998      	ldr	r0, [r3, #24]
 800bfda:	d1f9      	bne.n	800bfd0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800bfdc:	6190      	str	r0, [r2, #24]
 800bfde:	618a      	str	r2, [r1, #24]
 800bfe0:	e7f2      	b.n	800bfc8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800bfe4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800bfe4:	4288      	cmp	r0, r1
 800bfe6:	b508      	push	{r3, lr}
 800bfe8:	d105      	bne.n	800bff6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800bfea:	4b11      	ldr	r3, [pc, #68]	; (800c030 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800bfec:	4a11      	ldr	r2, [pc, #68]	; (800c034 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bfee:	2123      	movs	r1, #35	; 0x23
 800bff0:	4811      	ldr	r0, [pc, #68]	; (800c038 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800bff2:	f00f fccb 	bl	801b98c <__assert_func>
 800bff6:	694b      	ldr	r3, [r1, #20]
 800bff8:	b11b      	cbz	r3, 800c002 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800bffa:	4b10      	ldr	r3, [pc, #64]	; (800c03c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800bffc:	4a0d      	ldr	r2, [pc, #52]	; (800c034 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bffe:	2124      	movs	r1, #36	; 0x24
 800c000:	e7f6      	b.n	800bff0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c002:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800c006:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800c008:	b913      	cbnz	r3, 800c010 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800c00a:	6281      	str	r1, [r0, #40]	; 0x28
 800c00c:	bd08      	pop	{r3, pc}
 800c00e:	4613      	mov	r3, r2
 800c010:	699a      	ldr	r2, [r3, #24]
 800c012:	b12a      	cbz	r2, 800c020 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800c014:	428b      	cmp	r3, r1
 800c016:	d1fa      	bne.n	800c00e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800c018:	4b09      	ldr	r3, [pc, #36]	; (800c040 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c01a:	4a06      	ldr	r2, [pc, #24]	; (800c034 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c01c:	2135      	movs	r1, #53	; 0x35
 800c01e:	e7e7      	b.n	800bff0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c020:	428b      	cmp	r3, r1
 800c022:	d103      	bne.n	800c02c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800c024:	4b06      	ldr	r3, [pc, #24]	; (800c040 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800c026:	4a03      	ldr	r2, [pc, #12]	; (800c034 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800c028:	2138      	movs	r1, #56	; 0x38
 800c02a:	e7e1      	b.n	800bff0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800c02c:	6199      	str	r1, [r3, #24]
 800c02e:	e7ed      	b.n	800c00c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800c030:	0801f5db 	.word	0x0801f5db
 800c034:	0801f730 	.word	0x0801f730
 800c038:	0801f607 	.word	0x0801f607
 800c03c:	0801f63a 	.word	0x0801f63a
 800c040:	0801f670 	.word	0x0801f670

0800c044 <_ZN8touchgfx4RectaNERKS0_>:
 800c044:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c048:	888b      	ldrh	r3, [r1, #4]
 800c04a:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c04e:	f9b0 a000 	ldrsh.w	sl, [r0]
 800c052:	444b      	add	r3, r9
 800c054:	b29b      	uxth	r3, r3
 800c056:	fa0f f883 	sxth.w	r8, r3
 800c05a:	45c2      	cmp	sl, r8
 800c05c:	da30      	bge.n	800c0c0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c05e:	8882      	ldrh	r2, [r0, #4]
 800c060:	4452      	add	r2, sl
 800c062:	b292      	uxth	r2, r2
 800c064:	fa0f fe82 	sxth.w	lr, r2
 800c068:	45f1      	cmp	r9, lr
 800c06a:	da29      	bge.n	800c0c0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c06c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c070:	88cc      	ldrh	r4, [r1, #6]
 800c072:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800c076:	442c      	add	r4, r5
 800c078:	b224      	sxth	r4, r4
 800c07a:	42a6      	cmp	r6, r4
 800c07c:	da20      	bge.n	800c0c0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c07e:	88c7      	ldrh	r7, [r0, #6]
 800c080:	4437      	add	r7, r6
 800c082:	b2bf      	uxth	r7, r7
 800c084:	fa0f fc87 	sxth.w	ip, r7
 800c088:	4565      	cmp	r5, ip
 800c08a:	da19      	bge.n	800c0c0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800c08c:	45ca      	cmp	sl, r9
 800c08e:	4654      	mov	r4, sl
 800c090:	bfb8      	it	lt
 800c092:	464c      	movlt	r4, r9
 800c094:	42b5      	cmp	r5, r6
 800c096:	bfb8      	it	lt
 800c098:	4635      	movlt	r5, r6
 800c09a:	45f0      	cmp	r8, lr
 800c09c:	bfc8      	it	gt
 800c09e:	4613      	movgt	r3, r2
 800c0a0:	1b1b      	subs	r3, r3, r4
 800c0a2:	8083      	strh	r3, [r0, #4]
 800c0a4:	88ca      	ldrh	r2, [r1, #6]
 800c0a6:	884b      	ldrh	r3, [r1, #2]
 800c0a8:	8004      	strh	r4, [r0, #0]
 800c0aa:	4413      	add	r3, r2
 800c0ac:	b29b      	uxth	r3, r3
 800c0ae:	b21a      	sxth	r2, r3
 800c0b0:	4594      	cmp	ip, r2
 800c0b2:	bfb8      	it	lt
 800c0b4:	463b      	movlt	r3, r7
 800c0b6:	1b5b      	subs	r3, r3, r5
 800c0b8:	80c3      	strh	r3, [r0, #6]
 800c0ba:	8045      	strh	r5, [r0, #2]
 800c0bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c0c0:	2300      	movs	r3, #0
 800c0c2:	8003      	strh	r3, [r0, #0]
 800c0c4:	8043      	strh	r3, [r0, #2]
 800c0c6:	8083      	strh	r3, [r0, #4]
 800c0c8:	80c3      	strh	r3, [r0, #6]
 800c0ca:	e7f7      	b.n	800c0bc <_ZN8touchgfx4RectaNERKS0_+0x78>

0800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>:
 800c0cc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c0d0:	b12b      	cbz	r3, 800c0de <_ZNK8touchgfx4Rect7isEmptyEv+0x12>
 800c0d2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c0d6:	fab0 f080 	clz	r0, r0
 800c0da:	0940      	lsrs	r0, r0, #5
 800c0dc:	4770      	bx	lr
 800c0de:	2001      	movs	r0, #1
 800c0e0:	4770      	bx	lr

0800c0e2 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800c0e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0e6:	2300      	movs	r3, #0
 800c0e8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800c0ea:	8003      	strh	r3, [r0, #0]
 800c0ec:	4604      	mov	r4, r0
 800c0ee:	8043      	strh	r3, [r0, #2]
 800c0f0:	8083      	strh	r3, [r0, #4]
 800c0f2:	80c3      	strh	r3, [r0, #6]
 800c0f4:	2d00      	cmp	r5, #0
 800c0f6:	d040      	beq.n	800c17a <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800c0f8:	1d28      	adds	r0, r5, #4
 800c0fa:	f7ff ffe7 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800c0fe:	b988      	cbnz	r0, 800c124 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c100:	4620      	mov	r0, r4
 800c102:	f7ff ffe3 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800c106:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c10a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c10e:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800c112:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800c116:	b138      	cbz	r0, 800c128 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800c118:	8022      	strh	r2, [r4, #0]
 800c11a:	8063      	strh	r3, [r4, #2]
 800c11c:	f8a4 e004 	strh.w	lr, [r4, #4]
 800c120:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c124:	69ad      	ldr	r5, [r5, #24]
 800c126:	e7e5      	b.n	800c0f4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800c128:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c12c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c130:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800c134:	4290      	cmp	r0, r2
 800c136:	4607      	mov	r7, r0
 800c138:	bfa8      	it	ge
 800c13a:	4617      	movge	r7, r2
 800c13c:	4472      	add	r2, lr
 800c13e:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800c142:	8027      	strh	r7, [r4, #0]
 800c144:	4299      	cmp	r1, r3
 800c146:	460e      	mov	r6, r1
 800c148:	4440      	add	r0, r8
 800c14a:	bfa8      	it	ge
 800c14c:	461e      	movge	r6, r3
 800c14e:	4471      	add	r1, lr
 800c150:	4463      	add	r3, ip
 800c152:	b200      	sxth	r0, r0
 800c154:	b212      	sxth	r2, r2
 800c156:	b209      	sxth	r1, r1
 800c158:	b21b      	sxth	r3, r3
 800c15a:	4290      	cmp	r0, r2
 800c15c:	bfac      	ite	ge
 800c15e:	ebc7 0200 	rsbge	r2, r7, r0
 800c162:	ebc7 0202 	rsblt	r2, r7, r2
 800c166:	4299      	cmp	r1, r3
 800c168:	bfac      	ite	ge
 800c16a:	ebc6 0301 	rsbge	r3, r6, r1
 800c16e:	ebc6 0303 	rsblt	r3, r6, r3
 800c172:	8066      	strh	r6, [r4, #2]
 800c174:	80a2      	strh	r2, [r4, #4]
 800c176:	80e3      	strh	r3, [r4, #6]
 800c178:	e7d4      	b.n	800c124 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c17a:	4620      	mov	r0, r4
 800c17c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c180 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800c180:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c184:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c188:	b383      	cbz	r3, 800c1ec <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c18a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c18c:	b374      	cbz	r4, 800c1ec <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c18e:	f9b1 5000 	ldrsh.w	r5, [r1]
 800c192:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800c196:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800c19a:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800c19e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c1a2:	b303      	cbz	r3, 800c1e6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c1a4:	4668      	mov	r0, sp
 800c1a6:	1d21      	adds	r1, r4, #4
 800c1a8:	f8ad 5000 	strh.w	r5, [sp]
 800c1ac:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c1b0:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c1b4:	f8ad 8006 	strh.w	r8, [sp, #6]
 800c1b8:	f7ff ff44 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800c1bc:	4668      	mov	r0, sp
 800c1be:	f7ff ff85 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800c1c2:	b980      	cbnz	r0, 800c1e6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c1c4:	f8bd 3000 	ldrh.w	r3, [sp]
 800c1c8:	88a2      	ldrh	r2, [r4, #4]
 800c1ca:	1a9b      	subs	r3, r3, r2
 800c1cc:	f8ad 3000 	strh.w	r3, [sp]
 800c1d0:	88e2      	ldrh	r2, [r4, #6]
 800c1d2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c1d6:	1a9b      	subs	r3, r3, r2
 800c1d8:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c1dc:	6823      	ldr	r3, [r4, #0]
 800c1de:	4669      	mov	r1, sp
 800c1e0:	689b      	ldr	r3, [r3, #8]
 800c1e2:	4620      	mov	r0, r4
 800c1e4:	4798      	blx	r3
 800c1e6:	69a4      	ldr	r4, [r4, #24]
 800c1e8:	2c00      	cmp	r4, #0
 800c1ea:	d1d8      	bne.n	800c19e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800c1ec:	b002      	add	sp, #8
 800c1ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c1f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800c1f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c1f4:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c1f8:	460d      	mov	r5, r1
 800c1fa:	4616      	mov	r6, r2
 800c1fc:	b323      	cbz	r3, 800c248 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c1fe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800c200:	b314      	cbz	r4, 800c248 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c202:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800c206:	b1eb      	cbz	r3, 800c244 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c208:	6828      	ldr	r0, [r5, #0]
 800c20a:	6869      	ldr	r1, [r5, #4]
 800c20c:	466b      	mov	r3, sp
 800c20e:	c303      	stmia	r3!, {r0, r1}
 800c210:	4668      	mov	r0, sp
 800c212:	1d21      	adds	r1, r4, #4
 800c214:	f7ff ff16 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800c218:	4668      	mov	r0, sp
 800c21a:	f7ff ff57 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800c21e:	b988      	cbnz	r0, 800c244 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c220:	f8bd 3000 	ldrh.w	r3, [sp]
 800c224:	88a2      	ldrh	r2, [r4, #4]
 800c226:	1a9b      	subs	r3, r3, r2
 800c228:	f8ad 3000 	strh.w	r3, [sp]
 800c22c:	88e2      	ldrh	r2, [r4, #6]
 800c22e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c232:	1a9b      	subs	r3, r3, r2
 800c234:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c238:	6823      	ldr	r3, [r4, #0]
 800c23a:	4632      	mov	r2, r6
 800c23c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c23e:	4669      	mov	r1, sp
 800c240:	4620      	mov	r0, r4
 800c242:	4798      	blx	r3
 800c244:	69a4      	ldr	r4, [r4, #24]
 800c246:	e7db      	b.n	800c200 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c248:	b002      	add	sp, #8
 800c24a:	bd70      	pop	{r4, r5, r6, pc}

0800c24c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800c24c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800c250:	4770      	bx	lr

0800c252 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c252:	b513      	push	{r0, r1, r4, lr}
 800c254:	6803      	ldr	r3, [r0, #0]
 800c256:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800c25a:	2300      	movs	r3, #0
 800c25c:	e9cd 3300 	strd	r3, r3, [sp]
 800c260:	466b      	mov	r3, sp
 800c262:	47a0      	blx	r4
 800c264:	b002      	add	sp, #8
 800c266:	bd10      	pop	{r4, pc}

0800c268 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c268:	2301      	movs	r3, #1
 800c26a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c26e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c272:	4770      	bx	lr

0800c274 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c274:	2301      	movs	r3, #1
 800c276:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c27a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c27e:	4770      	bx	lr

0800c280 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c280:	6843      	ldr	r3, [r0, #4]
 800c282:	2201      	movs	r2, #1
 800c284:	725a      	strb	r2, [r3, #9]
 800c286:	6840      	ldr	r0, [r0, #4]
 800c288:	6803      	ldr	r3, [r0, #0]
 800c28a:	691b      	ldr	r3, [r3, #16]
 800c28c:	4718      	bx	r3

0800c28e <_ZN8touchgfx3HAL8flushDMAEv>:
 800c28e:	6840      	ldr	r0, [r0, #4]
 800c290:	6803      	ldr	r3, [r0, #0]
 800c292:	689b      	ldr	r3, [r3, #8]
 800c294:	4718      	bx	r3
	...

0800c298 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c298:	4b04      	ldr	r3, [pc, #16]	; (800c2ac <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c29a:	781b      	ldrb	r3, [r3, #0]
 800c29c:	b123      	cbz	r3, 800c2a8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c29e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c2a2:	f080 0001 	eor.w	r0, r0, #1
 800c2a6:	4770      	bx	lr
 800c2a8:	2001      	movs	r0, #1
 800c2aa:	4770      	bx	lr
 800c2ac:	2000179e 	.word	0x2000179e

0800c2b0 <_ZN8touchgfx3HAL8endFrameEv>:
 800c2b0:	b510      	push	{r4, lr}
 800c2b2:	4604      	mov	r4, r0
 800c2b4:	6840      	ldr	r0, [r0, #4]
 800c2b6:	6803      	ldr	r3, [r0, #0]
 800c2b8:	689b      	ldr	r3, [r3, #8]
 800c2ba:	4798      	blx	r3
 800c2bc:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800c2c0:	b113      	cbz	r3, 800c2c8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c2c2:	2301      	movs	r3, #1
 800c2c4:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c2c8:	bd10      	pop	{r4, pc}

0800c2ca <_ZN8touchgfx3HAL9taskEntryEv>:
 800c2ca:	b508      	push	{r3, lr}
 800c2cc:	6803      	ldr	r3, [r0, #0]
 800c2ce:	4604      	mov	r4, r0
 800c2d0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c2d2:	4798      	blx	r3
 800c2d4:	6823      	ldr	r3, [r4, #0]
 800c2d6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c2d8:	4620      	mov	r0, r4
 800c2da:	4798      	blx	r3
 800c2dc:	f7fe fa2a 	bl	800a734 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800c2e0:	6823      	ldr	r3, [r4, #0]
 800c2e2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800c2e4:	e7f8      	b.n	800c2d8 <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

0800c2e8 <_ZN8touchgfx3HAL4tickEv>:
 800c2e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c2ea:	6803      	ldr	r3, [r0, #0]
 800c2ec:	4d5c      	ldr	r5, [pc, #368]	; (800c460 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c2ee:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c2f2:	4604      	mov	r4, r0
 800c2f4:	4798      	blx	r3
 800c2f6:	2800      	cmp	r0, #0
 800c2f8:	f000 8097 	beq.w	800c42a <_ZN8touchgfx3HAL4tickEv+0x142>
 800c2fc:	2001      	movs	r0, #1
 800c2fe:	f7fd ff37 	bl	800a170 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c302:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800c306:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c30a:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c30e:	2600      	movs	r6, #0
 800c310:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800c314:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800c318:	b133      	cbz	r3, 800c328 <_ZN8touchgfx3HAL4tickEv+0x40>
 800c31a:	6823      	ldr	r3, [r4, #0]
 800c31c:	4620      	mov	r0, r4
 800c31e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c322:	4798      	blx	r3
 800c324:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800c328:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800c32c:	6862      	ldr	r2, [r4, #4]
 800c32e:	f083 0301 	eor.w	r3, r3, #1
 800c332:	7253      	strb	r3, [r2, #9]
 800c334:	2601      	movs	r6, #1
 800c336:	702e      	strb	r6, [r5, #0]
 800c338:	f002 f8aa 	bl	800e490 <_ZN8touchgfx11Application11getInstanceEv>
 800c33c:	6803      	ldr	r3, [r0, #0]
 800c33e:	4631      	mov	r1, r6
 800c340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c342:	4798      	blx	r3
 800c344:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c348:	b90b      	cbnz	r3, 800c34e <_ZN8touchgfx3HAL4tickEv+0x66>
 800c34a:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800c34e:	f002 f89f 	bl	800e490 <_ZN8touchgfx11Application11getInstanceEv>
 800c352:	6803      	ldr	r3, [r0, #0]
 800c354:	695b      	ldr	r3, [r3, #20]
 800c356:	4798      	blx	r3
 800c358:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c35a:	6803      	ldr	r3, [r0, #0]
 800c35c:	691b      	ldr	r3, [r3, #16]
 800c35e:	4798      	blx	r3
 800c360:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c364:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800c368:	3b01      	subs	r3, #1
 800c36a:	b2db      	uxtb	r3, r3
 800c36c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c370:	b10a      	cbz	r2, 800c376 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800c372:	2b00      	cmp	r3, #0
 800c374:	d1eb      	bne.n	800c34e <_ZN8touchgfx3HAL4tickEv+0x66>
 800c376:	4a3b      	ldr	r2, [pc, #236]	; (800c464 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c378:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800c37c:	7813      	ldrb	r3, [r2, #0]
 800c37e:	3301      	adds	r3, #1
 800c380:	b25b      	sxtb	r3, r3
 800c382:	4299      	cmp	r1, r3
 800c384:	7013      	strb	r3, [r2, #0]
 800c386:	dc10      	bgt.n	800c3aa <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c388:	68e0      	ldr	r0, [r4, #12]
 800c38a:	2300      	movs	r3, #0
 800c38c:	7013      	strb	r3, [r2, #0]
 800c38e:	6803      	ldr	r3, [r0, #0]
 800c390:	aa03      	add	r2, sp, #12
 800c392:	68db      	ldr	r3, [r3, #12]
 800c394:	a902      	add	r1, sp, #8
 800c396:	4798      	blx	r3
 800c398:	6823      	ldr	r3, [r4, #0]
 800c39a:	2800      	cmp	r0, #0
 800c39c:	d051      	beq.n	800c442 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800c39e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c3a2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c3a6:	4620      	mov	r0, r4
 800c3a8:	4798      	blx	r3
 800c3aa:	6960      	ldr	r0, [r4, #20]
 800c3ac:	2300      	movs	r3, #0
 800c3ae:	f88d 3007 	strb.w	r3, [sp, #7]
 800c3b2:	b158      	cbz	r0, 800c3cc <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c3b4:	6803      	ldr	r3, [r0, #0]
 800c3b6:	f10d 0107 	add.w	r1, sp, #7
 800c3ba:	68db      	ldr	r3, [r3, #12]
 800c3bc:	4798      	blx	r3
 800c3be:	b128      	cbz	r0, 800c3cc <_ZN8touchgfx3HAL4tickEv+0xe4>
 800c3c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c3c2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c3c6:	6803      	ldr	r3, [r0, #0]
 800c3c8:	68db      	ldr	r3, [r3, #12]
 800c3ca:	4798      	blx	r3
 800c3cc:	f104 001c 	add.w	r0, r4, #28
 800c3d0:	f00f f9f8 	bl	801b7c4 <_ZN8touchgfx8Gestures4tickEv>
 800c3d4:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800c3d8:	b30b      	cbz	r3, 800c41e <_ZN8touchgfx3HAL4tickEv+0x136>
 800c3da:	6920      	ldr	r0, [r4, #16]
 800c3dc:	6803      	ldr	r3, [r0, #0]
 800c3de:	691b      	ldr	r3, [r3, #16]
 800c3e0:	4798      	blx	r3
 800c3e2:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c3e4:	4606      	mov	r6, r0
 800c3e6:	b903      	cbnz	r3, 800c3ea <_ZN8touchgfx3HAL4tickEv+0x102>
 800c3e8:	6720      	str	r0, [r4, #112]	; 0x70
 800c3ea:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c3ec:	4a1e      	ldr	r2, [pc, #120]	; (800c468 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800c3ee:	1af3      	subs	r3, r6, r3
 800c3f0:	4293      	cmp	r3, r2
 800c3f2:	d914      	bls.n	800c41e <_ZN8touchgfx3HAL4tickEv+0x136>
 800c3f4:	6920      	ldr	r0, [r4, #16]
 800c3f6:	6803      	ldr	r3, [r0, #0]
 800c3f8:	699b      	ldr	r3, [r3, #24]
 800c3fa:	4798      	blx	r3
 800c3fc:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c3fe:	2264      	movs	r2, #100	; 0x64
 800c400:	1af3      	subs	r3, r6, r3
 800c402:	fbb3 f3f2 	udiv	r3, r3, r2
 800c406:	fbb0 f0f3 	udiv	r0, r0, r3
 800c40a:	2800      	cmp	r0, #0
 800c40c:	dc1e      	bgt.n	800c44c <_ZN8touchgfx3HAL4tickEv+0x164>
 800c40e:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800c412:	6920      	ldr	r0, [r4, #16]
 800c414:	6803      	ldr	r3, [r0, #0]
 800c416:	2100      	movs	r1, #0
 800c418:	69db      	ldr	r3, [r3, #28]
 800c41a:	4798      	blx	r3
 800c41c:	6726      	str	r6, [r4, #112]	; 0x70
 800c41e:	f002 f837 	bl	800e490 <_ZN8touchgfx11Application11getInstanceEv>
 800c422:	6803      	ldr	r3, [r0, #0]
 800c424:	2100      	movs	r1, #0
 800c426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c428:	4798      	blx	r3
 800c42a:	6823      	ldr	r3, [r4, #0]
 800c42c:	4620      	mov	r0, r4
 800c42e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800c432:	4798      	blx	r3
 800c434:	2001      	movs	r0, #1
 800c436:	f7fd fea6 	bl	800a186 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c43a:	2300      	movs	r3, #0
 800c43c:	702b      	strb	r3, [r5, #0]
 800c43e:	b004      	add	sp, #16
 800c440:	bd70      	pop	{r4, r5, r6, pc}
 800c442:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c446:	4620      	mov	r0, r4
 800c448:	4798      	blx	r3
 800c44a:	e7ae      	b.n	800c3aa <_ZN8touchgfx3HAL4tickEv+0xc2>
 800c44c:	2863      	cmp	r0, #99	; 0x63
 800c44e:	bfcb      	itete	gt
 800c450:	2300      	movgt	r3, #0
 800c452:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800c456:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800c45a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800c45e:	e7d8      	b.n	800c412 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800c460:	200017a4 	.word	0x200017a4
 800c464:	200017a5 	.word	0x200017a5
 800c468:	05f5e100 	.word	0x05f5e100

0800c46c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c46c:	f7fe b932 	b.w	800a6d4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c470 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c470:	6581      	str	r1, [r0, #88]	; 0x58
 800c472:	301c      	adds	r0, #28
 800c474:	f00f b9a4 	b.w	801b7c0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c478 <_ZN8touchgfx3HAL5touchEll>:
 800c478:	b530      	push	{r4, r5, lr}
 800c47a:	b087      	sub	sp, #28
 800c47c:	4604      	mov	r4, r0
 800c47e:	a804      	add	r0, sp, #16
 800c480:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c484:	f001 fdc2 	bl	800e00c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c488:	9b04      	ldr	r3, [sp, #16]
 800c48a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c48e:	a906      	add	r1, sp, #24
 800c490:	9b05      	ldr	r3, [sp, #20]
 800c492:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c496:	a803      	add	r0, sp, #12
 800c498:	f001 fe06 	bl	800e0a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c49c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800c4a0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c4a4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c4a8:	f104 001c 	add.w	r0, r4, #28
 800c4ac:	b189      	cbz	r1, 800c4d2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c4ae:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800c4b2:	9300      	str	r3, [sp, #0]
 800c4b4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800c4b8:	4613      	mov	r3, r2
 800c4ba:	462a      	mov	r2, r5
 800c4bc:	f00f f990 	bl	801b7e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c4c0:	b128      	cbz	r0, 800c4ce <_ZN8touchgfx3HAL5touchEll+0x56>
 800c4c2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c4c6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800c4c8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c4cc:	6623      	str	r3, [r4, #96]	; 0x60
 800c4ce:	b007      	add	sp, #28
 800c4d0:	bd30      	pop	{r4, r5, pc}
 800c4d2:	f00f f9c9 	bl	801b868 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c4d6:	2301      	movs	r3, #1
 800c4d8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c4dc:	e7f1      	b.n	800c4c2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c4de <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c4de:	b570      	push	{r4, r5, r6, lr}
 800c4e0:	2b00      	cmp	r3, #0
 800c4e2:	d050      	beq.n	800c586 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c4e4:	ea81 0002 	eor.w	r0, r1, r2
 800c4e8:	07c6      	lsls	r6, r0, #31
 800c4ea:	d508      	bpl.n	800c4fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c4ec:	3a01      	subs	r2, #1
 800c4ee:	18cc      	adds	r4, r1, r3
 800c4f0:	42a1      	cmp	r1, r4
 800c4f2:	d048      	beq.n	800c586 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c4f4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c4f8:	f801 0b01 	strb.w	r0, [r1], #1
 800c4fc:	e7f8      	b.n	800c4f0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c4fe:	07d5      	lsls	r5, r2, #31
 800c500:	bf42      	ittt	mi
 800c502:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c506:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c50a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c50e:	2b01      	cmp	r3, #1
 800c510:	d915      	bls.n	800c53e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c512:	ea82 0001 	eor.w	r0, r2, r1
 800c516:	0784      	lsls	r4, r0, #30
 800c518:	d02d      	beq.n	800c576 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800c51a:	1e94      	subs	r4, r2, #2
 800c51c:	4608      	mov	r0, r1
 800c51e:	18ce      	adds	r6, r1, r3
 800c520:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800c524:	f820 5b02 	strh.w	r5, [r0], #2
 800c528:	1a35      	subs	r5, r6, r0
 800c52a:	2d01      	cmp	r5, #1
 800c52c:	d8f8      	bhi.n	800c520 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800c52e:	1e98      	subs	r0, r3, #2
 800c530:	f020 0001 	bic.w	r0, r0, #1
 800c534:	3002      	adds	r0, #2
 800c536:	4401      	add	r1, r0
 800c538:	4402      	add	r2, r0
 800c53a:	f003 0301 	and.w	r3, r3, #1
 800c53e:	1f14      	subs	r4, r2, #4
 800c540:	4608      	mov	r0, r1
 800c542:	18ce      	adds	r6, r1, r3
 800c544:	1a35      	subs	r5, r6, r0
 800c546:	2d03      	cmp	r5, #3
 800c548:	d810      	bhi.n	800c56c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800c54a:	089c      	lsrs	r4, r3, #2
 800c54c:	00a0      	lsls	r0, r4, #2
 800c54e:	4401      	add	r1, r0
 800c550:	3801      	subs	r0, #1
 800c552:	4402      	add	r2, r0
 800c554:	f06f 0003 	mvn.w	r0, #3
 800c558:	fb00 3404 	mla	r4, r0, r4, r3
 800c55c:	440c      	add	r4, r1
 800c55e:	42a1      	cmp	r1, r4
 800c560:	d011      	beq.n	800c586 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800c562:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800c566:	f801 3b01 	strb.w	r3, [r1], #1
 800c56a:	e7f8      	b.n	800c55e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800c56c:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800c570:	f840 5b04 	str.w	r5, [r0], #4
 800c574:	e7e6      	b.n	800c544 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800c576:	0790      	lsls	r0, r2, #30
 800c578:	d0e1      	beq.n	800c53e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c57a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c57e:	f821 0b02 	strh.w	r0, [r1], #2
 800c582:	3b02      	subs	r3, #2
 800c584:	e7db      	b.n	800c53e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800c586:	2001      	movs	r0, #1
 800c588:	bd70      	pop	{r4, r5, r6, pc}

0800c58a <_ZN8touchgfx3HAL7noTouchEv>:
 800c58a:	b510      	push	{r4, lr}
 800c58c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800c590:	4604      	mov	r4, r0
 800c592:	b153      	cbz	r3, 800c5aa <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c594:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800c598:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800c59c:	2101      	movs	r1, #1
 800c59e:	301c      	adds	r0, #28
 800c5a0:	f00f f962 	bl	801b868 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c5a4:	2300      	movs	r3, #0
 800c5a6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c5aa:	bd10      	pop	{r4, pc}

0800c5ac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c5ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c5b0:	4605      	mov	r5, r0
 800c5b2:	6980      	ldr	r0, [r0, #24]
 800c5b4:	b085      	sub	sp, #20
 800c5b6:	460f      	mov	r7, r1
 800c5b8:	4690      	mov	r8, r2
 800c5ba:	4699      	mov	r9, r3
 800c5bc:	b930      	cbnz	r0, 800c5cc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800c5be:	4b1f      	ldr	r3, [pc, #124]	; (800c63c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800c5c0:	4a1f      	ldr	r2, [pc, #124]	; (800c640 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800c5c2:	f44f 7198 	mov.w	r1, #304	; 0x130
 800c5c6:	481f      	ldr	r0, [pc, #124]	; (800c644 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 800c5c8:	f00f f9e0 	bl	801b98c <__assert_func>
 800c5cc:	ac04      	add	r4, sp, #16
 800c5ce:	2600      	movs	r6, #0
 800c5d0:	f844 6d04 	str.w	r6, [r4, #-4]!
 800c5d4:	6806      	ldr	r6, [r0, #0]
 800c5d6:	9401      	str	r4, [sp, #4]
 800c5d8:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800c5dc:	9400      	str	r4, [sp, #0]
 800c5de:	6834      	ldr	r4, [r6, #0]
 800c5e0:	47a0      	blx	r4
 800c5e2:	4c19      	ldr	r4, [pc, #100]	; (800c648 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 800c5e4:	4606      	mov	r6, r0
 800c5e6:	f8a4 9000 	strh.w	r9, [r4]
 800c5ea:	f7fc f859 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800c5ee:	6803      	ldr	r3, [r0, #0]
 800c5f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c5f2:	4798      	blx	r3
 800c5f4:	280c      	cmp	r0, #12
 800c5f6:	d80f      	bhi.n	800c618 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800c5f8:	e8df f000 	tbb	[pc, r0]
 800c5fc:	1b1b1207 	.word	0x1b1b1207
 800c600:	1b1b1b1b 	.word	0x1b1b1b1b
 800c604:	1b1b1b1b 	.word	0x1b1b1b1b
 800c608:	1b          	.byte	0x1b
 800c609:	00          	.byte	0x00
 800c60a:	8823      	ldrh	r3, [r4, #0]
 800c60c:	fb08 7203 	mla	r2, r8, r3, r7
 800c610:	9b03      	ldr	r3, [sp, #12]
 800c612:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c616:	63eb      	str	r3, [r5, #60]	; 0x3c
 800c618:	4630      	mov	r0, r6
 800c61a:	b005      	add	sp, #20
 800c61c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c620:	8822      	ldrh	r2, [r4, #0]
 800c622:	9b03      	ldr	r3, [sp, #12]
 800c624:	fb08 7202 	mla	r2, r8, r2, r7
 800c628:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c62c:	1a9a      	subs	r2, r3, r2
 800c62e:	63ea      	str	r2, [r5, #60]	; 0x3c
 800c630:	e7f2      	b.n	800c618 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800c632:	4b06      	ldr	r3, [pc, #24]	; (800c64c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 800c634:	4a02      	ldr	r2, [pc, #8]	; (800c640 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800c636:	f240 114d 	movw	r1, #333	; 0x14d
 800c63a:	e7c4      	b.n	800c5c6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800c63c:	0801f7d9 	.word	0x0801f7d9
 800c640:	0801faea 	.word	0x0801faea
 800c644:	0801f81e 	.word	0x0801f81e
 800c648:	2000179a 	.word	0x2000179a
 800c64c:	0801f844 	.word	0x0801f844

0800c650 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800c650:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c654:	4698      	mov	r8, r3
 800c656:	6803      	ldr	r3, [r0, #0]
 800c658:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800c65a:	4b0f      	ldr	r3, [pc, #60]	; (800c698 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800c65c:	b087      	sub	sp, #28
 800c65e:	f8b3 9000 	ldrh.w	r9, [r3]
 800c662:	460e      	mov	r6, r1
 800c664:	4617      	mov	r7, r2
 800c666:	4604      	mov	r4, r0
 800c668:	f7fc f81a 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800c66c:	6803      	ldr	r3, [r0, #0]
 800c66e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c670:	4798      	blx	r3
 800c672:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800c676:	9302      	str	r3, [sp, #8]
 800c678:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c67c:	9301      	str	r3, [sp, #4]
 800c67e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c682:	9300      	str	r3, [sp, #0]
 800c684:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800c688:	4643      	mov	r3, r8
 800c68a:	463a      	mov	r2, r7
 800c68c:	4631      	mov	r1, r6
 800c68e:	4620      	mov	r0, r4
 800c690:	47a8      	blx	r5
 800c692:	b007      	add	sp, #28
 800c694:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c698:	2000179a 	.word	0x2000179a

0800c69c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c69c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6a0:	4606      	mov	r6, r0
 800c6a2:	b089      	sub	sp, #36	; 0x24
 800c6a4:	4610      	mov	r0, r2
 800c6a6:	460c      	mov	r4, r1
 800c6a8:	4691      	mov	r9, r2
 800c6aa:	4698      	mov	r8, r3
 800c6ac:	f003 fbf6 	bl	800fe9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c6b0:	2800      	cmp	r0, #0
 800c6b2:	f000 8092 	beq.w	800c7da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x13e>
 800c6b6:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800c7f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800c6ba:	f8df b13c 	ldr.w	fp, [pc, #316]	; 800c7f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800c6be:	f8da 0000 	ldr.w	r0, [sl]
 800c6c2:	4f4b      	ldr	r7, [pc, #300]	; (800c7f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800c6c4:	6802      	ldr	r2, [r0, #0]
 800c6c6:	6a12      	ldr	r2, [r2, #32]
 800c6c8:	4790      	blx	r2
 800c6ca:	f8da 0000 	ldr.w	r0, [sl]
 800c6ce:	6802      	ldr	r2, [r0, #0]
 800c6d0:	ad08      	add	r5, sp, #32
 800c6d2:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800c6d4:	4790      	blx	r2
 800c6d6:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 800c6da:	f8bb 3000 	ldrh.w	r3, [fp]
 800c6de:	9300      	str	r3, [sp, #0]
 800c6e0:	4628      	mov	r0, r5
 800c6e2:	883b      	ldrh	r3, [r7, #0]
 800c6e4:	9301      	str	r3, [sp, #4]
 800c6e6:	f003 fc99 	bl	801001c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c6ea:	f8ab 0000 	strh.w	r0, [fp]
 800c6ee:	4628      	mov	r0, r5
 800c6f0:	f003 fcce 	bl	8010090 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c6f4:	f8da b000 	ldr.w	fp, [sl]
 800c6f8:	8038      	strh	r0, [r7, #0]
 800c6fa:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800c6fe:	9302      	str	r3, [sp, #8]
 800c700:	4648      	mov	r0, r9
 800c702:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800c706:	f003 fbc9 	bl	800fe9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c70a:	f8da 2000 	ldr.w	r2, [sl]
 800c70e:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800c712:	63d0      	str	r0, [r2, #60]	; 0x3c
 800c714:	6822      	ldr	r2, [r4, #0]
 800c716:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800c71a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800c71c:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800c720:	2200      	movs	r2, #0
 800c722:	4611      	mov	r1, r2
 800c724:	4620      	mov	r0, r4
 800c726:	4798      	blx	r3
 800c728:	2201      	movs	r2, #1
 800c72a:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800c72e:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800c732:	f9b8 1004 	ldrsh.w	r1, [r8, #4]
 800c736:	1d22      	adds	r2, r4, #4
 800c738:	2900      	cmp	r1, #0
 800c73a:	d051      	beq.n	800c7e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800c73c:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800c740:	2900      	cmp	r1, #0
 800c742:	d04d      	beq.n	800c7e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800c744:	6810      	ldr	r0, [r2, #0]
 800c746:	6851      	ldr	r1, [r2, #4]
 800c748:	f10d 0c18 	add.w	ip, sp, #24
 800c74c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800c750:	4641      	mov	r1, r8
 800c752:	a806      	add	r0, sp, #24
 800c754:	f7ff fc76 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800c758:	4628      	mov	r0, r5
 800c75a:	f003 fdeb 	bl	8010334 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c75e:	4680      	mov	r8, r0
 800c760:	f7fb ff9e 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800c764:	6802      	ldr	r2, [r0, #0]
 800c766:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800c768:	4790      	blx	r2
 800c76a:	4580      	cmp	r8, r0
 800c76c:	d03d      	beq.n	800c7ea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x14e>
 800c76e:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800c770:	b150      	cbz	r0, 800c788 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800c772:	4628      	mov	r0, r5
 800c774:	f003 fdde 	bl	8010334 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c778:	4605      	mov	r5, r0
 800c77a:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800c77c:	6803      	ldr	r3, [r0, #0]
 800c77e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c780:	4798      	blx	r3
 800c782:	1a2b      	subs	r3, r5, r0
 800c784:	4258      	negs	r0, r3
 800c786:	4158      	adcs	r0, r3
 800c788:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800c78c:	6822      	ldr	r2, [r4, #0]
 800c78e:	6963      	ldr	r3, [r4, #20]
 800c790:	9303      	str	r3, [sp, #12]
 800c792:	2500      	movs	r5, #0
 800c794:	6165      	str	r5, [r4, #20]
 800c796:	4620      	mov	r0, r4
 800c798:	6892      	ldr	r2, [r2, #8]
 800c79a:	a906      	add	r1, sp, #24
 800c79c:	4790      	blx	r2
 800c79e:	9b03      	ldr	r3, [sp, #12]
 800c7a0:	6163      	str	r3, [r4, #20]
 800c7a2:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 800c7a6:	6823      	ldr	r3, [r4, #0]
 800c7a8:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800c7ac:	4620      	mov	r0, r4
 800c7ae:	4c11      	ldr	r4, [pc, #68]	; (800c7f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800c7b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c7b2:	4652      	mov	r2, sl
 800c7b4:	4649      	mov	r1, r9
 800c7b6:	4798      	blx	r3
 800c7b8:	6820      	ldr	r0, [r4, #0]
 800c7ba:	9b02      	ldr	r3, [sp, #8]
 800c7bc:	9a00      	ldr	r2, [sp, #0]
 800c7be:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800c7c2:	4b0d      	ldr	r3, [pc, #52]	; (800c7f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800c7c4:	801a      	strh	r2, [r3, #0]
 800c7c6:	4b0a      	ldr	r3, [pc, #40]	; (800c7f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800c7c8:	9a01      	ldr	r2, [sp, #4]
 800c7ca:	801a      	strh	r2, [r3, #0]
 800c7cc:	6803      	ldr	r3, [r0, #0]
 800c7ce:	6a1b      	ldr	r3, [r3, #32]
 800c7d0:	4798      	blx	r3
 800c7d2:	6820      	ldr	r0, [r4, #0]
 800c7d4:	6803      	ldr	r3, [r0, #0]
 800c7d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c7d8:	4798      	blx	r3
 800c7da:	b009      	add	sp, #36	; 0x24
 800c7dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c7e0:	6810      	ldr	r0, [r2, #0]
 800c7e2:	6851      	ldr	r1, [r2, #4]
 800c7e4:	ab06      	add	r3, sp, #24
 800c7e6:	c303      	stmia	r3!, {r0, r1}
 800c7e8:	e7b6      	b.n	800c758 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbc>
 800c7ea:	2000      	movs	r0, #0
 800c7ec:	e7cc      	b.n	800c788 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800c7ee:	bf00      	nop
 800c7f0:	2000179c 	.word	0x2000179c
 800c7f4:	200017a0 	.word	0x200017a0
 800c7f8:	2000179a 	.word	0x2000179a

0800c7fc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800c7fc:	b510      	push	{r4, lr}
 800c7fe:	4b07      	ldr	r3, [pc, #28]	; (800c81c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800c800:	781b      	ldrb	r3, [r3, #0]
 800c802:	4604      	mov	r4, r0
 800c804:	b13b      	cbz	r3, 800c816 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c806:	6803      	ldr	r3, [r0, #0]
 800c808:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c80a:	4798      	blx	r3
 800c80c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c80e:	4283      	cmp	r3, r0
 800c810:	d101      	bne.n	800c816 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c812:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800c814:	bd10      	pop	{r4, pc}
 800c816:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800c818:	e7fc      	b.n	800c814 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800c81a:	bf00      	nop
 800c81c:	2000179e 	.word	0x2000179e

0800c820 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800c820:	b510      	push	{r4, lr}
 800c822:	4b0b      	ldr	r3, [pc, #44]	; (800c850 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800c824:	781b      	ldrb	r3, [r3, #0]
 800c826:	4604      	mov	r4, r0
 800c828:	b95b      	cbnz	r3, 800c842 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c82a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800c82e:	2b02      	cmp	r3, #2
 800c830:	d007      	beq.n	800c842 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c832:	6840      	ldr	r0, [r0, #4]
 800c834:	f000 fbc8 	bl	800cfc8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800c838:	b118      	cbz	r0, 800c842 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800c83a:	6862      	ldr	r2, [r4, #4]
 800c83c:	7a53      	ldrb	r3, [r2, #9]
 800c83e:	2b00      	cmp	r3, #0
 800c840:	d0fc      	beq.n	800c83c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800c842:	f7fd ff31 	bl	800a6a8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c846:	4620      	mov	r0, r4
 800c848:	f7ff ffd8 	bl	800c7fc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c84c:	bd10      	pop	{r4, pc}
 800c84e:	bf00      	nop
 800c850:	2000179e 	.word	0x2000179e

0800c854 <_ZN8touchgfx3HAL10initializeEv>:
 800c854:	b510      	push	{r4, lr}
 800c856:	4604      	mov	r4, r0
 800c858:	f7fd ff14 	bl	800a684 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c85c:	6860      	ldr	r0, [r4, #4]
 800c85e:	6803      	ldr	r3, [r0, #0]
 800c860:	68db      	ldr	r3, [r3, #12]
 800c862:	4798      	blx	r3
 800c864:	68e0      	ldr	r0, [r4, #12]
 800c866:	6803      	ldr	r3, [r0, #0]
 800c868:	689b      	ldr	r3, [r3, #8]
 800c86a:	4798      	blx	r3
 800c86c:	6823      	ldr	r3, [r4, #0]
 800c86e:	4620      	mov	r0, r4
 800c870:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800c872:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c876:	4718      	bx	r3

0800c878 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800c878:	b508      	push	{r3, lr}
 800c87a:	290c      	cmp	r1, #12
 800c87c:	d817      	bhi.n	800c8ae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800c87e:	e8df f001 	tbb	[pc, r1]
 800c882:	090b      	.short	0x090b
 800c884:	0d0d0d07 	.word	0x0d0d0d07
 800c888:	1414140d 	.word	0x1414140d
 800c88c:	1414      	.short	0x1414
 800c88e:	0d          	.byte	0x0d
 800c88f:	00          	.byte	0x00
 800c890:	2020      	movs	r0, #32
 800c892:	bd08      	pop	{r3, pc}
 800c894:	2018      	movs	r0, #24
 800c896:	e7fc      	b.n	800c892 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c898:	2010      	movs	r0, #16
 800c89a:	e7fa      	b.n	800c892 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c89c:	4b05      	ldr	r3, [pc, #20]	; (800c8b4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800c89e:	4a06      	ldr	r2, [pc, #24]	; (800c8b8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800c8a0:	4806      	ldr	r0, [pc, #24]	; (800c8bc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800c8a2:	f44f 710c 	mov.w	r1, #560	; 0x230
 800c8a6:	f00f f871 	bl	801b98c <__assert_func>
 800c8aa:	2008      	movs	r0, #8
 800c8ac:	e7f1      	b.n	800c892 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c8ae:	2000      	movs	r0, #0
 800c8b0:	e7ef      	b.n	800c892 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c8b2:	bf00      	nop
 800c8b4:	0801f917 	.word	0x0801f917
 800c8b8:	0801fcac 	.word	0x0801fcac
 800c8bc:	0801f81e 	.word	0x0801f81e

0800c8c0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800c8c0:	b570      	push	{r4, r5, r6, lr}
 800c8c2:	460d      	mov	r5, r1
 800c8c4:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800c8c8:	4616      	mov	r6, r2
 800c8ca:	461c      	mov	r4, r3
 800c8cc:	f7ff ffd4 	bl	800c878 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800c8d0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800c8d4:	10c0      	asrs	r0, r0, #3
 800c8d6:	fb06 5101 	mla	r1, r6, r1, r5
 800c8da:	fb00 4001 	mla	r0, r0, r1, r4
 800c8de:	bd70      	pop	{r4, r5, r6, pc}

0800c8e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800c8e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c8e4:	b08a      	sub	sp, #40	; 0x28
 800c8e6:	f04f 0c00 	mov.w	ip, #0
 800c8ea:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800c8ee:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800c8f2:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800c8f6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800c8fa:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800c8fe:	f8cd c020 	str.w	ip, [sp, #32]
 800c902:	f1b8 0f02 	cmp.w	r8, #2
 800c906:	4604      	mov	r4, r0
 800c908:	469a      	mov	sl, r3
 800c90a:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800c90e:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c912:	d030      	beq.n	800c976 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800c914:	2bff      	cmp	r3, #255	; 0xff
 800c916:	d12c      	bne.n	800c972 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800c918:	4560      	cmp	r0, ip
 800c91a:	bf14      	ite	ne
 800c91c:	2004      	movne	r0, #4
 800c91e:	2001      	moveq	r0, #1
 800c920:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c924:	9204      	str	r2, [sp, #16]
 800c926:	4620      	mov	r0, r4
 800c928:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800c92c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c930:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c934:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c938:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c93c:	f7ff ff5e 	bl	800c7fc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c940:	e9cd 9700 	strd	r9, r7, [sp]
 800c944:	4603      	mov	r3, r0
 800c946:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800c94a:	4651      	mov	r1, sl
 800c94c:	4620      	mov	r0, r4
 800c94e:	f7ff ffb7 	bl	800c8c0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c952:	f8ad 901e 	strh.w	r9, [sp, #30]
 800c956:	9005      	str	r0, [sp, #20]
 800c958:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800c95c:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800c960:	b106      	cbz	r6, 800c964 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800c962:	b98d      	cbnz	r5, 800c988 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800c964:	4b12      	ldr	r3, [pc, #72]	; (800c9b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800c966:	4a13      	ldr	r2, [pc, #76]	; (800c9b4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800c968:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800c96c:	4812      	ldr	r0, [pc, #72]	; (800c9b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800c96e:	f00f f80d 	bl	801b98c <__assert_func>
 800c972:	2004      	movs	r0, #4
 800c974:	e7d4      	b.n	800c920 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c976:	2bff      	cmp	r3, #255	; 0xff
 800c978:	d104      	bne.n	800c984 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800c97a:	2800      	cmp	r0, #0
 800c97c:	bf14      	ite	ne
 800c97e:	2040      	movne	r0, #64	; 0x40
 800c980:	2020      	moveq	r0, #32
 800c982:	e7cd      	b.n	800c920 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c984:	2040      	movs	r0, #64	; 0x40
 800c986:	e7cb      	b.n	800c920 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800c988:	6823      	ldr	r3, [r4, #0]
 800c98a:	9d02      	ldr	r5, [sp, #8]
 800c98c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c98e:	4620      	mov	r0, r4
 800c990:	4798      	blx	r3
 800c992:	4228      	tst	r0, r5
 800c994:	d104      	bne.n	800c9a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800c996:	4b09      	ldr	r3, [pc, #36]	; (800c9bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800c998:	4a06      	ldr	r2, [pc, #24]	; (800c9b4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800c99a:	f240 11b1 	movw	r1, #433	; 0x1b1
 800c99e:	e7e5      	b.n	800c96c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800c9a0:	6860      	ldr	r0, [r4, #4]
 800c9a2:	6803      	ldr	r3, [r0, #0]
 800c9a4:	a902      	add	r1, sp, #8
 800c9a6:	685b      	ldr	r3, [r3, #4]
 800c9a8:	4798      	blx	r3
 800c9aa:	b00a      	add	sp, #40	; 0x28
 800c9ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c9b0:	0801f89a 	.word	0x0801f89a
 800c9b4:	0801fb4e 	.word	0x0801fb4e
 800c9b8:	0801f81e 	.word	0x0801f81e
 800c9bc:	0801f8d2 	.word	0x0801f8d2

0800c9c0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800c9c0:	b510      	push	{r4, lr}
 800c9c2:	b08a      	sub	sp, #40	; 0x28
 800c9c4:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800c9c8:	9408      	str	r4, [sp, #32]
 800c9ca:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800c9ce:	9407      	str	r4, [sp, #28]
 800c9d0:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800c9d4:	9406      	str	r4, [sp, #24]
 800c9d6:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800c9da:	9405      	str	r4, [sp, #20]
 800c9dc:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800c9e0:	9404      	str	r4, [sp, #16]
 800c9e2:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800c9e6:	9403      	str	r4, [sp, #12]
 800c9e8:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800c9ec:	9402      	str	r4, [sp, #8]
 800c9ee:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800c9f2:	e9cd 3400 	strd	r3, r4, [sp]
 800c9f6:	4613      	mov	r3, r2
 800c9f8:	2200      	movs	r2, #0
 800c9fa:	f7ff ff71 	bl	800c8e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800c9fe:	b00a      	add	sp, #40	; 0x28
 800ca00:	bd10      	pop	{r4, pc}
	...

0800ca04 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800ca04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ca06:	b08b      	sub	sp, #44	; 0x2c
 800ca08:	4616      	mov	r6, r2
 800ca0a:	460d      	mov	r5, r1
 800ca0c:	461f      	mov	r7, r3
 800ca0e:	4604      	mov	r4, r0
 800ca10:	f7fb fe46 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800ca14:	6803      	ldr	r3, [r0, #0]
 800ca16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca18:	4798      	blx	r3
 800ca1a:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800ca1e:	4b0d      	ldr	r3, [pc, #52]	; (800ca54 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800ca20:	881b      	ldrh	r3, [r3, #0]
 800ca22:	9306      	str	r3, [sp, #24]
 800ca24:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800ca28:	9305      	str	r3, [sp, #20]
 800ca2a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800ca2e:	9304      	str	r3, [sp, #16]
 800ca30:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ca34:	9303      	str	r3, [sp, #12]
 800ca36:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ca3a:	9302      	str	r3, [sp, #8]
 800ca3c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ca40:	2200      	movs	r2, #0
 800ca42:	e9cd 7300 	strd	r7, r3, [sp]
 800ca46:	4629      	mov	r1, r5
 800ca48:	4633      	mov	r3, r6
 800ca4a:	4620      	mov	r0, r4
 800ca4c:	f7ff ff48 	bl	800c8e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800ca50:	b00b      	add	sp, #44	; 0x2c
 800ca52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca54:	2000179a 	.word	0x2000179a

0800ca58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800ca58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca5c:	461f      	mov	r7, r3
 800ca5e:	4b14      	ldr	r3, [pc, #80]	; (800cab0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800ca60:	b08a      	sub	sp, #40	; 0x28
 800ca62:	4616      	mov	r6, r2
 800ca64:	f8b3 8000 	ldrh.w	r8, [r3]
 800ca68:	460d      	mov	r5, r1
 800ca6a:	4604      	mov	r4, r0
 800ca6c:	f7fb fe18 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800ca70:	6803      	ldr	r3, [r0, #0]
 800ca72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca74:	4798      	blx	r3
 800ca76:	2302      	movs	r3, #2
 800ca78:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800ca7c:	2301      	movs	r3, #1
 800ca7e:	9305      	str	r3, [sp, #20]
 800ca80:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800ca84:	9304      	str	r3, [sp, #16]
 800ca86:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ca8a:	9303      	str	r3, [sp, #12]
 800ca8c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ca90:	9302      	str	r3, [sp, #8]
 800ca92:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ca96:	9008      	str	r0, [sp, #32]
 800ca98:	e9cd 7300 	strd	r7, r3, [sp]
 800ca9c:	2200      	movs	r2, #0
 800ca9e:	4633      	mov	r3, r6
 800caa0:	4629      	mov	r1, r5
 800caa2:	4620      	mov	r0, r4
 800caa4:	f7ff ff1c 	bl	800c8e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800caa8:	b00a      	add	sp, #40	; 0x28
 800caaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800caae:	bf00      	nop
 800cab0:	2000179a 	.word	0x2000179a

0800cab4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800cab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cab8:	b08b      	sub	sp, #44	; 0x2c
 800caba:	469b      	mov	fp, r3
 800cabc:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800cac0:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800cac4:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800cac8:	2fff      	cmp	r7, #255	; 0xff
 800caca:	bf14      	ite	ne
 800cacc:	2308      	movne	r3, #8
 800cace:	2302      	moveq	r3, #2
 800cad0:	2600      	movs	r6, #0
 800cad2:	4604      	mov	r4, r0
 800cad4:	4689      	mov	r9, r1
 800cad6:	4692      	mov	sl, r2
 800cad8:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800cadc:	9608      	str	r6, [sp, #32]
 800cade:	f7ff fe8d 	bl	800c7fc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cae2:	e9cd 8500 	strd	r8, r5, [sp]
 800cae6:	4603      	mov	r3, r0
 800cae8:	465a      	mov	r2, fp
 800caea:	4651      	mov	r1, sl
 800caec:	4620      	mov	r0, r4
 800caee:	f7ff fee7 	bl	800c8c0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800caf2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800caf6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cafa:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800cafe:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cb02:	6823      	ldr	r3, [r4, #0]
 800cb04:	9005      	str	r0, [sp, #20]
 800cb06:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800cb0a:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800cb0e:	f8ad 601c 	strh.w	r6, [sp, #28]
 800cb12:	f8ad 801e 	strh.w	r8, [sp, #30]
 800cb16:	f8cd 9020 	str.w	r9, [sp, #32]
 800cb1a:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800cb1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cb20:	9d02      	ldr	r5, [sp, #8]
 800cb22:	4620      	mov	r0, r4
 800cb24:	4798      	blx	r3
 800cb26:	4228      	tst	r0, r5
 800cb28:	d106      	bne.n	800cb38 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800cb2a:	4b07      	ldr	r3, [pc, #28]	; (800cb48 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800cb2c:	4a07      	ldr	r2, [pc, #28]	; (800cb4c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800cb2e:	4808      	ldr	r0, [pc, #32]	; (800cb50 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800cb30:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
 800cb34:	f00e ff2a 	bl	801b98c <__assert_func>
 800cb38:	6860      	ldr	r0, [r4, #4]
 800cb3a:	6803      	ldr	r3, [r0, #0]
 800cb3c:	a902      	add	r1, sp, #8
 800cb3e:	685b      	ldr	r3, [r3, #4]
 800cb40:	4798      	blx	r3
 800cb42:	b00b      	add	sp, #44	; 0x2c
 800cb44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb48:	0801f8d2 	.word	0x0801f8d2
 800cb4c:	0801fc17 	.word	0x0801fc17
 800cb50:	0801f81e 	.word	0x0801f81e

0800cb54 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800cb54:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cb58:	461f      	mov	r7, r3
 800cb5a:	4b0b      	ldr	r3, [pc, #44]	; (800cb88 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800cb5c:	460d      	mov	r5, r1
 800cb5e:	f8b3 8000 	ldrh.w	r8, [r3]
 800cb62:	4616      	mov	r6, r2
 800cb64:	4604      	mov	r4, r0
 800cb66:	f7fb fd9b 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800cb6a:	6803      	ldr	r3, [r0, #0]
 800cb6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb6e:	4798      	blx	r3
 800cb70:	463b      	mov	r3, r7
 800cb72:	e9cd 8000 	strd	r8, r0, [sp]
 800cb76:	4632      	mov	r2, r6
 800cb78:	4629      	mov	r1, r5
 800cb7a:	4620      	mov	r0, r4
 800cb7c:	f7ff fea0 	bl	800c8c0 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800cb80:	b002      	add	sp, #8
 800cb82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cb86:	bf00      	nop
 800cb88:	2000179a 	.word	0x2000179a

0800cb8c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800cb8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb90:	b088      	sub	sp, #32
 800cb92:	4698      	mov	r8, r3
 800cb94:	2300      	movs	r3, #0
 800cb96:	9306      	str	r3, [sp, #24]
 800cb98:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800cb9c:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800cba0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800cba4:	f8ad 6010 	strh.w	r6, [sp, #16]
 800cba8:	e9cd 3100 	strd	r3, r1, [sp]
 800cbac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800cbb0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800cbb4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800cbb8:	f88d 301c 	strb.w	r3, [sp, #28]
 800cbbc:	4617      	mov	r7, r2
 800cbbe:	4604      	mov	r4, r0
 800cbc0:	f8ad 5012 	strh.w	r5, [sp, #18]
 800cbc4:	f7ff fe1a 	bl	800c7fc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cbc8:	4642      	mov	r2, r8
 800cbca:	4603      	mov	r3, r0
 800cbcc:	4639      	mov	r1, r7
 800cbce:	4620      	mov	r0, r4
 800cbd0:	f7ff ffc0 	bl	800cb54 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cbd4:	4b16      	ldr	r3, [pc, #88]	; (800cc30 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800cbd6:	9003      	str	r0, [sp, #12]
 800cbd8:	881b      	ldrh	r3, [r3, #0]
 800cbda:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cbde:	f7fb fd5f 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800cbe2:	6803      	ldr	r3, [r0, #0]
 800cbe4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbe6:	4798      	blx	r3
 800cbe8:	f88d 001e 	strb.w	r0, [sp, #30]
 800cbec:	f88d 001d 	strb.w	r0, [sp, #29]
 800cbf0:	b106      	cbz	r6, 800cbf4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800cbf2:	b935      	cbnz	r5, 800cc02 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800cbf4:	4b0f      	ldr	r3, [pc, #60]	; (800cc34 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800cbf6:	4a10      	ldr	r2, [pc, #64]	; (800cc38 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800cbf8:	f240 11cd 	movw	r1, #461	; 0x1cd
 800cbfc:	480f      	ldr	r0, [pc, #60]	; (800cc3c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800cbfe:	f00e fec5 	bl	801b98c <__assert_func>
 800cc02:	6823      	ldr	r3, [r4, #0]
 800cc04:	9d00      	ldr	r5, [sp, #0]
 800cc06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cc08:	4620      	mov	r0, r4
 800cc0a:	4798      	blx	r3
 800cc0c:	4228      	tst	r0, r5
 800cc0e:	d104      	bne.n	800cc1a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800cc10:	4b0b      	ldr	r3, [pc, #44]	; (800cc40 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800cc12:	4a09      	ldr	r2, [pc, #36]	; (800cc38 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800cc14:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 800cc18:	e7f0      	b.n	800cbfc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800cc1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800cc1c:	6860      	ldr	r0, [r4, #4]
 800cc1e:	9306      	str	r3, [sp, #24]
 800cc20:	6803      	ldr	r3, [r0, #0]
 800cc22:	4669      	mov	r1, sp
 800cc24:	685b      	ldr	r3, [r3, #4]
 800cc26:	4798      	blx	r3
 800cc28:	b008      	add	sp, #32
 800cc2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc2e:	bf00      	nop
 800cc30:	2000179a 	.word	0x2000179a
 800cc34:	0801f89a 	.word	0x0801f89a
 800cc38:	0801fa00 	.word	0x0801fa00
 800cc3c:	0801f81e 	.word	0x0801f81e
 800cc40:	0801f8d2 	.word	0x0801f8d2

0800cc44 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800cc44:	b570      	push	{r4, r5, r6, lr}
 800cc46:	b08a      	sub	sp, #40	; 0x28
 800cc48:	466b      	mov	r3, sp
 800cc4a:	e883 0006 	stmia.w	r3, {r1, r2}
 800cc4e:	4b20      	ldr	r3, [pc, #128]	; (800ccd0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800cc50:	781b      	ldrb	r3, [r3, #0]
 800cc52:	4604      	mov	r4, r0
 800cc54:	b933      	cbnz	r3, 800cc64 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800cc56:	4b1f      	ldr	r3, [pc, #124]	; (800ccd4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800cc58:	4a1f      	ldr	r2, [pc, #124]	; (800ccd8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800cc5a:	4820      	ldr	r0, [pc, #128]	; (800ccdc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800cc5c:	f240 11f9 	movw	r1, #505	; 0x1f9
 800cc60:	f00e fe94 	bl	801b98c <__assert_func>
 800cc64:	2300      	movs	r3, #0
 800cc66:	9308      	str	r3, [sp, #32]
 800cc68:	2301      	movs	r3, #1
 800cc6a:	9302      	str	r3, [sp, #8]
 800cc6c:	6803      	ldr	r3, [r0, #0]
 800cc6e:	f8bd 5000 	ldrh.w	r5, [sp]
 800cc72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cc74:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800cc78:	4798      	blx	r3
 800cc7a:	4632      	mov	r2, r6
 800cc7c:	4629      	mov	r1, r5
 800cc7e:	4603      	mov	r3, r0
 800cc80:	4620      	mov	r0, r4
 800cc82:	f7ff ff67 	bl	800cb54 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cc86:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cc88:	9305      	str	r3, [sp, #20]
 800cc8a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cc8e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cc92:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cc96:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cc9a:	4b11      	ldr	r3, [pc, #68]	; (800cce0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800cc9c:	9003      	str	r0, [sp, #12]
 800cc9e:	881b      	ldrh	r3, [r3, #0]
 800cca0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cca4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cca8:	f7fb fcfa 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800ccac:	6803      	ldr	r3, [r0, #0]
 800ccae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ccb0:	4798      	blx	r3
 800ccb2:	23ff      	movs	r3, #255	; 0xff
 800ccb4:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800ccb8:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800ccbc:	6860      	ldr	r0, [r4, #4]
 800ccbe:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800ccc2:	6803      	ldr	r3, [r0, #0]
 800ccc4:	a902      	add	r1, sp, #8
 800ccc6:	685b      	ldr	r3, [r3, #4]
 800ccc8:	4798      	blx	r3
 800ccca:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800cccc:	b00a      	add	sp, #40	; 0x28
 800ccce:	bd70      	pop	{r4, r5, r6, pc}
 800ccd0:	2000179f 	.word	0x2000179f
 800ccd4:	0801f76b 	.word	0x0801f76b
 800ccd8:	0801faa4 	.word	0x0801faa4
 800ccdc:	0801f81e 	.word	0x0801f81e
 800cce0:	2000179a 	.word	0x2000179a

0800cce4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800cce4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cce6:	b08b      	sub	sp, #44	; 0x2c
 800cce8:	466d      	mov	r5, sp
 800ccea:	e885 0006 	stmia.w	r5, {r1, r2}
 800ccee:	461d      	mov	r5, r3
 800ccf0:	2300      	movs	r3, #0
 800ccf2:	9308      	str	r3, [sp, #32]
 800ccf4:	2301      	movs	r3, #1
 800ccf6:	9302      	str	r3, [sp, #8]
 800ccf8:	6803      	ldr	r3, [r0, #0]
 800ccfa:	f8bd 6000 	ldrh.w	r6, [sp]
 800ccfe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd00:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800cd04:	4604      	mov	r4, r0
 800cd06:	4798      	blx	r3
 800cd08:	463a      	mov	r2, r7
 800cd0a:	4631      	mov	r1, r6
 800cd0c:	4603      	mov	r3, r0
 800cd0e:	4620      	mov	r0, r4
 800cd10:	f7ff ff20 	bl	800cb54 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cd14:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cd18:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cd1c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cd20:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cd24:	4b0e      	ldr	r3, [pc, #56]	; (800cd60 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800cd26:	9003      	str	r0, [sp, #12]
 800cd28:	881b      	ldrh	r3, [r3, #0]
 800cd2a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cd2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cd30:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cd34:	9505      	str	r5, [sp, #20]
 800cd36:	f7fb fcb3 	bl	80086a0 <_ZN8touchgfx3HAL3lcdEv>
 800cd3a:	6803      	ldr	r3, [r0, #0]
 800cd3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd3e:	4798      	blx	r3
 800cd40:	23ff      	movs	r3, #255	; 0xff
 800cd42:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800cd46:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800cd4a:	6860      	ldr	r0, [r4, #4]
 800cd4c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800cd50:	6803      	ldr	r3, [r0, #0]
 800cd52:	a902      	add	r1, sp, #8
 800cd54:	685b      	ldr	r3, [r3, #4]
 800cd56:	4798      	blx	r3
 800cd58:	4628      	mov	r0, r5
 800cd5a:	b00b      	add	sp, #44	; 0x2c
 800cd5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd5e:	bf00      	nop
 800cd60:	2000179a 	.word	0x2000179a

0800cd64 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800cd64:	b570      	push	{r4, r5, r6, lr}
 800cd66:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800cd6a:	4604      	mov	r4, r0
 800cd6c:	b19b      	cbz	r3, 800cd96 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800cd6e:	2002      	movs	r0, #2
 800cd70:	f7fd fa14 	bl	800a19c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800cd74:	2300      	movs	r3, #0
 800cd76:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800cd7a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800cd7e:	6823      	ldr	r3, [r4, #0]
 800cd80:	4620      	mov	r0, r4
 800cd82:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800cd86:	f7ff fd39 	bl	800c7fc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cd8a:	462b      	mov	r3, r5
 800cd8c:	4601      	mov	r1, r0
 800cd8e:	4620      	mov	r0, r4
 800cd90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd94:	4718      	bx	r3
 800cd96:	bd70      	pop	{r4, r5, r6, pc}

0800cd98 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800cd98:	4770      	bx	lr

0800cd9a <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800cd9a:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800cd9e:	1a13      	subs	r3, r2, r0
 800cda0:	4258      	negs	r0, r3
 800cda2:	4158      	adcs	r0, r3
 800cda4:	4770      	bx	lr

0800cda6 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800cda6:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800cdaa:	1a9b      	subs	r3, r3, r2
 800cdac:	2b00      	cmp	r3, #0
 800cdae:	bfdc      	itt	le
 800cdb0:	6882      	ldrle	r2, [r0, #8]
 800cdb2:	189b      	addle	r3, r3, r2
 800cdb4:	2b01      	cmp	r3, #1
 800cdb6:	bfcc      	ite	gt
 800cdb8:	2000      	movgt	r0, #0
 800cdba:	2001      	movle	r0, #1
 800cdbc:	4770      	bx	lr

0800cdbe <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800cdbe:	6902      	ldr	r2, [r0, #16]
 800cdc0:	6840      	ldr	r0, [r0, #4]
 800cdc2:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800cdc6:	4770      	bx	lr

0800cdc8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800cdc8:	6803      	ldr	r3, [r0, #0]
 800cdca:	691b      	ldr	r3, [r3, #16]
 800cdcc:	4718      	bx	r3

0800cdce <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800cdce:	4770      	bx	lr

0800cdd0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800cdd0:	4770      	bx	lr
	...

0800cdd4 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800cdd4:	b570      	push	{r4, r5, r6, lr}
 800cdd6:	2301      	movs	r3, #1
 800cdd8:	7203      	strb	r3, [r0, #8]
 800cdda:	4604      	mov	r4, r0
 800cddc:	6840      	ldr	r0, [r0, #4]
 800cdde:	6803      	ldr	r3, [r0, #0]
 800cde0:	699b      	ldr	r3, [r3, #24]
 800cde2:	4798      	blx	r3
 800cde4:	6803      	ldr	r3, [r0, #0]
 800cde6:	2b08      	cmp	r3, #8
 800cde8:	4605      	mov	r5, r0
 800cdea:	d01e      	beq.n	800ce2a <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800cdec:	d80b      	bhi.n	800ce06 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cdee:	2b02      	cmp	r3, #2
 800cdf0:	d027      	beq.n	800ce42 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800cdf2:	2b04      	cmp	r3, #4
 800cdf4:	d011      	beq.n	800ce1a <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800cdf6:	2b01      	cmp	r3, #1
 800cdf8:	d028      	beq.n	800ce4c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800cdfa:	4b17      	ldr	r3, [pc, #92]	; (800ce58 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800cdfc:	4a17      	ldr	r2, [pc, #92]	; (800ce5c <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800cdfe:	4818      	ldr	r0, [pc, #96]	; (800ce60 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800ce00:	218b      	movs	r1, #139	; 0x8b
 800ce02:	f00e fdc3 	bl	801b98c <__assert_func>
 800ce06:	2b40      	cmp	r3, #64	; 0x40
 800ce08:	d020      	beq.n	800ce4c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800ce0a:	d801      	bhi.n	800ce10 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800ce0c:	2b20      	cmp	r3, #32
 800ce0e:	e7f3      	b.n	800cdf8 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800ce10:	2b80      	cmp	r3, #128	; 0x80
 800ce12:	d01b      	beq.n	800ce4c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800ce14:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ce18:	e7ee      	b.n	800cdf8 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800ce1a:	6823      	ldr	r3, [r4, #0]
 800ce1c:	7f01      	ldrb	r1, [r0, #28]
 800ce1e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ce20:	4620      	mov	r0, r4
 800ce22:	4798      	blx	r3
 800ce24:	6823      	ldr	r3, [r4, #0]
 800ce26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ce28:	e006      	b.n	800ce38 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800ce2a:	6823      	ldr	r3, [r4, #0]
 800ce2c:	7f01      	ldrb	r1, [r0, #28]
 800ce2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ce30:	4620      	mov	r0, r4
 800ce32:	4798      	blx	r3
 800ce34:	6823      	ldr	r3, [r4, #0]
 800ce36:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ce38:	4629      	mov	r1, r5
 800ce3a:	4620      	mov	r0, r4
 800ce3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ce40:	4718      	bx	r3
 800ce42:	6823      	ldr	r3, [r4, #0]
 800ce44:	4620      	mov	r0, r4
 800ce46:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ce48:	4798      	blx	r3
 800ce4a:	e7f3      	b.n	800ce34 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800ce4c:	6823      	ldr	r3, [r4, #0]
 800ce4e:	4620      	mov	r0, r4
 800ce50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ce52:	4798      	blx	r3
 800ce54:	e7e6      	b.n	800ce24 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800ce56:	bf00      	nop
 800ce58:	0801fcf5 	.word	0x0801fcf5
 800ce5c:	0801fe04 	.word	0x0801fe04
 800ce60:	0801fd1a 	.word	0x0801fd1a

0800ce64 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ce64:	b570      	push	{r4, r5, r6, lr}
 800ce66:	4604      	mov	r4, r0
 800ce68:	460e      	mov	r6, r1
 800ce6a:	6860      	ldr	r0, [r4, #4]
 800ce6c:	6803      	ldr	r3, [r0, #0]
 800ce6e:	685b      	ldr	r3, [r3, #4]
 800ce70:	4798      	blx	r3
 800ce72:	2800      	cmp	r0, #0
 800ce74:	d1f9      	bne.n	800ce6a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ce76:	4d0b      	ldr	r5, [pc, #44]	; (800cea4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800ce78:	6828      	ldr	r0, [r5, #0]
 800ce7a:	6803      	ldr	r3, [r0, #0]
 800ce7c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ce7e:	4798      	blx	r3
 800ce80:	f7fd fc34 	bl	800a6ec <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ce84:	6860      	ldr	r0, [r4, #4]
 800ce86:	6803      	ldr	r3, [r0, #0]
 800ce88:	4631      	mov	r1, r6
 800ce8a:	689b      	ldr	r3, [r3, #8]
 800ce8c:	4798      	blx	r3
 800ce8e:	6823      	ldr	r3, [r4, #0]
 800ce90:	4620      	mov	r0, r4
 800ce92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce94:	4798      	blx	r3
 800ce96:	6828      	ldr	r0, [r5, #0]
 800ce98:	6803      	ldr	r3, [r0, #0]
 800ce9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ce9e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800cea0:	4718      	bx	r3
 800cea2:	bf00      	nop
 800cea4:	200017a0 	.word	0x200017a0

0800cea8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800cea8:	b508      	push	{r3, lr}
 800ceaa:	f7fd fbfd 	bl	800a6a8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ceae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ceb2:	f7fd bc0f 	b.w	800a6d4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ceb6 <_ZN8touchgfx13DMA_Interface5startEv>:
 800ceb6:	b510      	push	{r4, lr}
 800ceb8:	4604      	mov	r4, r0
 800ceba:	6840      	ldr	r0, [r0, #4]
 800cebc:	6803      	ldr	r3, [r0, #0]
 800cebe:	681b      	ldr	r3, [r3, #0]
 800cec0:	4798      	blx	r3
 800cec2:	b948      	cbnz	r0, 800ced8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cec4:	7a63      	ldrb	r3, [r4, #9]
 800cec6:	b13b      	cbz	r3, 800ced8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cec8:	7a23      	ldrb	r3, [r4, #8]
 800ceca:	b92b      	cbnz	r3, 800ced8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cecc:	6823      	ldr	r3, [r4, #0]
 800cece:	4620      	mov	r0, r4
 800ced0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ced2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ced6:	4718      	bx	r3
 800ced8:	bd10      	pop	{r4, pc}
	...

0800cedc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800cedc:	b510      	push	{r4, lr}
 800cede:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800cee2:	1b12      	subs	r2, r2, r4
 800cee4:	2a00      	cmp	r2, #0
 800cee6:	bfdc      	itt	le
 800cee8:	6883      	ldrle	r3, [r0, #8]
 800ceea:	18d2      	addle	r2, r2, r3
 800ceec:	2a01      	cmp	r2, #1
 800ceee:	dd18      	ble.n	800cf22 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800cef0:	6843      	ldr	r3, [r0, #4]
 800cef2:	f101 021c 	add.w	r2, r1, #28
 800cef6:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800cefa:	f851 4b04 	ldr.w	r4, [r1], #4
 800cefe:	f843 4b04 	str.w	r4, [r3], #4
 800cf02:	4291      	cmp	r1, r2
 800cf04:	d1f9      	bne.n	800cefa <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800cf06:	880a      	ldrh	r2, [r1, #0]
 800cf08:	801a      	strh	r2, [r3, #0]
 800cf0a:	788a      	ldrb	r2, [r1, #2]
 800cf0c:	709a      	strb	r2, [r3, #2]
 800cf0e:	68c3      	ldr	r3, [r0, #12]
 800cf10:	6882      	ldr	r2, [r0, #8]
 800cf12:	f3bf 8f5b 	dmb	ish
 800cf16:	3301      	adds	r3, #1
 800cf18:	429a      	cmp	r2, r3
 800cf1a:	bfd8      	it	le
 800cf1c:	1a9b      	suble	r3, r3, r2
 800cf1e:	60c3      	str	r3, [r0, #12]
 800cf20:	bd10      	pop	{r4, pc}
 800cf22:	4b03      	ldr	r3, [pc, #12]	; (800cf30 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800cf24:	4a03      	ldr	r2, [pc, #12]	; (800cf34 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800cf26:	4804      	ldr	r0, [pc, #16]	; (800cf38 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800cf28:	2139      	movs	r1, #57	; 0x39
 800cf2a:	f00e fd2f 	bl	801b98c <__assert_func>
 800cf2e:	bf00      	nop
 800cf30:	0801fd40 	.word	0x0801fd40
 800cf34:	0801fe34 	.word	0x0801fe34
 800cf38:	0801fd1a 	.word	0x0801fd1a

0800cf3c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800cf3c:	b510      	push	{r4, lr}
 800cf3e:	6803      	ldr	r3, [r0, #0]
 800cf40:	681b      	ldr	r3, [r3, #0]
 800cf42:	4604      	mov	r4, r0
 800cf44:	4798      	blx	r3
 800cf46:	b128      	cbz	r0, 800cf54 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800cf48:	4b07      	ldr	r3, [pc, #28]	; (800cf68 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800cf4a:	4a08      	ldr	r2, [pc, #32]	; (800cf6c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800cf4c:	4808      	ldr	r0, [pc, #32]	; (800cf70 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800cf4e:	213f      	movs	r1, #63	; 0x3f
 800cf50:	f00e fd1c 	bl	801b98c <__assert_func>
 800cf54:	6923      	ldr	r3, [r4, #16]
 800cf56:	68a2      	ldr	r2, [r4, #8]
 800cf58:	f3bf 8f5b 	dmb	ish
 800cf5c:	3301      	adds	r3, #1
 800cf5e:	429a      	cmp	r2, r3
 800cf60:	bfd8      	it	le
 800cf62:	1a9b      	suble	r3, r3, r2
 800cf64:	6123      	str	r3, [r4, #16]
 800cf66:	bd10      	pop	{r4, pc}
 800cf68:	0801fd63 	.word	0x0801fd63
 800cf6c:	0801fe82 	.word	0x0801fe82
 800cf70:	0801fd1a 	.word	0x0801fd1a

0800cf74 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800cf74:	b570      	push	{r4, r5, r6, lr}
 800cf76:	4604      	mov	r4, r0
 800cf78:	6840      	ldr	r0, [r0, #4]
 800cf7a:	6803      	ldr	r3, [r0, #0]
 800cf7c:	681b      	ldr	r3, [r3, #0]
 800cf7e:	4798      	blx	r3
 800cf80:	4605      	mov	r5, r0
 800cf82:	b930      	cbnz	r0, 800cf92 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cf84:	7a23      	ldrb	r3, [r4, #8]
 800cf86:	b123      	cbz	r3, 800cf92 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cf88:	6860      	ldr	r0, [r4, #4]
 800cf8a:	6803      	ldr	r3, [r0, #0]
 800cf8c:	695b      	ldr	r3, [r3, #20]
 800cf8e:	4798      	blx	r3
 800cf90:	7225      	strb	r5, [r4, #8]
 800cf92:	6860      	ldr	r0, [r4, #4]
 800cf94:	6803      	ldr	r3, [r0, #0]
 800cf96:	681b      	ldr	r3, [r3, #0]
 800cf98:	4798      	blx	r3
 800cf9a:	b928      	cbnz	r0, 800cfa8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800cf9c:	6823      	ldr	r3, [r4, #0]
 800cf9e:	4620      	mov	r0, r4
 800cfa0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cfa2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cfa6:	4718      	bx	r3
 800cfa8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cfac:	f7fd bbaa 	b.w	800a704 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800cfb0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800cfb0:	b510      	push	{r4, lr}
 800cfb2:	4c04      	ldr	r4, [pc, #16]	; (800cfc4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800cfb4:	6082      	str	r2, [r0, #8]
 800cfb6:	2200      	movs	r2, #0
 800cfb8:	e9c0 4100 	strd	r4, r1, [r0]
 800cfbc:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800cfc0:	bd10      	pop	{r4, pc}
 800cfc2:	bf00      	nop
 800cfc4:	0801fde8 	.word	0x0801fde8

0800cfc8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800cfc8:	6840      	ldr	r0, [r0, #4]
 800cfca:	6803      	ldr	r3, [r0, #0]
 800cfcc:	681b      	ldr	r3, [r3, #0]
 800cfce:	4718      	bx	r3

0800cfd0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800cfd0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800cfd4:	4770      	bx	lr

0800cfd6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800cfd6:	b570      	push	{r4, r5, r6, lr}
 800cfd8:	790b      	ldrb	r3, [r1, #4]
 800cfda:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800cfde:	2b00      	cmp	r3, #0
 800cfe0:	bf0c      	ite	eq
 800cfe2:	2301      	moveq	r3, #1
 800cfe4:	2300      	movne	r3, #0
 800cfe6:	4604      	mov	r4, r0
 800cfe8:	460e      	mov	r6, r1
 800cfea:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800cfee:	d110      	bne.n	800d012 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800cff0:	b185      	cbz	r5, 800d014 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 800cff2:	7933      	ldrb	r3, [r6, #4]
 800cff4:	2b01      	cmp	r3, #1
 800cff6:	d113      	bne.n	800d020 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800cff8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800cffa:	b188      	cbz	r0, 800d020 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800cffc:	6803      	ldr	r3, [r0, #0]
 800cffe:	68db      	ldr	r3, [r3, #12]
 800d000:	4798      	blx	r3
 800d002:	b168      	cbz	r0, 800d020 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800d004:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d006:	6803      	ldr	r3, [r0, #0]
 800d008:	4621      	mov	r1, r4
 800d00a:	689b      	ldr	r3, [r3, #8]
 800d00c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d010:	4718      	bx	r3
 800d012:	b12d      	cbz	r5, 800d020 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800d014:	6823      	ldr	r3, [r4, #0]
 800d016:	4620      	mov	r0, r4
 800d018:	695b      	ldr	r3, [r3, #20]
 800d01a:	4798      	blx	r3
 800d01c:	2d00      	cmp	r5, #0
 800d01e:	d1e8      	bne.n	800cff2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800d020:	bd70      	pop	{r4, r5, r6, pc}

0800d022 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800d022:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d026:	b133      	cbz	r3, 800d036 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800d028:	790b      	ldrb	r3, [r1, #4]
 800d02a:	2b01      	cmp	r3, #1
 800d02c:	bf01      	itttt	eq
 800d02e:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800d030:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800d032:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800d034:	8603      	strheq	r3, [r0, #48]	; 0x30
 800d036:	f7ff bfce 	b.w	800cfd6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>
	...

0800d03c <_ZN8touchgfx12ToggleButtonC1Ev>:
 800d03c:	2200      	movs	r2, #0
 800d03e:	2101      	movs	r1, #1
 800d040:	8082      	strh	r2, [r0, #4]
 800d042:	80c2      	strh	r2, [r0, #6]
 800d044:	8102      	strh	r2, [r0, #8]
 800d046:	8142      	strh	r2, [r0, #10]
 800d048:	8182      	strh	r2, [r0, #12]
 800d04a:	81c2      	strh	r2, [r0, #14]
 800d04c:	8202      	strh	r2, [r0, #16]
 800d04e:	8242      	strh	r2, [r0, #18]
 800d050:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d054:	61c2      	str	r2, [r0, #28]
 800d056:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d05a:	6282      	str	r2, [r0, #40]	; 0x28
 800d05c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800d060:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800d064:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d068:	4903      	ldr	r1, [pc, #12]	; (800d078 <_ZN8touchgfx12ToggleButtonC1Ev+0x3c>)
 800d06a:	85c2      	strh	r2, [r0, #46]	; 0x2e
 800d06c:	8602      	strh	r2, [r0, #48]	; 0x30
 800d06e:	f880 2032 	strb.w	r2, [r0, #50]	; 0x32
 800d072:	6001      	str	r1, [r0, #0]
 800d074:	8682      	strh	r2, [r0, #52]	; 0x34
 800d076:	4770      	bx	lr
 800d078:	0801ff28 	.word	0x0801ff28

0800d07c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800d07c:	2200      	movs	r2, #0
 800d07e:	8002      	strh	r2, [r0, #0]
 800d080:	8042      	strh	r2, [r0, #2]
 800d082:	8082      	strh	r2, [r0, #4]
 800d084:	80c2      	strh	r2, [r0, #6]
 800d086:	4770      	bx	lr

0800d088 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800d088:	b570      	push	{r4, r5, r6, lr}
 800d08a:	6803      	ldr	r3, [r0, #0]
 800d08c:	4604      	mov	r4, r0
 800d08e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d090:	4615      	mov	r5, r2
 800d092:	4798      	blx	r3
 800d094:	6823      	ldr	r3, [r4, #0]
 800d096:	4629      	mov	r1, r5
 800d098:	4620      	mov	r0, r4
 800d09a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800d09c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0a0:	4718      	bx	r3
	...

0800d0a4 <_ZNK8touchgfx9TypedText7getTextEv>:
 800d0a4:	b510      	push	{r4, lr}
 800d0a6:	4604      	mov	r4, r0
 800d0a8:	f7fb f820 	bl	80080ec <_ZNK8touchgfx9TypedText11assertValidEv>
 800d0ac:	4b03      	ldr	r3, [pc, #12]	; (800d0bc <_ZNK8touchgfx9TypedText7getTextEv+0x18>)
 800d0ae:	8821      	ldrh	r1, [r4, #0]
 800d0b0:	6818      	ldr	r0, [r3, #0]
 800d0b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d0b6:	f7fc be19 	b.w	8009cec <_ZNK8touchgfx5Texts7getTextEt>
 800d0ba:	bf00      	nop
 800d0bc:	2000181c 	.word	0x2000181c

0800d0c0 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800d0c0:	b570      	push	{r4, r5, r6, lr}
 800d0c2:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800d0c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d0c8:	429a      	cmp	r2, r3
 800d0ca:	4604      	mov	r4, r0
 800d0cc:	d00c      	beq.n	800d0e8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x28>
 800d0ce:	f850 3b26 	ldr.w	r3, [r0], #38
 800d0d2:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800d0d4:	f7ff ffe6 	bl	800d0a4 <_ZNK8touchgfx9TypedText7getTextEv>
 800d0d8:	2300      	movs	r3, #0
 800d0da:	4601      	mov	r1, r0
 800d0dc:	46ac      	mov	ip, r5
 800d0de:	4620      	mov	r0, r4
 800d0e0:	461a      	mov	r2, r3
 800d0e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0e6:	4760      	bx	ip
 800d0e8:	2000      	movs	r0, #0
 800d0ea:	bd70      	pop	{r4, r5, r6, pc}

0800d0ec <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800d0ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d0ee:	6803      	ldr	r3, [r0, #0]
 800d0f0:	4604      	mov	r4, r0
 800d0f2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800d0f4:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 800d0f6:	a802      	add	r0, sp, #8
 800d0f8:	460d      	mov	r5, r1
 800d0fa:	f820 3d04 	strh.w	r3, [r0, #-4]!
 800d0fe:	f7fa ffc1 	bl	8008084 <_ZNK8touchgfx9TypedText7getFontEv>
 800d102:	6803      	ldr	r3, [r0, #0]
 800d104:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d106:	4798      	blx	r3
 800d108:	1a29      	subs	r1, r5, r0
 800d10a:	b209      	sxth	r1, r1
 800d10c:	4620      	mov	r0, r4
 800d10e:	47b0      	blx	r6
 800d110:	b002      	add	sp, #8
 800d112:	bd70      	pop	{r4, r5, r6, pc}

0800d114 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d114:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d116:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800d118:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d11c:	429a      	cmp	r2, r3
 800d11e:	d016      	beq.n	800d14e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x3a>
 800d120:	f100 0426 	add.w	r4, r0, #38	; 0x26
 800d124:	4620      	mov	r0, r4
 800d126:	f7fa ffad 	bl	8008084 <_ZNK8touchgfx9TypedText7getFontEv>
 800d12a:	6803      	ldr	r3, [r0, #0]
 800d12c:	4605      	mov	r5, r0
 800d12e:	4620      	mov	r0, r4
 800d130:	69de      	ldr	r6, [r3, #28]
 800d132:	f7fa ffc3 	bl	80080bc <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800d136:	4607      	mov	r7, r0
 800d138:	4620      	mov	r0, r4
 800d13a:	f7ff ffb3 	bl	800d0a4 <_ZNK8touchgfx9TypedText7getTextEv>
 800d13e:	2300      	movs	r3, #0
 800d140:	4602      	mov	r2, r0
 800d142:	9300      	str	r3, [sp, #0]
 800d144:	4639      	mov	r1, r7
 800d146:	4628      	mov	r0, r5
 800d148:	47b0      	blx	r6
 800d14a:	b003      	add	sp, #12
 800d14c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d14e:	2000      	movs	r0, #0
 800d150:	e7fb      	b.n	800d14a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x36>

0800d152 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d152:	b40e      	push	{r1, r2, r3}
 800d154:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d158:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800d15a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d15e:	429a      	cmp	r2, r3
 800d160:	b09b      	sub	sp, #108	; 0x6c
 800d162:	4604      	mov	r4, r0
 800d164:	d03f      	beq.n	800d1e6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x94>
 800d166:	f100 0726 	add.w	r7, r0, #38	; 0x26
 800d16a:	ab22      	add	r3, sp, #136	; 0x88
 800d16c:	4638      	mov	r0, r7
 800d16e:	9303      	str	r3, [sp, #12]
 800d170:	f7fa ff88 	bl	8008084 <_ZNK8touchgfx9TypedText7getFontEv>
 800d174:	6803      	ldr	r3, [r0, #0]
 800d176:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d178:	4680      	mov	r8, r0
 800d17a:	4798      	blx	r3
 800d17c:	b205      	sxth	r5, r0
 800d17e:	4606      	mov	r6, r0
 800d180:	a804      	add	r0, sp, #16
 800d182:	f002 fc95 	bl	800fab0 <_ZN8touchgfx12TextProviderC1Ev>
 800d186:	f8d8 3000 	ldr.w	r3, [r8]
 800d18a:	4640      	mov	r0, r8
 800d18c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d18e:	4798      	blx	r3
 800d190:	9a03      	ldr	r2, [sp, #12]
 800d192:	9921      	ldr	r1, [sp, #132]	; 0x84
 800d194:	4603      	mov	r3, r0
 800d196:	a804      	add	r0, sp, #16
 800d198:	f002 fca7 	bl	800faea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d19c:	4638      	mov	r0, r7
 800d19e:	f7fa ff8d 	bl	80080bc <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800d1a2:	4680      	mov	r8, r0
 800d1a4:	4638      	mov	r0, r7
 800d1a6:	f7fa ff6d 	bl	8008084 <_ZNK8touchgfx9TypedText7getFontEv>
 800d1aa:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d1ae:	f894 1031 	ldrb.w	r1, [r4, #49]	; 0x31
 800d1b2:	9300      	str	r3, [sp, #0]
 800d1b4:	4642      	mov	r2, r8
 800d1b6:	4603      	mov	r3, r0
 800d1b8:	a804      	add	r0, sp, #16
 800d1ba:	f000 fd4a 	bl	800dc52 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d1be:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800d1c2:	18a9      	adds	r1, r5, r2
 800d1c4:	2900      	cmp	r1, #0
 800d1c6:	b203      	sxth	r3, r0
 800d1c8:	dd0b      	ble.n	800d1e2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x90>
 800d1ca:	3b01      	subs	r3, #1
 800d1cc:	fb13 f302 	smulbb	r3, r3, r2
 800d1d0:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d1d4:	b21d      	sxth	r5, r3
 800d1d6:	4628      	mov	r0, r5
 800d1d8:	b01b      	add	sp, #108	; 0x6c
 800d1da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d1de:	b003      	add	sp, #12
 800d1e0:	4770      	bx	lr
 800d1e2:	2b00      	cmp	r3, #0
 800d1e4:	dcf7      	bgt.n	800d1d6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x84>
 800d1e6:	2500      	movs	r5, #0
 800d1e8:	e7f5      	b.n	800d1d6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x84>
	...

0800d1ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800d1ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1f0:	8cc6      	ldrh	r6, [r0, #38]	; 0x26
 800d1f2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d1f6:	429e      	cmp	r6, r3
 800d1f8:	b08d      	sub	sp, #52	; 0x34
 800d1fa:	4604      	mov	r4, r0
 800d1fc:	4688      	mov	r8, r1
 800d1fe:	d04b      	beq.n	800d298 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xac>
 800d200:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800d204:	4628      	mov	r0, r5
 800d206:	f7fa ff3d 	bl	8008084 <_ZNK8touchgfx9TypedText7getFontEv>
 800d20a:	4607      	mov	r7, r0
 800d20c:	2800      	cmp	r0, #0
 800d20e:	d043      	beq.n	800d298 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xac>
 800d210:	4628      	mov	r0, r5
 800d212:	f7fa ff6b 	bl	80080ec <_ZNK8touchgfx9TypedText11assertValidEv>
 800d216:	4b22      	ldr	r3, [pc, #136]	; (800d2a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xb4>)
 800d218:	f894 902e 	ldrb.w	r9, [r4, #46]	; 0x2e
 800d21c:	681b      	ldr	r3, [r3, #0]
 800d21e:	f9b4 a02c 	ldrsh.w	sl, [r4, #44]	; 0x2c
 800d222:	f894 b030 	ldrb.w	fp, [r4, #48]	; 0x30
 800d226:	eb03 0346 	add.w	r3, r3, r6, lsl #1
 800d22a:	4628      	mov	r0, r5
 800d22c:	785e      	ldrb	r6, [r3, #1]
 800d22e:	f7fa ff45 	bl	80080bc <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800d232:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d234:	9309      	str	r3, [sp, #36]	; 0x24
 800d236:	4b1b      	ldr	r3, [pc, #108]	; (800d2a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xb8>)
 800d238:	f894 2031 	ldrb.w	r2, [r4, #49]	; 0x31
 800d23c:	681b      	ldr	r3, [r3, #0]
 800d23e:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
 800d242:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d246:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 800d24a:	9707      	str	r7, [sp, #28]
 800d24c:	f3c6 0601 	ubfx	r6, r6, #0, #2
 800d250:	f88d 902a 	strb.w	r9, [sp, #42]	; 0x2a
 800d254:	f88d 6020 	strb.w	r6, [sp, #32]
 800d258:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800d25c:	f88d b022 	strb.w	fp, [sp, #34]	; 0x22
 800d260:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800d264:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 800d268:	b10a      	cbz	r2, 800d26e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800d26a:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800d26c:	b906      	cbnz	r6, 800d270 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x84>
 800d26e:	689e      	ldr	r6, [r3, #8]
 800d270:	af05      	add	r7, sp, #20
 800d272:	4621      	mov	r1, r4
 800d274:	4638      	mov	r0, r7
 800d276:	f001 fddc 	bl	800ee32 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d27a:	4628      	mov	r0, r5
 800d27c:	f7ff ff12 	bl	800d0a4 <_ZNK8touchgfx9TypedText7getTextEv>
 800d280:	2300      	movs	r3, #0
 800d282:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800d286:	ab07      	add	r3, sp, #28
 800d288:	9001      	str	r0, [sp, #4]
 800d28a:	9300      	str	r3, [sp, #0]
 800d28c:	e897 0006 	ldmia.w	r7, {r1, r2}
 800d290:	4643      	mov	r3, r8
 800d292:	4630      	mov	r0, r6
 800d294:	f000 faa8 	bl	800d7e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d298:	b00d      	add	sp, #52	; 0x34
 800d29a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d29e:	bf00      	nop
 800d2a0:	20001810 	.word	0x20001810
 800d2a4:	200017a0 	.word	0x200017a0

0800d2a8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800d2a8:	b570      	push	{r4, r5, r6, lr}
 800d2aa:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800d2ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d2b0:	429a      	cmp	r2, r3
 800d2b2:	4604      	mov	r4, r0
 800d2b4:	d021      	beq.n	800d2fa <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800d2b6:	6803      	ldr	r3, [r0, #0]
 800d2b8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d2ba:	4798      	blx	r3
 800d2bc:	6823      	ldr	r3, [r4, #0]
 800d2be:	4605      	mov	r5, r0
 800d2c0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d2c2:	4620      	mov	r0, r4
 800d2c4:	4798      	blx	r3
 800d2c6:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800d2ca:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d2ce:	6823      	ldr	r3, [r4, #0]
 800d2d0:	4606      	mov	r6, r0
 800d2d2:	b22d      	sxth	r5, r5
 800d2d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2d6:	d109      	bne.n	800d2ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800d2d8:	4629      	mov	r1, r5
 800d2da:	4620      	mov	r0, r4
 800d2dc:	4798      	blx	r3
 800d2de:	6823      	ldr	r3, [r4, #0]
 800d2e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d2e2:	4631      	mov	r1, r6
 800d2e4:	4620      	mov	r0, r4
 800d2e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d2ea:	4718      	bx	r3
 800d2ec:	4601      	mov	r1, r0
 800d2ee:	4620      	mov	r0, r4
 800d2f0:	4798      	blx	r3
 800d2f2:	6823      	ldr	r3, [r4, #0]
 800d2f4:	4629      	mov	r1, r5
 800d2f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d2f8:	e7f4      	b.n	800d2e4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800d2fa:	bd70      	pop	{r4, r5, r6, pc}

0800d2fc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800d2fc:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800d300:	84c1      	strh	r1, [r0, #38]	; 0x26
 800d302:	b922      	cbnz	r2, 800d30e <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x12>
 800d304:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d308:	b90b      	cbnz	r3, 800d30e <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x12>
 800d30a:	f7ff bfcd 	b.w	800d2a8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d30e:	4770      	bx	lr

0800d310 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d310:	2300      	movs	r3, #0
 800d312:	8003      	strh	r3, [r0, #0]
 800d314:	8043      	strh	r3, [r0, #2]
 800d316:	8083      	strh	r3, [r0, #4]
 800d318:	80c3      	strh	r3, [r0, #6]
 800d31a:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d31e:	b91b      	cbnz	r3, 800d328 <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800d320:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800d324:	2bff      	cmp	r3, #255	; 0xff
 800d326:	d103      	bne.n	800d330 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800d328:	890b      	ldrh	r3, [r1, #8]
 800d32a:	8083      	strh	r3, [r0, #4]
 800d32c:	894b      	ldrh	r3, [r1, #10]
 800d32e:	80c3      	strh	r3, [r0, #6]
 800d330:	4770      	bx	lr
	...

0800d334 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d334:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d336:	4604      	mov	r4, r0
 800d338:	6808      	ldr	r0, [r1, #0]
 800d33a:	6849      	ldr	r1, [r1, #4]
 800d33c:	466b      	mov	r3, sp
 800d33e:	c303      	stmia	r3!, {r0, r1}
 800d340:	6823      	ldr	r3, [r4, #0]
 800d342:	4669      	mov	r1, sp
 800d344:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d346:	4620      	mov	r0, r4
 800d348:	4798      	blx	r3
 800d34a:	4b08      	ldr	r3, [pc, #32]	; (800d36c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d34c:	681b      	ldr	r3, [r3, #0]
 800d34e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d352:	b10a      	cbz	r2, 800d358 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d354:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d356:	b900      	cbnz	r0, 800d35a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d358:	6898      	ldr	r0, [r3, #8]
 800d35a:	6803      	ldr	r3, [r0, #0]
 800d35c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d35e:	69dd      	ldr	r5, [r3, #28]
 800d360:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d364:	4669      	mov	r1, sp
 800d366:	47a8      	blx	r5
 800d368:	b003      	add	sp, #12
 800d36a:	bd30      	pop	{r4, r5, pc}
 800d36c:	200017a0 	.word	0x200017a0

0800d370 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d370:	b538      	push	{r3, r4, r5, lr}
 800d372:	880b      	ldrh	r3, [r1, #0]
 800d374:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d376:	4605      	mov	r5, r0
 800d378:	8813      	ldrh	r3, [r2, #0]
 800d37a:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d37e:	4604      	mov	r4, r0
 800d380:	4628      	mov	r0, r5
 800d382:	f002 fe4b 	bl	801001c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d386:	8120      	strh	r0, [r4, #8]
 800d388:	4628      	mov	r0, r5
 800d38a:	f002 fe81 	bl	8010090 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d38e:	8160      	strh	r0, [r4, #10]
 800d390:	bd38      	pop	{r3, r4, r5, pc}

0800d392 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d392:	b510      	push	{r4, lr}
 800d394:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800d398:	2bff      	cmp	r3, #255	; 0xff
 800d39a:	4604      	mov	r4, r0
 800d39c:	d006      	beq.n	800d3ac <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d39e:	2300      	movs	r3, #0
 800d3a0:	8003      	strh	r3, [r0, #0]
 800d3a2:	8043      	strh	r3, [r0, #2]
 800d3a4:	8083      	strh	r3, [r0, #4]
 800d3a6:	80c3      	strh	r3, [r0, #6]
 800d3a8:	4620      	mov	r0, r4
 800d3aa:	bd10      	pop	{r4, pc}
 800d3ac:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d3b0:	b11b      	cbz	r3, 800d3ba <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d3b2:	3130      	adds	r1, #48	; 0x30
 800d3b4:	f002 fea6 	bl	8010104 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d3b8:	e7f6      	b.n	800d3a8 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d3ba:	312e      	adds	r1, #46	; 0x2e
 800d3bc:	e7fa      	b.n	800d3b4 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800d3c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d3c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d3c4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d3c8:	b08b      	sub	sp, #44	; 0x2c
 800d3ca:	4604      	mov	r4, r0
 800d3cc:	4689      	mov	r9, r1
 800d3ce:	2b00      	cmp	r3, #0
 800d3d0:	d043      	beq.n	800d45a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9a>
 800d3d2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d3d4:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d3d8:	a805      	add	r0, sp, #20
 800d3da:	f002 fe1f 	bl	801001c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d3de:	4607      	mov	r7, r0
 800d3e0:	fa0f f880 	sxth.w	r8, r0
 800d3e4:	a805      	add	r0, sp, #20
 800d3e6:	f002 fe53 	bl	8010090 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d3ea:	f9b9 6000 	ldrsh.w	r6, [r9]
 800d3ee:	f8b9 2004 	ldrh.w	r2, [r9, #4]
 800d3f2:	4432      	add	r2, r6
 800d3f4:	b292      	uxth	r2, r2
 800d3f6:	2300      	movs	r3, #0
 800d3f8:	fa0f fe82 	sxth.w	lr, r2
 800d3fc:	459e      	cmp	lr, r3
 800d3fe:	fa0f fc80 	sxth.w	ip, r0
 800d402:	9306      	str	r3, [sp, #24]
 800d404:	dd2b      	ble.n	800d45e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d406:	45b0      	cmp	r8, r6
 800d408:	dd29      	ble.n	800d45e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d40a:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 800d40e:	f8b9 3006 	ldrh.w	r3, [r9, #6]
 800d412:	442b      	add	r3, r5
 800d414:	b29b      	uxth	r3, r3
 800d416:	b219      	sxth	r1, r3
 800d418:	2900      	cmp	r1, #0
 800d41a:	dd20      	ble.n	800d45e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d41c:	45ac      	cmp	ip, r5
 800d41e:	dd1e      	ble.n	800d45e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800d420:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800d424:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800d428:	45f0      	cmp	r8, lr
 800d42a:	bfb8      	it	lt
 800d42c:	463a      	movlt	r2, r7
 800d42e:	458c      	cmp	ip, r1
 800d430:	bfb8      	it	lt
 800d432:	4603      	movlt	r3, r0
 800d434:	1b92      	subs	r2, r2, r6
 800d436:	1b5b      	subs	r3, r3, r5
 800d438:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d43c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d440:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d444:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d448:	4b1d      	ldr	r3, [pc, #116]	; (800d4c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>)
 800d44a:	681b      	ldr	r3, [r3, #0]
 800d44c:	b953      	cbnz	r3, 800d464 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa4>
 800d44e:	4b1d      	ldr	r3, [pc, #116]	; (800d4c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x104>)
 800d450:	4a1d      	ldr	r2, [pc, #116]	; (800d4c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800d452:	481e      	ldr	r0, [pc, #120]	; (800d4cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800d454:	21b8      	movs	r1, #184	; 0xb8
 800d456:	f00e fa99 	bl	801b98c <__assert_func>
 800d45a:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d45c:	e7ba      	b.n	800d3d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d45e:	2300      	movs	r3, #0
 800d460:	9307      	str	r3, [sp, #28]
 800d462:	e7f1      	b.n	800d448 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x88>
 800d464:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d468:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d46c:	429a      	cmp	r2, r3
 800d46e:	d024      	beq.n	800d4ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800d470:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d474:	b30b      	cbz	r3, 800d4ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800d476:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d47a:	b1f3      	cbz	r3, 800d4ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800d47c:	2300      	movs	r3, #0
 800d47e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d482:	6823      	ldr	r3, [r4, #0]
 800d484:	a908      	add	r1, sp, #32
 800d486:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d488:	4620      	mov	r0, r4
 800d48a:	4798      	blx	r3
 800d48c:	4b10      	ldr	r3, [pc, #64]	; (800d4d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800d48e:	681b      	ldr	r3, [r3, #0]
 800d490:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d494:	b10a      	cbz	r2, 800d49a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d496:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d498:	b900      	cbnz	r0, 800d49c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xdc>
 800d49a:	6898      	ldr	r0, [r3, #8]
 800d49c:	6801      	ldr	r1, [r0, #0]
 800d49e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d4a2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d4a6:	2501      	movs	r5, #1
 800d4a8:	9502      	str	r5, [sp, #8]
 800d4aa:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d4ae:	9401      	str	r4, [sp, #4]
 800d4b0:	ac06      	add	r4, sp, #24
 800d4b2:	9400      	str	r4, [sp, #0]
 800d4b4:	68cc      	ldr	r4, [r1, #12]
 800d4b6:	a905      	add	r1, sp, #20
 800d4b8:	47a0      	blx	r4
 800d4ba:	b00b      	add	sp, #44	; 0x2c
 800d4bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d4c0:	20001848 	.word	0x20001848
 800d4c4:	08020074 	.word	0x08020074
 800d4c8:	08020148 	.word	0x08020148
 800d4cc:	080200b0 	.word	0x080200b0
 800d4d0:	200017a0 	.word	0x200017a0

0800d4d4 <_ZN8touchgfx3LCD4initEv>:
 800d4d4:	4770      	bx	lr

0800d4d6 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800d4d6:	2000      	movs	r0, #0
 800d4d8:	4770      	bx	lr

0800d4da <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800d4da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4de:	b091      	sub	sp, #68	; 0x44
 800d4e0:	4699      	mov	r9, r3
 800d4e2:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800d4e6:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800d4e8:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800d4ec:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d4f0:	4680      	mov	r8, r0
 800d4f2:	4617      	mov	r7, r2
 800d4f4:	a80e      	add	r0, sp, #56	; 0x38
 800d4f6:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800d4fa:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800d4fe:	2500      	movs	r5, #0
 800d500:	910d      	str	r1, [sp, #52]	; 0x34
 800d502:	950e      	str	r5, [sp, #56]	; 0x38
 800d504:	f000 fe3e 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d508:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800d50a:	f8d9 6000 	ldr.w	r6, [r9]
 800d50e:	6818      	ldr	r0, [r3, #0]
 800d510:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d512:	f9b4 b000 	ldrsh.w	fp, [r4]
 800d516:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d51a:	eb02 0c06 	add.w	ip, r2, r6
 800d51e:	1b80      	subs	r0, r0, r6
 800d520:	ebab 0e0c 	sub.w	lr, fp, ip
 800d524:	4570      	cmp	r0, lr
 800d526:	f340 80bd 	ble.w	800d6a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d52a:	88a1      	ldrh	r1, [r4, #4]
 800d52c:	4459      	add	r1, fp
 800d52e:	b209      	sxth	r1, r1
 800d530:	458c      	cmp	ip, r1
 800d532:	f300 80b7 	bgt.w	800d6a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d536:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800d53a:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800d53e:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800d542:	edd9 6a07 	vldr	s13, [r9, #28]
 800d546:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800d54a:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800d54e:	4283      	cmp	r3, r0
 800d550:	bfa8      	it	ge
 800d552:	4603      	movge	r3, r0
 800d554:	ee07 3a90 	vmov	s15, r3
 800d558:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800d55c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800d560:	ee25 4a04 	vmul.f32	s8, s10, s8
 800d564:	ee65 4a24 	vmul.f32	s9, s10, s9
 800d568:	ee25 5a27 	vmul.f32	s10, s10, s15
 800d56c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800d570:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800d574:	45e3      	cmp	fp, ip
 800d576:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800d57a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800d57e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800d582:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d586:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d58a:	f340 808e 	ble.w	800d6aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800d58e:	fb9e f5f3 	sdiv	r5, lr, r3
 800d592:	ee07 5a10 	vmov	s14, r5
 800d596:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d59a:	2d00      	cmp	r5, #0
 800d59c:	fb03 e415 	mls	r4, r3, r5, lr
 800d5a0:	eea7 0a04 	vfma.f32	s0, s14, s8
 800d5a4:	eee7 0a24 	vfma.f32	s1, s14, s9
 800d5a8:	eea7 1a05 	vfma.f32	s2, s14, s10
 800d5ac:	dd13      	ble.n	800d5d6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800d5ae:	ee70 6a44 	vsub.f32	s13, s0, s8
 800d5b2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800d5b6:	eef5 6a40 	vcmp.f32	s13, #0.0
 800d5ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d5be:	bf18      	it	ne
 800d5c0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800d5c4:	ee31 2a45 	vsub.f32	s4, s2, s10
 800d5c8:	bf08      	it	eq
 800d5ca:	eeb0 7a67 	vmoveq.f32	s14, s15
 800d5ce:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d5d2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d5d6:	fb05 f703 	mul.w	r7, r5, r3
 800d5da:	1bc0      	subs	r0, r0, r7
 800d5dc:	443e      	add	r6, r7
 800d5de:	1997      	adds	r7, r2, r6
 800d5e0:	4407      	add	r7, r0
 800d5e2:	42b9      	cmp	r1, r7
 800d5e4:	bfbc      	itt	lt
 800d5e6:	1a88      	sublt	r0, r1, r2
 800d5e8:	1b80      	sublt	r0, r0, r6
 800d5ea:	2800      	cmp	r0, #0
 800d5ec:	dd5a      	ble.n	800d6a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800d5ee:	fb90 f1f3 	sdiv	r1, r0, r3
 800d5f2:	fb03 0211 	mls	r2, r3, r1, r0
 800d5f6:	b90a      	cbnz	r2, 800d5fc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800d5f8:	3901      	subs	r1, #1
 800d5fa:	461a      	mov	r2, r3
 800d5fc:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800d600:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800d604:	44a4      	add	ip, r4
 800d606:	fb03 c505 	mla	r5, r3, r5, ip
 800d60a:	2900      	cmp	r1, #0
 800d60c:	bfcc      	ite	gt
 800d60e:	469e      	movgt	lr, r3
 800d610:	4696      	movle	lr, r2
 800d612:	eef0 6a42 	vmov.f32	s13, s4
 800d616:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800d61a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800d61e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800d622:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d626:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d62a:	eeb0 7a61 	vmov.f32	s14, s3
 800d62e:	ee17 0a90 	vmov	r0, s15
 800d632:	ee73 7a42 	vsub.f32	s15, s6, s4
 800d636:	fb90 f6f3 	sdiv	r6, r0, r3
 800d63a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d63e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800d642:	ee17 0a90 	vmov	r0, s15
 800d646:	fb90 f7f3 	sdiv	r7, r0, r3
 800d64a:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800d64e:	900c      	str	r0, [sp, #48]	; 0x30
 800d650:	f8d0 8000 	ldr.w	r8, [r0]
 800d654:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d656:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800d65a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800d65e:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800d662:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800d666:	f8cd a020 	str.w	sl, [sp, #32]
 800d66a:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800d66e:	980d      	ldr	r0, [sp, #52]	; 0x34
 800d670:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800d674:	9603      	str	r6, [sp, #12]
 800d676:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800d67a:	ee16 0a90 	vmov	r0, s13
 800d67e:	fb07 0704 	mla	r7, r7, r4, r0
 800d682:	ee17 0a10 	vmov	r0, s14
 800d686:	fb06 0604 	mla	r6, r6, r4, r0
 800d68a:	e9cd 3600 	strd	r3, r6, [sp]
 800d68e:	44ca      	add	sl, r9
 800d690:	f8cd a01c 	str.w	sl, [sp, #28]
 800d694:	9506      	str	r5, [sp, #24]
 800d696:	9702      	str	r7, [sp, #8]
 800d698:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800d69c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800d69e:	ebae 0304 	sub.w	r3, lr, r4
 800d6a2:	47a8      	blx	r5
 800d6a4:	b011      	add	sp, #68	; 0x44
 800d6a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6aa:	462c      	mov	r4, r5
 800d6ac:	e797      	b.n	800d5de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800d6ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800d6ae:	b570      	push	{r4, r5, r6, lr}
 800d6b0:	4604      	mov	r4, r0
 800d6b2:	2500      	movs	r5, #0
 800d6b4:	7223      	strb	r3, [r4, #8]
 800d6b6:	9804      	ldr	r0, [sp, #16]
 800d6b8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d6bc:	8025      	strh	r5, [r4, #0]
 800d6be:	6061      	str	r1, [r4, #4]
 800d6c0:	7263      	strb	r3, [r4, #9]
 800d6c2:	60e0      	str	r0, [r4, #12]
 800d6c4:	8222      	strh	r2, [r4, #16]
 800d6c6:	8265      	strh	r5, [r4, #18]
 800d6c8:	82a5      	strh	r5, [r4, #20]
 800d6ca:	82e5      	strh	r5, [r4, #22]
 800d6cc:	8325      	strh	r5, [r4, #24]
 800d6ce:	8365      	strh	r5, [r4, #26]
 800d6d0:	83a5      	strh	r5, [r4, #28]
 800d6d2:	77a5      	strb	r5, [r4, #30]
 800d6d4:	6803      	ldr	r3, [r0, #0]
 800d6d6:	695b      	ldr	r3, [r3, #20]
 800d6d8:	4798      	blx	r3
 800d6da:	4606      	mov	r6, r0
 800d6dc:	b1f8      	cbz	r0, 800d71e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d6de:	68e0      	ldr	r0, [r4, #12]
 800d6e0:	6803      	ldr	r3, [r0, #0]
 800d6e2:	4631      	mov	r1, r6
 800d6e4:	68db      	ldr	r3, [r3, #12]
 800d6e6:	4798      	blx	r3
 800d6e8:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800d6ec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d6f0:	7a83      	ldrb	r3, [r0, #10]
 800d6f2:	4313      	orrs	r3, r2
 800d6f4:	83a3      	strh	r3, [r4, #28]
 800d6f6:	7a63      	ldrb	r3, [r4, #9]
 800d6f8:	2b04      	cmp	r3, #4
 800d6fa:	4605      	mov	r5, r0
 800d6fc:	d10f      	bne.n	800d71e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d6fe:	68e0      	ldr	r0, [r4, #12]
 800d700:	6803      	ldr	r3, [r0, #0]
 800d702:	462a      	mov	r2, r5
 800d704:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d706:	4631      	mov	r1, r6
 800d708:	4798      	blx	r3
 800d70a:	f995 300d 	ldrsb.w	r3, [r5, #13]
 800d70e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d712:	7aab      	ldrb	r3, [r5, #10]
 800d714:	4313      	orrs	r3, r2
 800d716:	4418      	add	r0, r3
 800d718:	8ba3      	ldrh	r3, [r4, #28]
 800d71a:	4418      	add	r0, r3
 800d71c:	83a0      	strh	r0, [r4, #28]
 800d71e:	4620      	mov	r0, r4
 800d720:	bd70      	pop	{r4, r5, r6, pc}

0800d722 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d722:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d726:	2400      	movs	r4, #0
 800d728:	b085      	sub	sp, #20
 800d72a:	4681      	mov	r9, r0
 800d72c:	460f      	mov	r7, r1
 800d72e:	4692      	mov	sl, r2
 800d730:	469b      	mov	fp, r3
 800d732:	46a0      	mov	r8, r4
 800d734:	4626      	mov	r6, r4
 800d736:	4554      	cmp	r4, sl
 800d738:	da21      	bge.n	800d77e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800d73a:	2300      	movs	r3, #0
 800d73c:	9303      	str	r3, [sp, #12]
 800d73e:	463a      	mov	r2, r7
 800d740:	ab03      	add	r3, sp, #12
 800d742:	4659      	mov	r1, fp
 800d744:	4648      	mov	r0, r9
 800d746:	f002 fb35 	bl	800fdb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d74a:	4605      	mov	r5, r0
 800d74c:	b1b8      	cbz	r0, 800d77e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800d74e:	280a      	cmp	r0, #10
 800d750:	d015      	beq.n	800d77e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800d752:	9a03      	ldr	r2, [sp, #12]
 800d754:	b182      	cbz	r2, 800d778 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x56>
 800d756:	f992 000d 	ldrsb.w	r0, [r2, #13]
 800d75a:	7a93      	ldrb	r3, [r2, #10]
 800d75c:	8895      	ldrh	r5, [r2, #4]
 800d75e:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d762:	4303      	orrs	r3, r0
 800d764:	9301      	str	r3, [sp, #4]
 800d766:	683b      	ldr	r3, [r7, #0]
 800d768:	4641      	mov	r1, r8
 800d76a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d76c:	4638      	mov	r0, r7
 800d76e:	4798      	blx	r3
 800d770:	9b01      	ldr	r3, [sp, #4]
 800d772:	4418      	add	r0, r3
 800d774:	4406      	add	r6, r0
 800d776:	b2b6      	uxth	r6, r6
 800d778:	3401      	adds	r4, #1
 800d77a:	46a8      	mov	r8, r5
 800d77c:	e7db      	b.n	800d736 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x14>
 800d77e:	4630      	mov	r0, r6
 800d780:	b005      	add	sp, #20
 800d782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d786 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d786:	2a02      	cmp	r2, #2
 800d788:	b530      	push	{r4, r5, lr}
 800d78a:	d011      	beq.n	800d7b0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d78c:	2a03      	cmp	r2, #3
 800d78e:	d01c      	beq.n	800d7ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d790:	2a01      	cmp	r2, #1
 800d792:	d10c      	bne.n	800d7ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d794:	888b      	ldrh	r3, [r1, #4]
 800d796:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d79a:	8801      	ldrh	r1, [r0, #0]
 800d79c:	8844      	ldrh	r4, [r0, #2]
 800d79e:	8004      	strh	r4, [r0, #0]
 800d7a0:	1a9b      	subs	r3, r3, r2
 800d7a2:	1a5b      	subs	r3, r3, r1
 800d7a4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d7a8:	8043      	strh	r3, [r0, #2]
 800d7aa:	8081      	strh	r1, [r0, #4]
 800d7ac:	80c2      	strh	r2, [r0, #6]
 800d7ae:	bd30      	pop	{r4, r5, pc}
 800d7b0:	88cb      	ldrh	r3, [r1, #6]
 800d7b2:	88c2      	ldrh	r2, [r0, #6]
 800d7b4:	1a9b      	subs	r3, r3, r2
 800d7b6:	8842      	ldrh	r2, [r0, #2]
 800d7b8:	1a9b      	subs	r3, r3, r2
 800d7ba:	888a      	ldrh	r2, [r1, #4]
 800d7bc:	8881      	ldrh	r1, [r0, #4]
 800d7be:	8043      	strh	r3, [r0, #2]
 800d7c0:	1a52      	subs	r2, r2, r1
 800d7c2:	8801      	ldrh	r1, [r0, #0]
 800d7c4:	1a52      	subs	r2, r2, r1
 800d7c6:	8002      	strh	r2, [r0, #0]
 800d7c8:	e7f1      	b.n	800d7ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d7ca:	88cb      	ldrh	r3, [r1, #6]
 800d7cc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d7d0:	8841      	ldrh	r1, [r0, #2]
 800d7d2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d7d6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d7da:	8045      	strh	r5, [r0, #2]
 800d7dc:	1a9b      	subs	r3, r3, r2
 800d7de:	1a5b      	subs	r3, r3, r1
 800d7e0:	8003      	strh	r3, [r0, #0]
 800d7e2:	8082      	strh	r2, [r0, #4]
 800d7e4:	80c4      	strh	r4, [r0, #6]
 800d7e6:	e7e2      	b.n	800d7ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d7e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
 800d7e8:	b570      	push	{r4, r5, r6, lr}
 800d7ea:	b086      	sub	sp, #24
 800d7ec:	ac02      	add	r4, sp, #8
 800d7ee:	e884 0006 	stmia.w	r4, {r1, r2}
 800d7f2:	461a      	mov	r2, r3
 800d7f4:	ab0c      	add	r3, sp, #48	; 0x30
 800d7f6:	9305      	str	r3, [sp, #20]
 800d7f8:	4b0a      	ldr	r3, [pc, #40]	; (800d824 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz+0x3c>)
 800d7fa:	685d      	ldr	r5, [r3, #4]
 800d7fc:	1069      	asrs	r1, r5, #1
 800d7fe:	07ed      	lsls	r5, r5, #31
 800d800:	bf4c      	ite	mi
 800d802:	681b      	ldrmi	r3, [r3, #0]
 800d804:	681d      	ldrpl	r5, [r3, #0]
 800d806:	eb00 0601 	add.w	r6, r0, r1
 800d80a:	bf44      	itt	mi
 800d80c:	5841      	ldrmi	r1, [r0, r1]
 800d80e:	58cd      	ldrmi	r5, [r1, r3]
 800d810:	9b05      	ldr	r3, [sp, #20]
 800d812:	9301      	str	r3, [sp, #4]
 800d814:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d816:	9300      	str	r3, [sp, #0]
 800d818:	4621      	mov	r1, r4
 800d81a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d81c:	4630      	mov	r0, r6
 800d81e:	47a8      	blx	r5
 800d820:	b006      	add	sp, #24
 800d822:	bd70      	pop	{r4, r5, r6, pc}
 800d824:	20000018 	.word	0x20000018

0800d828 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d82c:	b09d      	sub	sp, #116	; 0x74
 800d82e:	9114      	str	r1, [sp, #80]	; 0x50
 800d830:	9315      	str	r3, [sp, #84]	; 0x54
 800d832:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800d834:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800d836:	8809      	ldrh	r1, [r1, #0]
 800d838:	889b      	ldrh	r3, [r3, #4]
 800d83a:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 800d83c:	9210      	str	r2, [sp, #64]	; 0x40
 800d83e:	440b      	add	r3, r1
 800d840:	b21b      	sxth	r3, r3
 800d842:	930e      	str	r3, [sp, #56]	; 0x38
 800d844:	6833      	ldr	r3, [r6, #0]
 800d846:	f89d 20b0 	ldrb.w	r2, [sp, #176]	; 0xb0
 800d84a:	7a59      	ldrb	r1, [r3, #9]
 800d84c:	7a1b      	ldrb	r3, [r3, #8]
 800d84e:	9312      	str	r3, [sp, #72]	; 0x48
 800d850:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800d852:	900f      	str	r0, [sp, #60]	; 0x3c
 800d854:	f89d b0a4 	ldrb.w	fp, [sp, #164]	; 0xa4
 800d858:	9113      	str	r1, [sp, #76]	; 0x4c
 800d85a:	f9b3 4000 	ldrsh.w	r4, [r3]
 800d85e:	2a00      	cmp	r2, #0
 800d860:	d059      	beq.n	800d916 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xee>
 800d862:	7c33      	ldrb	r3, [r6, #16]
 800d864:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 800d866:	2b04      	cmp	r3, #4
 800d868:	bf14      	ite	ne
 800d86a:	2301      	movne	r3, #1
 800d86c:	2302      	moveq	r3, #2
 800d86e:	4413      	add	r3, r2
 800d870:	f04f 0800 	mov.w	r8, #0
 800d874:	930d      	str	r3, [sp, #52]	; 0x34
 800d876:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800d87a:	4645      	mov	r5, r8
 800d87c:	e9dd 320c 	ldrd	r3, r2, [sp, #48]	; 0x30
 800d880:	4293      	cmp	r3, r2
 800d882:	da75      	bge.n	800d970 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x148>
 800d884:	2300      	movs	r3, #0
 800d886:	931a      	str	r3, [sp, #104]	; 0x68
 800d888:	992b      	ldr	r1, [sp, #172]	; 0xac
 800d88a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d88c:	6832      	ldr	r2, [r6, #0]
 800d88e:	428b      	cmp	r3, r1
 800d890:	db43      	blt.n	800d91a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf2>
 800d892:	6813      	ldr	r3, [r2, #0]
 800d894:	4610      	mov	r0, r2
 800d896:	695b      	ldr	r3, [r3, #20]
 800d898:	4798      	blx	r3
 800d89a:	4681      	mov	r9, r0
 800d89c:	6830      	ldr	r0, [r6, #0]
 800d89e:	6803      	ldr	r3, [r0, #0]
 800d8a0:	aa1b      	add	r2, sp, #108	; 0x6c
 800d8a2:	689f      	ldr	r7, [r3, #8]
 800d8a4:	4649      	mov	r1, r9
 800d8a6:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800d8aa:	47b8      	blx	r7
 800d8ac:	901a      	str	r0, [sp, #104]	; 0x68
 800d8ae:	f64f 6aff 	movw	sl, #65279	; 0xfeff
 800d8b2:	45d1      	cmp	r9, sl
 800d8b4:	d045      	beq.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d8b6:	f242 070b 	movw	r7, #8203	; 0x200b
 800d8ba:	45b9      	cmp	r9, r7
 800d8bc:	d041      	beq.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d8be:	f1b9 0f00 	cmp.w	r9, #0
 800d8c2:	f000 80ef 	beq.w	800daa4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800d8c6:	f1b9 0f0a 	cmp.w	r9, #10
 800d8ca:	d057      	beq.n	800d97c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800d8cc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800d8ce:	b383      	cbz	r3, 800d932 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10a>
 800d8d0:	f8b3 9004 	ldrh.w	r9, [r3, #4]
 800d8d4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800d8d6:	2a00      	cmp	r2, #0
 800d8d8:	f000 80d3 	beq.w	800da82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x25a>
 800d8dc:	f1bb 0f00 	cmp.w	fp, #0
 800d8e0:	d100      	bne.n	800d8e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xbc>
 800d8e2:	4444      	add	r4, r8
 800d8e4:	f992 800d 	ldrsb.w	r8, [r2, #13]
 800d8e8:	f408 7380 	and.w	r3, r8, #256	; 0x100
 800d8ec:	f892 800a 	ldrb.w	r8, [r2, #10]
 800d8f0:	f1bb 0f01 	cmp.w	fp, #1
 800d8f4:	ea48 0803 	orr.w	r8, r8, r3
 800d8f8:	d128      	bne.n	800d94c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x124>
 800d8fa:	eba4 0408 	sub.w	r4, r4, r8
 800d8fe:	2d00      	cmp	r5, #0
 800d900:	d143      	bne.n	800d98a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x162>
 800d902:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d904:	eb08 0304 	add.w	r3, r8, r4
 800d908:	4413      	add	r3, r2
 800d90a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800d90c:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d910:	4293      	cmp	r3, r2
 800d912:	da44      	bge.n	800d99e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d914:	e02b      	b.n	800d96e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x146>
 800d916:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800d918:	e7aa      	b.n	800d870 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x48>
 800d91a:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800d91e:	9301      	str	r3, [sp, #4]
 800d920:	ab1b      	add	r3, sp, #108	; 0x6c
 800d922:	9300      	str	r3, [sp, #0]
 800d924:	4659      	mov	r1, fp
 800d926:	ab1a      	add	r3, sp, #104	; 0x68
 800d928:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800d92a:	f002 fa77 	bl	800fe1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d92e:	4681      	mov	r9, r0
 800d930:	e7bd      	b.n	800d8ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800d932:	6830      	ldr	r0, [r6, #0]
 800d934:	6803      	ldr	r3, [r0, #0]
 800d936:	691b      	ldr	r3, [r3, #16]
 800d938:	4798      	blx	r3
 800d93a:	4550      	cmp	r0, sl
 800d93c:	d001      	beq.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d93e:	42b8      	cmp	r0, r7
 800d940:	d1c8      	bne.n	800d8d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800d942:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d944:	3301      	adds	r3, #1
 800d946:	930c      	str	r3, [sp, #48]	; 0x30
 800d948:	464d      	mov	r5, r9
 800d94a:	e797      	b.n	800d87c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x54>
 800d94c:	2d00      	cmp	r5, #0
 800d94e:	f000 80ab 	beq.w	800daa8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x280>
 800d952:	f1bb 0f00 	cmp.w	fp, #0
 800d956:	d118      	bne.n	800d98a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x162>
 800d958:	6830      	ldr	r0, [r6, #0]
 800d95a:	6803      	ldr	r3, [r0, #0]
 800d95c:	4629      	mov	r1, r5
 800d95e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d960:	4798      	blx	r3
 800d962:	4404      	add	r4, r0
 800d964:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d966:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d968:	1ae3      	subs	r3, r4, r3
 800d96a:	4293      	cmp	r3, r2
 800d96c:	dd17      	ble.n	800d99e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d96e:	464d      	mov	r5, r9
 800d970:	2d00      	cmp	r5, #0
 800d972:	f000 8097 	beq.w	800daa4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800d976:	2d0a      	cmp	r5, #10
 800d978:	f040 8085 	bne.w	800da86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x25e>
 800d97c:	250a      	movs	r5, #10
 800d97e:	fab5 f085 	clz	r0, r5
 800d982:	0940      	lsrs	r0, r0, #5
 800d984:	b01d      	add	sp, #116	; 0x74
 800d986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d98a:	6830      	ldr	r0, [r6, #0]
 800d98c:	6803      	ldr	r3, [r0, #0]
 800d98e:	4629      	mov	r1, r5
 800d990:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d992:	4798      	blx	r3
 800d994:	f1bb 0f01 	cmp.w	fp, #1
 800d998:	eba4 0400 	sub.w	r4, r4, r0
 800d99c:	d0b1      	beq.n	800d902 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800d99e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800d9a0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800d9a2:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d9a6:	f9b3 5000 	ldrsh.w	r5, [r3]
 800d9aa:	7b43      	ldrb	r3, [r0, #13]
 800d9ac:	015b      	lsls	r3, r3, #5
 800d9ae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d9b2:	7983      	ldrb	r3, [r0, #6]
 800d9b4:	4421      	add	r1, r4
 800d9b6:	4313      	orrs	r3, r2
 800d9b8:	440b      	add	r3, r1
 800d9ba:	42ab      	cmp	r3, r5
 800d9bc:	dbc1      	blt.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d9be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d9c0:	4299      	cmp	r1, r3
 800d9c2:	dabe      	bge.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800d9c4:	6830      	ldr	r0, [r6, #0]
 800d9c6:	6803      	ldr	r3, [r0, #0]
 800d9c8:	42a5      	cmp	r5, r4
 800d9ca:	bfc8      	it	gt
 800d9cc:	1b2d      	subgt	r5, r5, r4
 800d9ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d9d0:	bfcc      	ite	gt
 800d9d2:	b2ad      	uxthgt	r5, r5
 800d9d4:	2500      	movle	r5, #0
 800d9d6:	4798      	blx	r3
 800d9d8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800d9da:	4936      	ldr	r1, [pc, #216]	; (800dab4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>)
 800d9dc:	7b5a      	ldrb	r2, [r3, #13]
 800d9de:	f893 e008 	ldrb.w	lr, [r3, #8]
 800d9e2:	f012 0f40 	tst.w	r2, #64	; 0x40
 800d9e6:	bf18      	it	ne
 800d9e8:	468c      	movne	ip, r1
 800d9ea:	9915      	ldr	r1, [sp, #84]	; 0x54
 800d9ec:	4408      	add	r0, r1
 800d9ee:	ea4f 01c2 	mov.w	r1, r2, lsl #3
 800d9f2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d9f6:	bf08      	it	eq
 800d9f8:	f04f 0c00 	moveq.w	ip, #0
 800d9fc:	ea41 070e 	orr.w	r7, r1, lr
 800da00:	ea4c 0707 	orr.w	r7, ip, r7
 800da04:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800da06:	1bc7      	subs	r7, r0, r7
 800da08:	b2bf      	uxth	r7, r7
 800da0a:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800da0e:	fa0f fa87 	sxth.w	sl, r7
 800da12:	4551      	cmp	r1, sl
 800da14:	dd33      	ble.n	800da7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x256>
 800da16:	0112      	lsls	r2, r2, #4
 800da18:	79d8      	ldrb	r0, [r3, #7]
 800da1a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800da1e:	4302      	orrs	r2, r0
 800da20:	4492      	add	sl, r2
 800da22:	4551      	cmp	r1, sl
 800da24:	dc8d      	bgt.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800da26:	1bcf      	subs	r7, r1, r7
 800da28:	b2bf      	uxth	r7, r7
 800da2a:	468a      	mov	sl, r1
 800da2c:	9317      	str	r3, [sp, #92]	; 0x5c
 800da2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800da30:	6830      	ldr	r0, [r6, #0]
 800da32:	681a      	ldr	r2, [r3, #0]
 800da34:	6801      	ldr	r1, [r0, #0]
 800da36:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800da38:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800da3a:	9311      	str	r3, [sp, #68]	; 0x44
 800da3c:	9216      	str	r2, [sp, #88]	; 0x58
 800da3e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800da40:	4788      	blx	r1
 800da42:	79b1      	ldrb	r1, [r6, #6]
 800da44:	910b      	str	r1, [sp, #44]	; 0x2c
 800da46:	7bb1      	ldrb	r1, [r6, #14]
 800da48:	910a      	str	r1, [sp, #40]	; 0x28
 800da4a:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
 800da4e:	9109      	str	r1, [sp, #36]	; 0x24
 800da50:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800da52:	68b1      	ldr	r1, [r6, #8]
 800da54:	9305      	str	r3, [sp, #20]
 800da56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800da58:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800da5a:	9206      	str	r2, [sp, #24]
 800da5c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800da60:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800da64:	e9cd a501 	strd	sl, r5, [sp, #4]
 800da68:	4425      	add	r5, r4
 800da6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800da6c:	9914      	ldr	r1, [sp, #80]	; 0x50
 800da6e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800da70:	b22d      	sxth	r5, r5
 800da72:	9500      	str	r5, [sp, #0]
 800da74:	681a      	ldr	r2, [r3, #0]
 800da76:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800da78:	685b      	ldr	r3, [r3, #4]
 800da7a:	47a8      	blx	r5
 800da7c:	e761      	b.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800da7e:	2700      	movs	r7, #0
 800da80:	e7d4      	b.n	800da2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x204>
 800da82:	4690      	mov	r8, r2
 800da84:	e75d      	b.n	800d942 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800da86:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800da88:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800da8a:	3401      	adds	r4, #1
 800da8c:	429c      	cmp	r4, r3
 800da8e:	f6bf af76 	bge.w	800d97e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x156>
 800da92:	4659      	mov	r1, fp
 800da94:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800da96:	f002 f94d 	bl	800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800da9a:	4605      	mov	r5, r0
 800da9c:	b110      	cbz	r0, 800daa4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800da9e:	280a      	cmp	r0, #10
 800daa0:	d1f2      	bne.n	800da88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x260>
 800daa2:	e76b      	b.n	800d97c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800daa4:	2500      	movs	r5, #0
 800daa6:	e76a      	b.n	800d97e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x156>
 800daa8:	f1bb 0f00 	cmp.w	fp, #0
 800daac:	f43f af5a 	beq.w	800d964 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x13c>
 800dab0:	e775      	b.n	800d99e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800dab2:	bf00      	nop
 800dab4:	fffffe00 	.word	0xfffffe00

0800dab8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800dab8:	b530      	push	{r4, r5, lr}
 800daba:	8a44      	ldrh	r4, [r0, #18]
 800dabc:	8ac5      	ldrh	r5, [r0, #22]
 800dabe:	82c3      	strh	r3, [r0, #22]
 800dac0:	442c      	add	r4, r5
 800dac2:	1ae4      	subs	r4, r4, r3
 800dac4:	8244      	strh	r4, [r0, #18]
 800dac6:	8b03      	ldrh	r3, [r0, #24]
 800dac8:	8a84      	ldrh	r4, [r0, #20]
 800daca:	4422      	add	r2, r4
 800dacc:	440c      	add	r4, r1
 800dace:	1a59      	subs	r1, r3, r1
 800dad0:	8342      	strh	r2, [r0, #26]
 800dad2:	8284      	strh	r4, [r0, #20]
 800dad4:	8301      	strh	r1, [r0, #24]
 800dad6:	bd30      	pop	{r4, r5, pc}

0800dad8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800dad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dadc:	7a45      	ldrb	r5, [r0, #9]
 800dade:	1eeb      	subs	r3, r5, #3
 800dae0:	b085      	sub	sp, #20
 800dae2:	4604      	mov	r4, r0
 800dae4:	b2db      	uxtb	r3, r3
 800dae6:	4689      	mov	r9, r1
 800dae8:	b329      	cbz	r1, 800db36 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x5e>
 800daea:	2b01      	cmp	r3, #1
 800daec:	d921      	bls.n	800db32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x5a>
 800daee:	1e69      	subs	r1, r5, #1
 800daf0:	f1d1 0b00 	rsbs	fp, r1, #0
 800daf4:	eb4b 0b01 	adc.w	fp, fp, r1
 800daf8:	1eaa      	subs	r2, r5, #2
 800dafa:	4253      	negs	r3, r2
 800dafc:	4153      	adcs	r3, r2
 800dafe:	2500      	movs	r5, #0
 800db00:	9301      	str	r3, [sp, #4]
 800db02:	9500      	str	r5, [sp, #0]
 800db04:	2600      	movs	r6, #0
 800db06:	8266      	strh	r6, [r4, #18]
 800db08:	82a6      	strh	r6, [r4, #20]
 800db0a:	f242 080b 	movw	r8, #8203	; 0x200b
 800db0e:	2300      	movs	r3, #0
 800db10:	9303      	str	r3, [sp, #12]
 800db12:	68e2      	ldr	r2, [r4, #12]
 800db14:	7a21      	ldrb	r1, [r4, #8]
 800db16:	6860      	ldr	r0, [r4, #4]
 800db18:	8827      	ldrh	r7, [r4, #0]
 800db1a:	ab03      	add	r3, sp, #12
 800db1c:	f002 f94a 	bl	800fdb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800db20:	8020      	strh	r0, [r4, #0]
 800db22:	b9b0      	cbnz	r0, 800db52 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7a>
 800db24:	8b22      	ldrh	r2, [r4, #24]
 800db26:	2300      	movs	r3, #0
 800db28:	4611      	mov	r1, r2
 800db2a:	4620      	mov	r0, r4
 800db2c:	f7ff ffc4 	bl	800dab8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800db30:	e062      	b.n	800dbf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x120>
 800db32:	468b      	mov	fp, r1
 800db34:	e7e0      	b.n	800daf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x20>
 800db36:	2b01      	cmp	r3, #1
 800db38:	f105 35ff 	add.w	r5, r5, #4294967295
 800db3c:	bf8c      	ite	hi
 800db3e:	2300      	movhi	r3, #0
 800db40:	2301      	movls	r3, #1
 800db42:	2d01      	cmp	r5, #1
 800db44:	9300      	str	r3, [sp, #0]
 800db46:	bf8c      	ite	hi
 800db48:	2500      	movhi	r5, #0
 800db4a:	2501      	movls	r5, #1
 800db4c:	9101      	str	r1, [sp, #4]
 800db4e:	468b      	mov	fp, r1
 800db50:	e7d8      	b.n	800db04 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x2c>
 800db52:	8ae3      	ldrh	r3, [r4, #22]
 800db54:	280a      	cmp	r0, #10
 800db56:	f103 0301 	add.w	r3, r3, #1
 800db5a:	82e3      	strh	r3, [r4, #22]
 800db5c:	d0e2      	beq.n	800db24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x4c>
 800db5e:	9a03      	ldr	r2, [sp, #12]
 800db60:	b972      	cbnz	r2, 800db80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa8>
 800db62:	4540      	cmp	r0, r8
 800db64:	d1d3      	bne.n	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800db66:	8823      	ldrh	r3, [r4, #0]
 800db68:	8b21      	ldrh	r1, [r4, #24]
 800db6a:	2b20      	cmp	r3, #32
 800db6c:	d001      	beq.n	800db72 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9a>
 800db6e:	4543      	cmp	r3, r8
 800db70:	d11d      	bne.n	800dbae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800db72:	2f20      	cmp	r7, #32
 800db74:	d002      	beq.n	800db7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800db76:	4547      	cmp	r7, r8
 800db78:	bf18      	it	ne
 800db7a:	460e      	movne	r6, r1
 800db7c:	2001      	movs	r0, #1
 800db7e:	e017      	b.n	800dbb0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd8>
 800db80:	4540      	cmp	r0, r8
 800db82:	d012      	beq.n	800dbaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd2>
 800db84:	8893      	ldrh	r3, [r2, #4]
 800db86:	8023      	strh	r3, [r4, #0]
 800db88:	f992 a00d 	ldrsb.w	sl, [r2, #13]
 800db8c:	f40a 7080 	and.w	r0, sl, #256	; 0x100
 800db90:	f892 a00a 	ldrb.w	sl, [r2, #10]
 800db94:	ea4a 0a00 	orr.w	sl, sl, r0
 800db98:	68e0      	ldr	r0, [r4, #12]
 800db9a:	6803      	ldr	r3, [r0, #0]
 800db9c:	4639      	mov	r1, r7
 800db9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dba0:	4798      	blx	r3
 800dba2:	eb0a 0200 	add.w	r2, sl, r0
 800dba6:	b292      	uxth	r2, r2
 800dba8:	e7dd      	b.n	800db66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x8e>
 800dbaa:	2200      	movs	r2, #0
 800dbac:	e7db      	b.n	800db66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x8e>
 800dbae:	2000      	movs	r0, #0
 800dbb0:	440a      	add	r2, r1
 800dbb2:	8aa3      	ldrh	r3, [r4, #20]
 800dbb4:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800dbb8:	b292      	uxth	r2, r2
 800dbba:	8322      	strh	r2, [r4, #24]
 800dbbc:	4413      	add	r3, r2
 800dbbe:	f1b9 0f00 	cmp.w	r9, #0
 800dbc2:	d022      	beq.n	800dc0a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x132>
 800dbc4:	f1bb 0f00 	cmp.w	fp, #0
 800dbc8:	d102      	bne.n	800dbd0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf8>
 800dbca:	9901      	ldr	r1, [sp, #4]
 800dbcc:	b149      	cbz	r1, 800dbe2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x10a>
 800dbce:	b140      	cbz	r0, 800dbe2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x10a>
 800dbd0:	8ba1      	ldrh	r1, [r4, #28]
 800dbd2:	4419      	add	r1, r3
 800dbd4:	458c      	cmp	ip, r1
 800dbd6:	da12      	bge.n	800dbfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x126>
 800dbd8:	8a61      	ldrh	r1, [r4, #18]
 800dbda:	b181      	cbz	r1, 800dbfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x126>
 800dbdc:	4563      	cmp	r3, ip
 800dbde:	dd96      	ble.n	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dbe0:	e004      	b.n	800dbec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x114>
 800dbe2:	4563      	cmp	r3, ip
 800dbe4:	dd93      	ble.n	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dbe6:	8a63      	ldrh	r3, [r4, #18]
 800dbe8:	2b00      	cmp	r3, #0
 800dbea:	d090      	beq.n	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dbec:	2301      	movs	r3, #1
 800dbee:	77a3      	strb	r3, [r4, #30]
 800dbf0:	8ba2      	ldrh	r2, [r4, #28]
 800dbf2:	8b63      	ldrh	r3, [r4, #26]
 800dbf4:	4413      	add	r3, r2
 800dbf6:	8363      	strh	r3, [r4, #26]
 800dbf8:	b005      	add	sp, #20
 800dbfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbfe:	2300      	movs	r3, #0
 800dc00:	4611      	mov	r1, r2
 800dc02:	4620      	mov	r0, r4
 800dc04:	f7ff ff58 	bl	800dab8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800dc08:	e781      	b.n	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dc0a:	4563      	cmp	r3, ip
 800dc0c:	dd16      	ble.n	800dc3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x164>
 800dc0e:	9b00      	ldr	r3, [sp, #0]
 800dc10:	b113      	cbz	r3, 800dc18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800dc12:	2301      	movs	r3, #1
 800dc14:	460a      	mov	r2, r1
 800dc16:	e787      	b.n	800db28 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x50>
 800dc18:	2d00      	cmp	r5, #0
 800dc1a:	f43f af78 	beq.w	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dc1e:	2800      	cmp	r0, #0
 800dc20:	f47f af75 	bne.w	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dc24:	2f20      	cmp	r7, #32
 800dc26:	d001      	beq.n	800dc2c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x154>
 800dc28:	4547      	cmp	r7, r8
 800dc2a:	d102      	bne.n	800dc32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15a>
 800dc2c:	2301      	movs	r3, #1
 800dc2e:	4632      	mov	r2, r6
 800dc30:	e77b      	b.n	800db2a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x52>
 800dc32:	8a63      	ldrh	r3, [r4, #18]
 800dc34:	2b00      	cmp	r3, #0
 800dc36:	f43f af6a 	beq.w	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dc3a:	e7dd      	b.n	800dbf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x120>
 800dc3c:	2800      	cmp	r0, #0
 800dc3e:	f47f af66 	bne.w	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dc42:	2f20      	cmp	r7, #32
 800dc44:	d002      	beq.n	800dc4c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x174>
 800dc46:	4547      	cmp	r7, r8
 800dc48:	f47f af61 	bne.w	800db0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800dc4c:	2301      	movs	r3, #1
 800dc4e:	4632      	mov	r2, r6
 800dc50:	e7d7      	b.n	800dc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x12a>

0800dc52 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800dc52:	b570      	push	{r4, r5, r6, lr}
 800dc54:	4606      	mov	r6, r0
 800dc56:	b08a      	sub	sp, #40	; 0x28
 800dc58:	4615      	mov	r5, r2
 800dc5a:	b191      	cbz	r1, 800dc82 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x30>
 800dc5c:	e9cd 3100 	strd	r3, r1, [sp]
 800dc60:	4613      	mov	r3, r2
 800dc62:	4601      	mov	r1, r0
 800dc64:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800dc68:	a802      	add	r0, sp, #8
 800dc6a:	f7ff fd20 	bl	800d6ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800dc6e:	2401      	movs	r4, #1
 800dc70:	2100      	movs	r1, #0
 800dc72:	a802      	add	r0, sp, #8
 800dc74:	f7ff ff30 	bl	800dad8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800dc78:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800dc7c:	b173      	cbz	r3, 800dc9c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800dc7e:	3401      	adds	r4, #1
 800dc80:	e7f6      	b.n	800dc70 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1e>
 800dc82:	4611      	mov	r1, r2
 800dc84:	f002 f856 	bl	800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dc88:	2401      	movs	r4, #1
 800dc8a:	280a      	cmp	r0, #10
 800dc8c:	4629      	mov	r1, r5
 800dc8e:	4630      	mov	r0, r6
 800dc90:	bf08      	it	eq
 800dc92:	3401      	addeq	r4, #1
 800dc94:	f002 f84e 	bl	800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dc98:	2800      	cmp	r0, #0
 800dc9a:	d1f6      	bne.n	800dc8a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x38>
 800dc9c:	b2a0      	uxth	r0, r4
 800dc9e:	b00a      	add	sp, #40	; 0x28
 800dca0:	bd70      	pop	{r4, r5, r6, pc}

0800dca2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800dca2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dca6:	b0db      	sub	sp, #364	; 0x16c
 800dca8:	468a      	mov	sl, r1
 800dcaa:	f8dd b190 	ldr.w	fp, [sp, #400]	; 0x190
 800dcae:	9009      	str	r0, [sp, #36]	; 0x24
 800dcb0:	461c      	mov	r4, r3
 800dcb2:	f1bb 0f00 	cmp.w	fp, #0
 800dcb6:	f000 80c7 	beq.w	800de48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800dcba:	681b      	ldr	r3, [r3, #0]
 800dcbc:	2b00      	cmp	r3, #0
 800dcbe:	f000 80c3 	beq.w	800de48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800dcc2:	7ba3      	ldrb	r3, [r4, #14]
 800dcc4:	2b00      	cmp	r3, #0
 800dcc6:	f000 80bf 	beq.w	800de48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800dcca:	6810      	ldr	r0, [r2, #0]
 800dccc:	6851      	ldr	r1, [r2, #4]
 800dcce:	f9ba 2004 	ldrsh.w	r2, [sl, #4]
 800dcd2:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800dcd6:	af0c      	add	r7, sp, #48	; 0x30
 800dcd8:	463b      	mov	r3, r7
 800dcda:	c303      	stmia	r3!, {r0, r1}
 800dcdc:	2100      	movs	r1, #0
 800dcde:	f9ba 3006 	ldrsh.w	r3, [sl, #6]
 800dce2:	910e      	str	r1, [sp, #56]	; 0x38
 800dce4:	79a2      	ldrb	r2, [r4, #6]
 800dce6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800dcea:	a90e      	add	r1, sp, #56	; 0x38
 800dcec:	4638      	mov	r0, r7
 800dcee:	f7ff fd4a 	bl	800d786 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800dcf2:	a90e      	add	r1, sp, #56	; 0x38
 800dcf4:	4608      	mov	r0, r1
 800dcf6:	79a2      	ldrb	r2, [r4, #6]
 800dcf8:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 800dcfc:	f7ff fd43 	bl	800d786 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800dd00:	4648      	mov	r0, r9
 800dd02:	f001 fed5 	bl	800fab0 <_ZN8touchgfx12TextProviderC1Ev>
 800dd06:	6820      	ldr	r0, [r4, #0]
 800dd08:	6803      	ldr	r3, [r0, #0]
 800dd0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd0c:	4798      	blx	r3
 800dd0e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800dd10:	4603      	mov	r3, r0
 800dd12:	4659      	mov	r1, fp
 800dd14:	4648      	mov	r0, r9
 800dd16:	f001 fee8 	bl	800faea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dd1a:	a82e      	add	r0, sp, #184	; 0xb8
 800dd1c:	f001 fec8 	bl	800fab0 <_ZN8touchgfx12TextProviderC1Ev>
 800dd20:	f894 8004 	ldrb.w	r8, [r4, #4]
 800dd24:	f1b8 0f00 	cmp.w	r8, #0
 800dd28:	d009      	beq.n	800dd3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800dd2a:	6820      	ldr	r0, [r4, #0]
 800dd2c:	6803      	ldr	r3, [r0, #0]
 800dd2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd30:	4798      	blx	r3
 800dd32:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800dd34:	4603      	mov	r3, r0
 800dd36:	4659      	mov	r1, fp
 800dd38:	a82e      	add	r0, sp, #184	; 0xb8
 800dd3a:	f001 fed6 	bl	800faea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dd3e:	6820      	ldr	r0, [r4, #0]
 800dd40:	6803      	ldr	r3, [r0, #0]
 800dd42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dd44:	4798      	blx	r3
 800dd46:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800dd4a:	182e      	adds	r6, r5, r0
 800dd4c:	2e00      	cmp	r6, #0
 800dd4e:	dd45      	ble.n	800dddc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13a>
 800dd50:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dd54:	4283      	cmp	r3, r0
 800dd56:	db41      	blt.n	800dddc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13a>
 800dd58:	441d      	add	r5, r3
 800dd5a:	fb95 f5f6 	sdiv	r5, r5, r6
 800dd5e:	a844      	add	r0, sp, #272	; 0x110
 800dd60:	f001 fea6 	bl	800fab0 <_ZN8touchgfx12TextProviderC1Ev>
 800dd64:	7c23      	ldrb	r3, [r4, #16]
 800dd66:	b14b      	cbz	r3, 800dd7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xda>
 800dd68:	6820      	ldr	r0, [r4, #0]
 800dd6a:	6803      	ldr	r3, [r0, #0]
 800dd6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd6e:	4798      	blx	r3
 800dd70:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800dd72:	4603      	mov	r3, r0
 800dd74:	4659      	mov	r1, fp
 800dd76:	a844      	add	r0, sp, #272	; 0x110
 800dd78:	f001 feb7 	bl	800faea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dd7c:	7c21      	ldrb	r1, [r4, #16]
 800dd7e:	9101      	str	r1, [sp, #4]
 800dd80:	6821      	ldr	r1, [r4, #0]
 800dd82:	7963      	ldrb	r3, [r4, #5]
 800dd84:	9100      	str	r1, [sp, #0]
 800dd86:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800dd8a:	a944      	add	r1, sp, #272	; 0x110
 800dd8c:	a810      	add	r0, sp, #64	; 0x40
 800dd8e:	f7ff fc8e 	bl	800d6ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800dd92:	7c23      	ldrb	r3, [r4, #16]
 800dd94:	bb23      	cbnz	r3, 800dde0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13e>
 800dd96:	fa1f fb86 	uxth.w	fp, r6
 800dd9a:	2d00      	cmp	r5, #0
 800dd9c:	dd57      	ble.n	800de4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ac>
 800dd9e:	7961      	ldrb	r1, [r4, #5]
 800dda0:	4648      	mov	r0, r9
 800dda2:	f001 ffc7 	bl	800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800dda6:	4603      	mov	r3, r0
 800dda8:	f1b8 0f00 	cmp.w	r8, #0
 800ddac:	d005      	beq.n	800ddba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x118>
 800ddae:	9008      	str	r0, [sp, #32]
 800ddb0:	7961      	ldrb	r1, [r4, #5]
 800ddb2:	a82e      	add	r0, sp, #184	; 0xb8
 800ddb4:	f001 ffbe 	bl	800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ddb8:	9b08      	ldr	r3, [sp, #32]
 800ddba:	2b00      	cmp	r3, #0
 800ddbc:	d044      	beq.n	800de48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800ddbe:	2b0a      	cmp	r3, #10
 800ddc0:	d1eb      	bne.n	800dd9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf8>
 800ddc2:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800ddc6:	445b      	add	r3, fp
 800ddc8:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800ddcc:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800ddd0:	eba3 030b 	sub.w	r3, r3, fp
 800ddd4:	3d01      	subs	r5, #1
 800ddd6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ddda:	e7de      	b.n	800dd9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf8>
 800dddc:	2500      	movs	r5, #0
 800ddde:	e7be      	b.n	800dd5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xbc>
 800dde0:	0073      	lsls	r3, r6, #1
 800dde2:	9308      	str	r3, [sp, #32]
 800dde4:	2d00      	cmp	r5, #0
 800dde6:	dd32      	ble.n	800de4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ac>
 800dde8:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800ddec:	9b08      	ldr	r3, [sp, #32]
 800ddee:	428b      	cmp	r3, r1
 800ddf0:	bfd4      	ite	le
 800ddf2:	2100      	movle	r1, #0
 800ddf4:	2101      	movgt	r1, #1
 800ddf6:	a810      	add	r0, sp, #64	; 0x40
 800ddf8:	f7ff fe6e 	bl	800dad8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ddfc:	f8bd b052 	ldrh.w	fp, [sp, #82]	; 0x52
 800de00:	f10b 33ff 	add.w	r3, fp, #4294967295
 800de04:	fa1f fb83 	uxth.w	fp, r3
 800de08:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800de0c:	459b      	cmp	fp, r3
 800de0e:	d00b      	beq.n	800de28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800de10:	7961      	ldrb	r1, [r4, #5]
 800de12:	4648      	mov	r0, r9
 800de14:	f001 ff8e 	bl	800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800de18:	f1b8 0f00 	cmp.w	r8, #0
 800de1c:	d0f0      	beq.n	800de00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15e>
 800de1e:	7961      	ldrb	r1, [r4, #5]
 800de20:	a82e      	add	r0, sp, #184	; 0xb8
 800de22:	f001 ff87 	bl	800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800de26:	e7eb      	b.n	800de00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15e>
 800de28:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 800de2c:	b2b3      	uxth	r3, r6
 800de2e:	441a      	add	r2, r3
 800de30:	f8ad 203a 	strh.w	r2, [sp, #58]	; 0x3a
 800de34:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800de38:	1ad3      	subs	r3, r2, r3
 800de3a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800de3e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800de42:	3d01      	subs	r5, #1
 800de44:	2b00      	cmp	r3, #0
 800de46:	d1cd      	bne.n	800dde4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800de48:	b05b      	add	sp, #364	; 0x16c
 800de4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de4e:	ea4f 0b46 	mov.w	fp, r6, lsl #1
 800de52:	f10d 052e 	add.w	r5, sp, #46	; 0x2e
 800de56:	7c23      	ldrb	r3, [r4, #16]
 800de58:	2b00      	cmp	r3, #0
 800de5a:	d05f      	beq.n	800df1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x27a>
 800de5c:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800de60:	458b      	cmp	fp, r1
 800de62:	bfd4      	ite	le
 800de64:	2100      	movle	r1, #0
 800de66:	2101      	movgt	r1, #1
 800de68:	a810      	add	r0, sp, #64	; 0x40
 800de6a:	f7ff fe35 	bl	800dad8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800de6e:	f1b8 0f00 	cmp.w	r8, #0
 800de72:	d04c      	beq.n	800df0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800de74:	7c23      	ldrb	r3, [r4, #16]
 800de76:	2b00      	cmp	r3, #0
 800de78:	d053      	beq.n	800df22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x280>
 800de7a:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800de7e:	7922      	ldrb	r2, [r4, #4]
 800de80:	2a01      	cmp	r2, #1
 800de82:	d13c      	bne.n	800defe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800de84:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800de88:	1ac0      	subs	r0, r0, r3
 800de8a:	2302      	movs	r3, #2
 800de8c:	fb90 f0f3 	sdiv	r0, r0, r3
 800de90:	b200      	sxth	r0, r0
 800de92:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800de96:	4418      	add	r0, r3
 800de98:	7c23      	ldrb	r3, [r4, #16]
 800de9a:	8028      	strh	r0, [r5, #0]
 800de9c:	2b00      	cmp	r3, #0
 800de9e:	d03a      	beq.n	800df16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x274>
 800dea0:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800dea4:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800dea8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800deac:	f8cd 9010 	str.w	r9, [sp, #16]
 800deb0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800deb4:	2200      	movs	r2, #0
 800deb6:	e9cd 4202 	strd	r4, r2, [sp, #8]
 800deba:	e9cd 5700 	strd	r5, r7, [sp]
 800debe:	4652      	mov	r2, sl
 800dec0:	2100      	movs	r1, #0
 800dec2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800dec4:	f7ff fcb0 	bl	800d828 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800dec8:	2800      	cmp	r0, #0
 800deca:	d1bd      	bne.n	800de48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800decc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800ded0:	b2b2      	uxth	r2, r6
 800ded2:	4611      	mov	r1, r2
 800ded4:	4413      	add	r3, r2
 800ded6:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800deda:	1a52      	subs	r2, r2, r1
 800dedc:	7c21      	ldrb	r1, [r4, #16]
 800dede:	b21b      	sxth	r3, r3
 800dee0:	b212      	sxth	r2, r2
 800dee2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800dee6:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800deea:	b109      	cbz	r1, 800def0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800deec:	42b2      	cmp	r2, r6
 800deee:	dbab      	blt.n	800de48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800def0:	887a      	ldrh	r2, [r7, #2]
 800def2:	88f9      	ldrh	r1, [r7, #6]
 800def4:	440a      	add	r2, r1
 800def6:	b212      	sxth	r2, r2
 800def8:	4293      	cmp	r3, r2
 800defa:	ddac      	ble.n	800de56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b4>
 800defc:	e7a4      	b.n	800de48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800defe:	2a02      	cmp	r2, #2
 800df00:	d107      	bne.n	800df12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800df02:	7be2      	ldrb	r2, [r4, #15]
 800df04:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800df08:	1a80      	subs	r0, r0, r2
 800df0a:	1ac0      	subs	r0, r0, r3
 800df0c:	e7c0      	b.n	800de90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 800df0e:	7be0      	ldrb	r0, [r4, #15]
 800df10:	e7bf      	b.n	800de92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1f0>
 800df12:	2000      	movs	r0, #0
 800df14:	e7bd      	b.n	800de92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1f0>
 800df16:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800df1a:	e7c3      	b.n	800dea4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x202>
 800df1c:	f1b8 0f00 	cmp.w	r8, #0
 800df20:	d0f5      	beq.n	800df0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800df22:	2300      	movs	r3, #0
 800df24:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800df28:	6821      	ldr	r1, [r4, #0]
 800df2a:	a82e      	add	r0, sp, #184	; 0xb8
 800df2c:	f7ff fbf9 	bl	800d722 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800df30:	b203      	sxth	r3, r0
 800df32:	e7a4      	b.n	800de7e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>

0800df34 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800df34:	b510      	push	{r4, lr}
 800df36:	2b02      	cmp	r3, #2
 800df38:	f9b0 4000 	ldrsh.w	r4, [r0]
 800df3c:	d00b      	beq.n	800df56 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800df3e:	2b03      	cmp	r3, #3
 800df40:	d00e      	beq.n	800df60 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800df42:	2b01      	cmp	r3, #1
 800df44:	d001      	beq.n	800df4a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800df46:	1860      	adds	r0, r4, r1
 800df48:	bd10      	pop	{r4, pc}
 800df4a:	8880      	ldrh	r0, [r0, #4]
 800df4c:	4420      	add	r0, r4
 800df4e:	b200      	sxth	r0, r0
 800df50:	1a80      	subs	r0, r0, r2
 800df52:	3801      	subs	r0, #1
 800df54:	e7f8      	b.n	800df48 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800df56:	8880      	ldrh	r0, [r0, #4]
 800df58:	4420      	add	r0, r4
 800df5a:	b200      	sxth	r0, r0
 800df5c:	1a40      	subs	r0, r0, r1
 800df5e:	e7f8      	b.n	800df52 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800df60:	18a0      	adds	r0, r4, r2
 800df62:	e7f1      	b.n	800df48 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800df64 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800df64:	b510      	push	{r4, lr}
 800df66:	2b02      	cmp	r3, #2
 800df68:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800df6c:	d006      	beq.n	800df7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800df6e:	2b03      	cmp	r3, #3
 800df70:	d00a      	beq.n	800df88 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800df72:	2b01      	cmp	r3, #1
 800df74:	bf14      	ite	ne
 800df76:	18a0      	addne	r0, r4, r2
 800df78:	1860      	addeq	r0, r4, r1
 800df7a:	bd10      	pop	{r4, pc}
 800df7c:	88c0      	ldrh	r0, [r0, #6]
 800df7e:	4420      	add	r0, r4
 800df80:	b200      	sxth	r0, r0
 800df82:	1a80      	subs	r0, r0, r2
 800df84:	3801      	subs	r0, #1
 800df86:	e7f8      	b.n	800df7a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800df88:	88c0      	ldrh	r0, [r0, #6]
 800df8a:	4420      	add	r0, r4
 800df8c:	b200      	sxth	r0, r0
 800df8e:	1a40      	subs	r0, r0, r1
 800df90:	e7f8      	b.n	800df84 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800df94 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800df94:	4b01      	ldr	r3, [pc, #4]	; (800df9c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800df96:	2200      	movs	r2, #0
 800df98:	601a      	str	r2, [r3, #0]
 800df9a:	4770      	bx	lr
 800df9c:	200017a8 	.word	0x200017a8

0800dfa0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800dfa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfa2:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800dfa6:	1e05      	subs	r5, r0, #0
 800dfa8:	bfba      	itte	lt
 800dfaa:	f04f 37ff 	movlt.w	r7, #4294967295
 800dfae:	426d      	neglt	r5, r5
 800dfb0:	2701      	movge	r7, #1
 800dfb2:	f1be 0f00 	cmp.w	lr, #0
 800dfb6:	bfb8      	it	lt
 800dfb8:	f1ce 0e00 	rsblt	lr, lr, #0
 800dfbc:	f04f 0601 	mov.w	r6, #1
 800dfc0:	fa4e f001 	asr.w	r0, lr, r1
 800dfc4:	fa06 f101 	lsl.w	r1, r6, r1
 800dfc8:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800dfcc:	f101 31ff 	add.w	r1, r1, #4294967295
 800dfd0:	ea01 010e 	and.w	r1, r1, lr
 800dfd4:	bfb8      	it	lt
 800dfd6:	427f      	neglt	r7, r7
 800dfd8:	434d      	muls	r5, r1
 800dfda:	2c00      	cmp	r4, #0
 800dfdc:	f8dc 1000 	ldr.w	r1, [ip]
 800dfe0:	bfb8      	it	lt
 800dfe2:	4264      	neglt	r4, r4
 800dfe4:	fb03 1300 	mla	r3, r3, r0, r1
 800dfe8:	fb95 f1f4 	sdiv	r1, r5, r4
 800dfec:	fb04 5511 	mls	r5, r4, r1, r5
 800dff0:	441d      	add	r5, r3
 800dff2:	fb95 f3f4 	sdiv	r3, r5, r4
 800dff6:	fb04 5413 	mls	r4, r4, r3, r5
 800dffa:	4419      	add	r1, r3
 800dffc:	bfb8      	it	lt
 800dffe:	427f      	neglt	r7, r7
 800e000:	fb02 1000 	mla	r0, r2, r0, r1
 800e004:	f8cc 4000 	str.w	r4, [ip]
 800e008:	4378      	muls	r0, r7
 800e00a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e00c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800e00c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e010:	4c24      	ldr	r4, [pc, #144]	; (800e0a4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800e012:	6807      	ldr	r7, [r0, #0]
 800e014:	69a3      	ldr	r3, [r4, #24]
 800e016:	b086      	sub	sp, #24
 800e018:	4605      	mov	r5, r0
 800e01a:	b92b      	cbnz	r3, 800e028 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800e01c:	6840      	ldr	r0, [r0, #4]
 800e01e:	e9c5 7000 	strd	r7, r0, [r5]
 800e022:	b006      	add	sp, #24
 800e024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e028:	68a2      	ldr	r2, [r4, #8]
 800e02a:	6820      	ldr	r0, [r4, #0]
 800e02c:	ae06      	add	r6, sp, #24
 800e02e:	f04f 0802 	mov.w	r8, #2
 800e032:	fb93 f1f8 	sdiv	r1, r3, r8
 800e036:	440a      	add	r2, r1
 800e038:	f846 2d04 	str.w	r2, [r6, #-4]!
 800e03c:	69e1      	ldr	r1, [r4, #28]
 800e03e:	9700      	str	r7, [sp, #0]
 800e040:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800e044:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e046:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e048:	f7ff ffaa 	bl	800dfa0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800e04c:	69a3      	ldr	r3, [r4, #24]
 800e04e:	9301      	str	r3, [sp, #4]
 800e050:	686b      	ldr	r3, [r5, #4]
 800e052:	9300      	str	r3, [sp, #0]
 800e054:	4607      	mov	r7, r0
 800e056:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e058:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e05a:	6a21      	ldr	r1, [r4, #32]
 800e05c:	9602      	str	r6, [sp, #8]
 800e05e:	6860      	ldr	r0, [r4, #4]
 800e060:	f7ff ff9e 	bl	800dfa0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800e064:	6963      	ldr	r3, [r4, #20]
 800e066:	69a2      	ldr	r2, [r4, #24]
 800e068:	fb92 f8f8 	sdiv	r8, r2, r8
 800e06c:	4443      	add	r3, r8
 800e06e:	9305      	str	r3, [sp, #20]
 800e070:	682b      	ldr	r3, [r5, #0]
 800e072:	9300      	str	r3, [sp, #0]
 800e074:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800e078:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e07a:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800e07c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e07e:	4407      	add	r7, r0
 800e080:	68e0      	ldr	r0, [r4, #12]
 800e082:	f7ff ff8d 	bl	800dfa0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800e086:	69a3      	ldr	r3, [r4, #24]
 800e088:	9301      	str	r3, [sp, #4]
 800e08a:	686b      	ldr	r3, [r5, #4]
 800e08c:	9300      	str	r3, [sp, #0]
 800e08e:	4680      	mov	r8, r0
 800e090:	9602      	str	r6, [sp, #8]
 800e092:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800e094:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e096:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800e098:	6920      	ldr	r0, [r4, #16]
 800e09a:	f7ff ff81 	bl	800dfa0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800e09e:	4440      	add	r0, r8
 800e0a0:	e7bd      	b.n	800e01e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800e0a2:	bf00      	nop
 800e0a4:	200017ac 	.word	0x200017ac

0800e0a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800e0a8:	b510      	push	{r4, lr}
 800e0aa:	4b07      	ldr	r3, [pc, #28]	; (800e0c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800e0ac:	781b      	ldrb	r3, [r3, #0]
 800e0ae:	2b01      	cmp	r3, #1
 800e0b0:	d108      	bne.n	800e0c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800e0b2:	4b06      	ldr	r3, [pc, #24]	; (800e0cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800e0b4:	880c      	ldrh	r4, [r1, #0]
 800e0b6:	881b      	ldrh	r3, [r3, #0]
 800e0b8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800e0bc:	3b01      	subs	r3, #1
 800e0be:	1b1b      	subs	r3, r3, r4
 800e0c0:	8003      	strh	r3, [r0, #0]
 800e0c2:	800a      	strh	r2, [r1, #0]
 800e0c4:	bd10      	pop	{r4, pc}
 800e0c6:	bf00      	nop
 800e0c8:	20001798 	.word	0x20001798
 800e0cc:	2000179c 	.word	0x2000179c

0800e0d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800e0d0:	b510      	push	{r4, lr}
 800e0d2:	4b0a      	ldr	r3, [pc, #40]	; (800e0fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800e0d4:	781b      	ldrb	r3, [r3, #0]
 800e0d6:	2b01      	cmp	r3, #1
 800e0d8:	d10e      	bne.n	800e0f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800e0da:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800e0de:	8843      	ldrh	r3, [r0, #2]
 800e0e0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e0e4:	8044      	strh	r4, [r0, #2]
 800e0e6:	18ca      	adds	r2, r1, r3
 800e0e8:	4b05      	ldr	r3, [pc, #20]	; (800e100 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800e0ea:	881b      	ldrh	r3, [r3, #0]
 800e0ec:	1a9b      	subs	r3, r3, r2
 800e0ee:	8003      	strh	r3, [r0, #0]
 800e0f0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e0f4:	80c3      	strh	r3, [r0, #6]
 800e0f6:	8081      	strh	r1, [r0, #4]
 800e0f8:	bd10      	pop	{r4, pc}
 800e0fa:	bf00      	nop
 800e0fc:	20001798 	.word	0x20001798
 800e100:	20001794 	.word	0x20001794

0800e104 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800e104:	b510      	push	{r4, lr}
 800e106:	4b07      	ldr	r3, [pc, #28]	; (800e124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800e108:	781b      	ldrb	r3, [r3, #0]
 800e10a:	2b01      	cmp	r3, #1
 800e10c:	d108      	bne.n	800e120 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800e10e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e112:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e116:	8003      	strh	r3, [r0, #0]
 800e118:	8893      	ldrh	r3, [r2, #4]
 800e11a:	3b01      	subs	r3, #1
 800e11c:	1b1b      	subs	r3, r3, r4
 800e11e:	800b      	strh	r3, [r1, #0]
 800e120:	bd10      	pop	{r4, pc}
 800e122:	bf00      	nop
 800e124:	20001798 	.word	0x20001798

0800e128 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800e128:	b513      	push	{r0, r1, r4, lr}
 800e12a:	4b08      	ldr	r3, [pc, #32]	; (800e14c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800e12c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e130:	4b07      	ldr	r3, [pc, #28]	; (800e150 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800e132:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e136:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e13a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e13e:	2400      	movs	r4, #0
 800e140:	466a      	mov	r2, sp
 800e142:	9400      	str	r4, [sp, #0]
 800e144:	f7ff ffde 	bl	800e104 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800e148:	b002      	add	sp, #8
 800e14a:	bd10      	pop	{r4, pc}
 800e14c:	20001794 	.word	0x20001794
 800e150:	20001796 	.word	0x20001796

0800e154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800e154:	b510      	push	{r4, lr}
 800e156:	4b0a      	ldr	r3, [pc, #40]	; (800e180 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800e158:	781b      	ldrb	r3, [r3, #0]
 800e15a:	2b01      	cmp	r3, #1
 800e15c:	460a      	mov	r2, r1
 800e15e:	d10d      	bne.n	800e17c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800e160:	8881      	ldrh	r1, [r0, #4]
 800e162:	8803      	ldrh	r3, [r0, #0]
 800e164:	440b      	add	r3, r1
 800e166:	4601      	mov	r1, r0
 800e168:	3b01      	subs	r3, #1
 800e16a:	f821 3b02 	strh.w	r3, [r1], #2
 800e16e:	f7ff ffc9 	bl	800e104 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800e172:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e176:	88c2      	ldrh	r2, [r0, #6]
 800e178:	8082      	strh	r2, [r0, #4]
 800e17a:	80c3      	strh	r3, [r0, #6]
 800e17c:	bd10      	pop	{r4, pc}
 800e17e:	bf00      	nop
 800e180:	20001798 	.word	0x20001798

0800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800e184:	b507      	push	{r0, r1, r2, lr}
 800e186:	4b09      	ldr	r3, [pc, #36]	; (800e1ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800e188:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e18c:	4b08      	ldr	r3, [pc, #32]	; (800e1b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800e18e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e192:	2100      	movs	r1, #0
 800e194:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e198:	9100      	str	r1, [sp, #0]
 800e19a:	4669      	mov	r1, sp
 800e19c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e1a0:	f7ff ffd8 	bl	800e154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800e1a4:	b003      	add	sp, #12
 800e1a6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e1aa:	bf00      	nop
 800e1ac:	20001794 	.word	0x20001794
 800e1b0:	20001796 	.word	0x20001796

0800e1b4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800e1b4:	4b03      	ldr	r3, [pc, #12]	; (800e1c4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800e1b6:	6818      	ldr	r0, [r3, #0]
 800e1b8:	b110      	cbz	r0, 800e1c0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800e1ba:	6803      	ldr	r3, [r0, #0]
 800e1bc:	699b      	ldr	r3, [r3, #24]
 800e1be:	4718      	bx	r3
 800e1c0:	4770      	bx	lr
 800e1c2:	bf00      	nop
 800e1c4:	200017fc 	.word	0x200017fc

0800e1c8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800e1c8:	4770      	bx	lr
	...

0800e1cc <_ZN8touchgfx11Application4drawEv>:
 800e1cc:	b507      	push	{r0, r1, r2, lr}
 800e1ce:	4b09      	ldr	r3, [pc, #36]	; (800e1f4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800e1d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e1d4:	4b08      	ldr	r3, [pc, #32]	; (800e1f8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800e1d6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e1da:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e1de:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e1e2:	6803      	ldr	r3, [r0, #0]
 800e1e4:	2100      	movs	r1, #0
 800e1e6:	9100      	str	r1, [sp, #0]
 800e1e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e1ea:	4669      	mov	r1, sp
 800e1ec:	4798      	blx	r3
 800e1ee:	b003      	add	sp, #12
 800e1f0:	f85d fb04 	ldr.w	pc, [sp], #4
 800e1f4:	20001794 	.word	0x20001794
 800e1f8:	20001796 	.word	0x20001796

0800e1fc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800e1fc:	4b03      	ldr	r3, [pc, #12]	; (800e20c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800e1fe:	6818      	ldr	r0, [r3, #0]
 800e200:	b110      	cbz	r0, 800e208 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800e202:	6803      	ldr	r3, [r0, #0]
 800e204:	69db      	ldr	r3, [r3, #28]
 800e206:	4718      	bx	r3
 800e208:	4770      	bx	lr
 800e20a:	bf00      	nop
 800e20c:	200017fc 	.word	0x200017fc

0800e210 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800e210:	4b03      	ldr	r3, [pc, #12]	; (800e220 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800e212:	6818      	ldr	r0, [r3, #0]
 800e214:	b110      	cbz	r0, 800e21c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800e216:	6803      	ldr	r3, [r0, #0]
 800e218:	6a1b      	ldr	r3, [r3, #32]
 800e21a:	4718      	bx	r3
 800e21c:	4770      	bx	lr
 800e21e:	bf00      	nop
 800e220:	200017fc 	.word	0x200017fc

0800e224 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800e224:	4b03      	ldr	r3, [pc, #12]	; (800e234 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800e226:	6818      	ldr	r0, [r3, #0]
 800e228:	b110      	cbz	r0, 800e230 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800e22a:	6803      	ldr	r3, [r0, #0]
 800e22c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e22e:	4718      	bx	r3
 800e230:	4770      	bx	lr
 800e232:	bf00      	nop
 800e234:	200017fc 	.word	0x200017fc

0800e238 <_ZN8touchgfx11Application15handleTickEventEv>:
 800e238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e23c:	4d3a      	ldr	r5, [pc, #232]	; (800e328 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800e23e:	4604      	mov	r4, r0
 800e240:	6828      	ldr	r0, [r5, #0]
 800e242:	b140      	cbz	r0, 800e256 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800e244:	7a03      	ldrb	r3, [r0, #8]
 800e246:	b933      	cbnz	r3, 800e256 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800e248:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800e24c:	6803      	ldr	r3, [r0, #0]
 800e24e:	689b      	ldr	r3, [r3, #8]
 800e250:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e254:	4718      	bx	r3
 800e256:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
 800e25a:	b97b      	cbnz	r3, 800e27c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800e25c:	b170      	cbz	r0, 800e27c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800e25e:	7a03      	ldrb	r3, [r0, #8]
 800e260:	b163      	cbz	r3, 800e27c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800e262:	4b32      	ldr	r3, [pc, #200]	; (800e32c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800e264:	6818      	ldr	r0, [r3, #0]
 800e266:	b110      	cbz	r0, 800e26e <_ZN8touchgfx11Application15handleTickEventEv+0x36>
 800e268:	6803      	ldr	r3, [r0, #0]
 800e26a:	691b      	ldr	r3, [r3, #16]
 800e26c:	4798      	blx	r3
 800e26e:	6828      	ldr	r0, [r5, #0]
 800e270:	6803      	ldr	r3, [r0, #0]
 800e272:	68db      	ldr	r3, [r3, #12]
 800e274:	4798      	blx	r3
 800e276:	2301      	movs	r3, #1
 800e278:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800e27c:	2500      	movs	r5, #0
 800e27e:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800e282:	42a8      	cmp	r0, r5
 800e284:	dd0c      	ble.n	800e2a0 <_ZN8touchgfx11Application15handleTickEventEv+0x68>
 800e286:	1963      	adds	r3, r4, r5
 800e288:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800e28c:	b132      	cbz	r2, 800e29c <_ZN8touchgfx11Application15handleTickEventEv+0x64>
 800e28e:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800e292:	4413      	add	r3, r2
 800e294:	6858      	ldr	r0, [r3, #4]
 800e296:	6803      	ldr	r3, [r0, #0]
 800e298:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e29a:	4798      	blx	r3
 800e29c:	3501      	adds	r5, #1
 800e29e:	e7ee      	b.n	800e27e <_ZN8touchgfx11Application15handleTickEventEv+0x46>
 800e2a0:	f5c4 467f 	rsb	r6, r4, #65280	; 0xff00
 800e2a4:	3801      	subs	r0, #1
 800e2a6:	3678      	adds	r6, #120	; 0x78
 800e2a8:	f04f 0c00 	mov.w	ip, #0
 800e2ac:	1c43      	adds	r3, r0, #1
 800e2ae:	d033      	beq.n	800e318 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800e2b0:	1823      	adds	r3, r4, r0
 800e2b2:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800e2b6:	bb6a      	cbnz	r2, 800e314 <_ZN8touchgfx11Application15handleTickEventEv+0xdc>
 800e2b8:	b281      	uxth	r1, r0
 800e2ba:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800e2be:	1d25      	adds	r5, r4, #4
 800e2c0:	f8d3 9004 	ldr.w	r9, [r3, #4]
 800e2c4:	f8b4 3084 	ldrh.w	r3, [r4, #132]	; 0x84
 800e2c8:	4293      	cmp	r3, r2
 800e2ca:	dc0a      	bgt.n	800e2e2 <_ZN8touchgfx11Application15handleTickEventEv+0xaa>
 800e2cc:	f101 0288 	add.w	r2, r1, #136	; 0x88
 800e2d0:	4422      	add	r2, r4
 800e2d2:	18b1      	adds	r1, r6, r2
 800e2d4:	b289      	uxth	r1, r1
 800e2d6:	428b      	cmp	r3, r1
 800e2d8:	d919      	bls.n	800e30e <_ZN8touchgfx11Application15handleTickEventEv+0xd6>
 800e2da:	7851      	ldrb	r1, [r2, #1]
 800e2dc:	f802 1b01 	strb.w	r1, [r2], #1
 800e2e0:	e7f7      	b.n	800e2d2 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800e2e2:	682f      	ldr	r7, [r5, #0]
 800e2e4:	45b9      	cmp	r9, r7
 800e2e6:	f105 0804 	add.w	r8, r5, #4
 800e2ea:	d10d      	bne.n	800e308 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>
 800e2ec:	4696      	mov	lr, r2
 800e2ee:	f1be 0f1e 	cmp.w	lr, #30
 800e2f2:	dc06      	bgt.n	800e302 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800e2f4:	f10e 0e01 	add.w	lr, lr, #1
 800e2f8:	686f      	ldr	r7, [r5, #4]
 800e2fa:	f845 7b04 	str.w	r7, [r5], #4
 800e2fe:	4573      	cmp	r3, lr
 800e300:	dcf5      	bgt.n	800e2ee <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800e302:	3b01      	subs	r3, #1
 800e304:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800e308:	3201      	adds	r2, #1
 800e30a:	4645      	mov	r5, r8
 800e30c:	e7da      	b.n	800e2c4 <_ZN8touchgfx11Application15handleTickEventEv+0x8c>
 800e30e:	4423      	add	r3, r4
 800e310:	f883 c088 	strb.w	ip, [r3, #136]	; 0x88
 800e314:	3801      	subs	r0, #1
 800e316:	e7c9      	b.n	800e2ac <_ZN8touchgfx11Application15handleTickEventEv+0x74>
 800e318:	4b04      	ldr	r3, [pc, #16]	; (800e32c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800e31a:	6818      	ldr	r0, [r3, #0]
 800e31c:	b110      	cbz	r0, 800e324 <_ZN8touchgfx11Application15handleTickEventEv+0xec>
 800e31e:	6803      	ldr	r3, [r0, #0]
 800e320:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e322:	e795      	b.n	800e250 <_ZN8touchgfx11Application15handleTickEventEv+0x18>
 800e324:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e328:	20001800 	.word	0x20001800
 800e32c:	200017fc 	.word	0x200017fc

0800e330 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800e330:	b570      	push	{r4, r5, r6, lr}
 800e332:	4606      	mov	r6, r0
 800e334:	460c      	mov	r4, r1
 800e336:	b929      	cbnz	r1, 800e344 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800e338:	4b0c      	ldr	r3, [pc, #48]	; (800e36c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800e33a:	4a0d      	ldr	r2, [pc, #52]	; (800e370 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800e33c:	480d      	ldr	r0, [pc, #52]	; (800e374 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800e33e:	2164      	movs	r1, #100	; 0x64
 800e340:	f00d fb24 	bl	801b98c <__assert_func>
 800e344:	4d0c      	ldr	r5, [pc, #48]	; (800e378 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800e346:	2300      	movs	r3, #0
 800e348:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800e34c:	6828      	ldr	r0, [r5, #0]
 800e34e:	b110      	cbz	r0, 800e356 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800e350:	6803      	ldr	r3, [r0, #0]
 800e352:	695b      	ldr	r3, [r3, #20]
 800e354:	4798      	blx	r3
 800e356:	602c      	str	r4, [r5, #0]
 800e358:	6823      	ldr	r3, [r4, #0]
 800e35a:	4620      	mov	r0, r4
 800e35c:	68db      	ldr	r3, [r3, #12]
 800e35e:	4798      	blx	r3
 800e360:	6833      	ldr	r3, [r6, #0]
 800e362:	4630      	mov	r0, r6
 800e364:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e366:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e36a:	4718      	bx	r3
 800e36c:	080201cc 	.word	0x080201cc
 800e370:	08020294 	.word	0x08020294
 800e374:	080201d6 	.word	0x080201d6
 800e378:	200017fc 	.word	0x200017fc

0800e37c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800e37c:	b510      	push	{r4, lr}
 800e37e:	f9b1 4000 	ldrsh.w	r4, [r1]
 800e382:	888a      	ldrh	r2, [r1, #4]
 800e384:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e388:	4422      	add	r2, r4
 800e38a:	b212      	sxth	r2, r2
 800e38c:	4293      	cmp	r3, r2
 800e38e:	da15      	bge.n	800e3bc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e390:	8882      	ldrh	r2, [r0, #4]
 800e392:	4413      	add	r3, r2
 800e394:	b21b      	sxth	r3, r3
 800e396:	429c      	cmp	r4, r3
 800e398:	da10      	bge.n	800e3bc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e39a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e39e:	88c9      	ldrh	r1, [r1, #6]
 800e3a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800e3a4:	4419      	add	r1, r3
 800e3a6:	b209      	sxth	r1, r1
 800e3a8:	428a      	cmp	r2, r1
 800e3aa:	da07      	bge.n	800e3bc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e3ac:	88c0      	ldrh	r0, [r0, #6]
 800e3ae:	4410      	add	r0, r2
 800e3b0:	b200      	sxth	r0, r0
 800e3b2:	4283      	cmp	r3, r0
 800e3b4:	bfac      	ite	ge
 800e3b6:	2000      	movge	r0, #0
 800e3b8:	2001      	movlt	r0, #1
 800e3ba:	bd10      	pop	{r4, pc}
 800e3bc:	2000      	movs	r0, #0
 800e3be:	e7fc      	b.n	800e3ba <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800e3c0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800e3c0:	b570      	push	{r4, r5, r6, lr}
 800e3c2:	f9b1 4000 	ldrsh.w	r4, [r1]
 800e3c6:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e3ca:	42ac      	cmp	r4, r5
 800e3cc:	db18      	blt.n	800e400 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800e3ce:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800e3d2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e3d6:	429a      	cmp	r2, r3
 800e3d8:	db12      	blt.n	800e400 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800e3da:	8886      	ldrh	r6, [r0, #4]
 800e3dc:	4435      	add	r5, r6
 800e3de:	888e      	ldrh	r6, [r1, #4]
 800e3e0:	4434      	add	r4, r6
 800e3e2:	b22d      	sxth	r5, r5
 800e3e4:	b224      	sxth	r4, r4
 800e3e6:	42a5      	cmp	r5, r4
 800e3e8:	db0a      	blt.n	800e400 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800e3ea:	88c0      	ldrh	r0, [r0, #6]
 800e3ec:	4418      	add	r0, r3
 800e3ee:	88cb      	ldrh	r3, [r1, #6]
 800e3f0:	441a      	add	r2, r3
 800e3f2:	b200      	sxth	r0, r0
 800e3f4:	b212      	sxth	r2, r2
 800e3f6:	4290      	cmp	r0, r2
 800e3f8:	bfb4      	ite	lt
 800e3fa:	2000      	movlt	r0, #0
 800e3fc:	2001      	movge	r0, #1
 800e3fe:	bd70      	pop	{r4, r5, r6, pc}
 800e400:	2000      	movs	r0, #0
 800e402:	e7fc      	b.n	800e3fe <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800e404 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800e404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e406:	4604      	mov	r4, r0
 800e408:	4608      	mov	r0, r1
 800e40a:	460d      	mov	r5, r1
 800e40c:	f7fd fe5e 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e410:	b978      	cbnz	r0, 800e432 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800e412:	4620      	mov	r0, r4
 800e414:	f7fd fe5a 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e418:	f9b5 6000 	ldrsh.w	r6, [r5]
 800e41c:	b150      	cbz	r0, 800e434 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800e41e:	8026      	strh	r6, [r4, #0]
 800e420:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e424:	8063      	strh	r3, [r4, #2]
 800e426:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800e42a:	80a3      	strh	r3, [r4, #4]
 800e42c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e430:	80e3      	strh	r3, [r4, #6]
 800e432:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e434:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e438:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e43c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800e440:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800e444:	88ed      	ldrh	r5, [r5, #6]
 800e446:	42b1      	cmp	r1, r6
 800e448:	460f      	mov	r7, r1
 800e44a:	bfa8      	it	ge
 800e44c:	4637      	movge	r7, r6
 800e44e:	4293      	cmp	r3, r2
 800e450:	4618      	mov	r0, r3
 800e452:	4466      	add	r6, ip
 800e454:	bfa8      	it	ge
 800e456:	4610      	movge	r0, r2
 800e458:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e45c:	8027      	strh	r7, [r4, #0]
 800e45e:	442a      	add	r2, r5
 800e460:	88e5      	ldrh	r5, [r4, #6]
 800e462:	8060      	strh	r0, [r4, #2]
 800e464:	4461      	add	r1, ip
 800e466:	442b      	add	r3, r5
 800e468:	b236      	sxth	r6, r6
 800e46a:	b209      	sxth	r1, r1
 800e46c:	b212      	sxth	r2, r2
 800e46e:	b21b      	sxth	r3, r3
 800e470:	428e      	cmp	r6, r1
 800e472:	bfac      	ite	ge
 800e474:	ebc7 0106 	rsbge	r1, r7, r6
 800e478:	ebc7 0101 	rsblt	r1, r7, r1
 800e47c:	429a      	cmp	r2, r3
 800e47e:	bfac      	ite	ge
 800e480:	ebc0 0202 	rsbge	r2, r0, r2
 800e484:	ebc0 0203 	rsblt	r2, r0, r3
 800e488:	80a1      	strh	r1, [r4, #4]
 800e48a:	80e2      	strh	r2, [r4, #6]
 800e48c:	e7d1      	b.n	800e432 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800e490 <_ZN8touchgfx11Application11getInstanceEv>:
 800e490:	4b01      	ldr	r3, [pc, #4]	; (800e498 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800e492:	6818      	ldr	r0, [r3, #0]
 800e494:	4770      	bx	lr
 800e496:	bf00      	nop
 800e498:	2000180c 	.word	0x2000180c

0800e49c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800e49c:	2300      	movs	r3, #0
 800e49e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800e4a2:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800e4a6:	30a8      	adds	r0, #168	; 0xa8
 800e4a8:	f802 3b01 	strb.w	r3, [r2], #1
 800e4ac:	4282      	cmp	r2, r0
 800e4ae:	d1fb      	bne.n	800e4a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800e4b0:	4770      	bx	lr

0800e4b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e4b2:	4603      	mov	r3, r0
 800e4b4:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800e4b8:	2200      	movs	r2, #0
 800e4ba:	801a      	strh	r2, [r3, #0]
 800e4bc:	805a      	strh	r2, [r3, #2]
 800e4be:	809a      	strh	r2, [r3, #4]
 800e4c0:	80da      	strh	r2, [r3, #6]
 800e4c2:	3308      	adds	r3, #8
 800e4c4:	428b      	cmp	r3, r1
 800e4c6:	d1f8      	bne.n	800e4ba <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e4c8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e4cc:	4770      	bx	lr
	...

0800e4d0 <_ZN8touchgfx11ApplicationC1Ev>:
 800e4d0:	b570      	push	{r4, r5, r6, lr}
 800e4d2:	4b16      	ldr	r3, [pc, #88]	; (800e52c <_ZN8touchgfx11ApplicationC1Ev+0x5c>)
 800e4d4:	6003      	str	r3, [r0, #0]
 800e4d6:	2500      	movs	r5, #0
 800e4d8:	4604      	mov	r4, r0
 800e4da:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800e4de:	30a8      	adds	r0, #168	; 0xa8
 800e4e0:	f7ff ffe7 	bl	800e4b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e4e4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800e4e8:	f7ff ffe3 	bl	800e4b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e4ec:	f884 512c 	strb.w	r5, [r4, #300]	; 0x12c
 800e4f0:	f884 512d 	strb.w	r5, [r4, #301]	; 0x12d
 800e4f4:	490e      	ldr	r1, [pc, #56]	; (800e530 <_ZN8touchgfx11ApplicationC1Ev+0x60>)
 800e4f6:	480f      	ldr	r0, [pc, #60]	; (800e534 <_ZN8touchgfx11ApplicationC1Ev+0x64>)
 800e4f8:	4e0f      	ldr	r6, [pc, #60]	; (800e538 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800e4fa:	f00d f915 	bl	801b728 <CRC_Lock>
 800e4fe:	4b0f      	ldr	r3, [pc, #60]	; (800e53c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800e500:	b158      	cbz	r0, 800e51a <_ZN8touchgfx11ApplicationC1Ev+0x4a>
 800e502:	801d      	strh	r5, [r3, #0]
 800e504:	4a0e      	ldr	r2, [pc, #56]	; (800e540 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800e506:	2300      	movs	r3, #0
 800e508:	6013      	str	r3, [r2, #0]
 800e50a:	4a0e      	ldr	r2, [pc, #56]	; (800e544 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800e50c:	6033      	str	r3, [r6, #0]
 800e50e:	4620      	mov	r0, r4
 800e510:	6013      	str	r3, [r2, #0]
 800e512:	f7ff ffc3 	bl	800e49c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800e516:	4620      	mov	r0, r4
 800e518:	bd70      	pop	{r4, r5, r6, pc}
 800e51a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e51e:	2002      	movs	r0, #2
 800e520:	801a      	strh	r2, [r3, #0]
 800e522:	6030      	str	r0, [r6, #0]
 800e524:	f000 ff1e 	bl	800f364 <_ZN8touchgfx6Screen4drawEv>
 800e528:	e7ec      	b.n	800e504 <_ZN8touchgfx11ApplicationC1Ev+0x34>
 800e52a:	bf00      	nop
 800e52c:	08020260 	.word	0x08020260
 800e530:	b5e8b5cd 	.word	0xb5e8b5cd
 800e534:	f407a5c2 	.word	0xf407a5c2
 800e538:	200017fc 	.word	0x200017fc
 800e53c:	20000024 	.word	0x20000024
 800e540:	2000180c 	.word	0x2000180c
 800e544:	20001800 	.word	0x20001800

0800e548 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e548:	2300      	movs	r3, #0
 800e54a:	8003      	strh	r3, [r0, #0]
 800e54c:	8043      	strh	r3, [r0, #2]
 800e54e:	8083      	strh	r3, [r0, #4]
 800e550:	80c3      	strh	r3, [r0, #6]
 800e552:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800e556:	4293      	cmp	r3, r2
 800e558:	b530      	push	{r4, r5, lr}
 800e55a:	d912      	bls.n	800e582 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800e55c:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800e560:	3b01      	subs	r3, #1
 800e562:	6825      	ldr	r5, [r4, #0]
 800e564:	6005      	str	r5, [r0, #0]
 800e566:	b29b      	uxth	r3, r3
 800e568:	6865      	ldr	r5, [r4, #4]
 800e56a:	6045      	str	r5, [r0, #4]
 800e56c:	4293      	cmp	r3, r2
 800e56e:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800e572:	d906      	bls.n	800e582 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800e574:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800e578:	681d      	ldr	r5, [r3, #0]
 800e57a:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800e57e:	685d      	ldr	r5, [r3, #4]
 800e580:	6065      	str	r5, [r4, #4]
 800e582:	bd30      	pop	{r4, r5, pc}

0800e584 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800e584:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e586:	466b      	mov	r3, sp
 800e588:	e883 0006 	stmia.w	r3, {r1, r2}
 800e58c:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800e590:	2a07      	cmp	r2, #7
 800e592:	4604      	mov	r4, r0
 800e594:	d906      	bls.n	800e5a4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800e596:	4b09      	ldr	r3, [pc, #36]	; (800e5bc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800e598:	4a09      	ldr	r2, [pc, #36]	; (800e5c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800e59a:	480a      	ldr	r0, [pc, #40]	; (800e5c4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800e59c:	f44f 7102 	mov.w	r1, #520	; 0x208
 800e5a0:	f00d f9f4 	bl	801b98c <__assert_func>
 800e5a4:	1c51      	adds	r1, r2, #1
 800e5a6:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e5aa:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800e5ae:	cb03      	ldmia	r3!, {r0, r1}
 800e5b0:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800e5b4:	6069      	str	r1, [r5, #4]
 800e5b6:	b003      	add	sp, #12
 800e5b8:	bd30      	pop	{r4, r5, pc}
 800e5ba:	bf00      	nop
 800e5bc:	08020200 	.word	0x08020200
 800e5c0:	080202d8 	.word	0x080202d8
 800e5c4:	0802022f 	.word	0x0802022f

0800e5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e5c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5cc:	b089      	sub	sp, #36	; 0x24
 800e5ce:	466c      	mov	r4, sp
 800e5d0:	4606      	mov	r6, r0
 800e5d2:	4620      	mov	r0, r4
 800e5d4:	e884 0006 	stmia.w	r4, {r1, r2}
 800e5d8:	f7fd fd78 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e5dc:	bbb0      	cbnz	r0, 800e64c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800e5de:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800e5e2:	b1fd      	cbz	r5, 800e624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800e5e4:	3d01      	subs	r5, #1
 800e5e6:	af04      	add	r7, sp, #16
 800e5e8:	f04f 090a 	mov.w	r9, #10
 800e5ec:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800e5f0:	ab02      	add	r3, sp, #8
 800e5f2:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e5f6:	6851      	ldr	r1, [r2, #4]
 800e5f8:	c303      	stmia	r3!, {r0, r1}
 800e5fa:	4621      	mov	r1, r4
 800e5fc:	a802      	add	r0, sp, #8
 800e5fe:	fa1f f885 	uxth.w	r8, r5
 800e602:	f7ff fedd 	bl	800e3c0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e606:	bb08      	cbnz	r0, 800e64c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800e608:	a902      	add	r1, sp, #8
 800e60a:	4620      	mov	r0, r4
 800e60c:	f7ff fed8 	bl	800e3c0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e610:	b1f8      	cbz	r0, 800e652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800e612:	4642      	mov	r2, r8
 800e614:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e618:	a806      	add	r0, sp, #24
 800e61a:	f7ff ff95 	bl	800e548 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e61e:	f115 35ff 	adds.w	r5, r5, #4294967295
 800e622:	d2e3      	bcs.n	800e5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800e624:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800e628:	2b08      	cmp	r3, #8
 800e62a:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800e62e:	d108      	bne.n	800e642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800e630:	4629      	mov	r1, r5
 800e632:	a806      	add	r0, sp, #24
 800e634:	2207      	movs	r2, #7
 800e636:	f7ff ff87 	bl	800e548 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e63a:	a906      	add	r1, sp, #24
 800e63c:	4620      	mov	r0, r4
 800e63e:	f7ff fee1 	bl	800e404 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e642:	e894 0006 	ldmia.w	r4, {r1, r2}
 800e646:	4628      	mov	r0, r5
 800e648:	f7ff ff9c 	bl	800e584 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e64c:	b009      	add	sp, #36	; 0x24
 800e64e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e652:	4621      	mov	r1, r4
 800e654:	a802      	add	r0, sp, #8
 800e656:	f7ff fe91 	bl	800e37c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e65a:	b150      	cbz	r0, 800e672 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800e65c:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e660:	a806      	add	r0, sp, #24
 800e662:	4642      	mov	r2, r8
 800e664:	f7ff ff70 	bl	800e548 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e668:	a902      	add	r1, sp, #8
 800e66a:	4620      	mov	r0, r4
 800e66c:	f7ff feca 	bl	800e404 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e670:	e7d5      	b.n	800e61e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e672:	e894 0003 	ldmia.w	r4, {r0, r1}
 800e676:	e887 0003 	stmia.w	r7, {r0, r1}
 800e67a:	a902      	add	r1, sp, #8
 800e67c:	4638      	mov	r0, r7
 800e67e:	f7ff fec1 	bl	800e404 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e682:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e686:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e68a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800e68e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e692:	fb13 f302 	smulbb	r3, r3, r2
 800e696:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e69a:	fb11 f102 	smulbb	r1, r1, r2
 800e69e:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800e6a2:	fb12 1100 	smlabb	r1, r2, r0, r1
 800e6a6:	220b      	movs	r2, #11
 800e6a8:	fb09 f303 	mul.w	r3, r9, r3
 800e6ac:	434a      	muls	r2, r1
 800e6ae:	4293      	cmp	r3, r2
 800e6b0:	dab5      	bge.n	800e61e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800e6b2:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800e6b6:	a806      	add	r0, sp, #24
 800e6b8:	4642      	mov	r2, r8
 800e6ba:	f7ff ff45 	bl	800e548 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e6be:	e897 0003 	ldmia.w	r7, {r0, r1}
 800e6c2:	e884 0003 	stmia.w	r4, {r0, r1}
 800e6c6:	e7aa      	b.n	800e61e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800e6c8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800e6c8:	b530      	push	{r4, r5, lr}
 800e6ca:	4b1d      	ldr	r3, [pc, #116]	; (800e740 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800e6cc:	b085      	sub	sp, #20
 800e6ce:	460c      	mov	r4, r1
 800e6d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e6d4:	4b1b      	ldr	r3, [pc, #108]	; (800e744 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800e6d6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e6da:	2100      	movs	r1, #0
 800e6dc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e6e0:	9100      	str	r1, [sp, #0]
 800e6e2:	4605      	mov	r5, r0
 800e6e4:	6861      	ldr	r1, [r4, #4]
 800e6e6:	6820      	ldr	r0, [r4, #0]
 800e6e8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e6ec:	ab02      	add	r3, sp, #8
 800e6ee:	c303      	stmia	r3!, {r0, r1}
 800e6f0:	4669      	mov	r1, sp
 800e6f2:	a802      	add	r0, sp, #8
 800e6f4:	f7fd fca6 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800e6f8:	ab02      	add	r3, sp, #8
 800e6fa:	cb03      	ldmia	r3!, {r0, r1}
 800e6fc:	4b12      	ldr	r3, [pc, #72]	; (800e748 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800e6fe:	6020      	str	r0, [r4, #0]
 800e700:	6818      	ldr	r0, [r3, #0]
 800e702:	6061      	str	r1, [r4, #4]
 800e704:	b138      	cbz	r0, 800e716 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e706:	f895 312c 	ldrb.w	r3, [r5, #300]	; 0x12c
 800e70a:	b133      	cbz	r3, 800e71a <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800e70c:	6821      	ldr	r1, [r4, #0]
 800e70e:	6862      	ldr	r2, [r4, #4]
 800e710:	4628      	mov	r0, r5
 800e712:	f7ff ff59 	bl	800e5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e716:	b005      	add	sp, #20
 800e718:	bd30      	pop	{r4, r5, pc}
 800e71a:	6803      	ldr	r3, [r0, #0]
 800e71c:	4621      	mov	r1, r4
 800e71e:	689b      	ldr	r3, [r3, #8]
 800e720:	4798      	blx	r3
 800e722:	4b0a      	ldr	r3, [pc, #40]	; (800e74c <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800e724:	6818      	ldr	r0, [r3, #0]
 800e726:	b118      	cbz	r0, 800e730 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800e728:	6803      	ldr	r3, [r0, #0]
 800e72a:	4621      	mov	r1, r4
 800e72c:	689b      	ldr	r3, [r3, #8]
 800e72e:	4798      	blx	r3
 800e730:	4b07      	ldr	r3, [pc, #28]	; (800e750 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800e732:	6818      	ldr	r0, [r3, #0]
 800e734:	6803      	ldr	r3, [r0, #0]
 800e736:	4621      	mov	r1, r4
 800e738:	695b      	ldr	r3, [r3, #20]
 800e73a:	4798      	blx	r3
 800e73c:	e7eb      	b.n	800e716 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e73e:	bf00      	nop
 800e740:	20001794 	.word	0x20001794
 800e744:	20001796 	.word	0x20001796
 800e748:	200017fc 	.word	0x200017fc
 800e74c:	200017f8 	.word	0x200017f8
 800e750:	200017a0 	.word	0x200017a0

0800e754 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800e754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e758:	4604      	mov	r4, r0
 800e75a:	b09b      	sub	sp, #108	; 0x6c
 800e75c:	f880 112c 	strb.w	r1, [r0, #300]	; 0x12c
 800e760:	b129      	cbz	r1, 800e76e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800e762:	2300      	movs	r3, #0
 800e764:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800e768:	b01b      	add	sp, #108	; 0x6c
 800e76a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e76e:	4baf      	ldr	r3, [pc, #700]	; (800ea2c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800e770:	681b      	ldr	r3, [r3, #0]
 800e772:	b33b      	cbz	r3, 800e7c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800e774:	4dae      	ldr	r5, [pc, #696]	; (800ea30 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800e776:	4628      	mov	r0, r5
 800e778:	f7fd fca8 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e77c:	4606      	mov	r6, r0
 800e77e:	bb08      	cbnz	r0, 800e7c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800e780:	4628      	mov	r0, r5
 800e782:	f7ff fca5 	bl	800e0d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e786:	6829      	ldr	r1, [r5, #0]
 800e788:	686a      	ldr	r2, [r5, #4]
 800e78a:	4620      	mov	r0, r4
 800e78c:	f7ff ff1c 	bl	800e5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e790:	802e      	strh	r6, [r5, #0]
 800e792:	806e      	strh	r6, [r5, #2]
 800e794:	80ae      	strh	r6, [r5, #4]
 800e796:	80ee      	strh	r6, [r5, #6]
 800e798:	4fa6      	ldr	r7, [pc, #664]	; (800ea34 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800e79a:	a809      	add	r0, sp, #36	; 0x24
 800e79c:	f7ff fe89 	bl	800e4b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e7a0:	883d      	ldrh	r5, [r7, #0]
 800e7a2:	462e      	mov	r6, r5
 800e7a4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e7a8:	42b3      	cmp	r3, r6
 800e7aa:	d910      	bls.n	800e7ce <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7a>
 800e7ac:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e7b0:	a809      	add	r0, sp, #36	; 0x24
 800e7b2:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800e7b6:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800e7ba:	3601      	adds	r6, #1
 800e7bc:	f7ff fee2 	bl	800e584 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e7c0:	b2b6      	uxth	r6, r6
 800e7c2:	e7ef      	b.n	800e7a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x50>
 800e7c4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e7c8:	2b00      	cmp	r3, #0
 800e7ca:	d1e5      	bne.n	800e798 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x44>
 800e7cc:	e7cc      	b.n	800e768 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e7ce:	462e      	mov	r6, r5
 800e7d0:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800e7d4:	42b3      	cmp	r3, r6
 800e7d6:	d90b      	bls.n	800e7f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800e7d8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e7dc:	4620      	mov	r0, r4
 800e7de:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800e7e2:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800e7e6:	3601      	adds	r6, #1
 800e7e8:	f7ff feee 	bl	800e5c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e7ec:	b2b6      	uxth	r6, r6
 800e7ee:	e7ef      	b.n	800e7d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7c>
 800e7f0:	4e91      	ldr	r6, [pc, #580]	; (800ea38 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800e7f2:	6833      	ldr	r3, [r6, #0]
 800e7f4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800e7f8:	2b01      	cmp	r3, #1
 800e7fa:	f040 8092 	bne.w	800e922 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ce>
 800e7fe:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800e802:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800e806:	33aa      	adds	r3, #170	; 0xaa
 800e808:	f04f 0900 	mov.w	r9, #0
 800e80c:	42a8      	cmp	r0, r5
 800e80e:	f103 0308 	add.w	r3, r3, #8
 800e812:	dd0a      	ble.n	800e82a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xd6>
 800e814:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800e818:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800e81c:	440a      	add	r2, r1
 800e81e:	b212      	sxth	r2, r2
 800e820:	4591      	cmp	r9, r2
 800e822:	bfb8      	it	lt
 800e824:	4691      	movlt	r9, r2
 800e826:	3501      	adds	r5, #1
 800e828:	e7f0      	b.n	800e80c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xb8>
 800e82a:	4b84      	ldr	r3, [pc, #528]	; (800ea3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800e82c:	f8df 8214 	ldr.w	r8, [pc, #532]	; 800ea44 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>
 800e830:	881d      	ldrh	r5, [r3, #0]
 800e832:	2300      	movs	r3, #0
 800e834:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e838:	2d0f      	cmp	r5, #15
 800e83a:	bf8c      	ite	hi
 800e83c:	08ed      	lsrhi	r5, r5, #3
 800e83e:	2501      	movls	r5, #1
 800e840:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e844:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800e848:	6830      	ldr	r0, [r6, #0]
 800e84a:	440b      	add	r3, r1
 800e84c:	b21b      	sxth	r3, r3
 800e84e:	4599      	cmp	r9, r3
 800e850:	6802      	ldr	r2, [r0, #0]
 800e852:	dd49      	ble.n	800e8e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x194>
 800e854:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800e858:	4798      	blx	r3
 800e85a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e85e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e862:	4413      	add	r3, r2
 800e864:	b21b      	sxth	r3, r3
 800e866:	195a      	adds	r2, r3, r5
 800e868:	4290      	cmp	r0, r2
 800e86a:	da07      	bge.n	800e87c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800e86c:	4581      	cmp	r9, r0
 800e86e:	dd05      	ble.n	800e87c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800e870:	4298      	cmp	r0, r3
 800e872:	da33      	bge.n	800e8dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800e874:	2b00      	cmp	r3, #0
 800e876:	dd31      	ble.n	800e8dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800e878:	4648      	mov	r0, r9
 800e87a:	e004      	b.n	800e886 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x132>
 800e87c:	4298      	cmp	r0, r3
 800e87e:	dbfb      	blt.n	800e878 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x124>
 800e880:	4548      	cmp	r0, r9
 800e882:	bfa8      	it	ge
 800e884:	4648      	movge	r0, r9
 800e886:	f9b8 2000 	ldrsh.w	r2, [r8]
 800e88a:	f8b7 a000 	ldrh.w	sl, [r7]
 800e88e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e892:	2100      	movs	r1, #0
 800e894:	1ac0      	subs	r0, r0, r3
 800e896:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e89a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e89e:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e8a2:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e8a6:	4553      	cmp	r3, sl
 800e8a8:	d9ca      	bls.n	800e840 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800e8aa:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800e8ae:	ab07      	add	r3, sp, #28
 800e8b0:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e8b4:	6851      	ldr	r1, [r2, #4]
 800e8b6:	c303      	stmia	r3!, {r0, r1}
 800e8b8:	a807      	add	r0, sp, #28
 800e8ba:	a905      	add	r1, sp, #20
 800e8bc:	f7fd fbc2 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800e8c0:	a807      	add	r0, sp, #28
 800e8c2:	f7fd fc03 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e8c6:	b920      	cbnz	r0, 800e8d2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x17e>
 800e8c8:	6823      	ldr	r3, [r4, #0]
 800e8ca:	a907      	add	r1, sp, #28
 800e8cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8ce:	4620      	mov	r0, r4
 800e8d0:	4798      	blx	r3
 800e8d2:	f10a 0a01 	add.w	sl, sl, #1
 800e8d6:	fa1f fa8a 	uxth.w	sl, sl
 800e8da:	e7e2      	b.n	800e8a2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14e>
 800e8dc:	6830      	ldr	r0, [r6, #0]
 800e8de:	6803      	ldr	r3, [r0, #0]
 800e8e0:	2101      	movs	r1, #1
 800e8e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e8e4:	4798      	blx	r3
 800e8e6:	e7ab      	b.n	800e840 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800e8e8:	69d3      	ldr	r3, [r2, #28]
 800e8ea:	4798      	blx	r3
 800e8ec:	4b54      	ldr	r3, [pc, #336]	; (800ea40 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800e8ee:	781b      	ldrb	r3, [r3, #0]
 800e8f0:	2b00      	cmp	r3, #0
 800e8f2:	f43f af39 	beq.w	800e768 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e8f6:	2300      	movs	r3, #0
 800e8f8:	883d      	ldrh	r5, [r7, #0]
 800e8fa:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800e8fe:	34ea      	adds	r4, #234	; 0xea
 800e900:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800e904:	42ab      	cmp	r3, r5
 800e906:	f67f af2f 	bls.w	800e768 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e90a:	ab1a      	add	r3, sp, #104	; 0x68
 800e90c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e910:	3b44      	subs	r3, #68	; 0x44
 800e912:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e916:	4620      	mov	r0, r4
 800e918:	3501      	adds	r5, #1
 800e91a:	f7ff fe33 	bl	800e584 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e91e:	b2ad      	uxth	r5, r5
 800e920:	e7ee      	b.n	800e900 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ac>
 800e922:	2b02      	cmp	r3, #2
 800e924:	d16a      	bne.n	800e9fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800e926:	f8df a120 	ldr.w	sl, [pc, #288]	; 800ea48 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800e92a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e92e:	42ab      	cmp	r3, r5
 800e930:	d9dc      	bls.n	800e8ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800e932:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800e936:	ab03      	add	r3, sp, #12
 800e938:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e93c:	6851      	ldr	r1, [r2, #4]
 800e93e:	c303      	stmia	r3!, {r0, r1}
 800e940:	f89a 3000 	ldrb.w	r3, [sl]
 800e944:	2b01      	cmp	r3, #1
 800e946:	d102      	bne.n	800e94e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1fa>
 800e948:	a803      	add	r0, sp, #12
 800e94a:	f7ff fc1b 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800e94e:	a803      	add	r0, sp, #12
 800e950:	f7fd fbbc 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800e954:	2800      	cmp	r0, #0
 800e956:	d14a      	bne.n	800e9ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29a>
 800e958:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800e95c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e960:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800e964:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e968:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e96c:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e970:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e974:	f10d 0914 	add.w	r9, sp, #20
 800e978:	f10d 081c 	add.w	r8, sp, #28
 800e97c:	f8bd b012 	ldrh.w	fp, [sp, #18]
 800e980:	f8bd c00e 	ldrh.w	ip, [sp, #14]
 800e984:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e988:	6830      	ldr	r0, [r6, #0]
 800e98a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e98e:	f8d0 e000 	ldr.w	lr, [r0]
 800e992:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800e996:	44dc      	add	ip, fp
 800e998:	ebac 0c02 	sub.w	ip, ip, r2
 800e99c:	fa1f fc8c 	uxth.w	ip, ip
 800e9a0:	f8cd c000 	str.w	ip, [sp]
 800e9a4:	f8de b078 	ldr.w	fp, [lr, #120]	; 0x78
 800e9a8:	47d8      	blx	fp
 800e9aa:	f89a 3000 	ldrb.w	r3, [sl]
 800e9ae:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e9b2:	2b01      	cmp	r3, #1
 800e9b4:	d11e      	bne.n	800e9f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>
 800e9b6:	e899 0003 	ldmia.w	r9, {r0, r1}
 800e9ba:	e888 0003 	stmia.w	r8, {r0, r1}
 800e9be:	4640      	mov	r0, r8
 800e9c0:	f7ff fb86 	bl	800e0d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e9c4:	6823      	ldr	r3, [r4, #0]
 800e9c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9c8:	4641      	mov	r1, r8
 800e9ca:	4620      	mov	r0, r4
 800e9cc:	4798      	blx	r3
 800e9ce:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e9d2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e9d6:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800e9da:	4413      	add	r3, r2
 800e9dc:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e9e0:	440a      	add	r2, r1
 800e9e2:	b21b      	sxth	r3, r3
 800e9e4:	b212      	sxth	r2, r2
 800e9e6:	4293      	cmp	r3, r2
 800e9e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e9ec:	dbc6      	blt.n	800e97c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800e9ee:	3501      	adds	r5, #1
 800e9f0:	b2ad      	uxth	r5, r5
 800e9f2:	e79a      	b.n	800e92a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d6>
 800e9f4:	6823      	ldr	r3, [r4, #0]
 800e9f6:	4649      	mov	r1, r9
 800e9f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9fa:	e7e6      	b.n	800e9ca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800e9fc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ea00:	42ab      	cmp	r3, r5
 800ea02:	f67f af73 	bls.w	800e8ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800ea06:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800ea0a:	ab07      	add	r3, sp, #28
 800ea0c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800ea10:	6851      	ldr	r1, [r2, #4]
 800ea12:	c303      	stmia	r3!, {r0, r1}
 800ea14:	a807      	add	r0, sp, #28
 800ea16:	f7fd fb59 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 800ea1a:	b920      	cbnz	r0, 800ea26 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d2>
 800ea1c:	6823      	ldr	r3, [r4, #0]
 800ea1e:	a907      	add	r1, sp, #28
 800ea20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea22:	4620      	mov	r0, r4
 800ea24:	4798      	blx	r3
 800ea26:	3501      	adds	r5, #1
 800ea28:	b2ad      	uxth	r5, r5
 800ea2a:	e7e7      	b.n	800e9fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800ea2c:	200017f8 	.word	0x200017f8
 800ea30:	20001804 	.word	0x20001804
 800ea34:	20000024 	.word	0x20000024
 800ea38:	200017a0 	.word	0x200017a0
 800ea3c:	20001796 	.word	0x20001796
 800ea40:	2000179e 	.word	0x2000179e
 800ea44:	20001794 	.word	0x20001794
 800ea48:	20001798 	.word	0x20001798

0800ea4c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ea4c:	4b03      	ldr	r3, [pc, #12]	; (800ea5c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ea4e:	2200      	movs	r2, #0
 800ea50:	801a      	strh	r2, [r3, #0]
 800ea52:	805a      	strh	r2, [r3, #2]
 800ea54:	809a      	strh	r2, [r3, #4]
 800ea56:	80da      	strh	r2, [r3, #6]
 800ea58:	4770      	bx	lr
 800ea5a:	bf00      	nop
 800ea5c:	20001804 	.word	0x20001804

0800ea60 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
 800ea60:	2000      	movs	r0, #0
 800ea62:	4770      	bx	lr

0800ea64 <_ZNK8touchgfx4Font12getGSUBTableEv>:
 800ea64:	2000      	movs	r0, #0
 800ea66:	4770      	bx	lr

0800ea68 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ea68:	b508      	push	{r3, lr}
 800ea6a:	6803      	ldr	r3, [r0, #0]
 800ea6c:	68db      	ldr	r3, [r3, #12]
 800ea6e:	4798      	blx	r3
 800ea70:	b128      	cbz	r0, 800ea7e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ea72:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800ea76:	7a80      	ldrb	r0, [r0, #10]
 800ea78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ea7c:	4318      	orrs	r0, r3
 800ea7e:	bd08      	pop	{r3, pc}

0800ea80 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
 800ea80:	b40e      	push	{r1, r2, r3}
 800ea82:	b533      	push	{r0, r1, r4, r5, lr}
 800ea84:	ab05      	add	r3, sp, #20
 800ea86:	f853 2b04 	ldr.w	r2, [r3], #4
 800ea8a:	9301      	str	r3, [sp, #4]
 800ea8c:	4b09      	ldr	r3, [pc, #36]	; (800eab4 <_ZNK8touchgfx4Font14getStringWidthEPKtz+0x34>)
 800ea8e:	685c      	ldr	r4, [r3, #4]
 800ea90:	1061      	asrs	r1, r4, #1
 800ea92:	07e4      	lsls	r4, r4, #31
 800ea94:	eb00 0501 	add.w	r5, r0, r1
 800ea98:	bf45      	ittet	mi
 800ea9a:	681b      	ldrmi	r3, [r3, #0]
 800ea9c:	5841      	ldrmi	r1, [r0, r1]
 800ea9e:	681c      	ldrpl	r4, [r3, #0]
 800eaa0:	58cc      	ldrmi	r4, [r1, r3]
 800eaa2:	9b01      	ldr	r3, [sp, #4]
 800eaa4:	2100      	movs	r1, #0
 800eaa6:	4628      	mov	r0, r5
 800eaa8:	47a0      	blx	r4
 800eaaa:	b002      	add	sp, #8
 800eaac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800eab0:	b003      	add	sp, #12
 800eab2:	4770      	bx	lr
 800eab4:	20000010 	.word	0x20000010

0800eab8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:
 800eab8:	b40c      	push	{r2, r3}
 800eaba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800eabc:	ab06      	add	r3, sp, #24
 800eabe:	f853 2b04 	ldr.w	r2, [r3], #4
 800eac2:	9301      	str	r3, [sp, #4]
 800eac4:	4b09      	ldr	r3, [pc, #36]	; (800eaec <_ZNK8touchgfx4Font14getStringWidthEhPKtz+0x34>)
 800eac6:	685d      	ldr	r5, [r3, #4]
 800eac8:	106c      	asrs	r4, r5, #1
 800eaca:	07ed      	lsls	r5, r5, #31
 800eacc:	eb00 0604 	add.w	r6, r0, r4
 800ead0:	bf45      	ittet	mi
 800ead2:	681b      	ldrmi	r3, [r3, #0]
 800ead4:	5900      	ldrmi	r0, [r0, r4]
 800ead6:	681c      	ldrpl	r4, [r3, #0]
 800ead8:	58c4      	ldrmi	r4, [r0, r3]
 800eada:	9b01      	ldr	r3, [sp, #4]
 800eadc:	4630      	mov	r0, r6
 800eade:	47a0      	blx	r4
 800eae0:	b002      	add	sp, #8
 800eae2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eae6:	b002      	add	sp, #8
 800eae8:	4770      	bx	lr
 800eaea:	bf00      	nop
 800eaec:	20000010 	.word	0x20000010

0800eaf0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800eaf0:	b40e      	push	{r1, r2, r3}
 800eaf2:	b530      	push	{r4, r5, lr}
 800eaf4:	b098      	sub	sp, #96	; 0x60
 800eaf6:	ab1b      	add	r3, sp, #108	; 0x6c
 800eaf8:	4604      	mov	r4, r0
 800eafa:	f853 5b04 	ldr.w	r5, [r3], #4
 800eafe:	9301      	str	r3, [sp, #4]
 800eb00:	a802      	add	r0, sp, #8
 800eb02:	f000 ffd5 	bl	800fab0 <_ZN8touchgfx12TextProviderC1Ev>
 800eb06:	6823      	ldr	r3, [r4, #0]
 800eb08:	4620      	mov	r0, r4
 800eb0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eb0c:	4798      	blx	r3
 800eb0e:	9a01      	ldr	r2, [sp, #4]
 800eb10:	4603      	mov	r3, r0
 800eb12:	4629      	mov	r1, r5
 800eb14:	a802      	add	r0, sp, #8
 800eb16:	f000 ffe8 	bl	800faea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800eb1a:	a802      	add	r0, sp, #8
 800eb1c:	f001 f81e 	bl	800fb5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eb20:	2401      	movs	r4, #1
 800eb22:	b2a3      	uxth	r3, r4
 800eb24:	b140      	cbz	r0, 800eb38 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800eb26:	280a      	cmp	r0, #10
 800eb28:	bf08      	it	eq
 800eb2a:	3301      	addeq	r3, #1
 800eb2c:	a802      	add	r0, sp, #8
 800eb2e:	bf08      	it	eq
 800eb30:	b21c      	sxtheq	r4, r3
 800eb32:	f001 f813 	bl	800fb5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eb36:	e7f4      	b.n	800eb22 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800eb38:	4618      	mov	r0, r3
 800eb3a:	b018      	add	sp, #96	; 0x60
 800eb3c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800eb40:	b003      	add	sp, #12
 800eb42:	4770      	bx	lr

0800eb44 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800eb44:	b40e      	push	{r1, r2, r3}
 800eb46:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb48:	b098      	sub	sp, #96	; 0x60
 800eb4a:	ab1d      	add	r3, sp, #116	; 0x74
 800eb4c:	4605      	mov	r5, r0
 800eb4e:	f853 4b04 	ldr.w	r4, [r3], #4
 800eb52:	9300      	str	r3, [sp, #0]
 800eb54:	a802      	add	r0, sp, #8
 800eb56:	f000 ffab 	bl	800fab0 <_ZN8touchgfx12TextProviderC1Ev>
 800eb5a:	682b      	ldr	r3, [r5, #0]
 800eb5c:	4f21      	ldr	r7, [pc, #132]	; (800ebe4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0xa0>)
 800eb5e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eb60:	4628      	mov	r0, r5
 800eb62:	4798      	blx	r3
 800eb64:	ae18      	add	r6, sp, #96	; 0x60
 800eb66:	4603      	mov	r3, r0
 800eb68:	4621      	mov	r1, r4
 800eb6a:	9a00      	ldr	r2, [sp, #0]
 800eb6c:	a802      	add	r0, sp, #8
 800eb6e:	2400      	movs	r4, #0
 800eb70:	f000 ffbb 	bl	800faea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800eb74:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800eb78:	462a      	mov	r2, r5
 800eb7a:	4633      	mov	r3, r6
 800eb7c:	4621      	mov	r1, r4
 800eb7e:	a802      	add	r0, sp, #8
 800eb80:	f001 f918 	bl	800fdb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eb84:	b338      	cbz	r0, 800ebd6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x92>
 800eb86:	280a      	cmp	r0, #10
 800eb88:	d01e      	beq.n	800ebc8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800eb8a:	9901      	ldr	r1, [sp, #4]
 800eb8c:	b1e1      	cbz	r1, 800ebc8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800eb8e:	7b4b      	ldrb	r3, [r1, #13]
 800eb90:	f891 c008 	ldrb.w	ip, [r1, #8]
 800eb94:	79c9      	ldrb	r1, [r1, #7]
 800eb96:	88aa      	ldrh	r2, [r5, #4]
 800eb98:	f013 0f40 	tst.w	r3, #64	; 0x40
 800eb9c:	ea4f 1e03 	mov.w	lr, r3, lsl #4
 800eba0:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800eba4:	f40e 7e80 	and.w	lr, lr, #256	; 0x100
 800eba8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ebac:	bf14      	ite	ne
 800ebae:	4638      	movne	r0, r7
 800ebb0:	2000      	moveq	r0, #0
 800ebb2:	ea41 010e 	orr.w	r1, r1, lr
 800ebb6:	ea43 030c 	orr.w	r3, r3, ip
 800ebba:	440a      	add	r2, r1
 800ebbc:	4303      	orrs	r3, r0
 800ebbe:	1ad3      	subs	r3, r2, r3
 800ebc0:	b29b      	uxth	r3, r3
 800ebc2:	42a3      	cmp	r3, r4
 800ebc4:	bfc8      	it	gt
 800ebc6:	b21c      	sxthgt	r4, r3
 800ebc8:	4633      	mov	r3, r6
 800ebca:	462a      	mov	r2, r5
 800ebcc:	2100      	movs	r1, #0
 800ebce:	a802      	add	r0, sp, #8
 800ebd0:	f001 f8f0 	bl	800fdb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ebd4:	e7d6      	b.n	800eb84 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x40>
 800ebd6:	b2a0      	uxth	r0, r4
 800ebd8:	b018      	add	sp, #96	; 0x60
 800ebda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ebde:	b003      	add	sp, #12
 800ebe0:	4770      	bx	lr
 800ebe2:	bf00      	nop
 800ebe4:	fffffe00 	.word	0xfffffe00

0800ebe8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800ebe8:	b40e      	push	{r1, r2, r3}
 800ebea:	b570      	push	{r4, r5, r6, lr}
 800ebec:	b099      	sub	sp, #100	; 0x64
 800ebee:	ab1d      	add	r3, sp, #116	; 0x74
 800ebf0:	4604      	mov	r4, r0
 800ebf2:	f853 5b04 	ldr.w	r5, [r3], #4
 800ebf6:	9300      	str	r3, [sp, #0]
 800ebf8:	a802      	add	r0, sp, #8
 800ebfa:	f000 ff59 	bl	800fab0 <_ZN8touchgfx12TextProviderC1Ev>
 800ebfe:	6823      	ldr	r3, [r4, #0]
 800ec00:	4620      	mov	r0, r4
 800ec02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ec04:	4798      	blx	r3
 800ec06:	4629      	mov	r1, r5
 800ec08:	4603      	mov	r3, r0
 800ec0a:	9a00      	ldr	r2, [sp, #0]
 800ec0c:	a802      	add	r0, sp, #8
 800ec0e:	ad18      	add	r5, sp, #96	; 0x60
 800ec10:	f000 ff6b 	bl	800faea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ec14:	2100      	movs	r1, #0
 800ec16:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800ec1a:	4622      	mov	r2, r4
 800ec1c:	462b      	mov	r3, r5
 800ec1e:	a802      	add	r0, sp, #8
 800ec20:	f001 f8c8 	bl	800fdb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ec24:	26ff      	movs	r6, #255	; 0xff
 800ec26:	b190      	cbz	r0, 800ec4e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x66>
 800ec28:	280a      	cmp	r0, #10
 800ec2a:	d009      	beq.n	800ec40 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800ec2c:	9a01      	ldr	r2, [sp, #4]
 800ec2e:	b13a      	cbz	r2, 800ec40 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800ec30:	7923      	ldrb	r3, [r4, #4]
 800ec32:	7a12      	ldrb	r2, [r2, #8]
 800ec34:	1a9b      	subs	r3, r3, r2
 800ec36:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 800ec3a:	429e      	cmp	r6, r3
 800ec3c:	bf28      	it	cs
 800ec3e:	461e      	movcs	r6, r3
 800ec40:	462b      	mov	r3, r5
 800ec42:	4622      	mov	r2, r4
 800ec44:	2100      	movs	r1, #0
 800ec46:	a802      	add	r0, sp, #8
 800ec48:	f001 f8b4 	bl	800fdb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ec4c:	e7eb      	b.n	800ec26 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800ec4e:	4630      	mov	r0, r6
 800ec50:	b019      	add	sp, #100	; 0x64
 800ec52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec56:	b003      	add	sp, #12
 800ec58:	4770      	bx	lr

0800ec5a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ec5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec5e:	4606      	mov	r6, r0
 800ec60:	b099      	sub	sp, #100	; 0x64
 800ec62:	a802      	add	r0, sp, #8
 800ec64:	4614      	mov	r4, r2
 800ec66:	4688      	mov	r8, r1
 800ec68:	461d      	mov	r5, r3
 800ec6a:	f000 ff21 	bl	800fab0 <_ZN8touchgfx12TextProviderC1Ev>
 800ec6e:	6833      	ldr	r3, [r6, #0]
 800ec70:	4630      	mov	r0, r6
 800ec72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ec74:	4798      	blx	r3
 800ec76:	462a      	mov	r2, r5
 800ec78:	4603      	mov	r3, r0
 800ec7a:	4621      	mov	r1, r4
 800ec7c:	a802      	add	r0, sp, #8
 800ec7e:	f000 ff34 	bl	800faea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ec82:	f04f 0b00 	mov.w	fp, #0
 800ec86:	465f      	mov	r7, fp
 800ec88:	46da      	mov	sl, fp
 800ec8a:	46d9      	mov	r9, fp
 800ec8c:	ab01      	add	r3, sp, #4
 800ec8e:	4632      	mov	r2, r6
 800ec90:	4641      	mov	r1, r8
 800ec92:	a802      	add	r0, sp, #8
 800ec94:	f8cd 9004 	str.w	r9, [sp, #4]
 800ec98:	f001 f88c 	bl	800fdb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ec9c:	4605      	mov	r5, r0
 800ec9e:	b108      	cbz	r0, 800eca4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x4a>
 800eca0:	280a      	cmp	r0, #10
 800eca2:	d10b      	bne.n	800ecbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x62>
 800eca4:	4557      	cmp	r7, sl
 800eca6:	bf38      	it	cc
 800eca8:	4657      	movcc	r7, sl
 800ecaa:	f04f 0a00 	mov.w	sl, #0
 800ecae:	b91d      	cbnz	r5, 800ecb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800ecb0:	4638      	mov	r0, r7
 800ecb2:	b019      	add	sp, #100	; 0x64
 800ecb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ecb8:	46ab      	mov	fp, r5
 800ecba:	e7e7      	b.n	800ec8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x32>
 800ecbc:	9a01      	ldr	r2, [sp, #4]
 800ecbe:	2a00      	cmp	r2, #0
 800ecc0:	d0fa      	beq.n	800ecb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800ecc2:	f992 400d 	ldrsb.w	r4, [r2, #13]
 800ecc6:	6833      	ldr	r3, [r6, #0]
 800ecc8:	8895      	ldrh	r5, [r2, #4]
 800ecca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800eccc:	f404 7080 	and.w	r0, r4, #256	; 0x100
 800ecd0:	7a94      	ldrb	r4, [r2, #10]
 800ecd2:	4659      	mov	r1, fp
 800ecd4:	4304      	orrs	r4, r0
 800ecd6:	4630      	mov	r0, r6
 800ecd8:	4798      	blx	r3
 800ecda:	4420      	add	r0, r4
 800ecdc:	4450      	add	r0, sl
 800ecde:	fa1f fa80 	uxth.w	sl, r0
 800ece2:	e7e4      	b.n	800ecae <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x54>

0800ece4 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800ece4:	b513      	push	{r0, r1, r4, lr}
 800ece6:	1d01      	adds	r1, r0, #4
 800ece8:	4603      	mov	r3, r0
 800ecea:	c903      	ldmia	r1, {r0, r1}
 800ecec:	466a      	mov	r2, sp
 800ecee:	e882 0003 	stmia.w	r2, {r0, r1}
 800ecf2:	2100      	movs	r1, #0
 800ecf4:	9100      	str	r1, [sp, #0]
 800ecf6:	6819      	ldr	r1, [r3, #0]
 800ecf8:	4618      	mov	r0, r3
 800ecfa:	690c      	ldr	r4, [r1, #16]
 800ecfc:	4611      	mov	r1, r2
 800ecfe:	47a0      	blx	r4
 800ed00:	b002      	add	sp, #8
 800ed02:	bd10      	pop	{r4, pc}

0800ed04 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800ed04:	b538      	push	{r3, r4, r5, lr}
 800ed06:	680b      	ldr	r3, [r1, #0]
 800ed08:	460c      	mov	r4, r1
 800ed0a:	68db      	ldr	r3, [r3, #12]
 800ed0c:	4605      	mov	r5, r0
 800ed0e:	4798      	blx	r3
 800ed10:	6823      	ldr	r3, [r4, #0]
 800ed12:	4620      	mov	r0, r4
 800ed14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ed16:	4629      	mov	r1, r5
 800ed18:	4798      	blx	r3
 800ed1a:	4628      	mov	r0, r5
 800ed1c:	bd38      	pop	{r3, r4, r5, pc}

0800ed1e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800ed1e:	b410      	push	{r4}
 800ed20:	880a      	ldrh	r2, [r1, #0]
 800ed22:	8884      	ldrh	r4, [r0, #4]
 800ed24:	4422      	add	r2, r4
 800ed26:	800a      	strh	r2, [r1, #0]
 800ed28:	88c4      	ldrh	r4, [r0, #6]
 800ed2a:	884a      	ldrh	r2, [r1, #2]
 800ed2c:	4422      	add	r2, r4
 800ed2e:	804a      	strh	r2, [r1, #2]
 800ed30:	6940      	ldr	r0, [r0, #20]
 800ed32:	b120      	cbz	r0, 800ed3e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800ed34:	6803      	ldr	r3, [r0, #0]
 800ed36:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ed3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ed3c:	4718      	bx	r3
 800ed3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ed42:	4770      	bx	lr

0800ed44 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800ed44:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed46:	460b      	mov	r3, r1
 800ed48:	b085      	sub	sp, #20
 800ed4a:	4604      	mov	r4, r0
 800ed4c:	b901      	cbnz	r1, 800ed50 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ed4e:	b1fa      	cbz	r2, 800ed90 <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800ed50:	1d27      	adds	r7, r4, #4
 800ed52:	e897 0003 	ldmia.w	r7, {r0, r1}
 800ed56:	466e      	mov	r6, sp
 800ed58:	e886 0003 	stmia.w	r6, {r0, r1}
 800ed5c:	88e1      	ldrh	r1, [r4, #6]
 800ed5e:	440a      	add	r2, r1
 800ed60:	88a1      	ldrh	r1, [r4, #4]
 800ed62:	4419      	add	r1, r3
 800ed64:	6823      	ldr	r3, [r4, #0]
 800ed66:	b209      	sxth	r1, r1
 800ed68:	4620      	mov	r0, r4
 800ed6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ed6c:	b212      	sxth	r2, r2
 800ed6e:	4798      	blx	r3
 800ed70:	e897 0003 	ldmia.w	r7, {r0, r1}
 800ed74:	ad02      	add	r5, sp, #8
 800ed76:	e885 0003 	stmia.w	r5, {r0, r1}
 800ed7a:	6960      	ldr	r0, [r4, #20]
 800ed7c:	b150      	cbz	r0, 800ed94 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800ed7e:	6803      	ldr	r3, [r0, #0]
 800ed80:	4631      	mov	r1, r6
 800ed82:	691b      	ldr	r3, [r3, #16]
 800ed84:	4798      	blx	r3
 800ed86:	6960      	ldr	r0, [r4, #20]
 800ed88:	6803      	ldr	r3, [r0, #0]
 800ed8a:	691b      	ldr	r3, [r3, #16]
 800ed8c:	4629      	mov	r1, r5
 800ed8e:	4798      	blx	r3
 800ed90:	b005      	add	sp, #20
 800ed92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ed94:	f7ff fb7c 	bl	800e490 <_ZN8touchgfx11Application11getInstanceEv>
 800ed98:	6803      	ldr	r3, [r0, #0]
 800ed9a:	4631      	mov	r1, r6
 800ed9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed9e:	4798      	blx	r3
 800eda0:	f7ff fb76 	bl	800e490 <_ZN8touchgfx11Application11getInstanceEv>
 800eda4:	6803      	ldr	r3, [r0, #0]
 800eda6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eda8:	e7f0      	b.n	800ed8c <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800edaa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800edaa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800edac:	8882      	ldrh	r2, [r0, #4]
 800edae:	880b      	ldrh	r3, [r1, #0]
 800edb0:	4413      	add	r3, r2
 800edb2:	800b      	strh	r3, [r1, #0]
 800edb4:	88c2      	ldrh	r2, [r0, #6]
 800edb6:	884b      	ldrh	r3, [r1, #2]
 800edb8:	4413      	add	r3, r2
 800edba:	4602      	mov	r2, r0
 800edbc:	804b      	strh	r3, [r1, #2]
 800edbe:	4605      	mov	r5, r0
 800edc0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800edc4:	460c      	mov	r4, r1
 800edc6:	6851      	ldr	r1, [r2, #4]
 800edc8:	466b      	mov	r3, sp
 800edca:	c303      	stmia	r3!, {r0, r1}
 800edcc:	4621      	mov	r1, r4
 800edce:	4668      	mov	r0, sp
 800edd0:	f7fd f938 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800edd4:	466b      	mov	r3, sp
 800edd6:	cb03      	ldmia	r3!, {r0, r1}
 800edd8:	6020      	str	r0, [r4, #0]
 800edda:	6061      	str	r1, [r4, #4]
 800eddc:	6968      	ldr	r0, [r5, #20]
 800edde:	b128      	cbz	r0, 800edec <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800ede0:	6803      	ldr	r3, [r0, #0]
 800ede2:	691b      	ldr	r3, [r3, #16]
 800ede4:	4621      	mov	r1, r4
 800ede6:	4798      	blx	r3
 800ede8:	b003      	add	sp, #12
 800edea:	bd30      	pop	{r4, r5, pc}
 800edec:	f7ff fb50 	bl	800e490 <_ZN8touchgfx11Application11getInstanceEv>
 800edf0:	6803      	ldr	r3, [r0, #0]
 800edf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800edf4:	e7f6      	b.n	800ede4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800edf6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800edf6:	b570      	push	{r4, r5, r6, lr}
 800edf8:	8882      	ldrh	r2, [r0, #4]
 800edfa:	880b      	ldrh	r3, [r1, #0]
 800edfc:	4413      	add	r3, r2
 800edfe:	800b      	strh	r3, [r1, #0]
 800ee00:	88c2      	ldrh	r2, [r0, #6]
 800ee02:	884b      	ldrh	r3, [r1, #2]
 800ee04:	460c      	mov	r4, r1
 800ee06:	4413      	add	r3, r2
 800ee08:	804b      	strh	r3, [r1, #2]
 800ee0a:	4605      	mov	r5, r0
 800ee0c:	1d01      	adds	r1, r0, #4
 800ee0e:	4620      	mov	r0, r4
 800ee10:	f7fd f918 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800ee14:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800ee18:	b153      	cbz	r3, 800ee30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800ee1a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ee1e:	b13b      	cbz	r3, 800ee30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800ee20:	6968      	ldr	r0, [r5, #20]
 800ee22:	b128      	cbz	r0, 800ee30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800ee24:	6803      	ldr	r3, [r0, #0]
 800ee26:	4621      	mov	r1, r4
 800ee28:	6a1b      	ldr	r3, [r3, #32]
 800ee2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ee2e:	4718      	bx	r3
 800ee30:	bd70      	pop	{r4, r5, r6, pc}

0800ee32 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800ee32:	b510      	push	{r4, lr}
 800ee34:	4604      	mov	r4, r0
 800ee36:	4608      	mov	r0, r1
 800ee38:	2300      	movs	r3, #0
 800ee3a:	8023      	strh	r3, [r4, #0]
 800ee3c:	8063      	strh	r3, [r4, #2]
 800ee3e:	6803      	ldr	r3, [r0, #0]
 800ee40:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ee44:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800ee48:	80a1      	strh	r1, [r4, #4]
 800ee4a:	80e2      	strh	r2, [r4, #6]
 800ee4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ee4e:	4621      	mov	r1, r4
 800ee50:	4798      	blx	r3
 800ee52:	4620      	mov	r0, r4
 800ee54:	bd10      	pop	{r4, pc}
	...

0800ee58 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800ee58:	b530      	push	{r4, r5, lr}
 800ee5a:	8083      	strh	r3, [r0, #4]
 800ee5c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ee60:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800ee64:	7183      	strb	r3, [r0, #6]
 800ee66:	79c3      	ldrb	r3, [r0, #7]
 800ee68:	6101      	str	r1, [r0, #16]
 800ee6a:	f365 0306 	bfi	r3, r5, #0, #7
 800ee6e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800ee72:	8282      	strh	r2, [r0, #20]
 800ee74:	f365 13c7 	bfi	r3, r5, #7, #1
 800ee78:	71c3      	strb	r3, [r0, #7]
 800ee7a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800ee7e:	7203      	strb	r3, [r0, #8]
 800ee80:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800ee84:	7243      	strb	r3, [r0, #9]
 800ee86:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ee8a:	8143      	strh	r3, [r0, #10]
 800ee8c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800ee90:	8183      	strh	r3, [r0, #12]
 800ee92:	4b01      	ldr	r3, [pc, #4]	; (800ee98 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800ee94:	6003      	str	r3, [r0, #0]
 800ee96:	bd30      	pop	{r4, r5, pc}
 800ee98:	08020400 	.word	0x08020400

0800ee9c <_ZNK8touchgfx9ConstFont4findEt>:
 800ee9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee9e:	8a84      	ldrh	r4, [r0, #20]
 800eea0:	2500      	movs	r5, #0
 800eea2:	3c01      	subs	r4, #1
 800eea4:	260e      	movs	r6, #14
 800eea6:	42a5      	cmp	r5, r4
 800eea8:	dc0c      	bgt.n	800eec4 <_ZNK8touchgfx9ConstFont4findEt+0x28>
 800eeaa:	192a      	adds	r2, r5, r4
 800eeac:	6903      	ldr	r3, [r0, #16]
 800eeae:	1052      	asrs	r2, r2, #1
 800eeb0:	fb06 3302 	mla	r3, r6, r2, r3
 800eeb4:	889f      	ldrh	r7, [r3, #4]
 800eeb6:	428f      	cmp	r7, r1
 800eeb8:	d901      	bls.n	800eebe <_ZNK8touchgfx9ConstFont4findEt+0x22>
 800eeba:	1e54      	subs	r4, r2, #1
 800eebc:	e7f3      	b.n	800eea6 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800eebe:	d202      	bcs.n	800eec6 <_ZNK8touchgfx9ConstFont4findEt+0x2a>
 800eec0:	1c55      	adds	r5, r2, #1
 800eec2:	e7f0      	b.n	800eea6 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800eec4:	2300      	movs	r3, #0
 800eec6:	4618      	mov	r0, r3
 800eec8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800eeca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800eeca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eecc:	4605      	mov	r5, r0
 800eece:	4617      	mov	r7, r2
 800eed0:	461e      	mov	r6, r3
 800eed2:	f7ff ffe3 	bl	800ee9c <_ZNK8touchgfx9ConstFont4findEt>
 800eed6:	b9e0      	cbnz	r0, 800ef12 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x48>
 800eed8:	b911      	cbnz	r1, 800eee0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x16>
 800eeda:	2400      	movs	r4, #0
 800eedc:	4620      	mov	r0, r4
 800eede:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eee0:	290a      	cmp	r1, #10
 800eee2:	d0fa      	beq.n	800eeda <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800eee4:	682b      	ldr	r3, [r5, #0]
 800eee6:	4628      	mov	r0, r5
 800eee8:	691b      	ldr	r3, [r3, #16]
 800eeea:	4798      	blx	r3
 800eeec:	4601      	mov	r1, r0
 800eeee:	4628      	mov	r0, r5
 800eef0:	f7ff ffd4 	bl	800ee9c <_ZNK8touchgfx9ConstFont4findEt>
 800eef4:	4604      	mov	r4, r0
 800eef6:	2800      	cmp	r0, #0
 800eef8:	d0ef      	beq.n	800eeda <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800eefa:	682b      	ldr	r3, [r5, #0]
 800eefc:	4621      	mov	r1, r4
 800eefe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ef00:	4628      	mov	r0, r5
 800ef02:	4798      	blx	r3
 800ef04:	6038      	str	r0, [r7, #0]
 800ef06:	682b      	ldr	r3, [r5, #0]
 800ef08:	4628      	mov	r0, r5
 800ef0a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ef0c:	4798      	blx	r3
 800ef0e:	7030      	strb	r0, [r6, #0]
 800ef10:	e7e4      	b.n	800eedc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x12>
 800ef12:	4604      	mov	r4, r0
 800ef14:	e7f1      	b.n	800eefa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x30>

0800ef16 <_ZN8touchgfx10ClickEventD1Ev>:
 800ef16:	4770      	bx	lr

0800ef18 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800ef18:	2000      	movs	r0, #0
 800ef1a:	4770      	bx	lr

0800ef1c <_ZN8touchgfx9DragEventD1Ev>:
 800ef1c:	4770      	bx	lr

0800ef1e <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800ef1e:	2001      	movs	r0, #1
 800ef20:	4770      	bx	lr

0800ef22 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800ef22:	2002      	movs	r0, #2
 800ef24:	4770      	bx	lr

0800ef26 <_ZN8touchgfx12GestureEventD1Ev>:
 800ef26:	4770      	bx	lr

0800ef28 <_ZN8touchgfx10ClickEventD0Ev>:
 800ef28:	b510      	push	{r4, lr}
 800ef2a:	210c      	movs	r1, #12
 800ef2c:	4604      	mov	r4, r0
 800ef2e:	f00c fcfe 	bl	801b92e <_ZdlPvj>
 800ef32:	4620      	mov	r0, r4
 800ef34:	bd10      	pop	{r4, pc}

0800ef36 <_ZN8touchgfx9DragEventD0Ev>:
 800ef36:	b510      	push	{r4, lr}
 800ef38:	2110      	movs	r1, #16
 800ef3a:	4604      	mov	r4, r0
 800ef3c:	f00c fcf7 	bl	801b92e <_ZdlPvj>
 800ef40:	4620      	mov	r0, r4
 800ef42:	bd10      	pop	{r4, pc}

0800ef44 <_ZN8touchgfx12GestureEventD0Ev>:
 800ef44:	b510      	push	{r4, lr}
 800ef46:	210c      	movs	r1, #12
 800ef48:	4604      	mov	r4, r0
 800ef4a:	f00c fcf0 	bl	801b92e <_ZdlPvj>
 800ef4e:	4620      	mov	r0, r4
 800ef50:	bd10      	pop	{r4, pc}
	...

0800ef54 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800ef54:	b530      	push	{r4, r5, lr}
 800ef56:	460d      	mov	r5, r1
 800ef58:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800ef5a:	b087      	sub	sp, #28
 800ef5c:	4604      	mov	r4, r0
 800ef5e:	b301      	cbz	r1, 800efa2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800ef60:	a801      	add	r0, sp, #4
 800ef62:	f7ff ff66 	bl	800ee32 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef66:	892a      	ldrh	r2, [r5, #8]
 800ef68:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ef6c:	7928      	ldrb	r0, [r5, #4]
 800ef6e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800ef72:	f88d 0010 	strb.w	r0, [sp, #16]
 800ef76:	1ad2      	subs	r2, r2, r3
 800ef78:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ef7a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ef7c:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ef80:	441a      	add	r2, r3
 800ef82:	896b      	ldrh	r3, [r5, #10]
 800ef84:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800ef88:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ef8c:	1b5b      	subs	r3, r3, r5
 800ef8e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800ef90:	442b      	add	r3, r5
 800ef92:	4d05      	ldr	r5, [pc, #20]	; (800efa8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800ef94:	9503      	str	r5, [sp, #12]
 800ef96:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ef9a:	6803      	ldr	r3, [r0, #0]
 800ef9c:	a903      	add	r1, sp, #12
 800ef9e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800efa0:	4798      	blx	r3
 800efa2:	b007      	add	sp, #28
 800efa4:	bd30      	pop	{r4, r5, pc}
 800efa6:	bf00      	nop
 800efa8:	0802047c 	.word	0x0802047c

0800efac <_ZNK8touchgfx4Rect9intersectEss>:
 800efac:	b510      	push	{r4, lr}
 800efae:	f9b0 3000 	ldrsh.w	r3, [r0]
 800efb2:	428b      	cmp	r3, r1
 800efb4:	dc10      	bgt.n	800efd8 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800efb6:	8884      	ldrh	r4, [r0, #4]
 800efb8:	4423      	add	r3, r4
 800efba:	b21b      	sxth	r3, r3
 800efbc:	4299      	cmp	r1, r3
 800efbe:	da0b      	bge.n	800efd8 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800efc0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800efc4:	4293      	cmp	r3, r2
 800efc6:	dc07      	bgt.n	800efd8 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800efc8:	88c0      	ldrh	r0, [r0, #6]
 800efca:	4418      	add	r0, r3
 800efcc:	b200      	sxth	r0, r0
 800efce:	4282      	cmp	r2, r0
 800efd0:	bfac      	ite	ge
 800efd2:	2000      	movge	r0, #0
 800efd4:	2001      	movlt	r0, #1
 800efd6:	bd10      	pop	{r4, pc}
 800efd8:	2000      	movs	r0, #0
 800efda:	e7fc      	b.n	800efd6 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800efdc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800efdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efde:	460c      	mov	r4, r1
 800efe0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800efe2:	b089      	sub	sp, #36	; 0x24
 800efe4:	4605      	mov	r5, r0
 800efe6:	2900      	cmp	r1, #0
 800efe8:	d054      	beq.n	800f094 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800efea:	4668      	mov	r0, sp
 800efec:	f7ff ff21 	bl	800ee32 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800eff0:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800eff2:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800eff4:	8922      	ldrh	r2, [r4, #8]
 800eff6:	88e1      	ldrh	r1, [r4, #6]
 800eff8:	443a      	add	r2, r7
 800effa:	4431      	add	r1, r6
 800effc:	b212      	sxth	r2, r2
 800effe:	b209      	sxth	r1, r1
 800f000:	4668      	mov	r0, sp
 800f002:	f7ff ffd3 	bl	800efac <_ZNK8touchgfx4Rect9intersectEss>
 800f006:	b1d0      	cbz	r0, 800f03e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800f008:	89a2      	ldrh	r2, [r4, #12]
 800f00a:	8961      	ldrh	r1, [r4, #10]
 800f00c:	443a      	add	r2, r7
 800f00e:	4431      	add	r1, r6
 800f010:	b212      	sxth	r2, r2
 800f012:	b209      	sxth	r1, r1
 800f014:	4668      	mov	r0, sp
 800f016:	f7ff ffc9 	bl	800efac <_ZNK8touchgfx4Rect9intersectEss>
 800f01a:	4603      	mov	r3, r0
 800f01c:	b978      	cbnz	r0, 800f03e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800f01e:	4a1e      	ldr	r2, [pc, #120]	; (800f098 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800f020:	9204      	str	r2, [sp, #16]
 800f022:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f024:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f028:	2202      	movs	r2, #2
 800f02a:	f88d 2014 	strb.w	r2, [sp, #20]
 800f02e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f032:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f036:	6803      	ldr	r3, [r0, #0]
 800f038:	a904      	add	r1, sp, #16
 800f03a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f03c:	4798      	blx	r3
 800f03e:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800f040:	a802      	add	r0, sp, #8
 800f042:	f7ff fef6 	bl	800ee32 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f046:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f04a:	88e0      	ldrh	r0, [r4, #6]
 800f04c:	8961      	ldrh	r1, [r4, #10]
 800f04e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800f052:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800f056:	8923      	ldrh	r3, [r4, #8]
 800f058:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800f05a:	7927      	ldrb	r7, [r4, #4]
 800f05c:	f88d 7014 	strb.w	r7, [sp, #20]
 800f060:	1a80      	subs	r0, r0, r2
 800f062:	1a89      	subs	r1, r1, r2
 800f064:	89a2      	ldrh	r2, [r4, #12]
 800f066:	4c0d      	ldr	r4, [pc, #52]	; (800f09c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800f068:	9404      	str	r4, [sp, #16]
 800f06a:	4460      	add	r0, ip
 800f06c:	eba3 030e 	sub.w	r3, r3, lr
 800f070:	eba2 020e 	sub.w	r2, r2, lr
 800f074:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f078:	4433      	add	r3, r6
 800f07a:	4461      	add	r1, ip
 800f07c:	4432      	add	r2, r6
 800f07e:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f080:	f8ad 101a 	strh.w	r1, [sp, #26]
 800f084:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f088:	f8ad 201c 	strh.w	r2, [sp, #28]
 800f08c:	6803      	ldr	r3, [r0, #0]
 800f08e:	a904      	add	r1, sp, #16
 800f090:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f092:	4798      	blx	r3
 800f094:	b009      	add	sp, #36	; 0x24
 800f096:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f098:	08020454 	.word	0x08020454
 800f09c:	08020468 	.word	0x08020468

0800f0a0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f0a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f0a4:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800f0a8:	790b      	ldrb	r3, [r1, #4]
 800f0aa:	b0a1      	sub	sp, #132	; 0x84
 800f0ac:	4604      	mov	r4, r0
 800f0ae:	460d      	mov	r5, r1
 800f0b0:	f1b9 0f00 	cmp.w	r9, #0
 800f0b4:	d00f      	beq.n	800f0d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800f0b6:	2b00      	cmp	r3, #0
 800f0b8:	f040 80a0 	bne.w	800f1fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800f0bc:	b021      	add	sp, #132	; 0x84
 800f0be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0c2:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800f0c6:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f0ca:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f0ce:	1d20      	adds	r0, r4, #4
 800f0d0:	f7fc ff06 	bl	800bee0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f0d4:	e092      	b.n	800f1fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800f0d6:	2b00      	cmp	r3, #0
 800f0d8:	d1f0      	bne.n	800f0bc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f0da:	4b5e      	ldr	r3, [pc, #376]	; (800f254 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800f0dc:	681b      	ldr	r3, [r3, #0]
 800f0de:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800f0e2:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800f0e6:	f1ba 0f03 	cmp.w	sl, #3
 800f0ea:	ddea      	ble.n	800f0c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800f0ec:	f1ba 0f0c 	cmp.w	sl, #12
 800f0f0:	f04f 0303 	mov.w	r3, #3
 800f0f4:	bfdc      	itt	le
 800f0f6:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800f0fa:	fb92 f3f3 	sdivle	r3, r2, r3
 800f0fe:	9301      	str	r3, [sp, #4]
 800f100:	4b55      	ldr	r3, [pc, #340]	; (800f258 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800f102:	4956      	ldr	r1, [pc, #344]	; (800f25c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800f104:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f108:	4b55      	ldr	r3, [pc, #340]	; (800f260 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800f10a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800f10e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f112:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f116:	ab0e      	add	r3, sp, #56	; 0x38
 800f118:	2248      	movs	r2, #72	; 0x48
 800f11a:	2600      	movs	r6, #0
 800f11c:	4618      	mov	r0, r3
 800f11e:	960a      	str	r6, [sp, #40]	; 0x28
 800f120:	f00c fcb6 	bl	801ba90 <memcpy>
 800f124:	f04f 32ff 	mov.w	r2, #4294967295
 800f128:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800f12c:	f8cd a008 	str.w	sl, [sp, #8]
 800f130:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f134:	fb93 f3f2 	sdiv	r3, r3, r2
 800f138:	b29b      	uxth	r3, r3
 800f13a:	46b3      	mov	fp, r6
 800f13c:	9303      	str	r3, [sp, #12]
 800f13e:	2300      	movs	r3, #0
 800f140:	9309      	str	r3, [sp, #36]	; 0x24
 800f142:	9b07      	ldr	r3, [sp, #28]
 800f144:	9a03      	ldr	r2, [sp, #12]
 800f146:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800f14a:	88ef      	ldrh	r7, [r5, #6]
 800f14c:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800f150:	fb13 f302 	smulbb	r3, r3, r2
 800f154:	b29b      	uxth	r3, r3
 800f156:	9304      	str	r3, [sp, #16]
 800f158:	9b07      	ldr	r3, [sp, #28]
 800f15a:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800f15e:	a80a      	add	r0, sp, #40	; 0x28
 800f160:	685b      	ldr	r3, [r3, #4]
 800f162:	fb13 f302 	smulbb	r3, r3, r2
 800f166:	b29b      	uxth	r3, r3
 800f168:	9305      	str	r3, [sp, #20]
 800f16a:	9b04      	ldr	r3, [sp, #16]
 800f16c:	441f      	add	r7, r3
 800f16e:	9b05      	ldr	r3, [sp, #20]
 800f170:	4498      	add	r8, r3
 800f172:	b23f      	sxth	r7, r7
 800f174:	fa0f f888 	sxth.w	r8, r8
 800f178:	4642      	mov	r2, r8
 800f17a:	4639      	mov	r1, r7
 800f17c:	f7ff ff16 	bl	800efac <_ZNK8touchgfx4Rect9intersectEss>
 800f180:	b380      	cbz	r0, 800f1e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f182:	4639      	mov	r1, r7
 800f184:	ab09      	add	r3, sp, #36	; 0x24
 800f186:	4642      	mov	r2, r8
 800f188:	1d20      	adds	r0, r4, #4
 800f18a:	f7fc fea9 	bl	800bee0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f18e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f190:	b341      	cbz	r1, 800f1e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f192:	4549      	cmp	r1, r9
 800f194:	d026      	beq.n	800f1e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f196:	a80c      	add	r0, sp, #48	; 0x30
 800f198:	f7ff fe4b 	bl	800ee32 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f19c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800f1a0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f1a4:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800f1a8:	2002      	movs	r0, #2
 800f1aa:	fb92 f2f0 	sdiv	r2, r2, r0
 800f1ae:	440a      	add	r2, r1
 800f1b0:	1a99      	subs	r1, r3, r2
 800f1b2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800f1b6:	fb93 f3f0 	sdiv	r3, r3, r0
 800f1ba:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800f1be:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f1c2:	4403      	add	r3, r0
 800f1c4:	1ad3      	subs	r3, r2, r3
 800f1c6:	435b      	muls	r3, r3
 800f1c8:	9a06      	ldr	r2, [sp, #24]
 800f1ca:	fb01 3301 	mla	r3, r1, r1, r3
 800f1ce:	4293      	cmp	r3, r2
 800f1d0:	d208      	bcs.n	800f1e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f1d2:	9a04      	ldr	r2, [sp, #16]
 800f1d4:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800f1d8:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f1da:	9a05      	ldr	r2, [sp, #20]
 800f1dc:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800f1e0:	86e2      	strh	r2, [r4, #54]	; 0x36
 800f1e2:	9306      	str	r3, [sp, #24]
 800f1e4:	f10b 0b02 	add.w	fp, fp, #2
 800f1e8:	f1bb 0f08 	cmp.w	fp, #8
 800f1ec:	dda7      	ble.n	800f13e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f1ee:	9b02      	ldr	r3, [sp, #8]
 800f1f0:	4453      	add	r3, sl
 800f1f2:	9302      	str	r3, [sp, #8]
 800f1f4:	9b01      	ldr	r3, [sp, #4]
 800f1f6:	3601      	adds	r6, #1
 800f1f8:	42b3      	cmp	r3, r6
 800f1fa:	d199      	bne.n	800f130 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800f1fc:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f1fe:	2900      	cmp	r1, #0
 800f200:	f43f af5c 	beq.w	800f0bc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f204:	a80c      	add	r0, sp, #48	; 0x30
 800f206:	f7ff fe14 	bl	800ee32 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f20a:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800f20e:	88ea      	ldrh	r2, [r5, #6]
 800f210:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800f214:	7929      	ldrb	r1, [r5, #4]
 800f216:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800f21a:	1ad2      	subs	r2, r2, r3
 800f21c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f21e:	441a      	add	r2, r3
 800f220:	892b      	ldrh	r3, [r5, #8]
 800f222:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800f226:	1a1b      	subs	r3, r3, r0
 800f228:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800f22a:	4403      	add	r3, r0
 800f22c:	480d      	ldr	r0, [pc, #52]	; (800f264 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800f22e:	900e      	str	r0, [sp, #56]	; 0x38
 800f230:	2600      	movs	r6, #0
 800f232:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f234:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800f238:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800f23c:	6803      	ldr	r3, [r0, #0]
 800f23e:	a90e      	add	r1, sp, #56	; 0x38
 800f240:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f242:	4798      	blx	r3
 800f244:	792b      	ldrb	r3, [r5, #4]
 800f246:	2b00      	cmp	r3, #0
 800f248:	f43f af38 	beq.w	800f0bc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f24c:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800f250:	e734      	b.n	800f0bc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f252:	bf00      	nop
 800f254:	200017a0 	.word	0x200017a0
 800f258:	20001794 	.word	0x20001794
 800f25c:	0801ed5c 	.word	0x0801ed5c
 800f260:	20001796 	.word	0x20001796
 800f264:	08020454 	.word	0x08020454

0800f268 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f268:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f26a:	4604      	mov	r4, r0
 800f26c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f270:	3201      	adds	r2, #1
 800f272:	d112      	bne.n	800f29a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f274:	6803      	ldr	r3, [r0, #0]
 800f276:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f27a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f27e:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f282:	2500      	movs	r5, #0
 800f284:	9500      	str	r5, [sp, #0]
 800f286:	466d      	mov	r5, sp
 800f288:	4629      	mov	r1, r5
 800f28a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f28e:	6a1b      	ldr	r3, [r3, #32]
 800f290:	4798      	blx	r3
 800f292:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f296:	e884 0003 	stmia.w	r4, {r0, r1}
 800f29a:	4620      	mov	r0, r4
 800f29c:	b003      	add	sp, #12
 800f29e:	bd30      	pop	{r4, r5, pc}

0800f2a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f2a0:	b513      	push	{r0, r1, r4, lr}
 800f2a2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f2a6:	3301      	adds	r3, #1
 800f2a8:	4604      	mov	r4, r0
 800f2aa:	d109      	bne.n	800f2c0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f2ac:	4601      	mov	r1, r0
 800f2ae:	4668      	mov	r0, sp
 800f2b0:	f7ff fdbf 	bl	800ee32 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f2b4:	f8bd 3000 	ldrh.w	r3, [sp]
 800f2b8:	8423      	strh	r3, [r4, #32]
 800f2ba:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f2be:	8463      	strh	r3, [r4, #34]	; 0x22
 800f2c0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f2c4:	b002      	add	sp, #8
 800f2c6:	bd10      	pop	{r4, pc}

0800f2c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f2c8:	b513      	push	{r0, r1, r4, lr}
 800f2ca:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800f2ce:	3301      	adds	r3, #1
 800f2d0:	4604      	mov	r4, r0
 800f2d2:	d109      	bne.n	800f2e8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f2d4:	4601      	mov	r1, r0
 800f2d6:	4668      	mov	r0, sp
 800f2d8:	f7ff fdab 	bl	800ee32 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f2dc:	f8bd 3000 	ldrh.w	r3, [sp]
 800f2e0:	8423      	strh	r3, [r4, #32]
 800f2e2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f2e6:	8463      	strh	r3, [r4, #34]	; 0x22
 800f2e8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800f2ec:	b002      	add	sp, #8
 800f2ee:	bd10      	pop	{r4, pc}

0800f2f0 <_ZN8touchgfx6ScreenC1Ev>:
 800f2f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f2f2:	4605      	mov	r5, r0
 800f2f4:	4b17      	ldr	r3, [pc, #92]	; (800f354 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f2f6:	f845 3b04 	str.w	r3, [r5], #4
 800f2fa:	2301      	movs	r3, #1
 800f2fc:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800f300:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800f304:	4b14      	ldr	r3, [pc, #80]	; (800f358 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f306:	4915      	ldr	r1, [pc, #84]	; (800f35c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f308:	f9b3 7000 	ldrsh.w	r7, [r3]
 800f30c:	4b14      	ldr	r3, [pc, #80]	; (800f360 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800f30e:	6041      	str	r1, [r0, #4]
 800f310:	2200      	movs	r2, #0
 800f312:	8102      	strh	r2, [r0, #8]
 800f314:	8142      	strh	r2, [r0, #10]
 800f316:	8182      	strh	r2, [r0, #12]
 800f318:	81c2      	strh	r2, [r0, #14]
 800f31a:	8202      	strh	r2, [r0, #16]
 800f31c:	8242      	strh	r2, [r0, #18]
 800f31e:	8282      	strh	r2, [r0, #20]
 800f320:	82c2      	strh	r2, [r0, #22]
 800f322:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800f326:	6202      	str	r2, [r0, #32]
 800f328:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800f32c:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800f330:	6342      	str	r2, [r0, #52]	; 0x34
 800f332:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f336:	4611      	mov	r1, r2
 800f338:	4604      	mov	r4, r0
 800f33a:	4628      	mov	r0, r5
 800f33c:	f7f9 feaf 	bl	800909e <_ZN8touchgfx8Drawable5setXYEss>
 800f340:	4639      	mov	r1, r7
 800f342:	4628      	mov	r0, r5
 800f344:	f7f9 fec9 	bl	80090da <_ZN8touchgfx8Drawable8setWidthEs>
 800f348:	4628      	mov	r0, r5
 800f34a:	4631      	mov	r1, r6
 800f34c:	f7f9 fed4 	bl	80090f8 <_ZN8touchgfx8Drawable9setHeightEs>
 800f350:	4620      	mov	r0, r4
 800f352:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f354:	08020490 	.word	0x08020490
 800f358:	20001794 	.word	0x20001794
 800f35c:	0801f6ac 	.word	0x0801f6ac
 800f360:	20001796 	.word	0x20001796

0800f364 <_ZN8touchgfx6Screen4drawEv>:
 800f364:	b507      	push	{r0, r1, r2, lr}
 800f366:	4b09      	ldr	r3, [pc, #36]	; (800f38c <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f368:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f36c:	4b08      	ldr	r3, [pc, #32]	; (800f390 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f36e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f372:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f376:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f37a:	6803      	ldr	r3, [r0, #0]
 800f37c:	2100      	movs	r1, #0
 800f37e:	9100      	str	r1, [sp, #0]
 800f380:	689b      	ldr	r3, [r3, #8]
 800f382:	4669      	mov	r1, sp
 800f384:	4798      	blx	r3
 800f386:	b003      	add	sp, #12
 800f388:	f85d fb04 	ldr.w	pc, [sp], #4
 800f38c:	20001794 	.word	0x20001794
 800f390:	20001796 	.word	0x20001796

0800f394 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f398:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f39c:	b089      	sub	sp, #36	; 0x24
 800f39e:	4680      	mov	r8, r0
 800f3a0:	460c      	mov	r4, r1
 800f3a2:	4615      	mov	r5, r2
 800f3a4:	b16b      	cbz	r3, 800f3c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f3a6:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f3aa:	b153      	cbz	r3, 800f3c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f3ac:	4628      	mov	r0, r5
 800f3ae:	f7ff ff5b 	bl	800f268 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f3b2:	4621      	mov	r1, r4
 800f3b4:	f7fe ffe2 	bl	800e37c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f3b8:	69eb      	ldr	r3, [r5, #28]
 800f3ba:	b928      	cbnz	r0, 800f3c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x34>
 800f3bc:	461d      	mov	r5, r3
 800f3be:	2b00      	cmp	r3, #0
 800f3c0:	d1f4      	bne.n	800f3ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18>
 800f3c2:	b009      	add	sp, #36	; 0x24
 800f3c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3c8:	ae04      	add	r6, sp, #16
 800f3ca:	2b00      	cmp	r3, #0
 800f3cc:	d051      	beq.n	800f472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800f3ce:	682b      	ldr	r3, [r5, #0]
 800f3d0:	4629      	mov	r1, r5
 800f3d2:	68db      	ldr	r3, [r3, #12]
 800f3d4:	a802      	add	r0, sp, #8
 800f3d6:	4798      	blx	r3
 800f3d8:	4628      	mov	r0, r5
 800f3da:	f7ff ff61 	bl	800f2a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f3de:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f3e2:	4407      	add	r7, r0
 800f3e4:	4628      	mov	r0, r5
 800f3e6:	f7ff ff6f 	bl	800f2c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f3ea:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f3ee:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f3f2:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f3f6:	4418      	add	r0, r3
 800f3f8:	4621      	mov	r1, r4
 800f3fa:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f3fe:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f402:	b23f      	sxth	r7, r7
 800f404:	4630      	mov	r0, r6
 800f406:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f40a:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f40e:	f7fc fe19 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800f412:	4628      	mov	r0, r5
 800f414:	f7ff ff28 	bl	800f268 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f418:	4602      	mov	r2, r0
 800f41a:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f41e:	ab06      	add	r3, sp, #24
 800f420:	e883 0003 	stmia.w	r3, {r0, r1}
 800f424:	4611      	mov	r1, r2
 800f426:	4618      	mov	r0, r3
 800f428:	f7fc fe0c 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800f42c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f430:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f434:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f438:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f43c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f440:	4299      	cmp	r1, r3
 800f442:	d10b      	bne.n	800f45c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800f444:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f448:	4552      	cmp	r2, sl
 800f44a:	d107      	bne.n	800f45c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800f44c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f450:	455a      	cmp	r2, fp
 800f452:	d103      	bne.n	800f45c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800f454:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f458:	454a      	cmp	r2, r9
 800f45a:	d00a      	beq.n	800f472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800f45c:	f1bb 0f00 	cmp.w	fp, #0
 800f460:	d002      	beq.n	800f468 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800f462:	f1b9 0f00 	cmp.w	r9, #0
 800f466:	d12e      	bne.n	800f4c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x132>
 800f468:	69ea      	ldr	r2, [r5, #28]
 800f46a:	4621      	mov	r1, r4
 800f46c:	4640      	mov	r0, r8
 800f46e:	f7ff ff91 	bl	800f394 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f472:	4628      	mov	r0, r5
 800f474:	f7ff fef8 	bl	800f268 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f478:	6861      	ldr	r1, [r4, #4]
 800f47a:	4602      	mov	r2, r0
 800f47c:	6820      	ldr	r0, [r4, #0]
 800f47e:	4633      	mov	r3, r6
 800f480:	c303      	stmia	r3!, {r0, r1}
 800f482:	4611      	mov	r1, r2
 800f484:	4630      	mov	r0, r6
 800f486:	f7fc fddd 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800f48a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f48e:	2b00      	cmp	r3, #0
 800f490:	d097      	beq.n	800f3c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f492:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f496:	2b00      	cmp	r3, #0
 800f498:	d093      	beq.n	800f3c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f49a:	4628      	mov	r0, r5
 800f49c:	f7ff ff00 	bl	800f2a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f4a0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f4a4:	1a18      	subs	r0, r3, r0
 800f4a6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f4aa:	4628      	mov	r0, r5
 800f4ac:	f7ff ff0c 	bl	800f2c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f4b0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f4b4:	1a18      	subs	r0, r3, r0
 800f4b6:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f4ba:	682b      	ldr	r3, [r5, #0]
 800f4bc:	4631      	mov	r1, r6
 800f4be:	689b      	ldr	r3, [r3, #8]
 800f4c0:	4628      	mov	r0, r5
 800f4c2:	4798      	blx	r3
 800f4c4:	e77d      	b.n	800f3c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800f4c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f4ca:	fa1f f08a 	uxth.w	r0, sl
 800f4ce:	4552      	cmp	r2, sl
 800f4d0:	9000      	str	r0, [sp, #0]
 800f4d2:	da12      	bge.n	800f4fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x166>
 800f4d4:	9301      	str	r3, [sp, #4]
 800f4d6:	9b00      	ldr	r3, [sp, #0]
 800f4d8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f4dc:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f4e0:	1a9a      	subs	r2, r3, r2
 800f4e2:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f4e6:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f4ea:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f4ee:	69ea      	ldr	r2, [r5, #28]
 800f4f0:	4631      	mov	r1, r6
 800f4f2:	4640      	mov	r0, r8
 800f4f4:	f7ff ff4e 	bl	800f394 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f4f8:	9b01      	ldr	r3, [sp, #4]
 800f4fa:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f4fe:	429a      	cmp	r2, r3
 800f500:	b29f      	uxth	r7, r3
 800f502:	da0d      	bge.n	800f520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18c>
 800f504:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f508:	1aba      	subs	r2, r7, r2
 800f50a:	f8ad a012 	strh.w	sl, [sp, #18]
 800f50e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f512:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f516:	69ea      	ldr	r2, [r5, #28]
 800f518:	4631      	mov	r1, r6
 800f51a:	4640      	mov	r0, r8
 800f51c:	f7ff ff3a 	bl	800f394 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f520:	8822      	ldrh	r2, [r4, #0]
 800f522:	88a3      	ldrh	r3, [r4, #4]
 800f524:	445f      	add	r7, fp
 800f526:	4413      	add	r3, r2
 800f528:	b29b      	uxth	r3, r3
 800f52a:	b2bf      	uxth	r7, r7
 800f52c:	b23a      	sxth	r2, r7
 800f52e:	b219      	sxth	r1, r3
 800f530:	4291      	cmp	r1, r2
 800f532:	dd0d      	ble.n	800f550 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1bc>
 800f534:	1bdb      	subs	r3, r3, r7
 800f536:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f53a:	f8ad a012 	strh.w	sl, [sp, #18]
 800f53e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f542:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f546:	69ea      	ldr	r2, [r5, #28]
 800f548:	4631      	mov	r1, r6
 800f54a:	4640      	mov	r0, r8
 800f54c:	f7ff ff22 	bl	800f394 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f550:	88e2      	ldrh	r2, [r4, #6]
 800f552:	8863      	ldrh	r3, [r4, #2]
 800f554:	4413      	add	r3, r2
 800f556:	9a00      	ldr	r2, [sp, #0]
 800f558:	444a      	add	r2, r9
 800f55a:	b29b      	uxth	r3, r3
 800f55c:	fa1f f982 	uxth.w	r9, r2
 800f560:	fa0f f289 	sxth.w	r2, r9
 800f564:	b219      	sxth	r1, r3
 800f566:	428a      	cmp	r2, r1
 800f568:	da83      	bge.n	800f472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800f56a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f56e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f572:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f576:	eba3 0309 	sub.w	r3, r3, r9
 800f57a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f57e:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f582:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f586:	69ea      	ldr	r2, [r5, #28]
 800f588:	4631      	mov	r1, r6
 800f58a:	e76f      	b.n	800f46c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>

0800f58c <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f58c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f58e:	aa02      	add	r2, sp, #8
 800f590:	2300      	movs	r3, #0
 800f592:	f842 3d04 	str.w	r3, [r2, #-4]!
 800f596:	4604      	mov	r4, r0
 800f598:	3004      	adds	r0, #4
 800f59a:	460d      	mov	r5, r1
 800f59c:	f7fc fe29 	bl	800c1f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f5a0:	9a01      	ldr	r2, [sp, #4]
 800f5a2:	b11a      	cbz	r2, 800f5ac <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800f5a4:	4629      	mov	r1, r5
 800f5a6:	4620      	mov	r0, r4
 800f5a8:	f7ff fef4 	bl	800f394 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f5ac:	b003      	add	sp, #12
 800f5ae:	bd30      	pop	{r4, r5, pc}

0800f5b0 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f5b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f5b2:	4602      	mov	r2, r0
 800f5b4:	4604      	mov	r4, r0
 800f5b6:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f5ba:	460d      	mov	r5, r1
 800f5bc:	6851      	ldr	r1, [r2, #4]
 800f5be:	466b      	mov	r3, sp
 800f5c0:	c303      	stmia	r3!, {r0, r1}
 800f5c2:	4629      	mov	r1, r5
 800f5c4:	4668      	mov	r0, sp
 800f5c6:	f7fc fd3d 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 800f5ca:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f5ce:	4669      	mov	r1, sp
 800f5d0:	b123      	cbz	r3, 800f5dc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800f5d2:	4620      	mov	r0, r4
 800f5d4:	f7ff ffda 	bl	800f58c <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f5d8:	b003      	add	sp, #12
 800f5da:	bd30      	pop	{r4, r5, pc}
 800f5dc:	1d20      	adds	r0, r4, #4
 800f5de:	f7fc fdcf 	bl	800c180 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f5e2:	e7f9      	b.n	800f5d8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800f5e4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f5e4:	680a      	ldr	r2, [r1, #0]
 800f5e6:	460b      	mov	r3, r1
 800f5e8:	6952      	ldr	r2, [r2, #20]
 800f5ea:	1d01      	adds	r1, r0, #4
 800f5ec:	4618      	mov	r0, r3
 800f5ee:	4710      	bx	r2

0800f5f0 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>:
 800f5f0:	f011 0f40 	tst.w	r1, #64	; 0x40
 800f5f4:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 800f5f8:	4b03      	ldr	r3, [pc, #12]	; (800f608 <_ZNK8touchgfx9GlyphNode3topEv.isra.2+0x18>)
 800f5fa:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800f5fe:	bf08      	it	eq
 800f600:	2300      	moveq	r3, #0
 800f602:	4308      	orrs	r0, r1
 800f604:	4318      	orrs	r0, r3
 800f606:	4770      	bx	lr
 800f608:	fffffe00 	.word	0xfffffe00

0800f60c <_ZN8touchgfx9GlyphNode6setTopEs>:
 800f60c:	7b43      	ldrb	r3, [r0, #13]
 800f60e:	7201      	strb	r1, [r0, #8]
 800f610:	b289      	uxth	r1, r1
 800f612:	f003 039f 	and.w	r3, r3, #159	; 0x9f
 800f616:	05ca      	lsls	r2, r1, #23
 800f618:	bf48      	it	mi
 800f61a:	f043 0320 	orrmi.w	r3, r3, #32
 800f61e:	7343      	strb	r3, [r0, #13]
 800f620:	058b      	lsls	r3, r1, #22
 800f622:	bf42      	ittt	mi
 800f624:	7b43      	ldrbmi	r3, [r0, #13]
 800f626:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 800f62a:	7343      	strbmi	r3, [r0, #13]
 800f62c:	4770      	bx	lr

0800f62e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f62e:	b530      	push	{r4, r5, lr}
 800f630:	2500      	movs	r5, #0
 800f632:	2401      	movs	r4, #1
 800f634:	6843      	ldr	r3, [r0, #4]
 800f636:	b913      	cbnz	r3, 800f63e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f638:	6803      	ldr	r3, [r0, #0]
 800f63a:	b1f3      	cbz	r3, 800f67a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800f63c:	6043      	str	r3, [r0, #4]
 800f63e:	7c03      	ldrb	r3, [r0, #16]
 800f640:	b143      	cbz	r3, 800f654 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f642:	68c3      	ldr	r3, [r0, #12]
 800f644:	b12b      	cbz	r3, 800f652 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f646:	881a      	ldrh	r2, [r3, #0]
 800f648:	b11a      	cbz	r2, 800f652 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f64a:	1c9a      	adds	r2, r3, #2
 800f64c:	60c2      	str	r2, [r0, #12]
 800f64e:	8818      	ldrh	r0, [r3, #0]
 800f650:	bd30      	pop	{r4, r5, pc}
 800f652:	7405      	strb	r5, [r0, #16]
 800f654:	6843      	ldr	r3, [r0, #4]
 800f656:	8819      	ldrh	r1, [r3, #0]
 800f658:	b179      	cbz	r1, 800f67a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800f65a:	1c9a      	adds	r2, r3, #2
 800f65c:	2902      	cmp	r1, #2
 800f65e:	6042      	str	r2, [r0, #4]
 800f660:	d1f5      	bne.n	800f64e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f662:	6883      	ldr	r3, [r0, #8]
 800f664:	1d1a      	adds	r2, r3, #4
 800f666:	6082      	str	r2, [r0, #8]
 800f668:	681b      	ldr	r3, [r3, #0]
 800f66a:	60c3      	str	r3, [r0, #12]
 800f66c:	2b00      	cmp	r3, #0
 800f66e:	d0e1      	beq.n	800f634 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f670:	881b      	ldrh	r3, [r3, #0]
 800f672:	2b00      	cmp	r3, #0
 800f674:	d0de      	beq.n	800f634 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f676:	7404      	strb	r4, [r0, #16]
 800f678:	e7dc      	b.n	800f634 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f67a:	2000      	movs	r0, #0
 800f67c:	e7e8      	b.n	800f650 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f67e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f67e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f680:	4605      	mov	r5, r0
 800f682:	4608      	mov	r0, r1
 800f684:	b1e9      	cbz	r1, 800f6c2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f686:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800f68a:	460b      	mov	r3, r1
 800f68c:	f101 0708 	add.w	r7, r1, #8
 800f690:	4622      	mov	r2, r4
 800f692:	6818      	ldr	r0, [r3, #0]
 800f694:	6859      	ldr	r1, [r3, #4]
 800f696:	4626      	mov	r6, r4
 800f698:	c603      	stmia	r6!, {r0, r1}
 800f69a:	3308      	adds	r3, #8
 800f69c:	42bb      	cmp	r3, r7
 800f69e:	4634      	mov	r4, r6
 800f6a0:	d1f7      	bne.n	800f692 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f6a2:	6818      	ldr	r0, [r3, #0]
 800f6a4:	6030      	str	r0, [r6, #0]
 800f6a6:	889b      	ldrh	r3, [r3, #4]
 800f6a8:	80b3      	strh	r3, [r6, #4]
 800f6aa:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800f6ae:	015b      	lsls	r3, r3, #5
 800f6b0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800f6b4:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800f6b8:	430b      	orrs	r3, r1
 800f6ba:	425b      	negs	r3, r3
 800f6bc:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800f6c0:	4610      	mov	r0, r2
 800f6c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f6c4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f6c4:	b538      	push	{r3, r4, r5, lr}
 800f6c6:	460c      	mov	r4, r1
 800f6c8:	6811      	ldr	r1, [r2, #0]
 800f6ca:	4610      	mov	r0, r2
 800f6cc:	68cd      	ldr	r5, [r1, #12]
 800f6ce:	4619      	mov	r1, r3
 800f6d0:	47a8      	blx	r5
 800f6d2:	2800      	cmp	r0, #0
 800f6d4:	bf08      	it	eq
 800f6d6:	4620      	moveq	r0, r4
 800f6d8:	bd38      	pop	{r3, r4, r5, pc}

0800f6da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f6da:	b570      	push	{r4, r5, r6, lr}
 800f6dc:	8810      	ldrh	r0, [r2, #0]
 800f6de:	4298      	cmp	r0, r3
 800f6e0:	d817      	bhi.n	800f712 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f6e2:	1e48      	subs	r0, r1, #1
 800f6e4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f6e8:	4298      	cmp	r0, r3
 800f6ea:	d312      	bcc.n	800f712 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f6ec:	2400      	movs	r4, #0
 800f6ee:	428c      	cmp	r4, r1
 800f6f0:	d20f      	bcs.n	800f712 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f6f2:	1860      	adds	r0, r4, r1
 800f6f4:	1040      	asrs	r0, r0, #1
 800f6f6:	0085      	lsls	r5, r0, #2
 800f6f8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f6fc:	42b3      	cmp	r3, r6
 800f6fe:	d902      	bls.n	800f706 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f700:	3001      	adds	r0, #1
 800f702:	b284      	uxth	r4, r0
 800f704:	e7f3      	b.n	800f6ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f706:	d102      	bne.n	800f70e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x34>
 800f708:	442a      	add	r2, r5
 800f70a:	8850      	ldrh	r0, [r2, #2]
 800f70c:	bd70      	pop	{r4, r5, r6, pc}
 800f70e:	b281      	uxth	r1, r0
 800f710:	e7ed      	b.n	800f6ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f712:	2000      	movs	r0, #0
 800f714:	e7fa      	b.n	800f70c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
	...

0800f718 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>:
 800f718:	b510      	push	{r4, lr}
 800f71a:	8ac3      	ldrh	r3, [r0, #22]
 800f71c:	428b      	cmp	r3, r1
 800f71e:	d805      	bhi.n	800f72c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x14>
 800f720:	4b07      	ldr	r3, [pc, #28]	; (800f740 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x28>)
 800f722:	4a08      	ldr	r2, [pc, #32]	; (800f744 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x2c>)
 800f724:	4808      	ldr	r0, [pc, #32]	; (800f748 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x30>)
 800f726:	21fd      	movs	r1, #253	; 0xfd
 800f728:	f00c f930 	bl	801b98c <__assert_func>
 800f72c:	8a83      	ldrh	r3, [r0, #20]
 800f72e:	240a      	movs	r4, #10
 800f730:	4419      	add	r1, r3
 800f732:	fbb1 f3f4 	udiv	r3, r1, r4
 800f736:	fb04 1113 	mls	r1, r4, r3, r1
 800f73a:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800f73e:	bd10      	pop	{r4, pc}
 800f740:	080204dd 	.word	0x080204dd
 800f744:	0802090c 	.word	0x0802090c
 800f748:	080204eb 	.word	0x080204eb

0800f74c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>:
 800f74c:	b508      	push	{r3, lr}
 800f74e:	8ac3      	ldrh	r3, [r0, #22]
 800f750:	428b      	cmp	r3, r1
 800f752:	d805      	bhi.n	800f760 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x14>
 800f754:	4b07      	ldr	r3, [pc, #28]	; (800f774 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x28>)
 800f756:	4a08      	ldr	r2, [pc, #32]	; (800f778 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x2c>)
 800f758:	4808      	ldr	r0, [pc, #32]	; (800f77c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x30>)
 800f75a:	21d3      	movs	r1, #211	; 0xd3
 800f75c:	f00c f916 	bl	801b98c <__assert_func>
 800f760:	8a83      	ldrh	r3, [r0, #20]
 800f762:	220a      	movs	r2, #10
 800f764:	4419      	add	r1, r3
 800f766:	fbb1 f3f2 	udiv	r3, r1, r2
 800f76a:	fb02 1113 	mls	r1, r2, r3, r1
 800f76e:	f830 0011 	ldrh.w	r0, [r0, r1, lsl #1]
 800f772:	bd08      	pop	{r3, pc}
 800f774:	080204dd 	.word	0x080204dd
 800f778:	0802065c 	.word	0x0802065c
 800f77c:	080204eb 	.word	0x080204eb

0800f780 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f780:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f784:	4604      	mov	r4, r0
 800f786:	4688      	mov	r8, r1
 800f788:	4615      	mov	r5, r2
 800f78a:	b94a      	cbnz	r2, 800f7a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20>
 800f78c:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800f790:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800f794:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800f798:	4691      	mov	r9, r2
 800f79a:	4648      	mov	r0, r9
 800f79c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7a0:	f100 0640 	add.w	r6, r0, #64	; 0x40
 800f7a4:	8892      	ldrh	r2, [r2, #4]
 800f7a6:	462b      	mov	r3, r5
 800f7a8:	f105 0c08 	add.w	ip, r5, #8
 800f7ac:	46b3      	mov	fp, r6
 800f7ae:	6818      	ldr	r0, [r3, #0]
 800f7b0:	6859      	ldr	r1, [r3, #4]
 800f7b2:	4637      	mov	r7, r6
 800f7b4:	c703      	stmia	r7!, {r0, r1}
 800f7b6:	3308      	adds	r3, #8
 800f7b8:	4563      	cmp	r3, ip
 800f7ba:	463e      	mov	r6, r7
 800f7bc:	d1f7      	bne.n	800f7ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x2e>
 800f7be:	6818      	ldr	r0, [r3, #0]
 800f7c0:	6038      	str	r0, [r7, #0]
 800f7c2:	889b      	ldrh	r3, [r3, #4]
 800f7c4:	80bb      	strh	r3, [r7, #4]
 800f7c6:	f894 704d 	ldrb.w	r7, [r4, #77]	; 0x4d
 800f7ca:	f46f 6363 	mvn.w	r3, #3632	; 0xe30
 800f7ce:	ea4f 1a07 	mov.w	sl, r7, lsl #4
 800f7d2:	f40a 7180 	and.w	r1, sl, #256	; 0x100
 800f7d6:	18d3      	adds	r3, r2, r3
 800f7d8:	f894 a047 	ldrb.w	sl, [r4, #71]	; 0x47
 800f7dc:	b298      	uxth	r0, r3
 800f7de:	ea4a 0a01 	orr.w	sl, sl, r1
 800f7e2:	281d      	cmp	r0, #29
 800f7e4:	fa1f f68a 	uxth.w	r6, sl
 800f7e8:	46d9      	mov	r9, fp
 800f7ea:	d842      	bhi.n	800f872 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf2>
 800f7ec:	2301      	movs	r3, #1
 800f7ee:	4950      	ldr	r1, [pc, #320]	; (800f930 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b0>)
 800f7f0:	4083      	lsls	r3, r0
 800f7f2:	420b      	tst	r3, r1
 800f7f4:	ea4f 0aea 	mov.w	sl, sl, asr #3
 800f7f8:	d114      	bne.n	800f824 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800f7fa:	f413 7f60 	tst.w	r3, #896	; 0x380
 800f7fe:	d03c      	beq.n	800f87a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xfa>
 800f800:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800f804:	fa1f fa8a 	uxth.w	sl, sl
 800f808:	eba1 010a 	sub.w	r1, r1, sl
 800f80c:	4658      	mov	r0, fp
 800f80e:	b209      	sxth	r1, r1
 800f810:	f7ff fefc 	bl	800f60c <_ZN8touchgfx9GlyphNode6setTopEs>
 800f814:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 800f818:	1b86      	subs	r6, r0, r6
 800f81a:	eba6 0a0a 	sub.w	sl, r6, sl
 800f81e:	f8a4 a050 	strh.w	sl, [r4, #80]	; 0x50
 800f822:	e7ba      	b.n	800f79a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f824:	2100      	movs	r1, #0
 800f826:	f104 001a 	add.w	r0, r4, #26
 800f82a:	f7ff ff8f 	bl	800f74c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f82e:	f640 6333 	movw	r3, #3635	; 0xe33
 800f832:	4298      	cmp	r0, r3
 800f834:	4601      	mov	r1, r0
 800f836:	d10a      	bne.n	800f84e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xce>
 800f838:	f8d8 3000 	ldr.w	r3, [r8]
 800f83c:	4640      	mov	r0, r8
 800f83e:	68db      	ldr	r3, [r3, #12]
 800f840:	4798      	blx	r3
 800f842:	7b41      	ldrb	r1, [r0, #13]
 800f844:	7a00      	ldrb	r0, [r0, #8]
 800f846:	f7ff fed3 	bl	800f5f0 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f84a:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800f84e:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800f852:	4431      	add	r1, r6
 800f854:	4451      	add	r1, sl
 800f856:	b209      	sxth	r1, r1
 800f858:	f8a4 104e 	strh.w	r1, [r4, #78]	; 0x4e
 800f85c:	4658      	mov	r0, fp
 800f85e:	f7ff fed5 	bl	800f60c <_ZN8touchgfx9GlyphNode6setTopEs>
 800f862:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800f866:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800f86a:	1a9b      	subs	r3, r3, r2
 800f86c:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800f870:	e793      	b.n	800f79a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f872:	f640 631b 	movw	r3, #3611	; 0xe1b
 800f876:	429a      	cmp	r2, r3
 800f878:	d005      	beq.n	800f886 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x106>
 800f87a:	f022 0302 	bic.w	r3, r2, #2
 800f87e:	f640 611d 	movw	r1, #3613	; 0xe1d
 800f882:	428b      	cmp	r3, r1
 800f884:	d119      	bne.n	800f8ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 800f886:	1e53      	subs	r3, r2, #1
 800f888:	b29b      	uxth	r3, r3
 800f88a:	4642      	mov	r2, r8
 800f88c:	4629      	mov	r1, r5
 800f88e:	4620      	mov	r0, r4
 800f890:	f7ff ff18 	bl	800f6c4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f894:	7b41      	ldrb	r1, [r0, #13]
 800f896:	7a00      	ldrb	r0, [r0, #8]
 800f898:	f7ff feaa 	bl	800f5f0 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f89c:	f994 304d 	ldrsb.w	r3, [r4, #77]	; 0x4d
 800f8a0:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800f8a4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f8a8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800f8ac:	4313      	orrs	r3, r2
 800f8ae:	115a      	asrs	r2, r3, #5
 800f8b0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800f8b4:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f8b8:	e02d      	b.n	800f916 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x196>
 800f8ba:	4639      	mov	r1, r7
 800f8bc:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800f8c0:	f7ff fe96 	bl	800f5f0 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f8c4:	f640 6109 	movw	r1, #3593	; 0xe09
 800f8c8:	f022 0310 	bic.w	r3, r2, #16
 800f8cc:	428b      	cmp	r3, r1
 800f8ce:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800f8d2:	d003      	beq.n	800f8dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15c>
 800f8d4:	f640 6313 	movw	r3, #3603	; 0xe13
 800f8d8:	429a      	cmp	r2, r3
 800f8da:	d126      	bne.n	800f92a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1aa>
 800f8dc:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800f8e0:	b27f      	sxtb	r7, r7
 800f8e2:	f407 7780 	and.w	r7, r7, #256	; 0x100
 800f8e6:	431f      	orrs	r7, r3
 800f8e8:	f640 6313 	movw	r3, #3603	; 0xe13
 800f8ec:	429a      	cmp	r2, r3
 800f8ee:	bf1a      	itte	ne
 800f8f0:	f102 33ff 	addne.w	r3, r2, #4294967295
 800f8f4:	b29b      	uxthne	r3, r3
 800f8f6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800f8fa:	4642      	mov	r2, r8
 800f8fc:	4629      	mov	r1, r5
 800f8fe:	4620      	mov	r0, r4
 800f900:	f7ff fee0 	bl	800f6c4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800f904:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800f908:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f90c:	7a83      	ldrb	r3, [r0, #10]
 800f90e:	4313      	orrs	r3, r2
 800f910:	1aff      	subs	r7, r7, r3
 800f912:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
 800f916:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800f91a:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800f91e:	f7ff fe67 	bl	800f5f0 <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800f922:	1b80      	subs	r0, r0, r6
 800f924:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 800f928:	e737      	b.n	800f79a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f92a:	2300      	movs	r3, #0
 800f92c:	e7c2      	b.n	800f8b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x134>
 800f92e:	bf00      	nop
 800f930:	3fc00079 	.word	0x3fc00079

0800f934 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f934:	3a01      	subs	r2, #1
 800f936:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f93a:	b292      	uxth	r2, r2
 800f93c:	460c      	mov	r4, r1
 800f93e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800f942:	42b2      	cmp	r2, r6
 800f944:	d018      	beq.n	800f978 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x44>
 800f946:	8b01      	ldrh	r1, [r0, #24]
 800f948:	f834 5b02 	ldrh.w	r5, [r4], #2
 800f94c:	4291      	cmp	r1, r2
 800f94e:	d805      	bhi.n	800f95c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x28>
 800f950:	4b14      	ldr	r3, [pc, #80]	; (800f9a4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x70>)
 800f952:	4a15      	ldr	r2, [pc, #84]	; (800f9a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x74>)
 800f954:	4815      	ldr	r0, [pc, #84]	; (800f9ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x78>)
 800f956:	21d3      	movs	r1, #211	; 0xd3
 800f958:	f00c f818 	bl	801b98c <__assert_func>
 800f95c:	8ac1      	ldrh	r1, [r0, #22]
 800f95e:	4411      	add	r1, r2
 800f960:	f001 0101 	and.w	r1, r1, #1
 800f964:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f968:	3a01      	subs	r2, #1
 800f96a:	8a49      	ldrh	r1, [r1, #18]
 800f96c:	428d      	cmp	r5, r1
 800f96e:	b292      	uxth	r2, r2
 800f970:	d0e7      	beq.n	800f942 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xe>
 800f972:	2000      	movs	r0, #0
 800f974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f978:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800f97c:	2600      	movs	r6, #0
 800f97e:	441f      	add	r7, r3
 800f980:	f100 051a 	add.w	r5, r0, #26
 800f984:	b2b1      	uxth	r1, r6
 800f986:	42b9      	cmp	r1, r7
 800f988:	da09      	bge.n	800f99e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x6a>
 800f98a:	4628      	mov	r0, r5
 800f98c:	f7ff fede 	bl	800f74c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800f990:	f834 8016 	ldrh.w	r8, [r4, r6, lsl #1]
 800f994:	4540      	cmp	r0, r8
 800f996:	f106 0601 	add.w	r6, r6, #1
 800f99a:	d0f3      	beq.n	800f984 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x50>
 800f99c:	e7e9      	b.n	800f972 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800f99e:	2001      	movs	r0, #1
 800f9a0:	e7e8      	b.n	800f974 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800f9a2:	bf00      	nop
 800f9a4:	080204dd 	.word	0x080204dd
 800f9a8:	08020a6c 	.word	0x08020a6c
 800f9ac:	080204eb 	.word	0x080204eb

0800f9b0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>:
 800f9b0:	b538      	push	{r3, r4, r5, lr}
 800f9b2:	8ac3      	ldrh	r3, [r0, #22]
 800f9b4:	428b      	cmp	r3, r1
 800f9b6:	d205      	bcs.n	800f9c4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x14>
 800f9b8:	4b08      	ldr	r3, [pc, #32]	; (800f9dc <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x2c>)
 800f9ba:	4a09      	ldr	r2, [pc, #36]	; (800f9e0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x30>)
 800f9bc:	4809      	ldr	r0, [pc, #36]	; (800f9e4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x34>)
 800f9be:	21d8      	movs	r1, #216	; 0xd8
 800f9c0:	f00b ffe4 	bl	801b98c <__assert_func>
 800f9c4:	8a82      	ldrh	r2, [r0, #20]
 800f9c6:	250a      	movs	r5, #10
 800f9c8:	440a      	add	r2, r1
 800f9ca:	1a5b      	subs	r3, r3, r1
 800f9cc:	fbb2 f4f5 	udiv	r4, r2, r5
 800f9d0:	fb05 2214 	mls	r2, r5, r4, r2
 800f9d4:	8282      	strh	r2, [r0, #20]
 800f9d6:	82c3      	strh	r3, [r0, #22]
 800f9d8:	bd38      	pop	{r3, r4, r5, pc}
 800f9da:	bf00      	nop
 800f9dc:	080204d1 	.word	0x080204d1
 800f9e0:	08020888 	.word	0x08020888
 800f9e4:	080204eb 	.word	0x080204eb

0800f9e8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>:
 800f9e8:	b538      	push	{r3, r4, r5, lr}
 800f9ea:	8ac3      	ldrh	r3, [r0, #22]
 800f9ec:	2b09      	cmp	r3, #9
 800f9ee:	d905      	bls.n	800f9fc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x14>
 800f9f0:	4b08      	ldr	r3, [pc, #32]	; (800fa14 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x2c>)
 800f9f2:	4a09      	ldr	r2, [pc, #36]	; (800fa18 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x30>)
 800f9f4:	4809      	ldr	r0, [pc, #36]	; (800fa1c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x34>)
 800f9f6:	21f7      	movs	r1, #247	; 0xf7
 800f9f8:	f00b ffc8 	bl	801b98c <__assert_func>
 800f9fc:	8a82      	ldrh	r2, [r0, #20]
 800f9fe:	250a      	movs	r5, #10
 800fa00:	441a      	add	r2, r3
 800fa02:	fbb2 f4f5 	udiv	r4, r2, r5
 800fa06:	fb05 2214 	mls	r2, r5, r4, r2
 800fa0a:	3301      	adds	r3, #1
 800fa0c:	f820 1012 	strh.w	r1, [r0, r2, lsl #1]
 800fa10:	82c3      	strh	r3, [r0, #22]
 800fa12:	bd38      	pop	{r3, r4, r5, pc}
 800fa14:	080204c5 	.word	0x080204c5
 800fa18:	080207d9 	.word	0x080207d9
 800fa1c:	080204eb 	.word	0x080204eb

0800fa20 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800fa20:	b538      	push	{r3, r4, r5, lr}
 800fa22:	4604      	mov	r4, r0
 800fa24:	f100 051a 	add.w	r5, r0, #26
 800fa28:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fa2a:	2b0a      	cmp	r3, #10
 800fa2c:	d01c      	beq.n	800fa68 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800fa2e:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800fa30:	b962      	cbnz	r2, 800fa4c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800fa32:	f104 051a 	add.w	r5, r4, #26
 800fa36:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fa38:	2b0a      	cmp	r3, #10
 800fa3a:	d015      	beq.n	800fa68 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800fa3c:	4620      	mov	r0, r4
 800fa3e:	f7ff fdf6 	bl	800f62e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800fa42:	4601      	mov	r1, r0
 800fa44:	4628      	mov	r0, r5
 800fa46:	f7ff ffcf 	bl	800f9e8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800fa4a:	e7f4      	b.n	800fa36 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x16>
 800fa4c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800fa4e:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800fa52:	3301      	adds	r3, #1
 800fa54:	f003 0301 	and.w	r3, r3, #1
 800fa58:	3a01      	subs	r2, #1
 800fa5a:	8e49      	ldrh	r1, [r1, #50]	; 0x32
 800fa5c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800fa5e:	8722      	strh	r2, [r4, #56]	; 0x38
 800fa60:	4628      	mov	r0, r5
 800fa62:	f7ff ffc1 	bl	800f9e8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800fa66:	e7df      	b.n	800fa28 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8>
 800fa68:	bd38      	pop	{r3, r4, r5, pc}
	...

0800fa6c <_ZN8touchgfx12TextProvider18initializeInternalEv>:
 800fa6c:	2300      	movs	r3, #0
 800fa6e:	b510      	push	{r4, lr}
 800fa70:	6043      	str	r3, [r0, #4]
 800fa72:	60c3      	str	r3, [r0, #12]
 800fa74:	7403      	strb	r3, [r0, #16]
 800fa76:	8603      	strh	r3, [r0, #48]	; 0x30
 800fa78:	8303      	strh	r3, [r0, #24]
 800fa7a:	8703      	strh	r3, [r0, #56]	; 0x38
 800fa7c:	4604      	mov	r4, r0
 800fa7e:	f7ff ffcf 	bl	800fa20 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800fa82:	4a0a      	ldr	r2, [pc, #40]	; (800faac <_ZN8touchgfx12TextProvider18initializeInternalEv+0x40>)
 800fa84:	6813      	ldr	r3, [r2, #0]
 800fa86:	4611      	mov	r1, r2
 800fa88:	b913      	cbnz	r3, 800fa90 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x24>
 800fa8a:	6852      	ldr	r2, [r2, #4]
 800fa8c:	07d0      	lsls	r0, r2, #31
 800fa8e:	d50b      	bpl.n	800faa8 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x3c>
 800fa90:	6849      	ldr	r1, [r1, #4]
 800fa92:	104a      	asrs	r2, r1, #1
 800fa94:	07c9      	lsls	r1, r1, #31
 800fa96:	eb04 0002 	add.w	r0, r4, r2
 800fa9a:	bf48      	it	mi
 800fa9c:	58a2      	ldrmi	r2, [r4, r2]
 800fa9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800faa2:	bf48      	it	mi
 800faa4:	58d3      	ldrmi	r3, [r2, r3]
 800faa6:	4718      	bx	r3
 800faa8:	bd10      	pop	{r4, pc}
 800faaa:	bf00      	nop
 800faac:	20000690 	.word	0x20000690

0800fab0 <_ZN8touchgfx12TextProviderC1Ev>:
 800fab0:	b510      	push	{r4, lr}
 800fab2:	2300      	movs	r3, #0
 800fab4:	2201      	movs	r2, #1
 800fab6:	4604      	mov	r4, r0
 800fab8:	e9c0 3300 	strd	r3, r3, [r0]
 800fabc:	60c3      	str	r3, [r0, #12]
 800fabe:	7403      	strb	r3, [r0, #16]
 800fac0:	82c3      	strh	r3, [r0, #22]
 800fac2:	8303      	strh	r3, [r0, #24]
 800fac4:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800fac6:	8603      	strh	r3, [r0, #48]	; 0x30
 800fac8:	86c3      	strh	r3, [r0, #54]	; 0x36
 800faca:	8703      	strh	r3, [r0, #56]	; 0x38
 800facc:	63c3      	str	r3, [r0, #60]	; 0x3c
 800face:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800fad2:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800fad6:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800fada:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800fade:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800fae2:	f7ff ffc3 	bl	800fa6c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800fae6:	4620      	mov	r0, r4
 800fae8:	bd10      	pop	{r4, pc}

0800faea <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800faea:	b410      	push	{r4}
 800faec:	6082      	str	r2, [r0, #8]
 800faee:	6001      	str	r1, [r0, #0]
 800faf0:	63c3      	str	r3, [r0, #60]	; 0x3c
 800faf2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800faf6:	f7ff bfb9 	b.w	800fa6c <_ZN8touchgfx12TextProvider18initializeInternalEv>
	...

0800fafc <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>:
 800fafc:	b508      	push	{r3, lr}
 800fafe:	88c2      	ldrh	r2, [r0, #6]
 800fb00:	440a      	add	r2, r1
 800fb02:	2a02      	cmp	r2, #2
 800fb04:	dd05      	ble.n	800fb12 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x16>
 800fb06:	4b06      	ldr	r3, [pc, #24]	; (800fb20 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x24>)
 800fb08:	4a06      	ldr	r2, [pc, #24]	; (800fb24 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x28>)
 800fb0a:	4807      	ldr	r0, [pc, #28]	; (800fb28 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x2c>)
 800fb0c:	21ec      	movs	r1, #236	; 0xec
 800fb0e:	f00b ff3d 	bl	801b98c <__assert_func>
 800fb12:	8883      	ldrh	r3, [r0, #4]
 800fb14:	80c2      	strh	r2, [r0, #6]
 800fb16:	1a59      	subs	r1, r3, r1
 800fb18:	f001 0101 	and.w	r1, r1, #1
 800fb1c:	8081      	strh	r1, [r0, #4]
 800fb1e:	bd08      	pop	{r3, pc}
 800fb20:	08020517 	.word	0x08020517
 800fb24:	080209e5 	.word	0x080209e5
 800fb28:	080204eb 	.word	0x080204eb

0800fb2c <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>:
 800fb2c:	b508      	push	{r3, lr}
 800fb2e:	88c3      	ldrh	r3, [r0, #6]
 800fb30:	428b      	cmp	r3, r1
 800fb32:	d805      	bhi.n	800fb40 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x14>
 800fb34:	4b06      	ldr	r3, [pc, #24]	; (800fb50 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x24>)
 800fb36:	4a07      	ldr	r2, [pc, #28]	; (800fb54 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x28>)
 800fb38:	4807      	ldr	r0, [pc, #28]	; (800fb58 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x2c>)
 800fb3a:	21fd      	movs	r1, #253	; 0xfd
 800fb3c:	f00b ff26 	bl	801b98c <__assert_func>
 800fb40:	8883      	ldrh	r3, [r0, #4]
 800fb42:	4419      	add	r1, r3
 800fb44:	f001 0101 	and.w	r1, r1, #1
 800fb48:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800fb4c:	bd08      	pop	{r3, pc}
 800fb4e:	bf00      	nop
 800fb50:	080204dd 	.word	0x080204dd
 800fb54:	08020b3d 	.word	0x08020b3d
 800fb58:	080204eb 	.word	0x080204eb

0800fb5c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800fb5c:	b570      	push	{r4, r5, r6, lr}
 800fb5e:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800fb60:	4604      	mov	r4, r0
 800fb62:	b92a      	cbnz	r2, 800fb70 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800fb64:	4b12      	ldr	r3, [pc, #72]	; (800fbb0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x54>)
 800fb66:	4a13      	ldr	r2, [pc, #76]	; (800fbb4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800fb68:	4813      	ldr	r0, [pc, #76]	; (800fbb8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800fb6a:	21de      	movs	r1, #222	; 0xde
 800fb6c:	f00b ff0e 	bl	801b98c <__assert_func>
 800fb70:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800fb72:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800fb76:	260a      	movs	r6, #10
 800fb78:	3301      	adds	r3, #1
 800fb7a:	8b4d      	ldrh	r5, [r1, #26]
 800fb7c:	fbb3 f1f6 	udiv	r1, r3, r6
 800fb80:	3a01      	subs	r2, #1
 800fb82:	fb06 3311 	mls	r3, r6, r1, r3
 800fb86:	8602      	strh	r2, [r0, #48]	; 0x30
 800fb88:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800fb8a:	f7ff ff49 	bl	800fa20 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800fb8e:	8b23      	ldrh	r3, [r4, #24]
 800fb90:	2b02      	cmp	r3, #2
 800fb92:	bf04      	itt	eq
 800fb94:	2301      	moveq	r3, #1
 800fb96:	8323      	strheq	r3, [r4, #24]
 800fb98:	3412      	adds	r4, #18
 800fb9a:	4620      	mov	r0, r4
 800fb9c:	2101      	movs	r1, #1
 800fb9e:	f7ff ffad 	bl	800fafc <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800fba2:	4620      	mov	r0, r4
 800fba4:	462a      	mov	r2, r5
 800fba6:	2100      	movs	r1, #0
 800fba8:	f7ff ffc0 	bl	800fb2c <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800fbac:	4628      	mov	r0, r5
 800fbae:	bd70      	pop	{r4, r5, r6, pc}
 800fbb0:	080204bc 	.word	0x080204bc
 800fbb4:	0802072e 	.word	0x0802072e
 800fbb8:	080204eb 	.word	0x080204eb

0800fbbc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800fbbc:	428a      	cmp	r2, r1
 800fbbe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbc2:	4604      	mov	r4, r0
 800fbc4:	460e      	mov	r6, r1
 800fbc6:	4615      	mov	r5, r2
 800fbc8:	469a      	mov	sl, r3
 800fbca:	d92b      	bls.n	800fc24 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x68>
 800fbcc:	1a57      	subs	r7, r2, r1
 800fbce:	b2bf      	uxth	r7, r7
 800fbd0:	f04f 0800 	mov.w	r8, #0
 800fbd4:	f100 0932 	add.w	r9, r0, #50	; 0x32
 800fbd8:	f04f 0b0a 	mov.w	fp, #10
 800fbdc:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fbde:	b92b      	cbnz	r3, 800fbec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x30>
 800fbe0:	4b24      	ldr	r3, [pc, #144]	; (800fc74 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xb8>)
 800fbe2:	4a25      	ldr	r2, [pc, #148]	; (800fc78 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xbc>)
 800fbe4:	21e6      	movs	r1, #230	; 0xe6
 800fbe6:	4825      	ldr	r0, [pc, #148]	; (800fc7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc0>)
 800fbe8:	f00b fed0 	bl	801b98c <__assert_func>
 800fbec:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800fbee:	3b01      	subs	r3, #1
 800fbf0:	b29b      	uxth	r3, r3
 800fbf2:	441a      	add	r2, r3
 800fbf4:	8623      	strh	r3, [r4, #48]	; 0x30
 800fbf6:	fbb2 f3fb 	udiv	r3, r2, fp
 800fbfa:	fb0b 2313 	mls	r3, fp, r3, r2
 800fbfe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fc02:	2101      	movs	r1, #1
 800fc04:	8b5a      	ldrh	r2, [r3, #26]
 800fc06:	9201      	str	r2, [sp, #4]
 800fc08:	4648      	mov	r0, r9
 800fc0a:	f7ff ff77 	bl	800fafc <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800fc0e:	f108 0801 	add.w	r8, r8, #1
 800fc12:	9a01      	ldr	r2, [sp, #4]
 800fc14:	2100      	movs	r1, #0
 800fc16:	4648      	mov	r0, r9
 800fc18:	f7ff ff88 	bl	800fb2c <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800fc1c:	fa1f f388 	uxth.w	r3, r8
 800fc20:	429f      	cmp	r7, r3
 800fc22:	d8db      	bhi.n	800fbdc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x20>
 800fc24:	f104 071a 	add.w	r7, r4, #26
 800fc28:	4631      	mov	r1, r6
 800fc2a:	4638      	mov	r0, r7
 800fc2c:	f7ff fec0 	bl	800f9b0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>
 800fc30:	260a      	movs	r6, #10
 800fc32:	b1c5      	cbz	r5, 800fc66 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 800fc34:	3d01      	subs	r5, #1
 800fc36:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fc38:	b2ad      	uxth	r5, r5
 800fc3a:	2b09      	cmp	r3, #9
 800fc3c:	f83a 2015 	ldrh.w	r2, [sl, r5, lsl #1]
 800fc40:	d903      	bls.n	800fc4a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8e>
 800fc42:	4b0f      	ldr	r3, [pc, #60]	; (800fc80 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc4>)
 800fc44:	4a0f      	ldr	r2, [pc, #60]	; (800fc84 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc8>)
 800fc46:	21ec      	movs	r1, #236	; 0xec
 800fc48:	e7cd      	b.n	800fbe6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2a>
 800fc4a:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800fc4c:	3109      	adds	r1, #9
 800fc4e:	3301      	adds	r3, #1
 800fc50:	fbb1 f0f6 	udiv	r0, r1, r6
 800fc54:	fb06 1110 	mls	r1, r6, r0, r1
 800fc58:	85e1      	strh	r1, [r4, #46]	; 0x2e
 800fc5a:	8623      	strh	r3, [r4, #48]	; 0x30
 800fc5c:	2100      	movs	r1, #0
 800fc5e:	4638      	mov	r0, r7
 800fc60:	f7ff fd5a 	bl	800f718 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800fc64:	e7e5      	b.n	800fc32 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x76>
 800fc66:	4620      	mov	r0, r4
 800fc68:	b003      	add	sp, #12
 800fc6a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc6e:	f7ff bed7 	b.w	800fa20 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800fc72:	bf00      	nop
 800fc74:	080204bc 	.word	0x080204bc
 800fc78:	080205b2 	.word	0x080205b2
 800fc7c:	080204eb 	.word	0x080204eb
 800fc80:	08020517 	.word	0x08020517
 800fc84:	0802052a 	.word	0x0802052a

0800fc88 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800fc88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc8c:	4605      	mov	r5, r0
 800fc8e:	4616      	mov	r6, r2
 800fc90:	1c8c      	adds	r4, r1, #2
 800fc92:	8809      	ldrh	r1, [r1, #0]
 800fc94:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800fc98:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800fc9c:	42b3      	cmp	r3, r6
 800fc9e:	d124      	bne.n	800fcea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800fca0:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800fca4:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800fca8:	f001 070f 	and.w	r7, r1, #15
 800fcac:	f8cd 8000 	str.w	r8, [sp]
 800fcb0:	464b      	mov	r3, r9
 800fcb2:	4652      	mov	r2, sl
 800fcb4:	4621      	mov	r1, r4
 800fcb6:	4628      	mov	r0, r5
 800fcb8:	f7ff fe3c 	bl	800f934 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800fcbc:	4683      	mov	fp, r0
 800fcbe:	b168      	cbz	r0, 800fcdc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800fcc0:	eb0a 0109 	add.w	r1, sl, r9
 800fcc4:	4441      	add	r1, r8
 800fcc6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800fcca:	463a      	mov	r2, r7
 800fccc:	4649      	mov	r1, r9
 800fcce:	4628      	mov	r0, r5
 800fcd0:	f7ff ff74 	bl	800fbbc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800fcd4:	4658      	mov	r0, fp
 800fcd6:	b003      	add	sp, #12
 800fcd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fcdc:	eb07 010a 	add.w	r1, r7, sl
 800fce0:	4449      	add	r1, r9
 800fce2:	4441      	add	r1, r8
 800fce4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800fce8:	e7d2      	b.n	800fc90 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800fcea:	f04f 0b00 	mov.w	fp, #0
 800fcee:	e7f1      	b.n	800fcd4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800fcf0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800fcf0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fcf4:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800fcf6:	886f      	ldrh	r7, [r5, #2]
 800fcf8:	4604      	mov	r4, r0
 800fcfa:	087f      	lsrs	r7, r7, #1
 800fcfc:	260b      	movs	r6, #11
 800fcfe:	f100 091a 	add.w	r9, r0, #26
 800fd02:	3e01      	subs	r6, #1
 800fd04:	d013      	beq.n	800fd2e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800fd06:	2100      	movs	r1, #0
 800fd08:	4648      	mov	r0, r9
 800fd0a:	f7ff fd1f 	bl	800f74c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800fd0e:	462a      	mov	r2, r5
 800fd10:	4680      	mov	r8, r0
 800fd12:	4603      	mov	r3, r0
 800fd14:	4639      	mov	r1, r7
 800fd16:	4620      	mov	r0, r4
 800fd18:	f7ff fcdf 	bl	800f6da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800fd1c:	b138      	cbz	r0, 800fd2e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800fd1e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800fd22:	4642      	mov	r2, r8
 800fd24:	4620      	mov	r0, r4
 800fd26:	f7ff ffaf 	bl	800fc88 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800fd2a:	2800      	cmp	r0, #0
 800fd2c:	d1e9      	bne.n	800fd02 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x12>
 800fd2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:
 800fd34:	b570      	push	{r4, r5, r6, lr}
 800fd36:	4b1e      	ldr	r3, [pc, #120]	; (800fdb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800fd38:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd3c:	4604      	mov	r4, r0
 800fd3e:	f003 0501 	and.w	r5, r3, #1
 800fd42:	b902      	cbnz	r2, 800fd46 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
 800fd44:	b165      	cbz	r5, 800fd60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2c>
 800fd46:	105b      	asrs	r3, r3, #1
 800fd48:	f104 061a 	add.w	r6, r4, #26
 800fd4c:	18e0      	adds	r0, r4, r3
 800fd4e:	b10d      	cbz	r5, 800fd54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
 800fd50:	58e3      	ldr	r3, [r4, r3]
 800fd52:	589a      	ldr	r2, [r3, r2]
 800fd54:	4790      	blx	r2
 800fd56:	2100      	movs	r1, #0
 800fd58:	4602      	mov	r2, r0
 800fd5a:	4630      	mov	r0, r6
 800fd5c:	f7ff fcdc 	bl	800f718 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800fd60:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800fd62:	b303      	cbz	r3, 800fda6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800fd64:	f104 051a 	add.w	r5, r4, #26
 800fd68:	2100      	movs	r1, #0
 800fd6a:	4628      	mov	r0, r5
 800fd6c:	f7ff fcee 	bl	800f74c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800fd70:	b1c8      	cbz	r0, 800fda6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800fd72:	4620      	mov	r0, r4
 800fd74:	f7ff ffbc 	bl	800fcf0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 800fd78:	2101      	movs	r1, #1
 800fd7a:	4628      	mov	r0, r5
 800fd7c:	f7ff fce6 	bl	800f74c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800fd80:	f640 133f 	movw	r3, #2367	; 0x93f
 800fd84:	4298      	cmp	r0, r3
 800fd86:	4606      	mov	r6, r0
 800fd88:	d10d      	bne.n	800fda6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800fd8a:	2100      	movs	r1, #0
 800fd8c:	4628      	mov	r0, r5
 800fd8e:	f7ff fcdd 	bl	800f74c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800fd92:	2101      	movs	r1, #1
 800fd94:	4602      	mov	r2, r0
 800fd96:	4628      	mov	r0, r5
 800fd98:	f7ff fcbe 	bl	800f718 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800fd9c:	4632      	mov	r2, r6
 800fd9e:	2100      	movs	r1, #0
 800fda0:	4628      	mov	r0, r5
 800fda2:	f7ff fcb9 	bl	800f718 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800fda6:	4620      	mov	r0, r4
 800fda8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fdac:	f7ff bed6 	b.w	800fb5c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fdb0:	20000698 	.word	0x20000698

0800fdb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800fdb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fdb6:	4617      	mov	r7, r2
 800fdb8:	461e      	mov	r6, r3
 800fdba:	4605      	mov	r5, r0
 800fdbc:	f7ff ffba 	bl	800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fdc0:	683b      	ldr	r3, [r7, #0]
 800fdc2:	4604      	mov	r4, r0
 800fdc4:	68db      	ldr	r3, [r3, #12]
 800fdc6:	4601      	mov	r1, r0
 800fdc8:	4638      	mov	r0, r7
 800fdca:	4798      	blx	r3
 800fdcc:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800fdd0:	b29b      	uxth	r3, r3
 800fdd2:	2b7f      	cmp	r3, #127	; 0x7f
 800fdd4:	4602      	mov	r2, r0
 800fdd6:	6030      	str	r0, [r6, #0]
 800fdd8:	d813      	bhi.n	800fe02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x4e>
 800fdda:	4639      	mov	r1, r7
 800fddc:	4628      	mov	r0, r5
 800fdde:	f7ff fccf 	bl	800f780 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fde2:	6030      	str	r0, [r6, #0]
 800fde4:	6833      	ldr	r3, [r6, #0]
 800fde6:	b143      	cbz	r3, 800fdfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800fde8:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800fdec:	7a9b      	ldrb	r3, [r3, #10]
 800fdee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fdf2:	4313      	orrs	r3, r2
 800fdf4:	bf0c      	ite	eq
 800fdf6:	2301      	moveq	r3, #1
 800fdf8:	2300      	movne	r3, #0
 800fdfa:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800fdfe:	4620      	mov	r0, r4
 800fe00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fe02:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800fe06:	2b00      	cmp	r3, #0
 800fe08:	d0ec      	beq.n	800fde4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800fe0a:	f640 1302 	movw	r3, #2306	; 0x902
 800fe0e:	429c      	cmp	r4, r3
 800fe10:	d1e8      	bne.n	800fde4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800fe12:	4601      	mov	r1, r0
 800fe14:	4628      	mov	r0, r5
 800fe16:	f7ff fc32 	bl	800f67e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800fe1a:	e7e2      	b.n	800fde2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>

0800fe1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800fe1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe20:	4617      	mov	r7, r2
 800fe22:	461e      	mov	r6, r3
 800fe24:	4605      	mov	r5, r0
 800fe26:	f7ff ff85 	bl	800fd34 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fe2a:	683b      	ldr	r3, [r7, #0]
 800fe2c:	4604      	mov	r4, r0
 800fe2e:	f8d3 8008 	ldr.w	r8, [r3, #8]
 800fe32:	4601      	mov	r1, r0
 800fe34:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800fe38:	4638      	mov	r0, r7
 800fe3a:	47c0      	blx	r8
 800fe3c:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800fe40:	b29b      	uxth	r3, r3
 800fe42:	2b7f      	cmp	r3, #127	; 0x7f
 800fe44:	4602      	mov	r2, r0
 800fe46:	6030      	str	r0, [r6, #0]
 800fe48:	d814      	bhi.n	800fe74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x58>
 800fe4a:	4639      	mov	r1, r7
 800fe4c:	4628      	mov	r0, r5
 800fe4e:	f7ff fc97 	bl	800f780 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800fe52:	6030      	str	r0, [r6, #0]
 800fe54:	6833      	ldr	r3, [r6, #0]
 800fe56:	b143      	cbz	r3, 800fe6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800fe58:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800fe5c:	7a9b      	ldrb	r3, [r3, #10]
 800fe5e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fe62:	4313      	orrs	r3, r2
 800fe64:	bf0c      	ite	eq
 800fe66:	2301      	moveq	r3, #1
 800fe68:	2300      	movne	r3, #0
 800fe6a:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800fe6e:	4620      	mov	r0, r4
 800fe70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fe74:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800fe78:	2b00      	cmp	r3, #0
 800fe7a:	d0eb      	beq.n	800fe54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x38>
 800fe7c:	f640 1302 	movw	r3, #2306	; 0x902
 800fe80:	429c      	cmp	r4, r3
 800fe82:	d1e7      	bne.n	800fe54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x38>
 800fe84:	4601      	mov	r1, r0
 800fe86:	4628      	mov	r0, r5
 800fe88:	f7ff fbf9 	bl	800f67e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800fe8c:	e7e1      	b.n	800fe52 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x36>
	...

0800fe90 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fe90:	4b01      	ldr	r3, [pc, #4]	; (800fe98 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fe92:	6018      	str	r0, [r3, #0]
 800fe94:	4770      	bx	lr
 800fe96:	bf00      	nop
 800fe98:	20001820 	.word	0x20001820

0800fe9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fe9c:	4b07      	ldr	r3, [pc, #28]	; (800febc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800fe9e:	881a      	ldrh	r2, [r3, #0]
 800fea0:	4282      	cmp	r2, r0
 800fea2:	d809      	bhi.n	800feb8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800fea4:	4b06      	ldr	r3, [pc, #24]	; (800fec0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800fea6:	881b      	ldrh	r3, [r3, #0]
 800fea8:	4413      	add	r3, r2
 800feaa:	4298      	cmp	r0, r3
 800feac:	da04      	bge.n	800feb8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800feae:	4b05      	ldr	r3, [pc, #20]	; (800fec4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800feb0:	681b      	ldr	r3, [r3, #0]
 800feb2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800feb6:	4770      	bx	lr
 800feb8:	2000      	movs	r0, #0
 800feba:	4770      	bx	lr
 800febc:	20001840 	.word	0x20001840
 800fec0:	20001844 	.word	0x20001844
 800fec4:	20001824 	.word	0x20001824

0800fec8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800fec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fecc:	4d26      	ldr	r5, [pc, #152]	; (800ff68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800fece:	682b      	ldr	r3, [r5, #0]
 800fed0:	2b00      	cmp	r3, #0
 800fed2:	d046      	beq.n	800ff62 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800fed4:	4a25      	ldr	r2, [pc, #148]	; (800ff6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fed6:	4f26      	ldr	r7, [pc, #152]	; (800ff70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fed8:	8810      	ldrh	r0, [r2, #0]
 800feda:	883c      	ldrh	r4, [r7, #0]
 800fedc:	4e25      	ldr	r6, [pc, #148]	; (800ff74 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800fede:	4420      	add	r0, r4
 800fee0:	1c42      	adds	r2, r0, #1
 800fee2:	f022 0201 	bic.w	r2, r2, #1
 800fee6:	0412      	lsls	r2, r2, #16
 800fee8:	0c12      	lsrs	r2, r2, #16
 800feea:	0051      	lsls	r1, r2, #1
 800feec:	220e      	movs	r2, #14
 800feee:	fb02 fc04 	mul.w	ip, r2, r4
 800fef2:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800fef6:	4c20      	ldr	r4, [pc, #128]	; (800ff78 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800fef8:	eb03 0208 	add.w	r2, r3, r8
 800fefc:	eb08 0e01 	add.w	lr, r8, r1
 800ff00:	6022      	str	r2, [r4, #0]
 800ff02:	eb03 020e 	add.w	r2, r3, lr
 800ff06:	6032      	str	r2, [r6, #0]
 800ff08:	44e6      	add	lr, ip
 800ff0a:	4a1c      	ldr	r2, [pc, #112]	; (800ff7c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800ff0c:	4473      	add	r3, lr
 800ff0e:	6013      	str	r3, [r2, #0]
 800ff10:	4a1b      	ldr	r2, [pc, #108]	; (800ff80 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800ff12:	2300      	movs	r3, #0
 800ff14:	8013      	strh	r3, [r2, #0]
 800ff16:	4a1b      	ldr	r2, [pc, #108]	; (800ff84 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800ff18:	6812      	ldr	r2, [r2, #0]
 800ff1a:	eba2 0208 	sub.w	r2, r2, r8
 800ff1e:	1a52      	subs	r2, r2, r1
 800ff20:	4919      	ldr	r1, [pc, #100]	; (800ff88 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800ff22:	eba2 020c 	sub.w	r2, r2, ip
 800ff26:	600a      	str	r2, [r1, #0]
 800ff28:	4a18      	ldr	r2, [pc, #96]	; (800ff8c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800ff2a:	469c      	mov	ip, r3
 800ff2c:	8013      	strh	r3, [r2, #0]
 800ff2e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ff32:	4283      	cmp	r3, r0
 800ff34:	d10d      	bne.n	800ff52 <_ZN8touchgfx6Bitmap10clearCacheEv+0x8a>
 800ff36:	883d      	ldrh	r5, [r7, #0]
 800ff38:	6830      	ldr	r0, [r6, #0]
 800ff3a:	2300      	movs	r3, #0
 800ff3c:	240e      	movs	r4, #14
 800ff3e:	429d      	cmp	r5, r3
 800ff40:	d90f      	bls.n	800ff62 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800ff42:	fb04 0203 	mla	r2, r4, r3, r0
 800ff46:	3301      	adds	r3, #1
 800ff48:	7b11      	ldrb	r1, [r2, #12]
 800ff4a:	f36f 1145 	bfc	r1, #5, #1
 800ff4e:	7311      	strb	r1, [r2, #12]
 800ff50:	e7f5      	b.n	800ff3e <_ZN8touchgfx6Bitmap10clearCacheEv+0x76>
 800ff52:	682a      	ldr	r2, [r5, #0]
 800ff54:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800ff58:	6822      	ldr	r2, [r4, #0]
 800ff5a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800ff5e:	3301      	adds	r3, #1
 800ff60:	e7e7      	b.n	800ff32 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6a>
 800ff62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ff66:	bf00      	nop
 800ff68:	20001824 	.word	0x20001824
 800ff6c:	20001840 	.word	0x20001840
 800ff70:	20001844 	.word	0x20001844
 800ff74:	20001828 	.word	0x20001828
 800ff78:	20001838 	.word	0x20001838
 800ff7c:	20001830 	.word	0x20001830
 800ff80:	20001842 	.word	0x20001842
 800ff84:	2000182c 	.word	0x2000182c
 800ff88:	2000183c 	.word	0x2000183c
 800ff8c:	20001834 	.word	0x20001834

0800ff90 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800ff90:	b510      	push	{r4, lr}
 800ff92:	4b10      	ldr	r3, [pc, #64]	; (800ffd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800ff94:	681b      	ldr	r3, [r3, #0]
 800ff96:	b9db      	cbnz	r3, 800ffd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800ff98:	b1d1      	cbz	r1, 800ffd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800ff9a:	4b0f      	ldr	r3, [pc, #60]	; (800ffd8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800ff9c:	801a      	strh	r2, [r3, #0]
 800ff9e:	4b0f      	ldr	r3, [pc, #60]	; (800ffdc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800ffa0:	881b      	ldrh	r3, [r3, #0]
 800ffa2:	b292      	uxth	r2, r2
 800ffa4:	240e      	movs	r4, #14
 800ffa6:	4413      	add	r3, r2
 800ffa8:	4362      	muls	r2, r4
 800ffaa:	2406      	movs	r4, #6
 800ffac:	fb04 2203 	mla	r2, r4, r3, r2
 800ffb0:	428a      	cmp	r2, r1
 800ffb2:	d305      	bcc.n	800ffc0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800ffb4:	4b0a      	ldr	r3, [pc, #40]	; (800ffe0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800ffb6:	4a0b      	ldr	r2, [pc, #44]	; (800ffe4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800ffb8:	480b      	ldr	r0, [pc, #44]	; (800ffe8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800ffba:	2137      	movs	r1, #55	; 0x37
 800ffbc:	f00b fce6 	bl	801b98c <__assert_func>
 800ffc0:	4b0a      	ldr	r3, [pc, #40]	; (800ffec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800ffc2:	6019      	str	r1, [r3, #0]
 800ffc4:	4b0a      	ldr	r3, [pc, #40]	; (800fff0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800ffc6:	6018      	str	r0, [r3, #0]
 800ffc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ffcc:	f7ff bf7c 	b.w	800fec8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800ffd0:	bd10      	pop	{r4, pc}
 800ffd2:	bf00      	nop
 800ffd4:	20001830 	.word	0x20001830
 800ffd8:	20001844 	.word	0x20001844
 800ffdc:	20001840 	.word	0x20001840
 800ffe0:	08020c72 	.word	0x08020c72
 800ffe4:	08020ccb 	.word	0x08020ccb
 800ffe8:	08020c4d 	.word	0x08020c4d
 800ffec:	2000182c 	.word	0x2000182c
 800fff0:	20001824 	.word	0x20001824

0800fff4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800fff4:	b470      	push	{r4, r5, r6}
 800fff6:	4c07      	ldr	r4, [pc, #28]	; (8010014 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800fff8:	6826      	ldr	r6, [r4, #0]
 800fffa:	4605      	mov	r5, r0
 800fffc:	4610      	mov	r0, r2
 800fffe:	9a03      	ldr	r2, [sp, #12]
 8010000:	b936      	cbnz	r6, 8010010 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8010002:	6025      	str	r5, [r4, #0]
 8010004:	4c04      	ldr	r4, [pc, #16]	; (8010018 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8010006:	8021      	strh	r1, [r4, #0]
 8010008:	bc70      	pop	{r4, r5, r6}
 801000a:	4619      	mov	r1, r3
 801000c:	f7ff bfc0 	b.w	800ff90 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8010010:	bc70      	pop	{r4, r5, r6}
 8010012:	4770      	bx	lr
 8010014:	20001848 	.word	0x20001848
 8010018:	20001840 	.word	0x20001840

0801001c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801001c:	b508      	push	{r3, lr}
 801001e:	4b14      	ldr	r3, [pc, #80]	; (8010070 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8010020:	6819      	ldr	r1, [r3, #0]
 8010022:	b931      	cbnz	r1, 8010032 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8010024:	4b13      	ldr	r3, [pc, #76]	; (8010074 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8010026:	4a14      	ldr	r2, [pc, #80]	; (8010078 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8010028:	4814      	ldr	r0, [pc, #80]	; (801007c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801002a:	f240 21e6 	movw	r1, #742	; 0x2e6
 801002e:	f00b fcad 	bl	801b98c <__assert_func>
 8010032:	4a13      	ldr	r2, [pc, #76]	; (8010080 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8010034:	8803      	ldrh	r3, [r0, #0]
 8010036:	8812      	ldrh	r2, [r2, #0]
 8010038:	4293      	cmp	r3, r2
 801003a:	d204      	bcs.n	8010046 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 801003c:	2214      	movs	r2, #20
 801003e:	fb02 1303 	mla	r3, r2, r3, r1
 8010042:	8918      	ldrh	r0, [r3, #8]
 8010044:	bd08      	pop	{r3, pc}
 8010046:	490f      	ldr	r1, [pc, #60]	; (8010084 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8010048:	8809      	ldrh	r1, [r1, #0]
 801004a:	4411      	add	r1, r2
 801004c:	428b      	cmp	r3, r1
 801004e:	da06      	bge.n	801005e <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8010050:	1a9b      	subs	r3, r3, r2
 8010052:	4a0d      	ldr	r2, [pc, #52]	; (8010088 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8010054:	6812      	ldr	r2, [r2, #0]
 8010056:	210e      	movs	r1, #14
 8010058:	fb01 2303 	mla	r3, r1, r3, r2
 801005c:	e7f1      	b.n	8010042 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 801005e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010062:	4293      	cmp	r3, r2
 8010064:	bf0a      	itet	eq
 8010066:	4b09      	ldreq	r3, [pc, #36]	; (801008c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 8010068:	2000      	movne	r0, #0
 801006a:	8818      	ldrheq	r0, [r3, #0]
 801006c:	e7ea      	b.n	8010044 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 801006e:	bf00      	nop
 8010070:	20001848 	.word	0x20001848
 8010074:	08020074 	.word	0x08020074
 8010078:	08020d78 	.word	0x08020d78
 801007c:	08020c4d 	.word	0x08020c4d
 8010080:	20001840 	.word	0x20001840
 8010084:	20001844 	.word	0x20001844
 8010088:	20001828 	.word	0x20001828
 801008c:	20001794 	.word	0x20001794

08010090 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010090:	b508      	push	{r3, lr}
 8010092:	4b14      	ldr	r3, [pc, #80]	; (80100e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8010094:	6819      	ldr	r1, [r3, #0]
 8010096:	b931      	cbnz	r1, 80100a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8010098:	4b13      	ldr	r3, [pc, #76]	; (80100e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801009a:	4a14      	ldr	r2, [pc, #80]	; (80100ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801009c:	4814      	ldr	r0, [pc, #80]	; (80100f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801009e:	f240 21fa 	movw	r1, #762	; 0x2fa
 80100a2:	f00b fc73 	bl	801b98c <__assert_func>
 80100a6:	4a13      	ldr	r2, [pc, #76]	; (80100f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80100a8:	8803      	ldrh	r3, [r0, #0]
 80100aa:	8812      	ldrh	r2, [r2, #0]
 80100ac:	4293      	cmp	r3, r2
 80100ae:	d204      	bcs.n	80100ba <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 80100b0:	2214      	movs	r2, #20
 80100b2:	fb02 1303 	mla	r3, r2, r3, r1
 80100b6:	8958      	ldrh	r0, [r3, #10]
 80100b8:	bd08      	pop	{r3, pc}
 80100ba:	490f      	ldr	r1, [pc, #60]	; (80100f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 80100bc:	8809      	ldrh	r1, [r1, #0]
 80100be:	4411      	add	r1, r2
 80100c0:	428b      	cmp	r3, r1
 80100c2:	da06      	bge.n	80100d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 80100c4:	1a9b      	subs	r3, r3, r2
 80100c6:	4a0d      	ldr	r2, [pc, #52]	; (80100fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 80100c8:	6812      	ldr	r2, [r2, #0]
 80100ca:	210e      	movs	r1, #14
 80100cc:	fb01 2303 	mla	r3, r1, r3, r2
 80100d0:	e7f1      	b.n	80100b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 80100d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80100d6:	4293      	cmp	r3, r2
 80100d8:	bf0a      	itet	eq
 80100da:	4b09      	ldreq	r3, [pc, #36]	; (8010100 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 80100dc:	2000      	movne	r0, #0
 80100de:	8818      	ldrheq	r0, [r3, #0]
 80100e0:	e7ea      	b.n	80100b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 80100e2:	bf00      	nop
 80100e4:	20001848 	.word	0x20001848
 80100e8:	08020074 	.word	0x08020074
 80100ec:	08020da4 	.word	0x08020da4
 80100f0:	08020c4d 	.word	0x08020c4d
 80100f4:	20001840 	.word	0x20001840
 80100f8:	20001844 	.word	0x20001844
 80100fc:	20001828 	.word	0x20001828
 8010100:	20001796 	.word	0x20001796

08010104 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010104:	b510      	push	{r4, lr}
 8010106:	4b23      	ldr	r3, [pc, #140]	; (8010194 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010108:	681c      	ldr	r4, [r3, #0]
 801010a:	b934      	cbnz	r4, 801011a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 801010c:	4b22      	ldr	r3, [pc, #136]	; (8010198 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801010e:	4a23      	ldr	r2, [pc, #140]	; (801019c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8010110:	4823      	ldr	r0, [pc, #140]	; (80101a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8010112:	f240 310e 	movw	r1, #782	; 0x30e
 8010116:	f00b fc39 	bl	801b98c <__assert_func>
 801011a:	4a22      	ldr	r2, [pc, #136]	; (80101a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801011c:	880b      	ldrh	r3, [r1, #0]
 801011e:	8812      	ldrh	r2, [r2, #0]
 8010120:	4293      	cmp	r3, r2
 8010122:	d211      	bcs.n	8010148 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8010124:	2214      	movs	r2, #20
 8010126:	fb02 4303 	mla	r3, r2, r3, r4
 801012a:	8a1a      	ldrh	r2, [r3, #16]
 801012c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010130:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010134:	8a5b      	ldrh	r3, [r3, #18]
 8010136:	8004      	strh	r4, [r0, #0]
 8010138:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801013c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8010140:	8041      	strh	r1, [r0, #2]
 8010142:	8082      	strh	r2, [r0, #4]
 8010144:	80c3      	strh	r3, [r0, #6]
 8010146:	e00e      	b.n	8010166 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010148:	4917      	ldr	r1, [pc, #92]	; (80101a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801014a:	8809      	ldrh	r1, [r1, #0]
 801014c:	4411      	add	r1, r2
 801014e:	428b      	cmp	r3, r1
 8010150:	da0a      	bge.n	8010168 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8010152:	1a9b      	subs	r3, r3, r2
 8010154:	4a15      	ldr	r2, [pc, #84]	; (80101ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 8010156:	6812      	ldr	r2, [r2, #0]
 8010158:	210e      	movs	r1, #14
 801015a:	fb01 2303 	mla	r3, r1, r3, r2
 801015e:	681a      	ldr	r2, [r3, #0]
 8010160:	6002      	str	r2, [r0, #0]
 8010162:	685a      	ldr	r2, [r3, #4]
 8010164:	6042      	str	r2, [r0, #4]
 8010166:	bd10      	pop	{r4, pc}
 8010168:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801016c:	4293      	cmp	r3, r2
 801016e:	d10b      	bne.n	8010188 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8010170:	4b0f      	ldr	r3, [pc, #60]	; (80101b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8010172:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010176:	4b0f      	ldr	r3, [pc, #60]	; (80101b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8010178:	8081      	strh	r1, [r0, #4]
 801017a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801017e:	80c2      	strh	r2, [r0, #6]
 8010180:	2300      	movs	r3, #0
 8010182:	8003      	strh	r3, [r0, #0]
 8010184:	8043      	strh	r3, [r0, #2]
 8010186:	e7ee      	b.n	8010166 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010188:	2300      	movs	r3, #0
 801018a:	8003      	strh	r3, [r0, #0]
 801018c:	8043      	strh	r3, [r0, #2]
 801018e:	8083      	strh	r3, [r0, #4]
 8010190:	e7d8      	b.n	8010144 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8010192:	bf00      	nop
 8010194:	20001848 	.word	0x20001848
 8010198:	08020074 	.word	0x08020074
 801019c:	08020d11 	.word	0x08020d11
 80101a0:	08020c4d 	.word	0x08020c4d
 80101a4:	20001840 	.word	0x20001840
 80101a8:	20001844 	.word	0x20001844
 80101ac:	20001828 	.word	0x20001828
 80101b0:	20001794 	.word	0x20001794
 80101b4:	20001796 	.word	0x20001796

080101b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80101b8:	4b18      	ldr	r3, [pc, #96]	; (801021c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80101ba:	681b      	ldr	r3, [r3, #0]
 80101bc:	b34b      	cbz	r3, 8010212 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 80101be:	4a18      	ldr	r2, [pc, #96]	; (8010220 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80101c0:	8800      	ldrh	r0, [r0, #0]
 80101c2:	8812      	ldrh	r2, [r2, #0]
 80101c4:	4290      	cmp	r0, r2
 80101c6:	d211      	bcs.n	80101ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 80101c8:	2214      	movs	r2, #20
 80101ca:	fb02 3300 	mla	r3, r2, r0, r3
 80101ce:	8a1a      	ldrh	r2, [r3, #16]
 80101d0:	8919      	ldrh	r1, [r3, #8]
 80101d2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80101d6:	428a      	cmp	r2, r1
 80101d8:	db1d      	blt.n	8010216 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 80101da:	8a58      	ldrh	r0, [r3, #18]
 80101dc:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80101e0:	895b      	ldrh	r3, [r3, #10]
 80101e2:	4298      	cmp	r0, r3
 80101e4:	bfac      	ite	ge
 80101e6:	2000      	movge	r0, #0
 80101e8:	2001      	movlt	r0, #1
 80101ea:	4770      	bx	lr
 80101ec:	4b0d      	ldr	r3, [pc, #52]	; (8010224 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80101ee:	881b      	ldrh	r3, [r3, #0]
 80101f0:	4413      	add	r3, r2
 80101f2:	4298      	cmp	r0, r3
 80101f4:	da0d      	bge.n	8010212 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 80101f6:	4b0c      	ldr	r3, [pc, #48]	; (8010228 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 80101f8:	681b      	ldr	r3, [r3, #0]
 80101fa:	1a80      	subs	r0, r0, r2
 80101fc:	220e      	movs	r2, #14
 80101fe:	fb02 3300 	mla	r3, r2, r0, r3
 8010202:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8010206:	891a      	ldrh	r2, [r3, #8]
 8010208:	4291      	cmp	r1, r2
 801020a:	db04      	blt.n	8010216 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801020c:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8010210:	e7e6      	b.n	80101e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8010212:	2000      	movs	r0, #0
 8010214:	4770      	bx	lr
 8010216:	2001      	movs	r0, #1
 8010218:	4770      	bx	lr
 801021a:	bf00      	nop
 801021c:	20001848 	.word	0x20001848
 8010220:	20001840 	.word	0x20001840
 8010224:	20001844 	.word	0x20001844
 8010228:	20001828 	.word	0x20001828

0801022c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801022c:	b508      	push	{r3, lr}
 801022e:	4b12      	ldr	r3, [pc, #72]	; (8010278 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8010230:	6819      	ldr	r1, [r3, #0]
 8010232:	b931      	cbnz	r1, 8010242 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8010234:	4b11      	ldr	r3, [pc, #68]	; (801027c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010236:	4a12      	ldr	r2, [pc, #72]	; (8010280 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010238:	4812      	ldr	r0, [pc, #72]	; (8010284 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801023a:	f240 3132 	movw	r1, #818	; 0x332
 801023e:	f00b fba5 	bl	801b98c <__assert_func>
 8010242:	8803      	ldrh	r3, [r0, #0]
 8010244:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010248:	4293      	cmp	r3, r2
 801024a:	d012      	beq.n	8010272 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801024c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010250:	4293      	cmp	r3, r2
 8010252:	d103      	bne.n	801025c <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8010254:	4b0c      	ldr	r3, [pc, #48]	; (8010288 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8010256:	681b      	ldr	r3, [r3, #0]
 8010258:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801025a:	bd08      	pop	{r3, pc}
 801025c:	4a0b      	ldr	r2, [pc, #44]	; (801028c <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 801025e:	6812      	ldr	r2, [r2, #0]
 8010260:	b11a      	cbz	r2, 801026a <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8010262:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010266:	2800      	cmp	r0, #0
 8010268:	d1f7      	bne.n	801025a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801026a:	2214      	movs	r2, #20
 801026c:	4353      	muls	r3, r2
 801026e:	58c8      	ldr	r0, [r1, r3]
 8010270:	e7f3      	b.n	801025a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010272:	2000      	movs	r0, #0
 8010274:	e7f1      	b.n	801025a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010276:	bf00      	nop
 8010278:	20001848 	.word	0x20001848
 801027c:	08020074 	.word	0x08020074
 8010280:	08020d47 	.word	0x08020d47
 8010284:	08020c4d 	.word	0x08020c4d
 8010288:	200017a0 	.word	0x200017a0
 801028c:	20001824 	.word	0x20001824

08010290 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010290:	8802      	ldrh	r2, [r0, #0]
 8010292:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8010296:	429a      	cmp	r2, r3
 8010298:	d840      	bhi.n	801031c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 801029a:	4b21      	ldr	r3, [pc, #132]	; (8010320 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 801029c:	881b      	ldrh	r3, [r3, #0]
 801029e:	429a      	cmp	r2, r3
 80102a0:	d220      	bcs.n	80102e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 80102a2:	4b20      	ldr	r3, [pc, #128]	; (8010324 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80102a4:	6819      	ldr	r1, [r3, #0]
 80102a6:	2314      	movs	r3, #20
 80102a8:	fb03 1302 	mla	r3, r3, r2, r1
 80102ac:	6858      	ldr	r0, [r3, #4]
 80102ae:	2800      	cmp	r0, #0
 80102b0:	d035      	beq.n	801031e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80102b2:	491d      	ldr	r1, [pc, #116]	; (8010328 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80102b4:	6809      	ldr	r1, [r1, #0]
 80102b6:	2900      	cmp	r1, #0
 80102b8:	d031      	beq.n	801031e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80102ba:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80102be:	b371      	cbz	r1, 801031e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80102c0:	895a      	ldrh	r2, [r3, #10]
 80102c2:	8918      	ldrh	r0, [r3, #8]
 80102c4:	4350      	muls	r0, r2
 80102c6:	7c5a      	ldrb	r2, [r3, #17]
 80102c8:	7cdb      	ldrb	r3, [r3, #19]
 80102ca:	0952      	lsrs	r2, r2, #5
 80102cc:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80102d0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80102d4:	2b0b      	cmp	r3, #11
 80102d6:	bf18      	it	ne
 80102d8:	0040      	lslne	r0, r0, #1
 80102da:	3003      	adds	r0, #3
 80102dc:	f020 0003 	bic.w	r0, r0, #3
 80102e0:	4408      	add	r0, r1
 80102e2:	4770      	bx	lr
 80102e4:	4911      	ldr	r1, [pc, #68]	; (801032c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80102e6:	8809      	ldrh	r1, [r1, #0]
 80102e8:	4419      	add	r1, r3
 80102ea:	428a      	cmp	r2, r1
 80102ec:	da16      	bge.n	801031c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 80102ee:	4910      	ldr	r1, [pc, #64]	; (8010330 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80102f0:	6809      	ldr	r1, [r1, #0]
 80102f2:	1ad3      	subs	r3, r2, r3
 80102f4:	200e      	movs	r0, #14
 80102f6:	fb00 1303 	mla	r3, r0, r3, r1
 80102fa:	7b19      	ldrb	r1, [r3, #12]
 80102fc:	f001 011f 	and.w	r1, r1, #31
 8010300:	290b      	cmp	r1, #11
 8010302:	d10b      	bne.n	801031c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 8010304:	8919      	ldrh	r1, [r3, #8]
 8010306:	8958      	ldrh	r0, [r3, #10]
 8010308:	4b07      	ldr	r3, [pc, #28]	; (8010328 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801030a:	4348      	muls	r0, r1
 801030c:	6819      	ldr	r1, [r3, #0]
 801030e:	3003      	adds	r0, #3
 8010310:	f020 0303 	bic.w	r3, r0, #3
 8010314:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8010318:	4418      	add	r0, r3
 801031a:	4770      	bx	lr
 801031c:	2000      	movs	r0, #0
 801031e:	4770      	bx	lr
 8010320:	20001840 	.word	0x20001840
 8010324:	20001848 	.word	0x20001848
 8010328:	20001824 	.word	0x20001824
 801032c:	20001844 	.word	0x20001844
 8010330:	20001828 	.word	0x20001828

08010334 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8010334:	4b19      	ldr	r3, [pc, #100]	; (801039c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8010336:	6819      	ldr	r1, [r3, #0]
 8010338:	8803      	ldrh	r3, [r0, #0]
 801033a:	b1e9      	cbz	r1, 8010378 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801033c:	4a18      	ldr	r2, [pc, #96]	; (80103a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801033e:	8812      	ldrh	r2, [r2, #0]
 8010340:	429a      	cmp	r2, r3
 8010342:	d90a      	bls.n	801035a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8010344:	2214      	movs	r2, #20
 8010346:	fb02 1303 	mla	r3, r2, r3, r1
 801034a:	7c58      	ldrb	r0, [r3, #17]
 801034c:	0942      	lsrs	r2, r0, #5
 801034e:	7cd8      	ldrb	r0, [r3, #19]
 8010350:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010354:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010358:	4770      	bx	lr
 801035a:	4912      	ldr	r1, [pc, #72]	; (80103a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 801035c:	8809      	ldrh	r1, [r1, #0]
 801035e:	4411      	add	r1, r2
 8010360:	428b      	cmp	r3, r1
 8010362:	da09      	bge.n	8010378 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010364:	1a9b      	subs	r3, r3, r2
 8010366:	4a10      	ldr	r2, [pc, #64]	; (80103a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 8010368:	6812      	ldr	r2, [r2, #0]
 801036a:	210e      	movs	r1, #14
 801036c:	fb01 2303 	mla	r3, r1, r3, r2
 8010370:	7b18      	ldrb	r0, [r3, #12]
 8010372:	f000 001f 	and.w	r0, r0, #31
 8010376:	4770      	bx	lr
 8010378:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801037c:	4293      	cmp	r3, r2
 801037e:	d10a      	bne.n	8010396 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 8010380:	4b0a      	ldr	r3, [pc, #40]	; (80103ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 8010382:	681b      	ldr	r3, [r3, #0]
 8010384:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8010388:	b10a      	cbz	r2, 801038e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801038a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801038c:	b900      	cbnz	r0, 8010390 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 801038e:	6898      	ldr	r0, [r3, #8]
 8010390:	6803      	ldr	r3, [r0, #0]
 8010392:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010394:	4718      	bx	r3
 8010396:	2000      	movs	r0, #0
 8010398:	4770      	bx	lr
 801039a:	bf00      	nop
 801039c:	20001848 	.word	0x20001848
 80103a0:	20001840 	.word	0x20001840
 80103a4:	20001844 	.word	0x20001844
 80103a8:	20001828 	.word	0x20001828
 80103ac:	200017a0 	.word	0x200017a0

080103b0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80103b0:	2010      	movs	r0, #16
 80103b2:	4770      	bx	lr

080103b4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80103b4:	2000      	movs	r0, #0
 80103b6:	4770      	bx	lr

080103b8 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 80103b8:	00d2      	lsls	r2, r2, #3
 80103ba:	0209      	lsls	r1, r1, #8
 80103bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80103c0:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 80103c4:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80103c8:	4310      	orrs	r0, r2
 80103ca:	4770      	bx	lr

080103cc <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 80103cc:	1209      	asrs	r1, r1, #8
 80103ce:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 80103d2:	4770      	bx	lr

080103d4 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 80103d4:	f3c1 01cc 	ubfx	r1, r1, #3, #13
 80103d8:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 80103dc:	4770      	bx	lr

080103de <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 80103de:	00c9      	lsls	r1, r1, #3
 80103e0:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 80103e4:	4770      	bx	lr

080103e6 <_ZN8touchgfx8LCD16bpp4initEv>:
 80103e6:	4770      	bx	lr

080103e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80103e8:	2bff      	cmp	r3, #255	; 0xff
 80103ea:	d050      	beq.n	801048e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80103ec:	2a0b      	cmp	r2, #11
 80103ee:	d04a      	beq.n	8010486 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80103f0:	d80e      	bhi.n	8010410 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80103f2:	2a03      	cmp	r2, #3
 80103f4:	d03f      	beq.n	8010476 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80103f6:	d804      	bhi.n	8010402 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80103f8:	2a01      	cmp	r2, #1
 80103fa:	d03e      	beq.n	801047a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80103fc:	d93f      	bls.n	801047e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80103fe:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8010400:	4770      	bx	lr
 8010402:	2a09      	cmp	r2, #9
 8010404:	d03f      	beq.n	8010486 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010406:	d83c      	bhi.n	8010482 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010408:	2a08      	cmp	r2, #8
 801040a:	d03a      	beq.n	8010482 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801040c:	2000      	movs	r0, #0
 801040e:	4770      	bx	lr
 8010410:	2a2f      	cmp	r2, #47	; 0x2f
 8010412:	d024      	beq.n	801045e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8010414:	d80d      	bhi.n	8010432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8010416:	2a2d      	cmp	r2, #45	; 0x2d
 8010418:	d014      	beq.n	8010444 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801041a:	d826      	bhi.n	801046a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801041c:	2a2c      	cmp	r2, #44	; 0x2c
 801041e:	d1f5      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010420:	684b      	ldr	r3, [r1, #4]
 8010422:	781b      	ldrb	r3, [r3, #0]
 8010424:	2b01      	cmp	r3, #1
 8010426:	d018      	beq.n	801045a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8010428:	d323      	bcc.n	8010472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801042a:	2b02      	cmp	r3, #2
 801042c:	d1ee      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801042e:	6880      	ldr	r0, [r0, #8]
 8010430:	4770      	bx	lr
 8010432:	2a31      	cmp	r2, #49	; 0x31
 8010434:	d004      	beq.n	8010440 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8010436:	d328      	bcc.n	801048a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010438:	2a32      	cmp	r2, #50	; 0x32
 801043a:	d026      	beq.n	801048a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801043c:	2a33      	cmp	r2, #51	; 0x33
 801043e:	d1e5      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010440:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8010442:	4770      	bx	lr
 8010444:	684b      	ldr	r3, [r1, #4]
 8010446:	781b      	ldrb	r3, [r3, #0]
 8010448:	2b01      	cmp	r3, #1
 801044a:	d004      	beq.n	8010456 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801044c:	d30b      	bcc.n	8010466 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801044e:	2b02      	cmp	r3, #2
 8010450:	d1dc      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010452:	6900      	ldr	r0, [r0, #16]
 8010454:	4770      	bx	lr
 8010456:	6a00      	ldr	r0, [r0, #32]
 8010458:	4770      	bx	lr
 801045a:	6980      	ldr	r0, [r0, #24]
 801045c:	4770      	bx	lr
 801045e:	684b      	ldr	r3, [r1, #4]
 8010460:	781b      	ldrb	r3, [r3, #0]
 8010462:	2b00      	cmp	r3, #0
 8010464:	d1d2      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010466:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010468:	4770      	bx	lr
 801046a:	684b      	ldr	r3, [r1, #4]
 801046c:	781b      	ldrb	r3, [r3, #0]
 801046e:	2b00      	cmp	r3, #0
 8010470:	d1cc      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010472:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010474:	4770      	bx	lr
 8010476:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010478:	4770      	bx	lr
 801047a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801047c:	4770      	bx	lr
 801047e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8010480:	4770      	bx	lr
 8010482:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8010484:	4770      	bx	lr
 8010486:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010488:	4770      	bx	lr
 801048a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801048c:	4770      	bx	lr
 801048e:	2a0b      	cmp	r2, #11
 8010490:	d049      	beq.n	8010526 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010492:	d80e      	bhi.n	80104b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8010494:	2a03      	cmp	r2, #3
 8010496:	d040      	beq.n	801051a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8010498:	d804      	bhi.n	80104a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801049a:	2a01      	cmp	r2, #1
 801049c:	d03f      	beq.n	801051e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801049e:	d940      	bls.n	8010522 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80104a0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80104a2:	4770      	bx	lr
 80104a4:	2a09      	cmp	r2, #9
 80104a6:	d03e      	beq.n	8010526 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80104a8:	d801      	bhi.n	80104ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80104aa:	2a08      	cmp	r2, #8
 80104ac:	d1ae      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104ae:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80104b0:	4770      	bx	lr
 80104b2:	2a2f      	cmp	r2, #47	; 0x2f
 80104b4:	d024      	beq.n	8010500 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80104b6:	d80d      	bhi.n	80104d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80104b8:	2a2d      	cmp	r2, #45	; 0x2d
 80104ba:	d014      	beq.n	80104e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80104bc:	d826      	bhi.n	801050c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80104be:	2a2c      	cmp	r2, #44	; 0x2c
 80104c0:	d1a4      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104c2:	684b      	ldr	r3, [r1, #4]
 80104c4:	781b      	ldrb	r3, [r3, #0]
 80104c6:	2b01      	cmp	r3, #1
 80104c8:	d018      	beq.n	80104fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80104ca:	d324      	bcc.n	8010516 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80104cc:	2b02      	cmp	r3, #2
 80104ce:	d19d      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104d0:	68c0      	ldr	r0, [r0, #12]
 80104d2:	4770      	bx	lr
 80104d4:	2a31      	cmp	r2, #49	; 0x31
 80104d6:	d004      	beq.n	80104e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80104d8:	d327      	bcc.n	801052a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80104da:	2a32      	cmp	r2, #50	; 0x32
 80104dc:	d025      	beq.n	801052a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80104de:	2a33      	cmp	r2, #51	; 0x33
 80104e0:	d194      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104e2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80104e4:	4770      	bx	lr
 80104e6:	684b      	ldr	r3, [r1, #4]
 80104e8:	781b      	ldrb	r3, [r3, #0]
 80104ea:	2b01      	cmp	r3, #1
 80104ec:	d004      	beq.n	80104f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80104ee:	d30b      	bcc.n	8010508 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80104f0:	2b02      	cmp	r3, #2
 80104f2:	d18b      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80104f4:	6940      	ldr	r0, [r0, #20]
 80104f6:	4770      	bx	lr
 80104f8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80104fa:	4770      	bx	lr
 80104fc:	69c0      	ldr	r0, [r0, #28]
 80104fe:	4770      	bx	lr
 8010500:	684b      	ldr	r3, [r1, #4]
 8010502:	781b      	ldrb	r3, [r3, #0]
 8010504:	2b00      	cmp	r3, #0
 8010506:	d181      	bne.n	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010508:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801050a:	4770      	bx	lr
 801050c:	684b      	ldr	r3, [r1, #4]
 801050e:	781b      	ldrb	r3, [r3, #0]
 8010510:	2b00      	cmp	r3, #0
 8010512:	f47f af7b 	bne.w	801040c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010516:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8010518:	4770      	bx	lr
 801051a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801051c:	4770      	bx	lr
 801051e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8010520:	4770      	bx	lr
 8010522:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8010524:	4770      	bx	lr
 8010526:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8010528:	4770      	bx	lr
 801052a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801052c:	4770      	bx	lr

0801052e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801052e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010532:	b087      	sub	sp, #28
 8010534:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8010536:	9205      	str	r2, [sp, #20]
 8010538:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 801053c:	9202      	str	r2, [sp, #8]
 801053e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8010542:	9101      	str	r1, [sp, #4]
 8010544:	6871      	ldr	r1, [r6, #4]
 8010546:	981a      	ldr	r0, [sp, #104]	; 0x68
 8010548:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 801054c:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010550:	fb01 2505 	mla	r5, r1, r5, r2
 8010554:	6832      	ldr	r2, [r6, #0]
 8010556:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801055a:	6802      	ldr	r2, [r0, #0]
 801055c:	9203      	str	r2, [sp, #12]
 801055e:	6842      	ldr	r2, [r0, #4]
 8010560:	fa1f fe84 	uxth.w	lr, r4
 8010564:	3204      	adds	r2, #4
 8010566:	43e4      	mvns	r4, r4
 8010568:	9204      	str	r2, [sp, #16]
 801056a:	b2e4      	uxtb	r4, r4
 801056c:	9a01      	ldr	r2, [sp, #4]
 801056e:	2a00      	cmp	r2, #0
 8010570:	dc03      	bgt.n	801057a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8010572:	9a05      	ldr	r2, [sp, #20]
 8010574:	2a00      	cmp	r2, #0
 8010576:	f340 8119 	ble.w	80107ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 801057a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801057c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010580:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010582:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010586:	2b00      	cmp	r3, #0
 8010588:	dd0f      	ble.n	80105aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 801058a:	1408      	asrs	r0, r1, #16
 801058c:	d406      	bmi.n	801059c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801058e:	4540      	cmp	r0, r8
 8010590:	da04      	bge.n	801059c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010592:	1410      	asrs	r0, r2, #16
 8010594:	d402      	bmi.n	801059c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010596:	9e02      	ldr	r6, [sp, #8]
 8010598:	42b0      	cmp	r0, r6
 801059a:	db07      	blt.n	80105ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 801059c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801059e:	4401      	add	r1, r0
 80105a0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80105a2:	3b01      	subs	r3, #1
 80105a4:	4402      	add	r2, r0
 80105a6:	3502      	adds	r5, #2
 80105a8:	e7ed      	b.n	8010586 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 80105aa:	d00f      	beq.n	80105cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80105ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80105ae:	1e58      	subs	r0, r3, #1
 80105b0:	fb06 1600 	mla	r6, r6, r0, r1
 80105b4:	1436      	asrs	r6, r6, #16
 80105b6:	d547      	bpl.n	8010648 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 80105b8:	469b      	mov	fp, r3
 80105ba:	46aa      	mov	sl, r5
 80105bc:	f1bb 0f00 	cmp.w	fp, #0
 80105c0:	f300 809e 	bgt.w	8010700 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80105c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80105c8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80105cc:	9b01      	ldr	r3, [sp, #4]
 80105ce:	2b00      	cmp	r3, #0
 80105d0:	f340 80ec 	ble.w	80107ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 80105d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80105d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80105dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80105e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80105e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80105ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80105ee:	eef0 6a62 	vmov.f32	s13, s5
 80105f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80105f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80105fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80105fe:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010602:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010606:	eef0 6a43 	vmov.f32	s13, s6
 801060a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801060e:	ee12 2a90 	vmov	r2, s5
 8010612:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010616:	fb92 f3f3 	sdiv	r3, r2, r3
 801061a:	ee13 2a10 	vmov	r2, s6
 801061e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010620:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010622:	fb92 f3f3 	sdiv	r3, r2, r3
 8010626:	9314      	str	r3, [sp, #80]	; 0x50
 8010628:	9b01      	ldr	r3, [sp, #4]
 801062a:	9a05      	ldr	r2, [sp, #20]
 801062c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010630:	3b01      	subs	r3, #1
 8010632:	9301      	str	r3, [sp, #4]
 8010634:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010638:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801063a:	eeb0 3a67 	vmov.f32	s6, s15
 801063e:	bf08      	it	eq
 8010640:	4613      	moveq	r3, r2
 8010642:	eef0 2a47 	vmov.f32	s5, s14
 8010646:	e791      	b.n	801056c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010648:	4546      	cmp	r6, r8
 801064a:	dab5      	bge.n	80105b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 801064c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801064e:	fb06 2000 	mla	r0, r6, r0, r2
 8010652:	1400      	asrs	r0, r0, #16
 8010654:	d4b0      	bmi.n	80105b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010656:	9e02      	ldr	r6, [sp, #8]
 8010658:	42b0      	cmp	r0, r6
 801065a:	daad      	bge.n	80105b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 801065c:	469a      	mov	sl, r3
 801065e:	46ab      	mov	fp, r5
 8010660:	f1ba 0f00 	cmp.w	sl, #0
 8010664:	ddae      	ble.n	80105c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010666:	9f03      	ldr	r7, [sp, #12]
 8010668:	1410      	asrs	r0, r2, #16
 801066a:	140e      	asrs	r6, r1, #16
 801066c:	fb08 7000 	mla	r0, r8, r0, r7
 8010670:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010674:	5d80      	ldrb	r0, [r0, r6]
 8010676:	9e04      	ldr	r6, [sp, #16]
 8010678:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 801067c:	f8bb 6000 	ldrh.w	r6, [fp]
 8010680:	1237      	asrs	r7, r6, #8
 8010682:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010686:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801068a:	fb17 f704 	smulbb	r7, r7, r4
 801068e:	ea4f 09e6 	mov.w	r9, r6, asr #3
 8010692:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010696:	00f6      	lsls	r6, r6, #3
 8010698:	fb0c 7c0e 	mla	ip, ip, lr, r7
 801069c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80106a0:	10c7      	asrs	r7, r0, #3
 80106a2:	b2f6      	uxtb	r6, r6
 80106a4:	00c0      	lsls	r0, r0, #3
 80106a6:	fb19 f904 	smulbb	r9, r9, r4
 80106aa:	fb16 f604 	smulbb	r6, r6, r4
 80106ae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80106b2:	b2c0      	uxtb	r0, r0
 80106b4:	fa1f fc8c 	uxth.w	ip, ip
 80106b8:	fb07 970e 	mla	r7, r7, lr, r9
 80106bc:	fb00 600e 	mla	r0, r0, lr, r6
 80106c0:	b280      	uxth	r0, r0
 80106c2:	b2bf      	uxth	r7, r7
 80106c4:	f10c 0601 	add.w	r6, ip, #1
 80106c8:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80106cc:	f107 0901 	add.w	r9, r7, #1
 80106d0:	1c46      	adds	r6, r0, #1
 80106d2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80106d6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80106da:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80106dc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80106e0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80106e4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80106e8:	ea4c 0c06 	orr.w	ip, ip, r6
 80106ec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80106f0:	4401      	add	r1, r0
 80106f2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80106f4:	ea4c 0c09 	orr.w	ip, ip, r9
 80106f8:	f82b cb02 	strh.w	ip, [fp], #2
 80106fc:	4402      	add	r2, r0
 80106fe:	e7af      	b.n	8010660 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 8010700:	140e      	asrs	r6, r1, #16
 8010702:	d44a      	bmi.n	801079a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 8010704:	4546      	cmp	r6, r8
 8010706:	da48      	bge.n	801079a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 8010708:	1410      	asrs	r0, r2, #16
 801070a:	d446      	bmi.n	801079a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 801070c:	9f02      	ldr	r7, [sp, #8]
 801070e:	42b8      	cmp	r0, r7
 8010710:	da43      	bge.n	801079a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 8010712:	9f03      	ldr	r7, [sp, #12]
 8010714:	fb08 7000 	mla	r0, r8, r0, r7
 8010718:	5d80      	ldrb	r0, [r0, r6]
 801071a:	9e04      	ldr	r6, [sp, #16]
 801071c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010720:	f8ba 6000 	ldrh.w	r6, [sl]
 8010724:	1237      	asrs	r7, r6, #8
 8010726:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801072a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801072e:	fb17 f704 	smulbb	r7, r7, r4
 8010732:	ea4f 09e6 	mov.w	r9, r6, asr #3
 8010736:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801073a:	00f6      	lsls	r6, r6, #3
 801073c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010740:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010744:	10c7      	asrs	r7, r0, #3
 8010746:	b2f6      	uxtb	r6, r6
 8010748:	00c0      	lsls	r0, r0, #3
 801074a:	fb19 f904 	smulbb	r9, r9, r4
 801074e:	fb16 f604 	smulbb	r6, r6, r4
 8010752:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010756:	b2c0      	uxtb	r0, r0
 8010758:	fa1f fc8c 	uxth.w	ip, ip
 801075c:	fb07 970e 	mla	r7, r7, lr, r9
 8010760:	fb00 600e 	mla	r0, r0, lr, r6
 8010764:	b2bf      	uxth	r7, r7
 8010766:	b280      	uxth	r0, r0
 8010768:	f10c 0601 	add.w	r6, ip, #1
 801076c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010770:	f107 0901 	add.w	r9, r7, #1
 8010774:	1c46      	adds	r6, r0, #1
 8010776:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801077a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801077e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010782:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010786:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801078a:	ea4c 0c06 	orr.w	ip, ip, r6
 801078e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010792:	ea4c 0c09 	orr.w	ip, ip, r9
 8010796:	f8aa c000 	strh.w	ip, [sl]
 801079a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801079c:	4401      	add	r1, r0
 801079e:	9814      	ldr	r0, [sp, #80]	; 0x50
 80107a0:	f10a 0a02 	add.w	sl, sl, #2
 80107a4:	4402      	add	r2, r0
 80107a6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80107aa:	e707      	b.n	80105bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80107ac:	b007      	add	sp, #28
 80107ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080107b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80107b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107b6:	b085      	sub	sp, #20
 80107b8:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 80107bc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80107be:	9203      	str	r2, [sp, #12]
 80107c0:	6842      	ldr	r2, [r0, #4]
 80107c2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80107c4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80107c6:	6800      	ldr	r0, [r0, #0]
 80107c8:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 80107cc:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 80107d0:	4696      	mov	lr, r2
 80107d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80107d4:	fb0e 2505 	mla	r5, lr, r5, r2
 80107d8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80107dc:	6860      	ldr	r0, [r4, #4]
 80107de:	6822      	ldr	r2, [r4, #0]
 80107e0:	9201      	str	r2, [sp, #4]
 80107e2:	1d02      	adds	r2, r0, #4
 80107e4:	9202      	str	r2, [sp, #8]
 80107e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80107ea:	2900      	cmp	r1, #0
 80107ec:	dc03      	bgt.n	80107f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 80107ee:	9a03      	ldr	r2, [sp, #12]
 80107f0:	2a00      	cmp	r2, #0
 80107f2:	f340 809b 	ble.w	801092c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 80107f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80107f8:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 80107fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80107fe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010802:	2b00      	cmp	r3, #0
 8010804:	dd0e      	ble.n	8010824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8010806:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801080a:	d406      	bmi.n	801081a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801080c:	45e6      	cmp	lr, ip
 801080e:	da04      	bge.n	801081a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010810:	ea5f 4e20 	movs.w	lr, r0, asr #16
 8010814:	d401      	bmi.n	801081a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010816:	45c6      	cmp	lr, r8
 8010818:	db05      	blt.n	8010826 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801081a:	443c      	add	r4, r7
 801081c:	4430      	add	r0, r6
 801081e:	3b01      	subs	r3, #1
 8010820:	3502      	adds	r5, #2
 8010822:	e7ee      	b.n	8010802 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010824:	d010      	beq.n	8010848 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010826:	f103 3eff 	add.w	lr, r3, #4294967295
 801082a:	fb07 490e 	mla	r9, r7, lr, r4
 801082e:	ea5f 4929 	movs.w	r9, r9, asr #16
 8010832:	d53d      	bpl.n	80108b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8010834:	469e      	mov	lr, r3
 8010836:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 801083a:	f1be 0f00 	cmp.w	lr, #0
 801083e:	dc58      	bgt.n	80108f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 8010840:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010844:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010848:	2900      	cmp	r1, #0
 801084a:	dd6f      	ble.n	801092c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 801084c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010850:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010854:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010858:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801085a:	3901      	subs	r1, #1
 801085c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010860:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010864:	eeb0 6a62 	vmov.f32	s12, s5
 8010868:	ee61 7a27 	vmul.f32	s15, s2, s15
 801086c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010870:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010874:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010878:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801087c:	eeb0 6a43 	vmov.f32	s12, s6
 8010880:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010884:	ee12 2a90 	vmov	r2, s5
 8010888:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801088c:	fb92 f7f3 	sdiv	r7, r2, r3
 8010890:	ee13 2a10 	vmov	r2, s6
 8010894:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010898:	fb92 f6f3 	sdiv	r6, r2, r3
 801089c:	9a03      	ldr	r2, [sp, #12]
 801089e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80108a2:	bf08      	it	eq
 80108a4:	4613      	moveq	r3, r2
 80108a6:	eeb0 3a67 	vmov.f32	s6, s15
 80108aa:	eef0 2a47 	vmov.f32	s5, s14
 80108ae:	e79c      	b.n	80107ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 80108b0:	45e1      	cmp	r9, ip
 80108b2:	dabf      	bge.n	8010834 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80108b4:	fb06 0e0e 	mla	lr, r6, lr, r0
 80108b8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80108bc:	d4ba      	bmi.n	8010834 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80108be:	45c6      	cmp	lr, r8
 80108c0:	dab8      	bge.n	8010834 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80108c2:	469e      	mov	lr, r3
 80108c4:	46aa      	mov	sl, r5
 80108c6:	f1be 0f00 	cmp.w	lr, #0
 80108ca:	ddb9      	ble.n	8010840 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80108cc:	9a01      	ldr	r2, [sp, #4]
 80108ce:	ea4f 4920 	mov.w	r9, r0, asr #16
 80108d2:	ea4f 4b24 	mov.w	fp, r4, asr #16
 80108d6:	fb0c 2909 	mla	r9, ip, r9, r2
 80108da:	9a02      	ldr	r2, [sp, #8]
 80108dc:	f819 900b 	ldrb.w	r9, [r9, fp]
 80108e0:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 80108e4:	f82a 9b02 	strh.w	r9, [sl], #2
 80108e8:	443c      	add	r4, r7
 80108ea:	4430      	add	r0, r6
 80108ec:	f10e 3eff 	add.w	lr, lr, #4294967295
 80108f0:	e7e9      	b.n	80108c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 80108f2:	ea5f 4a24 	movs.w	sl, r4, asr #16
 80108f6:	d414      	bmi.n	8010922 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80108f8:	45e2      	cmp	sl, ip
 80108fa:	da12      	bge.n	8010922 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 80108fc:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010900:	d40f      	bmi.n	8010922 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 8010902:	45c1      	cmp	r9, r8
 8010904:	da0d      	bge.n	8010922 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 8010906:	9a01      	ldr	r2, [sp, #4]
 8010908:	fb0c 2909 	mla	r9, ip, r9, r2
 801090c:	9a02      	ldr	r2, [sp, #8]
 801090e:	f819 900a 	ldrb.w	r9, [r9, sl]
 8010912:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 8010916:	f06f 0201 	mvn.w	r2, #1
 801091a:	fb02 f90e 	mul.w	r9, r2, lr
 801091e:	f82b a009 	strh.w	sl, [fp, r9]
 8010922:	443c      	add	r4, r7
 8010924:	4430      	add	r0, r6
 8010926:	f10e 3eff 	add.w	lr, lr, #4294967295
 801092a:	e786      	b.n	801083a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 801092c:	b005      	add	sp, #20
 801092e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010932 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010932:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010936:	b087      	sub	sp, #28
 8010938:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801093a:	9205      	str	r2, [sp, #20]
 801093c:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010940:	9202      	str	r2, [sp, #8]
 8010942:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010946:	9101      	str	r1, [sp, #4]
 8010948:	6871      	ldr	r1, [r6, #4]
 801094a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801094c:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 8010950:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 8010954:	fb01 2404 	mla	r4, r1, r4, r2
 8010958:	6832      	ldr	r2, [r6, #0]
 801095a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801095e:	682a      	ldr	r2, [r5, #0]
 8010960:	9203      	str	r2, [sp, #12]
 8010962:	686a      	ldr	r2, [r5, #4]
 8010964:	fa1f fc80 	uxth.w	ip, r0
 8010968:	3204      	adds	r2, #4
 801096a:	43c0      	mvns	r0, r0
 801096c:	9200      	str	r2, [sp, #0]
 801096e:	b2c0      	uxtb	r0, r0
 8010970:	9a01      	ldr	r2, [sp, #4]
 8010972:	2a00      	cmp	r2, #0
 8010974:	dc03      	bgt.n	801097e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8010976:	9a05      	ldr	r2, [sp, #20]
 8010978:	2a00      	cmp	r2, #0
 801097a:	f340 811b 	ble.w	8010bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 801097e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010980:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010984:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010986:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801098a:	2b00      	cmp	r3, #0
 801098c:	dd0f      	ble.n	80109ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 801098e:	140d      	asrs	r5, r1, #16
 8010990:	d406      	bmi.n	80109a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010992:	4575      	cmp	r5, lr
 8010994:	da04      	bge.n	80109a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010996:	1415      	asrs	r5, r2, #16
 8010998:	d402      	bmi.n	80109a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801099a:	9e02      	ldr	r6, [sp, #8]
 801099c:	42b5      	cmp	r5, r6
 801099e:	db07      	blt.n	80109b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 80109a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80109a2:	4429      	add	r1, r5
 80109a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80109a6:	3b01      	subs	r3, #1
 80109a8:	442a      	add	r2, r5
 80109aa:	3402      	adds	r4, #2
 80109ac:	e7ed      	b.n	801098a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 80109ae:	d00f      	beq.n	80109d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80109b0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80109b2:	1e5d      	subs	r5, r3, #1
 80109b4:	fb06 1605 	mla	r6, r6, r5, r1
 80109b8:	1436      	asrs	r6, r6, #16
 80109ba:	d547      	bpl.n	8010a4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 80109bc:	469a      	mov	sl, r3
 80109be:	46a1      	mov	r9, r4
 80109c0:	f1ba 0f00 	cmp.w	sl, #0
 80109c4:	f300 809f 	bgt.w	8010b06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 80109c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80109cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80109d0:	9b01      	ldr	r3, [sp, #4]
 80109d2:	2b00      	cmp	r3, #0
 80109d4:	f340 80ee 	ble.w	8010bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 80109d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80109dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80109e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80109e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80109e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80109ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80109ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80109f2:	eef0 6a62 	vmov.f32	s13, s5
 80109f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80109fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80109fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010a02:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010a06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010a0a:	eef0 6a43 	vmov.f32	s13, s6
 8010a0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010a12:	ee12 2a90 	vmov	r2, s5
 8010a16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010a1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a1e:	ee13 2a10 	vmov	r2, s6
 8010a22:	9313      	str	r3, [sp, #76]	; 0x4c
 8010a24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010a26:	fb92 f3f3 	sdiv	r3, r2, r3
 8010a2a:	9314      	str	r3, [sp, #80]	; 0x50
 8010a2c:	9b01      	ldr	r3, [sp, #4]
 8010a2e:	9a05      	ldr	r2, [sp, #20]
 8010a30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010a34:	3b01      	subs	r3, #1
 8010a36:	9301      	str	r3, [sp, #4]
 8010a38:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010a3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010a3e:	eeb0 3a67 	vmov.f32	s6, s15
 8010a42:	bf08      	it	eq
 8010a44:	4613      	moveq	r3, r2
 8010a46:	eef0 2a47 	vmov.f32	s5, s14
 8010a4a:	e791      	b.n	8010970 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010a4c:	4576      	cmp	r6, lr
 8010a4e:	dab5      	bge.n	80109bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010a50:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010a52:	fb06 2505 	mla	r5, r6, r5, r2
 8010a56:	142d      	asrs	r5, r5, #16
 8010a58:	d4b0      	bmi.n	80109bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010a5a:	9e02      	ldr	r6, [sp, #8]
 8010a5c:	42b5      	cmp	r5, r6
 8010a5e:	daad      	bge.n	80109bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010a60:	4699      	mov	r9, r3
 8010a62:	46a2      	mov	sl, r4
 8010a64:	f1b9 0f00 	cmp.w	r9, #0
 8010a68:	ddae      	ble.n	80109c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010a6a:	9f03      	ldr	r7, [sp, #12]
 8010a6c:	1415      	asrs	r5, r2, #16
 8010a6e:	140e      	asrs	r6, r1, #16
 8010a70:	fb0e 7505 	mla	r5, lr, r5, r7
 8010a74:	f109 39ff 	add.w	r9, r9, #4294967295
 8010a78:	f815 8006 	ldrb.w	r8, [r5, r6]
 8010a7c:	9d00      	ldr	r5, [sp, #0]
 8010a7e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010a82:	eb05 0b08 	add.w	fp, r5, r8
 8010a86:	f8ba 5000 	ldrh.w	r5, [sl]
 8010a8a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010a8e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010a92:	122f      	asrs	r7, r5, #8
 8010a94:	fb16 f60c 	smulbb	r6, r6, ip
 8010a98:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010a9c:	fb07 6700 	mla	r7, r7, r0, r6
 8010aa0:	10ee      	asrs	r6, r5, #3
 8010aa2:	fb1b fb0c 	smulbb	fp, fp, ip
 8010aa6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010aaa:	fb06 b600 	mla	r6, r6, r0, fp
 8010aae:	b2b6      	uxth	r6, r6
 8010ab0:	9604      	str	r6, [sp, #16]
 8010ab2:	9e00      	ldr	r6, [sp, #0]
 8010ab4:	00ed      	lsls	r5, r5, #3
 8010ab6:	f816 8008 	ldrb.w	r8, [r6, r8]
 8010aba:	b2ed      	uxtb	r5, r5
 8010abc:	fb15 f500 	smulbb	r5, r5, r0
 8010ac0:	b2bf      	uxth	r7, r7
 8010ac2:	fb08 580c 	mla	r8, r8, ip, r5
 8010ac6:	fa1f f888 	uxth.w	r8, r8
 8010aca:	1c7d      	adds	r5, r7, #1
 8010acc:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010ad0:	f108 0501 	add.w	r5, r8, #1
 8010ad4:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8010ad8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010adc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010ae0:	432f      	orrs	r7, r5
 8010ae2:	9d04      	ldr	r5, [sp, #16]
 8010ae4:	f105 0b01 	add.w	fp, r5, #1
 8010ae8:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010aec:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010aee:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010af2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010af6:	4429      	add	r1, r5
 8010af8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010afa:	ea47 070b 	orr.w	r7, r7, fp
 8010afe:	f82a 7b02 	strh.w	r7, [sl], #2
 8010b02:	442a      	add	r2, r5
 8010b04:	e7ae      	b.n	8010a64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 8010b06:	140e      	asrs	r6, r1, #16
 8010b08:	d44b      	bmi.n	8010ba2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010b0a:	4576      	cmp	r6, lr
 8010b0c:	da49      	bge.n	8010ba2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010b0e:	1415      	asrs	r5, r2, #16
 8010b10:	d447      	bmi.n	8010ba2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010b12:	9f02      	ldr	r7, [sp, #8]
 8010b14:	42bd      	cmp	r5, r7
 8010b16:	da44      	bge.n	8010ba2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010b18:	9f03      	ldr	r7, [sp, #12]
 8010b1a:	fb0e 7505 	mla	r5, lr, r5, r7
 8010b1e:	f815 8006 	ldrb.w	r8, [r5, r6]
 8010b22:	9d00      	ldr	r5, [sp, #0]
 8010b24:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010b28:	eb05 0b08 	add.w	fp, r5, r8
 8010b2c:	f8b9 5000 	ldrh.w	r5, [r9]
 8010b30:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010b34:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010b38:	122f      	asrs	r7, r5, #8
 8010b3a:	fb16 f60c 	smulbb	r6, r6, ip
 8010b3e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010b42:	fb07 6700 	mla	r7, r7, r0, r6
 8010b46:	10ee      	asrs	r6, r5, #3
 8010b48:	fb1b fb0c 	smulbb	fp, fp, ip
 8010b4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010b50:	fb06 b600 	mla	r6, r6, r0, fp
 8010b54:	b2b6      	uxth	r6, r6
 8010b56:	9604      	str	r6, [sp, #16]
 8010b58:	9e00      	ldr	r6, [sp, #0]
 8010b5a:	00ed      	lsls	r5, r5, #3
 8010b5c:	f816 8008 	ldrb.w	r8, [r6, r8]
 8010b60:	b2ed      	uxtb	r5, r5
 8010b62:	fb15 f500 	smulbb	r5, r5, r0
 8010b66:	b2bf      	uxth	r7, r7
 8010b68:	fb08 580c 	mla	r8, r8, ip, r5
 8010b6c:	fa1f f888 	uxth.w	r8, r8
 8010b70:	1c7d      	adds	r5, r7, #1
 8010b72:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010b76:	f108 0501 	add.w	r5, r8, #1
 8010b7a:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8010b7e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010b82:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010b86:	432f      	orrs	r7, r5
 8010b88:	9d04      	ldr	r5, [sp, #16]
 8010b8a:	f105 0b01 	add.w	fp, r5, #1
 8010b8e:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010b92:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010b96:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010b9a:	ea47 070b 	orr.w	r7, r7, fp
 8010b9e:	f8a9 7000 	strh.w	r7, [r9]
 8010ba2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010ba4:	4429      	add	r1, r5
 8010ba6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010ba8:	f109 0902 	add.w	r9, r9, #2
 8010bac:	442a      	add	r2, r5
 8010bae:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010bb2:	e705      	b.n	80109c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8010bb4:	b007      	add	sp, #28
 8010bb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010bbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bc0:	b085      	sub	sp, #20
 8010bc2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010bc6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010bc8:	9203      	str	r2, [sp, #12]
 8010bca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010bce:	6870      	ldr	r0, [r6, #4]
 8010bd0:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8010bd2:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 8010bd6:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 8010bda:	9101      	str	r1, [sp, #4]
 8010bdc:	fb00 2404 	mla	r4, r0, r4, r2
 8010be0:	6832      	ldr	r2, [r6, #0]
 8010be2:	686e      	ldr	r6, [r5, #4]
 8010be4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010be8:	682a      	ldr	r2, [r5, #0]
 8010bea:	9202      	str	r2, [sp, #8]
 8010bec:	3604      	adds	r6, #4
 8010bee:	9a01      	ldr	r2, [sp, #4]
 8010bf0:	2a00      	cmp	r2, #0
 8010bf2:	dc03      	bgt.n	8010bfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 8010bf4:	9a03      	ldr	r2, [sp, #12]
 8010bf6:	2a00      	cmp	r2, #0
 8010bf8:	f340 80c7 	ble.w	8010d8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 8010bfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010bfe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010c02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010c04:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010c08:	2b00      	cmp	r3, #0
 8010c0a:	dd0e      	ble.n	8010c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010c0c:	1405      	asrs	r5, r0, #16
 8010c0e:	d405      	bmi.n	8010c1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010c10:	42bd      	cmp	r5, r7
 8010c12:	da03      	bge.n	8010c1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010c14:	1415      	asrs	r5, r2, #16
 8010c16:	d401      	bmi.n	8010c1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010c18:	4545      	cmp	r5, r8
 8010c1a:	db07      	blt.n	8010c2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010c1c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010c1e:	4428      	add	r0, r5
 8010c20:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010c22:	3b01      	subs	r3, #1
 8010c24:	442a      	add	r2, r5
 8010c26:	3402      	adds	r4, #2
 8010c28:	e7ee      	b.n	8010c08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8010c2a:	d010      	beq.n	8010c4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010c2c:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010c2e:	1e5d      	subs	r5, r3, #1
 8010c30:	fb01 0c05 	mla	ip, r1, r5, r0
 8010c34:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 8010c38:	d545      	bpl.n	8010cc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8010c3a:	469e      	mov	lr, r3
 8010c3c:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 8010c40:	f1be 0f00 	cmp.w	lr, #0
 8010c44:	dc72      	bgt.n	8010d2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 8010c46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010c4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010c4e:	9b01      	ldr	r3, [sp, #4]
 8010c50:	2b00      	cmp	r3, #0
 8010c52:	f340 809a 	ble.w	8010d8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 8010c56:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010c5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010c5e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010c62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010c68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010c6c:	eeb0 6a62 	vmov.f32	s12, s5
 8010c70:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010c74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010c7c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010c80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010c84:	eeb0 6a43 	vmov.f32	s12, s6
 8010c88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010c8c:	ee12 2a90 	vmov	r2, s5
 8010c90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010c94:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c98:	ee13 2a10 	vmov	r2, s6
 8010c9c:	9311      	str	r3, [sp, #68]	; 0x44
 8010c9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ca0:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ca4:	9312      	str	r3, [sp, #72]	; 0x48
 8010ca6:	9b01      	ldr	r3, [sp, #4]
 8010ca8:	9a03      	ldr	r2, [sp, #12]
 8010caa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010cae:	3b01      	subs	r3, #1
 8010cb0:	9301      	str	r3, [sp, #4]
 8010cb2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010cb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010cb8:	eeb0 3a67 	vmov.f32	s6, s15
 8010cbc:	bf08      	it	eq
 8010cbe:	4613      	moveq	r3, r2
 8010cc0:	eef0 2a47 	vmov.f32	s5, s14
 8010cc4:	e793      	b.n	8010bee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 8010cc6:	45bc      	cmp	ip, r7
 8010cc8:	dab7      	bge.n	8010c3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010cca:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010ccc:	fb01 2505 	mla	r5, r1, r5, r2
 8010cd0:	142d      	asrs	r5, r5, #16
 8010cd2:	d4b2      	bmi.n	8010c3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010cd4:	4545      	cmp	r5, r8
 8010cd6:	dab0      	bge.n	8010c3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010cd8:	469e      	mov	lr, r3
 8010cda:	46a2      	mov	sl, r4
 8010cdc:	f1be 0f00 	cmp.w	lr, #0
 8010ce0:	ddb1      	ble.n	8010c46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010ce2:	9902      	ldr	r1, [sp, #8]
 8010ce4:	1415      	asrs	r5, r2, #16
 8010ce6:	fb07 1505 	mla	r5, r7, r5, r1
 8010cea:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8010cee:	4928      	ldr	r1, [pc, #160]	; (8010d90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 8010cf0:	f815 c00c 	ldrb.w	ip, [r5, ip]
 8010cf4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8010cf8:	eb06 0b0c 	add.w	fp, r6, ip
 8010cfc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010d00:	f89b 5001 	ldrb.w	r5, [fp, #1]
 8010d04:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010d08:	00ed      	lsls	r5, r5, #3
 8010d0a:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010d0e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010d12:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010d14:	ea49 0505 	orr.w	r5, r9, r5
 8010d18:	f816 900c 	ldrb.w	r9, [r6, ip]
 8010d1c:	4408      	add	r0, r1
 8010d1e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010d20:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 8010d24:	f82a 5b02 	strh.w	r5, [sl], #2
 8010d28:	440a      	add	r2, r1
 8010d2a:	e7d7      	b.n	8010cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 8010d2c:	ea5f 4c20 	movs.w	ip, r0, asr #16
 8010d30:	d424      	bmi.n	8010d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010d32:	45bc      	cmp	ip, r7
 8010d34:	da22      	bge.n	8010d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010d36:	1415      	asrs	r5, r2, #16
 8010d38:	d420      	bmi.n	8010d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010d3a:	4545      	cmp	r5, r8
 8010d3c:	da1e      	bge.n	8010d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010d3e:	9902      	ldr	r1, [sp, #8]
 8010d40:	fb07 1505 	mla	r5, r7, r5, r1
 8010d44:	f06f 0101 	mvn.w	r1, #1
 8010d48:	f815 c00c 	ldrb.w	ip, [r5, ip]
 8010d4c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8010d50:	eb06 050c 	add.w	r5, r6, ip
 8010d54:	fb01 f90e 	mul.w	r9, r1, lr
 8010d58:	f895 a002 	ldrb.w	sl, [r5, #2]
 8010d5c:	786d      	ldrb	r5, [r5, #1]
 8010d5e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8010d62:	00ed      	lsls	r5, r5, #3
 8010d64:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 8010d68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010d6c:	ea4a 0505 	orr.w	r5, sl, r5
 8010d70:	f816 a00c 	ldrb.w	sl, [r6, ip]
 8010d74:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 8010d78:	f82b 5009 	strh.w	r5, [fp, r9]
 8010d7c:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010d7e:	4408      	add	r0, r1
 8010d80:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010d82:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010d86:	440a      	add	r2, r1
 8010d88:	e75a      	b.n	8010c40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8010d8a:	b005      	add	sp, #20
 8010d8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d90:	fffff800 	.word	0xfffff800

08010d94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d98:	b087      	sub	sp, #28
 8010d9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d9e:	9204      	str	r2, [sp, #16]
 8010da0:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010da4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010da6:	9201      	str	r2, [sp, #4]
 8010da8:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010dac:	9205      	str	r2, [sp, #20]
 8010dae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010db2:	9100      	str	r1, [sp, #0]
 8010db4:	6869      	ldr	r1, [r5, #4]
 8010db6:	981a      	ldr	r0, [sp, #104]	; 0x68
 8010db8:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 8010dbc:	fb01 2404 	mla	r4, r1, r4, r2
 8010dc0:	682a      	ldr	r2, [r5, #0]
 8010dc2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010dc6:	6802      	ldr	r2, [r0, #0]
 8010dc8:	9202      	str	r2, [sp, #8]
 8010dca:	6842      	ldr	r2, [r0, #4]
 8010dcc:	3204      	adds	r2, #4
 8010dce:	9203      	str	r2, [sp, #12]
 8010dd0:	9a00      	ldr	r2, [sp, #0]
 8010dd2:	2a00      	cmp	r2, #0
 8010dd4:	dc03      	bgt.n	8010dde <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8010dd6:	9a04      	ldr	r2, [sp, #16]
 8010dd8:	2a00      	cmp	r2, #0
 8010dda:	f340 812c 	ble.w	8011036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8010dde:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010de0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010de4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010de6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010dea:	2b00      	cmp	r3, #0
 8010dec:	dd0f      	ble.n	8010e0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8010dee:	1402      	asrs	r2, r0, #16
 8010df0:	d406      	bmi.n	8010e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8010df2:	4572      	cmp	r2, lr
 8010df4:	da04      	bge.n	8010e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8010df6:	140a      	asrs	r2, r1, #16
 8010df8:	d402      	bmi.n	8010e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8010dfa:	9d01      	ldr	r5, [sp, #4]
 8010dfc:	42aa      	cmp	r2, r5
 8010dfe:	db07      	blt.n	8010e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 8010e00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010e02:	4410      	add	r0, r2
 8010e04:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010e06:	3b01      	subs	r3, #1
 8010e08:	4411      	add	r1, r2
 8010e0a:	3402      	adds	r4, #2
 8010e0c:	e7ed      	b.n	8010dea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 8010e0e:	d00f      	beq.n	8010e30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010e10:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010e12:	1e5a      	subs	r2, r3, #1
 8010e14:	fb05 0502 	mla	r5, r5, r2, r0
 8010e18:	142d      	asrs	r5, r5, #16
 8010e1a:	d545      	bpl.n	8010ea8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 8010e1c:	4699      	mov	r9, r3
 8010e1e:	46a0      	mov	r8, r4
 8010e20:	f1b9 0f00 	cmp.w	r9, #0
 8010e24:	f300 80a7 	bgt.w	8010f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010e28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010e2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010e30:	9b00      	ldr	r3, [sp, #0]
 8010e32:	2b00      	cmp	r3, #0
 8010e34:	f340 80ff 	ble.w	8011036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8010e38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010e3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010e40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010e44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010e4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010e4e:	eeb0 6a62 	vmov.f32	s12, s5
 8010e52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010e56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010e5e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010e62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010e66:	eeb0 6a43 	vmov.f32	s12, s6
 8010e6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010e6e:	ee12 2a90 	vmov	r2, s5
 8010e72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010e76:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e7a:	ee13 2a10 	vmov	r2, s6
 8010e7e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010e80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e82:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e86:	9314      	str	r3, [sp, #80]	; 0x50
 8010e88:	9b00      	ldr	r3, [sp, #0]
 8010e8a:	9a04      	ldr	r2, [sp, #16]
 8010e8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e90:	3b01      	subs	r3, #1
 8010e92:	9300      	str	r3, [sp, #0]
 8010e94:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010e98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e9a:	eeb0 3a67 	vmov.f32	s6, s15
 8010e9e:	bf08      	it	eq
 8010ea0:	4613      	moveq	r3, r2
 8010ea2:	eef0 2a47 	vmov.f32	s5, s14
 8010ea6:	e793      	b.n	8010dd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 8010ea8:	4575      	cmp	r5, lr
 8010eaa:	dab7      	bge.n	8010e1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010eac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010eae:	fb05 1202 	mla	r2, r5, r2, r1
 8010eb2:	1412      	asrs	r2, r2, #16
 8010eb4:	d4b2      	bmi.n	8010e1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010eb6:	9d01      	ldr	r5, [sp, #4]
 8010eb8:	42aa      	cmp	r2, r5
 8010eba:	daaf      	bge.n	8010e1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010ebc:	f04f 0800 	mov.w	r8, #0
 8010ec0:	eba3 0208 	sub.w	r2, r3, r8
 8010ec4:	2a00      	cmp	r2, #0
 8010ec6:	ddaf      	ble.n	8010e28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8010ec8:	9e02      	ldr	r6, [sp, #8]
 8010eca:	140a      	asrs	r2, r1, #16
 8010ecc:	1405      	asrs	r5, r0, #16
 8010ece:	fb0e 6202 	mla	r2, lr, r2, r6
 8010ed2:	5d52      	ldrb	r2, [r2, r5]
 8010ed4:	9d03      	ldr	r5, [sp, #12]
 8010ed6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010eda:	0e2e      	lsrs	r6, r5, #24
 8010edc:	d044      	beq.n	8010f68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 8010ede:	9a05      	ldr	r2, [sp, #20]
 8010ee0:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010ee4:	4356      	muls	r6, r2
 8010ee6:	1c72      	adds	r2, r6, #1
 8010ee8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010eec:	1212      	asrs	r2, r2, #8
 8010eee:	fa1f f982 	uxth.w	r9, r2
 8010ef2:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010ef6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010efa:	43d2      	mvns	r2, r2
 8010efc:	b2d2      	uxtb	r2, r2
 8010efe:	fb16 f609 	smulbb	r6, r6, r9
 8010f02:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010f06:	fb07 6702 	mla	r7, r7, r2, r6
 8010f0a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010f0e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010f12:	b2ed      	uxtb	r5, r5
 8010f14:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010f18:	fa5f fc8c 	uxtb.w	ip, ip
 8010f1c:	fb15 f509 	smulbb	r5, r5, r9
 8010f20:	fb0c 5502 	mla	r5, ip, r2, r5
 8010f24:	b2bf      	uxth	r7, r7
 8010f26:	fb1a fa09 	smulbb	sl, sl, r9
 8010f2a:	b2ad      	uxth	r5, r5
 8010f2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f30:	fb06 a602 	mla	r6, r6, r2, sl
 8010f34:	1c7a      	adds	r2, r7, #1
 8010f36:	f105 0a01 	add.w	sl, r5, #1
 8010f3a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010f3e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f42:	b2b6      	uxth	r6, r6
 8010f44:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f48:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010f4c:	ea47 070a 	orr.w	r7, r7, sl
 8010f50:	f106 0a01 	add.w	sl, r6, #1
 8010f54:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010f58:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f5c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010f60:	ea47 070a 	orr.w	r7, r7, sl
 8010f64:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010f68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010f6a:	4410      	add	r0, r2
 8010f6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010f6e:	f108 0801 	add.w	r8, r8, #1
 8010f72:	4411      	add	r1, r2
 8010f74:	e7a4      	b.n	8010ec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 8010f76:	1405      	asrs	r5, r0, #16
 8010f78:	d454      	bmi.n	8011024 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f7a:	4575      	cmp	r5, lr
 8010f7c:	da52      	bge.n	8011024 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f7e:	140a      	asrs	r2, r1, #16
 8010f80:	d450      	bmi.n	8011024 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f82:	9e01      	ldr	r6, [sp, #4]
 8010f84:	42b2      	cmp	r2, r6
 8010f86:	da4d      	bge.n	8011024 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f88:	9e02      	ldr	r6, [sp, #8]
 8010f8a:	fb0e 6202 	mla	r2, lr, r2, r6
 8010f8e:	5d52      	ldrb	r2, [r2, r5]
 8010f90:	9d03      	ldr	r5, [sp, #12]
 8010f92:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010f96:	0e2e      	lsrs	r6, r5, #24
 8010f98:	d044      	beq.n	8011024 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010f9a:	9a05      	ldr	r2, [sp, #20]
 8010f9c:	f8b8 c000 	ldrh.w	ip, [r8]
 8010fa0:	4356      	muls	r6, r2
 8010fa2:	1c72      	adds	r2, r6, #1
 8010fa4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010fa8:	1212      	asrs	r2, r2, #8
 8010faa:	fa1f fa82 	uxth.w	sl, r2
 8010fae:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010fb2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010fb6:	43d2      	mvns	r2, r2
 8010fb8:	b2d2      	uxtb	r2, r2
 8010fba:	fb16 f60a 	smulbb	r6, r6, sl
 8010fbe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010fc2:	fb07 6702 	mla	r7, r7, r2, r6
 8010fc6:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 8010fca:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010fce:	b2ed      	uxtb	r5, r5
 8010fd0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010fd4:	fa5f fc8c 	uxtb.w	ip, ip
 8010fd8:	fb15 f50a 	smulbb	r5, r5, sl
 8010fdc:	fb0c 5502 	mla	r5, ip, r2, r5
 8010fe0:	b2bf      	uxth	r7, r7
 8010fe2:	fb1b fb0a 	smulbb	fp, fp, sl
 8010fe6:	b2ad      	uxth	r5, r5
 8010fe8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010fec:	fb06 b602 	mla	r6, r6, r2, fp
 8010ff0:	1c7a      	adds	r2, r7, #1
 8010ff2:	f105 0b01 	add.w	fp, r5, #1
 8010ff6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010ffa:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010ffe:	b2b6      	uxth	r6, r6
 8011000:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8011004:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011008:	ea47 070b 	orr.w	r7, r7, fp
 801100c:	f106 0b01 	add.w	fp, r6, #1
 8011010:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011014:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011018:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801101c:	ea47 070b 	orr.w	r7, r7, fp
 8011020:	f8a8 7000 	strh.w	r7, [r8]
 8011024:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011026:	4410      	add	r0, r2
 8011028:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801102a:	f108 0802 	add.w	r8, r8, #2
 801102e:	4411      	add	r1, r2
 8011030:	f109 39ff 	add.w	r9, r9, #4294967295
 8011034:	e6f4      	b.n	8010e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8011036:	b007      	add	sp, #28
 8011038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801103c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801103c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011040:	b087      	sub	sp, #28
 8011042:	468b      	mov	fp, r1
 8011044:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8011046:	9205      	str	r2, [sp, #20]
 8011048:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 801104c:	9201      	str	r2, [sp, #4]
 801104e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011052:	6869      	ldr	r1, [r5, #4]
 8011054:	981a      	ldr	r0, [sp, #104]	; 0x68
 8011056:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 801105a:	fb01 2404 	mla	r4, r1, r4, r2
 801105e:	682a      	ldr	r2, [r5, #0]
 8011060:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011064:	6802      	ldr	r2, [r0, #0]
 8011066:	9203      	str	r2, [sp, #12]
 8011068:	6842      	ldr	r2, [r0, #4]
 801106a:	3204      	adds	r2, #4
 801106c:	9204      	str	r2, [sp, #16]
 801106e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011072:	f1bb 0f00 	cmp.w	fp, #0
 8011076:	dc03      	bgt.n	8011080 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8011078:	9a05      	ldr	r2, [sp, #20]
 801107a:	2a00      	cmp	r2, #0
 801107c:	f340 814a 	ble.w	8011314 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8011080:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011082:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011086:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011088:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801108c:	2b00      	cmp	r3, #0
 801108e:	dd0f      	ble.n	80110b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011090:	1408      	asrs	r0, r1, #16
 8011092:	d406      	bmi.n	80110a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011094:	4540      	cmp	r0, r8
 8011096:	da04      	bge.n	80110a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011098:	1410      	asrs	r0, r2, #16
 801109a:	d402      	bmi.n	80110a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 801109c:	9d01      	ldr	r5, [sp, #4]
 801109e:	42a8      	cmp	r0, r5
 80110a0:	db07      	blt.n	80110b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80110a2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80110a4:	4401      	add	r1, r0
 80110a6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80110a8:	3b01      	subs	r3, #1
 80110aa:	4402      	add	r2, r0
 80110ac:	3402      	adds	r4, #2
 80110ae:	e7ed      	b.n	801108c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 80110b0:	d018      	beq.n	80110e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 80110b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80110b4:	1e58      	subs	r0, r3, #1
 80110b6:	fb05 1500 	mla	r5, r5, r0, r1
 80110ba:	142d      	asrs	r5, r5, #16
 80110bc:	d40a      	bmi.n	80110d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80110be:	4545      	cmp	r5, r8
 80110c0:	da08      	bge.n	80110d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80110c2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80110c4:	fb05 2000 	mla	r0, r5, r0, r2
 80110c8:	1400      	asrs	r0, r0, #16
 80110ca:	d403      	bmi.n	80110d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80110cc:	9d01      	ldr	r5, [sp, #4]
 80110ce:	42a8      	cmp	r0, r5
 80110d0:	f2c0 80b7 	blt.w	8011242 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 80110d4:	2600      	movs	r6, #0
 80110d6:	1998      	adds	r0, r3, r6
 80110d8:	2800      	cmp	r0, #0
 80110da:	dc3e      	bgt.n	801115a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 80110dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80110e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80110e4:	f1bb 0f00 	cmp.w	fp, #0
 80110e8:	f340 8114 	ble.w	8011314 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 80110ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80110f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80110f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80110f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110fa:	f1bb 0b01 	subs.w	fp, fp, #1
 80110fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011102:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011106:	eeb0 6a62 	vmov.f32	s12, s5
 801110a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801110e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011112:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011116:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801111a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801111e:	eeb0 6a43 	vmov.f32	s12, s6
 8011122:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011126:	ee12 2a90 	vmov	r2, s5
 801112a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801112e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011132:	ee13 2a10 	vmov	r2, s6
 8011136:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801113a:	9313      	str	r3, [sp, #76]	; 0x4c
 801113c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801113e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011142:	9a05      	ldr	r2, [sp, #20]
 8011144:	9314      	str	r3, [sp, #80]	; 0x50
 8011146:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801114a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801114c:	eeb0 3a67 	vmov.f32	s6, s15
 8011150:	bf08      	it	eq
 8011152:	4613      	moveq	r3, r2
 8011154:	eef0 2a47 	vmov.f32	s5, s14
 8011158:	e78b      	b.n	8011072 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 801115a:	140d      	asrs	r5, r1, #16
 801115c:	d459      	bmi.n	8011212 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801115e:	4545      	cmp	r5, r8
 8011160:	da57      	bge.n	8011212 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011162:	1410      	asrs	r0, r2, #16
 8011164:	d455      	bmi.n	8011212 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011166:	9f01      	ldr	r7, [sp, #4]
 8011168:	42b8      	cmp	r0, r7
 801116a:	da52      	bge.n	8011212 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801116c:	9f03      	ldr	r7, [sp, #12]
 801116e:	fb08 7000 	mla	r0, r8, r0, r7
 8011172:	5d40      	ldrb	r0, [r0, r5]
 8011174:	9d04      	ldr	r5, [sp, #16]
 8011176:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801117a:	0e07      	lsrs	r7, r0, #24
 801117c:	2fff      	cmp	r7, #255	; 0xff
 801117e:	d04e      	beq.n	801121e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8011180:	b2fd      	uxtb	r5, r7
 8011182:	2f00      	cmp	r7, #0
 8011184:	d045      	beq.n	8011212 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011186:	f06f 0701 	mvn.w	r7, #1
 801118a:	4377      	muls	r7, r6
 801118c:	fa1f f985 	uxth.w	r9, r5
 8011190:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011194:	9702      	str	r7, [sp, #8]
 8011196:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801119a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801119e:	43ed      	mvns	r5, r5
 80111a0:	b2ed      	uxtb	r5, r5
 80111a2:	fb17 f709 	smulbb	r7, r7, r9
 80111a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80111aa:	fb0c 7c05 	mla	ip, ip, r5, r7
 80111ae:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80111b2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80111b6:	b2c0      	uxtb	r0, r0
 80111b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80111bc:	fa5f fe8e 	uxtb.w	lr, lr
 80111c0:	fb10 f009 	smulbb	r0, r0, r9
 80111c4:	fb0e 0005 	mla	r0, lr, r5, r0
 80111c8:	b280      	uxth	r0, r0
 80111ca:	fa1f fc8c 	uxth.w	ip, ip
 80111ce:	fb1a fa09 	smulbb	sl, sl, r9
 80111d2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80111d6:	fb07 a705 	mla	r7, r7, r5, sl
 80111da:	f100 0a01 	add.w	sl, r0, #1
 80111de:	f10c 0501 	add.w	r5, ip, #1
 80111e2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80111e6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80111ea:	b2bf      	uxth	r7, r7
 80111ec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80111f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80111f4:	ea4c 0c0a 	orr.w	ip, ip, sl
 80111f8:	f107 0a01 	add.w	sl, r7, #1
 80111fc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011200:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011204:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011208:	9802      	ldr	r0, [sp, #8]
 801120a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801120e:	f824 c000 	strh.w	ip, [r4, r0]
 8011212:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011214:	4401      	add	r1, r0
 8011216:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011218:	3e01      	subs	r6, #1
 801121a:	4402      	add	r2, r0
 801121c:	e75b      	b.n	80110d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801121e:	f06f 0501 	mvn.w	r5, #1
 8011222:	fb05 f706 	mul.w	r7, r5, r6
 8011226:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801122a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801122e:	0945      	lsrs	r5, r0, #5
 8011230:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011234:	ea4c 0505 	orr.w	r5, ip, r5
 8011238:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801123c:	4305      	orrs	r5, r0
 801123e:	53e5      	strh	r5, [r4, r7]
 8011240:	e7e7      	b.n	8011212 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011242:	f04f 0e00 	mov.w	lr, #0
 8011246:	eba3 000e 	sub.w	r0, r3, lr
 801124a:	2800      	cmp	r0, #0
 801124c:	f77f af46 	ble.w	80110dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 8011250:	9e03      	ldr	r6, [sp, #12]
 8011252:	1410      	asrs	r0, r2, #16
 8011254:	140d      	asrs	r5, r1, #16
 8011256:	fb08 6000 	mla	r0, r8, r0, r6
 801125a:	5d40      	ldrb	r0, [r0, r5]
 801125c:	9d04      	ldr	r5, [sp, #16]
 801125e:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011262:	0e06      	lsrs	r6, r0, #24
 8011264:	2eff      	cmp	r6, #255	; 0xff
 8011266:	d048      	beq.n	80112fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8011268:	b2f5      	uxtb	r5, r6
 801126a:	2e00      	cmp	r6, #0
 801126c:	d03e      	beq.n	80112ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801126e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011272:	fa1f f985 	uxth.w	r9, r5
 8011276:	ea4f 272c 	mov.w	r7, ip, asr #8
 801127a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801127e:	43ed      	mvns	r5, r5
 8011280:	b2ed      	uxtb	r5, r5
 8011282:	fb16 f609 	smulbb	r6, r6, r9
 8011286:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801128a:	fb07 6705 	mla	r7, r7, r5, r6
 801128e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011292:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011296:	b2c0      	uxtb	r0, r0
 8011298:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801129c:	fa5f fc8c 	uxtb.w	ip, ip
 80112a0:	fb10 f009 	smulbb	r0, r0, r9
 80112a4:	fb0c 0005 	mla	r0, ip, r5, r0
 80112a8:	b2bf      	uxth	r7, r7
 80112aa:	fb1a fa09 	smulbb	sl, sl, r9
 80112ae:	b280      	uxth	r0, r0
 80112b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80112b4:	fb06 a605 	mla	r6, r6, r5, sl
 80112b8:	1c7d      	adds	r5, r7, #1
 80112ba:	f100 0a01 	add.w	sl, r0, #1
 80112be:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80112c2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80112c6:	b2b6      	uxth	r6, r6
 80112c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80112cc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80112d0:	ea47 070a 	orr.w	r7, r7, sl
 80112d4:	f106 0a01 	add.w	sl, r6, #1
 80112d8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80112dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80112e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80112e4:	ea47 070a 	orr.w	r7, r7, sl
 80112e8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80112ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80112ee:	4401      	add	r1, r0
 80112f0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80112f2:	f10e 0e01 	add.w	lr, lr, #1
 80112f6:	4402      	add	r2, r0
 80112f8:	e7a5      	b.n	8011246 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 80112fa:	4d08      	ldr	r5, [pc, #32]	; (801131c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 80112fc:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8011300:	0945      	lsrs	r5, r0, #5
 8011302:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011306:	4335      	orrs	r5, r6
 8011308:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801130c:	4305      	orrs	r5, r0
 801130e:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8011312:	e7eb      	b.n	80112ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011314:	b007      	add	sp, #28
 8011316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801131a:	bf00      	nop
 801131c:	fffff800 	.word	0xfffff800

08011320 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011324:	b087      	sub	sp, #28
 8011326:	468b      	mov	fp, r1
 8011328:	9204      	str	r2, [sp, #16]
 801132a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 801132e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8011330:	9201      	str	r2, [sp, #4]
 8011332:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8011336:	9205      	str	r2, [sp, #20]
 8011338:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801133c:	6869      	ldr	r1, [r5, #4]
 801133e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8011340:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8011344:	fb01 2404 	mla	r4, r1, r4, r2
 8011348:	682a      	ldr	r2, [r5, #0]
 801134a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801134e:	6802      	ldr	r2, [r0, #0]
 8011350:	9202      	str	r2, [sp, #8]
 8011352:	6842      	ldr	r2, [r0, #4]
 8011354:	9203      	str	r2, [sp, #12]
 8011356:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801135a:	f1bb 0f00 	cmp.w	fp, #0
 801135e:	dc03      	bgt.n	8011368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8011360:	9a04      	ldr	r2, [sp, #16]
 8011362:	2a00      	cmp	r2, #0
 8011364:	f340 8136 	ble.w	80115d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8011368:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801136a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801136e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011370:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011374:	2b00      	cmp	r3, #0
 8011376:	dd0f      	ble.n	8011398 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011378:	1408      	asrs	r0, r1, #16
 801137a:	d406      	bmi.n	801138a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801137c:	4540      	cmp	r0, r8
 801137e:	da04      	bge.n	801138a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011380:	1410      	asrs	r0, r2, #16
 8011382:	d402      	bmi.n	801138a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011384:	9d01      	ldr	r5, [sp, #4]
 8011386:	42a8      	cmp	r0, r5
 8011388:	db07      	blt.n	801139a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 801138a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801138c:	4401      	add	r1, r0
 801138e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011390:	3b01      	subs	r3, #1
 8011392:	4402      	add	r2, r0
 8011394:	3402      	adds	r4, #2
 8011396:	e7ed      	b.n	8011374 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8011398:	d00f      	beq.n	80113ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801139a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801139c:	1e58      	subs	r0, r3, #1
 801139e:	fb05 1500 	mla	r5, r5, r0, r1
 80113a2:	142d      	asrs	r5, r5, #16
 80113a4:	d544      	bpl.n	8011430 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80113a6:	9300      	str	r3, [sp, #0]
 80113a8:	46a2      	mov	sl, r4
 80113aa:	9800      	ldr	r0, [sp, #0]
 80113ac:	2800      	cmp	r0, #0
 80113ae:	f300 80ab 	bgt.w	8011508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 80113b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80113b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80113ba:	f1bb 0f00 	cmp.w	fp, #0
 80113be:	f340 8109 	ble.w	80115d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 80113c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80113c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80113ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80113ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80113d0:	f1bb 0b01 	subs.w	fp, fp, #1
 80113d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80113d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80113dc:	eeb0 6a62 	vmov.f32	s12, s5
 80113e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80113e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113ec:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80113f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80113f4:	eeb0 6a43 	vmov.f32	s12, s6
 80113f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80113fc:	ee12 2a90 	vmov	r2, s5
 8011400:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011404:	fb92 f3f3 	sdiv	r3, r2, r3
 8011408:	ee13 2a10 	vmov	r2, s6
 801140c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011410:	9313      	str	r3, [sp, #76]	; 0x4c
 8011412:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011414:	fb92 f3f3 	sdiv	r3, r2, r3
 8011418:	9a04      	ldr	r2, [sp, #16]
 801141a:	9314      	str	r3, [sp, #80]	; 0x50
 801141c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011420:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011422:	eeb0 3a67 	vmov.f32	s6, s15
 8011426:	bf08      	it	eq
 8011428:	4613      	moveq	r3, r2
 801142a:	eef0 2a47 	vmov.f32	s5, s14
 801142e:	e794      	b.n	801135a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8011430:	4545      	cmp	r5, r8
 8011432:	dab8      	bge.n	80113a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8011434:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011436:	fb05 2000 	mla	r0, r5, r0, r2
 801143a:	1400      	asrs	r0, r0, #16
 801143c:	d4b3      	bmi.n	80113a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 801143e:	9d01      	ldr	r5, [sp, #4]
 8011440:	42a8      	cmp	r0, r5
 8011442:	dab0      	bge.n	80113a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8011444:	f04f 0900 	mov.w	r9, #0
 8011448:	eba3 0009 	sub.w	r0, r3, r9
 801144c:	2800      	cmp	r0, #0
 801144e:	ddb0      	ble.n	80113b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011450:	140d      	asrs	r5, r1, #16
 8011452:	1410      	asrs	r0, r2, #16
 8011454:	fb08 5000 	mla	r0, r8, r0, r5
 8011458:	9d03      	ldr	r5, [sp, #12]
 801145a:	5c2e      	ldrb	r6, [r5, r0]
 801145c:	2e00      	cmp	r6, #0
 801145e:	d04c      	beq.n	80114fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 8011460:	9d02      	ldr	r5, [sp, #8]
 8011462:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8011466:	9805      	ldr	r0, [sp, #20]
 8011468:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 801146c:	4346      	muls	r6, r0
 801146e:	1c70      	adds	r0, r6, #1
 8011470:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8011474:	1200      	asrs	r0, r0, #8
 8011476:	b287      	uxth	r7, r0
 8011478:	122e      	asrs	r6, r5, #8
 801147a:	43c0      	mvns	r0, r0
 801147c:	b2c0      	uxtb	r0, r0
 801147e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011482:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011486:	fb16 f600 	smulbb	r6, r6, r0
 801148a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801148e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011492:	00ed      	lsls	r5, r5, #3
 8011494:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011498:	b2ed      	uxtb	r5, r5
 801149a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801149e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80114a2:	fb15 f500 	smulbb	r5, r5, r0
 80114a6:	fa5f fe8e 	uxtb.w	lr, lr
 80114aa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80114ae:	fb0e 5507 	mla	r5, lr, r7, r5
 80114b2:	fb1a fa00 	smulbb	sl, sl, r0
 80114b6:	fa1f fc8c 	uxth.w	ip, ip
 80114ba:	b2ad      	uxth	r5, r5
 80114bc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80114c0:	fb06 a607 	mla	r6, r6, r7, sl
 80114c4:	f10c 0001 	add.w	r0, ip, #1
 80114c8:	f105 0a01 	add.w	sl, r5, #1
 80114cc:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 80114d0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80114d4:	b2b6      	uxth	r6, r6
 80114d6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80114da:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80114de:	ea4c 0c0a 	orr.w	ip, ip, sl
 80114e2:	f106 0a01 	add.w	sl, r6, #1
 80114e6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80114ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80114ee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80114f2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80114f6:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 80114fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80114fc:	4401      	add	r1, r0
 80114fe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011500:	f109 0901 	add.w	r9, r9, #1
 8011504:	4402      	add	r2, r0
 8011506:	e79f      	b.n	8011448 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 8011508:	1408      	asrs	r0, r1, #16
 801150a:	d459      	bmi.n	80115c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 801150c:	4540      	cmp	r0, r8
 801150e:	da57      	bge.n	80115c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8011510:	1415      	asrs	r5, r2, #16
 8011512:	d455      	bmi.n	80115c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8011514:	9e01      	ldr	r6, [sp, #4]
 8011516:	42b5      	cmp	r5, r6
 8011518:	da52      	bge.n	80115c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 801151a:	fb08 0005 	mla	r0, r8, r5, r0
 801151e:	9d03      	ldr	r5, [sp, #12]
 8011520:	5c2e      	ldrb	r6, [r5, r0]
 8011522:	2e00      	cmp	r6, #0
 8011524:	d04c      	beq.n	80115c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8011526:	9d02      	ldr	r5, [sp, #8]
 8011528:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 801152c:	9805      	ldr	r0, [sp, #20]
 801152e:	f8ba 5000 	ldrh.w	r5, [sl]
 8011532:	4346      	muls	r6, r0
 8011534:	1c70      	adds	r0, r6, #1
 8011536:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 801153a:	1200      	asrs	r0, r0, #8
 801153c:	b287      	uxth	r7, r0
 801153e:	122e      	asrs	r6, r5, #8
 8011540:	43c0      	mvns	r0, r0
 8011542:	b2c0      	uxtb	r0, r0
 8011544:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011548:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801154c:	fb16 f600 	smulbb	r6, r6, r0
 8011550:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011554:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011558:	00ed      	lsls	r5, r5, #3
 801155a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801155e:	b2ed      	uxtb	r5, r5
 8011560:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011564:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011568:	fb15 f500 	smulbb	r5, r5, r0
 801156c:	fa5f fe8e 	uxtb.w	lr, lr
 8011570:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011574:	fb0e 5507 	mla	r5, lr, r7, r5
 8011578:	fb19 f900 	smulbb	r9, r9, r0
 801157c:	fa1f fc8c 	uxth.w	ip, ip
 8011580:	b2ad      	uxth	r5, r5
 8011582:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011586:	fb06 9607 	mla	r6, r6, r7, r9
 801158a:	f10c 0001 	add.w	r0, ip, #1
 801158e:	f105 0901 	add.w	r9, r5, #1
 8011592:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8011596:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 801159a:	b2b6      	uxth	r6, r6
 801159c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80115a0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80115a4:	ea4c 0c09 	orr.w	ip, ip, r9
 80115a8:	f106 0901 	add.w	r9, r6, #1
 80115ac:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 80115b0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80115b4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80115b8:	ea4c 0c09 	orr.w	ip, ip, r9
 80115bc:	f8aa c000 	strh.w	ip, [sl]
 80115c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80115c2:	4401      	add	r1, r0
 80115c4:	9814      	ldr	r0, [sp, #80]	; 0x50
 80115c6:	4402      	add	r2, r0
 80115c8:	9800      	ldr	r0, [sp, #0]
 80115ca:	3801      	subs	r0, #1
 80115cc:	f10a 0a02 	add.w	sl, sl, #2
 80115d0:	9000      	str	r0, [sp, #0]
 80115d2:	e6ea      	b.n	80113aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 80115d4:	b007      	add	sp, #28
 80115d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080115da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80115da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115de:	b087      	sub	sp, #28
 80115e0:	468b      	mov	fp, r1
 80115e2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80115e4:	9205      	str	r2, [sp, #20]
 80115e6:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80115ea:	9202      	str	r2, [sp, #8]
 80115ec:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80115f0:	6869      	ldr	r1, [r5, #4]
 80115f2:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 80115f4:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 80115f8:	fb01 2000 	mla	r0, r1, r0, r2
 80115fc:	682a      	ldr	r2, [r5, #0]
 80115fe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011602:	6822      	ldr	r2, [r4, #0]
 8011604:	9201      	str	r2, [sp, #4]
 8011606:	6862      	ldr	r2, [r4, #4]
 8011608:	9204      	str	r2, [sp, #16]
 801160a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801160e:	f1bb 0f00 	cmp.w	fp, #0
 8011612:	dc03      	bgt.n	801161c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 8011614:	9a05      	ldr	r2, [sp, #20]
 8011616:	2a00      	cmp	r2, #0
 8011618:	f340 813d 	ble.w	8011896 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 801161c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801161e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011622:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011624:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011628:	2b00      	cmp	r3, #0
 801162a:	dd0f      	ble.n	801164c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 801162c:	140c      	asrs	r4, r1, #16
 801162e:	d406      	bmi.n	801163e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8011630:	454c      	cmp	r4, r9
 8011632:	da04      	bge.n	801163e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8011634:	1414      	asrs	r4, r2, #16
 8011636:	d402      	bmi.n	801163e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8011638:	9d02      	ldr	r5, [sp, #8]
 801163a:	42ac      	cmp	r4, r5
 801163c:	db07      	blt.n	801164e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801163e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011640:	4421      	add	r1, r4
 8011642:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011644:	3b01      	subs	r3, #1
 8011646:	4422      	add	r2, r4
 8011648:	3002      	adds	r0, #2
 801164a:	e7ed      	b.n	8011628 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 801164c:	d018      	beq.n	8011680 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 801164e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011650:	1e5c      	subs	r4, r3, #1
 8011652:	fb05 1504 	mla	r5, r5, r4, r1
 8011656:	142d      	asrs	r5, r5, #16
 8011658:	d40a      	bmi.n	8011670 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801165a:	454d      	cmp	r5, r9
 801165c:	da08      	bge.n	8011670 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801165e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011660:	fb05 2404 	mla	r4, r5, r4, r2
 8011664:	1424      	asrs	r4, r4, #16
 8011666:	d403      	bmi.n	8011670 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8011668:	9d02      	ldr	r5, [sp, #8]
 801166a:	42ac      	cmp	r4, r5
 801166c:	f2c0 80ae 	blt.w	80117cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 8011670:	2600      	movs	r6, #0
 8011672:	199c      	adds	r4, r3, r6
 8011674:	2c00      	cmp	r4, #0
 8011676:	dc3e      	bgt.n	80116f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8011678:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801167c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011680:	f1bb 0f00 	cmp.w	fp, #0
 8011684:	f340 8107 	ble.w	8011896 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8011688:	ee30 0a04 	vadd.f32	s0, s0, s8
 801168c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011690:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011694:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011696:	f1bb 0b01 	subs.w	fp, fp, #1
 801169a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801169e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80116a2:	eeb0 6a62 	vmov.f32	s12, s5
 80116a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80116aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80116ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80116b2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80116b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80116ba:	eeb0 6a43 	vmov.f32	s12, s6
 80116be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80116c2:	ee12 2a90 	vmov	r2, s5
 80116c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80116ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80116ce:	ee13 2a10 	vmov	r2, s6
 80116d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80116d6:	9313      	str	r3, [sp, #76]	; 0x4c
 80116d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80116da:	fb92 f3f3 	sdiv	r3, r2, r3
 80116de:	9a05      	ldr	r2, [sp, #20]
 80116e0:	9314      	str	r3, [sp, #80]	; 0x50
 80116e2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80116e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80116e8:	eeb0 3a67 	vmov.f32	s6, s15
 80116ec:	bf08      	it	eq
 80116ee:	4613      	moveq	r3, r2
 80116f0:	eef0 2a47 	vmov.f32	s5, s14
 80116f4:	e78b      	b.n	801160e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 80116f6:	140c      	asrs	r4, r1, #16
 80116f8:	d45a      	bmi.n	80117b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80116fa:	454c      	cmp	r4, r9
 80116fc:	da58      	bge.n	80117b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80116fe:	1415      	asrs	r5, r2, #16
 8011700:	d456      	bmi.n	80117b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011702:	9f02      	ldr	r7, [sp, #8]
 8011704:	42bd      	cmp	r5, r7
 8011706:	da53      	bge.n	80117b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011708:	fb09 4505 	mla	r5, r9, r5, r4
 801170c:	9c04      	ldr	r4, [sp, #16]
 801170e:	5d64      	ldrb	r4, [r4, r5]
 8011710:	2cff      	cmp	r4, #255	; 0xff
 8011712:	d053      	beq.n	80117bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8011714:	2c00      	cmp	r4, #0
 8011716:	d04b      	beq.n	80117b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011718:	9f01      	ldr	r7, [sp, #4]
 801171a:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 801171e:	f06f 0501 	mvn.w	r5, #1
 8011722:	4375      	muls	r5, r6
 8011724:	9503      	str	r5, [sp, #12]
 8011726:	5b45      	ldrh	r5, [r0, r5]
 8011728:	fa1f fc84 	uxth.w	ip, r4
 801172c:	122f      	asrs	r7, r5, #8
 801172e:	43e4      	mvns	r4, r4
 8011730:	b2e4      	uxtb	r4, r4
 8011732:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011736:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801173a:	fb17 f704 	smulbb	r7, r7, r4
 801173e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011742:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011746:	00ed      	lsls	r5, r5, #3
 8011748:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801174c:	b2ed      	uxtb	r5, r5
 801174e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8011752:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011756:	fb15 f504 	smulbb	r5, r5, r4
 801175a:	fa5f f888 	uxtb.w	r8, r8
 801175e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011762:	fb08 550c 	mla	r5, r8, ip, r5
 8011766:	fb1a fa04 	smulbb	sl, sl, r4
 801176a:	fa1f fe8e 	uxth.w	lr, lr
 801176e:	b2ad      	uxth	r5, r5
 8011770:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011774:	fb07 a70c 	mla	r7, r7, ip, sl
 8011778:	f10e 0401 	add.w	r4, lr, #1
 801177c:	f105 0a01 	add.w	sl, r5, #1
 8011780:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8011784:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011788:	b2bf      	uxth	r7, r7
 801178a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801178e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011792:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011796:	f107 0a01 	add.w	sl, r7, #1
 801179a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801179e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80117a2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80117a6:	9c03      	ldr	r4, [sp, #12]
 80117a8:	ea4e 0e0a 	orr.w	lr, lr, sl
 80117ac:	f820 e004 	strh.w	lr, [r0, r4]
 80117b0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80117b2:	4421      	add	r1, r4
 80117b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80117b6:	3e01      	subs	r6, #1
 80117b8:	4422      	add	r2, r4
 80117ba:	e75a      	b.n	8011672 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80117bc:	9c01      	ldr	r4, [sp, #4]
 80117be:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80117c2:	f06f 0401 	mvn.w	r4, #1
 80117c6:	4374      	muls	r4, r6
 80117c8:	5305      	strh	r5, [r0, r4]
 80117ca:	e7f1      	b.n	80117b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80117cc:	f04f 0800 	mov.w	r8, #0
 80117d0:	eba3 0408 	sub.w	r4, r3, r8
 80117d4:	2c00      	cmp	r4, #0
 80117d6:	f77f af4f 	ble.w	8011678 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80117da:	140c      	asrs	r4, r1, #16
 80117dc:	1415      	asrs	r5, r2, #16
 80117de:	fb09 4505 	mla	r5, r9, r5, r4
 80117e2:	9c04      	ldr	r4, [sp, #16]
 80117e4:	5d64      	ldrb	r4, [r4, r5]
 80117e6:	2cff      	cmp	r4, #255	; 0xff
 80117e8:	d04f      	beq.n	801188a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80117ea:	2c00      	cmp	r4, #0
 80117ec:	d046      	beq.n	801187c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80117ee:	9e01      	ldr	r6, [sp, #4]
 80117f0:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80117f4:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 80117f8:	b2a7      	uxth	r7, r4
 80117fa:	122e      	asrs	r6, r5, #8
 80117fc:	43e4      	mvns	r4, r4
 80117fe:	b2e4      	uxtb	r4, r4
 8011800:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011804:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011808:	fb16 f604 	smulbb	r6, r6, r4
 801180c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011810:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011814:	00ed      	lsls	r5, r5, #3
 8011816:	fb0c 6c07 	mla	ip, ip, r7, r6
 801181a:	b2ed      	uxtb	r5, r5
 801181c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011820:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011824:	fb15 f504 	smulbb	r5, r5, r4
 8011828:	fa5f fe8e 	uxtb.w	lr, lr
 801182c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011830:	fb0e 5507 	mla	r5, lr, r7, r5
 8011834:	fb1a fa04 	smulbb	sl, sl, r4
 8011838:	fa1f fc8c 	uxth.w	ip, ip
 801183c:	b2ad      	uxth	r5, r5
 801183e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011842:	fb06 a607 	mla	r6, r6, r7, sl
 8011846:	f10c 0401 	add.w	r4, ip, #1
 801184a:	f105 0a01 	add.w	sl, r5, #1
 801184e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011852:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011856:	b2b6      	uxth	r6, r6
 8011858:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801185c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011860:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011864:	f106 0a01 	add.w	sl, r6, #1
 8011868:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801186c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011870:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011874:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011878:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 801187c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801187e:	4421      	add	r1, r4
 8011880:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011882:	f108 0801 	add.w	r8, r8, #1
 8011886:	4422      	add	r2, r4
 8011888:	e7a2      	b.n	80117d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801188a:	9c01      	ldr	r4, [sp, #4]
 801188c:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8011890:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 8011894:	e7f2      	b.n	801187c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8011896:	b007      	add	sp, #28
 8011898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801189c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801189c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118a0:	b085      	sub	sp, #20
 80118a2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80118a4:	9203      	str	r2, [sp, #12]
 80118a6:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 80118aa:	9201      	str	r2, [sp, #4]
 80118ac:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80118b0:	9100      	str	r1, [sp, #0]
 80118b2:	6841      	ldr	r1, [r0, #4]
 80118b4:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 80118b8:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 80118bc:	fb01 2404 	mla	r4, r1, r4, r2
 80118c0:	6802      	ldr	r2, [r0, #0]
 80118c2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80118c6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80118c8:	fa1f fe85 	uxth.w	lr, r5
 80118cc:	6812      	ldr	r2, [r2, #0]
 80118ce:	9202      	str	r2, [sp, #8]
 80118d0:	43ed      	mvns	r5, r5
 80118d2:	b2ed      	uxtb	r5, r5
 80118d4:	9a00      	ldr	r2, [sp, #0]
 80118d6:	2a00      	cmp	r2, #0
 80118d8:	dc03      	bgt.n	80118e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 80118da:	9a03      	ldr	r2, [sp, #12]
 80118dc:	2a00      	cmp	r2, #0
 80118de:	f340 8117 	ble.w	8011b10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80118e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80118e4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80118e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80118ea:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80118ee:	2b00      	cmp	r3, #0
 80118f0:	dd0f      	ble.n	8011912 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80118f2:	1408      	asrs	r0, r1, #16
 80118f4:	d406      	bmi.n	8011904 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80118f6:	4540      	cmp	r0, r8
 80118f8:	da04      	bge.n	8011904 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80118fa:	1410      	asrs	r0, r2, #16
 80118fc:	d402      	bmi.n	8011904 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80118fe:	9e01      	ldr	r6, [sp, #4]
 8011900:	42b0      	cmp	r0, r6
 8011902:	db07      	blt.n	8011914 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011904:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011906:	4401      	add	r1, r0
 8011908:	9812      	ldr	r0, [sp, #72]	; 0x48
 801190a:	3b01      	subs	r3, #1
 801190c:	4402      	add	r2, r0
 801190e:	3402      	adds	r4, #2
 8011910:	e7ed      	b.n	80118ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 8011912:	d069      	beq.n	80119e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 8011914:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8011916:	1e58      	subs	r0, r3, #1
 8011918:	fb06 1600 	mla	r6, r6, r0, r1
 801191c:	1436      	asrs	r6, r6, #16
 801191e:	d459      	bmi.n	80119d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8011920:	4546      	cmp	r6, r8
 8011922:	da57      	bge.n	80119d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8011924:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8011926:	fb06 2000 	mla	r0, r6, r0, r2
 801192a:	1400      	asrs	r0, r0, #16
 801192c:	d452      	bmi.n	80119d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 801192e:	9e01      	ldr	r6, [sp, #4]
 8011930:	42b0      	cmp	r0, r6
 8011932:	da4f      	bge.n	80119d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8011934:	469a      	mov	sl, r3
 8011936:	46a3      	mov	fp, r4
 8011938:	f1ba 0f00 	cmp.w	sl, #0
 801193c:	dd50      	ble.n	80119e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 801193e:	140e      	asrs	r6, r1, #16
 8011940:	1410      	asrs	r0, r2, #16
 8011942:	fb08 6000 	mla	r0, r8, r0, r6
 8011946:	9e02      	ldr	r6, [sp, #8]
 8011948:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 801194c:	f8bb 6000 	ldrh.w	r6, [fp]
 8011950:	1237      	asrs	r7, r6, #8
 8011952:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011956:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801195a:	fb17 f705 	smulbb	r7, r7, r5
 801195e:	ea4f 09e6 	mov.w	r9, r6, asr #3
 8011962:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011966:	00f6      	lsls	r6, r6, #3
 8011968:	fb0c 7c0e 	mla	ip, ip, lr, r7
 801196c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011970:	10c7      	asrs	r7, r0, #3
 8011972:	b2f6      	uxtb	r6, r6
 8011974:	00c0      	lsls	r0, r0, #3
 8011976:	fb19 f905 	smulbb	r9, r9, r5
 801197a:	fb16 f605 	smulbb	r6, r6, r5
 801197e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011982:	b2c0      	uxtb	r0, r0
 8011984:	fa1f fc8c 	uxth.w	ip, ip
 8011988:	fb07 970e 	mla	r7, r7, lr, r9
 801198c:	fb00 600e 	mla	r0, r0, lr, r6
 8011990:	b280      	uxth	r0, r0
 8011992:	b2bf      	uxth	r7, r7
 8011994:	f10c 0601 	add.w	r6, ip, #1
 8011998:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801199c:	f107 0901 	add.w	r9, r7, #1
 80119a0:	1c46      	adds	r6, r0, #1
 80119a2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80119a6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80119aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80119ac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80119b0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80119b4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80119b8:	ea4c 0c06 	orr.w	ip, ip, r6
 80119bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80119c0:	4401      	add	r1, r0
 80119c2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80119c4:	ea4c 0c09 	orr.w	ip, ip, r9
 80119c8:	f82b cb02 	strh.w	ip, [fp], #2
 80119cc:	4402      	add	r2, r0
 80119ce:	f10a 3aff 	add.w	sl, sl, #4294967295
 80119d2:	e7b1      	b.n	8011938 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80119d4:	f04f 0900 	mov.w	r9, #0
 80119d8:	eb03 0009 	add.w	r0, r3, r9
 80119dc:	2800      	cmp	r0, #0
 80119de:	dc41      	bgt.n	8011a64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 80119e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80119e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80119e8:	9b00      	ldr	r3, [sp, #0]
 80119ea:	2b00      	cmp	r3, #0
 80119ec:	f340 8090 	ble.w	8011b10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80119f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80119f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80119f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80119fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80119fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011a02:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011a06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011a0a:	eef0 6a62 	vmov.f32	s13, s5
 8011a0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011a16:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a1a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8011a1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a22:	eef0 6a43 	vmov.f32	s13, s6
 8011a26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a2a:	ee12 2a90 	vmov	r2, s5
 8011a2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a32:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a36:	ee13 2a10 	vmov	r2, s6
 8011a3a:	9311      	str	r3, [sp, #68]	; 0x44
 8011a3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a42:	9312      	str	r3, [sp, #72]	; 0x48
 8011a44:	9b00      	ldr	r3, [sp, #0]
 8011a46:	9a03      	ldr	r2, [sp, #12]
 8011a48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011a4c:	3b01      	subs	r3, #1
 8011a4e:	9300      	str	r3, [sp, #0]
 8011a50:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8011a54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011a56:	eeb0 3a67 	vmov.f32	s6, s15
 8011a5a:	bf08      	it	eq
 8011a5c:	4613      	moveq	r3, r2
 8011a5e:	eef0 2a47 	vmov.f32	s5, s14
 8011a62:	e737      	b.n	80118d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 8011a64:	140e      	asrs	r6, r1, #16
 8011a66:	d44c      	bmi.n	8011b02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011a68:	4546      	cmp	r6, r8
 8011a6a:	da4a      	bge.n	8011b02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011a6c:	1410      	asrs	r0, r2, #16
 8011a6e:	d448      	bmi.n	8011b02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011a70:	9f01      	ldr	r7, [sp, #4]
 8011a72:	42b8      	cmp	r0, r7
 8011a74:	da45      	bge.n	8011b02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011a76:	fb08 6000 	mla	r0, r8, r0, r6
 8011a7a:	9e02      	ldr	r6, [sp, #8]
 8011a7c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8011a80:	f06f 0601 	mvn.w	r6, #1
 8011a84:	fb06 fb09 	mul.w	fp, r6, r9
 8011a88:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011a8c:	f834 600b 	ldrh.w	r6, [r4, fp]
 8011a90:	1237      	asrs	r7, r6, #8
 8011a92:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011a96:	fb17 f705 	smulbb	r7, r7, r5
 8011a9a:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 8011a9e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011aa2:	00f6      	lsls	r6, r6, #3
 8011aa4:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8011aa8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011aac:	10c7      	asrs	r7, r0, #3
 8011aae:	b2f6      	uxtb	r6, r6
 8011ab0:	00c0      	lsls	r0, r0, #3
 8011ab2:	fb1a fa05 	smulbb	sl, sl, r5
 8011ab6:	fb16 f605 	smulbb	r6, r6, r5
 8011aba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011abe:	b2c0      	uxtb	r0, r0
 8011ac0:	fa1f fc8c 	uxth.w	ip, ip
 8011ac4:	fb07 a70e 	mla	r7, r7, lr, sl
 8011ac8:	fb00 600e 	mla	r0, r0, lr, r6
 8011acc:	b2bf      	uxth	r7, r7
 8011ace:	b280      	uxth	r0, r0
 8011ad0:	f10c 0601 	add.w	r6, ip, #1
 8011ad4:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8011ad8:	f107 0a01 	add.w	sl, r7, #1
 8011adc:	1c46      	adds	r6, r0, #1
 8011ade:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8011ae2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011ae6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011aea:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011aee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011af2:	ea4c 0c06 	orr.w	ip, ip, r6
 8011af6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011afa:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011afe:	f824 c00b 	strh.w	ip, [r4, fp]
 8011b02:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011b04:	4401      	add	r1, r0
 8011b06:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011b08:	f109 39ff 	add.w	r9, r9, #4294967295
 8011b0c:	4402      	add	r2, r0
 8011b0e:	e763      	b.n	80119d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 8011b10:	b005      	add	sp, #20
 8011b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011b16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011b16:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b1a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011b1c:	9201      	str	r2, [sp, #4]
 8011b1e:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 8011b22:	6844      	ldr	r4, [r0, #4]
 8011b24:	6800      	ldr	r0, [r0, #0]
 8011b26:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 8011b2a:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 8011b2e:	fb04 2505 	mla	r5, r4, r5, r2
 8011b32:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011b36:	9816      	ldr	r0, [sp, #88]	; 0x58
 8011b38:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 8011b3c:	6802      	ldr	r2, [r0, #0]
 8011b3e:	9200      	str	r2, [sp, #0]
 8011b40:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011b44:	2900      	cmp	r1, #0
 8011b46:	dc03      	bgt.n	8011b50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8011b48:	9a01      	ldr	r2, [sp, #4]
 8011b4a:	2a00      	cmp	r2, #0
 8011b4c:	f340 8095 	ble.w	8011c7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8011b50:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011b52:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8011b56:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011b58:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011b5c:	2b00      	cmp	r3, #0
 8011b5e:	dd0e      	ble.n	8011b7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8011b60:	ea5f 4824 	movs.w	r8, r4, asr #16
 8011b64:	d406      	bmi.n	8011b74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8011b66:	45e0      	cmp	r8, ip
 8011b68:	da04      	bge.n	8011b74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8011b6a:	ea5f 4820 	movs.w	r8, r0, asr #16
 8011b6e:	d401      	bmi.n	8011b74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8011b70:	45f0      	cmp	r8, lr
 8011b72:	db05      	blt.n	8011b80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011b74:	443c      	add	r4, r7
 8011b76:	4430      	add	r0, r6
 8011b78:	3b01      	subs	r3, #1
 8011b7a:	3502      	adds	r5, #2
 8011b7c:	e7ee      	b.n	8011b5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8011b7e:	d010      	beq.n	8011ba2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8011b80:	f103 38ff 	add.w	r8, r3, #4294967295
 8011b84:	fb07 4908 	mla	r9, r7, r8, r4
 8011b88:	ea5f 4929 	movs.w	r9, r9, asr #16
 8011b8c:	d53d      	bpl.n	8011c0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8011b8e:	4698      	mov	r8, r3
 8011b90:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 8011b94:	f1b8 0f00 	cmp.w	r8, #0
 8011b98:	dc55      	bgt.n	8011c46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 8011b9a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011b9e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011ba2:	2900      	cmp	r1, #0
 8011ba4:	dd69      	ble.n	8011c7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8011ba6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011baa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011bae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011bb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011bb4:	3901      	subs	r1, #1
 8011bb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011bba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011bbe:	eeb0 6a62 	vmov.f32	s12, s5
 8011bc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011bc6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011bca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011bce:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8011bd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011bd6:	eeb0 6a43 	vmov.f32	s12, s6
 8011bda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011bde:	ee12 2a90 	vmov	r2, s5
 8011be2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011be6:	fb92 f7f3 	sdiv	r7, r2, r3
 8011bea:	ee13 2a10 	vmov	r2, s6
 8011bee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011bf2:	fb92 f6f3 	sdiv	r6, r2, r3
 8011bf6:	9a01      	ldr	r2, [sp, #4]
 8011bf8:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8011bfc:	bf08      	it	eq
 8011bfe:	4613      	moveq	r3, r2
 8011c00:	eeb0 3a67 	vmov.f32	s6, s15
 8011c04:	eef0 2a47 	vmov.f32	s5, s14
 8011c08:	e79c      	b.n	8011b44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 8011c0a:	45e1      	cmp	r9, ip
 8011c0c:	dabf      	bge.n	8011b8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011c0e:	fb06 0808 	mla	r8, r6, r8, r0
 8011c12:	ea5f 4828 	movs.w	r8, r8, asr #16
 8011c16:	d4ba      	bmi.n	8011b8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011c18:	45f0      	cmp	r8, lr
 8011c1a:	dab8      	bge.n	8011b8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011c1c:	4698      	mov	r8, r3
 8011c1e:	46aa      	mov	sl, r5
 8011c20:	f1b8 0f00 	cmp.w	r8, #0
 8011c24:	ddb9      	ble.n	8011b9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8011c26:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011c2a:	ea4f 4b24 	mov.w	fp, r4, asr #16
 8011c2e:	fb0c b909 	mla	r9, ip, r9, fp
 8011c32:	9a00      	ldr	r2, [sp, #0]
 8011c34:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 8011c38:	f82a 9b02 	strh.w	r9, [sl], #2
 8011c3c:	443c      	add	r4, r7
 8011c3e:	4430      	add	r0, r6
 8011c40:	f108 38ff 	add.w	r8, r8, #4294967295
 8011c44:	e7ec      	b.n	8011c20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8011c46:	ea5f 4a24 	movs.w	sl, r4, asr #16
 8011c4a:	d411      	bmi.n	8011c70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011c4c:	45e2      	cmp	sl, ip
 8011c4e:	da0f      	bge.n	8011c70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011c50:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011c54:	d40c      	bmi.n	8011c70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011c56:	45f1      	cmp	r9, lr
 8011c58:	da0a      	bge.n	8011c70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011c5a:	fb0c a909 	mla	r9, ip, r9, sl
 8011c5e:	9a00      	ldr	r2, [sp, #0]
 8011c60:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 8011c64:	f06f 0201 	mvn.w	r2, #1
 8011c68:	fb02 f908 	mul.w	r9, r2, r8
 8011c6c:	f82b a009 	strh.w	sl, [fp, r9]
 8011c70:	443c      	add	r4, r7
 8011c72:	4430      	add	r0, r6
 8011c74:	f108 38ff 	add.w	r8, r8, #4294967295
 8011c78:	e78c      	b.n	8011b94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8011c7a:	b003      	add	sp, #12
 8011c7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011c80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c84:	b087      	sub	sp, #28
 8011c86:	468b      	mov	fp, r1
 8011c88:	9204      	str	r2, [sp, #16]
 8011c8a:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011c8e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011c90:	9201      	str	r2, [sp, #4]
 8011c92:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8011c96:	9205      	str	r2, [sp, #20]
 8011c98:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011c9c:	6841      	ldr	r1, [r0, #4]
 8011c9e:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8011ca2:	fb01 2404 	mla	r4, r1, r4, r2
 8011ca6:	6802      	ldr	r2, [r0, #0]
 8011ca8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011cac:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011cae:	6812      	ldr	r2, [r2, #0]
 8011cb0:	9203      	str	r2, [sp, #12]
 8011cb2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011cb6:	f1bb 0f00 	cmp.w	fp, #0
 8011cba:	dc03      	bgt.n	8011cc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8011cbc:	9a04      	ldr	r2, [sp, #16]
 8011cbe:	2a00      	cmp	r2, #0
 8011cc0:	f340 812c 	ble.w	8011f1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8011cc4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011cc6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011cca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011ccc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011cd0:	2b00      	cmp	r3, #0
 8011cd2:	dd0f      	ble.n	8011cf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011cd4:	1402      	asrs	r2, r0, #16
 8011cd6:	d406      	bmi.n	8011ce6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011cd8:	4542      	cmp	r2, r8
 8011cda:	da04      	bge.n	8011ce6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011cdc:	140a      	asrs	r2, r1, #16
 8011cde:	d402      	bmi.n	8011ce6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8011ce0:	9d01      	ldr	r5, [sp, #4]
 8011ce2:	42aa      	cmp	r2, r5
 8011ce4:	db07      	blt.n	8011cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8011ce6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ce8:	4410      	add	r0, r2
 8011cea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011cec:	3b01      	subs	r3, #1
 8011cee:	4411      	add	r1, r2
 8011cf0:	3402      	adds	r4, #2
 8011cf2:	e7ed      	b.n	8011cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8011cf4:	d01a      	beq.n	8011d2c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8011cf6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011cf8:	1e5a      	subs	r2, r3, #1
 8011cfa:	fb05 0502 	mla	r5, r5, r2, r0
 8011cfe:	142d      	asrs	r5, r5, #16
 8011d00:	d40a      	bmi.n	8011d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011d02:	4545      	cmp	r5, r8
 8011d04:	da08      	bge.n	8011d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011d06:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011d08:	fb05 1202 	mla	r2, r5, r2, r1
 8011d0c:	1412      	asrs	r2, r2, #16
 8011d0e:	d403      	bmi.n	8011d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011d10:	9d01      	ldr	r5, [sp, #4]
 8011d12:	42aa      	cmp	r2, r5
 8011d14:	f2c0 80a6 	blt.w	8011e64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8011d18:	f04f 0c00 	mov.w	ip, #0
 8011d1c:	eb03 020c 	add.w	r2, r3, ip
 8011d20:	2a00      	cmp	r2, #0
 8011d22:	dc3e      	bgt.n	8011da2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 8011d24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011d28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011d2c:	f1bb 0f00 	cmp.w	fp, #0
 8011d30:	f340 80f4 	ble.w	8011f1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8011d34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011d38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011d3c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011d40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d42:	f1bb 0b01 	subs.w	fp, fp, #1
 8011d46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011d4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011d4e:	eeb0 6a62 	vmov.f32	s12, s5
 8011d52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011d56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011d5e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011d62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d66:	eeb0 6a43 	vmov.f32	s12, s6
 8011d6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d6e:	ee12 2a90 	vmov	r2, s5
 8011d72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d76:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d7a:	ee13 2a10 	vmov	r2, s6
 8011d7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d82:	9313      	str	r3, [sp, #76]	; 0x4c
 8011d84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d86:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d8a:	9a04      	ldr	r2, [sp, #16]
 8011d8c:	9314      	str	r3, [sp, #80]	; 0x50
 8011d8e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011d92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011d94:	eeb0 3a67 	vmov.f32	s6, s15
 8011d98:	bf08      	it	eq
 8011d9a:	4613      	moveq	r3, r2
 8011d9c:	eef0 2a47 	vmov.f32	s5, s14
 8011da0:	e789      	b.n	8011cb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8011da2:	1405      	asrs	r5, r0, #16
 8011da4:	d457      	bmi.n	8011e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011da6:	4545      	cmp	r5, r8
 8011da8:	da55      	bge.n	8011e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011daa:	140a      	asrs	r2, r1, #16
 8011dac:	d453      	bmi.n	8011e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011dae:	9e01      	ldr	r6, [sp, #4]
 8011db0:	42b2      	cmp	r2, r6
 8011db2:	da50      	bge.n	8011e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011db4:	fb08 5202 	mla	r2, r8, r2, r5
 8011db8:	9d03      	ldr	r5, [sp, #12]
 8011dba:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011dbe:	0e2e      	lsrs	r6, r5, #24
 8011dc0:	d049      	beq.n	8011e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011dc2:	f06f 0201 	mvn.w	r2, #1
 8011dc6:	fb02 f20c 	mul.w	r2, r2, ip
 8011dca:	9202      	str	r2, [sp, #8]
 8011dcc:	f834 e002 	ldrh.w	lr, [r4, r2]
 8011dd0:	9a05      	ldr	r2, [sp, #20]
 8011dd2:	4356      	muls	r6, r2
 8011dd4:	1c72      	adds	r2, r6, #1
 8011dd6:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011dda:	1212      	asrs	r2, r2, #8
 8011ddc:	fa1f f982 	uxth.w	r9, r2
 8011de0:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011de4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011de8:	43d2      	mvns	r2, r2
 8011dea:	b2d2      	uxtb	r2, r2
 8011dec:	fb16 f609 	smulbb	r6, r6, r9
 8011df0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011df4:	fb07 6702 	mla	r7, r7, r2, r6
 8011df8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011dfc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011e00:	b2ed      	uxtb	r5, r5
 8011e02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011e06:	fa5f fe8e 	uxtb.w	lr, lr
 8011e0a:	fb15 f509 	smulbb	r5, r5, r9
 8011e0e:	fb0e 5502 	mla	r5, lr, r2, r5
 8011e12:	b2bf      	uxth	r7, r7
 8011e14:	fb1a fa09 	smulbb	sl, sl, r9
 8011e18:	b2ad      	uxth	r5, r5
 8011e1a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011e1e:	fb06 a602 	mla	r6, r6, r2, sl
 8011e22:	1c7a      	adds	r2, r7, #1
 8011e24:	f105 0a01 	add.w	sl, r5, #1
 8011e28:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011e2c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011e30:	b2b6      	uxth	r6, r6
 8011e32:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011e36:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011e3a:	ea47 070a 	orr.w	r7, r7, sl
 8011e3e:	f106 0a01 	add.w	sl, r6, #1
 8011e42:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011e46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011e4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011e4e:	9a02      	ldr	r2, [sp, #8]
 8011e50:	ea47 070a 	orr.w	r7, r7, sl
 8011e54:	52a7      	strh	r7, [r4, r2]
 8011e56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011e58:	4410      	add	r0, r2
 8011e5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011e5c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011e60:	4411      	add	r1, r2
 8011e62:	e75b      	b.n	8011d1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011e64:	f04f 0e00 	mov.w	lr, #0
 8011e68:	eba3 020e 	sub.w	r2, r3, lr
 8011e6c:	2a00      	cmp	r2, #0
 8011e6e:	f77f af59 	ble.w	8011d24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011e72:	1405      	asrs	r5, r0, #16
 8011e74:	140a      	asrs	r2, r1, #16
 8011e76:	fb08 5202 	mla	r2, r8, r2, r5
 8011e7a:	9d03      	ldr	r5, [sp, #12]
 8011e7c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011e80:	0e2e      	lsrs	r6, r5, #24
 8011e82:	d044      	beq.n	8011f0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 8011e84:	9a05      	ldr	r2, [sp, #20]
 8011e86:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011e8a:	4356      	muls	r6, r2
 8011e8c:	1c72      	adds	r2, r6, #1
 8011e8e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011e92:	1212      	asrs	r2, r2, #8
 8011e94:	fa1f f982 	uxth.w	r9, r2
 8011e98:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011e9c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011ea0:	43d2      	mvns	r2, r2
 8011ea2:	b2d2      	uxtb	r2, r2
 8011ea4:	fb16 f609 	smulbb	r6, r6, r9
 8011ea8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011eac:	fb07 6702 	mla	r7, r7, r2, r6
 8011eb0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011eb4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011eb8:	b2ed      	uxtb	r5, r5
 8011eba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011ebe:	fa5f fc8c 	uxtb.w	ip, ip
 8011ec2:	fb15 f509 	smulbb	r5, r5, r9
 8011ec6:	fb0c 5502 	mla	r5, ip, r2, r5
 8011eca:	b2bf      	uxth	r7, r7
 8011ecc:	fb1a fa09 	smulbb	sl, sl, r9
 8011ed0:	b2ad      	uxth	r5, r5
 8011ed2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011ed6:	fb06 a602 	mla	r6, r6, r2, sl
 8011eda:	1c7a      	adds	r2, r7, #1
 8011edc:	f105 0a01 	add.w	sl, r5, #1
 8011ee0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011ee4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011ee8:	b2b6      	uxth	r6, r6
 8011eea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011eee:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011ef2:	ea47 070a 	orr.w	r7, r7, sl
 8011ef6:	f106 0a01 	add.w	sl, r6, #1
 8011efa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011efe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011f02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011f06:	ea47 070a 	orr.w	r7, r7, sl
 8011f0a:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011f0e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f10:	4410      	add	r0, r2
 8011f12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f14:	f10e 0e01 	add.w	lr, lr, #1
 8011f18:	4411      	add	r1, r2
 8011f1a:	e7a5      	b.n	8011e68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8011f1c:	b007      	add	sp, #28
 8011f1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011f24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f28:	b087      	sub	sp, #28
 8011f2a:	468b      	mov	fp, r1
 8011f2c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011f2e:	9205      	str	r2, [sp, #20]
 8011f30:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011f34:	9201      	str	r2, [sp, #4]
 8011f36:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8011f3a:	6861      	ldr	r1, [r4, #4]
 8011f3c:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8011f40:	fb01 2000 	mla	r0, r1, r0, r2
 8011f44:	6822      	ldr	r2, [r4, #0]
 8011f46:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011f4a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011f4c:	6812      	ldr	r2, [r2, #0]
 8011f4e:	9203      	str	r2, [sp, #12]
 8011f50:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f54:	f1bb 0f00 	cmp.w	fp, #0
 8011f58:	dc03      	bgt.n	8011f62 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8011f5a:	9a05      	ldr	r2, [sp, #20]
 8011f5c:	2a00      	cmp	r2, #0
 8011f5e:	f340 814b 	ble.w	80121f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8011f62:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011f64:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011f68:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011f6a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011f6e:	2b00      	cmp	r3, #0
 8011f70:	dd0f      	ble.n	8011f92 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8011f72:	140c      	asrs	r4, r1, #16
 8011f74:	d406      	bmi.n	8011f84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011f76:	454c      	cmp	r4, r9
 8011f78:	da04      	bge.n	8011f84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011f7a:	1414      	asrs	r4, r2, #16
 8011f7c:	d402      	bmi.n	8011f84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011f7e:	9d01      	ldr	r5, [sp, #4]
 8011f80:	42ac      	cmp	r4, r5
 8011f82:	db07      	blt.n	8011f94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8011f84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011f86:	4421      	add	r1, r4
 8011f88:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011f8a:	3b01      	subs	r3, #1
 8011f8c:	4422      	add	r2, r4
 8011f8e:	3002      	adds	r0, #2
 8011f90:	e7ed      	b.n	8011f6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8011f92:	d018      	beq.n	8011fc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 8011f94:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011f96:	1e5c      	subs	r4, r3, #1
 8011f98:	fb05 1504 	mla	r5, r5, r4, r1
 8011f9c:	142d      	asrs	r5, r5, #16
 8011f9e:	d40a      	bmi.n	8011fb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011fa0:	454d      	cmp	r5, r9
 8011fa2:	da08      	bge.n	8011fb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011fa4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011fa6:	fb05 2404 	mla	r4, r5, r4, r2
 8011faa:	1424      	asrs	r4, r4, #16
 8011fac:	d403      	bmi.n	8011fb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011fae:	9d01      	ldr	r5, [sp, #4]
 8011fb0:	42ac      	cmp	r4, r5
 8011fb2:	f2c0 80bb 	blt.w	801212c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 8011fb6:	2700      	movs	r7, #0
 8011fb8:	19dc      	adds	r4, r3, r7
 8011fba:	2c00      	cmp	r4, #0
 8011fbc:	dc3e      	bgt.n	801203c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 8011fbe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011fc2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011fc6:	f1bb 0f00 	cmp.w	fp, #0
 8011fca:	f340 8115 	ble.w	80121f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8011fce:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011fd2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011fd6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011fda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fdc:	f1bb 0b01 	subs.w	fp, fp, #1
 8011fe0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011fe4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011fe8:	eeb0 6a62 	vmov.f32	s12, s5
 8011fec:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011ff0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011ff4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011ff8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011ffc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012000:	eeb0 6a43 	vmov.f32	s12, s6
 8012004:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012008:	ee12 2a90 	vmov	r2, s5
 801200c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012010:	fb92 f3f3 	sdiv	r3, r2, r3
 8012014:	ee13 2a10 	vmov	r2, s6
 8012018:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801201c:	9313      	str	r3, [sp, #76]	; 0x4c
 801201e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012020:	fb92 f3f3 	sdiv	r3, r2, r3
 8012024:	9a05      	ldr	r2, [sp, #20]
 8012026:	9314      	str	r3, [sp, #80]	; 0x50
 8012028:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801202c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801202e:	eeb0 3a67 	vmov.f32	s6, s15
 8012032:	bf08      	it	eq
 8012034:	4613      	moveq	r3, r2
 8012036:	eef0 2a47 	vmov.f32	s5, s14
 801203a:	e78b      	b.n	8011f54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 801203c:	140d      	asrs	r5, r1, #16
 801203e:	d45c      	bmi.n	80120fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012040:	454d      	cmp	r5, r9
 8012042:	da5a      	bge.n	80120fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012044:	1414      	asrs	r4, r2, #16
 8012046:	d458      	bmi.n	80120fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8012048:	9e01      	ldr	r6, [sp, #4]
 801204a:	42b4      	cmp	r4, r6
 801204c:	da55      	bge.n	80120fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801204e:	fb09 5404 	mla	r4, r9, r4, r5
 8012052:	9d03      	ldr	r5, [sp, #12]
 8012054:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8012058:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 801205c:	d04d      	beq.n	80120fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801205e:	0a26      	lsrs	r6, r4, #8
 8012060:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8012064:	fa5f f58e 	uxtb.w	r5, lr
 8012068:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 801206c:	9604      	str	r6, [sp, #16]
 801206e:	d04a      	beq.n	8012106 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8012070:	f06f 0601 	mvn.w	r6, #1
 8012074:	437e      	muls	r6, r7
 8012076:	fa1f fa85 	uxth.w	sl, r5
 801207a:	f830 8006 	ldrh.w	r8, [r0, r6]
 801207e:	9602      	str	r6, [sp, #8]
 8012080:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012084:	43ed      	mvns	r5, r5
 8012086:	fa5f fc8c 	uxtb.w	ip, ip
 801208a:	b2ed      	uxtb	r5, r5
 801208c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012090:	fb1c fc0a 	smulbb	ip, ip, sl
 8012094:	fb0e cc05 	mla	ip, lr, r5, ip
 8012098:	b2e4      	uxtb	r4, r4
 801209a:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 801209e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80120a2:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80120a6:	fa5f f888 	uxtb.w	r8, r8
 80120aa:	fb14 f40a 	smulbb	r4, r4, sl
 80120ae:	fb08 4405 	mla	r4, r8, r5, r4
 80120b2:	b2a4      	uxth	r4, r4
 80120b4:	fa1f fc8c 	uxth.w	ip, ip
 80120b8:	fb16 f60a 	smulbb	r6, r6, sl
 80120bc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80120c0:	fb0e 6e05 	mla	lr, lr, r5, r6
 80120c4:	1c66      	adds	r6, r4, #1
 80120c6:	f10c 0501 	add.w	r5, ip, #1
 80120ca:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80120ce:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80120d2:	fa1f fe8e 	uxth.w	lr, lr
 80120d6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80120da:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80120de:	ea4c 0c06 	orr.w	ip, ip, r6
 80120e2:	f10e 0601 	add.w	r6, lr, #1
 80120e6:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 80120ea:	0976      	lsrs	r6, r6, #5
 80120ec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80120f0:	9c02      	ldr	r4, [sp, #8]
 80120f2:	ea4c 0c06 	orr.w	ip, ip, r6
 80120f6:	f820 c004 	strh.w	ip, [r0, r4]
 80120fa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80120fc:	4421      	add	r1, r4
 80120fe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012100:	3f01      	subs	r7, #1
 8012102:	4422      	add	r2, r4
 8012104:	e758      	b.n	8011fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8012106:	4e3e      	ldr	r6, [pc, #248]	; (8012200 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8012108:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801210c:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8012110:	ea4c 0c04 	orr.w	ip, ip, r4
 8012114:	9c04      	ldr	r4, [sp, #16]
 8012116:	f06f 0501 	mvn.w	r5, #1
 801211a:	00e6      	lsls	r6, r4, #3
 801211c:	437d      	muls	r5, r7
 801211e:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8012122:	ea4c 0c04 	orr.w	ip, ip, r4
 8012126:	f820 c005 	strh.w	ip, [r0, r5]
 801212a:	e7e6      	b.n	80120fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801212c:	f04f 0800 	mov.w	r8, #0
 8012130:	eba3 0408 	sub.w	r4, r3, r8
 8012134:	2c00      	cmp	r4, #0
 8012136:	f77f af42 	ble.w	8011fbe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801213a:	140d      	asrs	r5, r1, #16
 801213c:	1414      	asrs	r4, r2, #16
 801213e:	fb09 5404 	mla	r4, r9, r4, r5
 8012142:	9d03      	ldr	r5, [sp, #12]
 8012144:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8012148:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 801214c:	d042      	beq.n	80121d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801214e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8012152:	fa5f f58c 	uxtb.w	r5, ip
 8012156:	ea4f 4714 	mov.w	r7, r4, lsr #16
 801215a:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801215e:	d040      	beq.n	80121e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8012160:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8012164:	fa1f fa85 	uxth.w	sl, r5
 8012168:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801216c:	43ed      	mvns	r5, r5
 801216e:	b2ff      	uxtb	r7, r7
 8012170:	b2ed      	uxtb	r5, r5
 8012172:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012176:	fb17 f70a 	smulbb	r7, r7, sl
 801217a:	fb0c 7705 	mla	r7, ip, r5, r7
 801217e:	b2e4      	uxtb	r4, r4
 8012180:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8012184:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012188:	fa5f fe8e 	uxtb.w	lr, lr
 801218c:	fb14 f40a 	smulbb	r4, r4, sl
 8012190:	fb0e 4405 	mla	r4, lr, r5, r4
 8012194:	b2f6      	uxtb	r6, r6
 8012196:	b2bf      	uxth	r7, r7
 8012198:	fb16 f60a 	smulbb	r6, r6, sl
 801219c:	b2a4      	uxth	r4, r4
 801219e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80121a2:	fb0c 6c05 	mla	ip, ip, r5, r6
 80121a6:	1c7d      	adds	r5, r7, #1
 80121a8:	1c66      	adds	r6, r4, #1
 80121aa:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80121ae:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80121b2:	fa1f fc8c 	uxth.w	ip, ip
 80121b6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80121ba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80121be:	4337      	orrs	r7, r6
 80121c0:	f10c 0601 	add.w	r6, ip, #1
 80121c4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80121c8:	0976      	lsrs	r6, r6, #5
 80121ca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80121ce:	4337      	orrs	r7, r6
 80121d0:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 80121d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80121d6:	4421      	add	r1, r4
 80121d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80121da:	f108 0801 	add.w	r8, r8, #1
 80121de:	4422      	add	r2, r4
 80121e0:	e7a6      	b.n	8012130 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 80121e2:	4d07      	ldr	r5, [pc, #28]	; (8012200 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 80121e4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80121e8:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 80121ec:	00f6      	lsls	r6, r6, #3
 80121ee:	4327      	orrs	r7, r4
 80121f0:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80121f4:	4327      	orrs	r7, r4
 80121f6:	e7eb      	b.n	80121d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 80121f8:	b007      	add	sp, #28
 80121fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80121fe:	bf00      	nop
 8012200:	fffff800 	.word	0xfffff800

08012204 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012208:	b089      	sub	sp, #36	; 0x24
 801220a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801220e:	9206      	str	r2, [sp, #24]
 8012210:	f9bd 2068 	ldrsh.w	r2, [sp, #104]	; 0x68
 8012214:	9202      	str	r2, [sp, #8]
 8012216:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	; 0x6c
 801221a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801221c:	9203      	str	r2, [sp, #12]
 801221e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 8012222:	9207      	str	r2, [sp, #28]
 8012224:	e9dd 2518 	ldrd	r2, r5, [sp, #96]	; 0x60
 8012228:	6860      	ldr	r0, [r4, #4]
 801222a:	9101      	str	r1, [sp, #4]
 801222c:	fb00 2505 	mla	r5, r0, r5, r2
 8012230:	6822      	ldr	r2, [r4, #0]
 8012232:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012236:	9a02      	ldr	r2, [sp, #8]
 8012238:	3201      	adds	r2, #1
 801223a:	f022 0201 	bic.w	r2, r2, #1
 801223e:	9204      	str	r2, [sp, #16]
 8012240:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8012242:	6812      	ldr	r2, [r2, #0]
 8012244:	9205      	str	r2, [sp, #20]
 8012246:	9a01      	ldr	r2, [sp, #4]
 8012248:	2a00      	cmp	r2, #0
 801224a:	dc03      	bgt.n	8012254 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 801224c:	9a06      	ldr	r2, [sp, #24]
 801224e:	2a00      	cmp	r2, #0
 8012250:	f340 8153 	ble.w	80124fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8012254:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012256:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801225a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801225c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012260:	2b00      	cmp	r3, #0
 8012262:	dd10      	ble.n	8012286 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 8012264:	1422      	asrs	r2, r4, #16
 8012266:	d407      	bmi.n	8012278 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8012268:	9e02      	ldr	r6, [sp, #8]
 801226a:	4296      	cmp	r6, r2
 801226c:	dd04      	ble.n	8012278 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801226e:	1402      	asrs	r2, r0, #16
 8012270:	d402      	bmi.n	8012278 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8012272:	9e03      	ldr	r6, [sp, #12]
 8012274:	42b2      	cmp	r2, r6
 8012276:	db07      	blt.n	8012288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8012278:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801227a:	4414      	add	r4, r2
 801227c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801227e:	3b01      	subs	r3, #1
 8012280:	4410      	add	r0, r2
 8012282:	3502      	adds	r5, #2
 8012284:	e7ec      	b.n	8012260 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5c>
 8012286:	d00f      	beq.n	80122a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8012288:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801228a:	1e5a      	subs	r2, r3, #1
 801228c:	fb06 4602 	mla	r6, r6, r2, r4
 8012290:	1436      	asrs	r6, r6, #16
 8012292:	d545      	bpl.n	8012320 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8012294:	469a      	mov	sl, r3
 8012296:	46a9      	mov	r9, r5
 8012298:	f1ba 0f00 	cmp.w	sl, #0
 801229c:	f300 80ba 	bgt.w	8012414 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x210>
 80122a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80122a4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80122a8:	9b01      	ldr	r3, [sp, #4]
 80122aa:	2b00      	cmp	r3, #0
 80122ac:	f340 8125 	ble.w	80124fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 80122b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80122b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80122b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80122bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80122be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80122c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80122c6:	eeb0 6a62 	vmov.f32	s12, s5
 80122ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80122ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80122d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80122d6:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 80122da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80122de:	eeb0 6a43 	vmov.f32	s12, s6
 80122e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80122e6:	ee12 2a90 	vmov	r2, s5
 80122ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80122ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80122f2:	ee13 2a10 	vmov	r2, s6
 80122f6:	9315      	str	r3, [sp, #84]	; 0x54
 80122f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80122fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80122fe:	9316      	str	r3, [sp, #88]	; 0x58
 8012300:	9b01      	ldr	r3, [sp, #4]
 8012302:	9a06      	ldr	r2, [sp, #24]
 8012304:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012308:	3b01      	subs	r3, #1
 801230a:	9301      	str	r3, [sp, #4]
 801230c:	ed8d 6a14 	vstr	s12, [sp, #80]	; 0x50
 8012310:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012312:	eeb0 3a67 	vmov.f32	s6, s15
 8012316:	bf08      	it	eq
 8012318:	4613      	moveq	r3, r2
 801231a:	eef0 2a47 	vmov.f32	s5, s14
 801231e:	e792      	b.n	8012246 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 8012320:	9f02      	ldr	r7, [sp, #8]
 8012322:	42b7      	cmp	r7, r6
 8012324:	ddb6      	ble.n	8012294 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8012326:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8012328:	fb06 0202 	mla	r2, r6, r2, r0
 801232c:	1412      	asrs	r2, r2, #16
 801232e:	d4b1      	bmi.n	8012294 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8012330:	9e03      	ldr	r6, [sp, #12]
 8012332:	42b2      	cmp	r2, r6
 8012334:	daae      	bge.n	8012294 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8012336:	f04f 0800 	mov.w	r8, #0
 801233a:	eba3 0208 	sub.w	r2, r3, r8
 801233e:	2a00      	cmp	r2, #0
 8012340:	ddae      	ble.n	80122a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8012342:	9904      	ldr	r1, [sp, #16]
 8012344:	1422      	asrs	r2, r4, #16
 8012346:	1406      	asrs	r6, r0, #16
 8012348:	fb01 2606 	mla	r6, r1, r6, r2
 801234c:	0872      	lsrs	r2, r6, #1
 801234e:	9905      	ldr	r1, [sp, #20]
 8012350:	5c8a      	ldrb	r2, [r1, r2]
 8012352:	07f1      	lsls	r1, r6, #31
 8012354:	bf54      	ite	pl
 8012356:	f002 020f 	andpl.w	r2, r2, #15
 801235a:	1112      	asrmi	r2, r2, #4
 801235c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012360:	b2d2      	uxtb	r2, r2
 8012362:	2a00      	cmp	r2, #0
 8012364:	d04f      	beq.n	8012406 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8012366:	4966      	ldr	r1, [pc, #408]	; (8012500 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8012368:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801236c:	680e      	ldr	r6, [r1, #0]
 801236e:	9907      	ldr	r1, [sp, #28]
 8012370:	434a      	muls	r2, r1
 8012372:	1c57      	adds	r7, r2, #1
 8012374:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8012378:	1212      	asrs	r2, r2, #8
 801237a:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801237e:	fa1f fa82 	uxth.w	sl, r2
 8012382:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012386:	43d2      	mvns	r2, r2
 8012388:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801238c:	b2d2      	uxtb	r2, r2
 801238e:	fb1c fc0a 	smulbb	ip, ip, sl
 8012392:	f3c6 09cc 	ubfx	r9, r6, #3, #13
 8012396:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801239a:	495a      	ldr	r1, [pc, #360]	; (8012504 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 801239c:	fb07 c702 	mla	r7, r7, r2, ip
 80123a0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80123a4:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80123a8:	fb19 f90a 	smulbb	r9, r9, sl
 80123ac:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80123b0:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 80123b4:	fb0c 9c02 	mla	ip, ip, r2, r9
 80123b8:	b2f6      	uxtb	r6, r6
 80123ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80123be:	fa1f fc8c 	uxth.w	ip, ip
 80123c2:	fa5f fe8e 	uxtb.w	lr, lr
 80123c6:	fb16 f60a 	smulbb	r6, r6, sl
 80123ca:	b2bf      	uxth	r7, r7
 80123cc:	fb0e 6602 	mla	r6, lr, r2, r6
 80123d0:	f10c 0901 	add.w	r9, ip, #1
 80123d4:	b2b6      	uxth	r6, r6
 80123d6:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80123da:	f107 0b01 	add.w	fp, r7, #1
 80123de:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80123e2:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 80123e6:	f106 0e01 	add.w	lr, r6, #1
 80123ea:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80123ee:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80123f2:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80123f6:	ea4c 0c07 	orr.w	ip, ip, r7
 80123fa:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80123fe:	ea4c 0c0e 	orr.w	ip, ip, lr
 8012402:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8012406:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8012408:	4414      	add	r4, r2
 801240a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801240c:	f108 0801 	add.w	r8, r8, #1
 8012410:	4410      	add	r0, r2
 8012412:	e792      	b.n	801233a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x136>
 8012414:	1422      	asrs	r2, r4, #16
 8012416:	d467      	bmi.n	80124e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8012418:	9e02      	ldr	r6, [sp, #8]
 801241a:	4296      	cmp	r6, r2
 801241c:	dd64      	ble.n	80124e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 801241e:	1406      	asrs	r6, r0, #16
 8012420:	d462      	bmi.n	80124e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8012422:	9f03      	ldr	r7, [sp, #12]
 8012424:	42be      	cmp	r6, r7
 8012426:	da5f      	bge.n	80124e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8012428:	9f04      	ldr	r7, [sp, #16]
 801242a:	fb06 2607 	mla	r6, r6, r7, r2
 801242e:	0872      	lsrs	r2, r6, #1
 8012430:	9f05      	ldr	r7, [sp, #20]
 8012432:	5cba      	ldrb	r2, [r7, r2]
 8012434:	07f6      	lsls	r6, r6, #31
 8012436:	bf54      	ite	pl
 8012438:	f002 020f 	andpl.w	r2, r2, #15
 801243c:	1112      	asrmi	r2, r2, #4
 801243e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012442:	b2d2      	uxtb	r2, r2
 8012444:	2a00      	cmp	r2, #0
 8012446:	d04f      	beq.n	80124e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8012448:	9f07      	ldr	r7, [sp, #28]
 801244a:	4e2d      	ldr	r6, [pc, #180]	; (8012500 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 801244c:	f8b9 e000 	ldrh.w	lr, [r9]
 8012450:	6836      	ldr	r6, [r6, #0]
 8012452:	492c      	ldr	r1, [pc, #176]	; (8012504 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 8012454:	437a      	muls	r2, r7
 8012456:	1c57      	adds	r7, r2, #1
 8012458:	eb07 2222 	add.w	r2, r7, r2, asr #8
 801245c:	1212      	asrs	r2, r2, #8
 801245e:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8012462:	fa1f fb82 	uxth.w	fp, r2
 8012466:	ea4f 272e 	mov.w	r7, lr, asr #8
 801246a:	43d2      	mvns	r2, r2
 801246c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012470:	b2d2      	uxtb	r2, r2
 8012472:	fb1c fc0b 	smulbb	ip, ip, fp
 8012476:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 801247a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801247e:	fb07 c702 	mla	r7, r7, r2, ip
 8012482:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8012486:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801248a:	fb18 f80b 	smulbb	r8, r8, fp
 801248e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012492:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8012496:	fb0c 8c02 	mla	ip, ip, r2, r8
 801249a:	b2f6      	uxtb	r6, r6
 801249c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80124a0:	fa1f fc8c 	uxth.w	ip, ip
 80124a4:	fa5f fe8e 	uxtb.w	lr, lr
 80124a8:	fb16 f60b 	smulbb	r6, r6, fp
 80124ac:	b2bf      	uxth	r7, r7
 80124ae:	fb0e 6602 	mla	r6, lr, r2, r6
 80124b2:	f10c 0801 	add.w	r8, ip, #1
 80124b6:	b2b6      	uxth	r6, r6
 80124b8:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 80124bc:	f107 0801 	add.w	r8, r7, #1
 80124c0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80124c4:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80124c8:	f106 0e01 	add.w	lr, r6, #1
 80124cc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80124d0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80124d4:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80124d8:	ea4c 0c07 	orr.w	ip, ip, r7
 80124dc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80124e0:	ea4c 0c0e 	orr.w	ip, ip, lr
 80124e4:	f8a9 c000 	strh.w	ip, [r9]
 80124e8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80124ea:	4414      	add	r4, r2
 80124ec:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80124ee:	f109 0902 	add.w	r9, r9, #2
 80124f2:	4410      	add	r0, r2
 80124f4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80124f8:	e6ce      	b.n	8012298 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80124fa:	b009      	add	sp, #36	; 0x24
 80124fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012500:	200017a8 	.word	0x200017a8
 8012504:	0007fff8 	.word	0x0007fff8

08012508 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801250c:	b087      	sub	sp, #28
 801250e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012512:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8012514:	9205      	str	r2, [sp, #20]
 8012516:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 801251a:	9201      	str	r2, [sp, #4]
 801251c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8012520:	6860      	ldr	r0, [r4, #4]
 8012522:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 8012526:	9100      	str	r1, [sp, #0]
 8012528:	fb00 2505 	mla	r5, r0, r5, r2
 801252c:	6822      	ldr	r2, [r4, #0]
 801252e:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012532:	f10b 0201 	add.w	r2, fp, #1
 8012536:	f022 0201 	bic.w	r2, r2, #1
 801253a:	9203      	str	r2, [sp, #12]
 801253c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801253e:	6812      	ldr	r2, [r2, #0]
 8012540:	9204      	str	r2, [sp, #16]
 8012542:	9a00      	ldr	r2, [sp, #0]
 8012544:	2a00      	cmp	r2, #0
 8012546:	dc03      	bgt.n	8012550 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8012548:	9a05      	ldr	r2, [sp, #20]
 801254a:	2a00      	cmp	r2, #0
 801254c:	f340 815c 	ble.w	8012808 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8012550:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012552:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8012556:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012558:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801255c:	2b00      	cmp	r3, #0
 801255e:	dd0f      	ble.n	8012580 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012560:	1422      	asrs	r2, r4, #16
 8012562:	d406      	bmi.n	8012572 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012564:	4593      	cmp	fp, r2
 8012566:	dd04      	ble.n	8012572 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012568:	1402      	asrs	r2, r0, #16
 801256a:	d402      	bmi.n	8012572 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801256c:	9e01      	ldr	r6, [sp, #4]
 801256e:	42b2      	cmp	r2, r6
 8012570:	db07      	blt.n	8012582 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8012572:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012574:	4414      	add	r4, r2
 8012576:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012578:	3b01      	subs	r3, #1
 801257a:	4410      	add	r0, r2
 801257c:	3502      	adds	r5, #2
 801257e:	e7ed      	b.n	801255c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8012580:	d018      	beq.n	80125b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8012582:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012584:	1e5a      	subs	r2, r3, #1
 8012586:	fb06 4602 	mla	r6, r6, r2, r4
 801258a:	1436      	asrs	r6, r6, #16
 801258c:	d40a      	bmi.n	80125a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801258e:	45b3      	cmp	fp, r6
 8012590:	dd08      	ble.n	80125a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8012592:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8012594:	fb06 0202 	mla	r2, r6, r2, r0
 8012598:	1412      	asrs	r2, r2, #16
 801259a:	d403      	bmi.n	80125a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801259c:	9e01      	ldr	r6, [sp, #4]
 801259e:	42b2      	cmp	r2, r6
 80125a0:	f2c0 80bf 	blt.w	8012722 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 80125a4:	2700      	movs	r7, #0
 80125a6:	19da      	adds	r2, r3, r7
 80125a8:	2a00      	cmp	r2, #0
 80125aa:	dc3f      	bgt.n	801262c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 80125ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80125b0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80125b4:	9b00      	ldr	r3, [sp, #0]
 80125b6:	2b00      	cmp	r3, #0
 80125b8:	f340 8126 	ble.w	8012808 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 80125bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80125c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80125c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80125c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80125ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80125d2:	eeb0 6a62 	vmov.f32	s12, s5
 80125d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80125da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80125de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80125e2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80125e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80125ea:	eeb0 6a43 	vmov.f32	s12, s6
 80125ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80125f2:	ee12 2a90 	vmov	r2, s5
 80125f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80125fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80125fe:	ee13 2a10 	vmov	r2, s6
 8012602:	9313      	str	r3, [sp, #76]	; 0x4c
 8012604:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012606:	fb92 f3f3 	sdiv	r3, r2, r3
 801260a:	9314      	str	r3, [sp, #80]	; 0x50
 801260c:	9b00      	ldr	r3, [sp, #0]
 801260e:	9a05      	ldr	r2, [sp, #20]
 8012610:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012614:	3b01      	subs	r3, #1
 8012616:	9300      	str	r3, [sp, #0]
 8012618:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801261c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801261e:	eeb0 3a67 	vmov.f32	s6, s15
 8012622:	bf08      	it	eq
 8012624:	4613      	moveq	r3, r2
 8012626:	eef0 2a47 	vmov.f32	s5, s14
 801262a:	e78a      	b.n	8012542 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 801262c:	1422      	asrs	r2, r4, #16
 801262e:	d466      	bmi.n	80126fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012630:	4593      	cmp	fp, r2
 8012632:	dd64      	ble.n	80126fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012634:	1406      	asrs	r6, r0, #16
 8012636:	d462      	bmi.n	80126fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012638:	9901      	ldr	r1, [sp, #4]
 801263a:	428e      	cmp	r6, r1
 801263c:	da5f      	bge.n	80126fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801263e:	9903      	ldr	r1, [sp, #12]
 8012640:	fb06 2601 	mla	r6, r6, r1, r2
 8012644:	0872      	lsrs	r2, r6, #1
 8012646:	9904      	ldr	r1, [sp, #16]
 8012648:	5c8a      	ldrb	r2, [r1, r2]
 801264a:	07f6      	lsls	r6, r6, #31
 801264c:	bf54      	ite	pl
 801264e:	f002 020f 	andpl.w	r2, r2, #15
 8012652:	1112      	asrmi	r2, r2, #4
 8012654:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012658:	b2d2      	uxtb	r2, r2
 801265a:	2a00      	cmp	r2, #0
 801265c:	d04f      	beq.n	80126fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801265e:	496c      	ldr	r1, [pc, #432]	; (8012810 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 8012660:	680e      	ldr	r6, [r1, #0]
 8012662:	496c      	ldr	r1, [pc, #432]	; (8012814 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 8012664:	ea4f 2926 	mov.w	r9, r6, asr #8
 8012668:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 801266c:	2aff      	cmp	r2, #255	; 0xff
 801266e:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8012672:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012676:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801267a:	b2f6      	uxtb	r6, r6
 801267c:	d045      	beq.n	801270a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 801267e:	f06f 0101 	mvn.w	r1, #1
 8012682:	4379      	muls	r1, r7
 8012684:	fa1f fa82 	uxth.w	sl, r2
 8012688:	f835 e001 	ldrh.w	lr, [r5, r1]
 801268c:	9102      	str	r1, [sp, #8]
 801268e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012692:	43d2      	mvns	r2, r2
 8012694:	b2d2      	uxtb	r2, r2
 8012696:	fb19 f90a 	smulbb	r9, r9, sl
 801269a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801269e:	fb0c 9c02 	mla	ip, ip, r2, r9
 80126a2:	ea4f 09ee 	mov.w	r9, lr, asr #3
 80126a6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80126aa:	fb18 f80a 	smulbb	r8, r8, sl
 80126ae:	fb09 8802 	mla	r8, r9, r2, r8
 80126b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80126b6:	fa1f f888 	uxth.w	r8, r8
 80126ba:	fa5f fe8e 	uxtb.w	lr, lr
 80126be:	fb16 f60a 	smulbb	r6, r6, sl
 80126c2:	fa1f fc8c 	uxth.w	ip, ip
 80126c6:	fb0e 6602 	mla	r6, lr, r2, r6
 80126ca:	f108 0901 	add.w	r9, r8, #1
 80126ce:	b2b6      	uxth	r6, r6
 80126d0:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 80126d4:	f10c 0901 	add.w	r9, ip, #1
 80126d8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80126dc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80126e0:	1c72      	adds	r2, r6, #1
 80126e2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80126e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80126ea:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80126ee:	ea48 080c 	orr.w	r8, r8, ip
 80126f2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80126f6:	ea48 0806 	orr.w	r8, r8, r6
 80126fa:	f825 8001 	strh.w	r8, [r5, r1]
 80126fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012700:	4414      	add	r4, r2
 8012702:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012704:	3f01      	subs	r7, #1
 8012706:	4410      	add	r0, r2
 8012708:	e74d      	b.n	80125a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801270a:	f06f 0201 	mvn.w	r2, #1
 801270e:	08f6      	lsrs	r6, r6, #3
 8012710:	fb02 fe07 	mul.w	lr, r2, r7
 8012714:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8012718:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 801271c:	f825 600e 	strh.w	r6, [r5, lr]
 8012720:	e7ed      	b.n	80126fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8012722:	f04f 0e00 	mov.w	lr, #0
 8012726:	eba3 020e 	sub.w	r2, r3, lr
 801272a:	2a00      	cmp	r2, #0
 801272c:	f77f af3e 	ble.w	80125ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8012730:	9903      	ldr	r1, [sp, #12]
 8012732:	1422      	asrs	r2, r4, #16
 8012734:	1406      	asrs	r6, r0, #16
 8012736:	fb01 2606 	mla	r6, r1, r6, r2
 801273a:	0872      	lsrs	r2, r6, #1
 801273c:	9904      	ldr	r1, [sp, #16]
 801273e:	5c8a      	ldrb	r2, [r1, r2]
 8012740:	07f1      	lsls	r1, r6, #31
 8012742:	bf54      	ite	pl
 8012744:	f002 020f 	andpl.w	r2, r2, #15
 8012748:	1112      	asrmi	r2, r2, #4
 801274a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801274e:	b2d2      	uxtb	r2, r2
 8012750:	2a00      	cmp	r2, #0
 8012752:	d04a      	beq.n	80127ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 8012754:	492e      	ldr	r1, [pc, #184]	; (8012810 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 8012756:	680e      	ldr	r6, [r1, #0]
 8012758:	492e      	ldr	r1, [pc, #184]	; (8012814 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 801275a:	ea4f 2926 	mov.w	r9, r6, asr #8
 801275e:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8012762:	2aff      	cmp	r2, #255	; 0xff
 8012764:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8012768:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801276c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8012770:	b2f6      	uxtb	r6, r6
 8012772:	d041      	beq.n	80127f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f0>
 8012774:	f835 c01e 	ldrh.w	ip, [r5, lr, lsl #1]
 8012778:	fa1f fa82 	uxth.w	sl, r2
 801277c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012780:	43d2      	mvns	r2, r2
 8012782:	b2d2      	uxtb	r2, r2
 8012784:	fb19 f90a 	smulbb	r9, r9, sl
 8012788:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801278c:	fb07 9702 	mla	r7, r7, r2, r9
 8012790:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8012794:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012798:	fb18 f80a 	smulbb	r8, r8, sl
 801279c:	fb09 8802 	mla	r8, r9, r2, r8
 80127a0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80127a4:	fa1f f888 	uxth.w	r8, r8
 80127a8:	fa5f fc8c 	uxtb.w	ip, ip
 80127ac:	fb16 f60a 	smulbb	r6, r6, sl
 80127b0:	b2bf      	uxth	r7, r7
 80127b2:	fb0c 6602 	mla	r6, ip, r2, r6
 80127b6:	f108 0901 	add.w	r9, r8, #1
 80127ba:	b2b6      	uxth	r6, r6
 80127bc:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 80127c0:	f107 0901 	add.w	r9, r7, #1
 80127c4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80127c8:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80127cc:	1c72      	adds	r2, r6, #1
 80127ce:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80127d2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80127d6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80127da:	ea48 0807 	orr.w	r8, r8, r7
 80127de:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80127e2:	ea48 0806 	orr.w	r8, r8, r6
 80127e6:	f825 801e 	strh.w	r8, [r5, lr, lsl #1]
 80127ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80127ec:	4414      	add	r4, r2
 80127ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80127f0:	f10e 0e01 	add.w	lr, lr, #1
 80127f4:	4410      	add	r0, r2
 80127f6:	e796      	b.n	8012726 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 80127f8:	08f6      	lsrs	r6, r6, #3
 80127fa:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80127fe:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 8012802:	f825 601e 	strh.w	r6, [r5, lr, lsl #1]
 8012806:	e7f0      	b.n	80127ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 8012808:	b007      	add	sp, #28
 801280a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801280e:	bf00      	nop
 8012810:	200017a8 	.word	0x200017a8
 8012814:	0007fff8 	.word	0x0007fff8

08012818 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8012818:	4770      	bx	lr

0801281a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801281a:	4770      	bx	lr

0801281c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801281c:	4770      	bx	lr

0801281e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801281e:	4770      	bx	lr

08012820 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012820:	4770      	bx	lr

08012822 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012822:	4770      	bx	lr

08012824 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012824:	4770      	bx	lr

08012826 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012826:	4770      	bx	lr

08012828 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012828:	4770      	bx	lr

0801282a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801282a:	4770      	bx	lr

0801282c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801282c:	4770      	bx	lr

0801282e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801282e:	4770      	bx	lr

08012830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012830:	4770      	bx	lr

08012832 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012832:	4770      	bx	lr

08012834 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012834:	4770      	bx	lr

08012836 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012836:	4770      	bx	lr

08012838 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012838:	4770      	bx	lr

0801283a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801283a:	4770      	bx	lr

0801283c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801283c:	4770      	bx	lr

0801283e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801283e:	4770      	bx	lr

08012840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012840:	4770      	bx	lr

08012842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012842:	4770      	bx	lr

08012844 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012844:	4770      	bx	lr

08012846 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012846:	4770      	bx	lr

08012848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012848:	4770      	bx	lr

0801284a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801284a:	4770      	bx	lr

0801284c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801284c:	4770      	bx	lr

0801284e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801284e:	4770      	bx	lr

08012850 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012850:	b508      	push	{r3, lr}
 8012852:	4b06      	ldr	r3, [pc, #24]	; (801286c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8012854:	8818      	ldrh	r0, [r3, #0]
 8012856:	b928      	cbnz	r0, 8012864 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8012858:	4b05      	ldr	r3, [pc, #20]	; (8012870 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801285a:	4a06      	ldr	r2, [pc, #24]	; (8012874 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801285c:	4806      	ldr	r0, [pc, #24]	; (8012878 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801285e:	21d7      	movs	r1, #215	; 0xd7
 8012860:	f009 f894 	bl	801b98c <__assert_func>
 8012864:	0040      	lsls	r0, r0, #1
 8012866:	b280      	uxth	r0, r0
 8012868:	bd08      	pop	{r3, pc}
 801286a:	bf00      	nop
 801286c:	2000179a 	.word	0x2000179a
 8012870:	08021171 	.word	0x08021171
 8012874:	080216f7 	.word	0x080216f7
 8012878:	080211b3 	.word	0x080211b3

0801287c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801287c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012880:	b08d      	sub	sp, #52	; 0x34
 8012882:	460f      	mov	r7, r1
 8012884:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8012888:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801288c:	4616      	mov	r6, r2
 801288e:	f1b9 0f00 	cmp.w	r9, #0
 8012892:	d046      	beq.n	8012922 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012894:	6810      	ldr	r0, [r2, #0]
 8012896:	6851      	ldr	r1, [r2, #4]
 8012898:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8012a60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 801289c:	ad08      	add	r5, sp, #32
 801289e:	c503      	stmia	r5!, {r0, r1}
 80128a0:	6818      	ldr	r0, [r3, #0]
 80128a2:	6859      	ldr	r1, [r3, #4]
 80128a4:	ad0a      	add	r5, sp, #40	; 0x28
 80128a6:	c503      	stmia	r5!, {r0, r1}
 80128a8:	a808      	add	r0, sp, #32
 80128aa:	f7fb fc6b 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80128ae:	4631      	mov	r1, r6
 80128b0:	a80a      	add	r0, sp, #40	; 0x28
 80128b2:	f7fb fc4f 	bl	800e154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80128b6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80128ba:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80128be:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80128c2:	f8d8 0000 	ldr.w	r0, [r8]
 80128c6:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 80128ca:	fb16 2103 	smlabb	r1, r6, r3, r2
 80128ce:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80128d2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80128d6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80128da:	440a      	add	r2, r1
 80128dc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80128e0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80128e4:	4413      	add	r3, r2
 80128e6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80128ea:	6803      	ldr	r3, [r0, #0]
 80128ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80128ee:	4798      	blx	r3
 80128f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80128f4:	d018      	beq.n	8012928 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80128f6:	f010 0f04 	tst.w	r0, #4
 80128fa:	d019      	beq.n	8012930 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80128fc:	f8d8 0000 	ldr.w	r0, [r8]
 8012900:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012904:	6801      	ldr	r1, [r0, #0]
 8012906:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801290a:	e9cd 9403 	strd	r9, r4, [sp, #12]
 801290e:	b2bf      	uxth	r7, r7
 8012910:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8012914:	9402      	str	r4, [sp, #8]
 8012916:	b2ad      	uxth	r5, r5
 8012918:	9701      	str	r7, [sp, #4]
 801291a:	9500      	str	r5, [sp, #0]
 801291c:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 801291e:	4631      	mov	r1, r6
 8012920:	47a0      	blx	r4
 8012922:	b00d      	add	sp, #52	; 0x34
 8012924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012928:	b914      	cbnz	r4, 8012930 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801292a:	f010 0f01 	tst.w	r0, #1
 801292e:	e7e4      	b.n	80128fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8012930:	f8d8 0000 	ldr.w	r0, [r8]
 8012934:	6803      	ldr	r3, [r0, #0]
 8012936:	6a1b      	ldr	r3, [r3, #32]
 8012938:	4798      	blx	r3
 801293a:	4a48      	ldr	r2, [pc, #288]	; (8012a5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 801293c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8012940:	8814      	ldrh	r4, [r2, #0]
 8012942:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8012946:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801294a:	fb01 3404 	mla	r4, r1, r4, r3
 801294e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012952:	4692      	mov	sl, r2
 8012954:	d118      	bne.n	8012988 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 8012956:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 801295a:	f04f 0900 	mov.w	r9, #0
 801295e:	f8d8 0000 	ldr.w	r0, [r8]
 8012962:	45b9      	cmp	r9, r7
 8012964:	6803      	ldr	r3, [r0, #0]
 8012966:	da73      	bge.n	8012a50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8012968:	6add      	ldr	r5, [r3, #44]	; 0x2c
 801296a:	4632      	mov	r2, r6
 801296c:	465b      	mov	r3, fp
 801296e:	4621      	mov	r1, r4
 8012970:	47a8      	blx	r5
 8012972:	f8ba 3000 	ldrh.w	r3, [sl]
 8012976:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801297a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801297e:	f109 0901 	add.w	r9, r9, #1
 8012982:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012986:	e7ea      	b.n	801295e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 8012988:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 801298c:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8012990:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8012994:	f04f 0b00 	mov.w	fp, #0
 8012998:	fa1f f389 	uxth.w	r3, r9
 801299c:	fa1f f888 	uxth.w	r8, r8
 80129a0:	9207      	str	r2, [sp, #28]
 80129a2:	45bb      	cmp	fp, r7
 80129a4:	da54      	bge.n	8012a50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 80129a6:	f04f 0e00 	mov.w	lr, #0
 80129aa:	45ae      	cmp	lr, r5
 80129ac:	da41      	bge.n	8012a32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 80129ae:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 80129b2:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 80129b6:	1208      	asrs	r0, r1, #8
 80129b8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80129bc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80129c0:	fb10 f008 	smulbb	r0, r0, r8
 80129c4:	ea4f 09e1 	mov.w	r9, r1, asr #3
 80129c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80129cc:	00c9      	lsls	r1, r1, #3
 80129ce:	fb0c 0c03 	mla	ip, ip, r3, r0
 80129d2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80129d6:	10d0      	asrs	r0, r2, #3
 80129d8:	b2c9      	uxtb	r1, r1
 80129da:	00d2      	lsls	r2, r2, #3
 80129dc:	fa1f fc8c 	uxth.w	ip, ip
 80129e0:	fb19 f908 	smulbb	r9, r9, r8
 80129e4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80129e8:	b2d2      	uxtb	r2, r2
 80129ea:	fb11 f108 	smulbb	r1, r1, r8
 80129ee:	fb00 9003 	mla	r0, r0, r3, r9
 80129f2:	fb02 1203 	mla	r2, r2, r3, r1
 80129f6:	f10c 0901 	add.w	r9, ip, #1
 80129fa:	b292      	uxth	r2, r2
 80129fc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012a00:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8012a04:	f102 0c01 	add.w	ip, r2, #1
 8012a08:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012a0c:	b280      	uxth	r0, r0
 8012a0e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012a12:	ea49 0c02 	orr.w	ip, r9, r2
 8012a16:	f100 0901 	add.w	r9, r0, #1
 8012a1a:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8012a1e:	0940      	lsrs	r0, r0, #5
 8012a20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012a24:	ea4c 0c00 	orr.w	ip, ip, r0
 8012a28:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 8012a2c:	f10e 0e01 	add.w	lr, lr, #1
 8012a30:	e7bb      	b.n	80129aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 8012a32:	9a07      	ldr	r2, [sp, #28]
 8012a34:	8812      	ldrh	r2, [r2, #0]
 8012a36:	1b52      	subs	r2, r2, r5
 8012a38:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8012a3c:	4414      	add	r4, r2
 8012a3e:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 8012a42:	1b52      	subs	r2, r2, r5
 8012a44:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8012a48:	4416      	add	r6, r2
 8012a4a:	f10b 0b01 	add.w	fp, fp, #1
 8012a4e:	e7a8      	b.n	80129a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 8012a50:	4b03      	ldr	r3, [pc, #12]	; (8012a60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 8012a52:	6818      	ldr	r0, [r3, #0]
 8012a54:	6803      	ldr	r3, [r0, #0]
 8012a56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012a58:	4798      	blx	r3
 8012a5a:	e762      	b.n	8012922 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012a5c:	2000179a 	.word	0x2000179a
 8012a60:	200017a0 	.word	0x200017a0

08012a64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012a64:	b510      	push	{r4, lr}
 8012a66:	2104      	movs	r1, #4
 8012a68:	4604      	mov	r4, r0
 8012a6a:	f008 ff60 	bl	801b92e <_ZdlPvj>
 8012a6e:	4620      	mov	r0, r4
 8012a70:	bd10      	pop	{r4, pc}

08012a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012a72:	b510      	push	{r4, lr}
 8012a74:	2104      	movs	r1, #4
 8012a76:	4604      	mov	r4, r0
 8012a78:	f008 ff59 	bl	801b92e <_ZdlPvj>
 8012a7c:	4620      	mov	r0, r4
 8012a7e:	bd10      	pop	{r4, pc}

08012a80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012a80:	b510      	push	{r4, lr}
 8012a82:	2104      	movs	r1, #4
 8012a84:	4604      	mov	r4, r0
 8012a86:	f008 ff52 	bl	801b92e <_ZdlPvj>
 8012a8a:	4620      	mov	r0, r4
 8012a8c:	bd10      	pop	{r4, pc}

08012a8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012a8e:	b510      	push	{r4, lr}
 8012a90:	2104      	movs	r1, #4
 8012a92:	4604      	mov	r4, r0
 8012a94:	f008 ff4b 	bl	801b92e <_ZdlPvj>
 8012a98:	4620      	mov	r0, r4
 8012a9a:	bd10      	pop	{r4, pc}

08012a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012a9c:	b510      	push	{r4, lr}
 8012a9e:	2104      	movs	r1, #4
 8012aa0:	4604      	mov	r4, r0
 8012aa2:	f008 ff44 	bl	801b92e <_ZdlPvj>
 8012aa6:	4620      	mov	r0, r4
 8012aa8:	bd10      	pop	{r4, pc}

08012aaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012aaa:	b510      	push	{r4, lr}
 8012aac:	2104      	movs	r1, #4
 8012aae:	4604      	mov	r4, r0
 8012ab0:	f008 ff3d 	bl	801b92e <_ZdlPvj>
 8012ab4:	4620      	mov	r0, r4
 8012ab6:	bd10      	pop	{r4, pc}

08012ab8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012ab8:	b510      	push	{r4, lr}
 8012aba:	2104      	movs	r1, #4
 8012abc:	4604      	mov	r4, r0
 8012abe:	f008 ff36 	bl	801b92e <_ZdlPvj>
 8012ac2:	4620      	mov	r0, r4
 8012ac4:	bd10      	pop	{r4, pc}

08012ac6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012ac6:	b510      	push	{r4, lr}
 8012ac8:	2104      	movs	r1, #4
 8012aca:	4604      	mov	r4, r0
 8012acc:	f008 ff2f 	bl	801b92e <_ZdlPvj>
 8012ad0:	4620      	mov	r0, r4
 8012ad2:	bd10      	pop	{r4, pc}

08012ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012ad4:	b510      	push	{r4, lr}
 8012ad6:	2104      	movs	r1, #4
 8012ad8:	4604      	mov	r4, r0
 8012ada:	f008 ff28 	bl	801b92e <_ZdlPvj>
 8012ade:	4620      	mov	r0, r4
 8012ae0:	bd10      	pop	{r4, pc}

08012ae2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012ae2:	b510      	push	{r4, lr}
 8012ae4:	2104      	movs	r1, #4
 8012ae6:	4604      	mov	r4, r0
 8012ae8:	f008 ff21 	bl	801b92e <_ZdlPvj>
 8012aec:	4620      	mov	r0, r4
 8012aee:	bd10      	pop	{r4, pc}

08012af0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012af0:	b510      	push	{r4, lr}
 8012af2:	2104      	movs	r1, #4
 8012af4:	4604      	mov	r4, r0
 8012af6:	f008 ff1a 	bl	801b92e <_ZdlPvj>
 8012afa:	4620      	mov	r0, r4
 8012afc:	bd10      	pop	{r4, pc}

08012afe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012afe:	b510      	push	{r4, lr}
 8012b00:	2104      	movs	r1, #4
 8012b02:	4604      	mov	r4, r0
 8012b04:	f008 ff13 	bl	801b92e <_ZdlPvj>
 8012b08:	4620      	mov	r0, r4
 8012b0a:	bd10      	pop	{r4, pc}

08012b0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012b0c:	b510      	push	{r4, lr}
 8012b0e:	2104      	movs	r1, #4
 8012b10:	4604      	mov	r4, r0
 8012b12:	f008 ff0c 	bl	801b92e <_ZdlPvj>
 8012b16:	4620      	mov	r0, r4
 8012b18:	bd10      	pop	{r4, pc}

08012b1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012b1a:	b510      	push	{r4, lr}
 8012b1c:	2104      	movs	r1, #4
 8012b1e:	4604      	mov	r4, r0
 8012b20:	f008 ff05 	bl	801b92e <_ZdlPvj>
 8012b24:	4620      	mov	r0, r4
 8012b26:	bd10      	pop	{r4, pc}

08012b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012b28:	b510      	push	{r4, lr}
 8012b2a:	2104      	movs	r1, #4
 8012b2c:	4604      	mov	r4, r0
 8012b2e:	f008 fefe 	bl	801b92e <_ZdlPvj>
 8012b32:	4620      	mov	r0, r4
 8012b34:	bd10      	pop	{r4, pc}

08012b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012b36:	b510      	push	{r4, lr}
 8012b38:	2104      	movs	r1, #4
 8012b3a:	4604      	mov	r4, r0
 8012b3c:	f008 fef7 	bl	801b92e <_ZdlPvj>
 8012b40:	4620      	mov	r0, r4
 8012b42:	bd10      	pop	{r4, pc}

08012b44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012b44:	b510      	push	{r4, lr}
 8012b46:	2104      	movs	r1, #4
 8012b48:	4604      	mov	r4, r0
 8012b4a:	f008 fef0 	bl	801b92e <_ZdlPvj>
 8012b4e:	4620      	mov	r0, r4
 8012b50:	bd10      	pop	{r4, pc}

08012b52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012b52:	b510      	push	{r4, lr}
 8012b54:	2104      	movs	r1, #4
 8012b56:	4604      	mov	r4, r0
 8012b58:	f008 fee9 	bl	801b92e <_ZdlPvj>
 8012b5c:	4620      	mov	r0, r4
 8012b5e:	bd10      	pop	{r4, pc}

08012b60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012b60:	b510      	push	{r4, lr}
 8012b62:	2104      	movs	r1, #4
 8012b64:	4604      	mov	r4, r0
 8012b66:	f008 fee2 	bl	801b92e <_ZdlPvj>
 8012b6a:	4620      	mov	r0, r4
 8012b6c:	bd10      	pop	{r4, pc}

08012b6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012b6e:	b510      	push	{r4, lr}
 8012b70:	2104      	movs	r1, #4
 8012b72:	4604      	mov	r4, r0
 8012b74:	f008 fedb 	bl	801b92e <_ZdlPvj>
 8012b78:	4620      	mov	r0, r4
 8012b7a:	bd10      	pop	{r4, pc}

08012b7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012b7c:	b510      	push	{r4, lr}
 8012b7e:	2104      	movs	r1, #4
 8012b80:	4604      	mov	r4, r0
 8012b82:	f008 fed4 	bl	801b92e <_ZdlPvj>
 8012b86:	4620      	mov	r0, r4
 8012b88:	bd10      	pop	{r4, pc}

08012b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012b8a:	b510      	push	{r4, lr}
 8012b8c:	2104      	movs	r1, #4
 8012b8e:	4604      	mov	r4, r0
 8012b90:	f008 fecd 	bl	801b92e <_ZdlPvj>
 8012b94:	4620      	mov	r0, r4
 8012b96:	bd10      	pop	{r4, pc}

08012b98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012b98:	b510      	push	{r4, lr}
 8012b9a:	2104      	movs	r1, #4
 8012b9c:	4604      	mov	r4, r0
 8012b9e:	f008 fec6 	bl	801b92e <_ZdlPvj>
 8012ba2:	4620      	mov	r0, r4
 8012ba4:	bd10      	pop	{r4, pc}

08012ba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012ba6:	b510      	push	{r4, lr}
 8012ba8:	2104      	movs	r1, #4
 8012baa:	4604      	mov	r4, r0
 8012bac:	f008 febf 	bl	801b92e <_ZdlPvj>
 8012bb0:	4620      	mov	r0, r4
 8012bb2:	bd10      	pop	{r4, pc}

08012bb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012bb4:	b510      	push	{r4, lr}
 8012bb6:	2104      	movs	r1, #4
 8012bb8:	4604      	mov	r4, r0
 8012bba:	f008 feb8 	bl	801b92e <_ZdlPvj>
 8012bbe:	4620      	mov	r0, r4
 8012bc0:	bd10      	pop	{r4, pc}

08012bc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8012bc2:	b510      	push	{r4, lr}
 8012bc4:	2104      	movs	r1, #4
 8012bc6:	4604      	mov	r4, r0
 8012bc8:	f008 feb1 	bl	801b92e <_ZdlPvj>
 8012bcc:	4620      	mov	r0, r4
 8012bce:	bd10      	pop	{r4, pc}

08012bd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8012bd0:	b510      	push	{r4, lr}
 8012bd2:	2104      	movs	r1, #4
 8012bd4:	4604      	mov	r4, r0
 8012bd6:	f008 feaa 	bl	801b92e <_ZdlPvj>
 8012bda:	4620      	mov	r0, r4
 8012bdc:	bd10      	pop	{r4, pc}

08012bde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012bde:	b510      	push	{r4, lr}
 8012be0:	2104      	movs	r1, #4
 8012be2:	4604      	mov	r4, r0
 8012be4:	f008 fea3 	bl	801b92e <_ZdlPvj>
 8012be8:	4620      	mov	r0, r4
 8012bea:	bd10      	pop	{r4, pc}

08012bec <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bf0:	460e      	mov	r6, r1
 8012bf2:	b08b      	sub	sp, #44	; 0x2c
 8012bf4:	4615      	mov	r5, r2
 8012bf6:	461c      	mov	r4, r3
 8012bf8:	b323      	cbz	r3, 8012c44 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8012bfa:	4608      	mov	r0, r1
 8012bfc:	f7f9 fa66 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c00:	bb00      	cbnz	r0, 8012c44 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8012c02:	6830      	ldr	r0, [r6, #0]
 8012c04:	6871      	ldr	r1, [r6, #4]
 8012c06:	4e55      	ldr	r6, [pc, #340]	; (8012d5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8012c08:	ab08      	add	r3, sp, #32
 8012c0a:	c303      	stmia	r3!, {r0, r1}
 8012c0c:	a808      	add	r0, sp, #32
 8012c0e:	f7fb fab9 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012c12:	6830      	ldr	r0, [r6, #0]
 8012c14:	6803      	ldr	r3, [r0, #0]
 8012c16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012c18:	4798      	blx	r3
 8012c1a:	2cff      	cmp	r4, #255	; 0xff
 8012c1c:	d015      	beq.n	8012c4a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 8012c1e:	f010 0f08 	tst.w	r0, #8
 8012c22:	d015      	beq.n	8012c50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 8012c24:	6830      	ldr	r0, [r6, #0]
 8012c26:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012c2a:	6801      	ldr	r1, [r0, #0]
 8012c2c:	9402      	str	r4, [sp, #8]
 8012c2e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8012c32:	9401      	str	r4, [sp, #4]
 8012c34:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8012c38:	9400      	str	r4, [sp, #0]
 8012c3a:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 8012c3c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012c40:	4629      	mov	r1, r5
 8012c42:	47a0      	blx	r4
 8012c44:	b00b      	add	sp, #44	; 0x2c
 8012c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c4a:	f010 0f02 	tst.w	r0, #2
 8012c4e:	e7e8      	b.n	8012c22 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012c50:	6830      	ldr	r0, [r6, #0]
 8012c52:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8012c56:	6803      	ldr	r3, [r0, #0]
 8012c58:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8012c5c:	6a1b      	ldr	r3, [r3, #32]
 8012c5e:	4798      	blx	r3
 8012c60:	4a3f      	ldr	r2, [pc, #252]	; (8012d60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 8012c62:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012c66:	8816      	ldrh	r6, [r2, #0]
 8012c68:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012c6c:	2cff      	cmp	r4, #255	; 0xff
 8012c6e:	fb06 1303 	mla	r3, r6, r3, r1
 8012c72:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012c76:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8012c7a:	4616      	mov	r6, r2
 8012c7c:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8012c80:	d10a      	bne.n	8012c98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8012c82:	0049      	lsls	r1, r1, #1
 8012c84:	2200      	movs	r2, #0
 8012c86:	454a      	cmp	r2, r9
 8012c88:	da62      	bge.n	8012d50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8012c8a:	2300      	movs	r3, #0
 8012c8c:	4543      	cmp	r3, r8
 8012c8e:	da58      	bge.n	8012d42 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x156>
 8012c90:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8012c94:	3301      	adds	r3, #1
 8012c96:	e7f9      	b.n	8012c8c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8012c98:	122b      	asrs	r3, r5, #8
 8012c9a:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 8012c9e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012ca2:	b2a4      	uxth	r4, r4
 8012ca4:	4363      	muls	r3, r4
 8012ca6:	9305      	str	r3, [sp, #20]
 8012ca8:	f3c5 06cc 	ubfx	r6, r5, #3, #13
 8012cac:	00eb      	lsls	r3, r5, #3
 8012cae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012cb2:	b2db      	uxtb	r3, r3
 8012cb4:	0049      	lsls	r1, r1, #1
 8012cb6:	4366      	muls	r6, r4
 8012cb8:	4363      	muls	r3, r4
 8012cba:	9106      	str	r1, [sp, #24]
 8012cbc:	f04f 0c00 	mov.w	ip, #0
 8012cc0:	b2bf      	uxth	r7, r7
 8012cc2:	9207      	str	r2, [sp, #28]
 8012cc4:	45cc      	cmp	ip, r9
 8012cc6:	da43      	bge.n	8012d50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8012cc8:	4682      	mov	sl, r0
 8012cca:	f04f 0e00 	mov.w	lr, #0
 8012cce:	45c6      	cmp	lr, r8
 8012cd0:	da2d      	bge.n	8012d2e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x142>
 8012cd2:	f8ba 2000 	ldrh.w	r2, [sl]
 8012cd6:	9905      	ldr	r1, [sp, #20]
 8012cd8:	1214      	asrs	r4, r2, #8
 8012cda:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012cde:	fb14 f407 	smulbb	r4, r4, r7
 8012ce2:	440c      	add	r4, r1
 8012ce4:	10d1      	asrs	r1, r2, #3
 8012ce6:	00d2      	lsls	r2, r2, #3
 8012ce8:	b2d2      	uxtb	r2, r2
 8012cea:	fb12 f207 	smulbb	r2, r2, r7
 8012cee:	b2a4      	uxth	r4, r4
 8012cf0:	441a      	add	r2, r3
 8012cf2:	b292      	uxth	r2, r2
 8012cf4:	1c65      	adds	r5, r4, #1
 8012cf6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012cfa:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8012cfe:	fb11 f107 	smulbb	r1, r1, r7
 8012d02:	1c55      	adds	r5, r2, #1
 8012d04:	4431      	add	r1, r6
 8012d06:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8012d0a:	b289      	uxth	r1, r1
 8012d0c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012d10:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8012d14:	4314      	orrs	r4, r2
 8012d16:	1c4a      	adds	r2, r1, #1
 8012d18:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8012d1c:	0949      	lsrs	r1, r1, #5
 8012d1e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012d22:	430c      	orrs	r4, r1
 8012d24:	f82a 4b02 	strh.w	r4, [sl], #2
 8012d28:	f10e 0e01 	add.w	lr, lr, #1
 8012d2c:	e7cf      	b.n	8012cce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe2>
 8012d2e:	9a07      	ldr	r2, [sp, #28]
 8012d30:	9906      	ldr	r1, [sp, #24]
 8012d32:	8812      	ldrh	r2, [r2, #0]
 8012d34:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 8012d38:	440a      	add	r2, r1
 8012d3a:	4410      	add	r0, r2
 8012d3c:	f10c 0c01 	add.w	ip, ip, #1
 8012d40:	e7c0      	b.n	8012cc4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd8>
 8012d42:	8833      	ldrh	r3, [r6, #0]
 8012d44:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 8012d48:	440b      	add	r3, r1
 8012d4a:	4418      	add	r0, r3
 8012d4c:	3201      	adds	r2, #1
 8012d4e:	e79a      	b.n	8012c86 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 8012d50:	4b02      	ldr	r3, [pc, #8]	; (8012d5c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8012d52:	6818      	ldr	r0, [r3, #0]
 8012d54:	6803      	ldr	r3, [r0, #0]
 8012d56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012d58:	4798      	blx	r3
 8012d5a:	e773      	b.n	8012c44 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8012d5c:	200017a0 	.word	0x200017a0
 8012d60:	2000179a 	.word	0x2000179a

08012d64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8012d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d68:	4d9b      	ldr	r5, [pc, #620]	; (8012fd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8012d6a:	4690      	mov	r8, r2
 8012d6c:	682a      	ldr	r2, [r5, #0]
 8012d6e:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8012d72:	2a02      	cmp	r2, #2
 8012d74:	b08f      	sub	sp, #60	; 0x3c
 8012d76:	4604      	mov	r4, r0
 8012d78:	4689      	mov	r9, r1
 8012d7a:	d106      	bne.n	8012d8a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8012d7c:	4b97      	ldr	r3, [pc, #604]	; (8012fdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8012d7e:	4a98      	ldr	r2, [pc, #608]	; (8012fe0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012d80:	f240 21c2 	movw	r1, #706	; 0x2c2
 8012d84:	4897      	ldr	r0, [pc, #604]	; (8012fe4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8012d86:	f008 fe01 	bl	801b98c <__assert_func>
 8012d8a:	ae0e      	add	r6, sp, #56	; 0x38
 8012d8c:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8012d90:	4630      	mov	r0, r6
 8012d92:	f7fd facf 	bl	8010334 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012d96:	6823      	ldr	r3, [r4, #0]
 8012d98:	4607      	mov	r7, r0
 8012d9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012d9c:	4620      	mov	r0, r4
 8012d9e:	4798      	blx	r3
 8012da0:	4287      	cmp	r7, r0
 8012da2:	d004      	beq.n	8012dae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8012da4:	4b90      	ldr	r3, [pc, #576]	; (8012fe8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8012da6:	4a8e      	ldr	r2, [pc, #568]	; (8012fe0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012da8:	f44f 7131 	mov.w	r1, #708	; 0x2c4
 8012dac:	e7ea      	b.n	8012d84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012dae:	4630      	mov	r0, r6
 8012db0:	f7fd fa3c 	bl	801022c <_ZNK8touchgfx6Bitmap7getDataEv>
 8012db4:	4607      	mov	r7, r0
 8012db6:	b920      	cbnz	r0, 8012dc2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8012db8:	4b8c      	ldr	r3, [pc, #560]	; (8012fec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 8012dba:	4a89      	ldr	r2, [pc, #548]	; (8012fe0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012dbc:	f240 21c6 	movw	r1, #710	; 0x2c6
 8012dc0:	e7e0      	b.n	8012d84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012dc2:	f8d8 0000 	ldr.w	r0, [r8]
 8012dc6:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8012dca:	f9b8 a000 	ldrsh.w	sl, [r8]
 8012dce:	ab06      	add	r3, sp, #24
 8012dd0:	c303      	stmia	r3!, {r0, r1}
 8012dd2:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8012dd6:	f8d9 0000 	ldr.w	r0, [r9]
 8012dda:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 8012dde:	ab08      	add	r3, sp, #32
 8012de0:	c303      	stmia	r3!, {r0, r1}
 8012de2:	4630      	mov	r0, r6
 8012de4:	f7fd f91a 	bl	801001c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012de8:	4680      	mov	r8, r0
 8012dea:	4630      	mov	r0, r6
 8012dec:	f7fd f950 	bl	8010090 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012df0:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012df4:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8012df8:	f10d 0920 	add.w	r9, sp, #32
 8012dfc:	a806      	add	r0, sp, #24
 8012dfe:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8012e02:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8012e06:	f7fb f9bd 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012e0a:	4648      	mov	r0, r9
 8012e0c:	f7fb f9ba 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012e10:	a80a      	add	r0, sp, #40	; 0x28
 8012e12:	f7fb f9b7 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012e16:	4e76      	ldr	r6, [pc, #472]	; (8012ff0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8012e18:	4b76      	ldr	r3, [pc, #472]	; (8012ff4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8012e1a:	f9b6 2000 	ldrsh.w	r2, [r6]
 8012e1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012e22:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012e26:	2100      	movs	r1, #0
 8012e28:	910c      	str	r1, [sp, #48]	; 0x30
 8012e2a:	4648      	mov	r0, r9
 8012e2c:	a90c      	add	r1, sp, #48	; 0x30
 8012e2e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012e32:	f7f9 f907 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 8012e36:	4648      	mov	r0, r9
 8012e38:	f7f9 f948 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 8012e3c:	2800      	cmp	r0, #0
 8012e3e:	f040 80bd 	bne.w	8012fbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012e42:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8012e46:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8012e4a:	4288      	cmp	r0, r1
 8012e4c:	db37      	blt.n	8012ebe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012e4e:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8012e52:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012e56:	429a      	cmp	r2, r3
 8012e58:	db31      	blt.n	8012ebe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012e5a:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8012e5e:	4460      	add	r0, ip
 8012e60:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 8012e64:	4461      	add	r1, ip
 8012e66:	b200      	sxth	r0, r0
 8012e68:	b209      	sxth	r1, r1
 8012e6a:	4288      	cmp	r0, r1
 8012e6c:	dc27      	bgt.n	8012ebe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012e6e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8012e72:	440a      	add	r2, r1
 8012e74:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8012e78:	440b      	add	r3, r1
 8012e7a:	b212      	sxth	r2, r2
 8012e7c:	b21b      	sxth	r3, r3
 8012e7e:	429a      	cmp	r2, r3
 8012e80:	dc1d      	bgt.n	8012ebe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012e82:	6823      	ldr	r3, [r4, #0]
 8012e84:	4620      	mov	r0, r4
 8012e86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e88:	4798      	blx	r3
 8012e8a:	4682      	mov	sl, r0
 8012e8c:	6828      	ldr	r0, [r5, #0]
 8012e8e:	6803      	ldr	r3, [r0, #0]
 8012e90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e92:	4798      	blx	r3
 8012e94:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012e98:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012e9c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8012ea0:	1a9b      	subs	r3, r3, r2
 8012ea2:	b29b      	uxth	r3, r3
 8012ea4:	b21c      	sxth	r4, r3
 8012ea6:	2c00      	cmp	r4, #0
 8012ea8:	dc0e      	bgt.n	8012ec8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 8012eaa:	bf1f      	itttt	ne
 8012eac:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8012eb0:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 8012eb4:	189b      	addne	r3, r3, r2
 8012eb6:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8012eba:	463c      	mov	r4, r7
 8012ebc:	e00a      	b.n	8012ed4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 8012ebe:	4b4e      	ldr	r3, [pc, #312]	; (8012ff8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8012ec0:	4a47      	ldr	r2, [pc, #284]	; (8012fe0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012ec2:	f44f 7135 	mov.w	r1, #724	; 0x2d4
 8012ec6:	e75d      	b.n	8012d84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012ec8:	ebab 0303 	sub.w	r3, fp, r3
 8012ecc:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8012ed0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8012ed4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8012ed8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012edc:	1a5b      	subs	r3, r3, r1
 8012ede:	b29b      	uxth	r3, r3
 8012ee0:	b21a      	sxth	r2, r3
 8012ee2:	2a00      	cmp	r2, #0
 8012ee4:	dd4a      	ble.n	8012f7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8012ee6:	fb02 f20b 	mul.w	r2, r2, fp
 8012eea:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8012eee:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8012ef2:	1ad3      	subs	r3, r2, r3
 8012ef4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012ef8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8012efc:	2b00      	cmp	r3, #0
 8012efe:	dd5d      	ble.n	8012fbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012f00:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8012f04:	f1bc 0f00 	cmp.w	ip, #0
 8012f08:	dd58      	ble.n	8012fbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012f0a:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8012f0e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012f12:	fb0a f801 	mul.w	r8, sl, r1
 8012f16:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8012f1a:	4480      	add	r8, r0
 8012f1c:	8830      	ldrh	r0, [r6, #0]
 8012f1e:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8012f22:	42b3      	cmp	r3, r6
 8012f24:	bfa8      	it	ge
 8012f26:	4633      	movge	r3, r6
 8012f28:	1a82      	subs	r2, r0, r2
 8012f2a:	4293      	cmp	r3, r2
 8012f2c:	bfa8      	it	ge
 8012f2e:	4613      	movge	r3, r2
 8012f30:	4a30      	ldr	r2, [pc, #192]	; (8012ff4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8012f32:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8012f36:	8812      	ldrh	r2, [r2, #0]
 8012f38:	4566      	cmp	r6, ip
 8012f3a:	eba2 0101 	sub.w	r1, r2, r1
 8012f3e:	bfa8      	it	ge
 8012f40:	4666      	movge	r6, ip
 8012f42:	428e      	cmp	r6, r1
 8012f44:	4632      	mov	r2, r6
 8012f46:	bfa8      	it	ge
 8012f48:	460a      	movge	r2, r1
 8012f4a:	4298      	cmp	r0, r3
 8012f4c:	9202      	str	r2, [sp, #8]
 8012f4e:	d01e      	beq.n	8012f8e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8012f50:	005b      	lsls	r3, r3, #1
 8012f52:	9303      	str	r3, [sp, #12]
 8012f54:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8012f58:	f04f 0900 	mov.w	r9, #0
 8012f5c:	9b02      	ldr	r3, [sp, #8]
 8012f5e:	454b      	cmp	r3, r9
 8012f60:	dd2c      	ble.n	8012fbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012f62:	6828      	ldr	r0, [r5, #0]
 8012f64:	6803      	ldr	r3, [r0, #0]
 8012f66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f68:	4642      	mov	r2, r8
 8012f6a:	461e      	mov	r6, r3
 8012f6c:	4621      	mov	r1, r4
 8012f6e:	9b03      	ldr	r3, [sp, #12]
 8012f70:	47b0      	blx	r6
 8012f72:	44d0      	add	r8, sl
 8012f74:	445c      	add	r4, fp
 8012f76:	f109 0901 	add.w	r9, r9, #1
 8012f7a:	e7ef      	b.n	8012f5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8012f7c:	bf1f      	itttt	ne
 8012f7e:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 8012f82:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 8012f86:	189b      	addne	r3, r3, r2
 8012f88:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8012f8c:	e7b4      	b.n	8012ef8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8012f8e:	4558      	cmp	r0, fp
 8012f90:	d1de      	bne.n	8012f50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 8012f92:	6828      	ldr	r0, [r5, #0]
 8012f94:	6803      	ldr	r3, [r0, #0]
 8012f96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012f98:	4798      	blx	r3
 8012f9a:	07c3      	lsls	r3, r0, #31
 8012f9c:	d512      	bpl.n	8012fc4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8012f9e:	6828      	ldr	r0, [r5, #0]
 8012fa0:	9b02      	ldr	r3, [sp, #8]
 8012fa2:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8012fa6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012faa:	6803      	ldr	r3, [r0, #0]
 8012fac:	f8cd b000 	str.w	fp, [sp]
 8012fb0:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8012fb2:	e899 0006 	ldmia.w	r9, {r1, r2}
 8012fb6:	4623      	mov	r3, r4
 8012fb8:	47a8      	blx	r5
 8012fba:	4607      	mov	r7, r0
 8012fbc:	4638      	mov	r0, r7
 8012fbe:	b00f      	add	sp, #60	; 0x3c
 8012fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012fc4:	6828      	ldr	r0, [r5, #0]
 8012fc6:	6803      	ldr	r3, [r0, #0]
 8012fc8:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8012fca:	9b02      	ldr	r3, [sp, #8]
 8012fcc:	4642      	mov	r2, r8
 8012fce:	fb03 f30a 	mul.w	r3, r3, sl
 8012fd2:	4621      	mov	r1, r4
 8012fd4:	47a8      	blx	r5
 8012fd6:	e7f1      	b.n	8012fbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012fd8:	200017a0 	.word	0x200017a0
 8012fdc:	08020f63 	.word	0x08020f63
 8012fe0:	080217a7 	.word	0x080217a7
 8012fe4:	08021017 	.word	0x08021017
 8012fe8:	08021049 	.word	0x08021049
 8012fec:	0802109e 	.word	0x0802109e
 8012ff0:	2000179a 	.word	0x2000179a
 8012ff4:	2000179c 	.word	0x2000179c
 8012ff8:	080210dc 	.word	0x080210dc

08012ffc <_ZN8touchgfx8LCD16bppC1Ev>:
 8012ffc:	2200      	movs	r2, #0
 8012ffe:	4910      	ldr	r1, [pc, #64]	; (8013040 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8013000:	6042      	str	r2, [r0, #4]
 8013002:	6001      	str	r1, [r0, #0]
 8013004:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8013008:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801300c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8013010:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8013014:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8013018:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801301c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8013020:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8013024:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8013028:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801302c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8013030:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8013034:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8013038:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801303c:	4770      	bx	lr
 801303e:	bf00      	nop
 8013040:	08021420 	.word	0x08021420

08013044 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8013044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013048:	460c      	mov	r4, r1
 801304a:	b08d      	sub	sp, #52	; 0x34
 801304c:	4682      	mov	sl, r0
 801304e:	6808      	ldr	r0, [r1, #0]
 8013050:	6849      	ldr	r1, [r1, #4]
 8013052:	469b      	mov	fp, r3
 8013054:	ab08      	add	r3, sp, #32
 8013056:	c303      	stmia	r3!, {r0, r1}
 8013058:	6810      	ldr	r0, [r2, #0]
 801305a:	6851      	ldr	r1, [r2, #4]
 801305c:	ab0a      	add	r3, sp, #40	; 0x28
 801305e:	c303      	stmia	r3!, {r0, r1}
 8013060:	a808      	add	r0, sp, #32
 8013062:	f7fb f88f 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013066:	4621      	mov	r1, r4
 8013068:	a80a      	add	r0, sp, #40	; 0x28
 801306a:	f7fb f873 	bl	800e154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801306e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8013072:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8013076:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801307a:	4c60      	ldr	r4, [pc, #384]	; (80131fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 801307c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8013080:	6820      	ldr	r0, [r4, #0]
 8013082:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 8013086:	fb11 2103 	smlabb	r1, r1, r3, r2
 801308a:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 801308e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8013092:	440a      	add	r2, r1
 8013094:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013098:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801309c:	4413      	add	r3, r2
 801309e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80130a2:	6803      	ldr	r3, [r0, #0]
 80130a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80130a6:	4798      	blx	r3
 80130a8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80130ac:	d119      	bne.n	80130e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80130ae:	f010 0f20 	tst.w	r0, #32
 80130b2:	6820      	ldr	r0, [r4, #0]
 80130b4:	d018      	beq.n	80130e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80130b6:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80130ba:	6801      	ldr	r1, [r0, #0]
 80130bc:	9402      	str	r4, [sp, #8]
 80130be:	fa1f f489 	uxth.w	r4, r9
 80130c2:	9401      	str	r4, [sp, #4]
 80130c4:	fa1f f488 	uxth.w	r4, r8
 80130c8:	f8cd b00c 	str.w	fp, [sp, #12]
 80130cc:	9400      	str	r4, [sp, #0]
 80130ce:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80130d0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80130d4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80130d8:	4651      	mov	r1, sl
 80130da:	47a0      	blx	r4
 80130dc:	b00d      	add	sp, #52	; 0x34
 80130de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130e2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80130e6:	e7e4      	b.n	80130b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80130e8:	6803      	ldr	r3, [r0, #0]
 80130ea:	6a1b      	ldr	r3, [r3, #32]
 80130ec:	4798      	blx	r3
 80130ee:	4a44      	ldr	r2, [pc, #272]	; (8013200 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 80130f0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80130f4:	8813      	ldrh	r3, [r2, #0]
 80130f6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80130fa:	9207      	str	r2, [sp, #28]
 80130fc:	fb04 1303 	mla	r3, r4, r3, r1
 8013100:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013104:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8013108:	0099      	lsls	r1, r3, #2
 801310a:	005b      	lsls	r3, r3, #1
 801310c:	9106      	str	r1, [sp, #24]
 801310e:	9305      	str	r3, [sp, #20]
 8013110:	f04f 0c00 	mov.w	ip, #0
 8013114:	45cc      	cmp	ip, r9
 8013116:	da6b      	bge.n	80131f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 8013118:	2300      	movs	r3, #0
 801311a:	4543      	cmp	r3, r8
 801311c:	da55      	bge.n	80131ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 801311e:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 8013122:	0e25      	lsrs	r5, r4, #24
 8013124:	d013      	beq.n	801314e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8013126:	2dff      	cmp	r5, #255	; 0xff
 8013128:	ea4f 2714 	mov.w	r7, r4, lsr #8
 801312c:	d111      	bne.n	8013152 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 801312e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013132:	d10e      	bne.n	8013152 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8013134:	0962      	lsrs	r2, r4, #5
 8013136:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801313a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801313e:	f027 0707 	bic.w	r7, r7, #7
 8013142:	4317      	orrs	r7, r2
 8013144:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013148:	433c      	orrs	r4, r7
 801314a:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 801314e:	3301      	adds	r3, #1
 8013150:	e7e3      	b.n	801311a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 8013152:	fb0b f505 	mul.w	r5, fp, r5
 8013156:	1c6a      	adds	r2, r5, #1
 8013158:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 801315c:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8013160:	1212      	asrs	r2, r2, #8
 8013162:	fa1f fe82 	uxth.w	lr, r2
 8013166:	120e      	asrs	r6, r1, #8
 8013168:	f3c4 4507 	ubfx	r5, r4, #16, #8
 801316c:	43d2      	mvns	r2, r2
 801316e:	b2d2      	uxtb	r2, r2
 8013170:	fb15 f50e 	smulbb	r5, r5, lr
 8013174:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013178:	fb06 5602 	mla	r6, r6, r2, r5
 801317c:	b2e4      	uxtb	r4, r4
 801317e:	10cd      	asrs	r5, r1, #3
 8013180:	00c9      	lsls	r1, r1, #3
 8013182:	b2c9      	uxtb	r1, r1
 8013184:	fb14 f40e 	smulbb	r4, r4, lr
 8013188:	fb01 4402 	mla	r4, r1, r2, r4
 801318c:	b2ff      	uxtb	r7, r7
 801318e:	b2b6      	uxth	r6, r6
 8013190:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013194:	b2a4      	uxth	r4, r4
 8013196:	fb17 f70e 	smulbb	r7, r7, lr
 801319a:	fb05 7702 	mla	r7, r5, r2, r7
 801319e:	1c72      	adds	r2, r6, #1
 80131a0:	1c65      	adds	r5, r4, #1
 80131a2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80131a6:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 80131aa:	b2bf      	uxth	r7, r7
 80131ac:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80131b0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80131b4:	432e      	orrs	r6, r5
 80131b6:	1c7d      	adds	r5, r7, #1
 80131b8:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80131bc:	097f      	lsrs	r7, r7, #5
 80131be:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80131c2:	433e      	orrs	r6, r7
 80131c4:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 80131c8:	e7c1      	b.n	801314e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80131ca:	9b07      	ldr	r3, [sp, #28]
 80131cc:	9a05      	ldr	r2, [sp, #20]
 80131ce:	881b      	ldrh	r3, [r3, #0]
 80131d0:	eba3 0308 	sub.w	r3, r3, r8
 80131d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80131d8:	4418      	add	r0, r3
 80131da:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80131de:	9a06      	ldr	r2, [sp, #24]
 80131e0:	eba3 0308 	sub.w	r3, r3, r8
 80131e4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80131e8:	449a      	add	sl, r3
 80131ea:	f10c 0c01 	add.w	ip, ip, #1
 80131ee:	e791      	b.n	8013114 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 80131f0:	4b02      	ldr	r3, [pc, #8]	; (80131fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 80131f2:	6818      	ldr	r0, [r3, #0]
 80131f4:	6803      	ldr	r3, [r0, #0]
 80131f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80131f8:	4798      	blx	r3
 80131fa:	e76f      	b.n	80130dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80131fc:	200017a0 	.word	0x200017a0
 8013200:	2000179a 	.word	0x2000179a

08013204 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8013204:	b570      	push	{r4, r5, r6, lr}
 8013206:	9d04      	ldr	r5, [sp, #16]
 8013208:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801320c:	460c      	mov	r4, r1
 801320e:	4619      	mov	r1, r3
 8013210:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013214:	2a0c      	cmp	r2, #12
 8013216:	d820      	bhi.n	801325a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8013218:	e8df f002 	tbb	[pc, r2]
 801321c:	18121807 	.word	0x18121807
 8013220:	18181818 	.word	0x18181818
 8013224:	18181818 	.word	0x18181818
 8013228:	18          	.byte	0x18
 8013229:	00          	.byte	0x00
 801322a:	6802      	ldr	r2, [r0, #0]
 801322c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8013230:	6916      	ldr	r6, [r2, #16]
 8013232:	462b      	mov	r3, r5
 8013234:	460a      	mov	r2, r1
 8013236:	46b4      	mov	ip, r6
 8013238:	4621      	mov	r1, r4
 801323a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801323e:	4760      	bx	ip
 8013240:	462a      	mov	r2, r5
 8013242:	4620      	mov	r0, r4
 8013244:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013248:	f7ff befc 	b.w	8013044 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801324c:	4b03      	ldr	r3, [pc, #12]	; (801325c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 801324e:	4a04      	ldr	r2, [pc, #16]	; (8013260 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8013250:	4804      	ldr	r0, [pc, #16]	; (8013264 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8013252:	f240 21bb 	movw	r1, #699	; 0x2bb
 8013256:	f008 fb99 	bl	801b98c <__assert_func>
 801325a:	bd70      	pop	{r4, r5, r6, pc}
 801325c:	0802113c 	.word	0x0802113c
 8013260:	0802182d 	.word	0x0802182d
 8013264:	08021017 	.word	0x08021017

08013268 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8013268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801326c:	b093      	sub	sp, #76	; 0x4c
 801326e:	880f      	ldrh	r7, [r1, #0]
 8013270:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8013274:	4681      	mov	r9, r0
 8013276:	4688      	mov	r8, r1
 8013278:	4615      	mov	r5, r2
 801327a:	b12f      	cbz	r7, 8013288 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 801327c:	4b71      	ldr	r3, [pc, #452]	; (8013444 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801327e:	4a72      	ldr	r2, [pc, #456]	; (8013448 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8013280:	4872      	ldr	r0, [pc, #456]	; (801344c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8013282:	21ec      	movs	r1, #236	; 0xec
 8013284:	f008 fb82 	bl	801b98c <__assert_func>
 8013288:	6810      	ldr	r0, [r2, #0]
 801328a:	6851      	ldr	r1, [r2, #4]
 801328c:	ac0e      	add	r4, sp, #56	; 0x38
 801328e:	c403      	stmia	r4!, {r0, r1}
 8013290:	6818      	ldr	r0, [r3, #0]
 8013292:	6859      	ldr	r1, [r3, #4]
 8013294:	ac10      	add	r4, sp, #64	; 0x40
 8013296:	c403      	stmia	r4!, {r0, r1}
 8013298:	a80e      	add	r0, sp, #56	; 0x38
 801329a:	f7fa ff73 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801329e:	4629      	mov	r1, r5
 80132a0:	a810      	add	r0, sp, #64	; 0x40
 80132a2:	f7fa ff57 	bl	800e154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80132a6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80132aa:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80132ae:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80132b2:	4d67      	ldr	r5, [pc, #412]	; (8013450 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 80132b4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80132b8:	6828      	ldr	r0, [r5, #0]
 80132ba:	4c66      	ldr	r4, [pc, #408]	; (8013454 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 80132bc:	fb11 2103 	smlabb	r1, r1, r3, r2
 80132c0:	4489      	add	r9, r1
 80132c2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80132c6:	440a      	add	r2, r1
 80132c8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80132cc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80132d0:	4413      	add	r3, r2
 80132d2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80132d6:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 80132da:	930a      	str	r3, [sp, #40]	; 0x28
 80132dc:	6803      	ldr	r3, [r0, #0]
 80132de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80132e2:	4798      	blx	r3
 80132e4:	2801      	cmp	r0, #1
 80132e6:	d11d      	bne.n	8013324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 80132e8:	220b      	movs	r2, #11
 80132ea:	9708      	str	r7, [sp, #32]
 80132ec:	9207      	str	r2, [sp, #28]
 80132ee:	8822      	ldrh	r2, [r4, #0]
 80132f0:	f8cd a010 	str.w	sl, [sp, #16]
 80132f4:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80132f8:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80132fc:	9203      	str	r2, [sp, #12]
 80132fe:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8013302:	9202      	str	r2, [sp, #8]
 8013304:	fa1f f28b 	uxth.w	r2, fp
 8013308:	9201      	str	r2, [sp, #4]
 801330a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801330e:	9200      	str	r2, [sp, #0]
 8013310:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013314:	6828      	ldr	r0, [r5, #0]
 8013316:	4642      	mov	r2, r8
 8013318:	4649      	mov	r1, r9
 801331a:	f7f9 fae1 	bl	800c8e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801331e:	b013      	add	sp, #76	; 0x4c
 8013320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013324:	6828      	ldr	r0, [r5, #0]
 8013326:	6803      	ldr	r3, [r0, #0]
 8013328:	6a1b      	ldr	r3, [r3, #32]
 801332a:	4798      	blx	r3
 801332c:	8823      	ldrh	r3, [r4, #0]
 801332e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8013332:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013336:	fb01 2303 	mla	r3, r1, r3, r2
 801333a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801333e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 8013342:	930b      	str	r3, [sp, #44]	; 0x2c
 8013344:	005b      	lsls	r3, r3, #1
 8013346:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 801334a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801334c:	429f      	cmp	r7, r3
 801334e:	da72      	bge.n	8013436 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8013350:	2100      	movs	r1, #0
 8013352:	4559      	cmp	r1, fp
 8013354:	da5e      	bge.n	8013414 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8013356:	f819 3001 	ldrb.w	r3, [r9, r1]
 801335a:	2204      	movs	r2, #4
 801335c:	fb12 2303 	smlabb	r3, r2, r3, r2
 8013360:	f858 2003 	ldr.w	r2, [r8, r3]
 8013364:	0e15      	lsrs	r5, r2, #24
 8013366:	d013      	beq.n	8013390 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8013368:	2dff      	cmp	r5, #255	; 0xff
 801336a:	ea4f 2412 	mov.w	r4, r2, lsr #8
 801336e:	d111      	bne.n	8013394 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8013370:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013374:	d10e      	bne.n	8013394 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8013376:	0953      	lsrs	r3, r2, #5
 8013378:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 801337c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013380:	f024 0407 	bic.w	r4, r4, #7
 8013384:	431c      	orrs	r4, r3
 8013386:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801338a:	4314      	orrs	r4, r2
 801338c:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8013390:	3101      	adds	r1, #1
 8013392:	e7de      	b.n	8013352 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 8013394:	fb0a f505 	mul.w	r5, sl, r5
 8013398:	1c6b      	adds	r3, r5, #1
 801339a:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 801339e:	eb03 2325 	add.w	r3, r3, r5, asr #8
 80133a2:	121b      	asrs	r3, r3, #8
 80133a4:	fa1f fe83 	uxth.w	lr, r3
 80133a8:	ea4f 262c 	mov.w	r6, ip, asr #8
 80133ac:	f3c2 4507 	ubfx	r5, r2, #16, #8
 80133b0:	43db      	mvns	r3, r3
 80133b2:	b2db      	uxtb	r3, r3
 80133b4:	fb15 f50e 	smulbb	r5, r5, lr
 80133b8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80133bc:	fb06 5603 	mla	r6, r6, r3, r5
 80133c0:	b2d2      	uxtb	r2, r2
 80133c2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80133c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80133ca:	fa5f fc8c 	uxtb.w	ip, ip
 80133ce:	fb12 f20e 	smulbb	r2, r2, lr
 80133d2:	fb0c 2203 	mla	r2, ip, r3, r2
 80133d6:	b2e4      	uxtb	r4, r4
 80133d8:	b2b6      	uxth	r6, r6
 80133da:	fb14 f40e 	smulbb	r4, r4, lr
 80133de:	b292      	uxth	r2, r2
 80133e0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80133e4:	fb05 4503 	mla	r5, r5, r3, r4
 80133e8:	1c73      	adds	r3, r6, #1
 80133ea:	1c54      	adds	r4, r2, #1
 80133ec:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80133f0:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80133f4:	b2ad      	uxth	r5, r5
 80133f6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80133fa:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80133fe:	4326      	orrs	r6, r4
 8013400:	1c6c      	adds	r4, r5, #1
 8013402:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8013406:	0964      	lsrs	r4, r4, #5
 8013408:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801340c:	4326      	orrs	r6, r4
 801340e:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 8013412:	e7bd      	b.n	8013390 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8013414:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013416:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013418:	881b      	ldrh	r3, [r3, #0]
 801341a:	eba3 030b 	sub.w	r3, r3, fp
 801341e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013422:	4418      	add	r0, r3
 8013424:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8013428:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801342a:	eba3 030b 	sub.w	r3, r3, fp
 801342e:	4413      	add	r3, r2
 8013430:	4499      	add	r9, r3
 8013432:	3701      	adds	r7, #1
 8013434:	e789      	b.n	801334a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8013436:	4b06      	ldr	r3, [pc, #24]	; (8013450 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8013438:	6818      	ldr	r0, [r3, #0]
 801343a:	6803      	ldr	r3, [r0, #0]
 801343c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801343e:	4798      	blx	r3
 8013440:	e76d      	b.n	801331e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 8013442:	bf00      	nop
 8013444:	08020f13 	.word	0x08020f13
 8013448:	080215fe 	.word	0x080215fe
 801344c:	08021017 	.word	0x08021017
 8013450:	200017a0 	.word	0x200017a0
 8013454:	2000179a 	.word	0x2000179a

08013458 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8013458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801345c:	4614      	mov	r4, r2
 801345e:	880a      	ldrh	r2, [r1, #0]
 8013460:	b093      	sub	sp, #76	; 0x4c
 8013462:	2a02      	cmp	r2, #2
 8013464:	4606      	mov	r6, r0
 8013466:	4689      	mov	r9, r1
 8013468:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 801346c:	d006      	beq.n	801347c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801346e:	4b7a      	ldr	r3, [pc, #488]	; (8013658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8013470:	4a7a      	ldr	r2, [pc, #488]	; (801365c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8013472:	487b      	ldr	r0, [pc, #492]	; (8013660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8013474:	f44f 71a3 	mov.w	r1, #326	; 0x146
 8013478:	f008 fa88 	bl	801b98c <__assert_func>
 801347c:	2f00      	cmp	r7, #0
 801347e:	d04b      	beq.n	8013518 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8013480:	6820      	ldr	r0, [r4, #0]
 8013482:	6861      	ldr	r1, [r4, #4]
 8013484:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8013668 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8013488:	ad0e      	add	r5, sp, #56	; 0x38
 801348a:	c503      	stmia	r5!, {r0, r1}
 801348c:	6818      	ldr	r0, [r3, #0]
 801348e:	6859      	ldr	r1, [r3, #4]
 8013490:	ad10      	add	r5, sp, #64	; 0x40
 8013492:	c503      	stmia	r5!, {r0, r1}
 8013494:	a80e      	add	r0, sp, #56	; 0x38
 8013496:	f7fa fe75 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801349a:	4621      	mov	r1, r4
 801349c:	a810      	add	r0, sp, #64	; 0x40
 801349e:	f7fa fe59 	bl	800e154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80134a2:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80134a6:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80134aa:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80134ae:	f8da 0000 	ldr.w	r0, [sl]
 80134b2:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 80134b6:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 80134ba:	fb11 2103 	smlabb	r1, r1, r3, r2
 80134be:	1874      	adds	r4, r6, r1
 80134c0:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80134c4:	4e67      	ldr	r6, [pc, #412]	; (8013664 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 80134c6:	440a      	add	r2, r1
 80134c8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80134cc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80134d0:	4413      	add	r3, r2
 80134d2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80134d6:	6803      	ldr	r3, [r0, #0]
 80134d8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80134dc:	4798      	blx	r3
 80134de:	2801      	cmp	r0, #1
 80134e0:	d11d      	bne.n	801351e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 80134e2:	2200      	movs	r2, #0
 80134e4:	210b      	movs	r1, #11
 80134e6:	e9cd 1207 	strd	r1, r2, [sp, #28]
 80134ea:	8831      	ldrh	r1, [r6, #0]
 80134ec:	9704      	str	r7, [sp, #16]
 80134ee:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80134f2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80134f6:	9203      	str	r2, [sp, #12]
 80134f8:	fa1f f288 	uxth.w	r2, r8
 80134fc:	9202      	str	r2, [sp, #8]
 80134fe:	b2ad      	uxth	r5, r5
 8013500:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8013504:	9200      	str	r2, [sp, #0]
 8013506:	9501      	str	r5, [sp, #4]
 8013508:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801350c:	f8da 0000 	ldr.w	r0, [sl]
 8013510:	464a      	mov	r2, r9
 8013512:	4621      	mov	r1, r4
 8013514:	f7f9 f9e4 	bl	800c8e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8013518:	b013      	add	sp, #76	; 0x4c
 801351a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801351e:	f8da 0000 	ldr.w	r0, [sl]
 8013522:	6803      	ldr	r3, [r0, #0]
 8013524:	6a1b      	ldr	r3, [r3, #32]
 8013526:	4798      	blx	r3
 8013528:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801352c:	8833      	ldrh	r3, [r6, #0]
 801352e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8013532:	fb01 2303 	mla	r3, r1, r3, r2
 8013536:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801353a:	2fff      	cmp	r7, #255	; 0xff
 801353c:	f109 0304 	add.w	r3, r9, #4
 8013540:	930a      	str	r3, [sp, #40]	; 0x28
 8013542:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 8013546:	d111      	bne.n	801356c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8013548:	b212      	sxth	r2, r2
 801354a:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 801354e:	2100      	movs	r1, #0
 8013550:	4541      	cmp	r1, r8
 8013552:	da7a      	bge.n	801364a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8013554:	2300      	movs	r3, #0
 8013556:	42ab      	cmp	r3, r5
 8013558:	da6b      	bge.n	8013632 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 801355a:	f814 c003 	ldrb.w	ip, [r4, r3]
 801355e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013560:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8013564:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8013568:	3301      	adds	r3, #1
 801356a:	e7f4      	b.n	8013556 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 801356c:	b213      	sxth	r3, r2
 801356e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8013572:	930b      	str	r3, [sp, #44]	; 0x2c
 8013574:	005b      	lsls	r3, r3, #1
 8013576:	930c      	str	r3, [sp, #48]	; 0x30
 8013578:	f04f 0900 	mov.w	r9, #0
 801357c:	b2ba      	uxth	r2, r7
 801357e:	fa1f fc8c 	uxth.w	ip, ip
 8013582:	960d      	str	r6, [sp, #52]	; 0x34
 8013584:	45c1      	cmp	r9, r8
 8013586:	da60      	bge.n	801364a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8013588:	46a3      	mov	fp, r4
 801358a:	4682      	mov	sl, r0
 801358c:	ebab 0304 	sub.w	r3, fp, r4
 8013590:	429d      	cmp	r5, r3
 8013592:	dd3e      	ble.n	8013612 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 8013594:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8013598:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801359a:	f8ba 1000 	ldrh.w	r1, [sl]
 801359e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80135a2:	120e      	asrs	r6, r1, #8
 80135a4:	121f      	asrs	r7, r3, #8
 80135a6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80135aa:	fb16 f60c 	smulbb	r6, r6, ip
 80135ae:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 80135b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80135b6:	00c9      	lsls	r1, r1, #3
 80135b8:	fb07 6702 	mla	r7, r7, r2, r6
 80135bc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80135c0:	10de      	asrs	r6, r3, #3
 80135c2:	b2c9      	uxtb	r1, r1
 80135c4:	00db      	lsls	r3, r3, #3
 80135c6:	fb1e fe0c 	smulbb	lr, lr, ip
 80135ca:	fb11 f10c 	smulbb	r1, r1, ip
 80135ce:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80135d2:	b2db      	uxtb	r3, r3
 80135d4:	b2bf      	uxth	r7, r7
 80135d6:	fb06 e602 	mla	r6, r6, r2, lr
 80135da:	fb03 1302 	mla	r3, r3, r2, r1
 80135de:	b2b6      	uxth	r6, r6
 80135e0:	b29b      	uxth	r3, r3
 80135e2:	1c79      	adds	r1, r7, #1
 80135e4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80135e8:	f106 0e01 	add.w	lr, r6, #1
 80135ec:	1c59      	adds	r1, r3, #1
 80135ee:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80135f2:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80135f6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80135fa:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80135fe:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8013602:	430f      	orrs	r7, r1
 8013604:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8013608:	ea47 070e 	orr.w	r7, r7, lr
 801360c:	f82a 7b02 	strh.w	r7, [sl], #2
 8013610:	e7bc      	b.n	801358c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 8013612:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013614:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013616:	881b      	ldrh	r3, [r3, #0]
 8013618:	1b5b      	subs	r3, r3, r5
 801361a:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801361e:	4418      	add	r0, r3
 8013620:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8013624:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8013626:	1b5b      	subs	r3, r3, r5
 8013628:	440b      	add	r3, r1
 801362a:	441c      	add	r4, r3
 801362c:	f109 0901 	add.w	r9, r9, #1
 8013630:	e7a8      	b.n	8013584 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 8013632:	8833      	ldrh	r3, [r6, #0]
 8013634:	1b5b      	subs	r3, r3, r5
 8013636:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 801363a:	4418      	add	r0, r3
 801363c:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8013640:	1b5b      	subs	r3, r3, r5
 8013642:	4413      	add	r3, r2
 8013644:	441c      	add	r4, r3
 8013646:	3101      	adds	r1, #1
 8013648:	e782      	b.n	8013550 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 801364a:	4b07      	ldr	r3, [pc, #28]	; (8013668 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 801364c:	6818      	ldr	r0, [r3, #0]
 801364e:	6803      	ldr	r3, [r0, #0]
 8013650:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013652:	4798      	blx	r3
 8013654:	e760      	b.n	8013518 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8013656:	bf00      	nop
 8013658:	08020dd1 	.word	0x08020dd1
 801365c:	08021468 	.word	0x08021468
 8013660:	08021017 	.word	0x08021017
 8013664:	2000179a 	.word	0x2000179a
 8013668:	200017a0 	.word	0x200017a0

0801366c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801366c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013670:	4616      	mov	r6, r2
 8013672:	880a      	ldrh	r2, [r1, #0]
 8013674:	b093      	sub	sp, #76	; 0x4c
 8013676:	2a01      	cmp	r2, #1
 8013678:	4681      	mov	r9, r0
 801367a:	4688      	mov	r8, r1
 801367c:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8013680:	d006      	beq.n	8013690 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8013682:	4b6c      	ldr	r3, [pc, #432]	; (8013834 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8013684:	4a6c      	ldr	r2, [pc, #432]	; (8013838 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 8013686:	486d      	ldr	r0, [pc, #436]	; (801383c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 8013688:	f240 11a1 	movw	r1, #417	; 0x1a1
 801368c:	f008 f97e 	bl	801b98c <__assert_func>
 8013690:	f1ba 0f00 	cmp.w	sl, #0
 8013694:	d04a      	beq.n	801372c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8013696:	6830      	ldr	r0, [r6, #0]
 8013698:	6871      	ldr	r1, [r6, #4]
 801369a:	4d69      	ldr	r5, [pc, #420]	; (8013840 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 801369c:	ac0e      	add	r4, sp, #56	; 0x38
 801369e:	c403      	stmia	r4!, {r0, r1}
 80136a0:	6818      	ldr	r0, [r3, #0]
 80136a2:	6859      	ldr	r1, [r3, #4]
 80136a4:	ac10      	add	r4, sp, #64	; 0x40
 80136a6:	c403      	stmia	r4!, {r0, r1}
 80136a8:	a80e      	add	r0, sp, #56	; 0x38
 80136aa:	f7fa fd6b 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80136ae:	4631      	mov	r1, r6
 80136b0:	a810      	add	r0, sp, #64	; 0x40
 80136b2:	f7fa fd4f 	bl	800e154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80136b6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80136ba:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80136be:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80136c2:	6828      	ldr	r0, [r5, #0]
 80136c4:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 80136c8:	4c5e      	ldr	r4, [pc, #376]	; (8013844 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 80136ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 80136ce:	4489      	add	r9, r1
 80136d0:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80136d4:	440a      	add	r2, r1
 80136d6:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80136da:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80136de:	4413      	add	r3, r2
 80136e0:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80136e4:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 80136e8:	930a      	str	r3, [sp, #40]	; 0x28
 80136ea:	6803      	ldr	r3, [r0, #0]
 80136ec:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80136f0:	4798      	blx	r3
 80136f2:	2801      	cmp	r0, #1
 80136f4:	d11d      	bne.n	8013732 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 80136f6:	220b      	movs	r2, #11
 80136f8:	2100      	movs	r1, #0
 80136fa:	e9cd 2107 	strd	r2, r1, [sp, #28]
 80136fe:	8822      	ldrh	r2, [r4, #0]
 8013700:	f8cd a010 	str.w	sl, [sp, #16]
 8013704:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8013708:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801370c:	9203      	str	r2, [sp, #12]
 801370e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8013712:	9202      	str	r2, [sp, #8]
 8013714:	b2b6      	uxth	r6, r6
 8013716:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801371a:	9200      	str	r2, [sp, #0]
 801371c:	9601      	str	r6, [sp, #4]
 801371e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013722:	6828      	ldr	r0, [r5, #0]
 8013724:	4642      	mov	r2, r8
 8013726:	4649      	mov	r1, r9
 8013728:	f7f9 f8da 	bl	800c8e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801372c:	b013      	add	sp, #76	; 0x4c
 801372e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013732:	6828      	ldr	r0, [r5, #0]
 8013734:	6803      	ldr	r3, [r0, #0]
 8013736:	6a1b      	ldr	r3, [r3, #32]
 8013738:	4798      	blx	r3
 801373a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801373e:	8823      	ldrh	r3, [r4, #0]
 8013740:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013744:	940d      	str	r4, [sp, #52]	; 0x34
 8013746:	fb01 2303 	mla	r3, r1, r3, r2
 801374a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801374e:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8013752:	930b      	str	r3, [sp, #44]	; 0x2c
 8013754:	ea6f 010a 	mvn.w	r1, sl
 8013758:	005b      	lsls	r3, r3, #1
 801375a:	930c      	str	r3, [sp, #48]	; 0x30
 801375c:	f04f 0e00 	mov.w	lr, #0
 8013760:	b2c9      	uxtb	r1, r1
 8013762:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013764:	459e      	cmp	lr, r3
 8013766:	da5f      	bge.n	8013828 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8013768:	2700      	movs	r7, #0
 801376a:	fa1f fb8a 	uxth.w	fp, sl
 801376e:	42b7      	cmp	r7, r6
 8013770:	da4a      	bge.n	8013808 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8013772:	f819 3007 	ldrb.w	r3, [r9, r7]
 8013776:	2203      	movs	r2, #3
 8013778:	2404      	movs	r4, #4
 801377a:	fb12 4303 	smlabb	r3, r2, r3, r4
 801377e:	eb08 0403 	add.w	r4, r8, r3
 8013782:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013786:	78a2      	ldrb	r2, [r4, #2]
 8013788:	7865      	ldrb	r5, [r4, #1]
 801378a:	f818 c003 	ldrb.w	ip, [r8, r3]
 801378e:	d10c      	bne.n	80137aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8013790:	4b2d      	ldr	r3, [pc, #180]	; (8013848 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8013792:	00ed      	lsls	r5, r5, #3
 8013794:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8013798:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801379c:	432a      	orrs	r2, r5
 801379e:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 80137a2:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 80137a6:	3701      	adds	r7, #1
 80137a8:	e7e1      	b.n	801376e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 80137aa:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 80137ae:	121c      	asrs	r4, r3, #8
 80137b0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80137b4:	fb12 f20b 	smulbb	r2, r2, fp
 80137b8:	fb04 2201 	mla	r2, r4, r1, r2
 80137bc:	10dc      	asrs	r4, r3, #3
 80137be:	00db      	lsls	r3, r3, #3
 80137c0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80137c4:	b2db      	uxtb	r3, r3
 80137c6:	fb15 f50b 	smulbb	r5, r5, fp
 80137ca:	fb1c fc0b 	smulbb	ip, ip, fp
 80137ce:	b292      	uxth	r2, r2
 80137d0:	fb04 5501 	mla	r5, r4, r1, r5
 80137d4:	fb03 cc01 	mla	ip, r3, r1, ip
 80137d8:	b2ad      	uxth	r5, r5
 80137da:	fa1f fc8c 	uxth.w	ip, ip
 80137de:	1c53      	adds	r3, r2, #1
 80137e0:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80137e4:	1c6c      	adds	r4, r5, #1
 80137e6:	f10c 0301 	add.w	r3, ip, #1
 80137ea:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80137ee:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 80137f2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80137f6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80137fa:	096d      	lsrs	r5, r5, #5
 80137fc:	ea42 020c 	orr.w	r2, r2, ip
 8013800:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013804:	432a      	orrs	r2, r5
 8013806:	e7cc      	b.n	80137a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 8013808:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801380a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801380c:	881b      	ldrh	r3, [r3, #0]
 801380e:	1b9b      	subs	r3, r3, r6
 8013810:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013814:	4418      	add	r0, r3
 8013816:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 801381a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801381c:	1b9b      	subs	r3, r3, r6
 801381e:	4413      	add	r3, r2
 8013820:	4499      	add	r9, r3
 8013822:	f10e 0e01 	add.w	lr, lr, #1
 8013826:	e79c      	b.n	8013762 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 8013828:	4b05      	ldr	r3, [pc, #20]	; (8013840 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 801382a:	6818      	ldr	r0, [r3, #0]
 801382c:	6803      	ldr	r3, [r0, #0]
 801382e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013830:	4798      	blx	r3
 8013832:	e77b      	b.n	801372c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8013834:	08020e1f 	.word	0x08020e1f
 8013838:	080214f1 	.word	0x080214f1
 801383c:	08021017 	.word	0x08021017
 8013840:	200017a0 	.word	0x200017a0
 8013844:	2000179a 	.word	0x2000179a
 8013848:	fffff800 	.word	0xfffff800

0801384c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801384c:	b430      	push	{r4, r5}
 801384e:	780d      	ldrb	r5, [r1, #0]
 8013850:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013854:	2d01      	cmp	r5, #1
 8013856:	d00a      	beq.n	801386e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8013858:	d305      	bcc.n	8013866 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801385a:	2d02      	cmp	r5, #2
 801385c:	d10b      	bne.n	8013876 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801385e:	9402      	str	r4, [sp, #8]
 8013860:	bc30      	pop	{r4, r5}
 8013862:	f7ff bdf9 	b.w	8013458 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8013866:	9402      	str	r4, [sp, #8]
 8013868:	bc30      	pop	{r4, r5}
 801386a:	f7ff bcfd 	b.w	8013268 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801386e:	9402      	str	r4, [sp, #8]
 8013870:	bc30      	pop	{r4, r5}
 8013872:	f7ff befb 	b.w	801366c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8013876:	bc30      	pop	{r4, r5}
 8013878:	4770      	bx	lr
	...

0801387c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801387c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013880:	4605      	mov	r5, r0
 8013882:	b089      	sub	sp, #36	; 0x24
 8013884:	6810      	ldr	r0, [r2, #0]
 8013886:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 801388a:	460c      	mov	r4, r1
 801388c:	6851      	ldr	r1, [r2, #4]
 801388e:	ae04      	add	r6, sp, #16
 8013890:	c603      	stmia	r6!, {r0, r1}
 8013892:	6818      	ldr	r0, [r3, #0]
 8013894:	6859      	ldr	r1, [r3, #4]
 8013896:	ae06      	add	r6, sp, #24
 8013898:	4617      	mov	r7, r2
 801389a:	c603      	stmia	r6!, {r0, r1}
 801389c:	a804      	add	r0, sp, #16
 801389e:	f7fa fc71 	bl	800e184 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80138a2:	4639      	mov	r1, r7
 80138a4:	a806      	add	r0, sp, #24
 80138a6:	f7fa fc55 	bl	800e154 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80138aa:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 80138ae:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80138b2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80138b6:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 80138ba:	fb11 2103 	smlabb	r1, r1, r3, r2
 80138be:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 80138c2:	440c      	add	r4, r1
 80138c4:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80138c8:	440a      	add	r2, r1
 80138ca:	f8ad 2018 	strh.w	r2, [sp, #24]
 80138ce:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80138d2:	4413      	add	r3, r2
 80138d4:	f8ad 301a 	strh.w	r3, [sp, #26]
 80138d8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80138dc:	9300      	str	r3, [sp, #0]
 80138de:	4b80      	ldr	r3, [pc, #512]	; (8013ae0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 80138e0:	6818      	ldr	r0, [r3, #0]
 80138e2:	6803      	ldr	r3, [r0, #0]
 80138e4:	6a1b      	ldr	r3, [r3, #32]
 80138e6:	4798      	blx	r3
 80138e8:	4b7e      	ldr	r3, [pc, #504]	; (8013ae4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 80138ea:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 80138ee:	881a      	ldrh	r2, [r3, #0]
 80138f0:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80138f4:	fb06 1202 	mla	r2, r6, r2, r1
 80138f8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80138fc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013900:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 8013904:	b212      	sxth	r2, r2
 8013906:	d117      	bne.n	8013938 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 8013908:	9201      	str	r2, [sp, #4]
 801390a:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801390e:	f04f 0a00 	mov.w	sl, #0
 8013912:	9302      	str	r3, [sp, #8]
 8013914:	9b00      	ldr	r3, [sp, #0]
 8013916:	459a      	cmp	sl, r3
 8013918:	f280 80d9 	bge.w	8013ace <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 801391c:	2100      	movs	r1, #0
 801391e:	4541      	cmp	r1, r8
 8013920:	f280 80c1 	bge.w	8013aa6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 8013924:	5c63      	ldrb	r3, [r4, r1]
 8013926:	b12b      	cbz	r3, 8013934 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8013928:	2bff      	cmp	r3, #255	; 0xff
 801392a:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 801392e:	d176      	bne.n	8013a1e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 8013930:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 8013934:	3101      	adds	r1, #1
 8013936:	e7f2      	b.n	801391e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 8013938:	9202      	str	r2, [sp, #8]
 801393a:	0052      	lsls	r2, r2, #1
 801393c:	9201      	str	r2, [sp, #4]
 801393e:	f04f 0b00 	mov.w	fp, #0
 8013942:	9303      	str	r3, [sp, #12]
 8013944:	9b00      	ldr	r3, [sp, #0]
 8013946:	459b      	cmp	fp, r3
 8013948:	f280 80c1 	bge.w	8013ace <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 801394c:	f04f 0c00 	mov.w	ip, #0
 8013950:	45c4      	cmp	ip, r8
 8013952:	da4f      	bge.n	80139f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 8013954:	f814 300c 	ldrb.w	r3, [r4, ip]
 8013958:	2b00      	cmp	r3, #0
 801395a:	d048      	beq.n	80139ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 801395c:	fb09 f303 	mul.w	r3, r9, r3
 8013960:	1c5a      	adds	r2, r3, #1
 8013962:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8013966:	121b      	asrs	r3, r3, #8
 8013968:	d041      	beq.n	80139ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 801396a:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 801396e:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 8013972:	b29e      	uxth	r6, r3
 8013974:	1211      	asrs	r1, r2, #8
 8013976:	43db      	mvns	r3, r3
 8013978:	b2db      	uxtb	r3, r3
 801397a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801397e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013982:	fb11 f103 	smulbb	r1, r1, r3
 8013986:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801398a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801398e:	00d2      	lsls	r2, r2, #3
 8013990:	fb07 1706 	mla	r7, r7, r6, r1
 8013994:	b2d2      	uxtb	r2, r2
 8013996:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801399a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801399e:	fb12 f203 	smulbb	r2, r2, r3
 80139a2:	fa5f fe8e 	uxtb.w	lr, lr
 80139a6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80139aa:	fb0e 2206 	mla	r2, lr, r6, r2
 80139ae:	fb1a fa03 	smulbb	sl, sl, r3
 80139b2:	b2bf      	uxth	r7, r7
 80139b4:	b292      	uxth	r2, r2
 80139b6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80139ba:	fb01 a106 	mla	r1, r1, r6, sl
 80139be:	1c7b      	adds	r3, r7, #1
 80139c0:	f102 0a01 	add.w	sl, r2, #1
 80139c4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80139c8:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 80139cc:	b289      	uxth	r1, r1
 80139ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80139d2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80139d6:	ea47 070a 	orr.w	r7, r7, sl
 80139da:	f101 0a01 	add.w	sl, r1, #1
 80139de:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 80139e2:	0949      	lsrs	r1, r1, #5
 80139e4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80139e8:	430f      	orrs	r7, r1
 80139ea:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 80139ee:	f10c 0c01 	add.w	ip, ip, #1
 80139f2:	e7ad      	b.n	8013950 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 80139f4:	9b03      	ldr	r3, [sp, #12]
 80139f6:	9a01      	ldr	r2, [sp, #4]
 80139f8:	881b      	ldrh	r3, [r3, #0]
 80139fa:	eba3 0308 	sub.w	r3, r3, r8
 80139fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013a02:	4418      	add	r0, r3
 8013a04:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8013a08:	eba3 0308 	sub.w	r3, r3, r8
 8013a0c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8013a10:	4415      	add	r5, r2
 8013a12:	9a02      	ldr	r2, [sp, #8]
 8013a14:	4413      	add	r3, r2
 8013a16:	441c      	add	r4, r3
 8013a18:	f10b 0b01 	add.w	fp, fp, #1
 8013a1c:	e792      	b.n	8013944 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 8013a1e:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 8013a22:	b29f      	uxth	r7, r3
 8013a24:	1216      	asrs	r6, r2, #8
 8013a26:	43db      	mvns	r3, r3
 8013a28:	b2db      	uxtb	r3, r3
 8013a2a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013a2e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013a32:	fb16 f603 	smulbb	r6, r6, r3
 8013a36:	ea4f 09e2 	mov.w	r9, r2, asr #3
 8013a3a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013a3e:	00d2      	lsls	r2, r2, #3
 8013a40:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013a44:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013a48:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013a4c:	b2d2      	uxtb	r2, r2
 8013a4e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013a52:	fa1f fc8c 	uxth.w	ip, ip
 8013a56:	fb19 f903 	smulbb	r9, r9, r3
 8013a5a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013a5e:	fa5f fe8e 	uxtb.w	lr, lr
 8013a62:	fb12 f203 	smulbb	r2, r2, r3
 8013a66:	fb06 9607 	mla	r6, r6, r7, r9
 8013a6a:	fb0e 2207 	mla	r2, lr, r7, r2
 8013a6e:	f10c 0901 	add.w	r9, ip, #1
 8013a72:	b292      	uxth	r2, r2
 8013a74:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8013a78:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8013a7c:	f102 0c01 	add.w	ip, r2, #1
 8013a80:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8013a84:	b2b6      	uxth	r6, r6
 8013a86:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013a8a:	ea49 0c02 	orr.w	ip, r9, r2
 8013a8e:	f106 0901 	add.w	r9, r6, #1
 8013a92:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8013a96:	0976      	lsrs	r6, r6, #5
 8013a98:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013a9c:	ea4c 0c06 	orr.w	ip, ip, r6
 8013aa0:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8013aa4:	e746      	b.n	8013934 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8013aa6:	9b02      	ldr	r3, [sp, #8]
 8013aa8:	881b      	ldrh	r3, [r3, #0]
 8013aaa:	eba3 0308 	sub.w	r3, r3, r8
 8013aae:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8013ab2:	4418      	add	r0, r3
 8013ab4:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8013ab8:	eba3 0308 	sub.w	r3, r3, r8
 8013abc:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8013ac0:	4415      	add	r5, r2
 8013ac2:	9a01      	ldr	r2, [sp, #4]
 8013ac4:	4413      	add	r3, r2
 8013ac6:	441c      	add	r4, r3
 8013ac8:	f10a 0a01 	add.w	sl, sl, #1
 8013acc:	e722      	b.n	8013914 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 8013ace:	4b04      	ldr	r3, [pc, #16]	; (8013ae0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8013ad0:	6818      	ldr	r0, [r3, #0]
 8013ad2:	6803      	ldr	r3, [r0, #0]
 8013ad4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013ad6:	4798      	blx	r3
 8013ad8:	b009      	add	sp, #36	; 0x24
 8013ada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ade:	bf00      	nop
 8013ae0:	200017a0 	.word	0x200017a0
 8013ae4:	2000179a 	.word	0x2000179a

08013ae8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013aec:	b089      	sub	sp, #36	; 0x24
 8013aee:	4682      	mov	sl, r0
 8013af0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013af4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013af6:	460d      	mov	r5, r1
 8013af8:	4691      	mov	r9, r2
 8013afa:	4698      	mov	r8, r3
 8013afc:	b3ae      	cbz	r6, 8013b6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013afe:	4608      	mov	r0, r1
 8013b00:	f7fc fa8c 	bl	801001c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b04:	4607      	mov	r7, r0
 8013b06:	4628      	mov	r0, r5
 8013b08:	f7fc fac2 	bl	8010090 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b0c:	f8ad 000e 	strh.w	r0, [sp, #14]
 8013b10:	4628      	mov	r0, r5
 8013b12:	f8ad 9008 	strh.w	r9, [sp, #8]
 8013b16:	f8ad 800a 	strh.w	r8, [sp, #10]
 8013b1a:	f8ad 700c 	strh.w	r7, [sp, #12]
 8013b1e:	f7fc fc09 	bl	8010334 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b22:	b178      	cbz	r0, 8013b44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013b24:	4628      	mov	r0, r5
 8013b26:	f7fc fc05 	bl	8010334 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b2a:	2802      	cmp	r0, #2
 8013b2c:	d00a      	beq.n	8013b44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013b2e:	4628      	mov	r0, r5
 8013b30:	f7fc fc00 	bl	8010334 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b34:	280b      	cmp	r0, #11
 8013b36:	d005      	beq.n	8013b44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013b38:	4b69      	ldr	r3, [pc, #420]	; (8013ce0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8013b3a:	4a6a      	ldr	r2, [pc, #424]	; (8013ce4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8013b3c:	486a      	ldr	r0, [pc, #424]	; (8013ce8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8013b3e:	214f      	movs	r1, #79	; 0x4f
 8013b40:	f007 ff24 	bl	801b98c <__assert_func>
 8013b44:	4628      	mov	r0, r5
 8013b46:	f7fc fb71 	bl	801022c <_ZNK8touchgfx6Bitmap7getDataEv>
 8013b4a:	4607      	mov	r7, r0
 8013b4c:	4628      	mov	r0, r5
 8013b4e:	f7fc fb9f 	bl	8010290 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013b52:	4681      	mov	r9, r0
 8013b54:	4628      	mov	r0, r5
 8013b56:	f7fc fbed 	bl	8010334 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b5a:	2802      	cmp	r0, #2
 8013b5c:	d108      	bne.n	8013b70 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8013b5e:	4633      	mov	r3, r6
 8013b60:	4622      	mov	r2, r4
 8013b62:	a902      	add	r1, sp, #8
 8013b64:	4638      	mov	r0, r7
 8013b66:	f7ff fa6d 	bl	8013044 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013b6a:	b009      	add	sp, #36	; 0x24
 8013b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b70:	4628      	mov	r0, r5
 8013b72:	f7fc fbdf 	bl	8010334 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b76:	280b      	cmp	r0, #11
 8013b78:	d107      	bne.n	8013b8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8013b7a:	9600      	str	r6, [sp, #0]
 8013b7c:	4623      	mov	r3, r4
 8013b7e:	aa02      	add	r2, sp, #8
 8013b80:	4649      	mov	r1, r9
 8013b82:	4638      	mov	r0, r7
 8013b84:	f7ff fe62 	bl	801384c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013b88:	e7ef      	b.n	8013b6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013b8a:	4628      	mov	r0, r5
 8013b8c:	f7fc fb14 	bl	80101b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013b90:	b950      	cbnz	r0, 8013ba8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013b92:	e9cd 6000 	strd	r6, r0, [sp]
 8013b96:	f8da 3000 	ldr.w	r3, [sl]
 8013b9a:	aa02      	add	r2, sp, #8
 8013b9c:	691d      	ldr	r5, [r3, #16]
 8013b9e:	4639      	mov	r1, r7
 8013ba0:	4623      	mov	r3, r4
 8013ba2:	4650      	mov	r0, sl
 8013ba4:	47a8      	blx	r5
 8013ba6:	e7e0      	b.n	8013b6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013ba8:	f10d 0818 	add.w	r8, sp, #24
 8013bac:	4629      	mov	r1, r5
 8013bae:	4640      	mov	r0, r8
 8013bb0:	f7fc faa8 	bl	8010104 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013bb4:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013bb8:	ad04      	add	r5, sp, #16
 8013bba:	e885 0003 	stmia.w	r5, {r0, r1}
 8013bbe:	4628      	mov	r0, r5
 8013bc0:	4621      	mov	r1, r4
 8013bc2:	f7f8 fa3f 	bl	800c044 <_ZN8touchgfx4RectaNERKS0_>
 8013bc6:	4628      	mov	r0, r5
 8013bc8:	f7f8 fa80 	bl	800c0cc <_ZNK8touchgfx4Rect7isEmptyEv>
 8013bcc:	b138      	cbz	r0, 8013bde <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8013bce:	9600      	str	r6, [sp, #0]
 8013bd0:	4623      	mov	r3, r4
 8013bd2:	aa02      	add	r2, sp, #8
 8013bd4:	4649      	mov	r1, r9
 8013bd6:	4638      	mov	r0, r7
 8013bd8:	f7ff fe50 	bl	801387c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013bdc:	e7c5      	b.n	8013b6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013bde:	e9cd 6000 	strd	r6, r0, [sp]
 8013be2:	f8da 3000 	ldr.w	r3, [sl]
 8013be6:	aa02      	add	r2, sp, #8
 8013be8:	f8d3 b010 	ldr.w	fp, [r3, #16]
 8013bec:	4639      	mov	r1, r7
 8013bee:	462b      	mov	r3, r5
 8013bf0:	4650      	mov	r0, sl
 8013bf2:	47d8      	blx	fp
 8013bf4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013bf8:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013bfc:	4293      	cmp	r3, r2
 8013bfe:	dd13      	ble.n	8013c28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8013c00:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013c04:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013c08:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013c0c:	1a9b      	subs	r3, r3, r2
 8013c0e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013c12:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013c16:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013c1a:	9600      	str	r6, [sp, #0]
 8013c1c:	4643      	mov	r3, r8
 8013c1e:	aa02      	add	r2, sp, #8
 8013c20:	4649      	mov	r1, r9
 8013c22:	4638      	mov	r0, r7
 8013c24:	f7ff fe2a 	bl	801387c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013c28:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013c2c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013c30:	4293      	cmp	r3, r2
 8013c32:	dd13      	ble.n	8013c5c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8013c34:	1a9b      	subs	r3, r3, r2
 8013c36:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013c3a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013c3e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013c42:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013c46:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c4a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013c4e:	9600      	str	r6, [sp, #0]
 8013c50:	4643      	mov	r3, r8
 8013c52:	aa02      	add	r2, sp, #8
 8013c54:	4649      	mov	r1, r9
 8013c56:	4638      	mov	r0, r7
 8013c58:	f7ff fe10 	bl	801387c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013c5c:	88a2      	ldrh	r2, [r4, #4]
 8013c5e:	8823      	ldrh	r3, [r4, #0]
 8013c60:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013c64:	4413      	add	r3, r2
 8013c66:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013c6a:	440a      	add	r2, r1
 8013c6c:	b29b      	uxth	r3, r3
 8013c6e:	b292      	uxth	r2, r2
 8013c70:	b211      	sxth	r1, r2
 8013c72:	b218      	sxth	r0, r3
 8013c74:	4288      	cmp	r0, r1
 8013c76:	dd13      	ble.n	8013ca0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8013c78:	1a9b      	subs	r3, r3, r2
 8013c7a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013c7e:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8013c82:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013c86:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c8a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013c8e:	9600      	str	r6, [sp, #0]
 8013c90:	4643      	mov	r3, r8
 8013c92:	aa02      	add	r2, sp, #8
 8013c94:	4649      	mov	r1, r9
 8013c96:	4638      	mov	r0, r7
 8013c98:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013c9c:	f7ff fdee 	bl	801387c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013ca0:	88e2      	ldrh	r2, [r4, #6]
 8013ca2:	8863      	ldrh	r3, [r4, #2]
 8013ca4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013ca8:	4413      	add	r3, r2
 8013caa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013cae:	440a      	add	r2, r1
 8013cb0:	b29b      	uxth	r3, r3
 8013cb2:	b292      	uxth	r2, r2
 8013cb4:	b211      	sxth	r1, r2
 8013cb6:	b218      	sxth	r0, r3
 8013cb8:	4288      	cmp	r0, r1
 8013cba:	f77f af56 	ble.w	8013b6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013cbe:	f9b4 5000 	ldrsh.w	r5, [r4]
 8013cc2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013cc6:	f8ad 5018 	strh.w	r5, [sp, #24]
 8013cca:	1a9b      	subs	r3, r3, r2
 8013ccc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013cd0:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013cd4:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013cd8:	9600      	str	r6, [sp, #0]
 8013cda:	4643      	mov	r3, r8
 8013cdc:	e779      	b.n	8013bd2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8013cde:	bf00      	nop
 8013ce0:	08020e6d 	.word	0x08020e6d
 8013ce4:	0802157a 	.word	0x0802157a
 8013ce8:	08021017 	.word	0x08021017

08013cec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013cec:	b508      	push	{r3, lr}
 8013cee:	b180      	cbz	r0, 8013d12 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8013cf0:	2902      	cmp	r1, #2
 8013cf2:	d014      	beq.n	8013d1e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013cf4:	2903      	cmp	r1, #3
 8013cf6:	d01d      	beq.n	8013d34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013cf8:	2901      	cmp	r1, #1
 8013cfa:	d101      	bne.n	8013d00 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013cfc:	2001      	movs	r0, #1
 8013cfe:	bd08      	pop	{r3, pc}
 8013d00:	4b0e      	ldr	r3, [pc, #56]	; (8013d3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013d02:	8818      	ldrh	r0, [r3, #0]
 8013d04:	b990      	cbnz	r0, 8013d2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013d06:	4b0e      	ldr	r3, [pc, #56]	; (8013d40 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013d08:	4a0e      	ldr	r2, [pc, #56]	; (8013d44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013d0a:	480f      	ldr	r0, [pc, #60]	; (8013d48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013d0c:	21d7      	movs	r1, #215	; 0xd7
 8013d0e:	f007 fe3d 	bl	801b98c <__assert_func>
 8013d12:	2902      	cmp	r1, #2
 8013d14:	d00e      	beq.n	8013d34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013d16:	2903      	cmp	r1, #3
 8013d18:	d0f2      	beq.n	8013d00 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013d1a:	2901      	cmp	r1, #1
 8013d1c:	d1ee      	bne.n	8013cfc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013d1e:	4b07      	ldr	r3, [pc, #28]	; (8013d3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013d20:	8818      	ldrh	r0, [r3, #0]
 8013d22:	2800      	cmp	r0, #0
 8013d24:	d0ef      	beq.n	8013d06 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8013d26:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013d2a:	e7e8      	b.n	8013cfe <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013d2c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013d30:	4240      	negs	r0, r0
 8013d32:	e7e4      	b.n	8013cfe <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013d34:	f04f 30ff 	mov.w	r0, #4294967295
 8013d38:	e7e1      	b.n	8013cfe <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013d3a:	bf00      	nop
 8013d3c:	2000179a 	.word	0x2000179a
 8013d40:	08021171 	.word	0x08021171
 8013d44:	080216f7 	.word	0x080216f7
 8013d48:	080211b3 	.word	0x080211b3

08013d4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013d4c:	b508      	push	{r3, lr}
 8013d4e:	b180      	cbz	r0, 8013d72 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8013d50:	2902      	cmp	r1, #2
 8013d52:	d014      	beq.n	8013d7e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8013d54:	2903      	cmp	r1, #3
 8013d56:	d018      	beq.n	8013d8a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013d58:	2901      	cmp	r1, #1
 8013d5a:	d001      	beq.n	8013d60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013d5c:	2001      	movs	r0, #1
 8013d5e:	e013      	b.n	8013d88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013d60:	4b0e      	ldr	r3, [pc, #56]	; (8013d9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013d62:	8818      	ldrh	r0, [r3, #0]
 8013d64:	b970      	cbnz	r0, 8013d84 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8013d66:	4b0e      	ldr	r3, [pc, #56]	; (8013da0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8013d68:	4a0e      	ldr	r2, [pc, #56]	; (8013da4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8013d6a:	480f      	ldr	r0, [pc, #60]	; (8013da8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013d6c:	21d7      	movs	r1, #215	; 0xd7
 8013d6e:	f007 fe0d 	bl	801b98c <__assert_func>
 8013d72:	2902      	cmp	r1, #2
 8013d74:	d009      	beq.n	8013d8a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013d76:	2903      	cmp	r1, #3
 8013d78:	d0f0      	beq.n	8013d5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013d7a:	2901      	cmp	r1, #1
 8013d7c:	d1f0      	bne.n	8013d60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013d7e:	f04f 30ff 	mov.w	r0, #4294967295
 8013d82:	e001      	b.n	8013d88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013d84:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013d88:	bd08      	pop	{r3, pc}
 8013d8a:	4b04      	ldr	r3, [pc, #16]	; (8013d9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013d8c:	8818      	ldrh	r0, [r3, #0]
 8013d8e:	2800      	cmp	r0, #0
 8013d90:	d0e9      	beq.n	8013d66 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8013d92:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013d96:	4240      	negs	r0, r0
 8013d98:	e7f6      	b.n	8013d88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013d9a:	bf00      	nop
 8013d9c:	2000179a 	.word	0x2000179a
 8013da0:	08021171 	.word	0x08021171
 8013da4:	080216f7 	.word	0x080216f7
 8013da8:	080211b3 	.word	0x080211b3

08013dac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013dac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013db0:	b097      	sub	sp, #92	; 0x5c
 8013db2:	9109      	str	r1, [sp, #36]	; 0x24
 8013db4:	a912      	add	r1, sp, #72	; 0x48
 8013db6:	e881 000c 	stmia.w	r1, {r2, r3}
 8013dba:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8013dbe:	9306      	str	r3, [sp, #24]
 8013dc0:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8013dc4:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8013dc8:	930e      	str	r3, [sp, #56]	; 0x38
 8013dca:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8013dce:	930a      	str	r3, [sp, #40]	; 0x28
 8013dd0:	7b4b      	ldrb	r3, [r1, #13]
 8013dd2:	798f      	ldrb	r7, [r1, #6]
 8013dd4:	f9bd 4080 	ldrsh.w	r4, [sp, #128]	; 0x80
 8013dd8:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 8013ddc:	f8bd 508c 	ldrh.w	r5, [sp, #140]	; 0x8c
 8013de0:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8013de4:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8013de8:	0158      	lsls	r0, r3, #5
 8013dea:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013dee:	4338      	orrs	r0, r7
 8013df0:	9008      	str	r0, [sp, #32]
 8013df2:	f000 8149 	beq.w	8014088 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013df6:	011b      	lsls	r3, r3, #4
 8013df8:	79c8      	ldrb	r0, [r1, #7]
 8013dfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013dfe:	4303      	orrs	r3, r0
 8013e00:	9307      	str	r3, [sp, #28]
 8013e02:	f000 8141 	beq.w	8014088 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013e06:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013e0a:	b29b      	uxth	r3, r3
 8013e0c:	2e00      	cmp	r6, #0
 8013e0e:	f000 80e5 	beq.w	8013fdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x230>
 8013e12:	1af6      	subs	r6, r6, r3
 8013e14:	b2b6      	uxth	r6, r6
 8013e16:	0433      	lsls	r3, r6, #16
 8013e18:	d502      	bpl.n	8013e20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8013e1a:	1ba4      	subs	r4, r4, r6
 8013e1c:	b224      	sxth	r4, r4
 8013e1e:	2600      	movs	r6, #0
 8013e20:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013e24:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8013e28:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 8013e2c:	428c      	cmp	r4, r1
 8013e2e:	b28b      	uxth	r3, r1
 8013e30:	bfbf      	itttt	lt
 8013e32:	18f6      	addlt	r6, r6, r3
 8013e34:	1b34      	sublt	r4, r6, r4
 8013e36:	b2a6      	uxthlt	r6, r4
 8013e38:	460c      	movlt	r4, r1
 8013e3a:	8891      	ldrh	r1, [r2, #4]
 8013e3c:	440b      	add	r3, r1
 8013e3e:	b21b      	sxth	r3, r3
 8013e40:	930d      	str	r3, [sp, #52]	; 0x34
 8013e42:	88d3      	ldrh	r3, [r2, #6]
 8013e44:	9a06      	ldr	r2, [sp, #24]
 8013e46:	449a      	add	sl, r3
 8013e48:	fa0f f38a 	sxth.w	r3, sl
 8013e4c:	930c      	str	r3, [sp, #48]	; 0x30
 8013e4e:	4bb5      	ldr	r3, [pc, #724]	; (8014124 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8013e50:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 8013e54:	f893 9000 	ldrb.w	r9, [r3]
 8013e58:	f109 3cff 	add.w	ip, r9, #4294967295
 8013e5c:	f1dc 0300 	rsbs	r3, ip, #0
 8013e60:	eb43 030c 	adc.w	r3, r3, ip
 8013e64:	930b      	str	r3, [sp, #44]	; 0x2c
 8013e66:	4621      	mov	r1, r4
 8013e68:	465b      	mov	r3, fp
 8013e6a:	a812      	add	r0, sp, #72	; 0x48
 8013e6c:	f7fa f862 	bl	800df34 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013e70:	4621      	mov	r1, r4
 8013e72:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8013e76:	465b      	mov	r3, fp
 8013e78:	9a06      	ldr	r2, [sp, #24]
 8013e7a:	a812      	add	r0, sp, #72	; 0x48
 8013e7c:	f7fa f872 	bl	800df64 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013e80:	a916      	add	r1, sp, #88	; 0x58
 8013e82:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8013e86:	a815      	add	r0, sp, #84	; 0x54
 8013e88:	f7fa f94e 	bl	800e128 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013e8c:	f1bb 0f00 	cmp.w	fp, #0
 8013e90:	f040 80a7 	bne.w	8013fe2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x236>
 8013e94:	f1b9 0f01 	cmp.w	r9, #1
 8013e98:	f040 80ab 	bne.w	8013ff2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
 8013e9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e9e:	2b00      	cmp	r3, #0
 8013ea0:	f040 80f7 	bne.w	8014092 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e6>
 8013ea4:	4ba0      	ldr	r3, [pc, #640]	; (8014128 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8013ea6:	6818      	ldr	r0, [r3, #0]
 8013ea8:	6803      	ldr	r3, [r0, #0]
 8013eaa:	6a1b      	ldr	r3, [r3, #32]
 8013eac:	4798      	blx	r3
 8013eae:	4a9f      	ldr	r2, [pc, #636]	; (801412c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8013eb0:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8013eb4:	8811      	ldrh	r1, [r2, #0]
 8013eb6:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8013eba:	fb01 2303 	mla	r3, r1, r3, r2
 8013ebe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013ec2:	f04f 0901 	mov.w	r9, #1
 8013ec6:	9307      	str	r3, [sp, #28]
 8013ec8:	fa09 f308 	lsl.w	r3, r9, r8
 8013ecc:	3b01      	subs	r3, #1
 8013ece:	b2db      	uxtb	r3, r3
 8013ed0:	45c8      	cmp	r8, r9
 8013ed2:	930f      	str	r3, [sp, #60]	; 0x3c
 8013ed4:	f000 80df 	beq.w	8014096 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
 8013ed8:	f1b8 0f02 	cmp.w	r8, #2
 8013edc:	f000 8153 	beq.w	8014186 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3da>
 8013ee0:	f1b8 0f04 	cmp.w	r8, #4
 8013ee4:	f000 8146 	beq.w	8014174 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c8>
 8013ee8:	b906      	cbnz	r6, 8013eec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 8013eea:	b175      	cbz	r5, 8013f0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8013eec:	fb17 6305 	smlabb	r3, r7, r5, r6
 8013ef0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8013ef2:	fb13 f308 	smulbb	r3, r3, r8
 8013ef6:	b29b      	uxth	r3, r3
 8013ef8:	ebaa 0a05 	sub.w	sl, sl, r5
 8013efc:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8013f00:	9226      	str	r2, [sp, #152]	; 0x98
 8013f02:	fa1f fa8a 	uxth.w	sl, sl
 8013f06:	f003 0507 	and.w	r5, r3, #7
 8013f0a:	4659      	mov	r1, fp
 8013f0c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013f0e:	f7ff feed 	bl	8013cec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8013f12:	4659      	mov	r1, fp
 8013f14:	9010      	str	r0, [sp, #64]	; 0x40
 8013f16:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013f18:	f7ff ff18 	bl	8013d4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013f1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f1e:	9a06      	ldr	r2, [sp, #24]
 8013f20:	1a9a      	subs	r2, r3, r2
 8013f22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f24:	1ba4      	subs	r4, r4, r6
 8013f26:	1b1c      	subs	r4, r3, r4
 8013f28:	9b08      	ldr	r3, [sp, #32]
 8013f2a:	4592      	cmp	sl, r2
 8013f2c:	bfa8      	it	ge
 8013f2e:	4692      	movge	sl, r2
 8013f30:	429c      	cmp	r4, r3
 8013f32:	bfd4      	ite	le
 8013f34:	ebc6 0604 	rsble	r6, r6, r4
 8013f38:	ebc6 0603 	rsbgt	r6, r6, r3
 8013f3c:	1bbf      	subs	r7, r7, r6
 8013f3e:	fb08 f307 	mul.w	r3, r8, r7
 8013f42:	930b      	str	r3, [sp, #44]	; 0x2c
 8013f44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013f46:	781a      	ldrb	r2, [r3, #0]
 8013f48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f4a:	1219      	asrs	r1, r3, #8
 8013f4c:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8013f50:	930c      	str	r3, [sp, #48]	; 0x30
 8013f52:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f54:	f3c3 01cc 	ubfx	r1, r3, #3, #13
 8013f58:	f001 03fc 	and.w	r3, r1, #252	; 0xfc
 8013f5c:	930d      	str	r3, [sp, #52]	; 0x34
 8013f5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f60:	00d9      	lsls	r1, r3, #3
 8013f62:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8013f66:	930e      	str	r3, [sp, #56]	; 0x38
 8013f68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f6a:	0059      	lsls	r1, r3, #1
 8013f6c:	fb03 0016 	mls	r0, r3, r6, r0
 8013f70:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8013f74:	434b      	muls	r3, r1
 8013f76:	9106      	str	r1, [sp, #24]
 8013f78:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013f7a:	412a      	asrs	r2, r5
 8013f7c:	b289      	uxth	r1, r1
 8013f7e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8013f82:	b2d2      	uxtb	r2, r2
 8013f84:	9110      	str	r1, [sp, #64]	; 0x40
 8013f86:	9311      	str	r3, [sp, #68]	; 0x44
 8013f88:	f1ba 0f00 	cmp.w	sl, #0
 8013f8c:	f340 80e4 	ble.w	8014158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8013f90:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8013f94:	46b6      	mov	lr, r6
 8013f96:	f1be 0f00 	cmp.w	lr, #0
 8013f9a:	f340 80c9 	ble.w	8014130 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>
 8013f9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013fa0:	4013      	ands	r3, r2
 8013fa2:	d009      	beq.n	8013fb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20c>
 8013fa4:	fb13 f309 	smulbb	r3, r3, r9
 8013fa8:	2bfe      	cmp	r3, #254	; 0xfe
 8013faa:	dd77      	ble.n	801409c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8013fac:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013fae:	29ff      	cmp	r1, #255	; 0xff
 8013fb0:	d174      	bne.n	801409c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8013fb2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8013fb4:	f8ac 0000 	strh.w	r0, [ip]
 8013fb8:	4445      	add	r5, r8
 8013fba:	b2ad      	uxth	r5, r5
 8013fbc:	2d07      	cmp	r5, #7
 8013fbe:	bf81      	itttt	hi
 8013fc0:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 8013fc2:	785a      	ldrbhi	r2, [r3, #1]
 8013fc4:	3301      	addhi	r3, #1
 8013fc6:	9326      	strhi	r3, [sp, #152]	; 0x98
 8013fc8:	9b06      	ldr	r3, [sp, #24]
 8013fca:	bf9a      	itte	ls
 8013fcc:	fa42 f208 	asrls.w	r2, r2, r8
 8013fd0:	b2d2      	uxtbls	r2, r2
 8013fd2:	2500      	movhi	r5, #0
 8013fd4:	449c      	add	ip, r3
 8013fd6:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013fda:	e7dc      	b.n	8013f96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
 8013fdc:	441c      	add	r4, r3
 8013fde:	b224      	sxth	r4, r4
 8013fe0:	e71e      	b.n	8013e20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8013fe2:	f1bb 0f01 	cmp.w	fp, #1
 8013fe6:	f47f af59 	bne.w	8013e9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013fea:	f1b9 0f01 	cmp.w	r9, #1
 8013fee:	f47f af55 	bne.w	8013e9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013ff2:	f8df 9134 	ldr.w	r9, [pc, #308]	; 8014128 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8013ff6:	f8d9 0000 	ldr.w	r0, [r9]
 8013ffa:	6803      	ldr	r3, [r0, #0]
 8013ffc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013ffe:	4798      	blx	r3
 8014000:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8014004:	464a      	mov	r2, r9
 8014006:	d006      	beq.n	8014016 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8014008:	f1b8 0f04 	cmp.w	r8, #4
 801400c:	d13f      	bne.n	801408e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 801400e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014010:	3300      	adds	r3, #0
 8014012:	bf18      	it	ne
 8014014:	2301      	movne	r3, #1
 8014016:	05c0      	lsls	r0, r0, #23
 8014018:	f140 80a7 	bpl.w	801416a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 801401c:	f1b8 0f08 	cmp.w	r8, #8
 8014020:	f040 80a3 	bne.w	801416a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8014024:	2b00      	cmp	r3, #0
 8014026:	bf0c      	ite	eq
 8014028:	f44f 7180 	moveq.w	r1, #256	; 0x100
 801402c:	2180      	movne	r1, #128	; 0x80
 801402e:	2e00      	cmp	r6, #0
 8014030:	f47f af34 	bne.w	8013e9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014034:	2d00      	cmp	r5, #0
 8014036:	f47f af31 	bne.w	8013e9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801403a:	9b08      	ldr	r3, [sp, #32]
 801403c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801403e:	18e3      	adds	r3, r4, r3
 8014040:	4283      	cmp	r3, r0
 8014042:	f73f af2b 	bgt.w	8013e9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014046:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
 801404a:	4403      	add	r3, r0
 801404c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801404e:	4283      	cmp	r3, r0
 8014050:	f73f af24 	bgt.w	8013e9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014054:	6810      	ldr	r0, [r2, #0]
 8014056:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 801405a:	6804      	ldr	r4, [r0, #0]
 801405c:	9105      	str	r1, [sp, #20]
 801405e:	f1b8 0f08 	cmp.w	r8, #8
 8014062:	bf18      	it	ne
 8014064:	3701      	addne	r7, #1
 8014066:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014068:	9104      	str	r1, [sp, #16]
 801406a:	bf18      	it	ne
 801406c:	f027 0701 	bicne.w	r7, r7, #1
 8014070:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8014072:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8014076:	bf18      	it	ne
 8014078:	b2bf      	uxthne	r7, r7
 801407a:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801407e:	e9cd 7a00 	strd	r7, sl, [sp]
 8014082:	9926      	ldr	r1, [sp, #152]	; 0x98
 8014084:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8014086:	47a0      	blx	r4
 8014088:	b017      	add	sp, #92	; 0x5c
 801408a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801408e:	2300      	movs	r3, #0
 8014090:	e7c1      	b.n	8014016 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8014092:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014094:	e70b      	b.n	8013eae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8014096:	f04f 09ff 	mov.w	r9, #255	; 0xff
 801409a:	e725      	b.n	8013ee8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801409c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801409e:	f8bc 4000 	ldrh.w	r4, [ip]
 80140a2:	fb11 f303 	smulbb	r3, r1, r3
 80140a6:	b29b      	uxth	r3, r3
 80140a8:	1c59      	adds	r1, r3, #1
 80140aa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80140ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80140b2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80140b4:	b29f      	uxth	r7, r3
 80140b6:	1220      	asrs	r0, r4, #8
 80140b8:	43db      	mvns	r3, r3
 80140ba:	b2db      	uxtb	r3, r3
 80140bc:	fb11 f107 	smulbb	r1, r1, r7
 80140c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80140c4:	fb00 1003 	mla	r0, r0, r3, r1
 80140c8:	b281      	uxth	r1, r0
 80140ca:	980d      	ldr	r0, [sp, #52]	; 0x34
 80140cc:	9108      	str	r1, [sp, #32]
 80140ce:	fb17 fb00 	smulbb	fp, r7, r0
 80140d2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80140d4:	10e1      	asrs	r1, r4, #3
 80140d6:	00e4      	lsls	r4, r4, #3
 80140d8:	fb17 f700 	smulbb	r7, r7, r0
 80140dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80140e0:	b2e4      	uxtb	r4, r4
 80140e2:	fb01 b103 	mla	r1, r1, r3, fp
 80140e6:	fb04 7703 	mla	r7, r4, r3, r7
 80140ea:	9b08      	ldr	r3, [sp, #32]
 80140ec:	9808      	ldr	r0, [sp, #32]
 80140ee:	b2bf      	uxth	r7, r7
 80140f0:	3301      	adds	r3, #1
 80140f2:	f107 0b01 	add.w	fp, r7, #1
 80140f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80140fa:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 80140fe:	b289      	uxth	r1, r1
 8014100:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8014104:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014108:	ea40 000b 	orr.w	r0, r0, fp
 801410c:	f101 0b01 	add.w	fp, r1, #1
 8014110:	eb0b 2b11 	add.w	fp, fp, r1, lsr #8
 8014114:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014118:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801411c:	ea40 000b 	orr.w	r0, r0, fp
 8014120:	e748      	b.n	8013fb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8014122:	bf00      	nop
 8014124:	20001798 	.word	0x20001798
 8014128:	200017a0 	.word	0x200017a0
 801412c:	2000179a 	.word	0x2000179a
 8014130:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014132:	b153      	cbz	r3, 801414a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 8014134:	441d      	add	r5, r3
 8014136:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014138:	b2ad      	uxth	r5, r5
 801413a:	eb03 03d5 	add.w	r3, r3, r5, lsr #3
 801413e:	f005 0507 	and.w	r5, r5, #7
 8014142:	781a      	ldrb	r2, [r3, #0]
 8014144:	9326      	str	r3, [sp, #152]	; 0x98
 8014146:	412a      	asrs	r2, r5
 8014148:	b2d2      	uxtb	r2, r2
 801414a:	9b07      	ldr	r3, [sp, #28]
 801414c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801414e:	440b      	add	r3, r1
 8014150:	9307      	str	r3, [sp, #28]
 8014152:	f10a 3aff 	add.w	sl, sl, #4294967295
 8014156:	e717      	b.n	8013f88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1dc>
 8014158:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801415a:	2b00      	cmp	r3, #0
 801415c:	d194      	bne.n	8014088 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 801415e:	4b0b      	ldr	r3, [pc, #44]	; (801418c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>)
 8014160:	6818      	ldr	r0, [r3, #0]
 8014162:	6803      	ldr	r3, [r0, #0]
 8014164:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014166:	4798      	blx	r3
 8014168:	e78e      	b.n	8014088 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 801416a:	2b00      	cmp	r3, #0
 801416c:	f43f ae96 	beq.w	8013e9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8014170:	2180      	movs	r1, #128	; 0x80
 8014172:	e75c      	b.n	801402e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x282>
 8014174:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014176:	b11b      	cbz	r3, 8014180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8014178:	07fb      	lsls	r3, r7, #31
 801417a:	d501      	bpl.n	8014180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 801417c:	3701      	adds	r7, #1
 801417e:	b2bf      	uxth	r7, r7
 8014180:	f04f 0911 	mov.w	r9, #17
 8014184:	e6b0      	b.n	8013ee8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8014186:	f04f 0955 	mov.w	r9, #85	; 0x55
 801418a:	e6ad      	b.n	8013ee8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801418c:	200017a0 	.word	0x200017a0

08014190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8014190:	b538      	push	{r3, r4, r5, lr}
 8014192:	4c15      	ldr	r4, [pc, #84]	; (80141e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8014194:	7823      	ldrb	r3, [r4, #0]
 8014196:	f3bf 8f5b 	dmb	ish
 801419a:	07da      	lsls	r2, r3, #31
 801419c:	4605      	mov	r5, r0
 801419e:	d40b      	bmi.n	80141b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80141a0:	4620      	mov	r0, r4
 80141a2:	f007 fbc6 	bl	801b932 <__cxa_guard_acquire>
 80141a6:	b138      	cbz	r0, 80141b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80141a8:	4620      	mov	r0, r4
 80141aa:	f007 fbce 	bl	801b94a <__cxa_guard_release>
 80141ae:	4a0f      	ldr	r2, [pc, #60]	; (80141ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80141b0:	490f      	ldr	r1, [pc, #60]	; (80141f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80141b2:	4810      	ldr	r0, [pc, #64]	; (80141f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80141b4:	f007 fbb6 	bl	801b924 <__aeabi_atexit>
 80141b8:	4c0f      	ldr	r4, [pc, #60]	; (80141f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80141ba:	7823      	ldrb	r3, [r4, #0]
 80141bc:	f3bf 8f5b 	dmb	ish
 80141c0:	07db      	lsls	r3, r3, #31
 80141c2:	d40b      	bmi.n	80141dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80141c4:	4620      	mov	r0, r4
 80141c6:	f007 fbb4 	bl	801b932 <__cxa_guard_acquire>
 80141ca:	b138      	cbz	r0, 80141dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80141cc:	4620      	mov	r0, r4
 80141ce:	f007 fbbc 	bl	801b94a <__cxa_guard_release>
 80141d2:	4a06      	ldr	r2, [pc, #24]	; (80141ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80141d4:	4909      	ldr	r1, [pc, #36]	; (80141fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80141d6:	480a      	ldr	r0, [pc, #40]	; (8014200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80141d8:	f007 fba4 	bl	801b924 <__aeabi_atexit>
 80141dc:	4b05      	ldr	r3, [pc, #20]	; (80141f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80141de:	612b      	str	r3, [r5, #16]
 80141e0:	4b07      	ldr	r3, [pc, #28]	; (8014200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80141e2:	616b      	str	r3, [r5, #20]
 80141e4:	bd38      	pop	{r3, r4, r5, pc}
 80141e6:	bf00      	nop
 80141e8:	2000188c 	.word	0x2000188c
 80141ec:	20000000 	.word	0x20000000
 80141f0:	0801284b 	.word	0x0801284b
 80141f4:	20000068 	.word	0x20000068
 80141f8:	20001890 	.word	0x20001890
 80141fc:	08012849 	.word	0x08012849
 8014200:	2000006c 	.word	0x2000006c

08014204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8014204:	b538      	push	{r3, r4, r5, lr}
 8014206:	4c15      	ldr	r4, [pc, #84]	; (801425c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8014208:	7823      	ldrb	r3, [r4, #0]
 801420a:	f3bf 8f5b 	dmb	ish
 801420e:	07da      	lsls	r2, r3, #31
 8014210:	4605      	mov	r5, r0
 8014212:	d40b      	bmi.n	801422c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014214:	4620      	mov	r0, r4
 8014216:	f007 fb8c 	bl	801b932 <__cxa_guard_acquire>
 801421a:	b138      	cbz	r0, 801422c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801421c:	4620      	mov	r0, r4
 801421e:	f007 fb94 	bl	801b94a <__cxa_guard_release>
 8014222:	4a0f      	ldr	r2, [pc, #60]	; (8014260 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014224:	490f      	ldr	r1, [pc, #60]	; (8014264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8014226:	4810      	ldr	r0, [pc, #64]	; (8014268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014228:	f007 fb7c 	bl	801b924 <__aeabi_atexit>
 801422c:	4c0f      	ldr	r4, [pc, #60]	; (801426c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801422e:	7823      	ldrb	r3, [r4, #0]
 8014230:	f3bf 8f5b 	dmb	ish
 8014234:	07db      	lsls	r3, r3, #31
 8014236:	d40b      	bmi.n	8014250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014238:	4620      	mov	r0, r4
 801423a:	f007 fb7a 	bl	801b932 <__cxa_guard_acquire>
 801423e:	b138      	cbz	r0, 8014250 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014240:	4620      	mov	r0, r4
 8014242:	f007 fb82 	bl	801b94a <__cxa_guard_release>
 8014246:	4a06      	ldr	r2, [pc, #24]	; (8014260 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014248:	4909      	ldr	r1, [pc, #36]	; (8014270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801424a:	480a      	ldr	r0, [pc, #40]	; (8014274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801424c:	f007 fb6a 	bl	801b924 <__aeabi_atexit>
 8014250:	4b05      	ldr	r3, [pc, #20]	; (8014268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014252:	60ab      	str	r3, [r5, #8]
 8014254:	4b07      	ldr	r3, [pc, #28]	; (8014274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014256:	60eb      	str	r3, [r5, #12]
 8014258:	bd38      	pop	{r3, r4, r5, pc}
 801425a:	bf00      	nop
 801425c:	20001864 	.word	0x20001864
 8014260:	20000000 	.word	0x20000000
 8014264:	0801284f 	.word	0x0801284f
 8014268:	20000040 	.word	0x20000040
 801426c:	20001868 	.word	0x20001868
 8014270:	0801284d 	.word	0x0801284d
 8014274:	20000044 	.word	0x20000044

08014278 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8014278:	b510      	push	{r4, lr}
 801427a:	4604      	mov	r4, r0
 801427c:	f7ff ff88 	bl	8014190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8014280:	4620      	mov	r0, r4
 8014282:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014286:	f7ff bfbd 	b.w	8014204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801428c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801428c:	b538      	push	{r3, r4, r5, lr}
 801428e:	4c15      	ldr	r4, [pc, #84]	; (80142e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014290:	7823      	ldrb	r3, [r4, #0]
 8014292:	f3bf 8f5b 	dmb	ish
 8014296:	07da      	lsls	r2, r3, #31
 8014298:	4605      	mov	r5, r0
 801429a:	d40b      	bmi.n	80142b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801429c:	4620      	mov	r0, r4
 801429e:	f007 fb48 	bl	801b932 <__cxa_guard_acquire>
 80142a2:	b138      	cbz	r0, 80142b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80142a4:	4620      	mov	r0, r4
 80142a6:	f007 fb50 	bl	801b94a <__cxa_guard_release>
 80142aa:	4a0f      	ldr	r2, [pc, #60]	; (80142e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80142ac:	490f      	ldr	r1, [pc, #60]	; (80142ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80142ae:	4810      	ldr	r0, [pc, #64]	; (80142f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80142b0:	f007 fb38 	bl	801b924 <__aeabi_atexit>
 80142b4:	4c0f      	ldr	r4, [pc, #60]	; (80142f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80142b6:	7823      	ldrb	r3, [r4, #0]
 80142b8:	f3bf 8f5b 	dmb	ish
 80142bc:	07db      	lsls	r3, r3, #31
 80142be:	d40b      	bmi.n	80142d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80142c0:	4620      	mov	r0, r4
 80142c2:	f007 fb36 	bl	801b932 <__cxa_guard_acquire>
 80142c6:	b138      	cbz	r0, 80142d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80142c8:	4620      	mov	r0, r4
 80142ca:	f007 fb3e 	bl	801b94a <__cxa_guard_release>
 80142ce:	4a06      	ldr	r2, [pc, #24]	; (80142e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80142d0:	4909      	ldr	r1, [pc, #36]	; (80142f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80142d2:	480a      	ldr	r0, [pc, #40]	; (80142fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80142d4:	f007 fb26 	bl	801b924 <__aeabi_atexit>
 80142d8:	4b05      	ldr	r3, [pc, #20]	; (80142f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80142da:	622b      	str	r3, [r5, #32]
 80142dc:	4b07      	ldr	r3, [pc, #28]	; (80142fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80142de:	626b      	str	r3, [r5, #36]	; 0x24
 80142e0:	bd38      	pop	{r3, r4, r5, pc}
 80142e2:	bf00      	nop
 80142e4:	20001894 	.word	0x20001894
 80142e8:	20000000 	.word	0x20000000
 80142ec:	08012843 	.word	0x08012843
 80142f0:	20000070 	.word	0x20000070
 80142f4:	20001898 	.word	0x20001898
 80142f8:	08012841 	.word	0x08012841
 80142fc:	20000074 	.word	0x20000074

08014300 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8014300:	b538      	push	{r3, r4, r5, lr}
 8014302:	4c15      	ldr	r4, [pc, #84]	; (8014358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8014304:	7823      	ldrb	r3, [r4, #0]
 8014306:	f3bf 8f5b 	dmb	ish
 801430a:	07da      	lsls	r2, r3, #31
 801430c:	4605      	mov	r5, r0
 801430e:	d40b      	bmi.n	8014328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014310:	4620      	mov	r0, r4
 8014312:	f007 fb0e 	bl	801b932 <__cxa_guard_acquire>
 8014316:	b138      	cbz	r0, 8014328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014318:	4620      	mov	r0, r4
 801431a:	f007 fb16 	bl	801b94a <__cxa_guard_release>
 801431e:	4a0f      	ldr	r2, [pc, #60]	; (801435c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014320:	490f      	ldr	r1, [pc, #60]	; (8014360 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8014322:	4810      	ldr	r0, [pc, #64]	; (8014364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014324:	f007 fafe 	bl	801b924 <__aeabi_atexit>
 8014328:	4c0f      	ldr	r4, [pc, #60]	; (8014368 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801432a:	7823      	ldrb	r3, [r4, #0]
 801432c:	f3bf 8f5b 	dmb	ish
 8014330:	07db      	lsls	r3, r3, #31
 8014332:	d40b      	bmi.n	801434c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014334:	4620      	mov	r0, r4
 8014336:	f007 fafc 	bl	801b932 <__cxa_guard_acquire>
 801433a:	b138      	cbz	r0, 801434c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801433c:	4620      	mov	r0, r4
 801433e:	f007 fb04 	bl	801b94a <__cxa_guard_release>
 8014342:	4a06      	ldr	r2, [pc, #24]	; (801435c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014344:	4909      	ldr	r1, [pc, #36]	; (801436c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8014346:	480a      	ldr	r0, [pc, #40]	; (8014370 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014348:	f007 faec 	bl	801b924 <__aeabi_atexit>
 801434c:	4b05      	ldr	r3, [pc, #20]	; (8014364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801434e:	61ab      	str	r3, [r5, #24]
 8014350:	4b07      	ldr	r3, [pc, #28]	; (8014370 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014352:	61eb      	str	r3, [r5, #28]
 8014354:	bd38      	pop	{r3, r4, r5, pc}
 8014356:	bf00      	nop
 8014358:	2000186c 	.word	0x2000186c
 801435c:	20000000 	.word	0x20000000
 8014360:	08012847 	.word	0x08012847
 8014364:	20000048 	.word	0x20000048
 8014368:	20001870 	.word	0x20001870
 801436c:	08012845 	.word	0x08012845
 8014370:	2000004c 	.word	0x2000004c

08014374 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8014374:	b510      	push	{r4, lr}
 8014376:	4604      	mov	r4, r0
 8014378:	f7ff ff88 	bl	801428c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801437c:	4620      	mov	r0, r4
 801437e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014382:	f7ff bfbd 	b.w	8014300 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08014388 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8014388:	b538      	push	{r3, r4, r5, lr}
 801438a:	4c15      	ldr	r4, [pc, #84]	; (80143e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801438c:	7823      	ldrb	r3, [r4, #0]
 801438e:	f3bf 8f5b 	dmb	ish
 8014392:	07da      	lsls	r2, r3, #31
 8014394:	4605      	mov	r5, r0
 8014396:	d40b      	bmi.n	80143b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014398:	4620      	mov	r0, r4
 801439a:	f007 faca 	bl	801b932 <__cxa_guard_acquire>
 801439e:	b138      	cbz	r0, 80143b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80143a0:	4620      	mov	r0, r4
 80143a2:	f007 fad2 	bl	801b94a <__cxa_guard_release>
 80143a6:	4a0f      	ldr	r2, [pc, #60]	; (80143e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80143a8:	490f      	ldr	r1, [pc, #60]	; (80143e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80143aa:	4810      	ldr	r0, [pc, #64]	; (80143ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80143ac:	f007 faba 	bl	801b924 <__aeabi_atexit>
 80143b0:	4c0f      	ldr	r4, [pc, #60]	; (80143f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80143b2:	7823      	ldrb	r3, [r4, #0]
 80143b4:	f3bf 8f5b 	dmb	ish
 80143b8:	07db      	lsls	r3, r3, #31
 80143ba:	d40b      	bmi.n	80143d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80143bc:	4620      	mov	r0, r4
 80143be:	f007 fab8 	bl	801b932 <__cxa_guard_acquire>
 80143c2:	b138      	cbz	r0, 80143d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80143c4:	4620      	mov	r0, r4
 80143c6:	f007 fac0 	bl	801b94a <__cxa_guard_release>
 80143ca:	4a06      	ldr	r2, [pc, #24]	; (80143e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80143cc:	4909      	ldr	r1, [pc, #36]	; (80143f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80143ce:	480a      	ldr	r0, [pc, #40]	; (80143f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80143d0:	f007 faa8 	bl	801b924 <__aeabi_atexit>
 80143d4:	4b05      	ldr	r3, [pc, #20]	; (80143ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80143d6:	632b      	str	r3, [r5, #48]	; 0x30
 80143d8:	4b07      	ldr	r3, [pc, #28]	; (80143f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80143da:	636b      	str	r3, [r5, #52]	; 0x34
 80143dc:	bd38      	pop	{r3, r4, r5, pc}
 80143de:	bf00      	nop
 80143e0:	200018a4 	.word	0x200018a4
 80143e4:	20000000 	.word	0x20000000
 80143e8:	0801283b 	.word	0x0801283b
 80143ec:	20000080 	.word	0x20000080
 80143f0:	200018a8 	.word	0x200018a8
 80143f4:	08012839 	.word	0x08012839
 80143f8:	20000084 	.word	0x20000084

080143fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80143fc:	b538      	push	{r3, r4, r5, lr}
 80143fe:	4c15      	ldr	r4, [pc, #84]	; (8014454 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8014400:	7823      	ldrb	r3, [r4, #0]
 8014402:	f3bf 8f5b 	dmb	ish
 8014406:	07da      	lsls	r2, r3, #31
 8014408:	4605      	mov	r5, r0
 801440a:	d40b      	bmi.n	8014424 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801440c:	4620      	mov	r0, r4
 801440e:	f007 fa90 	bl	801b932 <__cxa_guard_acquire>
 8014412:	b138      	cbz	r0, 8014424 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8014414:	4620      	mov	r0, r4
 8014416:	f007 fa98 	bl	801b94a <__cxa_guard_release>
 801441a:	4a0f      	ldr	r2, [pc, #60]	; (8014458 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801441c:	490f      	ldr	r1, [pc, #60]	; (801445c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801441e:	4810      	ldr	r0, [pc, #64]	; (8014460 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014420:	f007 fa80 	bl	801b924 <__aeabi_atexit>
 8014424:	4c0f      	ldr	r4, [pc, #60]	; (8014464 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8014426:	7823      	ldrb	r3, [r4, #0]
 8014428:	f3bf 8f5b 	dmb	ish
 801442c:	07db      	lsls	r3, r3, #31
 801442e:	d40b      	bmi.n	8014448 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014430:	4620      	mov	r0, r4
 8014432:	f007 fa7e 	bl	801b932 <__cxa_guard_acquire>
 8014436:	b138      	cbz	r0, 8014448 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014438:	4620      	mov	r0, r4
 801443a:	f007 fa86 	bl	801b94a <__cxa_guard_release>
 801443e:	4a06      	ldr	r2, [pc, #24]	; (8014458 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014440:	4909      	ldr	r1, [pc, #36]	; (8014468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8014442:	480a      	ldr	r0, [pc, #40]	; (801446c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014444:	f007 fa6e 	bl	801b924 <__aeabi_atexit>
 8014448:	4b05      	ldr	r3, [pc, #20]	; (8014460 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801444a:	62ab      	str	r3, [r5, #40]	; 0x28
 801444c:	4b07      	ldr	r3, [pc, #28]	; (801446c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801444e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8014450:	bd38      	pop	{r3, r4, r5, pc}
 8014452:	bf00      	nop
 8014454:	20001874 	.word	0x20001874
 8014458:	20000000 	.word	0x20000000
 801445c:	0801283f 	.word	0x0801283f
 8014460:	20000050 	.word	0x20000050
 8014464:	20001878 	.word	0x20001878
 8014468:	0801283d 	.word	0x0801283d
 801446c:	20000054 	.word	0x20000054

08014470 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8014470:	b510      	push	{r4, lr}
 8014472:	4604      	mov	r4, r0
 8014474:	f7ff ff88 	bl	8014388 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8014478:	4620      	mov	r0, r4
 801447a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801447e:	f7ff bfbd 	b.w	80143fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08014484 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8014484:	b538      	push	{r3, r4, r5, lr}
 8014486:	4c15      	ldr	r4, [pc, #84]	; (80144dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8014488:	7823      	ldrb	r3, [r4, #0]
 801448a:	f3bf 8f5b 	dmb	ish
 801448e:	07da      	lsls	r2, r3, #31
 8014490:	4605      	mov	r5, r0
 8014492:	d40b      	bmi.n	80144ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014494:	4620      	mov	r0, r4
 8014496:	f007 fa4c 	bl	801b932 <__cxa_guard_acquire>
 801449a:	b138      	cbz	r0, 80144ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801449c:	4620      	mov	r0, r4
 801449e:	f007 fa54 	bl	801b94a <__cxa_guard_release>
 80144a2:	4a0f      	ldr	r2, [pc, #60]	; (80144e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80144a4:	490f      	ldr	r1, [pc, #60]	; (80144e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80144a6:	4810      	ldr	r0, [pc, #64]	; (80144e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80144a8:	f007 fa3c 	bl	801b924 <__aeabi_atexit>
 80144ac:	4c0f      	ldr	r4, [pc, #60]	; (80144ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80144ae:	7823      	ldrb	r3, [r4, #0]
 80144b0:	f3bf 8f5b 	dmb	ish
 80144b4:	07db      	lsls	r3, r3, #31
 80144b6:	d40b      	bmi.n	80144d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80144b8:	4620      	mov	r0, r4
 80144ba:	f007 fa3a 	bl	801b932 <__cxa_guard_acquire>
 80144be:	b138      	cbz	r0, 80144d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80144c0:	4620      	mov	r0, r4
 80144c2:	f007 fa42 	bl	801b94a <__cxa_guard_release>
 80144c6:	4a06      	ldr	r2, [pc, #24]	; (80144e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80144c8:	4909      	ldr	r1, [pc, #36]	; (80144f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80144ca:	480a      	ldr	r0, [pc, #40]	; (80144f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80144cc:	f007 fa2a 	bl	801b924 <__aeabi_atexit>
 80144d0:	4b05      	ldr	r3, [pc, #20]	; (80144e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80144d2:	652b      	str	r3, [r5, #80]	; 0x50
 80144d4:	4b07      	ldr	r3, [pc, #28]	; (80144f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80144d6:	656b      	str	r3, [r5, #84]	; 0x54
 80144d8:	bd38      	pop	{r3, r4, r5, pc}
 80144da:	bf00      	nop
 80144dc:	200018ac 	.word	0x200018ac
 80144e0:	20000000 	.word	0x20000000
 80144e4:	0801282b 	.word	0x0801282b
 80144e8:	20000088 	.word	0x20000088
 80144ec:	200018b0 	.word	0x200018b0
 80144f0:	08012829 	.word	0x08012829
 80144f4:	2000008c 	.word	0x2000008c

080144f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80144f8:	b538      	push	{r3, r4, r5, lr}
 80144fa:	4c15      	ldr	r4, [pc, #84]	; (8014550 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80144fc:	7823      	ldrb	r3, [r4, #0]
 80144fe:	f3bf 8f5b 	dmb	ish
 8014502:	07da      	lsls	r2, r3, #31
 8014504:	4605      	mov	r5, r0
 8014506:	d40b      	bmi.n	8014520 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8014508:	4620      	mov	r0, r4
 801450a:	f007 fa12 	bl	801b932 <__cxa_guard_acquire>
 801450e:	b138      	cbz	r0, 8014520 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8014510:	4620      	mov	r0, r4
 8014512:	f007 fa1a 	bl	801b94a <__cxa_guard_release>
 8014516:	4a0f      	ldr	r2, [pc, #60]	; (8014554 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8014518:	490f      	ldr	r1, [pc, #60]	; (8014558 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801451a:	4810      	ldr	r0, [pc, #64]	; (801455c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801451c:	f007 fa02 	bl	801b924 <__aeabi_atexit>
 8014520:	4c0f      	ldr	r4, [pc, #60]	; (8014560 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8014522:	7823      	ldrb	r3, [r4, #0]
 8014524:	f3bf 8f5b 	dmb	ish
 8014528:	07db      	lsls	r3, r3, #31
 801452a:	d40b      	bmi.n	8014544 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801452c:	4620      	mov	r0, r4
 801452e:	f007 fa00 	bl	801b932 <__cxa_guard_acquire>
 8014532:	b138      	cbz	r0, 8014544 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8014534:	4620      	mov	r0, r4
 8014536:	f007 fa08 	bl	801b94a <__cxa_guard_release>
 801453a:	4a06      	ldr	r2, [pc, #24]	; (8014554 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801453c:	4909      	ldr	r1, [pc, #36]	; (8014564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801453e:	480a      	ldr	r0, [pc, #40]	; (8014568 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014540:	f007 f9f0 	bl	801b924 <__aeabi_atexit>
 8014544:	4b05      	ldr	r3, [pc, #20]	; (801455c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8014546:	64ab      	str	r3, [r5, #72]	; 0x48
 8014548:	4b07      	ldr	r3, [pc, #28]	; (8014568 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801454a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801454c:	bd38      	pop	{r3, r4, r5, pc}
 801454e:	bf00      	nop
 8014550:	200018b4 	.word	0x200018b4
 8014554:	20000000 	.word	0x20000000
 8014558:	0801282f 	.word	0x0801282f
 801455c:	20000090 	.word	0x20000090
 8014560:	200018b8 	.word	0x200018b8
 8014564:	0801282d 	.word	0x0801282d
 8014568:	20000094 	.word	0x20000094

0801456c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801456c:	b538      	push	{r3, r4, r5, lr}
 801456e:	4c15      	ldr	r4, [pc, #84]	; (80145c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8014570:	7823      	ldrb	r3, [r4, #0]
 8014572:	f3bf 8f5b 	dmb	ish
 8014576:	07da      	lsls	r2, r3, #31
 8014578:	4605      	mov	r5, r0
 801457a:	d40b      	bmi.n	8014594 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801457c:	4620      	mov	r0, r4
 801457e:	f007 f9d8 	bl	801b932 <__cxa_guard_acquire>
 8014582:	b138      	cbz	r0, 8014594 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014584:	4620      	mov	r0, r4
 8014586:	f007 f9e0 	bl	801b94a <__cxa_guard_release>
 801458a:	4a0f      	ldr	r2, [pc, #60]	; (80145c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801458c:	490f      	ldr	r1, [pc, #60]	; (80145cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801458e:	4810      	ldr	r0, [pc, #64]	; (80145d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014590:	f007 f9c8 	bl	801b924 <__aeabi_atexit>
 8014594:	4c0f      	ldr	r4, [pc, #60]	; (80145d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8014596:	7823      	ldrb	r3, [r4, #0]
 8014598:	f3bf 8f5b 	dmb	ish
 801459c:	07db      	lsls	r3, r3, #31
 801459e:	d40b      	bmi.n	80145b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80145a0:	4620      	mov	r0, r4
 80145a2:	f007 f9c6 	bl	801b932 <__cxa_guard_acquire>
 80145a6:	b138      	cbz	r0, 80145b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80145a8:	4620      	mov	r0, r4
 80145aa:	f007 f9ce 	bl	801b94a <__cxa_guard_release>
 80145ae:	4a06      	ldr	r2, [pc, #24]	; (80145c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80145b0:	4909      	ldr	r1, [pc, #36]	; (80145d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80145b2:	480a      	ldr	r0, [pc, #40]	; (80145dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80145b4:	f007 f9b6 	bl	801b924 <__aeabi_atexit>
 80145b8:	4b05      	ldr	r3, [pc, #20]	; (80145d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80145ba:	642b      	str	r3, [r5, #64]	; 0x40
 80145bc:	4b07      	ldr	r3, [pc, #28]	; (80145dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80145be:	646b      	str	r3, [r5, #68]	; 0x44
 80145c0:	bd38      	pop	{r3, r4, r5, pc}
 80145c2:	bf00      	nop
 80145c4:	2000187c 	.word	0x2000187c
 80145c8:	20000000 	.word	0x20000000
 80145cc:	08012833 	.word	0x08012833
 80145d0:	20000058 	.word	0x20000058
 80145d4:	20001880 	.word	0x20001880
 80145d8:	08012831 	.word	0x08012831
 80145dc:	2000005c 	.word	0x2000005c

080145e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80145e0:	b538      	push	{r3, r4, r5, lr}
 80145e2:	4c15      	ldr	r4, [pc, #84]	; (8014638 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80145e4:	7823      	ldrb	r3, [r4, #0]
 80145e6:	f3bf 8f5b 	dmb	ish
 80145ea:	07da      	lsls	r2, r3, #31
 80145ec:	4605      	mov	r5, r0
 80145ee:	d40b      	bmi.n	8014608 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80145f0:	4620      	mov	r0, r4
 80145f2:	f007 f99e 	bl	801b932 <__cxa_guard_acquire>
 80145f6:	b138      	cbz	r0, 8014608 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80145f8:	4620      	mov	r0, r4
 80145fa:	f007 f9a6 	bl	801b94a <__cxa_guard_release>
 80145fe:	4a0f      	ldr	r2, [pc, #60]	; (801463c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8014600:	490f      	ldr	r1, [pc, #60]	; (8014640 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8014602:	4810      	ldr	r0, [pc, #64]	; (8014644 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8014604:	f007 f98e 	bl	801b924 <__aeabi_atexit>
 8014608:	4c0f      	ldr	r4, [pc, #60]	; (8014648 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801460a:	7823      	ldrb	r3, [r4, #0]
 801460c:	f3bf 8f5b 	dmb	ish
 8014610:	07db      	lsls	r3, r3, #31
 8014612:	d40b      	bmi.n	801462c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8014614:	4620      	mov	r0, r4
 8014616:	f007 f98c 	bl	801b932 <__cxa_guard_acquire>
 801461a:	b138      	cbz	r0, 801462c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801461c:	4620      	mov	r0, r4
 801461e:	f007 f994 	bl	801b94a <__cxa_guard_release>
 8014622:	4a06      	ldr	r2, [pc, #24]	; (801463c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8014624:	4909      	ldr	r1, [pc, #36]	; (801464c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8014626:	480a      	ldr	r0, [pc, #40]	; (8014650 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014628:	f007 f97c 	bl	801b924 <__aeabi_atexit>
 801462c:	4b05      	ldr	r3, [pc, #20]	; (8014644 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801462e:	63ab      	str	r3, [r5, #56]	; 0x38
 8014630:	4b07      	ldr	r3, [pc, #28]	; (8014650 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014632:	63eb      	str	r3, [r5, #60]	; 0x3c
 8014634:	bd38      	pop	{r3, r4, r5, pc}
 8014636:	bf00      	nop
 8014638:	2000189c 	.word	0x2000189c
 801463c:	20000000 	.word	0x20000000
 8014640:	08012837 	.word	0x08012837
 8014644:	20000078 	.word	0x20000078
 8014648:	200018a0 	.word	0x200018a0
 801464c:	08012835 	.word	0x08012835
 8014650:	2000007c 	.word	0x2000007c

08014654 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8014654:	b510      	push	{r4, lr}
 8014656:	4604      	mov	r4, r0
 8014658:	f7ff ff14 	bl	8014484 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801465c:	4620      	mov	r0, r4
 801465e:	f7ff ff85 	bl	801456c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8014662:	4620      	mov	r0, r4
 8014664:	f7ff ff48 	bl	80144f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014668:	4620      	mov	r0, r4
 801466a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801466e:	f7ff bfb7 	b.w	80145e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08014674 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8014674:	b538      	push	{r3, r4, r5, lr}
 8014676:	4c15      	ldr	r4, [pc, #84]	; (80146cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014678:	7823      	ldrb	r3, [r4, #0]
 801467a:	f3bf 8f5b 	dmb	ish
 801467e:	07da      	lsls	r2, r3, #31
 8014680:	4605      	mov	r5, r0
 8014682:	d40b      	bmi.n	801469c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014684:	4620      	mov	r0, r4
 8014686:	f007 f954 	bl	801b932 <__cxa_guard_acquire>
 801468a:	b138      	cbz	r0, 801469c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801468c:	4620      	mov	r0, r4
 801468e:	f007 f95c 	bl	801b94a <__cxa_guard_release>
 8014692:	4a0f      	ldr	r2, [pc, #60]	; (80146d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014694:	490f      	ldr	r1, [pc, #60]	; (80146d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8014696:	4810      	ldr	r0, [pc, #64]	; (80146d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014698:	f007 f944 	bl	801b924 <__aeabi_atexit>
 801469c:	4c0f      	ldr	r4, [pc, #60]	; (80146dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801469e:	7823      	ldrb	r3, [r4, #0]
 80146a0:	f3bf 8f5b 	dmb	ish
 80146a4:	07db      	lsls	r3, r3, #31
 80146a6:	d40b      	bmi.n	80146c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80146a8:	4620      	mov	r0, r4
 80146aa:	f007 f942 	bl	801b932 <__cxa_guard_acquire>
 80146ae:	b138      	cbz	r0, 80146c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80146b0:	4620      	mov	r0, r4
 80146b2:	f007 f94a 	bl	801b94a <__cxa_guard_release>
 80146b6:	4a06      	ldr	r2, [pc, #24]	; (80146d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80146b8:	4909      	ldr	r1, [pc, #36]	; (80146e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80146ba:	480a      	ldr	r0, [pc, #40]	; (80146e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80146bc:	f007 f932 	bl	801b924 <__aeabi_atexit>
 80146c0:	4b05      	ldr	r3, [pc, #20]	; (80146d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80146c2:	662b      	str	r3, [r5, #96]	; 0x60
 80146c4:	4b07      	ldr	r3, [pc, #28]	; (80146e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80146c6:	666b      	str	r3, [r5, #100]	; 0x64
 80146c8:	bd38      	pop	{r3, r4, r5, pc}
 80146ca:	bf00      	nop
 80146cc:	20001884 	.word	0x20001884
 80146d0:	20000000 	.word	0x20000000
 80146d4:	08012823 	.word	0x08012823
 80146d8:	20000060 	.word	0x20000060
 80146dc:	20001888 	.word	0x20001888
 80146e0:	08012821 	.word	0x08012821
 80146e4:	20000064 	.word	0x20000064

080146e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80146e8:	b538      	push	{r3, r4, r5, lr}
 80146ea:	4c15      	ldr	r4, [pc, #84]	; (8014740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80146ec:	7823      	ldrb	r3, [r4, #0]
 80146ee:	f3bf 8f5b 	dmb	ish
 80146f2:	07da      	lsls	r2, r3, #31
 80146f4:	4605      	mov	r5, r0
 80146f6:	d40b      	bmi.n	8014710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80146f8:	4620      	mov	r0, r4
 80146fa:	f007 f91a 	bl	801b932 <__cxa_guard_acquire>
 80146fe:	b138      	cbz	r0, 8014710 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8014700:	4620      	mov	r0, r4
 8014702:	f007 f922 	bl	801b94a <__cxa_guard_release>
 8014706:	4a0f      	ldr	r2, [pc, #60]	; (8014744 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014708:	490f      	ldr	r1, [pc, #60]	; (8014748 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801470a:	4810      	ldr	r0, [pc, #64]	; (801474c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801470c:	f007 f90a 	bl	801b924 <__aeabi_atexit>
 8014710:	4c0f      	ldr	r4, [pc, #60]	; (8014750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8014712:	7823      	ldrb	r3, [r4, #0]
 8014714:	f3bf 8f5b 	dmb	ish
 8014718:	07db      	lsls	r3, r3, #31
 801471a:	d40b      	bmi.n	8014734 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801471c:	4620      	mov	r0, r4
 801471e:	f007 f908 	bl	801b932 <__cxa_guard_acquire>
 8014722:	b138      	cbz	r0, 8014734 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014724:	4620      	mov	r0, r4
 8014726:	f007 f910 	bl	801b94a <__cxa_guard_release>
 801472a:	4a06      	ldr	r2, [pc, #24]	; (8014744 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801472c:	4909      	ldr	r1, [pc, #36]	; (8014754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801472e:	480a      	ldr	r0, [pc, #40]	; (8014758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014730:	f007 f8f8 	bl	801b924 <__aeabi_atexit>
 8014734:	4b05      	ldr	r3, [pc, #20]	; (801474c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8014736:	65ab      	str	r3, [r5, #88]	; 0x58
 8014738:	4b07      	ldr	r3, [pc, #28]	; (8014758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801473a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801473c:	bd38      	pop	{r3, r4, r5, pc}
 801473e:	bf00      	nop
 8014740:	2000185c 	.word	0x2000185c
 8014744:	20000000 	.word	0x20000000
 8014748:	08012827 	.word	0x08012827
 801474c:	20000038 	.word	0x20000038
 8014750:	20001860 	.word	0x20001860
 8014754:	08012825 	.word	0x08012825
 8014758:	2000003c 	.word	0x2000003c

0801475c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801475c:	b510      	push	{r4, lr}
 801475e:	4604      	mov	r4, r0
 8014760:	f7ff ff88 	bl	8014674 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8014764:	4620      	mov	r0, r4
 8014766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801476a:	f7ff bfbd 	b.w	80146e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014770:	b538      	push	{r3, r4, r5, lr}
 8014772:	4c15      	ldr	r4, [pc, #84]	; (80147c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8014774:	7823      	ldrb	r3, [r4, #0]
 8014776:	f3bf 8f5b 	dmb	ish
 801477a:	07da      	lsls	r2, r3, #31
 801477c:	4605      	mov	r5, r0
 801477e:	d40b      	bmi.n	8014798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014780:	4620      	mov	r0, r4
 8014782:	f007 f8d6 	bl	801b932 <__cxa_guard_acquire>
 8014786:	b138      	cbz	r0, 8014798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014788:	4620      	mov	r0, r4
 801478a:	f007 f8de 	bl	801b94a <__cxa_guard_release>
 801478e:	4a0f      	ldr	r2, [pc, #60]	; (80147cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014790:	490f      	ldr	r1, [pc, #60]	; (80147d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8014792:	4810      	ldr	r0, [pc, #64]	; (80147d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014794:	f007 f8c6 	bl	801b924 <__aeabi_atexit>
 8014798:	4c0f      	ldr	r4, [pc, #60]	; (80147d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801479a:	7823      	ldrb	r3, [r4, #0]
 801479c:	f3bf 8f5b 	dmb	ish
 80147a0:	07db      	lsls	r3, r3, #31
 80147a2:	d40b      	bmi.n	80147bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80147a4:	4620      	mov	r0, r4
 80147a6:	f007 f8c4 	bl	801b932 <__cxa_guard_acquire>
 80147aa:	b138      	cbz	r0, 80147bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80147ac:	4620      	mov	r0, r4
 80147ae:	f007 f8cc 	bl	801b94a <__cxa_guard_release>
 80147b2:	4a06      	ldr	r2, [pc, #24]	; (80147cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80147b4:	4909      	ldr	r1, [pc, #36]	; (80147dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80147b6:	480a      	ldr	r0, [pc, #40]	; (80147e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80147b8:	f007 f8b4 	bl	801b924 <__aeabi_atexit>
 80147bc:	4b05      	ldr	r3, [pc, #20]	; (80147d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80147be:	672b      	str	r3, [r5, #112]	; 0x70
 80147c0:	4b07      	ldr	r3, [pc, #28]	; (80147e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80147c2:	676b      	str	r3, [r5, #116]	; 0x74
 80147c4:	bd38      	pop	{r3, r4, r5, pc}
 80147c6:	bf00      	nop
 80147c8:	20001854 	.word	0x20001854
 80147cc:	20000000 	.word	0x20000000
 80147d0:	0801281b 	.word	0x0801281b
 80147d4:	20000030 	.word	0x20000030
 80147d8:	20001858 	.word	0x20001858
 80147dc:	08012819 	.word	0x08012819
 80147e0:	20000034 	.word	0x20000034

080147e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80147e4:	b538      	push	{r3, r4, r5, lr}
 80147e6:	4c15      	ldr	r4, [pc, #84]	; (801483c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80147e8:	7823      	ldrb	r3, [r4, #0]
 80147ea:	f3bf 8f5b 	dmb	ish
 80147ee:	07da      	lsls	r2, r3, #31
 80147f0:	4605      	mov	r5, r0
 80147f2:	d40b      	bmi.n	801480c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80147f4:	4620      	mov	r0, r4
 80147f6:	f007 f89c 	bl	801b932 <__cxa_guard_acquire>
 80147fa:	b138      	cbz	r0, 801480c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80147fc:	4620      	mov	r0, r4
 80147fe:	f007 f8a4 	bl	801b94a <__cxa_guard_release>
 8014802:	4a0f      	ldr	r2, [pc, #60]	; (8014840 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014804:	490f      	ldr	r1, [pc, #60]	; (8014844 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8014806:	4810      	ldr	r0, [pc, #64]	; (8014848 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014808:	f007 f88c 	bl	801b924 <__aeabi_atexit>
 801480c:	4c0f      	ldr	r4, [pc, #60]	; (801484c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801480e:	7823      	ldrb	r3, [r4, #0]
 8014810:	f3bf 8f5b 	dmb	ish
 8014814:	07db      	lsls	r3, r3, #31
 8014816:	d40b      	bmi.n	8014830 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014818:	4620      	mov	r0, r4
 801481a:	f007 f88a 	bl	801b932 <__cxa_guard_acquire>
 801481e:	b138      	cbz	r0, 8014830 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014820:	4620      	mov	r0, r4
 8014822:	f007 f892 	bl	801b94a <__cxa_guard_release>
 8014826:	4a06      	ldr	r2, [pc, #24]	; (8014840 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014828:	4909      	ldr	r1, [pc, #36]	; (8014850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801482a:	480a      	ldr	r0, [pc, #40]	; (8014854 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801482c:	f007 f87a 	bl	801b924 <__aeabi_atexit>
 8014830:	4b05      	ldr	r3, [pc, #20]	; (8014848 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014832:	66ab      	str	r3, [r5, #104]	; 0x68
 8014834:	4b07      	ldr	r3, [pc, #28]	; (8014854 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014836:	66eb      	str	r3, [r5, #108]	; 0x6c
 8014838:	bd38      	pop	{r3, r4, r5, pc}
 801483a:	bf00      	nop
 801483c:	2000184c 	.word	0x2000184c
 8014840:	20000000 	.word	0x20000000
 8014844:	0801281f 	.word	0x0801281f
 8014848:	20000028 	.word	0x20000028
 801484c:	20001850 	.word	0x20001850
 8014850:	0801281d 	.word	0x0801281d
 8014854:	2000002c 	.word	0x2000002c

08014858 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014858:	b510      	push	{r4, lr}
 801485a:	4604      	mov	r4, r0
 801485c:	f7ff ff88 	bl	8014770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014860:	4620      	mov	r0, r4
 8014862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014866:	f7ff bfbd 	b.w	80147e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801486a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801486a:	b510      	push	{r4, lr}
 801486c:	4604      	mov	r4, r0
 801486e:	f7ff fff3 	bl	8014858 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8014872:	4620      	mov	r0, r4
 8014874:	f7ff ff72 	bl	801475c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014878:	4620      	mov	r0, r4
 801487a:	f7ff fdf9 	bl	8014470 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801487e:	4620      	mov	r0, r4
 8014880:	f7ff fcfa 	bl	8014278 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8014884:	4620      	mov	r0, r4
 8014886:	f7ff fd75 	bl	8014374 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801488a:	4620      	mov	r0, r4
 801488c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014890:	f7ff bee0 	b.w	8014654 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08014894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8014894:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014898:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801489c:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80148a0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80148a4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80148a8:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80148ac:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80148b0:	8808      	ldrh	r0, [r1, #0]
 80148b2:	fb0e 4708 	mla	r7, lr, r8, r4
 80148b6:	f1be 0f00 	cmp.w	lr, #0
 80148ba:	eb02 0a07 	add.w	sl, r2, r7
 80148be:	db37      	blt.n	8014930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80148c0:	45f3      	cmp	fp, lr
 80148c2:	dd35      	ble.n	8014930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80148c4:	2c00      	cmp	r4, #0
 80148c6:	db31      	blt.n	801492c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80148c8:	45a0      	cmp	r8, r4
 80148ca:	dd2f      	ble.n	801492c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80148cc:	5dd2      	ldrb	r2, [r2, r7]
 80148ce:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80148d2:	1c62      	adds	r2, r4, #1
 80148d4:	d42f      	bmi.n	8014936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80148d6:	4590      	cmp	r8, r2
 80148d8:	dd2d      	ble.n	8014936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80148da:	b366      	cbz	r6, 8014936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80148dc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80148e0:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80148e4:	f11e 0e01 	adds.w	lr, lr, #1
 80148e8:	d429      	bmi.n	801493e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80148ea:	45f3      	cmp	fp, lr
 80148ec:	dd27      	ble.n	801493e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80148ee:	f1bc 0f00 	cmp.w	ip, #0
 80148f2:	f000 80a0 	beq.w	8014a36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80148f6:	2c00      	cmp	r4, #0
 80148f8:	db1f      	blt.n	801493a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80148fa:	45a0      	cmp	r8, r4
 80148fc:	dd1d      	ble.n	801493a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80148fe:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8014902:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8014906:	3401      	adds	r4, #1
 8014908:	d41c      	bmi.n	8014944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801490a:	45a0      	cmp	r8, r4
 801490c:	dd1a      	ble.n	8014944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801490e:	b1de      	cbz	r6, 8014948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8014910:	44d0      	add	r8, sl
 8014912:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014916:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801491a:	2e0f      	cmp	r6, #15
 801491c:	d915      	bls.n	801494a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801491e:	4b49      	ldr	r3, [pc, #292]	; (8014a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8014920:	4a49      	ldr	r2, [pc, #292]	; (8014a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8014922:	484a      	ldr	r0, [pc, #296]	; (8014a4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8014924:	f240 3155 	movw	r1, #853	; 0x355
 8014928:	f007 f830 	bl	801b98c <__assert_func>
 801492c:	4681      	mov	r9, r0
 801492e:	e7d0      	b.n	80148d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8014930:	4607      	mov	r7, r0
 8014932:	4681      	mov	r9, r0
 8014934:	e7d6      	b.n	80148e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014936:	4607      	mov	r7, r0
 8014938:	e7d4      	b.n	80148e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801493a:	4686      	mov	lr, r0
 801493c:	e7e3      	b.n	8014906 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 801493e:	4603      	mov	r3, r0
 8014940:	4686      	mov	lr, r0
 8014942:	e7ea      	b.n	801491a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014944:	4603      	mov	r3, r0
 8014946:	e7e8      	b.n	801491a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014948:	4603      	mov	r3, r0
 801494a:	f1bc 0f0f 	cmp.w	ip, #15
 801494e:	d8e6      	bhi.n	801491e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014950:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8014954:	fb16 f80c 	smulbb	r8, r6, ip
 8014958:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801495c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014960:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014964:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014968:	ea44 0909 	orr.w	r9, r4, r9
 801496c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014970:	f1cc 0410 	rsb	r4, ip, #16
 8014974:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014978:	1ba4      	subs	r4, r4, r6
 801497a:	041a      	lsls	r2, r3, #16
 801497c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014980:	ea4a 0707 	orr.w	r7, sl, r7
 8014984:	4377      	muls	r7, r6
 8014986:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801498a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801498e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014992:	fb04 7409 	mla	r4, r4, r9, r7
 8014996:	4313      	orrs	r3, r2
 8014998:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801499c:	fb08 4303 	mla	r3, r8, r3, r4
 80149a0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80149a4:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80149a8:	4322      	orrs	r2, r4
 80149aa:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80149ae:	fb0c 3202 	mla	r2, ip, r2, r3
 80149b2:	0d53      	lsrs	r3, r2, #21
 80149b4:	0952      	lsrs	r2, r2, #5
 80149b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80149ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80149be:	431a      	orrs	r2, r3
 80149c0:	b293      	uxth	r3, r2
 80149c2:	b2af      	uxth	r7, r5
 80149c4:	1202      	asrs	r2, r0, #8
 80149c6:	43ed      	mvns	r5, r5
 80149c8:	b2ed      	uxtb	r5, r5
 80149ca:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80149ce:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80149d2:	fb12 f205 	smulbb	r2, r2, r5
 80149d6:	10c6      	asrs	r6, r0, #3
 80149d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80149dc:	fb0c 2c07 	mla	ip, ip, r7, r2
 80149e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80149e4:	10da      	asrs	r2, r3, #3
 80149e6:	fb16 f605 	smulbb	r6, r6, r5
 80149ea:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80149ee:	fb02 6207 	mla	r2, r2, r7, r6
 80149f2:	b296      	uxth	r6, r2
 80149f4:	00c2      	lsls	r2, r0, #3
 80149f6:	00dc      	lsls	r4, r3, #3
 80149f8:	b2d2      	uxtb	r2, r2
 80149fa:	b2e4      	uxtb	r4, r4
 80149fc:	fb12 f205 	smulbb	r2, r2, r5
 8014a00:	fb04 2207 	mla	r2, r4, r7, r2
 8014a04:	fa1f fc8c 	uxth.w	ip, ip
 8014a08:	b292      	uxth	r2, r2
 8014a0a:	f10c 0301 	add.w	r3, ip, #1
 8014a0e:	1c50      	adds	r0, r2, #1
 8014a10:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8014a14:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8014a18:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014a1c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014a20:	4313      	orrs	r3, r2
 8014a22:	1c72      	adds	r2, r6, #1
 8014a24:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8014a28:	0952      	lsrs	r2, r2, #5
 8014a2a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014a2e:	4313      	orrs	r3, r2
 8014a30:	800b      	strh	r3, [r1, #0]
 8014a32:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a36:	2e0f      	cmp	r6, #15
 8014a38:	f63f af71 	bhi.w	801491e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014a3c:	4603      	mov	r3, r0
 8014a3e:	4686      	mov	lr, r0
 8014a40:	e786      	b.n	8014950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8014a42:	bf00      	nop
 8014a44:	0802112b 	.word	0x0802112b
 8014a48:	08021732 	.word	0x08021732
 8014a4c:	080211b3 	.word	0x080211b3

08014a50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014a50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a54:	ed2d 8b08 	vpush	{d8-d11}
 8014a58:	b09b      	sub	sp, #108	; 0x6c
 8014a5a:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8014a5e:	9309      	str	r3, [sp, #36]	; 0x24
 8014a60:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8014a64:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8014a66:	930a      	str	r3, [sp, #40]	; 0x28
 8014a68:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8014a6c:	930e      	str	r3, [sp, #56]	; 0x38
 8014a6e:	910d      	str	r1, [sp, #52]	; 0x34
 8014a70:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8014a74:	9018      	str	r0, [sp, #96]	; 0x60
 8014a76:	6870      	ldr	r0, [r6, #4]
 8014a78:	9217      	str	r2, [sp, #92]	; 0x5c
 8014a7a:	fb00 1303 	mla	r3, r0, r3, r1
 8014a7e:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8014a80:	6831      	ldr	r1, [r6, #0]
 8014a82:	6856      	ldr	r6, [r2, #4]
 8014a84:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8014a88:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8014a8c:	6813      	ldr	r3, [r2, #0]
 8014a8e:	930c      	str	r3, [sp, #48]	; 0x30
 8014a90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a92:	43db      	mvns	r3, r3
 8014a94:	b2db      	uxtb	r3, r3
 8014a96:	eeb0 aa40 	vmov.f32	s20, s0
 8014a9a:	eef0 9a60 	vmov.f32	s19, s1
 8014a9e:	eeb0 9a41 	vmov.f32	s18, s2
 8014aa2:	eeb0 8a62 	vmov.f32	s16, s5
 8014aa6:	eef0 8a43 	vmov.f32	s17, s6
 8014aaa:	eef0 ba44 	vmov.f32	s23, s8
 8014aae:	eeb0 ba64 	vmov.f32	s22, s9
 8014ab2:	eef0 aa45 	vmov.f32	s21, s10
 8014ab6:	3604      	adds	r6, #4
 8014ab8:	930b      	str	r3, [sp, #44]	; 0x2c
 8014aba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014abc:	2b00      	cmp	r3, #0
 8014abe:	dc03      	bgt.n	8014ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014ac0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8014ac2:	2b00      	cmp	r3, #0
 8014ac4:	f340 8215 	ble.w	8014ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8014ac8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014aca:	2b00      	cmp	r3, #0
 8014acc:	f340 8102 	ble.w	8014cd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8014ad0:	ea5f 4229 	movs.w	r2, r9, asr #16
 8014ad4:	ea4f 4328 	mov.w	r3, r8, asr #16
 8014ad8:	d42c      	bmi.n	8014b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8014ada:	1c51      	adds	r1, r2, #1
 8014adc:	428c      	cmp	r4, r1
 8014ade:	dd2c      	ble.n	8014b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014ae0:	2b00      	cmp	r3, #0
 8014ae2:	db2a      	blt.n	8014b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014ae4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8014ae6:	1c59      	adds	r1, r3, #1
 8014ae8:	4288      	cmp	r0, r1
 8014aea:	dd26      	ble.n	8014b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014aec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014aee:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014af0:	3b01      	subs	r3, #1
 8014af2:	fb02 9203 	mla	r2, r2, r3, r9
 8014af6:	1412      	asrs	r2, r2, #16
 8014af8:	d429      	bmi.n	8014b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014afa:	3201      	adds	r2, #1
 8014afc:	4294      	cmp	r4, r2
 8014afe:	dd26      	ble.n	8014b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014b00:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8014b02:	fb02 8303 	mla	r3, r2, r3, r8
 8014b06:	141b      	asrs	r3, r3, #16
 8014b08:	d421      	bmi.n	8014b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014b0a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014b0c:	3301      	adds	r3, #1
 8014b0e:	429a      	cmp	r2, r3
 8014b10:	dd1d      	ble.n	8014b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014b12:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014b16:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014b1a:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8014b1e:	9312      	str	r3, [sp, #72]	; 0x48
 8014b20:	f1be 0f00 	cmp.w	lr, #0
 8014b24:	f300 8138 	bgt.w	8014d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 8014b28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b2a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014b2e:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8014b32:	e0d1      	b.n	8014cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8014b34:	1c51      	adds	r1, r2, #1
 8014b36:	f040 80c3 	bne.w	8014cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014b3a:	42a2      	cmp	r2, r4
 8014b3c:	f280 80c0 	bge.w	8014cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014b40:	1c5f      	adds	r7, r3, #1
 8014b42:	f2c0 80bd 	blt.w	8014cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014b46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014b48:	4293      	cmp	r3, r2
 8014b4a:	f280 80b9 	bge.w	8014cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014b4e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014b52:	4657      	mov	r7, sl
 8014b54:	f1bb 0f00 	cmp.w	fp, #0
 8014b58:	dde6      	ble.n	8014b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8014b5a:	ea5f 4229 	movs.w	r2, r9, asr #16
 8014b5e:	ea4f 4328 	mov.w	r3, r8, asr #16
 8014b62:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8014b66:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8014b6a:	f100 80fc 	bmi.w	8014d66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8014b6e:	f102 0c01 	add.w	ip, r2, #1
 8014b72:	4564      	cmp	r4, ip
 8014b74:	f340 80f9 	ble.w	8014d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8014b78:	2b00      	cmp	r3, #0
 8014b7a:	f2c0 80f6 	blt.w	8014d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8014b7e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8014b80:	f103 0c01 	add.w	ip, r3, #1
 8014b84:	4565      	cmp	r5, ip
 8014b86:	f340 80f0 	ble.w	8014d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8014b8a:	fb03 2304 	mla	r3, r3, r4, r2
 8014b8e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014b90:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014b92:	441a      	add	r2, r3
 8014b94:	5ceb      	ldrb	r3, [r5, r3]
 8014b96:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 8014b9a:	2800      	cmp	r0, #0
 8014b9c:	f000 80db 	beq.w	8014d56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8014ba0:	7853      	ldrb	r3, [r2, #1]
 8014ba2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014ba6:	9313      	str	r3, [sp, #76]	; 0x4c
 8014ba8:	b141      	cbz	r1, 8014bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014baa:	1913      	adds	r3, r2, r4
 8014bac:	5d12      	ldrb	r2, [r2, r4]
 8014bae:	785b      	ldrb	r3, [r3, #1]
 8014bb0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014bb4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014bb8:	9210      	str	r2, [sp, #64]	; 0x40
 8014bba:	9314      	str	r3, [sp, #80]	; 0x50
 8014bbc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014bbe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014bc0:	fb10 f201 	smulbb	r2, r0, r1
 8014bc4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014bc8:	10d2      	asrs	r2, r2, #3
 8014bca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014bce:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014bd2:	ea4c 0c03 	orr.w	ip, ip, r3
 8014bd6:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8014bda:	930f      	str	r3, [sp, #60]	; 0x3c
 8014bdc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014bde:	041b      	lsls	r3, r3, #16
 8014be0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014be4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014be8:	432b      	orrs	r3, r5
 8014bea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8014bec:	4353      	muls	r3, r2
 8014bee:	fb05 330c 	mla	r3, r5, ip, r3
 8014bf2:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014bf6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014bfa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014bfe:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014c02:	f1c1 0c10 	rsb	ip, r1, #16
 8014c06:	ebac 0c00 	sub.w	ip, ip, r0
 8014c0a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014c0e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014c12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c14:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014c16:	0418      	lsls	r0, r3, #16
 8014c18:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014c1c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014c20:	4318      	orrs	r0, r3
 8014c22:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014c26:	fb02 c200 	mla	r2, r2, r0, ip
 8014c2a:	0d53      	lsrs	r3, r2, #21
 8014c2c:	0952      	lsrs	r2, r2, #5
 8014c2e:	f8b7 c000 	ldrh.w	ip, [r7]
 8014c32:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014c36:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014c3a:	431a      	orrs	r2, r3
 8014c3c:	b292      	uxth	r2, r2
 8014c3e:	ea4f 212c 	mov.w	r1, ip, asr #8
 8014c42:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014c46:	1210      	asrs	r0, r2, #8
 8014c48:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014c4c:	fb11 f105 	smulbb	r1, r1, r5
 8014c50:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8014c54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014c58:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014c5c:	fb00 1003 	mla	r0, r0, r3, r1
 8014c60:	fa5f fc8c 	uxtb.w	ip, ip
 8014c64:	10d1      	asrs	r1, r2, #3
 8014c66:	00d2      	lsls	r2, r2, #3
 8014c68:	fb1c fc05 	smulbb	ip, ip, r5
 8014c6c:	b2d2      	uxtb	r2, r2
 8014c6e:	fb02 c203 	mla	r2, r2, r3, ip
 8014c72:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014c76:	b280      	uxth	r0, r0
 8014c78:	b292      	uxth	r2, r2
 8014c7a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014c7e:	fb1e fe05 	smulbb	lr, lr, r5
 8014c82:	fb01 e103 	mla	r1, r1, r3, lr
 8014c86:	f102 0c01 	add.w	ip, r2, #1
 8014c8a:	1c43      	adds	r3, r0, #1
 8014c8c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014c90:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8014c94:	b289      	uxth	r1, r1
 8014c96:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014c9a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014c9e:	4313      	orrs	r3, r2
 8014ca0:	1c4a      	adds	r2, r1, #1
 8014ca2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014ca6:	0949      	lsrs	r1, r1, #5
 8014ca8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014cac:	430b      	orrs	r3, r1
 8014cae:	803b      	strh	r3, [r7, #0]
 8014cb0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014cb2:	4499      	add	r9, r3
 8014cb4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014cb6:	3702      	adds	r7, #2
 8014cb8:	4498      	add	r8, r3
 8014cba:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014cbe:	e749      	b.n	8014b54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8014cc0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014cc2:	4499      	add	r9, r3
 8014cc4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014cc6:	4498      	add	r8, r3
 8014cc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014cca:	3b01      	subs	r3, #1
 8014ccc:	9309      	str	r3, [sp, #36]	; 0x24
 8014cce:	f10a 0a02 	add.w	sl, sl, #2
 8014cd2:	e6f9      	b.n	8014ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014cd4:	f47f af0a 	bne.w	8014aec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8014cd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014cda:	2b00      	cmp	r3, #0
 8014cdc:	f340 8109 	ble.w	8014ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8014ce0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014ce4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014ce8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014cec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014cee:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014cf2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014cf6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014cfa:	eef0 6a48 	vmov.f32	s13, s16
 8014cfe:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014d02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d06:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014d0a:	ee16 9a90 	vmov	r9, s13
 8014d0e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014d12:	eef0 6a68 	vmov.f32	s13, s17
 8014d16:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014d1a:	ee18 2a10 	vmov	r2, s16
 8014d1e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014d22:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d26:	ee18 2a90 	vmov	r2, s17
 8014d2a:	932f      	str	r3, [sp, #188]	; 0xbc
 8014d2c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014d2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d32:	9330      	str	r3, [sp, #192]	; 0xc0
 8014d34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014d36:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8014d38:	3b01      	subs	r3, #1
 8014d3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014d3e:	930d      	str	r3, [sp, #52]	; 0x34
 8014d40:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014d42:	bf08      	it	eq
 8014d44:	4613      	moveq	r3, r2
 8014d46:	ee16 8a90 	vmov	r8, s13
 8014d4a:	9309      	str	r3, [sp, #36]	; 0x24
 8014d4c:	eef0 8a67 	vmov.f32	s17, s15
 8014d50:	eeb0 8a47 	vmov.f32	s16, s14
 8014d54:	e6b1      	b.n	8014aba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8014d56:	2900      	cmp	r1, #0
 8014d58:	f43f af30 	beq.w	8014bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014d5c:	5d13      	ldrb	r3, [r2, r4]
 8014d5e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d62:	9310      	str	r3, [sp, #64]	; 0x40
 8014d64:	e72a      	b.n	8014bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014d66:	1c55      	adds	r5, r2, #1
 8014d68:	d1a2      	bne.n	8014cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d6a:	4294      	cmp	r4, r2
 8014d6c:	dda0      	ble.n	8014cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d6e:	1c5d      	adds	r5, r3, #1
 8014d70:	db9e      	blt.n	8014cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d72:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8014d74:	429d      	cmp	r5, r3
 8014d76:	dd9b      	ble.n	8014cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d78:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8014d7c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014d7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014d80:	9202      	str	r2, [sp, #8]
 8014d82:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8014d86:	e9cd 4300 	strd	r4, r3, [sp]
 8014d8a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014d8c:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014d8e:	4633      	mov	r3, r6
 8014d90:	4639      	mov	r1, r7
 8014d92:	f7ff fd7f 	bl	8014894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8014d96:	e78b      	b.n	8014cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014d98:	ea4f 4329 	mov.w	r3, r9, asr #16
 8014d9c:	ea4f 4228 	mov.w	r2, r8, asr #16
 8014da0:	fb04 3202 	mla	r2, r4, r2, r3
 8014da4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014da6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014da8:	4413      	add	r3, r2
 8014daa:	5c8a      	ldrb	r2, [r1, r2]
 8014dac:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8014db0:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8014db4:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 8014db8:	f1bc 0f00 	cmp.w	ip, #0
 8014dbc:	f000 8091 	beq.w	8014ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8014dc0:	785a      	ldrb	r2, [r3, #1]
 8014dc2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014dc6:	9215      	str	r2, [sp, #84]	; 0x54
 8014dc8:	b140      	cbz	r0, 8014ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8014dca:	191a      	adds	r2, r3, r4
 8014dcc:	5d1b      	ldrb	r3, [r3, r4]
 8014dce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014dd2:	9311      	str	r3, [sp, #68]	; 0x44
 8014dd4:	7853      	ldrb	r3, [r2, #1]
 8014dd6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014dda:	9316      	str	r3, [sp, #88]	; 0x58
 8014ddc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014dde:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014de0:	fb1c f200 	smulbb	r2, ip, r0
 8014de4:	041f      	lsls	r7, r3, #16
 8014de6:	10d2      	asrs	r2, r2, #3
 8014de8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014dec:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014df0:	431f      	orrs	r7, r3
 8014df2:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014df6:	9319      	str	r3, [sp, #100]	; 0x64
 8014df8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014dfa:	041b      	lsls	r3, r3, #16
 8014dfc:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014e00:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014e04:	ea43 030b 	orr.w	r3, r3, fp
 8014e08:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8014e0a:	4353      	muls	r3, r2
 8014e0c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014e10:	fb05 3707 	mla	r7, r5, r7, r3
 8014e14:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014e18:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014e1c:	ea43 0b01 	orr.w	fp, r3, r1
 8014e20:	f1c0 0110 	rsb	r1, r0, #16
 8014e24:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014e26:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014e28:	eba1 0c0c 	sub.w	ip, r1, ip
 8014e2c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014e30:	fb0c 770b 	mla	r7, ip, fp, r7
 8014e34:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014e38:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014e3c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014e40:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014e44:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014e48:	fb02 770c 	mla	r7, r2, ip, r7
 8014e4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014e4e:	0d79      	lsrs	r1, r7, #21
 8014e50:	8812      	ldrh	r2, [r2, #0]
 8014e52:	097f      	lsrs	r7, r7, #5
 8014e54:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014e58:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014e5c:	430f      	orrs	r7, r1
 8014e5e:	1211      	asrs	r1, r2, #8
 8014e60:	b2bb      	uxth	r3, r7
 8014e62:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014e66:	fb11 f105 	smulbb	r1, r1, r5
 8014e6a:	1218      	asrs	r0, r3, #8
 8014e6c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014e6e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014e72:	fb00 1005 	mla	r0, r0, r5, r1
 8014e76:	10d7      	asrs	r7, r2, #3
 8014e78:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014e7a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014e7e:	fb17 f705 	smulbb	r7, r7, r5
 8014e82:	10d9      	asrs	r1, r3, #3
 8014e84:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014e86:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014e8a:	fb01 7105 	mla	r1, r1, r5, r7
 8014e8e:	00d2      	lsls	r2, r2, #3
 8014e90:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014e92:	b2d2      	uxtb	r2, r2
 8014e94:	fb12 f205 	smulbb	r2, r2, r5
 8014e98:	00db      	lsls	r3, r3, #3
 8014e9a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014e9c:	b2db      	uxtb	r3, r3
 8014e9e:	b280      	uxth	r0, r0
 8014ea0:	fb03 2305 	mla	r3, r3, r5, r2
 8014ea4:	b29b      	uxth	r3, r3
 8014ea6:	b289      	uxth	r1, r1
 8014ea8:	1c42      	adds	r2, r0, #1
 8014eaa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014eae:	1c4f      	adds	r7, r1, #1
 8014eb0:	1c5a      	adds	r2, r3, #1
 8014eb2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8014eb6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8014eba:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014ebe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014ec2:	0949      	lsrs	r1, r1, #5
 8014ec4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014ec6:	4310      	orrs	r0, r2
 8014ec8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014ecc:	4308      	orrs	r0, r1
 8014ece:	f823 0b02 	strh.w	r0, [r3], #2
 8014ed2:	930f      	str	r3, [sp, #60]	; 0x3c
 8014ed4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014ed6:	4499      	add	r9, r3
 8014ed8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014eda:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014ede:	4498      	add	r8, r3
 8014ee0:	e61e      	b.n	8014b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8014ee2:	2800      	cmp	r0, #0
 8014ee4:	f43f af7a 	beq.w	8014ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8014ee8:	5d1b      	ldrb	r3, [r3, r4]
 8014eea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014eee:	9311      	str	r3, [sp, #68]	; 0x44
 8014ef0:	e774      	b.n	8014ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8014ef2:	b01b      	add	sp, #108	; 0x6c
 8014ef4:	ecbd 8b08 	vpop	{d8-d11}
 8014ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8014efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014f00:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8014f04:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014f08:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8014f0c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8014f10:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8014f14:	8808      	ldrh	r0, [r1, #0]
 8014f16:	fb06 570e 	mla	r7, r6, lr, r5
 8014f1a:	2e00      	cmp	r6, #0
 8014f1c:	eb02 0807 	add.w	r8, r2, r7
 8014f20:	db38      	blt.n	8014f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014f22:	45b1      	cmp	r9, r6
 8014f24:	dd36      	ble.n	8014f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8014f26:	2d00      	cmp	r5, #0
 8014f28:	db32      	blt.n	8014f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014f2a:	45ae      	cmp	lr, r5
 8014f2c:	dd30      	ble.n	8014f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014f2e:	5dd2      	ldrb	r2, [r2, r7]
 8014f30:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014f34:	1c6a      	adds	r2, r5, #1
 8014f36:	d430      	bmi.n	8014f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014f38:	4596      	cmp	lr, r2
 8014f3a:	dd2e      	ble.n	8014f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014f3c:	b36c      	cbz	r4, 8014f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014f3e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014f42:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8014f46:	3601      	adds	r6, #1
 8014f48:	d42b      	bmi.n	8014fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014f4a:	45b1      	cmp	r9, r6
 8014f4c:	dd29      	ble.n	8014fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014f4e:	f1bc 0f00 	cmp.w	ip, #0
 8014f52:	d028      	beq.n	8014fa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8014f54:	2d00      	cmp	r5, #0
 8014f56:	db22      	blt.n	8014f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014f58:	45ae      	cmp	lr, r5
 8014f5a:	dd20      	ble.n	8014f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014f5c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014f60:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8014f64:	3501      	adds	r5, #1
 8014f66:	d407      	bmi.n	8014f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014f68:	45ae      	cmp	lr, r5
 8014f6a:	dd05      	ble.n	8014f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014f6c:	b134      	cbz	r4, 8014f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014f6e:	44c6      	add	lr, r8
 8014f70:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014f74:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014f78:	2c0f      	cmp	r4, #15
 8014f7a:	d802      	bhi.n	8014f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014f7c:	f1bc 0f0f 	cmp.w	ip, #15
 8014f80:	d914      	bls.n	8014fac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8014f82:	4b26      	ldr	r3, [pc, #152]	; (801501c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8014f84:	4a26      	ldr	r2, [pc, #152]	; (8015020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8014f86:	4827      	ldr	r0, [pc, #156]	; (8015024 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8014f88:	f240 3155 	movw	r1, #853	; 0x355
 8014f8c:	f006 fcfe 	bl	801b98c <__assert_func>
 8014f90:	4607      	mov	r7, r0
 8014f92:	e7cf      	b.n	8014f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8014f94:	4602      	mov	r2, r0
 8014f96:	4607      	mov	r7, r0
 8014f98:	e7d5      	b.n	8014f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014f9a:	4602      	mov	r2, r0
 8014f9c:	e7d3      	b.n	8014f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014f9e:	4606      	mov	r6, r0
 8014fa0:	e7e0      	b.n	8014f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8014fa2:	4606      	mov	r6, r0
 8014fa4:	e7e8      	b.n	8014f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014fa6:	2c0f      	cmp	r4, #15
 8014fa8:	d8eb      	bhi.n	8014f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014faa:	4606      	mov	r6, r0
 8014fac:	043d      	lsls	r5, r7, #16
 8014fae:	fb14 f30c 	smulbb	r3, r4, ip
 8014fb2:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8014fb6:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014fba:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014fbe:	10db      	asrs	r3, r3, #3
 8014fc0:	432f      	orrs	r7, r5
 8014fc2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8014fc6:	f1cc 0510 	rsb	r5, ip, #16
 8014fca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014fce:	1b2d      	subs	r5, r5, r4
 8014fd0:	ea4e 0202 	orr.w	r2, lr, r2
 8014fd4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8014fd8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8014fdc:	4354      	muls	r4, r2
 8014fde:	fb05 4507 	mla	r5, r5, r7, r4
 8014fe2:	0404      	lsls	r4, r0, #16
 8014fe4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014fe8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014fec:	4320      	orrs	r0, r4
 8014fee:	fb03 5400 	mla	r4, r3, r0, r5
 8014ff2:	0430      	lsls	r0, r6, #16
 8014ff4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014ff8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014ffc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8015000:	4330      	orrs	r0, r6
 8015002:	fb03 4000 	mla	r0, r3, r0, r4
 8015006:	0d43      	lsrs	r3, r0, #21
 8015008:	0940      	lsrs	r0, r0, #5
 801500a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801500e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015012:	4318      	orrs	r0, r3
 8015014:	8008      	strh	r0, [r1, #0]
 8015016:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801501a:	bf00      	nop
 801501c:	0802112b 	.word	0x0802112b
 8015020:	08021732 	.word	0x08021732
 8015024:	080211b3 	.word	0x080211b3

08015028 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801502c:	ed2d 8b0a 	vpush	{d8-d12}
 8015030:	b095      	sub	sp, #84	; 0x54
 8015032:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 8015036:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8015038:	9306      	str	r3, [sp, #24]
 801503a:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 801503e:	9109      	str	r1, [sp, #36]	; 0x24
 8015040:	9307      	str	r3, [sp, #28]
 8015042:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8015046:	9012      	str	r0, [sp, #72]	; 0x48
 8015048:	6878      	ldr	r0, [r7, #4]
 801504a:	9211      	str	r2, [sp, #68]	; 0x44
 801504c:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 801504e:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8015052:	fb00 1303 	mla	r3, r0, r3, r1
 8015056:	6839      	ldr	r1, [r7, #0]
 8015058:	6857      	ldr	r7, [r2, #4]
 801505a:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 801505e:	6813      	ldr	r3, [r2, #0]
 8015060:	9308      	str	r3, [sp, #32]
 8015062:	eeb0 aa40 	vmov.f32	s20, s0
 8015066:	eef0 9a60 	vmov.f32	s19, s1
 801506a:	eeb0 9a41 	vmov.f32	s18, s2
 801506e:	eeb0 8a62 	vmov.f32	s16, s5
 8015072:	eef0 8a43 	vmov.f32	s17, s6
 8015076:	eeb0 ca44 	vmov.f32	s24, s8
 801507a:	eef0 ba64 	vmov.f32	s23, s9
 801507e:	eeb0 ba45 	vmov.f32	s22, s10
 8015082:	3704      	adds	r7, #4
 8015084:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015088:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801508a:	2b00      	cmp	r3, #0
 801508c:	dc03      	bgt.n	8015096 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801508e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015090:	2b00      	cmp	r3, #0
 8015092:	f340 819a 	ble.w	80153ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8015096:	9b06      	ldr	r3, [sp, #24]
 8015098:	2b00      	cmp	r3, #0
 801509a:	f340 80c4 	ble.w	8015226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801509e:	ea5f 4229 	movs.w	r2, r9, asr #16
 80150a2:	ea4f 4326 	mov.w	r3, r6, asr #16
 80150a6:	d429      	bmi.n	80150fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80150a8:	1c51      	adds	r1, r2, #1
 80150aa:	428c      	cmp	r4, r1
 80150ac:	dd29      	ble.n	8015102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 80150ae:	2b00      	cmp	r3, #0
 80150b0:	db27      	blt.n	8015102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 80150b2:	9807      	ldr	r0, [sp, #28]
 80150b4:	1c59      	adds	r1, r3, #1
 80150b6:	4288      	cmp	r0, r1
 80150b8:	dd23      	ble.n	8015102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 80150ba:	9b06      	ldr	r3, [sp, #24]
 80150bc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80150be:	3b01      	subs	r3, #1
 80150c0:	fb02 9203 	mla	r2, r2, r3, r9
 80150c4:	1412      	asrs	r2, r2, #16
 80150c6:	d425      	bmi.n	8015114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80150c8:	3201      	adds	r2, #1
 80150ca:	4294      	cmp	r4, r2
 80150cc:	dd22      	ble.n	8015114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80150ce:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80150d0:	fb02 6303 	mla	r3, r2, r3, r6
 80150d4:	141b      	asrs	r3, r3, #16
 80150d6:	d41d      	bmi.n	8015114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80150d8:	9a07      	ldr	r2, [sp, #28]
 80150da:	3301      	adds	r3, #1
 80150dc:	429a      	cmp	r2, r3
 80150de:	dd19      	ble.n	8015114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80150e0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80150e4:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80150e8:	f1b8 0f00 	cmp.w	r8, #0
 80150ec:	f300 80f8 	bgt.w	80152e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 80150f0:	9b06      	ldr	r3, [sp, #24]
 80150f2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80150f6:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80150fa:	e096      	b.n	801522a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80150fc:	1c51      	adds	r1, r2, #1
 80150fe:	f040 8088 	bne.w	8015212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8015102:	42a2      	cmp	r2, r4
 8015104:	f280 8085 	bge.w	8015212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8015108:	1c5a      	adds	r2, r3, #1
 801510a:	f2c0 8082 	blt.w	8015212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801510e:	9a07      	ldr	r2, [sp, #28]
 8015110:	4293      	cmp	r3, r2
 8015112:	da7e      	bge.n	8015212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8015114:	f8dd b018 	ldr.w	fp, [sp, #24]
 8015118:	46d0      	mov	r8, sl
 801511a:	f1bb 0f00 	cmp.w	fp, #0
 801511e:	dde7      	ble.n	80150f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8015120:	ea5f 4229 	movs.w	r2, r9, asr #16
 8015124:	ea4f 4326 	mov.w	r3, r6, asr #16
 8015128:	f3c9 3003 	ubfx	r0, r9, #12, #4
 801512c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8015130:	f100 80c0 	bmi.w	80152b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8015134:	f102 0c01 	add.w	ip, r2, #1
 8015138:	4564      	cmp	r4, ip
 801513a:	f340 80bd 	ble.w	80152b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801513e:	2b00      	cmp	r3, #0
 8015140:	f2c0 80ba 	blt.w	80152b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8015144:	9d07      	ldr	r5, [sp, #28]
 8015146:	f103 0c01 	add.w	ip, r3, #1
 801514a:	4565      	cmp	r5, ip
 801514c:	f340 80b4 	ble.w	80152b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8015150:	fb03 2304 	mla	r3, r3, r4, r2
 8015154:	9d08      	ldr	r5, [sp, #32]
 8015156:	9a08      	ldr	r2, [sp, #32]
 8015158:	441a      	add	r2, r3
 801515a:	5ceb      	ldrb	r3, [r5, r3]
 801515c:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8015160:	2800      	cmp	r0, #0
 8015162:	f000 809f 	beq.w	80152a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 8015166:	7853      	ldrb	r3, [r2, #1]
 8015168:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801516c:	930d      	str	r3, [sp, #52]	; 0x34
 801516e:	b141      	cbz	r1, 8015182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8015170:	1913      	adds	r3, r2, r4
 8015172:	5d12      	ldrb	r2, [r2, r4]
 8015174:	785b      	ldrb	r3, [r3, #1]
 8015176:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801517a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801517e:	920a      	str	r2, [sp, #40]	; 0x28
 8015180:	930e      	str	r3, [sp, #56]	; 0x38
 8015182:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015184:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015186:	fb10 f201 	smulbb	r2, r0, r1
 801518a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801518e:	10d2      	asrs	r2, r2, #3
 8015190:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015194:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015198:	ea4c 0c03 	orr.w	ip, ip, r3
 801519c:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 80151a0:	930c      	str	r3, [sp, #48]	; 0x30
 80151a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80151a4:	041b      	lsls	r3, r3, #16
 80151a6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80151aa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80151ae:	432b      	orrs	r3, r5
 80151b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80151b2:	4353      	muls	r3, r2
 80151b4:	fb05 330c 	mla	r3, r5, ip, r3
 80151b8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80151bc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80151c0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80151c4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80151c8:	f1c1 0c10 	rsb	ip, r1, #16
 80151cc:	ebac 0c00 	sub.w	ip, ip, r0
 80151d0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80151d4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80151d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80151da:	0418      	lsls	r0, r3, #16
 80151dc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80151e0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80151e4:	4318      	orrs	r0, r3
 80151e6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80151ea:	fb02 c200 	mla	r2, r2, r0, ip
 80151ee:	0d53      	lsrs	r3, r2, #21
 80151f0:	0952      	lsrs	r2, r2, #5
 80151f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80151f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80151fa:	431a      	orrs	r2, r3
 80151fc:	f8a8 2000 	strh.w	r2, [r8]
 8015200:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015202:	4499      	add	r9, r3
 8015204:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015206:	f108 0802 	add.w	r8, r8, #2
 801520a:	441e      	add	r6, r3
 801520c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015210:	e783      	b.n	801511a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015212:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015214:	4499      	add	r9, r3
 8015216:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015218:	441e      	add	r6, r3
 801521a:	9b06      	ldr	r3, [sp, #24]
 801521c:	3b01      	subs	r3, #1
 801521e:	9306      	str	r3, [sp, #24]
 8015220:	f10a 0a02 	add.w	sl, sl, #2
 8015224:	e737      	b.n	8015096 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8015226:	f47f af48 	bne.w	80150ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801522a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801522c:	2b00      	cmp	r3, #0
 801522e:	f340 80cc 	ble.w	80153ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8015232:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8015236:	ee79 9aab 	vadd.f32	s19, s19, s23
 801523a:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801523e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015240:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8015244:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015248:	eef0 6a48 	vmov.f32	s13, s16
 801524c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015250:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015254:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015258:	ee16 9a90 	vmov	r9, s13
 801525c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015260:	eef0 6a68 	vmov.f32	s13, s17
 8015264:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015268:	ee18 2a10 	vmov	r2, s16
 801526c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015270:	fb92 f3f3 	sdiv	r3, r2, r3
 8015274:	ee18 2a90 	vmov	r2, s17
 8015278:	932b      	str	r3, [sp, #172]	; 0xac
 801527a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801527c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015280:	932c      	str	r3, [sp, #176]	; 0xb0
 8015282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015284:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015286:	3b01      	subs	r3, #1
 8015288:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801528c:	9309      	str	r3, [sp, #36]	; 0x24
 801528e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015290:	bf08      	it	eq
 8015292:	4613      	moveq	r3, r2
 8015294:	ee16 6a90 	vmov	r6, s13
 8015298:	9306      	str	r3, [sp, #24]
 801529a:	eef0 8a67 	vmov.f32	s17, s15
 801529e:	eeb0 8a47 	vmov.f32	s16, s14
 80152a2:	e6f1      	b.n	8015088 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80152a4:	2900      	cmp	r1, #0
 80152a6:	f43f af6c 	beq.w	8015182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80152aa:	5d13      	ldrb	r3, [r2, r4]
 80152ac:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152b0:	930a      	str	r3, [sp, #40]	; 0x28
 80152b2:	e766      	b.n	8015182 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 80152b4:	1c55      	adds	r5, r2, #1
 80152b6:	d1a3      	bne.n	8015200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80152b8:	4294      	cmp	r4, r2
 80152ba:	dda1      	ble.n	8015200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80152bc:	1c5d      	adds	r5, r3, #1
 80152be:	db9f      	blt.n	8015200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80152c0:	9d07      	ldr	r5, [sp, #28]
 80152c2:	429d      	cmp	r5, r3
 80152c4:	dd9c      	ble.n	8015200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80152c6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80152ca:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80152ce:	e9cd 4500 	strd	r4, r5, [sp]
 80152d2:	463b      	mov	r3, r7
 80152d4:	9a08      	ldr	r2, [sp, #32]
 80152d6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80152d8:	4641      	mov	r1, r8
 80152da:	f7ff fe0f 	bl	8014efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80152de:	e78f      	b.n	8015200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80152e0:	ea4f 4329 	mov.w	r3, r9, asr #16
 80152e4:	1432      	asrs	r2, r6, #16
 80152e6:	fb04 3202 	mla	r2, r4, r2, r3
 80152ea:	9908      	ldr	r1, [sp, #32]
 80152ec:	9b08      	ldr	r3, [sp, #32]
 80152ee:	4413      	add	r3, r2
 80152f0:	5c8a      	ldrb	r2, [r1, r2]
 80152f2:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 80152f6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80152fa:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 80152fe:	f1be 0f00 	cmp.w	lr, #0
 8015302:	d05b      	beq.n	80153bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8015304:	785a      	ldrb	r2, [r3, #1]
 8015306:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801530a:	920f      	str	r2, [sp, #60]	; 0x3c
 801530c:	b140      	cbz	r0, 8015320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 801530e:	191a      	adds	r2, r3, r4
 8015310:	5d1b      	ldrb	r3, [r3, r4]
 8015312:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015316:	930b      	str	r3, [sp, #44]	; 0x2c
 8015318:	7853      	ldrb	r3, [r2, #1]
 801531a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801531e:	9310      	str	r3, [sp, #64]	; 0x40
 8015320:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015322:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8015324:	fb1e f200 	smulbb	r2, lr, r0
 8015328:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801532c:	10d2      	asrs	r2, r2, #3
 801532e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015332:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015336:	ea4c 0c03 	orr.w	ip, ip, r3
 801533a:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801533e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015340:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015342:	041b      	lsls	r3, r3, #16
 8015344:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8015348:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801534c:	ea43 030b 	orr.w	r3, r3, fp
 8015350:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015352:	4353      	muls	r3, r2
 8015354:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015358:	fb05 3c0c 	mla	ip, r5, ip, r3
 801535c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015360:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015364:	ea43 0b01 	orr.w	fp, r3, r1
 8015368:	f1c0 0110 	rsb	r1, r0, #16
 801536c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801536e:	eba1 0e0e 	sub.w	lr, r1, lr
 8015372:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8015376:	fb0e cc0b 	mla	ip, lr, fp, ip
 801537a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801537e:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8015382:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015386:	ea4b 0e0e 	orr.w	lr, fp, lr
 801538a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801538e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015392:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8015396:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801539a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801539e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80153a2:	ea43 0c0c 	orr.w	ip, r3, ip
 80153a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80153a8:	f823 cb02 	strh.w	ip, [r3], #2
 80153ac:	930c      	str	r3, [sp, #48]	; 0x30
 80153ae:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80153b0:	4499      	add	r9, r3
 80153b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80153b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80153b8:	441e      	add	r6, r3
 80153ba:	e695      	b.n	80150e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 80153bc:	2800      	cmp	r0, #0
 80153be:	d0af      	beq.n	8015320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80153c0:	5d1b      	ldrb	r3, [r3, r4]
 80153c2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80153c6:	930b      	str	r3, [sp, #44]	; 0x2c
 80153c8:	e7aa      	b.n	8015320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80153ca:	b015      	add	sp, #84	; 0x54
 80153cc:	ecbd 8b0a 	vpop	{d8-d12}
 80153d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80153d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153d8:	468b      	mov	fp, r1
 80153da:	8809      	ldrh	r1, [r1, #0]
 80153dc:	b089      	sub	sp, #36	; 0x24
 80153de:	10cd      	asrs	r5, r1, #3
 80153e0:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 80153e4:	ea4f 2921 	mov.w	r9, r1, asr #8
 80153e8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80153ec:	00c9      	lsls	r1, r1, #3
 80153ee:	9500      	str	r5, [sp, #0]
 80153f0:	b2c9      	uxtb	r1, r1
 80153f2:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 80153f6:	9101      	str	r1, [sp, #4]
 80153f8:	9900      	ldr	r1, [sp, #0]
 80153fa:	9202      	str	r2, [sp, #8]
 80153fc:	fb04 650e 	mla	r5, r4, lr, r6
 8015400:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8015404:	eb02 0805 	add.w	r8, r2, r5
 8015408:	0209      	lsls	r1, r1, #8
 801540a:	9a01      	ldr	r2, [sp, #4]
 801540c:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8015410:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8015414:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8015418:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 801541c:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8015420:	4311      	orrs	r1, r2
 8015422:	2c00      	cmp	r4, #0
 8015424:	9107      	str	r1, [sp, #28]
 8015426:	db43      	blt.n	80154b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8015428:	45a2      	cmp	sl, r4
 801542a:	dd41      	ble.n	80154b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801542c:	2e00      	cmp	r6, #0
 801542e:	db3d      	blt.n	80154ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8015430:	45b6      	cmp	lr, r6
 8015432:	dd3b      	ble.n	80154ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8015434:	9a02      	ldr	r2, [sp, #8]
 8015436:	5d55      	ldrb	r5, [r2, r5]
 8015438:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801543c:	441d      	add	r5, r3
 801543e:	1c72      	adds	r2, r6, #1
 8015440:	d439      	bmi.n	80154b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015442:	4596      	cmp	lr, r2
 8015444:	dd37      	ble.n	80154b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015446:	2f00      	cmp	r7, #0
 8015448:	d035      	beq.n	80154b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801544a:	f898 1001 	ldrb.w	r1, [r8, #1]
 801544e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8015452:	4419      	add	r1, r3
 8015454:	3401      	adds	r4, #1
 8015456:	d432      	bmi.n	80154be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015458:	45a2      	cmp	sl, r4
 801545a:	dd30      	ble.n	80154be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801545c:	b378      	cbz	r0, 80154be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801545e:	2e00      	cmp	r6, #0
 8015460:	db2b      	blt.n	80154ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8015462:	45b6      	cmp	lr, r6
 8015464:	dd29      	ble.n	80154ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8015466:	f818 400e 	ldrb.w	r4, [r8, lr]
 801546a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801546e:	441c      	add	r4, r3
 8015470:	3601      	adds	r6, #1
 8015472:	d427      	bmi.n	80154c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015474:	45b6      	cmp	lr, r6
 8015476:	dd25      	ble.n	80154c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015478:	b327      	cbz	r7, 80154c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801547a:	44c6      	add	lr, r8
 801547c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8015480:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015484:	4413      	add	r3, r2
 8015486:	782a      	ldrb	r2, [r5, #0]
 8015488:	9202      	str	r2, [sp, #8]
 801548a:	780a      	ldrb	r2, [r1, #0]
 801548c:	9203      	str	r2, [sp, #12]
 801548e:	7822      	ldrb	r2, [r4, #0]
 8015490:	9204      	str	r2, [sp, #16]
 8015492:	2f0f      	cmp	r7, #15
 8015494:	781a      	ldrb	r2, [r3, #0]
 8015496:	9205      	str	r2, [sp, #20]
 8015498:	d801      	bhi.n	801549e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801549a:	280f      	cmp	r0, #15
 801549c:	d914      	bls.n	80154c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801549e:	4b3f      	ldr	r3, [pc, #252]	; (801559c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80154a0:	4a3f      	ldr	r2, [pc, #252]	; (80155a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80154a2:	4840      	ldr	r0, [pc, #256]	; (80155a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80154a4:	f240 3173 	movw	r1, #883	; 0x373
 80154a8:	f006 fa70 	bl	801b98c <__assert_func>
 80154ac:	ad07      	add	r5, sp, #28
 80154ae:	e7c6      	b.n	801543e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 80154b0:	a907      	add	r1, sp, #28
 80154b2:	460d      	mov	r5, r1
 80154b4:	e7ce      	b.n	8015454 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80154b6:	a907      	add	r1, sp, #28
 80154b8:	e7cc      	b.n	8015454 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80154ba:	ac07      	add	r4, sp, #28
 80154bc:	e7d8      	b.n	8015470 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 80154be:	ab07      	add	r3, sp, #28
 80154c0:	461c      	mov	r4, r3
 80154c2:	e7e0      	b.n	8015486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80154c4:	ab07      	add	r3, sp, #28
 80154c6:	e7de      	b.n	8015486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80154c8:	b2ba      	uxth	r2, r7
 80154ca:	b280      	uxth	r0, r0
 80154cc:	fb02 fa00 	mul.w	sl, r2, r0
 80154d0:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80154d4:	0112      	lsls	r2, r2, #4
 80154d6:	b280      	uxth	r0, r0
 80154d8:	f891 8002 	ldrb.w	r8, [r1, #2]
 80154dc:	7849      	ldrb	r1, [r1, #1]
 80154de:	78ae      	ldrb	r6, [r5, #2]
 80154e0:	786d      	ldrb	r5, [r5, #1]
 80154e2:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 80154e6:	eba2 020a 	sub.w	r2, r2, sl
 80154ea:	b292      	uxth	r2, r2
 80154ec:	ebae 0e00 	sub.w	lr, lr, r0
 80154f0:	fa1f fe8e 	uxth.w	lr, lr
 80154f4:	4351      	muls	r1, r2
 80154f6:	fb02 f808 	mul.w	r8, r2, r8
 80154fa:	fb0e 8806 	mla	r8, lr, r6, r8
 80154fe:	fb0e 1505 	mla	r5, lr, r5, r1
 8015502:	78a6      	ldrb	r6, [r4, #2]
 8015504:	7861      	ldrb	r1, [r4, #1]
 8015506:	fa1f f78c 	uxth.w	r7, ip
 801550a:	fb00 8806 	mla	r8, r0, r6, r8
 801550e:	fb00 5501 	mla	r5, r0, r1, r5
 8015512:	789e      	ldrb	r6, [r3, #2]
 8015514:	7859      	ldrb	r1, [r3, #1]
 8015516:	9b00      	ldr	r3, [sp, #0]
 8015518:	ea6f 0c0c 	mvn.w	ip, ip
 801551c:	fa5f fc8c 	uxtb.w	ip, ip
 8015520:	fb0a 5101 	mla	r1, sl, r1, r5
 8015524:	fb13 f50c 	smulbb	r5, r3, ip
 8015528:	9b03      	ldr	r3, [sp, #12]
 801552a:	435a      	muls	r2, r3
 801552c:	9b02      	ldr	r3, [sp, #8]
 801552e:	fb0e 2203 	mla	r2, lr, r3, r2
 8015532:	9b04      	ldr	r3, [sp, #16]
 8015534:	fb00 2003 	mla	r0, r0, r3, r2
 8015538:	9b05      	ldr	r3, [sp, #20]
 801553a:	fb0a 8606 	mla	r6, sl, r6, r8
 801553e:	fb0a 0a03 	mla	sl, sl, r3, r0
 8015542:	9b01      	ldr	r3, [sp, #4]
 8015544:	fb19 f90c 	smulbb	r9, r9, ip
 8015548:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801554c:	fb13 fc0c 	smulbb	ip, r3, ip
 8015550:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015554:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015558:	fb06 9607 	mla	r6, r6, r7, r9
 801555c:	fb01 5107 	mla	r1, r1, r7, r5
 8015560:	fb0a c707 	mla	r7, sl, r7, ip
 8015564:	b2b6      	uxth	r6, r6
 8015566:	b289      	uxth	r1, r1
 8015568:	b2bf      	uxth	r7, r7
 801556a:	f106 0901 	add.w	r9, r6, #1
 801556e:	f107 0c01 	add.w	ip, r7, #1
 8015572:	1c4d      	adds	r5, r1, #1
 8015574:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8015578:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 801557c:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8015580:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015584:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015588:	0949      	lsrs	r1, r1, #5
 801558a:	433e      	orrs	r6, r7
 801558c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015590:	430e      	orrs	r6, r1
 8015592:	f8ab 6000 	strh.w	r6, [fp]
 8015596:	b009      	add	sp, #36	; 0x24
 8015598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801559c:	0802112b 	.word	0x0802112b
 80155a0:	08021689 	.word	0x08021689
 80155a4:	080211b3 	.word	0x080211b3

080155a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80155a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155ac:	ed2d 8b08 	vpush	{d8-d11}
 80155b0:	b097      	sub	sp, #92	; 0x5c
 80155b2:	eeb0 aa40 	vmov.f32	s20, s0
 80155b6:	9309      	str	r3, [sp, #36]	; 0x24
 80155b8:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80155bc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80155be:	930b      	str	r3, [sp, #44]	; 0x2c
 80155c0:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 80155c4:	9310      	str	r3, [sp, #64]	; 0x40
 80155c6:	910f      	str	r1, [sp, #60]	; 0x3c
 80155c8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80155cc:	9015      	str	r0, [sp, #84]	; 0x54
 80155ce:	6860      	ldr	r0, [r4, #4]
 80155d0:	9213      	str	r2, [sp, #76]	; 0x4c
 80155d2:	fb00 1303 	mla	r3, r0, r3, r1
 80155d6:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80155d8:	6821      	ldr	r1, [r4, #0]
 80155da:	6854      	ldr	r4, [r2, #4]
 80155dc:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 80155e0:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80155e4:	930a      	str	r3, [sp, #40]	; 0x28
 80155e6:	6813      	ldr	r3, [r2, #0]
 80155e8:	930e      	str	r3, [sp, #56]	; 0x38
 80155ea:	1d23      	adds	r3, r4, #4
 80155ec:	9308      	str	r3, [sp, #32]
 80155ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80155f0:	43db      	mvns	r3, r3
 80155f2:	b2db      	uxtb	r3, r3
 80155f4:	eef0 9a60 	vmov.f32	s19, s1
 80155f8:	eeb0 9a41 	vmov.f32	s18, s2
 80155fc:	eeb0 8a62 	vmov.f32	s16, s5
 8015600:	eef0 8a43 	vmov.f32	s17, s6
 8015604:	eef0 ba44 	vmov.f32	s23, s8
 8015608:	eeb0 ba64 	vmov.f32	s22, s9
 801560c:	eef0 aa45 	vmov.f32	s21, s10
 8015610:	930c      	str	r3, [sp, #48]	; 0x30
 8015612:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015614:	2b00      	cmp	r3, #0
 8015616:	dc03      	bgt.n	8015620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015618:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801561a:	2b00      	cmp	r3, #0
 801561c:	f340 825c 	ble.w	8015ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8015620:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015622:	2b00      	cmp	r3, #0
 8015624:	f340 8127 	ble.w	8015876 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 8015628:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801562a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801562c:	1412      	asrs	r2, r2, #16
 801562e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015632:	d430      	bmi.n	8015696 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8015634:	1c51      	adds	r1, r2, #1
 8015636:	428d      	cmp	r5, r1
 8015638:	dd30      	ble.n	801569c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801563a:	2b00      	cmp	r3, #0
 801563c:	db2e      	blt.n	801569c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801563e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015640:	1c59      	adds	r1, r3, #1
 8015642:	4288      	cmp	r0, r1
 8015644:	dd2a      	ble.n	801569c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8015646:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015648:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801564a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801564c:	3b01      	subs	r3, #1
 801564e:	fb02 1203 	mla	r2, r2, r3, r1
 8015652:	1412      	asrs	r2, r2, #16
 8015654:	d42c      	bmi.n	80156b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015656:	3201      	adds	r2, #1
 8015658:	4295      	cmp	r5, r2
 801565a:	dd29      	ble.n	80156b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801565c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801565e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015660:	fb02 1303 	mla	r3, r2, r3, r1
 8015664:	141b      	asrs	r3, r3, #16
 8015666:	d423      	bmi.n	80156b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015668:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801566a:	3301      	adds	r3, #1
 801566c:	429a      	cmp	r2, r3
 801566e:	dd1f      	ble.n	80156b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8015670:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015672:	9311      	str	r3, [sp, #68]	; 0x44
 8015674:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015676:	930d      	str	r3, [sp, #52]	; 0x34
 8015678:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801567c:	9312      	str	r3, [sp, #72]	; 0x48
 801567e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015680:	2b00      	cmp	r3, #0
 8015682:	f300 8161 	bgt.w	8015948 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 8015686:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015688:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801568a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801568e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015692:	930a      	str	r3, [sp, #40]	; 0x28
 8015694:	e0f1      	b.n	801587a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8015696:	1c51      	adds	r1, r2, #1
 8015698:	f040 80de 	bne.w	8015858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801569c:	42aa      	cmp	r2, r5
 801569e:	f280 80db 	bge.w	8015858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80156a2:	1c5f      	adds	r7, r3, #1
 80156a4:	f2c0 80d8 	blt.w	8015858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80156a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80156aa:	4293      	cmp	r3, r2
 80156ac:	f280 80d4 	bge.w	8015858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80156b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80156b2:	9311      	str	r3, [sp, #68]	; 0x44
 80156b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80156b6:	930d      	str	r3, [sp, #52]	; 0x34
 80156b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80156ba:	2b00      	cmp	r3, #0
 80156bc:	dde3      	ble.n	8015686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80156be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80156c0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80156c2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80156c4:	141a      	asrs	r2, r3, #16
 80156c6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80156c8:	1400      	asrs	r0, r0, #16
 80156ca:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80156ce:	f3c1 3103 	ubfx	r1, r1, #12, #4
 80156d2:	f100 8120 	bmi.w	8015916 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 80156d6:	1c46      	adds	r6, r0, #1
 80156d8:	42b5      	cmp	r5, r6
 80156da:	f340 811e 	ble.w	801591a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80156de:	2a00      	cmp	r2, #0
 80156e0:	f2c0 811b 	blt.w	801591a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80156e4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80156e6:	1c56      	adds	r6, r2, #1
 80156e8:	42b7      	cmp	r7, r6
 80156ea:	f340 8116 	ble.w	801591a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80156ee:	fb02 0005 	mla	r0, r2, r5, r0
 80156f2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80156f4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80156f6:	9c08      	ldr	r4, [sp, #32]
 80156f8:	4402      	add	r2, r0
 80156fa:	5c30      	ldrb	r0, [r6, r0]
 80156fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015700:	9014      	str	r0, [sp, #80]	; 0x50
 8015702:	1826      	adds	r6, r4, r0
 8015704:	2b00      	cmp	r3, #0
 8015706:	f000 80f7 	beq.w	80158f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 801570a:	f892 e001 	ldrb.w	lr, [r2, #1]
 801570e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015712:	44a6      	add	lr, r4
 8015714:	2900      	cmp	r1, #0
 8015716:	f000 80f8 	beq.w	801590a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 801571a:	1950      	adds	r0, r2, r5
 801571c:	5d52      	ldrb	r2, [r2, r5]
 801571e:	7840      	ldrb	r0, [r0, #1]
 8015720:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015724:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015728:	4422      	add	r2, r4
 801572a:	4420      	add	r0, r4
 801572c:	b29b      	uxth	r3, r3
 801572e:	b289      	uxth	r1, r1
 8015730:	fb03 fa01 	mul.w	sl, r3, r1
 8015734:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8015738:	011b      	lsls	r3, r3, #4
 801573a:	b289      	uxth	r1, r1
 801573c:	f89e c002 	ldrb.w	ip, [lr, #2]
 8015740:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015744:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8015746:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015748:	f8b7 8000 	ldrh.w	r8, [r7]
 801574c:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8015750:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 8015754:	eba3 030a 	sub.w	r3, r3, sl
 8015758:	b29b      	uxth	r3, r3
 801575a:	eba9 0901 	sub.w	r9, r9, r1
 801575e:	fa1f f989 	uxth.w	r9, r9
 8015762:	fb03 fc0c 	mul.w	ip, r3, ip
 8015766:	fb09 cc0b 	mla	ip, r9, fp, ip
 801576a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801576e:	fb01 cc0b 	mla	ip, r1, fp, ip
 8015772:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015776:	fb0a cc0b 	mla	ip, sl, fp, ip
 801577a:	ea4f 2b28 	mov.w	fp, r8, asr #8
 801577e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015782:	fb1b fb04 	smulbb	fp, fp, r4
 8015786:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801578a:	fb0c bc07 	mla	ip, ip, r7, fp
 801578e:	f896 b001 	ldrb.w	fp, [r6, #1]
 8015792:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015796:	f89e e000 	ldrb.w	lr, [lr]
 801579a:	435e      	muls	r6, r3
 801579c:	fb09 660b 	mla	r6, r9, fp, r6
 80157a0:	f892 b001 	ldrb.w	fp, [r2, #1]
 80157a4:	fb01 660b 	mla	r6, r1, fp, r6
 80157a8:	f890 b001 	ldrb.w	fp, [r0, #1]
 80157ac:	fb0a 660b 	mla	r6, sl, fp, r6
 80157b0:	ea4f 0be8 	mov.w	fp, r8, asr #3
 80157b4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80157b8:	fb1b fb04 	smulbb	fp, fp, r4
 80157bc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80157c0:	fb06 b607 	mla	r6, r6, r7, fp
 80157c4:	b2b4      	uxth	r4, r6
 80157c6:	9412      	str	r4, [sp, #72]	; 0x48
 80157c8:	9e08      	ldr	r6, [sp, #32]
 80157ca:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80157cc:	f816 b004 	ldrb.w	fp, [r6, r4]
 80157d0:	fb03 f30e 	mul.w	r3, r3, lr
 80157d4:	f892 e000 	ldrb.w	lr, [r2]
 80157d8:	fb09 330b 	mla	r3, r9, fp, r3
 80157dc:	fb01 330e 	mla	r3, r1, lr, r3
 80157e0:	f890 e000 	ldrb.w	lr, [r0]
 80157e4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80157e8:	fb0a 3e0e 	mla	lr, sl, lr, r3
 80157ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80157ee:	fa5f f888 	uxtb.w	r8, r8
 80157f2:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80157f6:	fb18 f803 	smulbb	r8, r8, r3
 80157fa:	fb0e 8807 	mla	r8, lr, r7, r8
 80157fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015800:	fa1f fc8c 	uxth.w	ip, ip
 8015804:	fa1f f888 	uxth.w	r8, r8
 8015808:	f103 0b01 	add.w	fp, r3, #1
 801580c:	f10c 0201 	add.w	r2, ip, #1
 8015810:	f108 0e01 	add.w	lr, r8, #1
 8015814:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 8015818:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801581c:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 8015820:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015824:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 8015828:	0976      	lsrs	r6, r6, #5
 801582a:	ea4c 0c08 	orr.w	ip, ip, r8
 801582e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015832:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015834:	ea4c 0606 	orr.w	r6, ip, r6
 8015838:	801e      	strh	r6, [r3, #0]
 801583a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801583c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801583e:	3302      	adds	r3, #2
 8015840:	930d      	str	r3, [sp, #52]	; 0x34
 8015842:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015844:	4413      	add	r3, r2
 8015846:	9329      	str	r3, [sp, #164]	; 0xa4
 8015848:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801584a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801584c:	4413      	add	r3, r2
 801584e:	932a      	str	r3, [sp, #168]	; 0xa8
 8015850:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015852:	3b01      	subs	r3, #1
 8015854:	9311      	str	r3, [sp, #68]	; 0x44
 8015856:	e72f      	b.n	80156b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8015858:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801585a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801585c:	4413      	add	r3, r2
 801585e:	9329      	str	r3, [sp, #164]	; 0xa4
 8015860:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015862:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015864:	4413      	add	r3, r2
 8015866:	932a      	str	r3, [sp, #168]	; 0xa8
 8015868:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801586a:	3b01      	subs	r3, #1
 801586c:	9309      	str	r3, [sp, #36]	; 0x24
 801586e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015870:	3302      	adds	r3, #2
 8015872:	930a      	str	r3, [sp, #40]	; 0x28
 8015874:	e6d4      	b.n	8015620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015876:	f47f aee6 	bne.w	8015646 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 801587a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801587c:	2b00      	cmp	r3, #0
 801587e:	f340 812b 	ble.w	8015ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8015882:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015886:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801588a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801588e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015890:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015894:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015898:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801589c:	eef0 6a48 	vmov.f32	s13, s16
 80158a0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80158a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80158a8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80158ac:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80158b0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80158b4:	eef0 6a68 	vmov.f32	s13, s17
 80158b8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80158bc:	ee18 2a10 	vmov	r2, s16
 80158c0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80158c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80158c8:	ee18 2a90 	vmov	r2, s17
 80158cc:	932b      	str	r3, [sp, #172]	; 0xac
 80158ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80158d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80158d4:	932c      	str	r3, [sp, #176]	; 0xb0
 80158d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80158d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80158da:	3b01      	subs	r3, #1
 80158dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80158e0:	930f      	str	r3, [sp, #60]	; 0x3c
 80158e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80158e4:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80158e8:	bf08      	it	eq
 80158ea:	4613      	moveq	r3, r2
 80158ec:	9309      	str	r3, [sp, #36]	; 0x24
 80158ee:	eef0 8a67 	vmov.f32	s17, s15
 80158f2:	eeb0 8a47 	vmov.f32	s16, s14
 80158f6:	e68c      	b.n	8015612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80158f8:	b151      	cbz	r1, 8015910 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80158fa:	5d52      	ldrb	r2, [r2, r5]
 80158fc:	9808      	ldr	r0, [sp, #32]
 80158fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015902:	4402      	add	r2, r0
 8015904:	4630      	mov	r0, r6
 8015906:	46b6      	mov	lr, r6
 8015908:	e710      	b.n	801572c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 801590a:	4630      	mov	r0, r6
 801590c:	4632      	mov	r2, r6
 801590e:	e70d      	b.n	801572c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8015910:	4630      	mov	r0, r6
 8015912:	4632      	mov	r2, r6
 8015914:	e7f7      	b.n	8015906 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 8015916:	1c46      	adds	r6, r0, #1
 8015918:	d18f      	bne.n	801583a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801591a:	4285      	cmp	r5, r0
 801591c:	dd8d      	ble.n	801583a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801591e:	1c54      	adds	r4, r2, #1
 8015920:	db8b      	blt.n	801583a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015922:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015924:	4294      	cmp	r4, r2
 8015926:	dd88      	ble.n	801583a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015928:	e9cd 2303 	strd	r2, r3, [sp, #12]
 801592c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801592e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015930:	9002      	str	r0, [sp, #8]
 8015932:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8015936:	e9cd 5300 	strd	r5, r3, [sp]
 801593a:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 801593e:	9b08      	ldr	r3, [sp, #32]
 8015940:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015942:	f7ff fd47 	bl	80153d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8015946:	e778      	b.n	801583a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015948:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801594a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801594c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801594e:	1410      	asrs	r0, r2, #16
 8015950:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015954:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015956:	1412      	asrs	r2, r2, #16
 8015958:	fb05 2000 	mla	r0, r5, r0, r2
 801595c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801595e:	f814 a000 	ldrb.w	sl, [r4, r0]
 8015962:	4402      	add	r2, r0
 8015964:	9808      	ldr	r0, [sp, #32]
 8015966:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801596a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801596e:	eb00 060a 	add.w	r6, r0, sl
 8015972:	2b00      	cmp	r3, #0
 8015974:	f000 80a1 	beq.w	8015aba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8015978:	f892 c001 	ldrb.w	ip, [r2, #1]
 801597c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015980:	4484      	add	ip, r0
 8015982:	2900      	cmp	r1, #0
 8015984:	f000 80a2 	beq.w	8015acc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8015988:	1950      	adds	r0, r2, r5
 801598a:	5d52      	ldrb	r2, [r2, r5]
 801598c:	7840      	ldrb	r0, [r0, #1]
 801598e:	9c08      	ldr	r4, [sp, #32]
 8015990:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015994:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015998:	4422      	add	r2, r4
 801599a:	4420      	add	r0, r4
 801599c:	b29b      	uxth	r3, r3
 801599e:	b289      	uxth	r1, r1
 80159a0:	fb03 f901 	mul.w	r9, r3, r1
 80159a4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80159a8:	011b      	lsls	r3, r3, #4
 80159aa:	b289      	uxth	r1, r1
 80159ac:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80159b0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80159b4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80159b6:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80159ba:	eba3 0309 	sub.w	r3, r3, r9
 80159be:	b29b      	uxth	r3, r3
 80159c0:	eba8 0801 	sub.w	r8, r8, r1
 80159c4:	fa1f f888 	uxth.w	r8, r8
 80159c8:	435f      	muls	r7, r3
 80159ca:	fb08 770b 	mla	r7, r8, fp, r7
 80159ce:	f892 b002 	ldrb.w	fp, [r2, #2]
 80159d2:	f8b4 e000 	ldrh.w	lr, [r4]
 80159d6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80159d8:	fb01 770b 	mla	r7, r1, fp, r7
 80159dc:	f890 b002 	ldrb.w	fp, [r0, #2]
 80159e0:	fb09 770b 	mla	r7, r9, fp, r7
 80159e4:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80159e8:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80159ec:	fb1b fb04 	smulbb	fp, fp, r4
 80159f0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80159f2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80159f6:	fb07 b704 	mla	r7, r7, r4, fp
 80159fa:	f896 b001 	ldrb.w	fp, [r6, #1]
 80159fe:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8015a02:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015a04:	f89c c000 	ldrb.w	ip, [ip]
 8015a08:	435e      	muls	r6, r3
 8015a0a:	fb08 660b 	mla	r6, r8, fp, r6
 8015a0e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015a12:	fb01 660b 	mla	r6, r1, fp, r6
 8015a16:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015a1a:	fb09 660b 	mla	r6, r9, fp, r6
 8015a1e:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8015a22:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015a26:	fb1b fb04 	smulbb	fp, fp, r4
 8015a2a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015a2c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015a30:	fb06 b604 	mla	r6, r6, r4, fp
 8015a34:	9c08      	ldr	r4, [sp, #32]
 8015a36:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8015a3a:	fb03 f30c 	mul.w	r3, r3, ip
 8015a3e:	f892 c000 	ldrb.w	ip, [r2]
 8015a42:	fb08 330a 	mla	r3, r8, sl, r3
 8015a46:	fb01 330c 	mla	r3, r1, ip, r3
 8015a4a:	f890 c000 	ldrb.w	ip, [r0]
 8015a4e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015a52:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015a56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015a58:	fa5f fe8e 	uxtb.w	lr, lr
 8015a5c:	fb1e fe03 	smulbb	lr, lr, r3
 8015a60:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015a62:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015a66:	fb0c ec03 	mla	ip, ip, r3, lr
 8015a6a:	b2bf      	uxth	r7, r7
 8015a6c:	b2b6      	uxth	r6, r6
 8015a6e:	fa1f fc8c 	uxth.w	ip, ip
 8015a72:	1c7b      	adds	r3, r7, #1
 8015a74:	f10c 0201 	add.w	r2, ip, #1
 8015a78:	f106 0b01 	add.w	fp, r6, #1
 8015a7c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015a80:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8015a84:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8015a88:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015a8c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015a90:	0976      	lsrs	r6, r6, #5
 8015a92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015a94:	4317      	orrs	r7, r2
 8015a96:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015a9a:	4337      	orrs	r7, r6
 8015a9c:	f823 7b02 	strh.w	r7, [r3], #2
 8015aa0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015aa2:	930d      	str	r3, [sp, #52]	; 0x34
 8015aa4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015aa6:	4413      	add	r3, r2
 8015aa8:	9329      	str	r3, [sp, #164]	; 0xa4
 8015aaa:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015aac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015aae:	4413      	add	r3, r2
 8015ab0:	932a      	str	r3, [sp, #168]	; 0xa8
 8015ab2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015ab4:	3b01      	subs	r3, #1
 8015ab6:	9311      	str	r3, [sp, #68]	; 0x44
 8015ab8:	e5e1      	b.n	801567e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8015aba:	b151      	cbz	r1, 8015ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8015abc:	5d52      	ldrb	r2, [r2, r5]
 8015abe:	9808      	ldr	r0, [sp, #32]
 8015ac0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015ac4:	4402      	add	r2, r0
 8015ac6:	4630      	mov	r0, r6
 8015ac8:	46b4      	mov	ip, r6
 8015aca:	e767      	b.n	801599c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8015acc:	4630      	mov	r0, r6
 8015ace:	4632      	mov	r2, r6
 8015ad0:	e764      	b.n	801599c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8015ad2:	4630      	mov	r0, r6
 8015ad4:	4632      	mov	r2, r6
 8015ad6:	e7f7      	b.n	8015ac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 8015ad8:	b017      	add	sp, #92	; 0x5c
 8015ada:	ecbd 8b08 	vpop	{d8-d11}
 8015ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8015ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ae8:	880e      	ldrh	r6, [r1, #0]
 8015aea:	b085      	sub	sp, #20
 8015aec:	0230      	lsls	r0, r6, #8
 8015aee:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015af2:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8015af6:	0170      	lsls	r0, r6, #5
 8015af8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015afc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015b00:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015b04:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015b08:	00f6      	lsls	r6, r6, #3
 8015b0a:	ea4b 0000 	orr.w	r0, fp, r0
 8015b0e:	b2f6      	uxtb	r6, r6
 8015b10:	4691      	mov	r9, r2
 8015b12:	fb05 7a0c 	mla	sl, r5, ip, r7
 8015b16:	4306      	orrs	r6, r0
 8015b18:	2d00      	cmp	r5, #0
 8015b1a:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015b1e:	9603      	str	r6, [sp, #12]
 8015b20:	eb09 0e0a 	add.w	lr, r9, sl
 8015b24:	db42      	blt.n	8015bac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8015b26:	45a8      	cmp	r8, r5
 8015b28:	dd40      	ble.n	8015bac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8015b2a:	2f00      	cmp	r7, #0
 8015b2c:	db3c      	blt.n	8015ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8015b2e:	45bc      	cmp	ip, r7
 8015b30:	dd3a      	ble.n	8015ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8015b32:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015b36:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015b3a:	441e      	add	r6, r3
 8015b3c:	1c78      	adds	r0, r7, #1
 8015b3e:	d438      	bmi.n	8015bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015b40:	4584      	cmp	ip, r0
 8015b42:	dd36      	ble.n	8015bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015b44:	b3aa      	cbz	r2, 8015bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015b46:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015b4a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015b4e:	4418      	add	r0, r3
 8015b50:	3501      	adds	r5, #1
 8015b52:	d432      	bmi.n	8015bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015b54:	45a8      	cmp	r8, r5
 8015b56:	dd30      	ble.n	8015bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015b58:	b37c      	cbz	r4, 8015bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015b5a:	2f00      	cmp	r7, #0
 8015b5c:	db2b      	blt.n	8015bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8015b5e:	45bc      	cmp	ip, r7
 8015b60:	dd29      	ble.n	8015bb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8015b62:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015b66:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015b6a:	441d      	add	r5, r3
 8015b6c:	3701      	adds	r7, #1
 8015b6e:	d427      	bmi.n	8015bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015b70:	45bc      	cmp	ip, r7
 8015b72:	dd25      	ble.n	8015bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015b74:	b322      	cbz	r2, 8015bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015b76:	44f4      	add	ip, lr
 8015b78:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015b7c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015b80:	443b      	add	r3, r7
 8015b82:	781f      	ldrb	r7, [r3, #0]
 8015b84:	f896 a000 	ldrb.w	sl, [r6]
 8015b88:	f890 b000 	ldrb.w	fp, [r0]
 8015b8c:	f895 9000 	ldrb.w	r9, [r5]
 8015b90:	9700      	str	r7, [sp, #0]
 8015b92:	2a0f      	cmp	r2, #15
 8015b94:	d801      	bhi.n	8015b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8015b96:	2c0f      	cmp	r4, #15
 8015b98:	d914      	bls.n	8015bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8015b9a:	4b2c      	ldr	r3, [pc, #176]	; (8015c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8015b9c:	4a2c      	ldr	r2, [pc, #176]	; (8015c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8015b9e:	482d      	ldr	r0, [pc, #180]	; (8015c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015ba0:	f240 3173 	movw	r1, #883	; 0x373
 8015ba4:	f005 fef2 	bl	801b98c <__assert_func>
 8015ba8:	ae03      	add	r6, sp, #12
 8015baa:	e7c7      	b.n	8015b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8015bac:	a803      	add	r0, sp, #12
 8015bae:	4606      	mov	r6, r0
 8015bb0:	e7ce      	b.n	8015b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8015bb2:	a803      	add	r0, sp, #12
 8015bb4:	e7cc      	b.n	8015b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8015bb6:	ad03      	add	r5, sp, #12
 8015bb8:	e7d8      	b.n	8015b6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8015bba:	ab03      	add	r3, sp, #12
 8015bbc:	461d      	mov	r5, r3
 8015bbe:	e7e0      	b.n	8015b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8015bc0:	ab03      	add	r3, sp, #12
 8015bc2:	e7de      	b.n	8015b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8015bc4:	b292      	uxth	r2, r2
 8015bc6:	b2a4      	uxth	r4, r4
 8015bc8:	fb02 f804 	mul.w	r8, r2, r4
 8015bcc:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8015bd0:	0112      	lsls	r2, r2, #4
 8015bd2:	b2a4      	uxth	r4, r4
 8015bd4:	f890 e002 	ldrb.w	lr, [r0, #2]
 8015bd8:	78b7      	ldrb	r7, [r6, #2]
 8015bda:	7840      	ldrb	r0, [r0, #1]
 8015bdc:	7876      	ldrb	r6, [r6, #1]
 8015bde:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8015be2:	eba2 0208 	sub.w	r2, r2, r8
 8015be6:	b292      	uxth	r2, r2
 8015be8:	ebac 0c04 	sub.w	ip, ip, r4
 8015bec:	fa1f fc8c 	uxth.w	ip, ip
 8015bf0:	fb02 fe0e 	mul.w	lr, r2, lr
 8015bf4:	fb0c ee07 	mla	lr, ip, r7, lr
 8015bf8:	78af      	ldrb	r7, [r5, #2]
 8015bfa:	fb04 ee07 	mla	lr, r4, r7, lr
 8015bfe:	789f      	ldrb	r7, [r3, #2]
 8015c00:	785b      	ldrb	r3, [r3, #1]
 8015c02:	fb08 e707 	mla	r7, r8, r7, lr
 8015c06:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015c0a:	fb02 fe0b 	mul.w	lr, r2, fp
 8015c0e:	4342      	muls	r2, r0
 8015c10:	7868      	ldrb	r0, [r5, #1]
 8015c12:	9701      	str	r7, [sp, #4]
 8015c14:	fb0c ee0a 	mla	lr, ip, sl, lr
 8015c18:	9f00      	ldr	r7, [sp, #0]
 8015c1a:	fb0c 2206 	mla	r2, ip, r6, r2
 8015c1e:	fb04 ee09 	mla	lr, r4, r9, lr
 8015c22:	fb04 2400 	mla	r4, r4, r0, r2
 8015c26:	fb08 ee07 	mla	lr, r8, r7, lr
 8015c2a:	9f01      	ldr	r7, [sp, #4]
 8015c2c:	fb08 4803 	mla	r8, r8, r3, r4
 8015c30:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015c34:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015c38:	ea47 070e 	orr.w	r7, r7, lr
 8015c3c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015c40:	ea47 0708 	orr.w	r7, r7, r8
 8015c44:	800f      	strh	r7, [r1, #0]
 8015c46:	b005      	add	sp, #20
 8015c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c4c:	0802112b 	.word	0x0802112b
 8015c50:	08021689 	.word	0x08021689
 8015c54:	080211b3 	.word	0x080211b3

08015c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015c58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c5c:	ed2d 8b0a 	vpush	{d8-d12}
 8015c60:	b091      	sub	sp, #68	; 0x44
 8015c62:	eeb0 aa40 	vmov.f32	s20, s0
 8015c66:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8015c68:	9307      	str	r3, [sp, #28]
 8015c6a:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8015c6e:	910c      	str	r1, [sp, #48]	; 0x30
 8015c70:	9309      	str	r3, [sp, #36]	; 0x24
 8015c72:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8015c76:	900f      	str	r0, [sp, #60]	; 0x3c
 8015c78:	6860      	ldr	r0, [r4, #4]
 8015c7a:	920e      	str	r2, [sp, #56]	; 0x38
 8015c7c:	fb00 1303 	mla	r3, r0, r3, r1
 8015c80:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015c82:	6821      	ldr	r1, [r4, #0]
 8015c84:	6854      	ldr	r4, [r2, #4]
 8015c86:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 8015c8a:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8015c8e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015c92:	9308      	str	r3, [sp, #32]
 8015c94:	6813      	ldr	r3, [r2, #0]
 8015c96:	930a      	str	r3, [sp, #40]	; 0x28
 8015c98:	eef0 9a60 	vmov.f32	s19, s1
 8015c9c:	eeb0 9a41 	vmov.f32	s18, s2
 8015ca0:	eeb0 8a62 	vmov.f32	s16, s5
 8015ca4:	eef0 8a43 	vmov.f32	s17, s6
 8015ca8:	eeb0 ca44 	vmov.f32	s24, s8
 8015cac:	eef0 ba64 	vmov.f32	s23, s9
 8015cb0:	eeb0 ba45 	vmov.f32	s22, s10
 8015cb4:	3404      	adds	r4, #4
 8015cb6:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015cba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015cbc:	2b00      	cmp	r3, #0
 8015cbe:	dc03      	bgt.n	8015cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015cc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015cc2:	2b00      	cmp	r3, #0
 8015cc4:	f340 81cb 	ble.w	801605e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8015cc8:	9b07      	ldr	r3, [sp, #28]
 8015cca:	2b00      	cmp	r3, #0
 8015ccc:	f340 80dd 	ble.w	8015e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8015cd0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015cd2:	1412      	asrs	r2, r2, #16
 8015cd4:	ea4f 432b 	mov.w	r3, fp, asr #16
 8015cd8:	d42c      	bmi.n	8015d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8015cda:	1c51      	adds	r1, r2, #1
 8015cdc:	428d      	cmp	r5, r1
 8015cde:	dd2c      	ble.n	8015d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8015ce0:	2b00      	cmp	r3, #0
 8015ce2:	db2a      	blt.n	8015d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8015ce4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015ce6:	1c59      	adds	r1, r3, #1
 8015ce8:	4288      	cmp	r0, r1
 8015cea:	dd26      	ble.n	8015d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8015cec:	9b07      	ldr	r3, [sp, #28]
 8015cee:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015cf0:	9925      	ldr	r1, [sp, #148]	; 0x94
 8015cf2:	3b01      	subs	r3, #1
 8015cf4:	fb02 1203 	mla	r2, r2, r3, r1
 8015cf8:	1412      	asrs	r2, r2, #16
 8015cfa:	d428      	bmi.n	8015d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015cfc:	3201      	adds	r2, #1
 8015cfe:	4295      	cmp	r5, r2
 8015d00:	dd25      	ble.n	8015d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015d02:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015d04:	fb02 b303 	mla	r3, r2, r3, fp
 8015d08:	141b      	asrs	r3, r3, #16
 8015d0a:	d420      	bmi.n	8015d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015d0c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015d0e:	3301      	adds	r3, #1
 8015d10:	429a      	cmp	r2, r3
 8015d12:	dd1c      	ble.n	8015d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015d14:	9b07      	ldr	r3, [sp, #28]
 8015d16:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d18:	9b08      	ldr	r3, [sp, #32]
 8015d1a:	930d      	str	r3, [sp, #52]	; 0x34
 8015d1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015d1e:	2b00      	cmp	r3, #0
 8015d20:	f300 8116 	bgt.w	8015f50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8015d24:	9b07      	ldr	r3, [sp, #28]
 8015d26:	9a08      	ldr	r2, [sp, #32]
 8015d28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015d2c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015d30:	9308      	str	r3, [sp, #32]
 8015d32:	e0ac      	b.n	8015e8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8015d34:	1c51      	adds	r1, r2, #1
 8015d36:	f040 809b 	bne.w	8015e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015d3a:	42aa      	cmp	r2, r5
 8015d3c:	f280 8098 	bge.w	8015e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015d40:	1c5a      	adds	r2, r3, #1
 8015d42:	f2c0 8095 	blt.w	8015e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015d46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015d48:	4293      	cmp	r3, r2
 8015d4a:	f280 8091 	bge.w	8015e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015d4e:	9b07      	ldr	r3, [sp, #28]
 8015d50:	930d      	str	r3, [sp, #52]	; 0x34
 8015d52:	9b08      	ldr	r3, [sp, #32]
 8015d54:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015d58:	2b00      	cmp	r3, #0
 8015d5a:	dde3      	ble.n	8015d24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8015d5c:	9825      	ldr	r0, [sp, #148]	; 0x94
 8015d5e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015d60:	1400      	asrs	r0, r0, #16
 8015d62:	ea4f 422b 	mov.w	r2, fp, asr #16
 8015d66:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015d6a:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8015d6e:	f100 80d9 	bmi.w	8015f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8015d72:	1c46      	adds	r6, r0, #1
 8015d74:	42b5      	cmp	r5, r6
 8015d76:	f340 80d7 	ble.w	8015f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8015d7a:	2a00      	cmp	r2, #0
 8015d7c:	f2c0 80d4 	blt.w	8015f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8015d80:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015d82:	1c56      	adds	r6, r2, #1
 8015d84:	42b7      	cmp	r7, r6
 8015d86:	f340 80cf 	ble.w	8015f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8015d8a:	fb02 0005 	mla	r0, r2, r5, r0
 8015d8e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015d90:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015d92:	4402      	add	r2, r0
 8015d94:	5c30      	ldrb	r0, [r6, r0]
 8015d96:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015d9a:	eb04 0c08 	add.w	ip, r4, r8
 8015d9e:	2b00      	cmp	r3, #0
 8015da0:	f000 80b2 	beq.w	8015f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8015da4:	7856      	ldrb	r6, [r2, #1]
 8015da6:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015daa:	4426      	add	r6, r4
 8015dac:	2900      	cmp	r1, #0
 8015dae:	f000 80b3 	beq.w	8015f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8015db2:	1950      	adds	r0, r2, r5
 8015db4:	5d52      	ldrb	r2, [r2, r5]
 8015db6:	7840      	ldrb	r0, [r0, #1]
 8015db8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015dbc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015dc0:	4422      	add	r2, r4
 8015dc2:	4420      	add	r0, r4
 8015dc4:	b29b      	uxth	r3, r3
 8015dc6:	b289      	uxth	r1, r1
 8015dc8:	fb03 f901 	mul.w	r9, r3, r1
 8015dcc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015dd0:	011b      	lsls	r3, r3, #4
 8015dd2:	b289      	uxth	r1, r1
 8015dd4:	78b7      	ldrb	r7, [r6, #2]
 8015dd6:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015dda:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015dde:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015de2:	eba3 0309 	sub.w	r3, r3, r9
 8015de6:	b29b      	uxth	r3, r3
 8015de8:	ebae 0e01 	sub.w	lr, lr, r1
 8015dec:	fa1f fe8e 	uxth.w	lr, lr
 8015df0:	435f      	muls	r7, r3
 8015df2:	fb0e 770a 	mla	r7, lr, sl, r7
 8015df6:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015dfa:	fb01 770a 	mla	r7, r1, sl, r7
 8015dfe:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015e02:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015e06:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015e0a:	f896 8000 	ldrb.w	r8, [r6]
 8015e0e:	7876      	ldrb	r6, [r6, #1]
 8015e10:	fb03 f808 	mul.w	r8, r3, r8
 8015e14:	fb0e 8807 	mla	r8, lr, r7, r8
 8015e18:	7817      	ldrb	r7, [r2, #0]
 8015e1a:	fb01 8807 	mla	r8, r1, r7, r8
 8015e1e:	7807      	ldrb	r7, [r0, #0]
 8015e20:	fb09 8707 	mla	r7, r9, r7, r8
 8015e24:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015e28:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015e2c:	ea4a 0707 	orr.w	r7, sl, r7
 8015e30:	4373      	muls	r3, r6
 8015e32:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015e36:	fb0e 330c 	mla	r3, lr, ip, r3
 8015e3a:	fb01 310a 	mla	r1, r1, sl, r3
 8015e3e:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015e42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e44:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015e48:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015e4c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015e50:	ea47 070a 	orr.w	r7, r7, sl
 8015e54:	801f      	strh	r7, [r3, #0]
 8015e56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e58:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015e5a:	3302      	adds	r3, #2
 8015e5c:	930b      	str	r3, [sp, #44]	; 0x2c
 8015e5e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015e60:	4413      	add	r3, r2
 8015e62:	9325      	str	r3, [sp, #148]	; 0x94
 8015e64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e66:	449b      	add	fp, r3
 8015e68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015e6a:	3b01      	subs	r3, #1
 8015e6c:	930d      	str	r3, [sp, #52]	; 0x34
 8015e6e:	e772      	b.n	8015d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015e70:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015e72:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015e74:	4413      	add	r3, r2
 8015e76:	9325      	str	r3, [sp, #148]	; 0x94
 8015e78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e7a:	449b      	add	fp, r3
 8015e7c:	9b07      	ldr	r3, [sp, #28]
 8015e7e:	3b01      	subs	r3, #1
 8015e80:	9307      	str	r3, [sp, #28]
 8015e82:	9b08      	ldr	r3, [sp, #32]
 8015e84:	3302      	adds	r3, #2
 8015e86:	9308      	str	r3, [sp, #32]
 8015e88:	e71e      	b.n	8015cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015e8a:	f47f af2f 	bne.w	8015cec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8015e8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e90:	2b00      	cmp	r3, #0
 8015e92:	f340 80e4 	ble.w	801605e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8015e96:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8015e9a:	ee79 9aab 	vadd.f32	s19, s19, s23
 8015e9e:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8015ea2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015ea4:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8015ea8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015eac:	eef0 6a48 	vmov.f32	s13, s16
 8015eb0:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015eb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015eb8:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015ebc:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8015ec0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015ec4:	eef0 6a68 	vmov.f32	s13, s17
 8015ec8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015ecc:	ee18 2a10 	vmov	r2, s16
 8015ed0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015ed4:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ed8:	ee18 2a90 	vmov	r2, s17
 8015edc:	9327      	str	r3, [sp, #156]	; 0x9c
 8015ede:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015ee0:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ee4:	9328      	str	r3, [sp, #160]	; 0xa0
 8015ee6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015ee8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015eea:	3b01      	subs	r3, #1
 8015eec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ef0:	930c      	str	r3, [sp, #48]	; 0x30
 8015ef2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015ef4:	bf08      	it	eq
 8015ef6:	4613      	moveq	r3, r2
 8015ef8:	ee16 ba90 	vmov	fp, s13
 8015efc:	9307      	str	r3, [sp, #28]
 8015efe:	eef0 8a67 	vmov.f32	s17, s15
 8015f02:	eeb0 8a47 	vmov.f32	s16, s14
 8015f06:	e6d8      	b.n	8015cba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8015f08:	b149      	cbz	r1, 8015f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 8015f0a:	5d52      	ldrb	r2, [r2, r5]
 8015f0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015f10:	4422      	add	r2, r4
 8015f12:	4660      	mov	r0, ip
 8015f14:	4666      	mov	r6, ip
 8015f16:	e755      	b.n	8015dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8015f18:	4660      	mov	r0, ip
 8015f1a:	4662      	mov	r2, ip
 8015f1c:	e752      	b.n	8015dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8015f1e:	4660      	mov	r0, ip
 8015f20:	4662      	mov	r2, ip
 8015f22:	e7f7      	b.n	8015f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8015f24:	1c47      	adds	r7, r0, #1
 8015f26:	d196      	bne.n	8015e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015f28:	4285      	cmp	r5, r0
 8015f2a:	dd94      	ble.n	8015e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015f2c:	1c56      	adds	r6, r2, #1
 8015f2e:	db92      	blt.n	8015e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015f30:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8015f32:	4296      	cmp	r6, r2
 8015f34:	dd8f      	ble.n	8015e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015f36:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015f3a:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8015f3e:	e9cd 5600 	strd	r5, r6, [sp]
 8015f42:	4623      	mov	r3, r4
 8015f44:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 8015f48:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015f4a:	f7ff fdcb 	bl	8015ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015f4e:	e782      	b.n	8015e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015f50:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015f52:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015f54:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015f56:	1412      	asrs	r2, r2, #16
 8015f58:	ea4f 402b 	mov.w	r0, fp, asr #16
 8015f5c:	fb05 2000 	mla	r0, r5, r0, r2
 8015f60:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015f62:	f816 8000 	ldrb.w	r8, [r6, r0]
 8015f66:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015f6a:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015f6e:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8015f72:	4402      	add	r2, r0
 8015f74:	eb04 0c08 	add.w	ip, r4, r8
 8015f78:	2b00      	cmp	r3, #0
 8015f7a:	d062      	beq.n	8016042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8015f7c:	7856      	ldrb	r6, [r2, #1]
 8015f7e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015f82:	4426      	add	r6, r4
 8015f84:	2900      	cmp	r1, #0
 8015f86:	d064      	beq.n	8016052 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 8015f88:	1950      	adds	r0, r2, r5
 8015f8a:	5d52      	ldrb	r2, [r2, r5]
 8015f8c:	7840      	ldrb	r0, [r0, #1]
 8015f8e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015f92:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015f96:	4422      	add	r2, r4
 8015f98:	4420      	add	r0, r4
 8015f9a:	b29b      	uxth	r3, r3
 8015f9c:	b289      	uxth	r1, r1
 8015f9e:	fb03 f901 	mul.w	r9, r3, r1
 8015fa2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015fa6:	011b      	lsls	r3, r3, #4
 8015fa8:	b289      	uxth	r1, r1
 8015faa:	78b7      	ldrb	r7, [r6, #2]
 8015fac:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015fb0:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015fb4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015fb8:	eba3 0309 	sub.w	r3, r3, r9
 8015fbc:	b29b      	uxth	r3, r3
 8015fbe:	ebae 0e01 	sub.w	lr, lr, r1
 8015fc2:	fa1f fe8e 	uxth.w	lr, lr
 8015fc6:	435f      	muls	r7, r3
 8015fc8:	fb0e 770a 	mla	r7, lr, sl, r7
 8015fcc:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015fd0:	fb01 770a 	mla	r7, r1, sl, r7
 8015fd4:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015fd8:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015fdc:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015fe0:	f896 8000 	ldrb.w	r8, [r6]
 8015fe4:	7876      	ldrb	r6, [r6, #1]
 8015fe6:	fb03 f808 	mul.w	r8, r3, r8
 8015fea:	fb0e 8807 	mla	r8, lr, r7, r8
 8015fee:	7817      	ldrb	r7, [r2, #0]
 8015ff0:	fb01 8807 	mla	r8, r1, r7, r8
 8015ff4:	7807      	ldrb	r7, [r0, #0]
 8015ff6:	fb09 8707 	mla	r7, r9, r7, r8
 8015ffa:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015ffe:	4373      	muls	r3, r6
 8016000:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016004:	7856      	ldrb	r6, [r2, #1]
 8016006:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016008:	ea4a 0707 	orr.w	r7, sl, r7
 801600c:	fb0e 330c 	mla	r3, lr, ip, r3
 8016010:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016014:	fb01 3306 	mla	r3, r1, r6, r3
 8016018:	fb09 3a0a 	mla	sl, r9, sl, r3
 801601c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016020:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016022:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016026:	ea47 070a 	orr.w	r7, r7, sl
 801602a:	f823 7b02 	strh.w	r7, [r3], #2
 801602e:	930d      	str	r3, [sp, #52]	; 0x34
 8016030:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016032:	4413      	add	r3, r2
 8016034:	9325      	str	r3, [sp, #148]	; 0x94
 8016036:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016038:	449b      	add	fp, r3
 801603a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801603c:	3b01      	subs	r3, #1
 801603e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016040:	e66c      	b.n	8015d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8016042:	b149      	cbz	r1, 8016058 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 8016044:	5d52      	ldrb	r2, [r2, r5]
 8016046:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801604a:	4422      	add	r2, r4
 801604c:	4660      	mov	r0, ip
 801604e:	4666      	mov	r6, ip
 8016050:	e7a3      	b.n	8015f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8016052:	4660      	mov	r0, ip
 8016054:	4662      	mov	r2, ip
 8016056:	e7a0      	b.n	8015f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8016058:	4660      	mov	r0, ip
 801605a:	4662      	mov	r2, ip
 801605c:	e7f7      	b.n	801604e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 801605e:	b011      	add	sp, #68	; 0x44
 8016060:	ecbd 8b0a 	vpop	{d8-d12}
 8016064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8016068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801606c:	8808      	ldrh	r0, [r1, #0]
 801606e:	b085      	sub	sp, #20
 8016070:	1206      	asrs	r6, r0, #8
 8016072:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016076:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801607a:	9600      	str	r6, [sp, #0]
 801607c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016080:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8016084:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016088:	10c6      	asrs	r6, r0, #3
 801608a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801608e:	9601      	str	r6, [sp, #4]
 8016090:	00c0      	lsls	r0, r0, #3
 8016092:	fb04 560c 	mla	r6, r4, ip, r5
 8016096:	b2c0      	uxtb	r0, r0
 8016098:	4692      	mov	sl, r2
 801609a:	eb02 0e06 	add.w	lr, r2, r6
 801609e:	9a00      	ldr	r2, [sp, #0]
 80160a0:	9002      	str	r0, [sp, #8]
 80160a2:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80160a6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80160aa:	9a01      	ldr	r2, [sp, #4]
 80160ac:	2c00      	cmp	r4, #0
 80160ae:	4698      	mov	r8, r3
 80160b0:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80160b4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80160b8:	db3e      	blt.n	8016138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80160ba:	45a1      	cmp	r9, r4
 80160bc:	dd3c      	ble.n	8016138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80160be:	2d00      	cmp	r5, #0
 80160c0:	db38      	blt.n	8016134 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80160c2:	45ac      	cmp	ip, r5
 80160c4:	dd36      	ble.n	8016134 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80160c6:	f81a 2006 	ldrb.w	r2, [sl, r6]
 80160ca:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 80160ce:	1c6e      	adds	r6, r5, #1
 80160d0:	d435      	bmi.n	801613e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80160d2:	45b4      	cmp	ip, r6
 80160d4:	dd33      	ble.n	801613e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80160d6:	b393      	cbz	r3, 801613e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80160d8:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80160dc:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 80160e0:	3401      	adds	r4, #1
 80160e2:	d430      	bmi.n	8016146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80160e4:	45a1      	cmp	r9, r4
 80160e6:	dd2e      	ble.n	8016146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80160e8:	b36f      	cbz	r7, 8016146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80160ea:	2d00      	cmp	r5, #0
 80160ec:	db29      	blt.n	8016142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80160ee:	45ac      	cmp	ip, r5
 80160f0:	dd27      	ble.n	8016142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80160f2:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80160f6:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 80160fa:	3501      	adds	r5, #1
 80160fc:	d407      	bmi.n	801610e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80160fe:	45ac      	cmp	ip, r5
 8016100:	dd05      	ble.n	801610e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8016102:	b123      	cbz	r3, 801610e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8016104:	44f4      	add	ip, lr
 8016106:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801610a:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 801610e:	2b0f      	cmp	r3, #15
 8016110:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016114:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016118:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801611c:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8016120:	d801      	bhi.n	8016126 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8016122:	2f0f      	cmp	r7, #15
 8016124:	d911      	bls.n	801614a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 8016126:	4b7f      	ldr	r3, [pc, #508]	; (8016324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8016128:	4a7f      	ldr	r2, [pc, #508]	; (8016328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 801612a:	4880      	ldr	r0, [pc, #512]	; (801632c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 801612c:	f240 3173 	movw	r1, #883	; 0x373
 8016130:	f005 fc2c 	bl	801b98c <__assert_func>
 8016134:	4602      	mov	r2, r0
 8016136:	e7ca      	b.n	80160ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8016138:	4606      	mov	r6, r0
 801613a:	4602      	mov	r2, r0
 801613c:	e7d0      	b.n	80160e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 801613e:	4606      	mov	r6, r0
 8016140:	e7ce      	b.n	80160e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8016142:	4604      	mov	r4, r0
 8016144:	e7d9      	b.n	80160fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 8016146:	4604      	mov	r4, r0
 8016148:	e7e1      	b.n	801610e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801614a:	b29b      	uxth	r3, r3
 801614c:	b2bf      	uxth	r7, r7
 801614e:	fb03 fe07 	mul.w	lr, r3, r7
 8016152:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016156:	011b      	lsls	r3, r3, #4
 8016158:	eba3 0c0e 	sub.w	ip, r3, lr
 801615c:	b2bf      	uxth	r7, r7
 801615e:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8016162:	fa1f fc8c 	uxth.w	ip, ip
 8016166:	1bed      	subs	r5, r5, r7
 8016168:	b2ad      	uxth	r5, r5
 801616a:	fb0c f30a 	mul.w	r3, ip, sl
 801616e:	fb05 330b 	mla	r3, r5, fp, r3
 8016172:	fb07 3309 	mla	r3, r7, r9, r3
 8016176:	fb0e 3308 	mla	r3, lr, r8, r3
 801617a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801617e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016182:	9303      	str	r3, [sp, #12]
 8016184:	d018      	beq.n	80161b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 8016186:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801618a:	fb0b f303 	mul.w	r3, fp, r3
 801618e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016192:	fb0b fb02 	mul.w	fp, fp, r2
 8016196:	0a1a      	lsrs	r2, r3, #8
 8016198:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801619c:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80161a0:	441a      	add	r2, r3
 80161a2:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80161a6:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80161aa:	0a12      	lsrs	r2, r2, #8
 80161ac:	0a1b      	lsrs	r3, r3, #8
 80161ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80161b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161b6:	431a      	orrs	r2, r3
 80161b8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80161bc:	d019      	beq.n	80161f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 80161be:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80161c2:	fb0a fb0b 	mul.w	fp, sl, fp
 80161c6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80161ca:	fb0a fa06 	mul.w	sl, sl, r6
 80161ce:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80161d2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80161d6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80161da:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80161de:	445e      	add	r6, fp
 80161e0:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80161e4:	0a36      	lsrs	r6, r6, #8
 80161e6:	0a1b      	lsrs	r3, r3, #8
 80161e8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80161ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161f0:	431e      	orrs	r6, r3
 80161f2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80161f6:	d019      	beq.n	801622c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 80161f8:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80161fc:	fb09 fa0a 	mul.w	sl, r9, sl
 8016200:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016204:	fb09 f904 	mul.w	r9, r9, r4
 8016208:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801620c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016210:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016214:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8016218:	4454      	add	r4, sl
 801621a:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801621e:	0a24      	lsrs	r4, r4, #8
 8016220:	0a1b      	lsrs	r3, r3, #8
 8016222:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016226:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801622a:	431c      	orrs	r4, r3
 801622c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016230:	d019      	beq.n	8016266 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 8016232:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8016236:	fb08 f909 	mul.w	r9, r8, r9
 801623a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801623e:	fb08 f800 	mul.w	r8, r8, r0
 8016242:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8016246:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801624a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801624e:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8016252:	4448      	add	r0, r9
 8016254:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016258:	0a00      	lsrs	r0, r0, #8
 801625a:	0a1b      	lsrs	r3, r3, #8
 801625c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016260:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016264:	4318      	orrs	r0, r3
 8016266:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801626a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801626e:	fb0c f808 	mul.w	r8, ip, r8
 8016272:	fb05 8803 	mla	r8, r5, r3, r8
 8016276:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801627a:	fb07 8803 	mla	r8, r7, r3, r8
 801627e:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8016282:	fb0e 8303 	mla	r3, lr, r3, r8
 8016286:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801628a:	fb0c f606 	mul.w	r6, ip, r6
 801628e:	0a1b      	lsrs	r3, r3, #8
 8016290:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016294:	fb05 6202 	mla	r2, r5, r2, r6
 8016298:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801629c:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 80162a0:	fb07 2703 	mla	r7, r7, r3, r2
 80162a4:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80162a8:	b295      	uxth	r5, r2
 80162aa:	9a03      	ldr	r2, [sp, #12]
 80162ac:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80162b0:	436a      	muls	r2, r5
 80162b2:	fb0e 7303 	mla	r3, lr, r3, r7
 80162b6:	1c50      	adds	r0, r2, #1
 80162b8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80162bc:	0a1b      	lsrs	r3, r3, #8
 80162be:	9a00      	ldr	r2, [sp, #0]
 80162c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80162c4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80162c8:	ea48 0303 	orr.w	r3, r8, r3
 80162cc:	b2c0      	uxtb	r0, r0
 80162ce:	fb12 f200 	smulbb	r2, r2, r0
 80162d2:	0c1e      	lsrs	r6, r3, #16
 80162d4:	fb06 2605 	mla	r6, r6, r5, r2
 80162d8:	9a01      	ldr	r2, [sp, #4]
 80162da:	f3c3 2407 	ubfx	r4, r3, #8, #8
 80162de:	fb12 f200 	smulbb	r2, r2, r0
 80162e2:	fb04 2205 	mla	r2, r4, r5, r2
 80162e6:	b294      	uxth	r4, r2
 80162e8:	9a02      	ldr	r2, [sp, #8]
 80162ea:	b2db      	uxtb	r3, r3
 80162ec:	fb12 f200 	smulbb	r2, r2, r0
 80162f0:	fb03 2205 	mla	r2, r3, r5, r2
 80162f4:	b2b6      	uxth	r6, r6
 80162f6:	b292      	uxth	r2, r2
 80162f8:	1c73      	adds	r3, r6, #1
 80162fa:	1c50      	adds	r0, r2, #1
 80162fc:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8016300:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8016304:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016308:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801630c:	4313      	orrs	r3, r2
 801630e:	1c62      	adds	r2, r4, #1
 8016310:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016314:	0952      	lsrs	r2, r2, #5
 8016316:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801631a:	4313      	orrs	r3, r2
 801631c:	800b      	strh	r3, [r1, #0]
 801631e:	b005      	add	sp, #20
 8016320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016324:	0802112b 	.word	0x0802112b
 8016328:	08021689 	.word	0x08021689
 801632c:	080211b3 	.word	0x080211b3

08016330 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016334:	ed2d 8b08 	vpush	{d8-d11}
 8016338:	b09b      	sub	sp, #108	; 0x6c
 801633a:	eeb0 aa40 	vmov.f32	s20, s0
 801633e:	9309      	str	r3, [sp, #36]	; 0x24
 8016340:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8016344:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 8016346:	9311      	str	r3, [sp, #68]	; 0x44
 8016348:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801634c:	9114      	str	r1, [sp, #80]	; 0x50
 801634e:	9317      	str	r3, [sp, #92]	; 0x5c
 8016350:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8016354:	9019      	str	r0, [sp, #100]	; 0x64
 8016356:	6868      	ldr	r0, [r5, #4]
 8016358:	9218      	str	r2, [sp, #96]	; 0x60
 801635a:	fb00 1303 	mla	r3, r0, r3, r1
 801635e:	6829      	ldr	r1, [r5, #0]
 8016360:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8016362:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8016366:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801636a:	930c      	str	r3, [sp, #48]	; 0x30
 801636c:	6813      	ldr	r3, [r2, #0]
 801636e:	9313      	str	r3, [sp, #76]	; 0x4c
 8016370:	6853      	ldr	r3, [r2, #4]
 8016372:	3304      	adds	r3, #4
 8016374:	eef0 9a60 	vmov.f32	s19, s1
 8016378:	eeb0 9a41 	vmov.f32	s18, s2
 801637c:	eeb0 8a62 	vmov.f32	s16, s5
 8016380:	eef0 8a43 	vmov.f32	s17, s6
 8016384:	eef0 ba44 	vmov.f32	s23, s8
 8016388:	eeb0 ba64 	vmov.f32	s22, s9
 801638c:	eef0 aa45 	vmov.f32	s21, s10
 8016390:	9308      	str	r3, [sp, #32]
 8016392:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016394:	2b00      	cmp	r3, #0
 8016396:	dc03      	bgt.n	80163a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8016398:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801639a:	2b00      	cmp	r3, #0
 801639c:	f340 8363 	ble.w	8016a66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 80163a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80163a2:	2b00      	cmp	r3, #0
 80163a4:	f340 81ad 	ble.w	8016702 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 80163a8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80163aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80163ac:	1412      	asrs	r2, r2, #16
 80163ae:	ea4f 4323 	mov.w	r3, r3, asr #16
 80163b2:	d42f      	bmi.n	8016414 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80163b4:	1c51      	adds	r1, r2, #1
 80163b6:	428c      	cmp	r4, r1
 80163b8:	dd2f      	ble.n	801641a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80163ba:	2b00      	cmp	r3, #0
 80163bc:	db2d      	blt.n	801641a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80163be:	9811      	ldr	r0, [sp, #68]	; 0x44
 80163c0:	1c59      	adds	r1, r3, #1
 80163c2:	4288      	cmp	r0, r1
 80163c4:	dd29      	ble.n	801641a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80163c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80163c8:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80163ca:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80163cc:	3b01      	subs	r3, #1
 80163ce:	fb02 1203 	mla	r2, r2, r3, r1
 80163d2:	1412      	asrs	r2, r2, #16
 80163d4:	d42b      	bmi.n	801642e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80163d6:	3201      	adds	r2, #1
 80163d8:	4294      	cmp	r4, r2
 80163da:	dd28      	ble.n	801642e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80163dc:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80163de:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80163e0:	fb02 1303 	mla	r3, r2, r3, r1
 80163e4:	141b      	asrs	r3, r3, #16
 80163e6:	d422      	bmi.n	801642e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80163e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80163ea:	3301      	adds	r3, #1
 80163ec:	429a      	cmp	r2, r3
 80163ee:	dd1e      	ble.n	801642e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80163f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80163f2:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80163f6:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 80163fa:	9312      	str	r3, [sp, #72]	; 0x48
 80163fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80163fe:	2b00      	cmp	r3, #0
 8016400:	f300 81ea 	bgt.w	80167d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8016404:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016406:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016408:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801640c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016410:	930c      	str	r3, [sp, #48]	; 0x30
 8016412:	e178      	b.n	8016706 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 8016414:	1c51      	adds	r1, r2, #1
 8016416:	f040 8165 	bne.w	80166e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801641a:	42a2      	cmp	r2, r4
 801641c:	f280 8162 	bge.w	80166e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016420:	1c5f      	adds	r7, r3, #1
 8016422:	f2c0 815f 	blt.w	80166e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016426:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016428:	4293      	cmp	r3, r2
 801642a:	f280 815b 	bge.w	80166e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801642e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016430:	9316      	str	r3, [sp, #88]	; 0x58
 8016432:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016434:	9312      	str	r3, [sp, #72]	; 0x48
 8016436:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 801643a:	9315      	str	r3, [sp, #84]	; 0x54
 801643c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801643e:	2b00      	cmp	r3, #0
 8016440:	dde0      	ble.n	8016404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8016442:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016444:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016446:	f3c2 3003 	ubfx	r0, r2, #12, #4
 801644a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801644c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016450:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016452:	1412      	asrs	r2, r2, #16
 8016454:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016458:	f100 81a5 	bmi.w	80167a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 801645c:	1c55      	adds	r5, r2, #1
 801645e:	42ac      	cmp	r4, r5
 8016460:	f340 81a3 	ble.w	80167aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8016464:	2b00      	cmp	r3, #0
 8016466:	f2c0 81a0 	blt.w	80167aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801646a:	9f11      	ldr	r7, [sp, #68]	; 0x44
 801646c:	1c5d      	adds	r5, r3, #1
 801646e:	42af      	cmp	r7, r5
 8016470:	f340 819b 	ble.w	80167aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8016474:	fb03 2304 	mla	r3, r3, r4, r2
 8016478:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801647a:	18d5      	adds	r5, r2, r3
 801647c:	5cd3      	ldrb	r3, [r2, r3]
 801647e:	9a08      	ldr	r2, [sp, #32]
 8016480:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8016484:	0e1f      	lsrs	r7, r3, #24
 8016486:	2800      	cmp	r0, #0
 8016488:	f000 817c 	beq.w	8016784 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 801648c:	786a      	ldrb	r2, [r5, #1]
 801648e:	9e08      	ldr	r6, [sp, #32]
 8016490:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8016494:	920d      	str	r2, [sp, #52]	; 0x34
 8016496:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801649a:	2900      	cmp	r1, #0
 801649c:	f000 817d 	beq.w	801679a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 80164a0:	192a      	adds	r2, r5, r4
 80164a2:	5d2d      	ldrb	r5, [r5, r4]
 80164a4:	7852      	ldrb	r2, [r2, #1]
 80164a6:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 80164aa:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 80164ae:	950a      	str	r5, [sp, #40]	; 0x28
 80164b0:	ea4f 6915 	mov.w	r9, r5, lsr #24
 80164b4:	920e      	str	r2, [sp, #56]	; 0x38
 80164b6:	0e15      	lsrs	r5, r2, #24
 80164b8:	b280      	uxth	r0, r0
 80164ba:	b289      	uxth	r1, r1
 80164bc:	fb00 fa01 	mul.w	sl, r0, r1
 80164c0:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 80164c4:	0100      	lsls	r0, r0, #4
 80164c6:	eba0 080a 	sub.w	r8, r0, sl
 80164ca:	b289      	uxth	r1, r1
 80164cc:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 80164d0:	fa1f f888 	uxth.w	r8, r8
 80164d4:	1a52      	subs	r2, r2, r1
 80164d6:	b292      	uxth	r2, r2
 80164d8:	fb08 f00e 	mul.w	r0, r8, lr
 80164dc:	fb02 0007 	mla	r0, r2, r7, r0
 80164e0:	fb01 0009 	mla	r0, r1, r9, r0
 80164e4:	fb0a 0005 	mla	r0, sl, r5, r0
 80164e8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80164ec:	2800      	cmp	r0, #0
 80164ee:	f000 80ea 	beq.w	80166c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80164f2:	2fff      	cmp	r7, #255	; 0xff
 80164f4:	d01a      	beq.n	801652c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 80164f6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80164fa:	fb07 fc0c 	mul.w	ip, r7, ip
 80164fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016502:	435f      	muls	r7, r3
 8016504:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016508:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801650c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016510:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 8016514:	4463      	add	r3, ip
 8016516:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 801651a:	0a1b      	lsrs	r3, r3, #8
 801651c:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016520:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016524:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8016528:	ea43 030b 	orr.w	r3, r3, fp
 801652c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016530:	d01e      	beq.n	8016570 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 8016532:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8016534:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016538:	fb0e fb0b 	mul.w	fp, lr, fp
 801653c:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8016540:	fb0e fe07 	mul.w	lr, lr, r7
 8016544:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8016548:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801654c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016550:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8016554:	44dc      	add	ip, fp
 8016556:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 801655a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801655e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016562:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016566:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801656a:	ea4c 060e 	orr.w	r6, ip, lr
 801656e:	960d      	str	r6, [sp, #52]	; 0x34
 8016570:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016574:	d01e      	beq.n	80165b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8016576:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8016578:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 801657c:	fb09 fe0e 	mul.w	lr, r9, lr
 8016580:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8016584:	fb09 f907 	mul.w	r9, r9, r7
 8016588:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801658c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016590:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016594:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8016598:	44f4      	add	ip, lr
 801659a:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801659e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80165a2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80165a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80165aa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80165ae:	ea4c 0609 	orr.w	r6, ip, r9
 80165b2:	960a      	str	r6, [sp, #40]	; 0x28
 80165b4:	2dff      	cmp	r5, #255	; 0xff
 80165b6:	d01c      	beq.n	80165f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 80165b8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80165ba:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 80165be:	fb05 fe0e 	mul.w	lr, r5, lr
 80165c2:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80165c6:	437d      	muls	r5, r7
 80165c8:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80165cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80165d0:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80165d4:	f505 7780 	add.w	r7, r5, #256	; 0x100
 80165d8:	44f4      	add	ip, lr
 80165da:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 80165de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80165e2:	0a2d      	lsrs	r5, r5, #8
 80165e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80165e8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80165ec:	ea4c 0505 	orr.w	r5, ip, r5
 80165f0:	950e      	str	r5, [sp, #56]	; 0x38
 80165f2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80165f4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80165f6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80165fa:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80165fe:	fb08 f505 	mul.w	r5, r8, r5
 8016602:	fb02 5507 	mla	r5, r2, r7, r5
 8016606:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 801660a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801660c:	fb01 5507 	mla	r5, r1, r7, r5
 8016610:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8016614:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8016616:	fb0a 5507 	mla	r5, sl, r7, r5
 801661a:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801661e:	fb08 f807 	mul.w	r8, r8, r7
 8016622:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016626:	fb02 8303 	mla	r3, r2, r3, r8
 801662a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801662c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801662e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016632:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016634:	fb01 330c 	mla	r3, r1, ip, r3
 8016638:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801663c:	fb0a 3a01 	mla	sl, sl, r1, r3
 8016640:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016642:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8016644:	881f      	ldrh	r7, [r3, #0]
 8016646:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016648:	0a2d      	lsrs	r5, r5, #8
 801664a:	4343      	muls	r3, r0
 801664c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016650:	1c58      	adds	r0, r3, #1
 8016652:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016656:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801665a:	ea45 050a 	orr.w	r5, r5, sl
 801665e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016662:	0c29      	lsrs	r1, r5, #16
 8016664:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016668:	123b      	asrs	r3, r7, #8
 801666a:	b2c0      	uxtb	r0, r0
 801666c:	fb11 f102 	smulbb	r1, r1, r2
 8016670:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8016674:	fb03 1300 	mla	r3, r3, r0, r1
 8016678:	b299      	uxth	r1, r3
 801667a:	10fa      	asrs	r2, r7, #3
 801667c:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8016680:	fb13 f306 	smulbb	r3, r3, r6
 8016684:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016688:	fb02 3200 	mla	r2, r2, r0, r3
 801668c:	b2ed      	uxtb	r5, r5
 801668e:	00fb      	lsls	r3, r7, #3
 8016690:	b2db      	uxtb	r3, r3
 8016692:	fb15 f506 	smulbb	r5, r5, r6
 8016696:	fb03 5500 	mla	r5, r3, r0, r5
 801669a:	b292      	uxth	r2, r2
 801669c:	b2ad      	uxth	r5, r5
 801669e:	1c4b      	adds	r3, r1, #1
 80166a0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80166a4:	1c68      	adds	r0, r5, #1
 80166a6:	1c51      	adds	r1, r2, #1
 80166a8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80166ac:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80166b0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80166b4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80166b8:	0952      	lsrs	r2, r2, #5
 80166ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80166be:	432b      	orrs	r3, r5
 80166c0:	4313      	orrs	r3, r2
 80166c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80166c4:	8013      	strh	r3, [r2, #0]
 80166c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80166c8:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80166ca:	3302      	adds	r3, #2
 80166cc:	9312      	str	r3, [sp, #72]	; 0x48
 80166ce:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80166d0:	4413      	add	r3, r2
 80166d2:	932d      	str	r3, [sp, #180]	; 0xb4
 80166d4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80166d6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80166d8:	4413      	add	r3, r2
 80166da:	932e      	str	r3, [sp, #184]	; 0xb8
 80166dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80166de:	3b01      	subs	r3, #1
 80166e0:	9316      	str	r3, [sp, #88]	; 0x58
 80166e2:	e6ab      	b.n	801643c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 80166e4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80166e6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80166e8:	4413      	add	r3, r2
 80166ea:	932d      	str	r3, [sp, #180]	; 0xb4
 80166ec:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80166ee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80166f0:	4413      	add	r3, r2
 80166f2:	932e      	str	r3, [sp, #184]	; 0xb8
 80166f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80166f6:	3b01      	subs	r3, #1
 80166f8:	9309      	str	r3, [sp, #36]	; 0x24
 80166fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80166fc:	3302      	adds	r3, #2
 80166fe:	930c      	str	r3, [sp, #48]	; 0x30
 8016700:	e64e      	b.n	80163a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8016702:	f47f ae60 	bne.w	80163c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8016706:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016708:	2b00      	cmp	r3, #0
 801670a:	f340 81ac 	ble.w	8016a66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 801670e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016712:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016716:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801671a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801671c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016720:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016724:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016728:	eef0 6a48 	vmov.f32	s13, s16
 801672c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016730:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016734:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016738:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801673c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016740:	eef0 6a68 	vmov.f32	s13, s17
 8016744:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016748:	ee18 2a10 	vmov	r2, s16
 801674c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016750:	fb92 f3f3 	sdiv	r3, r2, r3
 8016754:	ee18 2a90 	vmov	r2, s17
 8016758:	932f      	str	r3, [sp, #188]	; 0xbc
 801675a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801675c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016760:	9330      	str	r3, [sp, #192]	; 0xc0
 8016762:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016764:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016766:	3b01      	subs	r3, #1
 8016768:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801676c:	9314      	str	r3, [sp, #80]	; 0x50
 801676e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016770:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 8016774:	bf08      	it	eq
 8016776:	4613      	moveq	r3, r2
 8016778:	9309      	str	r3, [sp, #36]	; 0x24
 801677a:	eef0 8a67 	vmov.f32	s17, s15
 801677e:	eeb0 8a47 	vmov.f32	s16, s14
 8016782:	e606      	b.n	8016392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8016784:	b161      	cbz	r1, 80167a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8016786:	5d2a      	ldrb	r2, [r5, r4]
 8016788:	9d08      	ldr	r5, [sp, #32]
 801678a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801678e:	920a      	str	r2, [sp, #40]	; 0x28
 8016790:	ea4f 6912 	mov.w	r9, r2, lsr #24
 8016794:	25ff      	movs	r5, #255	; 0xff
 8016796:	46ae      	mov	lr, r5
 8016798:	e68e      	b.n	80164b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 801679a:	25ff      	movs	r5, #255	; 0xff
 801679c:	46a9      	mov	r9, r5
 801679e:	e68b      	b.n	80164b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 80167a0:	25ff      	movs	r5, #255	; 0xff
 80167a2:	46a9      	mov	r9, r5
 80167a4:	e7f7      	b.n	8016796 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80167a6:	1c56      	adds	r6, r2, #1
 80167a8:	d18d      	bne.n	80166c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80167aa:	4294      	cmp	r4, r2
 80167ac:	dd8b      	ble.n	80166c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80167ae:	1c5d      	adds	r5, r3, #1
 80167b0:	db89      	blt.n	80166c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80167b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80167b4:	429d      	cmp	r5, r3
 80167b6:	dd86      	ble.n	80166c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80167b8:	e9cd 3003 	strd	r3, r0, [sp, #12]
 80167bc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80167be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80167c0:	9202      	str	r2, [sp, #8]
 80167c2:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80167c6:	e9cd 4300 	strd	r4, r3, [sp]
 80167ca:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 80167ce:	9b08      	ldr	r3, [sp, #32]
 80167d0:	9819      	ldr	r0, [sp, #100]	; 0x64
 80167d2:	f7ff fc49 	bl	8016068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80167d6:	e776      	b.n	80166c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80167d8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80167da:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80167dc:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80167e0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80167e2:	1412      	asrs	r2, r2, #16
 80167e4:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80167e8:	141b      	asrs	r3, r3, #16
 80167ea:	fb04 2303 	mla	r3, r4, r3, r2
 80167ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167f0:	18d5      	adds	r5, r2, r3
 80167f2:	5cd3      	ldrb	r3, [r2, r3]
 80167f4:	9a08      	ldr	r2, [sp, #32]
 80167f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80167fa:	0e1e      	lsrs	r6, r3, #24
 80167fc:	2900      	cmp	r1, #0
 80167fe:	f000 8121 	beq.w	8016a44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8016802:	786a      	ldrb	r2, [r5, #1]
 8016804:	9f08      	ldr	r7, [sp, #32]
 8016806:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801680a:	920f      	str	r2, [sp, #60]	; 0x3c
 801680c:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8016810:	2800      	cmp	r0, #0
 8016812:	f000 8122 	beq.w	8016a5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 8016816:	192a      	adds	r2, r5, r4
 8016818:	5d2d      	ldrb	r5, [r5, r4]
 801681a:	7852      	ldrb	r2, [r2, #1]
 801681c:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8016820:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8016824:	950b      	str	r5, [sp, #44]	; 0x2c
 8016826:	ea4f 6815 	mov.w	r8, r5, lsr #24
 801682a:	9210      	str	r2, [sp, #64]	; 0x40
 801682c:	0e15      	lsrs	r5, r2, #24
 801682e:	b289      	uxth	r1, r1
 8016830:	b280      	uxth	r0, r0
 8016832:	fb01 f900 	mul.w	r9, r1, r0
 8016836:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801683a:	0109      	lsls	r1, r1, #4
 801683c:	eba1 0e09 	sub.w	lr, r1, r9
 8016840:	b280      	uxth	r0, r0
 8016842:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8016846:	fa1f fe8e 	uxth.w	lr, lr
 801684a:	1a12      	subs	r2, r2, r0
 801684c:	b292      	uxth	r2, r2
 801684e:	fb0e f10c 	mul.w	r1, lr, ip
 8016852:	fb02 1106 	mla	r1, r2, r6, r1
 8016856:	fb00 1108 	mla	r1, r0, r8, r1
 801685a:	fb09 1105 	mla	r1, r9, r5, r1
 801685e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016862:	2900      	cmp	r1, #0
 8016864:	f000 80e0 	beq.w	8016a28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 8016868:	2eff      	cmp	r6, #255	; 0xff
 801686a:	d016      	beq.n	801689a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 801686c:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016870:	4377      	muls	r7, r6
 8016872:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016876:	435e      	muls	r6, r3
 8016878:	0a3b      	lsrs	r3, r7, #8
 801687a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801687e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016882:	443b      	add	r3, r7
 8016884:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8016888:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801688c:	0a1b      	lsrs	r3, r3, #8
 801688e:	0a3f      	lsrs	r7, r7, #8
 8016890:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016894:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016898:	433b      	orrs	r3, r7
 801689a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801689e:	d01d      	beq.n	80168dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 80168a0:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80168a2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80168a4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80168a8:	fb0c f606 	mul.w	r6, ip, r6
 80168ac:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80168b0:	fb0c fc07 	mul.w	ip, ip, r7
 80168b4:	0a37      	lsrs	r7, r6, #8
 80168b6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80168ba:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 80168be:	4437      	add	r7, r6
 80168c0:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 80168c4:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80168c8:	0a3f      	lsrs	r7, r7, #8
 80168ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80168ce:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80168d2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80168d6:	ea47 060c 	orr.w	r6, r7, ip
 80168da:	960f      	str	r6, [sp, #60]	; 0x3c
 80168dc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80168e0:	d01d      	beq.n	801691e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 80168e2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80168e4:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80168e8:	fb08 fc0c 	mul.w	ip, r8, ip
 80168ec:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80168f0:	fb08 f806 	mul.w	r8, r8, r6
 80168f4:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80168f8:	f508 7680 	add.w	r6, r8, #256	; 0x100
 80168fc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016900:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016904:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8016908:	4467      	add	r7, ip
 801690a:	0a3f      	lsrs	r7, r7, #8
 801690c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016910:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016914:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016918:	ea47 0608 	orr.w	r6, r7, r8
 801691c:	960b      	str	r6, [sp, #44]	; 0x2c
 801691e:	2dff      	cmp	r5, #255	; 0xff
 8016920:	d01a      	beq.n	8016958 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 8016922:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8016924:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016928:	fb05 fc0c 	mul.w	ip, r5, ip
 801692c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016930:	4375      	muls	r5, r6
 8016932:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8016936:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801693a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801693e:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8016942:	4467      	add	r7, ip
 8016944:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8016948:	0a3f      	lsrs	r7, r7, #8
 801694a:	0a2d      	lsrs	r5, r5, #8
 801694c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016950:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8016954:	433d      	orrs	r5, r7
 8016956:	9510      	str	r5, [sp, #64]	; 0x40
 8016958:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801695a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801695e:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8016962:	fb0e f505 	mul.w	r5, lr, r5
 8016966:	fb02 5506 	mla	r5, r2, r6, r5
 801696a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 801696c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016970:	fb00 5506 	mla	r5, r0, r6, r5
 8016974:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8016976:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801697a:	fb09 5506 	mla	r5, r9, r6, r5
 801697e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016980:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016984:	fb0e fe06 	mul.w	lr, lr, r6
 8016988:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801698c:	fb02 e303 	mla	r3, r2, r3, lr
 8016990:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016992:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016996:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016998:	fb00 3307 	mla	r3, r0, r7, r3
 801699c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80169a0:	fb09 3c0c 	mla	ip, r9, ip, r3
 80169a4:	fb01 f10b 	mul.w	r1, r1, fp
 80169a8:	0a2d      	lsrs	r5, r5, #8
 80169aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80169ae:	f8ba 0000 	ldrh.w	r0, [sl]
 80169b2:	1c4b      	adds	r3, r1, #1
 80169b4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80169b8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80169bc:	ea45 050c 	orr.w	r5, r5, ip
 80169c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80169c4:	1202      	asrs	r2, r0, #8
 80169c6:	0c2b      	lsrs	r3, r5, #16
 80169c8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80169cc:	b2c9      	uxtb	r1, r1
 80169ce:	fb13 f30b 	smulbb	r3, r3, fp
 80169d2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80169d6:	fb02 3201 	mla	r2, r2, r1, r3
 80169da:	f3c5 2607 	ubfx	r6, r5, #8, #8
 80169de:	10c3      	asrs	r3, r0, #3
 80169e0:	b2ed      	uxtb	r5, r5
 80169e2:	00c0      	lsls	r0, r0, #3
 80169e4:	b2c0      	uxtb	r0, r0
 80169e6:	fb15 f50b 	smulbb	r5, r5, fp
 80169ea:	fb00 5001 	mla	r0, r0, r1, r5
 80169ee:	b292      	uxth	r2, r2
 80169f0:	fb16 f60b 	smulbb	r6, r6, fp
 80169f4:	b280      	uxth	r0, r0
 80169f6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80169fa:	fb03 6301 	mla	r3, r3, r1, r6
 80169fe:	1c51      	adds	r1, r2, #1
 8016a00:	1c46      	adds	r6, r0, #1
 8016a02:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016a06:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8016a0a:	b29b      	uxth	r3, r3
 8016a0c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016a10:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016a14:	4332      	orrs	r2, r6
 8016a16:	1c5e      	adds	r6, r3, #1
 8016a18:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8016a1c:	095b      	lsrs	r3, r3, #5
 8016a1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016a22:	431a      	orrs	r2, r3
 8016a24:	f8aa 2000 	strh.w	r2, [sl]
 8016a28:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016a2a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8016a2c:	4413      	add	r3, r2
 8016a2e:	932d      	str	r3, [sp, #180]	; 0xb4
 8016a30:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8016a32:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016a34:	4413      	add	r3, r2
 8016a36:	932e      	str	r3, [sp, #184]	; 0xb8
 8016a38:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016a3a:	3b01      	subs	r3, #1
 8016a3c:	f10a 0a02 	add.w	sl, sl, #2
 8016a40:	9312      	str	r3, [sp, #72]	; 0x48
 8016a42:	e4db      	b.n	80163fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8016a44:	b160      	cbz	r0, 8016a60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8016a46:	5d2a      	ldrb	r2, [r5, r4]
 8016a48:	9d08      	ldr	r5, [sp, #32]
 8016a4a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016a4e:	920b      	str	r2, [sp, #44]	; 0x2c
 8016a50:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016a54:	25ff      	movs	r5, #255	; 0xff
 8016a56:	46ac      	mov	ip, r5
 8016a58:	e6e9      	b.n	801682e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8016a5a:	25ff      	movs	r5, #255	; 0xff
 8016a5c:	46a8      	mov	r8, r5
 8016a5e:	e6e6      	b.n	801682e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8016a60:	25ff      	movs	r5, #255	; 0xff
 8016a62:	46a8      	mov	r8, r5
 8016a64:	e7f7      	b.n	8016a56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 8016a66:	b01b      	add	sp, #108	; 0x6c
 8016a68:	ecbd 8b08 	vpop	{d8-d11}
 8016a6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016a70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a74:	8808      	ldrh	r0, [r1, #0]
 8016a76:	b085      	sub	sp, #20
 8016a78:	1206      	asrs	r6, r0, #8
 8016a7a:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016a7e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016a82:	9600      	str	r6, [sp, #0]
 8016a84:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016a88:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8016a8c:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016a90:	10c6      	asrs	r6, r0, #3
 8016a92:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a96:	9601      	str	r6, [sp, #4]
 8016a98:	00c0      	lsls	r0, r0, #3
 8016a9a:	fb04 560c 	mla	r6, r4, ip, r5
 8016a9e:	b2c0      	uxtb	r0, r0
 8016aa0:	4692      	mov	sl, r2
 8016aa2:	eb02 0e06 	add.w	lr, r2, r6
 8016aa6:	9a00      	ldr	r2, [sp, #0]
 8016aa8:	9002      	str	r0, [sp, #8]
 8016aaa:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8016aae:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8016ab2:	9a01      	ldr	r2, [sp, #4]
 8016ab4:	2c00      	cmp	r4, #0
 8016ab6:	4698      	mov	r8, r3
 8016ab8:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8016abc:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8016ac0:	db3e      	blt.n	8016b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8016ac2:	45a1      	cmp	r9, r4
 8016ac4:	dd3c      	ble.n	8016b40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8016ac6:	2d00      	cmp	r5, #0
 8016ac8:	db38      	blt.n	8016b3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8016aca:	45ac      	cmp	ip, r5
 8016acc:	dd36      	ble.n	8016b3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8016ace:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8016ad2:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8016ad6:	1c6e      	adds	r6, r5, #1
 8016ad8:	d435      	bmi.n	8016b46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016ada:	45b4      	cmp	ip, r6
 8016adc:	dd33      	ble.n	8016b46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016ade:	b393      	cbz	r3, 8016b46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016ae0:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8016ae4:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8016ae8:	3401      	adds	r4, #1
 8016aea:	d430      	bmi.n	8016b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8016aec:	45a1      	cmp	r9, r4
 8016aee:	dd2e      	ble.n	8016b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8016af0:	b36f      	cbz	r7, 8016b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8016af2:	2d00      	cmp	r5, #0
 8016af4:	db29      	blt.n	8016b4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8016af6:	45ac      	cmp	ip, r5
 8016af8:	dd27      	ble.n	8016b4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8016afa:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8016afe:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8016b02:	3501      	adds	r5, #1
 8016b04:	d407      	bmi.n	8016b16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016b06:	45ac      	cmp	ip, r5
 8016b08:	dd05      	ble.n	8016b16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016b0a:	b123      	cbz	r3, 8016b16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016b0c:	44f4      	add	ip, lr
 8016b0e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8016b12:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8016b16:	2b0f      	cmp	r3, #15
 8016b18:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016b1c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016b20:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016b24:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8016b28:	d801      	bhi.n	8016b2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8016b2a:	2f0f      	cmp	r7, #15
 8016b2c:	d911      	bls.n	8016b52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016b2e:	4b79      	ldr	r3, [pc, #484]	; (8016d14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8016b30:	4a79      	ldr	r2, [pc, #484]	; (8016d18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016b32:	487a      	ldr	r0, [pc, #488]	; (8016d1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016b34:	f240 3173 	movw	r1, #883	; 0x373
 8016b38:	f004 ff28 	bl	801b98c <__assert_func>
 8016b3c:	4602      	mov	r2, r0
 8016b3e:	e7ca      	b.n	8016ad6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8016b40:	4606      	mov	r6, r0
 8016b42:	4602      	mov	r2, r0
 8016b44:	e7d0      	b.n	8016ae8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8016b46:	4606      	mov	r6, r0
 8016b48:	e7ce      	b.n	8016ae8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8016b4a:	4604      	mov	r4, r0
 8016b4c:	e7d9      	b.n	8016b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8016b4e:	4604      	mov	r4, r0
 8016b50:	e7e1      	b.n	8016b16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016b52:	b29b      	uxth	r3, r3
 8016b54:	b2bf      	uxth	r7, r7
 8016b56:	fb03 fe07 	mul.w	lr, r3, r7
 8016b5a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016b5e:	011b      	lsls	r3, r3, #4
 8016b60:	eba3 0c0e 	sub.w	ip, r3, lr
 8016b64:	b2bf      	uxth	r7, r7
 8016b66:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8016b6a:	fa1f fc8c 	uxth.w	ip, ip
 8016b6e:	1bed      	subs	r5, r5, r7
 8016b70:	b2ad      	uxth	r5, r5
 8016b72:	fb0c f30a 	mul.w	r3, ip, sl
 8016b76:	fb05 330b 	mla	r3, r5, fp, r3
 8016b7a:	fb07 3309 	mla	r3, r7, r9, r3
 8016b7e:	fb0e 3308 	mla	r3, lr, r8, r3
 8016b82:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016b86:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016b8a:	9303      	str	r3, [sp, #12]
 8016b8c:	d018      	beq.n	8016bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8016b8e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016b92:	fb0b f303 	mul.w	r3, fp, r3
 8016b96:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016b9a:	fb0b fb02 	mul.w	fp, fp, r2
 8016b9e:	0a1a      	lsrs	r2, r3, #8
 8016ba0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016ba4:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8016ba8:	441a      	add	r2, r3
 8016baa:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8016bae:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8016bb2:	0a12      	lsrs	r2, r2, #8
 8016bb4:	0a1b      	lsrs	r3, r3, #8
 8016bb6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016bba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016bbe:	431a      	orrs	r2, r3
 8016bc0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016bc4:	d019      	beq.n	8016bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 8016bc6:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016bca:	fb0a fb0b 	mul.w	fp, sl, fp
 8016bce:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016bd2:	fb0a fa06 	mul.w	sl, sl, r6
 8016bd6:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016bda:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016bde:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016be2:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8016be6:	445e      	add	r6, fp
 8016be8:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016bec:	0a36      	lsrs	r6, r6, #8
 8016bee:	0a1b      	lsrs	r3, r3, #8
 8016bf0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016bf4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016bf8:	431e      	orrs	r6, r3
 8016bfa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016bfe:	d019      	beq.n	8016c34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8016c00:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016c04:	fb09 fa0a 	mul.w	sl, r9, sl
 8016c08:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016c0c:	fb09 f904 	mul.w	r9, r9, r4
 8016c10:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016c14:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016c18:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016c1c:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8016c20:	4454      	add	r4, sl
 8016c22:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8016c26:	0a24      	lsrs	r4, r4, #8
 8016c28:	0a1b      	lsrs	r3, r3, #8
 8016c2a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016c2e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c32:	431c      	orrs	r4, r3
 8016c34:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016c38:	d019      	beq.n	8016c6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 8016c3a:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8016c3e:	fb08 f909 	mul.w	r9, r8, r9
 8016c42:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016c46:	fb08 f800 	mul.w	r8, r8, r0
 8016c4a:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8016c4e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016c52:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016c56:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8016c5a:	4448      	add	r0, r9
 8016c5c:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016c60:	0a00      	lsrs	r0, r0, #8
 8016c62:	0a1b      	lsrs	r3, r3, #8
 8016c64:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016c68:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016c6c:	4318      	orrs	r0, r3
 8016c6e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016c72:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8016c76:	fb0c f808 	mul.w	r8, ip, r8
 8016c7a:	fb05 8803 	mla	r8, r5, r3, r8
 8016c7e:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8016c82:	fb07 8803 	mla	r8, r7, r3, r8
 8016c86:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8016c8a:	fb0e 8303 	mla	r3, lr, r3, r8
 8016c8e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016c92:	0a1b      	lsrs	r3, r3, #8
 8016c94:	fb0c f606 	mul.w	r6, ip, r6
 8016c98:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016c9c:	fb05 6202 	mla	r2, r5, r2, r6
 8016ca0:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8016ca4:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8016ca8:	fb07 2703 	mla	r7, r7, r3, r2
 8016cac:	9a03      	ldr	r2, [sp, #12]
 8016cae:	9c02      	ldr	r4, [sp, #8]
 8016cb0:	9d01      	ldr	r5, [sp, #4]
 8016cb2:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8016cb6:	fb0e 7303 	mla	r3, lr, r3, r7
 8016cba:	43d0      	mvns	r0, r2
 8016cbc:	9a00      	ldr	r2, [sp, #0]
 8016cbe:	b2c0      	uxtb	r0, r0
 8016cc0:	0a1b      	lsrs	r3, r3, #8
 8016cc2:	4342      	muls	r2, r0
 8016cc4:	4344      	muls	r4, r0
 8016cc6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016cca:	ea48 0303 	orr.w	r3, r8, r3
 8016cce:	4345      	muls	r5, r0
 8016cd0:	4620      	mov	r0, r4
 8016cd2:	1c54      	adds	r4, r2, #1
 8016cd4:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8016cd8:	0c1a      	lsrs	r2, r3, #16
 8016cda:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016cde:	4a10      	ldr	r2, [pc, #64]	; (8016d20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016ce0:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8016ce4:	1c44      	adds	r4, r0, #1
 8016ce6:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8016cea:	b2d8      	uxtb	r0, r3
 8016cec:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8016cf0:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8016cf4:	1c68      	adds	r0, r5, #1
 8016cf6:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 8016cfa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016cfe:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016d02:	00db      	lsls	r3, r3, #3
 8016d04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016d08:	4313      	orrs	r3, r2
 8016d0a:	800b      	strh	r3, [r1, #0]
 8016d0c:	b005      	add	sp, #20
 8016d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d12:	bf00      	nop
 8016d14:	0802112b 	.word	0x0802112b
 8016d18:	08021689 	.word	0x08021689
 8016d1c:	080211b3 	.word	0x080211b3
 8016d20:	fffff800 	.word	0xfffff800

08016d24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d28:	ed2d 8b08 	vpush	{d8-d11}
 8016d2c:	b097      	sub	sp, #92	; 0x5c
 8016d2e:	eeb0 aa40 	vmov.f32	s20, s0
 8016d32:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8016d34:	9307      	str	r3, [sp, #28]
 8016d36:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8016d3a:	9112      	str	r1, [sp, #72]	; 0x48
 8016d3c:	930f      	str	r3, [sp, #60]	; 0x3c
 8016d3e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8016d42:	9015      	str	r0, [sp, #84]	; 0x54
 8016d44:	6868      	ldr	r0, [r5, #4]
 8016d46:	9214      	str	r2, [sp, #80]	; 0x50
 8016d48:	fb00 1303 	mla	r3, r0, r3, r1
 8016d4c:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8016d4e:	6829      	ldr	r1, [r5, #0]
 8016d50:	6855      	ldr	r5, [r2, #4]
 8016d52:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8016d56:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016d5a:	930a      	str	r3, [sp, #40]	; 0x28
 8016d5c:	6813      	ldr	r3, [r2, #0]
 8016d5e:	9311      	str	r3, [sp, #68]	; 0x44
 8016d60:	eef0 9a60 	vmov.f32	s19, s1
 8016d64:	eeb0 9a41 	vmov.f32	s18, s2
 8016d68:	eeb0 8a62 	vmov.f32	s16, s5
 8016d6c:	eef0 8a43 	vmov.f32	s17, s6
 8016d70:	eef0 ba44 	vmov.f32	s23, s8
 8016d74:	eeb0 ba64 	vmov.f32	s22, s9
 8016d78:	eef0 aa45 	vmov.f32	s21, s10
 8016d7c:	3504      	adds	r5, #4
 8016d7e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016d80:	2b00      	cmp	r3, #0
 8016d82:	dc03      	bgt.n	8016d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8016d84:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016d86:	2b00      	cmp	r3, #0
 8016d88:	f340 834d 	ble.w	8017426 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8016d8c:	9b07      	ldr	r3, [sp, #28]
 8016d8e:	2b00      	cmp	r3, #0
 8016d90:	f340 819c 	ble.w	80170cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8016d94:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016d96:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016d98:	1412      	asrs	r2, r2, #16
 8016d9a:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016d9e:	d42d      	bmi.n	8016dfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8016da0:	1c51      	adds	r1, r2, #1
 8016da2:	428c      	cmp	r4, r1
 8016da4:	dd2d      	ble.n	8016e02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8016da6:	2b00      	cmp	r3, #0
 8016da8:	db2b      	blt.n	8016e02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8016daa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016dac:	1c59      	adds	r1, r3, #1
 8016dae:	4288      	cmp	r0, r1
 8016db0:	dd27      	ble.n	8016e02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8016db2:	9b07      	ldr	r3, [sp, #28]
 8016db4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016db6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016db8:	3b01      	subs	r3, #1
 8016dba:	fb02 1203 	mla	r2, r2, r3, r1
 8016dbe:	1412      	asrs	r2, r2, #16
 8016dc0:	d429      	bmi.n	8016e16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016dc2:	3201      	adds	r2, #1
 8016dc4:	4294      	cmp	r4, r2
 8016dc6:	dd26      	ble.n	8016e16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016dc8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016dca:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8016dcc:	fb02 1303 	mla	r3, r2, r3, r1
 8016dd0:	141b      	asrs	r3, r3, #16
 8016dd2:	d420      	bmi.n	8016e16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016dd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016dd6:	3301      	adds	r3, #1
 8016dd8:	429a      	cmp	r2, r3
 8016dda:	dd1c      	ble.n	8016e16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8016ddc:	9b07      	ldr	r3, [sp, #28]
 8016dde:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8016de2:	9310      	str	r3, [sp, #64]	; 0x40
 8016de4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016de6:	2b00      	cmp	r3, #0
 8016de8:	f300 81da 	bgt.w	80171a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8016dec:	9b07      	ldr	r3, [sp, #28]
 8016dee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016df0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016df4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016df8:	930a      	str	r3, [sp, #40]	; 0x28
 8016dfa:	e169      	b.n	80170d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8016dfc:	1c51      	adds	r1, r2, #1
 8016dfe:	f040 8156 	bne.w	80170ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016e02:	42a2      	cmp	r2, r4
 8016e04:	f280 8153 	bge.w	80170ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016e08:	1c5a      	adds	r2, r3, #1
 8016e0a:	f2c0 8150 	blt.w	80170ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016e0e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016e10:	4293      	cmp	r3, r2
 8016e12:	f280 814c 	bge.w	80170ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016e16:	9b07      	ldr	r3, [sp, #28]
 8016e18:	9313      	str	r3, [sp, #76]	; 0x4c
 8016e1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016e1c:	9310      	str	r3, [sp, #64]	; 0x40
 8016e1e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016e20:	2b00      	cmp	r3, #0
 8016e22:	dde3      	ble.n	8016dec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8016e24:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016e26:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016e28:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016e2c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016e2e:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8016e32:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016e34:	1412      	asrs	r2, r2, #16
 8016e36:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016e3a:	f100 8198 	bmi.w	801716e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8016e3e:	1c56      	adds	r6, r2, #1
 8016e40:	42b4      	cmp	r4, r6
 8016e42:	f340 8196 	ble.w	8017172 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016e46:	2b00      	cmp	r3, #0
 8016e48:	f2c0 8193 	blt.w	8017172 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016e4c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016e4e:	1c5e      	adds	r6, r3, #1
 8016e50:	42b7      	cmp	r7, r6
 8016e52:	f340 818e 	ble.w	8017172 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016e56:	fb03 2304 	mla	r3, r3, r4, r2
 8016e5a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016e5c:	18d6      	adds	r6, r2, r3
 8016e5e:	5cd3      	ldrb	r3, [r2, r3]
 8016e60:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8016e64:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016e68:	2900      	cmp	r1, #0
 8016e6a:	f000 8170 	beq.w	801714e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8016e6e:	7872      	ldrb	r2, [r6, #1]
 8016e70:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016e74:	920b      	str	r2, [sp, #44]	; 0x2c
 8016e76:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016e7a:	2800      	cmp	r0, #0
 8016e7c:	f000 8171 	beq.w	8017162 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8016e80:	1932      	adds	r2, r6, r4
 8016e82:	5d36      	ldrb	r6, [r6, r4]
 8016e84:	7852      	ldrb	r2, [r2, #1]
 8016e86:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8016e8a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016e8e:	9608      	str	r6, [sp, #32]
 8016e90:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016e94:	920c      	str	r2, [sp, #48]	; 0x30
 8016e96:	0e16      	lsrs	r6, r2, #24
 8016e98:	b289      	uxth	r1, r1
 8016e9a:	b280      	uxth	r0, r0
 8016e9c:	fb01 fb00 	mul.w	fp, r1, r0
 8016ea0:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8016ea4:	0109      	lsls	r1, r1, #4
 8016ea6:	eba1 090b 	sub.w	r9, r1, fp
 8016eaa:	b280      	uxth	r0, r0
 8016eac:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8016eb0:	fa1f f989 	uxth.w	r9, r9
 8016eb4:	1a12      	subs	r2, r2, r0
 8016eb6:	b292      	uxth	r2, r2
 8016eb8:	fb09 f108 	mul.w	r1, r9, r8
 8016ebc:	fb02 110c 	mla	r1, r2, ip, r1
 8016ec0:	fb00 110a 	mla	r1, r0, sl, r1
 8016ec4:	fb0b 1106 	mla	r1, fp, r6, r1
 8016ec8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016ecc:	2900      	cmp	r1, #0
 8016ece:	f000 80df 	beq.w	8017090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016ed2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016ed6:	d01b      	beq.n	8016f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 8016ed8:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016edc:	fb0c fe0e 	mul.w	lr, ip, lr
 8016ee0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016ee4:	fb0c fc03 	mul.w	ip, ip, r3
 8016ee8:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8016eec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016ef0:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016ef4:	4473      	add	r3, lr
 8016ef6:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8016efa:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8016efe:	0a1b      	lsrs	r3, r3, #8
 8016f00:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016f08:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016f0c:	ea43 030e 	orr.w	r3, r3, lr
 8016f10:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016f14:	d01e      	beq.n	8016f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8016f16:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8016f18:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016f1c:	fb08 fc0c 	mul.w	ip, r8, ip
 8016f20:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8016f24:	fb08 f80e 	mul.w	r8, r8, lr
 8016f28:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8016f2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f30:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016f34:	44e6      	add	lr, ip
 8016f36:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8016f3a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016f3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f42:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016f46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f4a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016f4e:	ea4e 0708 	orr.w	r7, lr, r8
 8016f52:	970b      	str	r7, [sp, #44]	; 0x2c
 8016f54:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016f58:	d01e      	beq.n	8016f98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8016f5a:	9f08      	ldr	r7, [sp, #32]
 8016f5c:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8016f60:	fb0a f808 	mul.w	r8, sl, r8
 8016f64:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8016f68:	fb0a fa0c 	mul.w	sl, sl, ip
 8016f6c:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016f70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f74:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016f78:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016f7c:	44c6      	add	lr, r8
 8016f7e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016f82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016f86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016f8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016f8e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016f92:	ea4e 070a 	orr.w	r7, lr, sl
 8016f96:	9708      	str	r7, [sp, #32]
 8016f98:	2eff      	cmp	r6, #255	; 0xff
 8016f9a:	d01d      	beq.n	8016fd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8016f9c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016f9e:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8016fa2:	fb06 f808 	mul.w	r8, r6, r8
 8016fa6:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8016faa:	fb06 f60c 	mul.w	r6, r6, ip
 8016fae:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016fb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016fb6:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016fba:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8016fbe:	44c6      	add	lr, r8
 8016fc0:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8016fc4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016fc8:	0a36      	lsrs	r6, r6, #8
 8016fca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016fce:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016fd2:	ea4e 0606 	orr.w	r6, lr, r6
 8016fd6:	960c      	str	r6, [sp, #48]	; 0x30
 8016fd8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016fda:	9f08      	ldr	r7, [sp, #32]
 8016fdc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016fe0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016fe4:	fb09 f606 	mul.w	r6, r9, r6
 8016fe8:	fb02 660c 	mla	r6, r2, ip, r6
 8016fec:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016ff0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016ff2:	fb00 660c 	mla	r6, r0, ip, r6
 8016ff6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016ffa:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8016ffc:	fb0b 660c 	mla	r6, fp, ip, r6
 8017000:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8017004:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017008:	fb09 f90c 	mul.w	r9, r9, ip
 801700c:	fb02 9303 	mla	r3, r2, r3, r9
 8017010:	9a08      	ldr	r2, [sp, #32]
 8017012:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8017016:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017018:	fb00 330e 	mla	r3, r0, lr, r3
 801701c:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8017020:	fb0b 3b00 	mla	fp, fp, r0, r3
 8017024:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017026:	881b      	ldrh	r3, [r3, #0]
 8017028:	43c9      	mvns	r1, r1
 801702a:	1218      	asrs	r0, r3, #8
 801702c:	b2c9      	uxtb	r1, r1
 801702e:	10da      	asrs	r2, r3, #3
 8017030:	0a36      	lsrs	r6, r6, #8
 8017032:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8017036:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801703a:	00db      	lsls	r3, r3, #3
 801703c:	4348      	muls	r0, r1
 801703e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017042:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8017046:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801704a:	b2db      	uxtb	r3, r3
 801704c:	434b      	muls	r3, r1
 801704e:	ea46 060b 	orr.w	r6, r6, fp
 8017052:	434a      	muls	r2, r1
 8017054:	1c41      	adds	r1, r0, #1
 8017056:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801705a:	0c30      	lsrs	r0, r6, #16
 801705c:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8017060:	494e      	ldr	r1, [pc, #312]	; (801719c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 8017062:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8017066:	1c59      	adds	r1, r3, #1
 8017068:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801706c:	b2f3      	uxtb	r3, r6
 801706e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017072:	1c51      	adds	r1, r2, #1
 8017074:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017078:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801707c:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8017080:	00f6      	lsls	r6, r6, #3
 8017082:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8017086:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801708a:	431e      	orrs	r6, r3
 801708c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801708e:	801e      	strh	r6, [r3, #0]
 8017090:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017092:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017094:	3302      	adds	r3, #2
 8017096:	9310      	str	r3, [sp, #64]	; 0x40
 8017098:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801709a:	4413      	add	r3, r2
 801709c:	9329      	str	r3, [sp, #164]	; 0xa4
 801709e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80170a0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80170a2:	4413      	add	r3, r2
 80170a4:	932a      	str	r3, [sp, #168]	; 0xa8
 80170a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80170a8:	3b01      	subs	r3, #1
 80170aa:	9313      	str	r3, [sp, #76]	; 0x4c
 80170ac:	e6b7      	b.n	8016e1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80170ae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80170b0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80170b2:	4413      	add	r3, r2
 80170b4:	9329      	str	r3, [sp, #164]	; 0xa4
 80170b6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80170b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80170ba:	4413      	add	r3, r2
 80170bc:	932a      	str	r3, [sp, #168]	; 0xa8
 80170be:	9b07      	ldr	r3, [sp, #28]
 80170c0:	3b01      	subs	r3, #1
 80170c2:	9307      	str	r3, [sp, #28]
 80170c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80170c6:	3302      	adds	r3, #2
 80170c8:	930a      	str	r3, [sp, #40]	; 0x28
 80170ca:	e65f      	b.n	8016d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80170cc:	f47f ae71 	bne.w	8016db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80170d0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80170d2:	2b00      	cmp	r3, #0
 80170d4:	f340 81a7 	ble.w	8017426 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 80170d8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80170dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80170e0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80170e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80170e6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80170ea:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80170ee:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80170f2:	eef0 6a48 	vmov.f32	s13, s16
 80170f6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80170fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80170fe:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017102:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017106:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801710a:	eef0 6a68 	vmov.f32	s13, s17
 801710e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017112:	ee18 2a10 	vmov	r2, s16
 8017116:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801711a:	fb92 f3f3 	sdiv	r3, r2, r3
 801711e:	ee18 2a90 	vmov	r2, s17
 8017122:	932b      	str	r3, [sp, #172]	; 0xac
 8017124:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017126:	fb92 f3f3 	sdiv	r3, r2, r3
 801712a:	932c      	str	r3, [sp, #176]	; 0xb0
 801712c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801712e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017130:	3b01      	subs	r3, #1
 8017132:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017136:	9312      	str	r3, [sp, #72]	; 0x48
 8017138:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801713a:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801713e:	bf08      	it	eq
 8017140:	4613      	moveq	r3, r2
 8017142:	9307      	str	r3, [sp, #28]
 8017144:	eef0 8a67 	vmov.f32	s17, s15
 8017148:	eeb0 8a47 	vmov.f32	s16, s14
 801714c:	e617      	b.n	8016d7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 801714e:	b158      	cbz	r0, 8017168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8017150:	5d32      	ldrb	r2, [r6, r4]
 8017152:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8017156:	9208      	str	r2, [sp, #32]
 8017158:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 801715c:	26ff      	movs	r6, #255	; 0xff
 801715e:	46b0      	mov	r8, r6
 8017160:	e69a      	b.n	8016e98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8017162:	26ff      	movs	r6, #255	; 0xff
 8017164:	46b2      	mov	sl, r6
 8017166:	e697      	b.n	8016e98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8017168:	26ff      	movs	r6, #255	; 0xff
 801716a:	46b2      	mov	sl, r6
 801716c:	e7f7      	b.n	801715e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 801716e:	1c57      	adds	r7, r2, #1
 8017170:	d18e      	bne.n	8017090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017172:	4294      	cmp	r4, r2
 8017174:	dd8c      	ble.n	8017090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017176:	1c5e      	adds	r6, r3, #1
 8017178:	db8a      	blt.n	8017090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801717a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801717c:	429e      	cmp	r6, r3
 801717e:	dd87      	ble.n	8017090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8017180:	e9cd 1004 	strd	r1, r0, [sp, #16]
 8017184:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8017188:	e9cd 4600 	strd	r4, r6, [sp]
 801718c:	462b      	mov	r3, r5
 801718e:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 8017192:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017194:	f7ff fc6c 	bl	8016a70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8017198:	e77a      	b.n	8017090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801719a:	bf00      	nop
 801719c:	fffff800 	.word	0xfffff800
 80171a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80171a2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80171a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80171a8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80171aa:	1409      	asrs	r1, r1, #16
 80171ac:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80171b0:	141b      	asrs	r3, r3, #16
 80171b2:	fb04 1303 	mla	r3, r4, r3, r1
 80171b6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80171b8:	18ce      	adds	r6, r1, r3
 80171ba:	5ccb      	ldrb	r3, [r1, r3]
 80171bc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80171c0:	0e1f      	lsrs	r7, r3, #24
 80171c2:	2a00      	cmp	r2, #0
 80171c4:	f000 811f 	beq.w	8017406 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 80171c8:	7871      	ldrb	r1, [r6, #1]
 80171ca:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80171ce:	910d      	str	r1, [sp, #52]	; 0x34
 80171d0:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 80171d4:	2800      	cmp	r0, #0
 80171d6:	f000 8120 	beq.w	801741a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 80171da:	1931      	adds	r1, r6, r4
 80171dc:	5d36      	ldrb	r6, [r6, r4]
 80171de:	7849      	ldrb	r1, [r1, #1]
 80171e0:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 80171e4:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80171e8:	9609      	str	r6, [sp, #36]	; 0x24
 80171ea:	ea4f 6916 	mov.w	r9, r6, lsr #24
 80171ee:	910e      	str	r1, [sp, #56]	; 0x38
 80171f0:	0e0e      	lsrs	r6, r1, #24
 80171f2:	b292      	uxth	r2, r2
 80171f4:	b280      	uxth	r0, r0
 80171f6:	fb02 fa00 	mul.w	sl, r2, r0
 80171fa:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80171fe:	0112      	lsls	r2, r2, #4
 8017200:	eba2 080a 	sub.w	r8, r2, sl
 8017204:	b280      	uxth	r0, r0
 8017206:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801720a:	fa1f f888 	uxth.w	r8, r8
 801720e:	1a09      	subs	r1, r1, r0
 8017210:	b289      	uxth	r1, r1
 8017212:	fb08 f20e 	mul.w	r2, r8, lr
 8017216:	fb01 2207 	mla	r2, r1, r7, r2
 801721a:	fb00 2209 	mla	r2, r0, r9, r2
 801721e:	fb0a 2206 	mla	r2, sl, r6, r2
 8017222:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8017226:	9213      	str	r2, [sp, #76]	; 0x4c
 8017228:	2a00      	cmp	r2, #0
 801722a:	f000 80de 	beq.w	80173ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 801722e:	2fff      	cmp	r7, #255	; 0xff
 8017230:	d01a      	beq.n	8017268 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8017232:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017236:	fb07 fc0c 	mul.w	ip, r7, ip
 801723a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801723e:	435f      	muls	r7, r3
 8017240:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8017244:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017248:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801724c:	4463      	add	r3, ip
 801724e:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8017252:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8017256:	0a1b      	lsrs	r3, r3, #8
 8017258:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801725c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017260:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017264:	ea43 030c 	orr.w	r3, r3, ip
 8017268:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801726c:	d01f      	beq.n	80172ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 801726e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8017270:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017272:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017276:	fb0e f707 	mul.w	r7, lr, r7
 801727a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801727e:	fb0e fe0c 	mul.w	lr, lr, ip
 8017282:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017286:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801728a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801728e:	44bc      	add	ip, r7
 8017290:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8017294:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8017298:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801729c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80172a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172a4:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80172a8:	ea4c 020e 	orr.w	r2, ip, lr
 80172ac:	920d      	str	r2, [sp, #52]	; 0x34
 80172ae:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80172b2:	d01e      	beq.n	80172f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 80172b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80172b6:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80172ba:	fb09 fe0e 	mul.w	lr, r9, lr
 80172be:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80172c2:	fb09 f907 	mul.w	r9, r9, r7
 80172c6:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80172ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172ce:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80172d2:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80172d6:	44f4      	add	ip, lr
 80172d8:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80172dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80172e0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80172e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80172e8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80172ec:	ea4c 0209 	orr.w	r2, ip, r9
 80172f0:	9209      	str	r2, [sp, #36]	; 0x24
 80172f2:	2eff      	cmp	r6, #255	; 0xff
 80172f4:	d01c      	beq.n	8017330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 80172f6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80172f8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80172fc:	fb06 fe0e 	mul.w	lr, r6, lr
 8017300:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8017304:	437e      	muls	r6, r7
 8017306:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801730a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801730e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8017312:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8017316:	44f4      	add	ip, lr
 8017318:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801731c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017320:	0a36      	lsrs	r6, r6, #8
 8017322:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017326:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801732a:	ea4c 0206 	orr.w	r2, ip, r6
 801732e:	920e      	str	r2, [sp, #56]	; 0x38
 8017330:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017332:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8017336:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017338:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801733c:	fb08 f606 	mul.w	r6, r8, r6
 8017340:	fb01 6607 	mla	r6, r1, r7, r6
 8017344:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8017348:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801734a:	fb00 6607 	mla	r6, r0, r7, r6
 801734e:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8017352:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017354:	fb0a 6607 	mla	r6, sl, r7, r6
 8017358:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801735c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801735e:	fb08 f807 	mul.w	r8, r8, r7
 8017362:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8017366:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801736a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801736c:	fb01 8303 	mla	r3, r1, r3, r8
 8017370:	fb00 330c 	mla	r3, r0, ip, r3
 8017374:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8017378:	fb0a 3e0e 	mla	lr, sl, lr, r3
 801737c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801737e:	f8bb 3000 	ldrh.w	r3, [fp]
 8017382:	43d2      	mvns	r2, r2
 8017384:	1218      	asrs	r0, r3, #8
 8017386:	b2d2      	uxtb	r2, r2
 8017388:	0a36      	lsrs	r6, r6, #8
 801738a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801738e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017392:	4350      	muls	r0, r2
 8017394:	10d9      	asrs	r1, r3, #3
 8017396:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801739a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801739e:	00db      	lsls	r3, r3, #3
 80173a0:	ea46 060e 	orr.w	r6, r6, lr
 80173a4:	1c47      	adds	r7, r0, #1
 80173a6:	b2db      	uxtb	r3, r3
 80173a8:	4353      	muls	r3, r2
 80173aa:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80173ae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80173b2:	0c37      	lsrs	r7, r6, #16
 80173b4:	4351      	muls	r1, r2
 80173b6:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80173ba:	4a1d      	ldr	r2, [pc, #116]	; (8017430 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 80173bc:	1c5f      	adds	r7, r3, #1
 80173be:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 80173c2:	b2f7      	uxtb	r7, r6
 80173c4:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 80173c8:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80173cc:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80173d0:	1c4b      	adds	r3, r1, #1
 80173d2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80173d6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80173da:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 80173de:	00f6      	lsls	r6, r6, #3
 80173e0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80173e4:	4330      	orrs	r0, r6
 80173e6:	f8ab 0000 	strh.w	r0, [fp]
 80173ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80173ec:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80173ee:	4413      	add	r3, r2
 80173f0:	9329      	str	r3, [sp, #164]	; 0xa4
 80173f2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80173f4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173f6:	4413      	add	r3, r2
 80173f8:	932a      	str	r3, [sp, #168]	; 0xa8
 80173fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80173fc:	3b01      	subs	r3, #1
 80173fe:	f10b 0b02 	add.w	fp, fp, #2
 8017402:	9310      	str	r3, [sp, #64]	; 0x40
 8017404:	e4ee      	b.n	8016de4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8017406:	b158      	cbz	r0, 8017420 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8017408:	5d31      	ldrb	r1, [r6, r4]
 801740a:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 801740e:	9109      	str	r1, [sp, #36]	; 0x24
 8017410:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8017414:	26ff      	movs	r6, #255	; 0xff
 8017416:	46b6      	mov	lr, r6
 8017418:	e6eb      	b.n	80171f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 801741a:	26ff      	movs	r6, #255	; 0xff
 801741c:	46b1      	mov	r9, r6
 801741e:	e6e8      	b.n	80171f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8017420:	26ff      	movs	r6, #255	; 0xff
 8017422:	46b1      	mov	r9, r6
 8017424:	e7f7      	b.n	8017416 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 8017426:	b017      	add	sp, #92	; 0x5c
 8017428:	ecbd 8b08 	vpop	{d8-d11}
 801742c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017430:	fffff800 	.word	0xfffff800

08017434 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8017434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017438:	b087      	sub	sp, #28
 801743a:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 801743e:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8017442:	9105      	str	r1, [sp, #20]
 8017444:	fb00 e604 	mla	r6, r0, r4, lr
 8017448:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 801744c:	9102      	str	r1, [sp, #8]
 801744e:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 8017452:	9103      	str	r1, [sp, #12]
 8017454:	9905      	ldr	r1, [sp, #20]
 8017456:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 801745a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 801745e:	8809      	ldrh	r1, [r1, #0]
 8017460:	2800      	cmp	r0, #0
 8017462:	eb03 0a06 	add.w	sl, r3, r6
 8017466:	f2c0 80ca 	blt.w	80175fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 801746a:	4287      	cmp	r7, r0
 801746c:	f340 80c7 	ble.w	80175fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8017470:	f1be 0f00 	cmp.w	lr, #0
 8017474:	f2c0 80bf 	blt.w	80175f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8017478:	4574      	cmp	r4, lr
 801747a:	f340 80bc 	ble.w	80175f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 801747e:	f813 c006 	ldrb.w	ip, [r3, r6]
 8017482:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 8017486:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801748a:	d01c      	beq.n	80174c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 801748c:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8017490:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017494:	4372      	muls	r2, r6
 8017496:	f64f 081f 	movw	r8, #63519	; 0xf81f
 801749a:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 801749e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80174a2:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80174a6:	fb0c f609 	mul.w	r6, ip, r9
 80174aa:	eb03 0902 	add.w	r9, r3, r2
 80174ae:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 80174b2:	f106 0820 	add.w	r8, r6, #32
 80174b6:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 80174ba:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80174be:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80174c2:	ea49 0908 	orr.w	r9, r9, r8
 80174c6:	fa1f f989 	uxth.w	r9, r9
 80174ca:	f11e 0301 	adds.w	r3, lr, #1
 80174ce:	f100 809b 	bmi.w	8017608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80174d2:	429c      	cmp	r4, r3
 80174d4:	f340 8098 	ble.w	8017608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80174d8:	2d00      	cmp	r5, #0
 80174da:	f000 8095 	beq.w	8017608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80174de:	f89a 6001 	ldrb.w	r6, [sl, #1]
 80174e2:	9b03      	ldr	r3, [sp, #12]
 80174e4:	2eff      	cmp	r6, #255	; 0xff
 80174e6:	885b      	ldrh	r3, [r3, #2]
 80174e8:	d01b      	beq.n	8017522 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 80174ea:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80174ee:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80174f2:	fb08 f202 	mul.w	r2, r8, r2
 80174f6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80174fa:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80174fe:	fb06 f803 	mul.w	r8, r6, r3
 8017502:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8017506:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801750a:	441a      	add	r2, r3
 801750c:	f108 0320 	add.w	r3, r8, #32
 8017510:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8017514:	0a1b      	lsrs	r3, r3, #8
 8017516:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801751a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801751e:	ea4b 0303 	orr.w	r3, fp, r3
 8017522:	b29b      	uxth	r3, r3
 8017524:	9301      	str	r3, [sp, #4]
 8017526:	3001      	adds	r0, #1
 8017528:	d474      	bmi.n	8017614 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801752a:	4287      	cmp	r7, r0
 801752c:	dd72      	ble.n	8017614 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801752e:	9a02      	ldr	r2, [sp, #8]
 8017530:	2a00      	cmp	r2, #0
 8017532:	f000 8121 	beq.w	8017778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 8017536:	f1be 0f00 	cmp.w	lr, #0
 801753a:	db68      	blt.n	801760e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 801753c:	4574      	cmp	r4, lr
 801753e:	dd66      	ble.n	801760e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8017540:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8017544:	9a03      	ldr	r2, [sp, #12]
 8017546:	2fff      	cmp	r7, #255	; 0xff
 8017548:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 801754c:	d01c      	beq.n	8017588 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 801754e:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8017552:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8017556:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801755a:	fb07 fb00 	mul.w	fp, r7, r0
 801755e:	fb08 f802 	mul.w	r8, r8, r2
 8017562:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8017566:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 801756a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801756e:	4490      	add	r8, r2
 8017570:	f10b 0220 	add.w	r2, fp, #32
 8017574:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8017578:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801757c:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8017580:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017584:	ea40 000b 	orr.w	r0, r0, fp
 8017588:	b280      	uxth	r0, r0
 801758a:	f11e 0e01 	adds.w	lr, lr, #1
 801758e:	d446      	bmi.n	801761e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8017590:	4574      	cmp	r4, lr
 8017592:	dd44      	ble.n	801761e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8017594:	2d00      	cmp	r5, #0
 8017596:	d045      	beq.n	8017624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8017598:	1c62      	adds	r2, r4, #1
 801759a:	9b03      	ldr	r3, [sp, #12]
 801759c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80175a0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80175a4:	2cff      	cmp	r4, #255	; 0xff
 80175a6:	d01c      	beq.n	80175e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 80175a8:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 80175ac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80175b0:	fb08 fe0e 	mul.w	lr, r8, lr
 80175b4:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 80175b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80175bc:	fb04 f802 	mul.w	r8, r4, r2
 80175c0:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 80175c4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80175c8:	4472      	add	r2, lr
 80175ca:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 80175ce:	f108 0a20 	add.w	sl, r8, #32
 80175d2:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 80175d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80175da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80175de:	ea42 020a 	orr.w	r2, r2, sl
 80175e2:	b292      	uxth	r2, r2
 80175e4:	2d0f      	cmp	r5, #15
 80175e6:	d91f      	bls.n	8017628 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 80175e8:	4b67      	ldr	r3, [pc, #412]	; (8017788 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 80175ea:	4a68      	ldr	r2, [pc, #416]	; (801778c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 80175ec:	4868      	ldr	r0, [pc, #416]	; (8017790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 80175ee:	f240 3173 	movw	r1, #883	; 0x373
 80175f2:	f004 f9cb 	bl	801b98c <__assert_func>
 80175f6:	4689      	mov	r9, r1
 80175f8:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80175fc:	e765      	b.n	80174ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 80175fe:	26ff      	movs	r6, #255	; 0xff
 8017600:	9101      	str	r1, [sp, #4]
 8017602:	4689      	mov	r9, r1
 8017604:	46b4      	mov	ip, r6
 8017606:	e78e      	b.n	8017526 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8017608:	9101      	str	r1, [sp, #4]
 801760a:	26ff      	movs	r6, #255	; 0xff
 801760c:	e78b      	b.n	8017526 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 801760e:	4608      	mov	r0, r1
 8017610:	27ff      	movs	r7, #255	; 0xff
 8017612:	e7ba      	b.n	801758a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 8017614:	24ff      	movs	r4, #255	; 0xff
 8017616:	460a      	mov	r2, r1
 8017618:	4608      	mov	r0, r1
 801761a:	4627      	mov	r7, r4
 801761c:	e7e2      	b.n	80175e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801761e:	460a      	mov	r2, r1
 8017620:	24ff      	movs	r4, #255	; 0xff
 8017622:	e7df      	b.n	80175e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8017624:	460a      	mov	r2, r1
 8017626:	24ff      	movs	r4, #255	; 0xff
 8017628:	9b02      	ldr	r3, [sp, #8]
 801762a:	2b0f      	cmp	r3, #15
 801762c:	d8dc      	bhi.n	80175e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 801762e:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8017632:	fa1f f885 	uxth.w	r8, r5
 8017636:	fb08 fa0e 	mul.w	sl, r8, lr
 801763a:	ea4f 1308 	mov.w	r3, r8, lsl #4
 801763e:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8017642:	9303      	str	r3, [sp, #12]
 8017644:	fa1f f38e 	uxth.w	r3, lr
 8017648:	9304      	str	r3, [sp, #16]
 801764a:	ea4f 4809 	mov.w	r8, r9, lsl #16
 801764e:	9b02      	ldr	r3, [sp, #8]
 8017650:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017654:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8017658:	fb15 fe03 	smulbb	lr, r5, r3
 801765c:	ea48 0809 	orr.w	r8, r8, r9
 8017660:	f1c3 0910 	rsb	r9, r3, #16
 8017664:	9b01      	ldr	r3, [sp, #4]
 8017666:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801766a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801766e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017672:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017676:	eba9 0905 	sub.w	r9, r9, r5
 801767a:	ea4b 0303 	orr.w	r3, fp, r3
 801767e:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8017682:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8017686:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 801768a:	436b      	muls	r3, r5
 801768c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017690:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017694:	ea4b 0202 	orr.w	r2, fp, r2
 8017698:	fb09 3308 	mla	r3, r9, r8, r3
 801769c:	fb0e 3302 	mla	r3, lr, r2, r3
 80176a0:	0402      	lsls	r2, r0, #16
 80176a2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80176a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80176aa:	4310      	orrs	r0, r2
 80176ac:	9a02      	ldr	r2, [sp, #8]
 80176ae:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 80176b2:	fb0e 3e00 	mla	lr, lr, r0, r3
 80176b6:	9803      	ldr	r0, [sp, #12]
 80176b8:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 80176bc:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80176c0:	9804      	ldr	r0, [sp, #16]
 80176c2:	1a2d      	subs	r5, r5, r0
 80176c4:	9803      	ldr	r0, [sp, #12]
 80176c6:	eba0 000a 	sub.w	r0, r0, sl
 80176ca:	b280      	uxth	r0, r0
 80176cc:	b2ad      	uxth	r5, r5
 80176ce:	4346      	muls	r6, r0
 80176d0:	9804      	ldr	r0, [sp, #16]
 80176d2:	fb0c 6605 	mla	r6, ip, r5, r6
 80176d6:	fb00 6707 	mla	r7, r0, r7, r6
 80176da:	fb0a 7404 	mla	r4, sl, r4, r7
 80176de:	b292      	uxth	r2, r2
 80176e0:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80176e4:	4354      	muls	r4, r2
 80176e6:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80176ea:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80176ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80176f2:	f104 0a01 	add.w	sl, r4, #1
 80176f6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80176fa:	ea43 0e0e 	orr.w	lr, r3, lr
 80176fe:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017702:	fa1f f38e 	uxth.w	r3, lr
 8017706:	1208      	asrs	r0, r1, #8
 8017708:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 801770c:	b2e4      	uxtb	r4, r4
 801770e:	121d      	asrs	r5, r3, #8
 8017710:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017714:	fb10 f004 	smulbb	r0, r0, r4
 8017718:	10ce      	asrs	r6, r1, #3
 801771a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801771e:	00c9      	lsls	r1, r1, #3
 8017720:	fb05 0502 	mla	r5, r5, r2, r0
 8017724:	b2c9      	uxtb	r1, r1
 8017726:	10d8      	asrs	r0, r3, #3
 8017728:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801772c:	00db      	lsls	r3, r3, #3
 801772e:	fb16 f604 	smulbb	r6, r6, r4
 8017732:	b2db      	uxtb	r3, r3
 8017734:	fb11 f404 	smulbb	r4, r1, r4
 8017738:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801773c:	fb00 6002 	mla	r0, r0, r2, r6
 8017740:	fb03 4202 	mla	r2, r3, r2, r4
 8017744:	b2ad      	uxth	r5, r5
 8017746:	b292      	uxth	r2, r2
 8017748:	1c6b      	adds	r3, r5, #1
 801774a:	1c51      	adds	r1, r2, #1
 801774c:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8017750:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017754:	b280      	uxth	r0, r0
 8017756:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801775a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801775e:	4313      	orrs	r3, r2
 8017760:	1c42      	adds	r2, r0, #1
 8017762:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017766:	0940      	lsrs	r0, r0, #5
 8017768:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801776c:	9a05      	ldr	r2, [sp, #20]
 801776e:	4303      	orrs	r3, r0
 8017770:	8013      	strh	r3, [r2, #0]
 8017772:	b007      	add	sp, #28
 8017774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017778:	2d0f      	cmp	r5, #15
 801777a:	f63f af35 	bhi.w	80175e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 801777e:	24ff      	movs	r4, #255	; 0xff
 8017780:	460a      	mov	r2, r1
 8017782:	4608      	mov	r0, r1
 8017784:	4627      	mov	r7, r4
 8017786:	e752      	b.n	801762e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 8017788:	0802112b 	.word	0x0802112b
 801778c:	08021689 	.word	0x08021689
 8017790:	080211b3 	.word	0x080211b3

08017794 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017798:	ed2d 8b08 	vpush	{d8-d11}
 801779c:	b099      	sub	sp, #100	; 0x64
 801779e:	eeb0 aa40 	vmov.f32	s20, s0
 80177a2:	9308      	str	r3, [sp, #32]
 80177a4:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80177a8:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 80177aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80177ac:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80177b0:	9314      	str	r3, [sp, #80]	; 0x50
 80177b2:	9113      	str	r1, [sp, #76]	; 0x4c
 80177b4:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80177b8:	9017      	str	r0, [sp, #92]	; 0x5c
 80177ba:	6870      	ldr	r0, [r6, #4]
 80177bc:	9216      	str	r2, [sp, #88]	; 0x58
 80177be:	fb00 1303 	mla	r3, r0, r3, r1
 80177c2:	6831      	ldr	r1, [r6, #0]
 80177c4:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80177c6:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 80177ca:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80177ce:	9309      	str	r3, [sp, #36]	; 0x24
 80177d0:	6813      	ldr	r3, [r2, #0]
 80177d2:	930c      	str	r3, [sp, #48]	; 0x30
 80177d4:	6853      	ldr	r3, [r2, #4]
 80177d6:	930d      	str	r3, [sp, #52]	; 0x34
 80177d8:	006b      	lsls	r3, r5, #1
 80177da:	9312      	str	r3, [sp, #72]	; 0x48
 80177dc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80177e0:	930a      	str	r3, [sp, #40]	; 0x28
 80177e2:	eef0 9a60 	vmov.f32	s19, s1
 80177e6:	eeb0 9a41 	vmov.f32	s18, s2
 80177ea:	eeb0 8a62 	vmov.f32	s16, s5
 80177ee:	eef0 8a43 	vmov.f32	s17, s6
 80177f2:	eef0 ba44 	vmov.f32	s23, s8
 80177f6:	eeb0 ba64 	vmov.f32	s22, s9
 80177fa:	eef0 aa45 	vmov.f32	s21, s10
 80177fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017800:	2b00      	cmp	r3, #0
 8017802:	dc03      	bgt.n	801780c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017804:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017806:	2b00      	cmp	r3, #0
 8017808:	f340 83bf 	ble.w	8017f8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 801780c:	9b08      	ldr	r3, [sp, #32]
 801780e:	2b00      	cmp	r3, #0
 8017810:	f340 81cb 	ble.w	8017baa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 8017814:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017816:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017818:	1412      	asrs	r2, r2, #16
 801781a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801781e:	d42f      	bmi.n	8017880 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8017820:	1c51      	adds	r1, r2, #1
 8017822:	428d      	cmp	r5, r1
 8017824:	dd2f      	ble.n	8017886 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8017826:	2b00      	cmp	r3, #0
 8017828:	db2d      	blt.n	8017886 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801782a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801782c:	1c59      	adds	r1, r3, #1
 801782e:	4288      	cmp	r0, r1
 8017830:	dd29      	ble.n	8017886 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8017832:	9b08      	ldr	r3, [sp, #32]
 8017834:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017836:	992b      	ldr	r1, [sp, #172]	; 0xac
 8017838:	3b01      	subs	r3, #1
 801783a:	fb02 1203 	mla	r2, r2, r3, r1
 801783e:	1412      	asrs	r2, r2, #16
 8017840:	d42b      	bmi.n	801789a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017842:	3201      	adds	r2, #1
 8017844:	4295      	cmp	r5, r2
 8017846:	dd28      	ble.n	801789a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017848:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801784a:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801784c:	fb02 1303 	mla	r3, r2, r3, r1
 8017850:	141b      	asrs	r3, r3, #16
 8017852:	d422      	bmi.n	801789a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017854:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017856:	3301      	adds	r3, #1
 8017858:	429a      	cmp	r2, r3
 801785a:	dd1e      	ble.n	801789a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801785c:	9b08      	ldr	r3, [sp, #32]
 801785e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017862:	9315      	str	r3, [sp, #84]	; 0x54
 8017864:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017868:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801786a:	2b00      	cmp	r3, #0
 801786c:	f300 8217 	bgt.w	8017c9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8017870:	9b08      	ldr	r3, [sp, #32]
 8017872:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017876:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017878:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801787c:	9309      	str	r3, [sp, #36]	; 0x24
 801787e:	e196      	b.n	8017bae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8017880:	1c57      	adds	r7, r2, #1
 8017882:	f040 8183 	bne.w	8017b8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8017886:	42aa      	cmp	r2, r5
 8017888:	f280 8180 	bge.w	8017b8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801788c:	1c5e      	adds	r6, r3, #1
 801788e:	f2c0 817d 	blt.w	8017b8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8017892:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017894:	4293      	cmp	r3, r2
 8017896:	f280 8179 	bge.w	8017b8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801789a:	9b08      	ldr	r3, [sp, #32]
 801789c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801789e:	9315      	str	r3, [sp, #84]	; 0x54
 80178a0:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80178a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80178a6:	2b00      	cmp	r3, #0
 80178a8:	dde2      	ble.n	8017870 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 80178aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80178ac:	1419      	asrs	r1, r3, #16
 80178ae:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80178b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80178b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80178b6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80178ba:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80178bc:	141b      	asrs	r3, r3, #16
 80178be:	f100 81d3 	bmi.w	8017c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 80178c2:	1c58      	adds	r0, r3, #1
 80178c4:	4285      	cmp	r5, r0
 80178c6:	f340 81d1 	ble.w	8017c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80178ca:	2900      	cmp	r1, #0
 80178cc:	f2c0 81ce 	blt.w	8017c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80178d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80178d2:	1c48      	adds	r0, r1, #1
 80178d4:	4284      	cmp	r4, r0
 80178d6:	f340 81c9 	ble.w	8017c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80178da:	fb01 3105 	mla	r1, r1, r5, r3
 80178de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80178e0:	fa1f fe82 	uxth.w	lr, r2
 80178e4:	eb03 0a01 	add.w	sl, r3, r1
 80178e8:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80178ec:	f813 9001 	ldrb.w	r9, [r3, r1]
 80178f0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80178f4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80178f8:	b29b      	uxth	r3, r3
 80178fa:	f1bc 0f00 	cmp.w	ip, #0
 80178fe:	f000 8195 	beq.w	8017c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 8017902:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8017906:	940e      	str	r4, [sp, #56]	; 0x38
 8017908:	eb0a 0b05 	add.w	fp, sl, r5
 801790c:	fa1f fa8c 	uxth.w	sl, ip
 8017910:	fb0a fe0e 	mul.w	lr, sl, lr
 8017914:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017918:	fa1f fa8a 	uxth.w	sl, sl
 801791c:	eba0 000e 	sub.w	r0, r0, lr
 8017920:	eba3 030a 	sub.w	r3, r3, sl
 8017924:	b280      	uxth	r0, r0
 8017926:	fb08 f000 	mul.w	r0, r8, r0
 801792a:	b29b      	uxth	r3, r3
 801792c:	fb09 0303 	mla	r3, r9, r3, r0
 8017930:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017932:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017936:	940f      	str	r4, [sp, #60]	; 0x3c
 8017938:	fb0a 3300 	mla	r3, sl, r0, r3
 801793c:	fb0e 3304 	mla	r3, lr, r4, r3
 8017940:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017944:	2b00      	cmp	r3, #0
 8017946:	f000 8114 	beq.w	8017b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801794a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801794c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801794e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017952:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017956:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 801795a:	f000 816c 	beq.w	8017c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 801795e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017962:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017966:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801796a:	fb09 f101 	mul.w	r1, r9, r1
 801796e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017972:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017976:	f101 0b20 	add.w	fp, r1, #32
 801797a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801797e:	44ce      	add	lr, r9
 8017980:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8017984:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017988:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801798c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017990:	ea4e 0909 	orr.w	r9, lr, r9
 8017994:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017998:	8841      	ldrh	r1, [r0, #2]
 801799a:	d019      	beq.n	80179d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 801799c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80179a0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80179a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80179a8:	fb0a fe0e 	mul.w	lr, sl, lr
 80179ac:	fb08 f801 	mul.w	r8, r8, r1
 80179b0:	f108 0b20 	add.w	fp, r8, #32
 80179b4:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 80179b8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80179bc:	448e      	add	lr, r1
 80179be:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 80179c2:	0a09      	lsrs	r1, r1, #8
 80179c4:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 80179c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80179cc:	ea4a 0101 	orr.w	r1, sl, r1
 80179d0:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80179d4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80179d8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80179dc:	ea4e 0909 	orr.w	r9, lr, r9
 80179e0:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 80179e4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80179e8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80179ec:	ea4e 0e01 	orr.w	lr, lr, r1
 80179f0:	f1bc 0f00 	cmp.w	ip, #0
 80179f4:	f000 8121 	beq.w	8017c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80179f8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80179fa:	eb00 0801 	add.w	r8, r0, r1
 80179fe:	5a41      	ldrh	r1, [r0, r1]
 8017a00:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017a02:	28ff      	cmp	r0, #255	; 0xff
 8017a04:	d019      	beq.n	8017a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8017a06:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017a08:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017a0c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017a10:	fb04 fb01 	mul.w	fp, r4, r1
 8017a14:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017a18:	fb0a fa00 	mul.w	sl, sl, r0
 8017a1c:	f10b 0020 	add.w	r0, fp, #32
 8017a20:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8017a24:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017a28:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017a2c:	4451      	add	r1, sl
 8017a2e:	0a00      	lsrs	r0, r0, #8
 8017a30:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017a34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017a38:	4301      	orrs	r1, r0
 8017a3a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017a3c:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8017a40:	2cff      	cmp	r4, #255	; 0xff
 8017a42:	d01a      	beq.n	8017a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 8017a44:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8017a48:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017a4c:	fb04 fb00 	mul.w	fp, r4, r0
 8017a50:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017a54:	fb0a fa08 	mul.w	sl, sl, r8
 8017a58:	f10b 0820 	add.w	r8, fp, #32
 8017a5c:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8017a60:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8017a64:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017a68:	4450      	add	r0, sl
 8017a6a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017a6e:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017a72:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017a76:	ea40 0008 	orr.w	r0, r0, r8
 8017a7a:	fb1c f802 	smulbb	r8, ip, r2
 8017a7e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017a82:	f1cc 0a10 	rsb	sl, ip, #16
 8017a86:	ebaa 0a02 	sub.w	sl, sl, r2
 8017a8a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017a8e:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8017a92:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8017a96:	fb0e f202 	mul.w	r2, lr, r2
 8017a9a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017a9e:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8017aa2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017aa6:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8017aaa:	fb09 220a 	mla	r2, r9, sl, r2
 8017aae:	ea4b 0101 	orr.w	r1, fp, r1
 8017ab2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017ab6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017aba:	fb0c 2201 	mla	r2, ip, r1, r2
 8017abe:	ea4e 0000 	orr.w	r0, lr, r0
 8017ac2:	fb08 2800 	mla	r8, r8, r0, r2
 8017ac6:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8017aca:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017ace:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017ad2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017ad6:	ea42 0808 	orr.w	r8, r2, r8
 8017ada:	fa1f f288 	uxth.w	r2, r8
 8017ade:	2bff      	cmp	r3, #255	; 0xff
 8017ae0:	d103      	bne.n	8017aea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8017ae2:	9914      	ldr	r1, [sp, #80]	; 0x50
 8017ae4:	29ff      	cmp	r1, #255	; 0xff
 8017ae6:	f000 80bd 	beq.w	8017c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 8017aea:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017aec:	f8b7 c000 	ldrh.w	ip, [r7]
 8017af0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017af2:	434b      	muls	r3, r1
 8017af4:	f103 0e01 	add.w	lr, r3, #1
 8017af8:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8017afc:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8017b00:	ea4f 202c 	mov.w	r0, ip, asr #8
 8017b04:	fa5f fe8e 	uxtb.w	lr, lr
 8017b08:	1213      	asrs	r3, r2, #8
 8017b0a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017b0e:	fb10 f00e 	smulbb	r0, r0, lr
 8017b12:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017b16:	fb03 0301 	mla	r3, r3, r1, r0
 8017b1a:	b298      	uxth	r0, r3
 8017b1c:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8017b20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017b24:	10d1      	asrs	r1, r2, #3
 8017b26:	fa5f fc8c 	uxtb.w	ip, ip
 8017b2a:	00d2      	lsls	r2, r2, #3
 8017b2c:	fb1c fc0e 	smulbb	ip, ip, lr
 8017b30:	b2d2      	uxtb	r2, r2
 8017b32:	fb02 c204 	mla	r2, r2, r4, ip
 8017b36:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017b3a:	fb13 f30e 	smulbb	r3, r3, lr
 8017b3e:	b292      	uxth	r2, r2
 8017b40:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017b44:	fb01 3104 	mla	r1, r1, r4, r3
 8017b48:	f102 0c01 	add.w	ip, r2, #1
 8017b4c:	1c43      	adds	r3, r0, #1
 8017b4e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017b52:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8017b56:	b289      	uxth	r1, r1
 8017b58:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b5c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017b60:	4313      	orrs	r3, r2
 8017b62:	1c4a      	adds	r2, r1, #1
 8017b64:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017b68:	0949      	lsrs	r1, r1, #5
 8017b6a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017b6e:	430b      	orrs	r3, r1
 8017b70:	803b      	strh	r3, [r7, #0]
 8017b72:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017b74:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017b76:	4413      	add	r3, r2
 8017b78:	932b      	str	r3, [sp, #172]	; 0xac
 8017b7a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017b7c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017b7e:	441a      	add	r2, r3
 8017b80:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017b82:	922c      	str	r2, [sp, #176]	; 0xb0
 8017b84:	3b01      	subs	r3, #1
 8017b86:	3702      	adds	r7, #2
 8017b88:	9315      	str	r3, [sp, #84]	; 0x54
 8017b8a:	e68b      	b.n	80178a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8017b8c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017b8e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017b90:	4413      	add	r3, r2
 8017b92:	932b      	str	r3, [sp, #172]	; 0xac
 8017b94:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017b96:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017b98:	441a      	add	r2, r3
 8017b9a:	9b08      	ldr	r3, [sp, #32]
 8017b9c:	922c      	str	r2, [sp, #176]	; 0xb0
 8017b9e:	3b01      	subs	r3, #1
 8017ba0:	9308      	str	r3, [sp, #32]
 8017ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017ba4:	3302      	adds	r3, #2
 8017ba6:	9309      	str	r3, [sp, #36]	; 0x24
 8017ba8:	e630      	b.n	801780c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017baa:	f47f ae42 	bne.w	8017832 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8017bae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017bb0:	2b00      	cmp	r3, #0
 8017bb2:	f340 81ea 	ble.w	8017f8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8017bb6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017bba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017bbe:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017bc2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017bc4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017bc8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017bcc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017bd0:	eef0 6a48 	vmov.f32	s13, s16
 8017bd4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017bd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017bdc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017be0:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8017be4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017be8:	eef0 6a68 	vmov.f32	s13, s17
 8017bec:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017bf0:	ee18 2a10 	vmov	r2, s16
 8017bf4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017bf8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017bfc:	ee18 2a90 	vmov	r2, s17
 8017c00:	932d      	str	r3, [sp, #180]	; 0xb4
 8017c02:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017c04:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c08:	932e      	str	r3, [sp, #184]	; 0xb8
 8017c0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017c0c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8017c0e:	3b01      	subs	r3, #1
 8017c10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c14:	9313      	str	r3, [sp, #76]	; 0x4c
 8017c16:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017c18:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8017c1c:	bf08      	it	eq
 8017c1e:	4613      	moveq	r3, r2
 8017c20:	9308      	str	r3, [sp, #32]
 8017c22:	eef0 8a67 	vmov.f32	s17, s15
 8017c26:	eeb0 8a47 	vmov.f32	s16, s14
 8017c2a:	e5e8      	b.n	80177fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8017c2c:	fb08 f000 	mul.w	r0, r8, r0
 8017c30:	fb09 0303 	mla	r3, r9, r3, r0
 8017c34:	e684      	b.n	8017940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 8017c36:	4689      	mov	r9, r1
 8017c38:	e6ac      	b.n	8017994 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 8017c3a:	f1c2 0010 	rsb	r0, r2, #16
 8017c3e:	fb0e f202 	mul.w	r2, lr, r2
 8017c42:	fb09 2900 	mla	r9, r9, r0, r2
 8017c46:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017c4a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017c4e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017c52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c56:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017c5a:	ea42 0909 	orr.w	r9, r2, r9
 8017c5e:	fa1f f289 	uxth.w	r2, r9
 8017c62:	e73c      	b.n	8017ade <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8017c64:	803a      	strh	r2, [r7, #0]
 8017c66:	e784      	b.n	8017b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c68:	1c5c      	adds	r4, r3, #1
 8017c6a:	d182      	bne.n	8017b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c6c:	429d      	cmp	r5, r3
 8017c6e:	dd80      	ble.n	8017b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c70:	1c48      	adds	r0, r1, #1
 8017c72:	f6ff af7e 	blt.w	8017b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c76:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017c78:	4288      	cmp	r0, r1
 8017c7a:	f77f af7a 	ble.w	8017b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c7e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017c80:	9302      	str	r3, [sp, #8]
 8017c82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017c84:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8017c88:	e9cd c005 	strd	ip, r0, [sp, #20]
 8017c8c:	e9cd 5300 	strd	r5, r3, [sp]
 8017c90:	4639      	mov	r1, r7
 8017c92:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8017c96:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017c98:	f7ff fbcc 	bl	8017434 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017c9c:	e769      	b.n	8017b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017c9e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017ca0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017ca4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ca6:	141f      	asrs	r7, r3, #16
 8017ca8:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8017cac:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017cae:	141b      	asrs	r3, r3, #16
 8017cb0:	fb05 3707 	mla	r7, r5, r7, r3
 8017cb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017cb6:	fa1f fc82 	uxth.w	ip, r2
 8017cba:	eb03 0a07 	add.w	sl, r3, r7
 8017cbe:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8017cc2:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017cc6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017cca:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8017cce:	b29b      	uxth	r3, r3
 8017cd0:	2800      	cmp	r0, #0
 8017cd2:	f000 813f 	beq.w	8017f54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 8017cd6:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8017cda:	9410      	str	r4, [sp, #64]	; 0x40
 8017cdc:	eb0a 0b05 	add.w	fp, sl, r5
 8017ce0:	fa1f fa80 	uxth.w	sl, r0
 8017ce4:	fb0a fc0c 	mul.w	ip, sl, ip
 8017ce8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017cec:	fa1f fa8a 	uxth.w	sl, sl
 8017cf0:	eba1 010c 	sub.w	r1, r1, ip
 8017cf4:	eba3 030a 	sub.w	r3, r3, sl
 8017cf8:	b289      	uxth	r1, r1
 8017cfa:	fb08 f101 	mul.w	r1, r8, r1
 8017cfe:	b29b      	uxth	r3, r3
 8017d00:	fb09 1303 	mla	r3, r9, r3, r1
 8017d04:	9910      	ldr	r1, [sp, #64]	; 0x40
 8017d06:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017d0a:	9411      	str	r4, [sp, #68]	; 0x44
 8017d0c:	fb0a 3301 	mla	r3, sl, r1, r3
 8017d10:	fb0c 3304 	mla	r3, ip, r4, r3
 8017d14:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017d18:	2b00      	cmp	r3, #0
 8017d1a:	f000 810d 	beq.w	8017f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8017d1e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017d20:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017d22:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017d26:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8017d2a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017d2e:	f000 8116 	beq.w	8017f5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8017d32:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017d36:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017d3a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017d3e:	fb09 f707 	mul.w	r7, r9, r7
 8017d42:	fb0a fc0c 	mul.w	ip, sl, ip
 8017d46:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017d4a:	f107 0b20 	add.w	fp, r7, #32
 8017d4e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017d52:	44cc      	add	ip, r9
 8017d54:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017d58:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017d5c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017d60:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017d64:	ea4c 0909 	orr.w	r9, ip, r9
 8017d68:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017d6c:	884f      	ldrh	r7, [r1, #2]
 8017d6e:	d019      	beq.n	8017da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8017d70:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017d74:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017d78:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017d7c:	fb08 f807 	mul.w	r8, r8, r7
 8017d80:	fb0a fc0c 	mul.w	ip, sl, ip
 8017d84:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017d88:	f108 0b20 	add.w	fp, r8, #32
 8017d8c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017d90:	44bc      	add	ip, r7
 8017d92:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017d96:	0a3f      	lsrs	r7, r7, #8
 8017d98:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017d9c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017da0:	ea4c 0707 	orr.w	r7, ip, r7
 8017da4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017da8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017dac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017db0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017db4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017db8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017dbc:	ea4c 0909 	orr.w	r9, ip, r9
 8017dc0:	ea4a 0707 	orr.w	r7, sl, r7
 8017dc4:	2800      	cmp	r0, #0
 8017dc6:	f000 80cc 	beq.w	8017f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 8017dca:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017dcc:	eb01 0c04 	add.w	ip, r1, r4
 8017dd0:	f831 8004 	ldrh.w	r8, [r1, r4]
 8017dd4:	9910      	ldr	r1, [sp, #64]	; 0x40
 8017dd6:	29ff      	cmp	r1, #255	; 0xff
 8017dd8:	d01a      	beq.n	8017e10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 8017dda:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017ddc:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8017de0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017de4:	fb04 fb08 	mul.w	fp, r4, r8
 8017de8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017dec:	fb0a fa01 	mul.w	sl, sl, r1
 8017df0:	f10b 0120 	add.w	r1, fp, #32
 8017df4:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8017df8:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8017dfc:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017e00:	44d0      	add	r8, sl
 8017e02:	0a09      	lsrs	r1, r1, #8
 8017e04:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8017e08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e0c:	ea48 0801 	orr.w	r8, r8, r1
 8017e10:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017e12:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8017e16:	2cff      	cmp	r4, #255	; 0xff
 8017e18:	d01a      	beq.n	8017e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 8017e1a:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8017e1e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e22:	fb04 fb01 	mul.w	fp, r4, r1
 8017e26:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017e2a:	fb0a fa0c 	mul.w	sl, sl, ip
 8017e2e:	f10b 0c20 	add.w	ip, fp, #32
 8017e32:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8017e36:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8017e3a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017e3e:	4451      	add	r1, sl
 8017e40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017e44:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017e48:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017e4c:	ea41 010c 	orr.w	r1, r1, ip
 8017e50:	fb10 fc02 	smulbb	ip, r0, r2
 8017e54:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017e58:	f1c0 0a10 	rsb	sl, r0, #16
 8017e5c:	ebaa 0a02 	sub.w	sl, sl, r2
 8017e60:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8017e64:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017e68:	437a      	muls	r2, r7
 8017e6a:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8017e6e:	040f      	lsls	r7, r1, #16
 8017e70:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017e74:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017e78:	fb09 220a 	mla	r2, r9, sl, r2
 8017e7c:	ea4b 0808 	orr.w	r8, fp, r8
 8017e80:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8017e84:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8017e88:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017e8c:	fb00 2208 	mla	r2, r0, r8, r2
 8017e90:	4339      	orrs	r1, r7
 8017e92:	fb0c 2201 	mla	r2, ip, r1, r2
 8017e96:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8017e9a:	0952      	lsrs	r2, r2, #5
 8017e9c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017ea0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017ea4:	ea49 0202 	orr.w	r2, r9, r2
 8017ea8:	2bff      	cmp	r3, #255	; 0xff
 8017eaa:	b292      	uxth	r2, r2
 8017eac:	d102      	bne.n	8017eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8017eae:	9914      	ldr	r1, [sp, #80]	; 0x50
 8017eb0:	29ff      	cmp	r1, #255	; 0xff
 8017eb2:	d067      	beq.n	8017f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8017eb4:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017eb6:	f8be 0000 	ldrh.w	r0, [lr]
 8017eba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017ebc:	434b      	muls	r3, r1
 8017ebe:	1c59      	adds	r1, r3, #1
 8017ec0:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8017ec4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017ec8:	1201      	asrs	r1, r0, #8
 8017eca:	b2db      	uxtb	r3, r3
 8017ecc:	1217      	asrs	r7, r2, #8
 8017ece:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017ed2:	fb11 f103 	smulbb	r1, r1, r3
 8017ed6:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 8017eda:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017ede:	00c0      	lsls	r0, r0, #3
 8017ee0:	fb07 1704 	mla	r7, r7, r4, r1
 8017ee4:	b2c0      	uxtb	r0, r0
 8017ee6:	10d1      	asrs	r1, r2, #3
 8017ee8:	00d2      	lsls	r2, r2, #3
 8017eea:	fb10 f003 	smulbb	r0, r0, r3
 8017eee:	b2d2      	uxtb	r2, r2
 8017ef0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017ef4:	fb02 0204 	mla	r2, r2, r4, r0
 8017ef8:	fb1c fc03 	smulbb	ip, ip, r3
 8017efc:	b2bf      	uxth	r7, r7
 8017efe:	b292      	uxth	r2, r2
 8017f00:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017f04:	fb01 c104 	mla	r1, r1, r4, ip
 8017f08:	1c7b      	adds	r3, r7, #1
 8017f0a:	f102 0c01 	add.w	ip, r2, #1
 8017f0e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8017f12:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8017f16:	b289      	uxth	r1, r1
 8017f18:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017f1c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017f20:	ea47 070c 	orr.w	r7, r7, ip
 8017f24:	f101 0c01 	add.w	ip, r1, #1
 8017f28:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8017f2c:	0949      	lsrs	r1, r1, #5
 8017f2e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017f32:	430f      	orrs	r7, r1
 8017f34:	f8ae 7000 	strh.w	r7, [lr]
 8017f38:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017f3a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017f3c:	4413      	add	r3, r2
 8017f3e:	932b      	str	r3, [sp, #172]	; 0xac
 8017f40:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017f42:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017f44:	441a      	add	r2, r3
 8017f46:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017f48:	922c      	str	r2, [sp, #176]	; 0xb0
 8017f4a:	3b01      	subs	r3, #1
 8017f4c:	f10e 0e02 	add.w	lr, lr, #2
 8017f50:	9315      	str	r3, [sp, #84]	; 0x54
 8017f52:	e489      	b.n	8017868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8017f54:	fb08 f101 	mul.w	r1, r8, r1
 8017f58:	fb09 1303 	mla	r3, r9, r3, r1
 8017f5c:	e6da      	b.n	8017d14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8017f5e:	46b9      	mov	r9, r7
 8017f60:	e702      	b.n	8017d68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 8017f62:	f1c2 0110 	rsb	r1, r2, #16
 8017f66:	437a      	muls	r2, r7
 8017f68:	fb09 2901 	mla	r9, r9, r1, r2
 8017f6c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017f70:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017f74:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017f78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017f7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017f80:	4302      	orrs	r2, r0
 8017f82:	e791      	b.n	8017ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8017f84:	f8ae 2000 	strh.w	r2, [lr]
 8017f88:	e7d6      	b.n	8017f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8017f8a:	b019      	add	sp, #100	; 0x64
 8017f8c:	ecbd 8b08 	vpop	{d8-d11}
 8017f90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8017f94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f98:	b087      	sub	sp, #28
 8017f9a:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8017f9e:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8017fa2:	9105      	str	r1, [sp, #20]
 8017fa4:	fb00 e604 	mla	r6, r0, r4, lr
 8017fa8:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8017fac:	9102      	str	r1, [sp, #8]
 8017fae:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8017fb2:	9103      	str	r1, [sp, #12]
 8017fb4:	9905      	ldr	r1, [sp, #20]
 8017fb6:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8017fba:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8017fbe:	8809      	ldrh	r1, [r1, #0]
 8017fc0:	2800      	cmp	r0, #0
 8017fc2:	eb02 0a06 	add.w	sl, r2, r6
 8017fc6:	f2c0 80ca 	blt.w	801815e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8017fca:	4287      	cmp	r7, r0
 8017fcc:	f340 80c7 	ble.w	801815e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8017fd0:	f1be 0f00 	cmp.w	lr, #0
 8017fd4:	f2c0 80bf 	blt.w	8018156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8017fd8:	4574      	cmp	r4, lr
 8017fda:	f340 80bc 	ble.w	8018156 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 8017fde:	f812 c006 	ldrb.w	ip, [r2, r6]
 8017fe2:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 8017fe6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017fea:	d01c      	beq.n	8018026 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8017fec:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8017ff0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017ff4:	4372      	muls	r2, r6
 8017ff6:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8017ffa:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8017ffe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018002:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018006:	fb0c f609 	mul.w	r6, ip, r9
 801800a:	eb03 0902 	add.w	r9, r3, r2
 801800e:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8018012:	f106 0820 	add.w	r8, r6, #32
 8018016:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 801801a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801801e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018022:	ea49 0908 	orr.w	r9, r9, r8
 8018026:	fa1f f989 	uxth.w	r9, r9
 801802a:	f11e 0301 	adds.w	r3, lr, #1
 801802e:	f100 809b 	bmi.w	8018168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8018032:	429c      	cmp	r4, r3
 8018034:	f340 8098 	ble.w	8018168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8018038:	2d00      	cmp	r5, #0
 801803a:	f000 8095 	beq.w	8018168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 801803e:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8018042:	9b03      	ldr	r3, [sp, #12]
 8018044:	2eff      	cmp	r6, #255	; 0xff
 8018046:	885b      	ldrh	r3, [r3, #2]
 8018048:	d01b      	beq.n	8018082 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 801804a:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801804e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8018052:	fb08 f202 	mul.w	r2, r8, r2
 8018056:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801805a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801805e:	fb06 f803 	mul.w	r8, r6, r3
 8018062:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8018066:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801806a:	441a      	add	r2, r3
 801806c:	f108 0320 	add.w	r3, r8, #32
 8018070:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8018074:	0a1b      	lsrs	r3, r3, #8
 8018076:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801807a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801807e:	ea4b 0303 	orr.w	r3, fp, r3
 8018082:	b29b      	uxth	r3, r3
 8018084:	9301      	str	r3, [sp, #4]
 8018086:	3001      	adds	r0, #1
 8018088:	d474      	bmi.n	8018174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801808a:	4287      	cmp	r7, r0
 801808c:	dd72      	ble.n	8018174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801808e:	9a02      	ldr	r2, [sp, #8]
 8018090:	2a00      	cmp	r2, #0
 8018092:	f000 8111 	beq.w	80182b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 8018096:	f1be 0f00 	cmp.w	lr, #0
 801809a:	db68      	blt.n	801816e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 801809c:	4574      	cmp	r4, lr
 801809e:	dd66      	ble.n	801816e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 80180a0:	f81a 7004 	ldrb.w	r7, [sl, r4]
 80180a4:	9a03      	ldr	r2, [sp, #12]
 80180a6:	2fff      	cmp	r7, #255	; 0xff
 80180a8:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 80180ac:	d01c      	beq.n	80180e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 80180ae:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 80180b2:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80180b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80180ba:	fb07 fb00 	mul.w	fp, r7, r0
 80180be:	fb08 f802 	mul.w	r8, r8, r2
 80180c2:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80180c6:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 80180ca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80180ce:	4490      	add	r8, r2
 80180d0:	f10b 0220 	add.w	r2, fp, #32
 80180d4:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80180d8:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80180dc:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 80180e0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80180e4:	ea40 000b 	orr.w	r0, r0, fp
 80180e8:	b280      	uxth	r0, r0
 80180ea:	f11e 0e01 	adds.w	lr, lr, #1
 80180ee:	d446      	bmi.n	801817e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80180f0:	4574      	cmp	r4, lr
 80180f2:	dd44      	ble.n	801817e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80180f4:	2d00      	cmp	r5, #0
 80180f6:	d045      	beq.n	8018184 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 80180f8:	1c62      	adds	r2, r4, #1
 80180fa:	9b03      	ldr	r3, [sp, #12]
 80180fc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018100:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8018104:	2cff      	cmp	r4, #255	; 0xff
 8018106:	d01c      	beq.n	8018142 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 8018108:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 801810c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018110:	fb08 fe0e 	mul.w	lr, r8, lr
 8018114:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8018118:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801811c:	fb04 f802 	mul.w	r8, r4, r2
 8018120:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8018124:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018128:	4472      	add	r2, lr
 801812a:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 801812e:	f108 0a20 	add.w	sl, r8, #32
 8018132:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8018136:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801813a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801813e:	ea42 020a 	orr.w	r2, r2, sl
 8018142:	b292      	uxth	r2, r2
 8018144:	2d0f      	cmp	r5, #15
 8018146:	d91f      	bls.n	8018188 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8018148:	4b5f      	ldr	r3, [pc, #380]	; (80182c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 801814a:	4a60      	ldr	r2, [pc, #384]	; (80182cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 801814c:	4860      	ldr	r0, [pc, #384]	; (80182d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 801814e:	f240 3173 	movw	r1, #883	; 0x373
 8018152:	f003 fc1b 	bl	801b98c <__assert_func>
 8018156:	4689      	mov	r9, r1
 8018158:	f04f 0cff 	mov.w	ip, #255	; 0xff
 801815c:	e765      	b.n	801802a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 801815e:	26ff      	movs	r6, #255	; 0xff
 8018160:	9101      	str	r1, [sp, #4]
 8018162:	4689      	mov	r9, r1
 8018164:	46b4      	mov	ip, r6
 8018166:	e78e      	b.n	8018086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8018168:	9101      	str	r1, [sp, #4]
 801816a:	26ff      	movs	r6, #255	; 0xff
 801816c:	e78b      	b.n	8018086 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 801816e:	4608      	mov	r0, r1
 8018170:	27ff      	movs	r7, #255	; 0xff
 8018172:	e7ba      	b.n	80180ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 8018174:	24ff      	movs	r4, #255	; 0xff
 8018176:	460a      	mov	r2, r1
 8018178:	4608      	mov	r0, r1
 801817a:	4627      	mov	r7, r4
 801817c:	e7e2      	b.n	8018144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801817e:	460a      	mov	r2, r1
 8018180:	24ff      	movs	r4, #255	; 0xff
 8018182:	e7df      	b.n	8018144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018184:	460a      	mov	r2, r1
 8018186:	24ff      	movs	r4, #255	; 0xff
 8018188:	9b02      	ldr	r3, [sp, #8]
 801818a:	2b0f      	cmp	r3, #15
 801818c:	d8dc      	bhi.n	8018148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 801818e:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8018192:	fa1f f885 	uxth.w	r8, r5
 8018196:	fb08 fa0e 	mul.w	sl, r8, lr
 801819a:	ea4f 1308 	mov.w	r3, r8, lsl #4
 801819e:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 80181a2:	9303      	str	r3, [sp, #12]
 80181a4:	fa1f f38e 	uxth.w	r3, lr
 80181a8:	9304      	str	r3, [sp, #16]
 80181aa:	ea4f 4809 	mov.w	r8, r9, lsl #16
 80181ae:	9b02      	ldr	r3, [sp, #8]
 80181b0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80181b4:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 80181b8:	fb15 fe03 	smulbb	lr, r5, r3
 80181bc:	ea48 0809 	orr.w	r8, r8, r9
 80181c0:	f1c3 0910 	rsb	r9, r3, #16
 80181c4:	9b01      	ldr	r3, [sp, #4]
 80181c6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80181ca:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80181ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80181d2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80181d6:	eba9 0905 	sub.w	r9, r9, r5
 80181da:	ea4b 0303 	orr.w	r3, fp, r3
 80181de:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 80181e2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80181e6:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 80181ea:	436b      	muls	r3, r5
 80181ec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80181f0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80181f4:	ea4b 0202 	orr.w	r2, fp, r2
 80181f8:	fb09 3308 	mla	r3, r9, r8, r3
 80181fc:	fb0e 3302 	mla	r3, lr, r2, r3
 8018200:	0402      	lsls	r2, r0, #16
 8018202:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018206:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801820a:	4310      	orrs	r0, r2
 801820c:	9a02      	ldr	r2, [sp, #8]
 801820e:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8018212:	9a03      	ldr	r2, [sp, #12]
 8018214:	fb0e 3e00 	mla	lr, lr, r0, r3
 8018218:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801821c:	9a04      	ldr	r2, [sp, #16]
 801821e:	1a80      	subs	r0, r0, r2
 8018220:	9a03      	ldr	r2, [sp, #12]
 8018222:	eba2 020a 	sub.w	r2, r2, sl
 8018226:	b292      	uxth	r2, r2
 8018228:	b280      	uxth	r0, r0
 801822a:	4356      	muls	r6, r2
 801822c:	9a04      	ldr	r2, [sp, #16]
 801822e:	fb0c 6600 	mla	r6, ip, r0, r6
 8018232:	fb02 6707 	mla	r7, r2, r7, r6
 8018236:	fb0a 7404 	mla	r4, sl, r4, r7
 801823a:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801823e:	1208      	asrs	r0, r1, #8
 8018240:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018244:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8018248:	b2e4      	uxtb	r4, r4
 801824a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801824e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018252:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018256:	4360      	muls	r0, r4
 8018258:	ea43 0e0e 	orr.w	lr, r3, lr
 801825c:	fa1f f38e 	uxth.w	r3, lr
 8018260:	1c42      	adds	r2, r0, #1
 8018262:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018266:	1218      	asrs	r0, r3, #8
 8018268:	10cd      	asrs	r5, r1, #3
 801826a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801826e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018272:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018276:	4a17      	ldr	r2, [pc, #92]	; (80182d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8018278:	4365      	muls	r5, r4
 801827a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801827e:	1c6a      	adds	r2, r5, #1
 8018280:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018284:	00c9      	lsls	r1, r1, #3
 8018286:	10da      	asrs	r2, r3, #3
 8018288:	b2c9      	uxtb	r1, r1
 801828a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801828e:	434c      	muls	r4, r1
 8018290:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8018294:	1c61      	adds	r1, r4, #1
 8018296:	00d2      	lsls	r2, r2, #3
 8018298:	00db      	lsls	r3, r3, #3
 801829a:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 801829e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80182a2:	b2db      	uxtb	r3, r3
 80182a4:	4302      	orrs	r2, r0
 80182a6:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80182aa:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 80182ae:	9a05      	ldr	r2, [sp, #20]
 80182b0:	8013      	strh	r3, [r2, #0]
 80182b2:	b007      	add	sp, #28
 80182b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182b8:	2d0f      	cmp	r5, #15
 80182ba:	f63f af45 	bhi.w	8018148 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 80182be:	24ff      	movs	r4, #255	; 0xff
 80182c0:	460a      	mov	r2, r1
 80182c2:	4608      	mov	r0, r1
 80182c4:	4627      	mov	r7, r4
 80182c6:	e762      	b.n	801818e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 80182c8:	0802112b 	.word	0x0802112b
 80182cc:	08021689 	.word	0x08021689
 80182d0:	080211b3 	.word	0x080211b3
 80182d4:	fffff800 	.word	0xfffff800

080182d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80182d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182dc:	ed2d 8b08 	vpush	{d8-d11}
 80182e0:	b095      	sub	sp, #84	; 0x54
 80182e2:	eeb0 aa40 	vmov.f32	s20, s0
 80182e6:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80182e8:	9306      	str	r3, [sp, #24]
 80182ea:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 80182ee:	9110      	str	r1, [sp, #64]	; 0x40
 80182f0:	9308      	str	r3, [sp, #32]
 80182f2:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80182f6:	9013      	str	r0, [sp, #76]	; 0x4c
 80182f8:	6870      	ldr	r0, [r6, #4]
 80182fa:	9212      	str	r2, [sp, #72]	; 0x48
 80182fc:	fb00 1303 	mla	r3, r0, r3, r1
 8018300:	6831      	ldr	r1, [r6, #0]
 8018302:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8018304:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8018308:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801830c:	9307      	str	r3, [sp, #28]
 801830e:	6813      	ldr	r3, [r2, #0]
 8018310:	9309      	str	r3, [sp, #36]	; 0x24
 8018312:	6853      	ldr	r3, [r2, #4]
 8018314:	930a      	str	r3, [sp, #40]	; 0x28
 8018316:	006b      	lsls	r3, r5, #1
 8018318:	eef0 9a60 	vmov.f32	s19, s1
 801831c:	eeb0 9a41 	vmov.f32	s18, s2
 8018320:	eeb0 8a62 	vmov.f32	s16, s5
 8018324:	eef0 8a43 	vmov.f32	s17, s6
 8018328:	eef0 ba44 	vmov.f32	s23, s8
 801832c:	eeb0 ba64 	vmov.f32	s22, s9
 8018330:	eef0 aa45 	vmov.f32	s21, s10
 8018334:	930f      	str	r3, [sp, #60]	; 0x3c
 8018336:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018338:	2b00      	cmp	r3, #0
 801833a:	dc03      	bgt.n	8018344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 801833c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801833e:	2b00      	cmp	r3, #0
 8018340:	f340 83a3 	ble.w	8018a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8018344:	9b06      	ldr	r3, [sp, #24]
 8018346:	2b00      	cmp	r3, #0
 8018348:	f340 81bc 	ble.w	80186c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 801834c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801834e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018350:	1412      	asrs	r2, r2, #16
 8018352:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018356:	d42f      	bmi.n	80183b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8018358:	1c51      	adds	r1, r2, #1
 801835a:	428d      	cmp	r5, r1
 801835c:	dd2f      	ble.n	80183be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801835e:	2b00      	cmp	r3, #0
 8018360:	db2d      	blt.n	80183be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018362:	9808      	ldr	r0, [sp, #32]
 8018364:	1c59      	adds	r1, r3, #1
 8018366:	4288      	cmp	r0, r1
 8018368:	dd29      	ble.n	80183be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801836a:	9b06      	ldr	r3, [sp, #24]
 801836c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801836e:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8018370:	3b01      	subs	r3, #1
 8018372:	fb02 1203 	mla	r2, r2, r3, r1
 8018376:	1412      	asrs	r2, r2, #16
 8018378:	d42b      	bmi.n	80183d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801837a:	3201      	adds	r2, #1
 801837c:	4295      	cmp	r5, r2
 801837e:	dd28      	ble.n	80183d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018380:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018382:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018384:	fb02 1303 	mla	r3, r2, r3, r1
 8018388:	141b      	asrs	r3, r3, #16
 801838a:	d422      	bmi.n	80183d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801838c:	9a08      	ldr	r2, [sp, #32]
 801838e:	3301      	adds	r3, #1
 8018390:	429a      	cmp	r2, r3
 8018392:	dd1e      	ble.n	80183d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018394:	9b06      	ldr	r3, [sp, #24]
 8018396:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801839a:	9311      	str	r3, [sp, #68]	; 0x44
 801839c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80183a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80183a2:	2b00      	cmp	r3, #0
 80183a4:	f300 8208 	bgt.w	80187b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 80183a8:	9b06      	ldr	r3, [sp, #24]
 80183aa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80183ae:	9b07      	ldr	r3, [sp, #28]
 80183b0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80183b4:	9307      	str	r3, [sp, #28]
 80183b6:	e187      	b.n	80186c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 80183b8:	1c57      	adds	r7, r2, #1
 80183ba:	f040 8174 	bne.w	80186a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80183be:	42aa      	cmp	r2, r5
 80183c0:	f280 8171 	bge.w	80186a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80183c4:	1c5e      	adds	r6, r3, #1
 80183c6:	f2c0 816e 	blt.w	80186a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80183ca:	9a08      	ldr	r2, [sp, #32]
 80183cc:	4293      	cmp	r3, r2
 80183ce:	f280 816a 	bge.w	80186a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80183d2:	9b06      	ldr	r3, [sp, #24]
 80183d4:	9f07      	ldr	r7, [sp, #28]
 80183d6:	9311      	str	r3, [sp, #68]	; 0x44
 80183d8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80183dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80183de:	2b00      	cmp	r3, #0
 80183e0:	dde2      	ble.n	80183a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80183e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80183e4:	1419      	asrs	r1, r3, #16
 80183e6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80183e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80183ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80183ee:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80183f2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80183f4:	141b      	asrs	r3, r3, #16
 80183f6:	f100 81c4 	bmi.w	8018782 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 80183fa:	1c58      	adds	r0, r3, #1
 80183fc:	4285      	cmp	r5, r0
 80183fe:	f340 81c2 	ble.w	8018786 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8018402:	2900      	cmp	r1, #0
 8018404:	f2c0 81bf 	blt.w	8018786 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8018408:	9c08      	ldr	r4, [sp, #32]
 801840a:	1c48      	adds	r0, r1, #1
 801840c:	4284      	cmp	r4, r0
 801840e:	f340 81ba 	ble.w	8018786 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8018412:	fb01 3105 	mla	r1, r1, r5, r3
 8018416:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018418:	fa1f fe82 	uxth.w	lr, r2
 801841c:	eb03 0a01 	add.w	sl, r3, r1
 8018420:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8018424:	f813 9001 	ldrb.w	r9, [r3, r1]
 8018428:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801842c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018430:	b29b      	uxth	r3, r3
 8018432:	f1bc 0f00 	cmp.w	ip, #0
 8018436:	f000 8186 	beq.w	8018746 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 801843a:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801843e:	940b      	str	r4, [sp, #44]	; 0x2c
 8018440:	eb0a 0b05 	add.w	fp, sl, r5
 8018444:	fa1f fa8c 	uxth.w	sl, ip
 8018448:	fb0a fe0e 	mul.w	lr, sl, lr
 801844c:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018450:	fa1f fa8a 	uxth.w	sl, sl
 8018454:	eba0 000e 	sub.w	r0, r0, lr
 8018458:	eba3 030a 	sub.w	r3, r3, sl
 801845c:	b280      	uxth	r0, r0
 801845e:	fb08 f000 	mul.w	r0, r8, r0
 8018462:	b29b      	uxth	r3, r3
 8018464:	fb09 0303 	mla	r3, r9, r3, r0
 8018468:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801846a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801846e:	940c      	str	r4, [sp, #48]	; 0x30
 8018470:	fb0a 3300 	mla	r3, sl, r0, r3
 8018474:	fb0e 3304 	mla	r3, lr, r4, r3
 8018478:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801847c:	2b00      	cmp	r3, #0
 801847e:	f000 8105 	beq.w	801868c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018482:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018484:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018486:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801848a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801848e:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8018492:	f000 815d 	beq.w	8018750 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 8018496:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801849a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801849e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80184a2:	fb09 f101 	mul.w	r1, r9, r1
 80184a6:	fb0a fe0e 	mul.w	lr, sl, lr
 80184aa:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80184ae:	f101 0b20 	add.w	fp, r1, #32
 80184b2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80184b6:	44ce      	add	lr, r9
 80184b8:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 80184bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80184c0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80184c4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80184c8:	ea4e 0909 	orr.w	r9, lr, r9
 80184cc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80184d0:	8841      	ldrh	r1, [r0, #2]
 80184d2:	d019      	beq.n	8018508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 80184d4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80184d8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80184dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80184e0:	fb0a fe0e 	mul.w	lr, sl, lr
 80184e4:	fb08 f801 	mul.w	r8, r8, r1
 80184e8:	f108 0b20 	add.w	fp, r8, #32
 80184ec:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 80184f0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80184f4:	448e      	add	lr, r1
 80184f6:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 80184fa:	0a09      	lsrs	r1, r1, #8
 80184fc:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8018500:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018504:	ea4a 0101 	orr.w	r1, sl, r1
 8018508:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801850c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018510:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018514:	ea4e 0909 	orr.w	r9, lr, r9
 8018518:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 801851c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018520:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018524:	ea4e 0e01 	orr.w	lr, lr, r1
 8018528:	f1bc 0f00 	cmp.w	ip, #0
 801852c:	f000 8112 	beq.w	8018754 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8018530:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8018532:	eb00 0801 	add.w	r8, r0, r1
 8018536:	5a41      	ldrh	r1, [r0, r1]
 8018538:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801853a:	28ff      	cmp	r0, #255	; 0xff
 801853c:	d019      	beq.n	8018572 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 801853e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018540:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018544:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018548:	fb04 fb01 	mul.w	fp, r4, r1
 801854c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018550:	fb0a fa00 	mul.w	sl, sl, r0
 8018554:	f10b 0020 	add.w	r0, fp, #32
 8018558:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 801855c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8018560:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018564:	4451      	add	r1, sl
 8018566:	0a00      	lsrs	r0, r0, #8
 8018568:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801856c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018570:	4301      	orrs	r1, r0
 8018572:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018574:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8018578:	2cff      	cmp	r4, #255	; 0xff
 801857a:	d01a      	beq.n	80185b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 801857c:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8018580:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018584:	fb04 fb00 	mul.w	fp, r4, r0
 8018588:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801858c:	fb0a fa08 	mul.w	sl, sl, r8
 8018590:	f10b 0820 	add.w	r8, fp, #32
 8018594:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8018598:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 801859c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80185a0:	4450      	add	r0, sl
 80185a2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80185a6:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80185aa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80185ae:	ea40 0008 	orr.w	r0, r0, r8
 80185b2:	fb1c f802 	smulbb	r8, ip, r2
 80185b6:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80185ba:	f1cc 0a10 	rsb	sl, ip, #16
 80185be:	ebaa 0a02 	sub.w	sl, sl, r2
 80185c2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80185c6:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 80185ca:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 80185ce:	fb0e f202 	mul.w	r2, lr, r2
 80185d2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80185d6:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 80185da:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80185de:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80185e2:	fb09 220a 	mla	r2, r9, sl, r2
 80185e6:	ea4b 0101 	orr.w	r1, fp, r1
 80185ea:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80185ee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80185f2:	fb0c 2201 	mla	r2, ip, r1, r2
 80185f6:	ea4e 0000 	orr.w	r0, lr, r0
 80185fa:	fb08 2800 	mla	r8, r8, r0, r2
 80185fe:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8018602:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018606:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801860a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801860e:	ea42 0808 	orr.w	r8, r2, r8
 8018612:	fa1f f288 	uxth.w	r2, r8
 8018616:	2bff      	cmp	r3, #255	; 0xff
 8018618:	f000 80b1 	beq.w	801877e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 801861c:	f8b7 8000 	ldrh.w	r8, [r7]
 8018620:	43db      	mvns	r3, r3
 8018622:	ea4f 2028 	mov.w	r0, r8, asr #8
 8018626:	fa5f fe83 	uxtb.w	lr, r3
 801862a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801862e:	fb00 f00e 	mul.w	r0, r0, lr
 8018632:	1c41      	adds	r1, r0, #1
 8018634:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018638:	1210      	asrs	r0, r2, #8
 801863a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801863e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018642:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8018646:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801864a:	495a      	ldr	r1, [pc, #360]	; (80187b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 801864c:	fb0c fc0e 	mul.w	ip, ip, lr
 8018650:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8018654:	f10c 0101 	add.w	r1, ip, #1
 8018658:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801865c:	10d1      	asrs	r1, r2, #3
 801865e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018662:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8018666:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801866a:	b2db      	uxtb	r3, r3
 801866c:	00c9      	lsls	r1, r1, #3
 801866e:	fb03 f30e 	mul.w	r3, r3, lr
 8018672:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018676:	4301      	orrs	r1, r0
 8018678:	1c58      	adds	r0, r3, #1
 801867a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801867e:	00d3      	lsls	r3, r2, #3
 8018680:	b2db      	uxtb	r3, r3
 8018682:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018686:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 801868a:	803b      	strh	r3, [r7, #0]
 801868c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801868e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018690:	4413      	add	r3, r2
 8018692:	9327      	str	r3, [sp, #156]	; 0x9c
 8018694:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018696:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018698:	441a      	add	r2, r3
 801869a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801869c:	9228      	str	r2, [sp, #160]	; 0xa0
 801869e:	3b01      	subs	r3, #1
 80186a0:	3702      	adds	r7, #2
 80186a2:	9311      	str	r3, [sp, #68]	; 0x44
 80186a4:	e69a      	b.n	80183dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80186a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80186a8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80186aa:	4413      	add	r3, r2
 80186ac:	9327      	str	r3, [sp, #156]	; 0x9c
 80186ae:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80186b0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80186b2:	441a      	add	r2, r3
 80186b4:	9b06      	ldr	r3, [sp, #24]
 80186b6:	9228      	str	r2, [sp, #160]	; 0xa0
 80186b8:	3b01      	subs	r3, #1
 80186ba:	9306      	str	r3, [sp, #24]
 80186bc:	9b07      	ldr	r3, [sp, #28]
 80186be:	3302      	adds	r3, #2
 80186c0:	9307      	str	r3, [sp, #28]
 80186c2:	e63f      	b.n	8018344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 80186c4:	f47f ae51 	bne.w	801836a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80186c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80186ca:	2b00      	cmp	r3, #0
 80186cc:	f340 81dd 	ble.w	8018a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 80186d0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80186d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80186d8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80186dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80186de:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80186e2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80186e6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80186ea:	eef0 6a48 	vmov.f32	s13, s16
 80186ee:	ee69 7a27 	vmul.f32	s15, s18, s15
 80186f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186f6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80186fa:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80186fe:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018702:	eef0 6a68 	vmov.f32	s13, s17
 8018706:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801870a:	ee18 2a10 	vmov	r2, s16
 801870e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018712:	fb92 f3f3 	sdiv	r3, r2, r3
 8018716:	ee18 2a90 	vmov	r2, s17
 801871a:	9329      	str	r3, [sp, #164]	; 0xa4
 801871c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801871e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018722:	932a      	str	r3, [sp, #168]	; 0xa8
 8018724:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018726:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018728:	3b01      	subs	r3, #1
 801872a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801872e:	9310      	str	r3, [sp, #64]	; 0x40
 8018730:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018732:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8018736:	bf08      	it	eq
 8018738:	4613      	moveq	r3, r2
 801873a:	9306      	str	r3, [sp, #24]
 801873c:	eef0 8a67 	vmov.f32	s17, s15
 8018740:	eeb0 8a47 	vmov.f32	s16, s14
 8018744:	e5f7      	b.n	8018336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8018746:	fb08 f000 	mul.w	r0, r8, r0
 801874a:	fb09 0303 	mla	r3, r9, r3, r0
 801874e:	e693      	b.n	8018478 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8018750:	4689      	mov	r9, r1
 8018752:	e6bb      	b.n	80184cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8018754:	f1c2 0010 	rsb	r0, r2, #16
 8018758:	fb0e f202 	mul.w	r2, lr, r2
 801875c:	fb09 2900 	mla	r9, r9, r0, r2
 8018760:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018764:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8018768:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801876c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018770:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018774:	ea42 0909 	orr.w	r9, r2, r9
 8018778:	fa1f f289 	uxth.w	r2, r9
 801877c:	e74b      	b.n	8018616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 801877e:	803a      	strh	r2, [r7, #0]
 8018780:	e784      	b.n	801868c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018782:	1c5c      	adds	r4, r3, #1
 8018784:	d182      	bne.n	801868c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018786:	429d      	cmp	r5, r3
 8018788:	dd80      	ble.n	801868c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801878a:	1c48      	adds	r0, r1, #1
 801878c:	f6ff af7e 	blt.w	801868c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018790:	9808      	ldr	r0, [sp, #32]
 8018792:	4288      	cmp	r0, r1
 8018794:	f77f af7a 	ble.w	801868c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8018798:	e9cd 3102 	strd	r3, r1, [sp, #8]
 801879c:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 80187a0:	e9cd 5000 	strd	r5, r0, [sp]
 80187a4:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80187a8:	4639      	mov	r1, r7
 80187aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80187ac:	f7ff fbf2 	bl	8017f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80187b0:	e76c      	b.n	801868c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80187b2:	bf00      	nop
 80187b4:	fffff800 	.word	0xfffff800
 80187b8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80187ba:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80187be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80187c0:	141f      	asrs	r7, r3, #16
 80187c2:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80187c6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80187c8:	141b      	asrs	r3, r3, #16
 80187ca:	fb05 3707 	mla	r7, r5, r7, r3
 80187ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80187d0:	fa1f fc82 	uxth.w	ip, r2
 80187d4:	eb03 0a07 	add.w	sl, r3, r7
 80187d8:	ea4f 110c 	mov.w	r1, ip, lsl #4
 80187dc:	f813 9007 	ldrb.w	r9, [r3, r7]
 80187e0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80187e4:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 80187e8:	b29b      	uxth	r3, r3
 80187ea:	2800      	cmp	r0, #0
 80187ec:	f000 8132 	beq.w	8018a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 80187f0:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80187f4:	940d      	str	r4, [sp, #52]	; 0x34
 80187f6:	eb0a 0b05 	add.w	fp, sl, r5
 80187fa:	fa1f fa80 	uxth.w	sl, r0
 80187fe:	fb0a fc0c 	mul.w	ip, sl, ip
 8018802:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018806:	fa1f fa8a 	uxth.w	sl, sl
 801880a:	eba1 010c 	sub.w	r1, r1, ip
 801880e:	eba3 030a 	sub.w	r3, r3, sl
 8018812:	b289      	uxth	r1, r1
 8018814:	fb08 f101 	mul.w	r1, r8, r1
 8018818:	b29b      	uxth	r3, r3
 801881a:	fb09 1303 	mla	r3, r9, r3, r1
 801881e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018820:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018824:	940e      	str	r4, [sp, #56]	; 0x38
 8018826:	fb0a 3301 	mla	r3, sl, r1, r3
 801882a:	fb0c 3304 	mla	r3, ip, r4, r3
 801882e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018832:	2b00      	cmp	r3, #0
 8018834:	f000 8100 	beq.w	8018a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8018838:	9909      	ldr	r1, [sp, #36]	; 0x24
 801883a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801883c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018840:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8018844:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018848:	f000 8109 	beq.w	8018a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 801884c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018850:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018854:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018858:	fb09 f707 	mul.w	r7, r9, r7
 801885c:	fb0a fc0c 	mul.w	ip, sl, ip
 8018860:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018864:	f107 0b20 	add.w	fp, r7, #32
 8018868:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801886c:	44cc      	add	ip, r9
 801886e:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018872:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018876:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801887a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801887e:	ea4c 0909 	orr.w	r9, ip, r9
 8018882:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018886:	884f      	ldrh	r7, [r1, #2]
 8018888:	d019      	beq.n	80188be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 801888a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801888e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018892:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018896:	fb08 f807 	mul.w	r8, r8, r7
 801889a:	fb0a fc0c 	mul.w	ip, sl, ip
 801889e:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80188a2:	f108 0b20 	add.w	fp, r8, #32
 80188a6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80188aa:	44bc      	add	ip, r7
 80188ac:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80188b0:	0a3f      	lsrs	r7, r7, #8
 80188b2:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80188b6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80188ba:	ea4c 0707 	orr.w	r7, ip, r7
 80188be:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80188c2:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80188c6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80188ca:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80188ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80188d2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80188d6:	ea4c 0909 	orr.w	r9, ip, r9
 80188da:	ea4a 0707 	orr.w	r7, sl, r7
 80188de:	2800      	cmp	r0, #0
 80188e0:	f000 80bf 	beq.w	8018a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 80188e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80188e6:	eb01 0c04 	add.w	ip, r1, r4
 80188ea:	f831 8004 	ldrh.w	r8, [r1, r4]
 80188ee:	990d      	ldr	r1, [sp, #52]	; 0x34
 80188f0:	29ff      	cmp	r1, #255	; 0xff
 80188f2:	d01a      	beq.n	801892a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 80188f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80188f6:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 80188fa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80188fe:	fb04 fb08 	mul.w	fp, r4, r8
 8018902:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018906:	fb0a fa01 	mul.w	sl, sl, r1
 801890a:	f10b 0120 	add.w	r1, fp, #32
 801890e:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8018912:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8018916:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801891a:	44d0      	add	r8, sl
 801891c:	0a09      	lsrs	r1, r1, #8
 801891e:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8018922:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018926:	ea48 0801 	orr.w	r8, r8, r1
 801892a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801892c:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8018930:	2cff      	cmp	r4, #255	; 0xff
 8018932:	d01a      	beq.n	801896a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 8018934:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8018938:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801893c:	fb04 fb01 	mul.w	fp, r4, r1
 8018940:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018944:	fb0a fa0c 	mul.w	sl, sl, ip
 8018948:	f10b 0c20 	add.w	ip, fp, #32
 801894c:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8018950:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8018954:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018958:	4451      	add	r1, sl
 801895a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801895e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018962:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018966:	ea41 010c 	orr.w	r1, r1, ip
 801896a:	fb10 fc02 	smulbb	ip, r0, r2
 801896e:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018972:	f1c0 0a10 	rsb	sl, r0, #16
 8018976:	ebaa 0a02 	sub.w	sl, sl, r2
 801897a:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 801897e:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018982:	437a      	muls	r2, r7
 8018984:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8018988:	040f      	lsls	r7, r1, #16
 801898a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801898e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8018992:	fb09 220a 	mla	r2, r9, sl, r2
 8018996:	ea4b 0808 	orr.w	r8, fp, r8
 801899a:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 801899e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80189a2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80189a6:	fb00 2208 	mla	r2, r0, r8, r2
 80189aa:	4339      	orrs	r1, r7
 80189ac:	fb0c 2201 	mla	r2, ip, r1, r2
 80189b0:	ea4f 5952 	mov.w	r9, r2, lsr #21
 80189b4:	0952      	lsrs	r2, r2, #5
 80189b6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80189ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80189be:	ea49 0202 	orr.w	r2, r9, r2
 80189c2:	2bff      	cmp	r3, #255	; 0xff
 80189c4:	b292      	uxth	r2, r2
 80189c6:	d05d      	beq.n	8018a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 80189c8:	f8be 8000 	ldrh.w	r8, [lr]
 80189cc:	4c31      	ldr	r4, [pc, #196]	; (8018a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 80189ce:	43db      	mvns	r3, r3
 80189d0:	ea4f 2028 	mov.w	r0, r8, asr #8
 80189d4:	fa5f fc83 	uxtb.w	ip, r3
 80189d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80189dc:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80189e0:	fb00 f00c 	mul.w	r0, r0, ip
 80189e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80189e8:	fb07 f10c 	mul.w	r1, r7, ip
 80189ec:	1c47      	adds	r7, r0, #1
 80189ee:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80189f2:	1217      	asrs	r7, r2, #8
 80189f4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80189f8:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 80189fc:	1c4f      	adds	r7, r1, #1
 80189fe:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8018a02:	10d1      	asrs	r1, r2, #3
 8018a04:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018a08:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8018a0c:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8018a10:	b2db      	uxtb	r3, r3
 8018a12:	00c9      	lsls	r1, r1, #3
 8018a14:	fb03 f30c 	mul.w	r3, r3, ip
 8018a18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018a1c:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018a20:	4308      	orrs	r0, r1
 8018a22:	00d2      	lsls	r2, r2, #3
 8018a24:	1c59      	adds	r1, r3, #1
 8018a26:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018a2a:	b2d2      	uxtb	r2, r2
 8018a2c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018a30:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8018a34:	f8ae 0000 	strh.w	r0, [lr]
 8018a38:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018a3a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018a3c:	4413      	add	r3, r2
 8018a3e:	9327      	str	r3, [sp, #156]	; 0x9c
 8018a40:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018a42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a44:	441a      	add	r2, r3
 8018a46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018a48:	9228      	str	r2, [sp, #160]	; 0xa0
 8018a4a:	3b01      	subs	r3, #1
 8018a4c:	f10e 0e02 	add.w	lr, lr, #2
 8018a50:	9311      	str	r3, [sp, #68]	; 0x44
 8018a52:	e4a5      	b.n	80183a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8018a54:	fb08 f101 	mul.w	r1, r8, r1
 8018a58:	fb09 1303 	mla	r3, r9, r3, r1
 8018a5c:	e6e7      	b.n	801882e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8018a5e:	46b9      	mov	r9, r7
 8018a60:	e70f      	b.n	8018882 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8018a62:	f1c2 0110 	rsb	r1, r2, #16
 8018a66:	437a      	muls	r2, r7
 8018a68:	fb09 2901 	mla	r9, r9, r1, r2
 8018a6c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018a70:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018a74:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018a78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018a7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018a80:	4302      	orrs	r2, r0
 8018a82:	e79e      	b.n	80189c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8018a84:	f8ae 2000 	strh.w	r2, [lr]
 8018a88:	e7d6      	b.n	8018a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8018a8a:	b015      	add	sp, #84	; 0x54
 8018a8c:	ecbd 8b08 	vpop	{d8-d11}
 8018a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a94:	fffff800 	.word	0xfffff800

08018a98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018a98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018a9c:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018aa0:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018aa4:	f1bc 0f00 	cmp.w	ip, #0
 8018aa8:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018aac:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018ab0:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018ab4:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8018ab8:	8808      	ldrh	r0, [r1, #0]
 8018aba:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018abe:	db2f      	blt.n	8018b20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018ac0:	45e2      	cmp	sl, ip
 8018ac2:	dd2d      	ble.n	8018b20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018ac4:	2c00      	cmp	r4, #0
 8018ac6:	db29      	blt.n	8018b1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018ac8:	42a3      	cmp	r3, r4
 8018aca:	dd27      	ble.n	8018b1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018acc:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018ad0:	1c62      	adds	r2, r4, #1
 8018ad2:	d428      	bmi.n	8018b26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018ad4:	4293      	cmp	r3, r2
 8018ad6:	dd26      	ble.n	8018b26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018ad8:	b32f      	cbz	r7, 8018b26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018ada:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018ade:	f11c 0c01 	adds.w	ip, ip, #1
 8018ae2:	d424      	bmi.n	8018b2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018ae4:	45e2      	cmp	sl, ip
 8018ae6:	dd22      	ble.n	8018b2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018ae8:	2e00      	cmp	r6, #0
 8018aea:	f000 809c 	beq.w	8018c26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8018aee:	2c00      	cmp	r4, #0
 8018af0:	db1b      	blt.n	8018b2a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018af2:	42a3      	cmp	r3, r4
 8018af4:	dd19      	ble.n	8018b2a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018af6:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8018afa:	3401      	adds	r4, #1
 8018afc:	d41a      	bmi.n	8018b34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018afe:	42a3      	cmp	r3, r4
 8018b00:	dd18      	ble.n	8018b34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018b02:	b1cf      	cbz	r7, 8018b38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8018b04:	3301      	adds	r3, #1
 8018b06:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8018b0a:	2f0f      	cmp	r7, #15
 8018b0c:	d915      	bls.n	8018b3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8018b0e:	4b49      	ldr	r3, [pc, #292]	; (8018c34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8018b10:	4a49      	ldr	r2, [pc, #292]	; (8018c38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8018b12:	484a      	ldr	r0, [pc, #296]	; (8018c3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8018b14:	f240 3155 	movw	r1, #853	; 0x355
 8018b18:	f002 ff38 	bl	801b98c <__assert_func>
 8018b1c:	4681      	mov	r9, r0
 8018b1e:	e7d7      	b.n	8018ad0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8018b20:	4686      	mov	lr, r0
 8018b22:	4681      	mov	r9, r0
 8018b24:	e7db      	b.n	8018ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018b26:	4686      	mov	lr, r0
 8018b28:	e7d9      	b.n	8018ade <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018b2a:	4684      	mov	ip, r0
 8018b2c:	e7e5      	b.n	8018afa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8018b2e:	4603      	mov	r3, r0
 8018b30:	4684      	mov	ip, r0
 8018b32:	e7ea      	b.n	8018b0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018b34:	4603      	mov	r3, r0
 8018b36:	e7e8      	b.n	8018b0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018b38:	4603      	mov	r3, r0
 8018b3a:	2e0f      	cmp	r6, #15
 8018b3c:	d8e7      	bhi.n	8018b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018b3e:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018b42:	fb17 f806 	smulbb	r8, r7, r6
 8018b46:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018b4a:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018b4e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018b52:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018b56:	ea44 0909 	orr.w	r9, r4, r9
 8018b5a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018b5e:	f1c6 0410 	rsb	r4, r6, #16
 8018b62:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018b66:	1be4      	subs	r4, r4, r7
 8018b68:	041a      	lsls	r2, r3, #16
 8018b6a:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018b6e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018b72:	fb07 fe0e 	mul.w	lr, r7, lr
 8018b76:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b7a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018b7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018b82:	fb04 e409 	mla	r4, r4, r9, lr
 8018b86:	4313      	orrs	r3, r2
 8018b88:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018b8c:	fb08 4303 	mla	r3, r8, r3, r4
 8018b90:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b94:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8018b98:	4322      	orrs	r2, r4
 8018b9a:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018b9e:	fb06 3202 	mla	r2, r6, r2, r3
 8018ba2:	0d53      	lsrs	r3, r2, #21
 8018ba4:	0952      	lsrs	r2, r2, #5
 8018ba6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018baa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018bae:	431a      	orrs	r2, r3
 8018bb0:	b293      	uxth	r3, r2
 8018bb2:	b2af      	uxth	r7, r5
 8018bb4:	1202      	asrs	r2, r0, #8
 8018bb6:	43ed      	mvns	r5, r5
 8018bb8:	b2ed      	uxtb	r5, r5
 8018bba:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018bbe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018bc2:	fb12 f205 	smulbb	r2, r2, r5
 8018bc6:	10c6      	asrs	r6, r0, #3
 8018bc8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018bcc:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018bd0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018bd4:	10da      	asrs	r2, r3, #3
 8018bd6:	fb16 f605 	smulbb	r6, r6, r5
 8018bda:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018bde:	fb02 6207 	mla	r2, r2, r7, r6
 8018be2:	b296      	uxth	r6, r2
 8018be4:	00c2      	lsls	r2, r0, #3
 8018be6:	00dc      	lsls	r4, r3, #3
 8018be8:	b2d2      	uxtb	r2, r2
 8018bea:	b2e4      	uxtb	r4, r4
 8018bec:	fb12 f205 	smulbb	r2, r2, r5
 8018bf0:	fb04 2207 	mla	r2, r4, r7, r2
 8018bf4:	fa1f fc8c 	uxth.w	ip, ip
 8018bf8:	b292      	uxth	r2, r2
 8018bfa:	f10c 0301 	add.w	r3, ip, #1
 8018bfe:	1c50      	adds	r0, r2, #1
 8018c00:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8018c04:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018c08:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018c0c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018c10:	4313      	orrs	r3, r2
 8018c12:	1c72      	adds	r2, r6, #1
 8018c14:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018c18:	0952      	lsrs	r2, r2, #5
 8018c1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018c1e:	4313      	orrs	r3, r2
 8018c20:	800b      	strh	r3, [r1, #0]
 8018c22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018c26:	2f0f      	cmp	r7, #15
 8018c28:	f63f af71 	bhi.w	8018b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018c2c:	4603      	mov	r3, r0
 8018c2e:	4684      	mov	ip, r0
 8018c30:	e785      	b.n	8018b3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8018c32:	bf00      	nop
 8018c34:	0802112b 	.word	0x0802112b
 8018c38:	08021732 	.word	0x08021732
 8018c3c:	080211b3 	.word	0x080211b3

08018c40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c44:	ed2d 8b08 	vpush	{d8-d11}
 8018c48:	b095      	sub	sp, #84	; 0x54
 8018c4a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018c4e:	9306      	str	r3, [sp, #24]
 8018c50:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8018c54:	9212      	str	r2, [sp, #72]	; 0x48
 8018c56:	9307      	str	r3, [sp, #28]
 8018c58:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018c5a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8018c5e:	930c      	str	r3, [sp, #48]	; 0x30
 8018c60:	910b      	str	r1, [sp, #44]	; 0x2c
 8018c62:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8018c66:	9013      	str	r0, [sp, #76]	; 0x4c
 8018c68:	6850      	ldr	r0, [r2, #4]
 8018c6a:	6812      	ldr	r2, [r2, #0]
 8018c6c:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8018c70:	fb00 1303 	mla	r3, r0, r3, r1
 8018c74:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018c78:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018c7a:	681b      	ldr	r3, [r3, #0]
 8018c7c:	9309      	str	r3, [sp, #36]	; 0x24
 8018c7e:	007b      	lsls	r3, r7, #1
 8018c80:	930a      	str	r3, [sp, #40]	; 0x28
 8018c82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018c84:	43db      	mvns	r3, r3
 8018c86:	b2db      	uxtb	r3, r3
 8018c88:	eeb0 aa40 	vmov.f32	s20, s0
 8018c8c:	eef0 9a60 	vmov.f32	s19, s1
 8018c90:	eeb0 9a41 	vmov.f32	s18, s2
 8018c94:	eeb0 8a62 	vmov.f32	s16, s5
 8018c98:	eef0 8a43 	vmov.f32	s17, s6
 8018c9c:	eef0 ba44 	vmov.f32	s23, s8
 8018ca0:	eeb0 ba64 	vmov.f32	s22, s9
 8018ca4:	eef0 aa45 	vmov.f32	s21, s10
 8018ca8:	9308      	str	r3, [sp, #32]
 8018caa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018cac:	2b00      	cmp	r3, #0
 8018cae:	dc03      	bgt.n	8018cb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8018cb0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018cb2:	2b00      	cmp	r3, #0
 8018cb4:	f340 81f3 	ble.w	801909e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8018cb8:	9b06      	ldr	r3, [sp, #24]
 8018cba:	2b00      	cmp	r3, #0
 8018cbc:	f340 80fa 	ble.w	8018eb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8018cc0:	1422      	asrs	r2, r4, #16
 8018cc2:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018cc6:	d42b      	bmi.n	8018d20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8018cc8:	1c51      	adds	r1, r2, #1
 8018cca:	428f      	cmp	r7, r1
 8018ccc:	dd2b      	ble.n	8018d26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018cce:	2b00      	cmp	r3, #0
 8018cd0:	db29      	blt.n	8018d26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018cd2:	9807      	ldr	r0, [sp, #28]
 8018cd4:	1c59      	adds	r1, r3, #1
 8018cd6:	4288      	cmp	r0, r1
 8018cd8:	dd25      	ble.n	8018d26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8018cda:	9b06      	ldr	r3, [sp, #24]
 8018cdc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018cde:	3b01      	subs	r3, #1
 8018ce0:	fb02 4203 	mla	r2, r2, r3, r4
 8018ce4:	1412      	asrs	r2, r2, #16
 8018ce6:	d428      	bmi.n	8018d3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018ce8:	3201      	adds	r2, #1
 8018cea:	4297      	cmp	r7, r2
 8018cec:	dd25      	ble.n	8018d3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018cee:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018cf0:	fb02 6303 	mla	r3, r2, r3, r6
 8018cf4:	141b      	asrs	r3, r3, #16
 8018cf6:	d420      	bmi.n	8018d3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018cf8:	9a07      	ldr	r2, [sp, #28]
 8018cfa:	3301      	adds	r3, #1
 8018cfc:	429a      	cmp	r2, r3
 8018cfe:	dd1c      	ble.n	8018d3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018d00:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8018d04:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 8018d08:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8018d0c:	f1b8 0f00 	cmp.w	r8, #0
 8018d10:	f300 8129 	bgt.w	8018f66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8018d14:	9b06      	ldr	r3, [sp, #24]
 8018d16:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018d1a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8018d1e:	e0cb      	b.n	8018eb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8018d20:	1c51      	adds	r1, r2, #1
 8018d22:	f040 80bd 	bne.w	8018ea0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018d26:	42ba      	cmp	r2, r7
 8018d28:	f280 80ba 	bge.w	8018ea0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018d2c:	1c5a      	adds	r2, r3, #1
 8018d2e:	f2c0 80b7 	blt.w	8018ea0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018d32:	9a07      	ldr	r2, [sp, #28]
 8018d34:	4293      	cmp	r3, r2
 8018d36:	f280 80b3 	bge.w	8018ea0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018d3a:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018d3e:	46c8      	mov	r8, r9
 8018d40:	f1bb 0f00 	cmp.w	fp, #0
 8018d44:	dde6      	ble.n	8018d14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8018d46:	1421      	asrs	r1, r4, #16
 8018d48:	ea4f 4226 	mov.w	r2, r6, asr #16
 8018d4c:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018d50:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018d54:	f100 80ef 	bmi.w	8018f36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8018d58:	f101 0c01 	add.w	ip, r1, #1
 8018d5c:	4567      	cmp	r7, ip
 8018d5e:	f340 80ec 	ble.w	8018f3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8018d62:	2a00      	cmp	r2, #0
 8018d64:	f2c0 80e9 	blt.w	8018f3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8018d68:	9d07      	ldr	r5, [sp, #28]
 8018d6a:	f102 0c01 	add.w	ip, r2, #1
 8018d6e:	4565      	cmp	r5, ip
 8018d70:	f340 80e3 	ble.w	8018f3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8018d74:	fb02 1207 	mla	r2, r2, r7, r1
 8018d78:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018d7a:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8018d7e:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8018d82:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8018d86:	b138      	cbz	r0, 8018d98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 8018d88:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018d8a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018d8c:	4472      	add	r2, lr
 8018d8e:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8018d92:	8852      	ldrh	r2, [r2, #2]
 8018d94:	950e      	str	r5, [sp, #56]	; 0x38
 8018d96:	920f      	str	r2, [sp, #60]	; 0x3c
 8018d98:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8018d9c:	fb13 f200 	smulbb	r2, r3, r0
 8018da0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018da4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018da8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018dac:	10d2      	asrs	r2, r2, #3
 8018dae:	ea4e 0c0c 	orr.w	ip, lr, ip
 8018db2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018db6:	f1c0 0e10 	rsb	lr, r0, #16
 8018dba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018dbe:	ebae 0e03 	sub.w	lr, lr, r3
 8018dc2:	ea4a 0101 	orr.w	r1, sl, r1
 8018dc6:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018dca:	4359      	muls	r1, r3
 8018dcc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018dce:	9d08      	ldr	r5, [sp, #32]
 8018dd0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018dd4:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8018dd8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018ddc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018de0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018de4:	ea4c 0c03 	orr.w	ip, ip, r3
 8018de8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018dea:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018dec:	041b      	lsls	r3, r3, #16
 8018dee:	fb02 ec0c 	mla	ip, r2, ip, lr
 8018df2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018df6:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018dfa:	ea43 030e 	orr.w	r3, r3, lr
 8018dfe:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018e02:	fb02 c203 	mla	r2, r2, r3, ip
 8018e06:	0d53      	lsrs	r3, r2, #21
 8018e08:	0952      	lsrs	r2, r2, #5
 8018e0a:	f8b8 c000 	ldrh.w	ip, [r8]
 8018e0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018e12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018e16:	431a      	orrs	r2, r3
 8018e18:	b292      	uxth	r2, r2
 8018e1a:	ea4f 212c 	mov.w	r1, ip, asr #8
 8018e1e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8018e22:	1210      	asrs	r0, r2, #8
 8018e24:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018e28:	fb11 f105 	smulbb	r1, r1, r5
 8018e2c:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018e30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018e34:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018e38:	fb00 1003 	mla	r0, r0, r3, r1
 8018e3c:	fa5f fc8c 	uxtb.w	ip, ip
 8018e40:	10d1      	asrs	r1, r2, #3
 8018e42:	00d2      	lsls	r2, r2, #3
 8018e44:	fb1c fc05 	smulbb	ip, ip, r5
 8018e48:	b2d2      	uxtb	r2, r2
 8018e4a:	fb02 c203 	mla	r2, r2, r3, ip
 8018e4e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018e52:	b280      	uxth	r0, r0
 8018e54:	b292      	uxth	r2, r2
 8018e56:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018e5a:	fb1e fe05 	smulbb	lr, lr, r5
 8018e5e:	fb01 e103 	mla	r1, r1, r3, lr
 8018e62:	f102 0c01 	add.w	ip, r2, #1
 8018e66:	1c43      	adds	r3, r0, #1
 8018e68:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018e6c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8018e70:	b289      	uxth	r1, r1
 8018e72:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018e76:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018e7a:	4313      	orrs	r3, r2
 8018e7c:	1c4a      	adds	r2, r1, #1
 8018e7e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018e82:	0949      	lsrs	r1, r1, #5
 8018e84:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e88:	430b      	orrs	r3, r1
 8018e8a:	f8a8 3000 	strh.w	r3, [r8]
 8018e8e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018e90:	441c      	add	r4, r3
 8018e92:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018e94:	f108 0802 	add.w	r8, r8, #2
 8018e98:	441e      	add	r6, r3
 8018e9a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018e9e:	e74f      	b.n	8018d40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8018ea0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018ea2:	441c      	add	r4, r3
 8018ea4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018ea6:	441e      	add	r6, r3
 8018ea8:	9b06      	ldr	r3, [sp, #24]
 8018eaa:	3b01      	subs	r3, #1
 8018eac:	9306      	str	r3, [sp, #24]
 8018eae:	f109 0902 	add.w	r9, r9, #2
 8018eb2:	e701      	b.n	8018cb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8018eb4:	f47f af11 	bne.w	8018cda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8018eb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018eba:	2b00      	cmp	r3, #0
 8018ebc:	f340 80ef 	ble.w	801909e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8018ec0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018ec4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018ec8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018ecc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018ece:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018ed2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018ed6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018eda:	eef0 6a48 	vmov.f32	s13, s16
 8018ede:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018ee2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ee6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018eea:	ee16 4a90 	vmov	r4, s13
 8018eee:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018ef2:	eef0 6a68 	vmov.f32	s13, s17
 8018ef6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018efa:	ee18 2a10 	vmov	r2, s16
 8018efe:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018f02:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f06:	ee18 2a90 	vmov	r2, s17
 8018f0a:	9329      	str	r3, [sp, #164]	; 0xa4
 8018f0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018f0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f12:	932a      	str	r3, [sp, #168]	; 0xa8
 8018f14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018f16:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018f18:	3b01      	subs	r3, #1
 8018f1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f1e:	930b      	str	r3, [sp, #44]	; 0x2c
 8018f20:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018f22:	bf08      	it	eq
 8018f24:	4613      	moveq	r3, r2
 8018f26:	ee16 6a90 	vmov	r6, s13
 8018f2a:	9306      	str	r3, [sp, #24]
 8018f2c:	eef0 8a67 	vmov.f32	s17, s15
 8018f30:	eeb0 8a47 	vmov.f32	s16, s14
 8018f34:	e6b9      	b.n	8018caa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8018f36:	1c4d      	adds	r5, r1, #1
 8018f38:	d1a9      	bne.n	8018e8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018f3a:	428f      	cmp	r7, r1
 8018f3c:	dda7      	ble.n	8018e8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018f3e:	1c55      	adds	r5, r2, #1
 8018f40:	dba5      	blt.n	8018e8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018f42:	9d07      	ldr	r5, [sp, #28]
 8018f44:	4295      	cmp	r5, r2
 8018f46:	dda2      	ble.n	8018e8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018f48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018f4a:	9101      	str	r1, [sp, #4]
 8018f4c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8018f50:	9b07      	ldr	r3, [sp, #28]
 8018f52:	9300      	str	r3, [sp, #0]
 8018f54:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8018f58:	463b      	mov	r3, r7
 8018f5a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018f5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018f5e:	4641      	mov	r1, r8
 8018f60:	f7ff fd9a 	bl	8018a98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018f64:	e793      	b.n	8018e8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018f66:	1422      	asrs	r2, r4, #16
 8018f68:	1431      	asrs	r1, r6, #16
 8018f6a:	fb07 2101 	mla	r1, r7, r1, r2
 8018f6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018f70:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018f72:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8018f76:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018f7a:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8018f7e:	8851      	ldrh	r1, [r2, #2]
 8018f80:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018f84:	f1be 0f00 	cmp.w	lr, #0
 8018f88:	d006      	beq.n	8018f98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 8018f8a:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018f8c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018f8e:	1810      	adds	r0, r2, r0
 8018f90:	5b52      	ldrh	r2, [r2, r5]
 8018f92:	9210      	str	r2, [sp, #64]	; 0x40
 8018f94:	8842      	ldrh	r2, [r0, #2]
 8018f96:	9211      	str	r2, [sp, #68]	; 0x44
 8018f98:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018f9c:	fb13 f20e 	smulbb	r2, r3, lr
 8018fa0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018fa4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018fa8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018fac:	10d2      	asrs	r2, r2, #3
 8018fae:	ea40 000c 	orr.w	r0, r0, ip
 8018fb2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018fb6:	f1ce 0c10 	rsb	ip, lr, #16
 8018fba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018fbe:	ebac 0c03 	sub.w	ip, ip, r3
 8018fc2:	ea4b 0101 	orr.w	r1, fp, r1
 8018fc6:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018fca:	4359      	muls	r1, r3
 8018fcc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018fce:	9d08      	ldr	r5, [sp, #32]
 8018fd0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018fd4:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018fd8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018fdc:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8018fe0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018fe2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018fe6:	ea4b 0000 	orr.w	r0, fp, r0
 8018fea:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018fee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018ff2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018ff6:	fb02 c000 	mla	r0, r2, r0, ip
 8018ffa:	ea4b 0b03 	orr.w	fp, fp, r3
 8018ffe:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8019002:	fb02 0b0b 	mla	fp, r2, fp, r0
 8019006:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019008:	ea4f 515b 	mov.w	r1, fp, lsr #21
 801900c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019010:	8812      	ldrh	r2, [r2, #0]
 8019012:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019016:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801901a:	ea41 0b0b 	orr.w	fp, r1, fp
 801901e:	fa1f f38b 	uxth.w	r3, fp
 8019022:	1211      	asrs	r1, r2, #8
 8019024:	1218      	asrs	r0, r3, #8
 8019026:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801902a:	fb11 f105 	smulbb	r1, r1, r5
 801902e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8019032:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019036:	00d2      	lsls	r2, r2, #3
 8019038:	fb00 100a 	mla	r0, r0, sl, r1
 801903c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019040:	10d9      	asrs	r1, r3, #3
 8019042:	b2d2      	uxtb	r2, r2
 8019044:	00db      	lsls	r3, r3, #3
 8019046:	fb1c fc05 	smulbb	ip, ip, r5
 801904a:	fb12 f205 	smulbb	r2, r2, r5
 801904e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019052:	b2db      	uxtb	r3, r3
 8019054:	b280      	uxth	r0, r0
 8019056:	fb01 c10a 	mla	r1, r1, sl, ip
 801905a:	fb03 230a 	mla	r3, r3, sl, r2
 801905e:	b29b      	uxth	r3, r3
 8019060:	b289      	uxth	r1, r1
 8019062:	1c42      	adds	r2, r0, #1
 8019064:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019068:	f101 0c01 	add.w	ip, r1, #1
 801906c:	1c5a      	adds	r2, r3, #1
 801906e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019072:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8019076:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801907a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801907e:	0949      	lsrs	r1, r1, #5
 8019080:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019082:	4310      	orrs	r0, r2
 8019084:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019088:	4308      	orrs	r0, r1
 801908a:	f823 0b02 	strh.w	r0, [r3], #2
 801908e:	930d      	str	r3, [sp, #52]	; 0x34
 8019090:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019092:	441c      	add	r4, r3
 8019094:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019096:	f108 38ff 	add.w	r8, r8, #4294967295
 801909a:	441e      	add	r6, r3
 801909c:	e636      	b.n	8018d0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 801909e:	b015      	add	sp, #84	; 0x54
 80190a0:	ecbd 8b08 	vpop	{d8-d11}
 80190a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080190a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80190a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80190ac:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80190b0:	fb06 5c03 	mla	ip, r6, r3, r5
 80190b4:	2e00      	cmp	r6, #0
 80190b6:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 80190ba:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 80190be:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 80190c2:	8808      	ldrh	r0, [r1, #0]
 80190c4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80190c8:	db2e      	blt.n	8019128 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80190ca:	45b0      	cmp	r8, r6
 80190cc:	dd2c      	ble.n	8019128 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80190ce:	2d00      	cmp	r5, #0
 80190d0:	db28      	blt.n	8019124 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80190d2:	42ab      	cmp	r3, r5
 80190d4:	dd26      	ble.n	8019124 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80190d6:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80190da:	1c6a      	adds	r2, r5, #1
 80190dc:	d427      	bmi.n	801912e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80190de:	4293      	cmp	r3, r2
 80190e0:	dd25      	ble.n	801912e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80190e2:	b324      	cbz	r4, 801912e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80190e4:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80190e8:	3601      	adds	r6, #1
 80190ea:	d424      	bmi.n	8019136 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80190ec:	45b0      	cmp	r8, r6
 80190ee:	dd22      	ble.n	8019136 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80190f0:	b31f      	cbz	r7, 801913a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80190f2:	2d00      	cmp	r5, #0
 80190f4:	db1d      	blt.n	8019132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80190f6:	42ab      	cmp	r3, r5
 80190f8:	dd1b      	ble.n	8019132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80190fa:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 80190fe:	3501      	adds	r5, #1
 8019100:	d405      	bmi.n	801910e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019102:	42ab      	cmp	r3, r5
 8019104:	dd03      	ble.n	801910e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019106:	b124      	cbz	r4, 8019112 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8019108:	3301      	adds	r3, #1
 801910a:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801910e:	2c0f      	cmp	r4, #15
 8019110:	d801      	bhi.n	8019116 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019112:	2f0f      	cmp	r7, #15
 8019114:	d914      	bls.n	8019140 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8019116:	4b27      	ldr	r3, [pc, #156]	; (80191b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8019118:	4a27      	ldr	r2, [pc, #156]	; (80191b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801911a:	4828      	ldr	r0, [pc, #160]	; (80191bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 801911c:	f240 3155 	movw	r1, #853	; 0x355
 8019120:	f002 fc34 	bl	801b98c <__assert_func>
 8019124:	4684      	mov	ip, r0
 8019126:	e7d8      	b.n	80190da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8019128:	4602      	mov	r2, r0
 801912a:	4684      	mov	ip, r0
 801912c:	e7dc      	b.n	80190e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801912e:	4602      	mov	r2, r0
 8019130:	e7da      	b.n	80190e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8019132:	4606      	mov	r6, r0
 8019134:	e7e3      	b.n	80190fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8019136:	4606      	mov	r6, r0
 8019138:	e7e9      	b.n	801910e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801913a:	2c0f      	cmp	r4, #15
 801913c:	d8eb      	bhi.n	8019116 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801913e:	4606      	mov	r6, r0
 8019140:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8019144:	fb14 f307 	smulbb	r3, r4, r7
 8019148:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801914c:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8019150:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019154:	10db      	asrs	r3, r3, #3
 8019156:	ea45 0c0c 	orr.w	ip, r5, ip
 801915a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801915e:	f1c7 0510 	rsb	r5, r7, #16
 8019162:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019166:	1b2d      	subs	r5, r5, r4
 8019168:	ea4e 0202 	orr.w	r2, lr, r2
 801916c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8019170:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019174:	4354      	muls	r4, r2
 8019176:	fb05 450c 	mla	r5, r5, ip, r4
 801917a:	0404      	lsls	r4, r0, #16
 801917c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019180:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019184:	4320      	orrs	r0, r4
 8019186:	fb03 5400 	mla	r4, r3, r0, r5
 801918a:	0430      	lsls	r0, r6, #16
 801918c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019190:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8019194:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8019198:	4330      	orrs	r0, r6
 801919a:	fb07 4000 	mla	r0, r7, r0, r4
 801919e:	0d43      	lsrs	r3, r0, #21
 80191a0:	0940      	lsrs	r0, r0, #5
 80191a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80191a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80191aa:	4318      	orrs	r0, r3
 80191ac:	8008      	strh	r0, [r1, #0]
 80191ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80191b2:	bf00      	nop
 80191b4:	0802112b 	.word	0x0802112b
 80191b8:	08021732 	.word	0x08021732
 80191bc:	080211b3 	.word	0x080211b3

080191c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80191c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191c4:	ed2d 8b0a 	vpush	{d8-d12}
 80191c8:	b093      	sub	sp, #76	; 0x4c
 80191ca:	461d      	mov	r5, r3
 80191cc:	9210      	str	r2, [sp, #64]	; 0x40
 80191ce:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80191d0:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 80191d4:	9208      	str	r2, [sp, #32]
 80191d6:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 80191da:	910b      	str	r1, [sp, #44]	; 0x2c
 80191dc:	6859      	ldr	r1, [r3, #4]
 80191de:	681b      	ldr	r3, [r3, #0]
 80191e0:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 80191e4:	9011      	str	r0, [sp, #68]	; 0x44
 80191e6:	fb01 2707 	mla	r7, r1, r7, r2
 80191ea:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80191ee:	9307      	str	r3, [sp, #28]
 80191f0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80191f2:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80191f6:	681b      	ldr	r3, [r3, #0]
 80191f8:	9309      	str	r3, [sp, #36]	; 0x24
 80191fa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80191fe:	eeb0 aa40 	vmov.f32	s20, s0
 8019202:	eef0 9a60 	vmov.f32	s19, s1
 8019206:	eeb0 9a41 	vmov.f32	s18, s2
 801920a:	eeb0 8a62 	vmov.f32	s16, s5
 801920e:	eef0 8a43 	vmov.f32	s17, s6
 8019212:	eeb0 ca44 	vmov.f32	s24, s8
 8019216:	eef0 ba64 	vmov.f32	s23, s9
 801921a:	eeb0 ba45 	vmov.f32	s22, s10
 801921e:	930a      	str	r3, [sp, #40]	; 0x28
 8019220:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8019224:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019226:	2b00      	cmp	r3, #0
 8019228:	dc03      	bgt.n	8019232 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 801922a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801922c:	2b00      	cmp	r3, #0
 801922e:	f340 816c 	ble.w	801950a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8019232:	2d00      	cmp	r5, #0
 8019234:	f340 80b6 	ble.w	80193a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8019238:	1422      	asrs	r2, r4, #16
 801923a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801923e:	d428      	bmi.n	8019292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8019240:	1c51      	adds	r1, r2, #1
 8019242:	4588      	cmp	r8, r1
 8019244:	dd27      	ble.n	8019296 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019246:	2b00      	cmp	r3, #0
 8019248:	db25      	blt.n	8019296 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801924a:	9808      	ldr	r0, [sp, #32]
 801924c:	1c59      	adds	r1, r3, #1
 801924e:	4288      	cmp	r0, r1
 8019250:	dd21      	ble.n	8019296 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019252:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019254:	1e6b      	subs	r3, r5, #1
 8019256:	fb02 4203 	mla	r2, r2, r3, r4
 801925a:	1412      	asrs	r2, r2, #16
 801925c:	d422      	bmi.n	80192a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801925e:	3201      	adds	r2, #1
 8019260:	4590      	cmp	r8, r2
 8019262:	dd1f      	ble.n	80192a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019264:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019266:	fb02 6303 	mla	r3, r2, r3, r6
 801926a:	141b      	asrs	r3, r3, #16
 801926c:	d41a      	bmi.n	80192a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801926e:	9a08      	ldr	r2, [sp, #32]
 8019270:	3301      	adds	r3, #1
 8019272:	429a      	cmp	r2, r3
 8019274:	dd16      	ble.n	80192a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019276:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801927a:	46a9      	mov	r9, r5
 801927c:	f1b9 0f00 	cmp.w	r9, #0
 8019280:	f300 80e4 	bgt.w	801944c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8019284:	9b07      	ldr	r3, [sp, #28]
 8019286:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801928a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801928e:	9307      	str	r3, [sp, #28]
 8019290:	e08a      	b.n	80193a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8019292:	1c51      	adds	r1, r2, #1
 8019294:	d17d      	bne.n	8019392 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8019296:	4542      	cmp	r2, r8
 8019298:	da7b      	bge.n	8019392 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801929a:	1c5a      	adds	r2, r3, #1
 801929c:	db79      	blt.n	8019392 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801929e:	9a08      	ldr	r2, [sp, #32]
 80192a0:	4293      	cmp	r3, r2
 80192a2:	da76      	bge.n	8019392 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 80192a4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80192a8:	46aa      	mov	sl, r5
 80192aa:	f1ba 0f00 	cmp.w	sl, #0
 80192ae:	dde9      	ble.n	8019284 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 80192b0:	1421      	asrs	r1, r4, #16
 80192b2:	ea4f 4226 	mov.w	r2, r6, asr #16
 80192b6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80192ba:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80192be:	f100 80b0 	bmi.w	8019422 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 80192c2:	f101 0c01 	add.w	ip, r1, #1
 80192c6:	45e0      	cmp	r8, ip
 80192c8:	f340 80ad 	ble.w	8019426 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80192cc:	2a00      	cmp	r2, #0
 80192ce:	f2c0 80aa 	blt.w	8019426 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80192d2:	9f08      	ldr	r7, [sp, #32]
 80192d4:	f102 0c01 	add.w	ip, r2, #1
 80192d8:	4567      	cmp	r7, ip
 80192da:	f340 80a4 	ble.w	8019426 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80192de:	fb02 1208 	mla	r2, r2, r8, r1
 80192e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80192e4:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 80192e8:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 80192ec:	f8be 1002 	ldrh.w	r1, [lr, #2]
 80192f0:	b138      	cbz	r0, 8019302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 80192f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80192f4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80192f6:	4472      	add	r2, lr
 80192f8:	f83e 7007 	ldrh.w	r7, [lr, r7]
 80192fc:	8852      	ldrh	r2, [r2, #2]
 80192fe:	970c      	str	r7, [sp, #48]	; 0x30
 8019300:	920d      	str	r2, [sp, #52]	; 0x34
 8019302:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8019306:	fb13 f200 	smulbb	r2, r3, r0
 801930a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801930e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019312:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019316:	10d2      	asrs	r2, r2, #3
 8019318:	ea4e 0c0c 	orr.w	ip, lr, ip
 801931c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019320:	f1c0 0e10 	rsb	lr, r0, #16
 8019324:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019328:	ebae 0e03 	sub.w	lr, lr, r3
 801932c:	ea4b 0101 	orr.w	r1, fp, r1
 8019330:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8019334:	4359      	muls	r1, r3
 8019336:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019338:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801933c:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8019340:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019344:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019348:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801934c:	ea4c 0c03 	orr.w	ip, ip, r3
 8019350:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019352:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019354:	041b      	lsls	r3, r3, #16
 8019356:	fb02 ec0c 	mla	ip, r2, ip, lr
 801935a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801935e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8019362:	ea43 030e 	orr.w	r3, r3, lr
 8019366:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801936a:	fb02 c203 	mla	r2, r2, r3, ip
 801936e:	0d53      	lsrs	r3, r2, #21
 8019370:	0952      	lsrs	r2, r2, #5
 8019372:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019376:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801937a:	431a      	orrs	r2, r3
 801937c:	f8a9 2000 	strh.w	r2, [r9]
 8019380:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019382:	441c      	add	r4, r3
 8019384:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019386:	f109 0902 	add.w	r9, r9, #2
 801938a:	441e      	add	r6, r3
 801938c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019390:	e78b      	b.n	80192aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8019392:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019394:	441c      	add	r4, r3
 8019396:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019398:	441e      	add	r6, r3
 801939a:	9b07      	ldr	r3, [sp, #28]
 801939c:	3302      	adds	r3, #2
 801939e:	3d01      	subs	r5, #1
 80193a0:	9307      	str	r3, [sp, #28]
 80193a2:	e746      	b.n	8019232 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80193a4:	f47f af55 	bne.w	8019252 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80193a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80193aa:	2b00      	cmp	r3, #0
 80193ac:	f340 80ad 	ble.w	801950a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80193b0:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80193b4:	ee79 9aab 	vadd.f32	s19, s19, s23
 80193b8:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80193bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80193be:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80193c2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80193c6:	eef0 6a48 	vmov.f32	s13, s16
 80193ca:	ee69 7a27 	vmul.f32	s15, s18, s15
 80193ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193d2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80193d6:	ee16 4a90 	vmov	r4, s13
 80193da:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80193de:	eef0 6a68 	vmov.f32	s13, s17
 80193e2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80193e6:	ee18 2a10 	vmov	r2, s16
 80193ea:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80193ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80193f2:	ee18 2a90 	vmov	r2, s17
 80193f6:	9329      	str	r3, [sp, #164]	; 0xa4
 80193f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80193fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80193fe:	932a      	str	r3, [sp, #168]	; 0xa8
 8019400:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019402:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019404:	3b01      	subs	r3, #1
 8019406:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801940a:	930b      	str	r3, [sp, #44]	; 0x2c
 801940c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801940e:	ee16 6a90 	vmov	r6, s13
 8019412:	bf14      	ite	ne
 8019414:	461d      	movne	r5, r3
 8019416:	4615      	moveq	r5, r2
 8019418:	eef0 8a67 	vmov.f32	s17, s15
 801941c:	eeb0 8a47 	vmov.f32	s16, s14
 8019420:	e700      	b.n	8019224 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8019422:	1c4f      	adds	r7, r1, #1
 8019424:	d1ac      	bne.n	8019380 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019426:	4588      	cmp	r8, r1
 8019428:	ddaa      	ble.n	8019380 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801942a:	1c57      	adds	r7, r2, #1
 801942c:	dba8      	blt.n	8019380 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801942e:	9f08      	ldr	r7, [sp, #32]
 8019430:	4297      	cmp	r7, r2
 8019432:	dda5      	ble.n	8019380 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019434:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8019438:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801943c:	9700      	str	r7, [sp, #0]
 801943e:	4643      	mov	r3, r8
 8019440:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019442:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019444:	4649      	mov	r1, r9
 8019446:	f7ff fe2f 	bl	80190a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801944a:	e799      	b.n	8019380 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801944c:	1422      	asrs	r2, r4, #16
 801944e:	1431      	asrs	r1, r6, #16
 8019450:	fb08 2101 	mla	r1, r8, r1, r2
 8019454:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019456:	9809      	ldr	r0, [sp, #36]	; 0x24
 8019458:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801945c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019460:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8019464:	8851      	ldrh	r1, [r2, #2]
 8019466:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801946a:	f1be 0f00 	cmp.w	lr, #0
 801946e:	d006      	beq.n	801947e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8019470:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019472:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019474:	1810      	adds	r0, r2, r0
 8019476:	5bd2      	ldrh	r2, [r2, r7]
 8019478:	920e      	str	r2, [sp, #56]	; 0x38
 801947a:	8842      	ldrh	r2, [r0, #2]
 801947c:	920f      	str	r2, [sp, #60]	; 0x3c
 801947e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8019482:	fb13 f20e 	smulbb	r2, r3, lr
 8019486:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801948a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801948e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019492:	10d2      	asrs	r2, r2, #3
 8019494:	ea40 000c 	orr.w	r0, r0, ip
 8019498:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801949c:	f1ce 0c10 	rsb	ip, lr, #16
 80194a0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80194a4:	ebac 0c03 	sub.w	ip, ip, r3
 80194a8:	ea4a 0101 	orr.w	r1, sl, r1
 80194ac:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80194b0:	4359      	muls	r1, r3
 80194b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80194b4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80194b8:	fb0c 1c00 	mla	ip, ip, r0, r1
 80194bc:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80194c0:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 80194c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80194c6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80194c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80194cc:	041b      	lsls	r3, r3, #16
 80194ce:	ea4a 0000 	orr.w	r0, sl, r0
 80194d2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80194d6:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 80194da:	fb02 c000 	mla	r0, r2, r0, ip
 80194de:	ea43 0a0a 	orr.w	sl, r3, sl
 80194e2:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 80194e6:	fb02 000a 	mla	r0, r2, sl, r0
 80194ea:	0d43      	lsrs	r3, r0, #21
 80194ec:	0940      	lsrs	r0, r0, #5
 80194ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80194f6:	4318      	orrs	r0, r3
 80194f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80194fa:	f82b 0b02 	strh.w	r0, [fp], #2
 80194fe:	441c      	add	r4, r3
 8019500:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019502:	f109 39ff 	add.w	r9, r9, #4294967295
 8019506:	441e      	add	r6, r3
 8019508:	e6b8      	b.n	801927c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 801950a:	b013      	add	sp, #76	; 0x4c
 801950c:	ecbd 8b0a 	vpop	{d8-d12}
 8019510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8019514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019518:	8808      	ldrh	r0, [r1, #0]
 801951a:	b085      	sub	sp, #20
 801951c:	1206      	asrs	r6, r0, #8
 801951e:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8019522:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019526:	9600      	str	r6, [sp, #0]
 8019528:	10c6      	asrs	r6, r0, #3
 801952a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801952e:	9601      	str	r6, [sp, #4]
 8019530:	00c0      	lsls	r0, r0, #3
 8019532:	fb04 c603 	mla	r6, r4, r3, ip
 8019536:	b2c0      	uxtb	r0, r0
 8019538:	4691      	mov	r9, r2
 801953a:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 801953e:	9a00      	ldr	r2, [sp, #0]
 8019540:	9002      	str	r0, [sp, #8]
 8019542:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8019546:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801954a:	9a01      	ldr	r2, [sp, #4]
 801954c:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8019550:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8019554:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019558:	2c00      	cmp	r4, #0
 801955a:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801955e:	db3a      	blt.n	80195d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8019560:	45a0      	cmp	r8, r4
 8019562:	dd38      	ble.n	80195d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8019564:	f1bc 0f00 	cmp.w	ip, #0
 8019568:	db33      	blt.n	80195d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 801956a:	4563      	cmp	r3, ip
 801956c:	dd31      	ble.n	80195d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 801956e:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8019572:	f11c 0601 	adds.w	r6, ip, #1
 8019576:	d431      	bmi.n	80195dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8019578:	42b3      	cmp	r3, r6
 801957a:	dd2f      	ble.n	80195dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 801957c:	b375      	cbz	r5, 80195dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 801957e:	f8de 6004 	ldr.w	r6, [lr, #4]
 8019582:	3401      	adds	r4, #1
 8019584:	d42e      	bmi.n	80195e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8019586:	45a0      	cmp	r8, r4
 8019588:	dd2c      	ble.n	80195e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801958a:	b35f      	cbz	r7, 80195e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801958c:	f1bc 0f00 	cmp.w	ip, #0
 8019590:	db26      	blt.n	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8019592:	4563      	cmp	r3, ip
 8019594:	dd24      	ble.n	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8019596:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801959a:	f11c 0c01 	adds.w	ip, ip, #1
 801959e:	d405      	bmi.n	80195ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80195a0:	4563      	cmp	r3, ip
 80195a2:	dd03      	ble.n	80195ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80195a4:	b115      	cbz	r5, 80195ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80195a6:	3301      	adds	r3, #1
 80195a8:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 80195ac:	2d0f      	cmp	r5, #15
 80195ae:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80195b2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80195b6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80195ba:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80195be:	d801      	bhi.n	80195c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 80195c0:	2f0f      	cmp	r7, #15
 80195c2:	d911      	bls.n	80195e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 80195c4:	4b82      	ldr	r3, [pc, #520]	; (80197d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 80195c6:	4a83      	ldr	r2, [pc, #524]	; (80197d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 80195c8:	4883      	ldr	r0, [pc, #524]	; (80197d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 80195ca:	f240 3173 	movw	r1, #883	; 0x373
 80195ce:	f002 f9dd 	bl	801b98c <__assert_func>
 80195d2:	4602      	mov	r2, r0
 80195d4:	e7cd      	b.n	8019572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 80195d6:	4606      	mov	r6, r0
 80195d8:	4602      	mov	r2, r0
 80195da:	e7d2      	b.n	8019582 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 80195dc:	4606      	mov	r6, r0
 80195de:	e7d0      	b.n	8019582 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 80195e0:	4604      	mov	r4, r0
 80195e2:	e7da      	b.n	801959a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 80195e4:	4604      	mov	r4, r0
 80195e6:	e7e1      	b.n	80195ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80195e8:	b2ab      	uxth	r3, r5
 80195ea:	b2bf      	uxth	r7, r7
 80195ec:	fb03 fe07 	mul.w	lr, r3, r7
 80195f0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80195f4:	011b      	lsls	r3, r3, #4
 80195f6:	eba3 0c0e 	sub.w	ip, r3, lr
 80195fa:	b2bf      	uxth	r7, r7
 80195fc:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8019600:	fa1f fc8c 	uxth.w	ip, ip
 8019604:	1bed      	subs	r5, r5, r7
 8019606:	b2ad      	uxth	r5, r5
 8019608:	fb0c f30a 	mul.w	r3, ip, sl
 801960c:	fb05 330b 	mla	r3, r5, fp, r3
 8019610:	fb07 3309 	mla	r3, r7, r9, r3
 8019614:	fb0e 3308 	mla	r3, lr, r8, r3
 8019618:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801961c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019620:	9303      	str	r3, [sp, #12]
 8019622:	d018      	beq.n	8019656 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8019624:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8019628:	fb0b f303 	mul.w	r3, fp, r3
 801962c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019630:	fb0b fb02 	mul.w	fp, fp, r2
 8019634:	0a1a      	lsrs	r2, r3, #8
 8019636:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801963a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801963e:	441a      	add	r2, r3
 8019640:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8019644:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8019648:	0a12      	lsrs	r2, r2, #8
 801964a:	0a1b      	lsrs	r3, r3, #8
 801964c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019650:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019654:	431a      	orrs	r2, r3
 8019656:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801965a:	d019      	beq.n	8019690 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 801965c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019660:	fb0a fb0b 	mul.w	fp, sl, fp
 8019664:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019668:	fb0a fa06 	mul.w	sl, sl, r6
 801966c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019670:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019674:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019678:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801967c:	445e      	add	r6, fp
 801967e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8019682:	0a36      	lsrs	r6, r6, #8
 8019684:	0a1b      	lsrs	r3, r3, #8
 8019686:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801968a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801968e:	431e      	orrs	r6, r3
 8019690:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019694:	d019      	beq.n	80196ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8019696:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801969a:	fb09 fa0a 	mul.w	sl, r9, sl
 801969e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80196a2:	fb09 f904 	mul.w	r9, r9, r4
 80196a6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80196aa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80196ae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80196b2:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80196b6:	4454      	add	r4, sl
 80196b8:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80196bc:	0a24      	lsrs	r4, r4, #8
 80196be:	0a1b      	lsrs	r3, r3, #8
 80196c0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80196c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80196c8:	431c      	orrs	r4, r3
 80196ca:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80196ce:	d019      	beq.n	8019704 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 80196d0:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80196d4:	fb08 f909 	mul.w	r9, r8, r9
 80196d8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80196dc:	fb08 f800 	mul.w	r8, r8, r0
 80196e0:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80196e4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80196e8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80196ec:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80196f0:	4448      	add	r0, r9
 80196f2:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80196f6:	0a00      	lsrs	r0, r0, #8
 80196f8:	0a1b      	lsrs	r3, r3, #8
 80196fa:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80196fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019702:	4318      	orrs	r0, r3
 8019704:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019708:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801970c:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8019710:	fb0c f808 	mul.w	r8, ip, r8
 8019714:	fb0c f606 	mul.w	r6, ip, r6
 8019718:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801971c:	fb05 6202 	mla	r2, r5, r2, r6
 8019720:	fb05 8803 	mla	r8, r5, r3, r8
 8019724:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8019728:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801972c:	fb07 8803 	mla	r8, r7, r3, r8
 8019730:	fb07 2704 	mla	r7, r7, r4, r2
 8019734:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8019738:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801973c:	fb0e 8303 	mla	r3, lr, r3, r8
 8019740:	fb0e 7e00 	mla	lr, lr, r0, r7
 8019744:	0a1b      	lsrs	r3, r3, #8
 8019746:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801974a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801974e:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8019752:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019756:	ea43 0e0e 	orr.w	lr, r3, lr
 801975a:	9b03      	ldr	r3, [sp, #12]
 801975c:	b2a4      	uxth	r4, r4
 801975e:	4363      	muls	r3, r4
 8019760:	1c5a      	adds	r2, r3, #1
 8019762:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019766:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801976a:	9b00      	ldr	r3, [sp, #0]
 801976c:	b2d2      	uxtb	r2, r2
 801976e:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8019772:	fb13 f302 	smulbb	r3, r3, r2
 8019776:	fb05 3304 	mla	r3, r5, r4, r3
 801977a:	b29d      	uxth	r5, r3
 801977c:	9b01      	ldr	r3, [sp, #4]
 801977e:	f3ce 2007 	ubfx	r0, lr, #8, #8
 8019782:	fb13 f302 	smulbb	r3, r3, r2
 8019786:	fb00 3004 	mla	r0, r0, r4, r3
 801978a:	9b02      	ldr	r3, [sp, #8]
 801978c:	fa5f fe8e 	uxtb.w	lr, lr
 8019790:	fb13 f202 	smulbb	r2, r3, r2
 8019794:	fb0e 2e04 	mla	lr, lr, r4, r2
 8019798:	fa1f fe8e 	uxth.w	lr, lr
 801979c:	b280      	uxth	r0, r0
 801979e:	f10e 0201 	add.w	r2, lr, #1
 80197a2:	1c6b      	adds	r3, r5, #1
 80197a4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80197a8:	1c42      	adds	r2, r0, #1
 80197aa:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80197ae:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80197b2:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80197b6:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80197ba:	0952      	lsrs	r2, r2, #5
 80197bc:	ea43 030e 	orr.w	r3, r3, lr
 80197c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80197c4:	4313      	orrs	r3, r2
 80197c6:	800b      	strh	r3, [r1, #0]
 80197c8:	b005      	add	sp, #20
 80197ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197ce:	bf00      	nop
 80197d0:	0802112b 	.word	0x0802112b
 80197d4:	08021689 	.word	0x08021689
 80197d8:	080211b3 	.word	0x080211b3

080197dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80197dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197e0:	ed2d 8b08 	vpush	{d8-d11}
 80197e4:	b099      	sub	sp, #100	; 0x64
 80197e6:	eeb0 aa40 	vmov.f32	s20, s0
 80197ea:	9306      	str	r3, [sp, #24]
 80197ec:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 80197f0:	9307      	str	r3, [sp, #28]
 80197f2:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80197f6:	9216      	str	r2, [sp, #88]	; 0x58
 80197f8:	9310      	str	r3, [sp, #64]	; 0x40
 80197fa:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80197fc:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8019800:	9113      	str	r1, [sp, #76]	; 0x4c
 8019802:	9315      	str	r3, [sp, #84]	; 0x54
 8019804:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8019808:	9017      	str	r0, [sp, #92]	; 0x5c
 801980a:	6850      	ldr	r0, [r2, #4]
 801980c:	6812      	ldr	r2, [r2, #0]
 801980e:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019810:	fb00 1303 	mla	r3, r0, r3, r1
 8019814:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019818:	930a      	str	r3, [sp, #40]	; 0x28
 801981a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801981c:	681b      	ldr	r3, [r3, #0]
 801981e:	9312      	str	r3, [sp, #72]	; 0x48
 8019820:	9b07      	ldr	r3, [sp, #28]
 8019822:	009b      	lsls	r3, r3, #2
 8019824:	eef0 9a60 	vmov.f32	s19, s1
 8019828:	eeb0 9a41 	vmov.f32	s18, s2
 801982c:	eeb0 8a62 	vmov.f32	s16, s5
 8019830:	eef0 8a43 	vmov.f32	s17, s6
 8019834:	eef0 ba44 	vmov.f32	s23, s8
 8019838:	eeb0 ba64 	vmov.f32	s22, s9
 801983c:	eef0 aa45 	vmov.f32	s21, s10
 8019840:	930e      	str	r3, [sp, #56]	; 0x38
 8019842:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019844:	2b00      	cmp	r3, #0
 8019846:	dc03      	bgt.n	8019850 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8019848:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801984a:	2b00      	cmp	r3, #0
 801984c:	f340 8352 	ble.w	8019ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8019850:	9b06      	ldr	r3, [sp, #24]
 8019852:	2b00      	cmp	r3, #0
 8019854:	f340 81a8 	ble.w	8019ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 8019858:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801985a:	1412      	asrs	r2, r2, #16
 801985c:	ea4f 4324 	mov.w	r3, r4, asr #16
 8019860:	d430      	bmi.n	80198c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019862:	9807      	ldr	r0, [sp, #28]
 8019864:	1c51      	adds	r1, r2, #1
 8019866:	4288      	cmp	r0, r1
 8019868:	dd2f      	ble.n	80198ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801986a:	2b00      	cmp	r3, #0
 801986c:	db2d      	blt.n	80198ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801986e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019870:	1c59      	adds	r1, r3, #1
 8019872:	4288      	cmp	r0, r1
 8019874:	dd29      	ble.n	80198ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8019876:	9b06      	ldr	r3, [sp, #24]
 8019878:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801987a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801987c:	3b01      	subs	r3, #1
 801987e:	fb02 1203 	mla	r2, r2, r3, r1
 8019882:	1412      	asrs	r2, r2, #16
 8019884:	d42c      	bmi.n	80198e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8019886:	9907      	ldr	r1, [sp, #28]
 8019888:	3201      	adds	r2, #1
 801988a:	4291      	cmp	r1, r2
 801988c:	dd28      	ble.n	80198e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801988e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8019890:	fb02 4303 	mla	r3, r2, r3, r4
 8019894:	141b      	asrs	r3, r3, #16
 8019896:	d423      	bmi.n	80198e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8019898:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801989a:	3301      	adds	r3, #1
 801989c:	429a      	cmp	r2, r3
 801989e:	dd1f      	ble.n	80198e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80198a0:	9b06      	ldr	r3, [sp, #24]
 80198a2:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80198a6:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 80198aa:	9311      	str	r3, [sp, #68]	; 0x44
 80198ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80198ae:	2b00      	cmp	r3, #0
 80198b0:	f300 81e3 	bgt.w	8019c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 80198b4:	9b06      	ldr	r3, [sp, #24]
 80198b6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80198ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80198bc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80198c0:	930a      	str	r3, [sp, #40]	; 0x28
 80198c2:	e173      	b.n	8019bac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 80198c4:	1c51      	adds	r1, r2, #1
 80198c6:	f040 8162 	bne.w	8019b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80198ca:	9907      	ldr	r1, [sp, #28]
 80198cc:	428a      	cmp	r2, r1
 80198ce:	f280 815e 	bge.w	8019b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80198d2:	1c5f      	adds	r7, r3, #1
 80198d4:	f2c0 815b 	blt.w	8019b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80198d8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80198da:	4293      	cmp	r3, r2
 80198dc:	f280 8157 	bge.w	8019b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80198e0:	9b06      	ldr	r3, [sp, #24]
 80198e2:	9314      	str	r3, [sp, #80]	; 0x50
 80198e4:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 80198e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80198ea:	9311      	str	r3, [sp, #68]	; 0x44
 80198ec:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80198ee:	2b00      	cmp	r3, #0
 80198f0:	dde0      	ble.n	80198b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 80198f2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80198f4:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80198f8:	1412      	asrs	r2, r2, #16
 80198fa:	ea4f 4324 	mov.w	r3, r4, asr #16
 80198fe:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019902:	f100 81a1 	bmi.w	8019c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 8019906:	9e07      	ldr	r6, [sp, #28]
 8019908:	1c55      	adds	r5, r2, #1
 801990a:	42ae      	cmp	r6, r5
 801990c:	f340 819e 	ble.w	8019c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8019910:	2b00      	cmp	r3, #0
 8019912:	f2c0 819b 	blt.w	8019c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8019916:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8019918:	1c5d      	adds	r5, r3, #1
 801991a:	42ae      	cmp	r6, r5
 801991c:	f340 8196 	ble.w	8019c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8019920:	9d07      	ldr	r5, [sp, #28]
 8019922:	fb03 2305 	mla	r3, r3, r5, r2
 8019926:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019928:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 801992c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8019930:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019934:	2800      	cmp	r0, #0
 8019936:	f000 8178 	beq.w	8019c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801993a:	686a      	ldr	r2, [r5, #4]
 801993c:	920b      	str	r2, [sp, #44]	; 0x2c
 801993e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019942:	2900      	cmp	r1, #0
 8019944:	f000 817a 	beq.w	8019c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 8019948:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801994a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801994c:	18aa      	adds	r2, r5, r2
 801994e:	59ad      	ldr	r5, [r5, r6]
 8019950:	6852      	ldr	r2, [r2, #4]
 8019952:	9508      	str	r5, [sp, #32]
 8019954:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 8019958:	920c      	str	r2, [sp, #48]	; 0x30
 801995a:	0e15      	lsrs	r5, r2, #24
 801995c:	b280      	uxth	r0, r0
 801995e:	b289      	uxth	r1, r1
 8019960:	fb00 fb01 	mul.w	fp, r0, r1
 8019964:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 8019968:	0100      	lsls	r0, r0, #4
 801996a:	eba0 090b 	sub.w	r9, r0, fp
 801996e:	b289      	uxth	r1, r1
 8019970:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8019974:	fa1f f989 	uxth.w	r9, r9
 8019978:	1a52      	subs	r2, r2, r1
 801997a:	b292      	uxth	r2, r2
 801997c:	fb09 f008 	mul.w	r0, r9, r8
 8019980:	fb02 000c 	mla	r0, r2, ip, r0
 8019984:	fb01 000a 	mla	r0, r1, sl, r0
 8019988:	fb0b 0005 	mla	r0, fp, r5, r0
 801998c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019990:	2800      	cmp	r0, #0
 8019992:	f000 80ef 	beq.w	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019996:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801999a:	d01b      	beq.n	80199d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 801999c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80199a0:	fb0c fe0e 	mul.w	lr, ip, lr
 80199a4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80199a8:	fb0c fc03 	mul.w	ip, ip, r3
 80199ac:	ea4f 231e 	mov.w	r3, lr, lsr #8
 80199b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80199b4:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80199b8:	4473      	add	r3, lr
 80199ba:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80199be:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80199c2:	0a1b      	lsrs	r3, r3, #8
 80199c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80199cc:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80199d0:	ea43 030e 	orr.w	r3, r3, lr
 80199d4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80199d8:	d01e      	beq.n	8019a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 80199da:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80199dc:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80199e0:	fb08 fc0c 	mul.w	ip, r8, ip
 80199e4:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 80199e8:	fb08 f80e 	mul.w	r8, r8, lr
 80199ec:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80199f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199f4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80199f8:	44e6      	add	lr, ip
 80199fa:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 80199fe:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8019a02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a06:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019a0a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a0e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019a12:	ea4e 0608 	orr.w	r6, lr, r8
 8019a16:	960b      	str	r6, [sp, #44]	; 0x2c
 8019a18:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019a1c:	d01e      	beq.n	8019a5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 8019a1e:	9e08      	ldr	r6, [sp, #32]
 8019a20:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019a24:	fb0a f808 	mul.w	r8, sl, r8
 8019a28:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8019a2c:	fb0a fa0c 	mul.w	sl, sl, ip
 8019a30:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019a34:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a38:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019a3c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019a40:	44c6      	add	lr, r8
 8019a42:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019a46:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a4e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a52:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019a56:	ea4e 060a 	orr.w	r6, lr, sl
 8019a5a:	9608      	str	r6, [sp, #32]
 8019a5c:	2dff      	cmp	r5, #255	; 0xff
 8019a5e:	d01d      	beq.n	8019a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8019a60:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019a62:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019a66:	fb05 f808 	mul.w	r8, r5, r8
 8019a6a:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8019a6e:	fb05 f50c 	mul.w	r5, r5, ip
 8019a72:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019a76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a7a:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019a7e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8019a82:	44c6      	add	lr, r8
 8019a84:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019a88:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019a8c:	0a2d      	lsrs	r5, r5, #8
 8019a8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019a92:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8019a96:	ea4e 0505 	orr.w	r5, lr, r5
 8019a9a:	950c      	str	r5, [sp, #48]	; 0x30
 8019a9c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019a9e:	9e08      	ldr	r6, [sp, #32]
 8019aa0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019aa4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019aa8:	fb09 f505 	mul.w	r5, r9, r5
 8019aac:	fb02 550c 	mla	r5, r2, ip, r5
 8019ab0:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019ab4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019ab6:	fb01 550c 	mla	r5, r1, ip, r5
 8019aba:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019abe:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8019ac0:	fb0b 550c 	mla	r5, fp, ip, r5
 8019ac4:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8019ac8:	fb09 f90c 	mul.w	r9, r9, ip
 8019acc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019ad0:	fb02 9303 	mla	r3, r2, r3, r9
 8019ad4:	9a08      	ldr	r2, [sp, #32]
 8019ad6:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8019ada:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019adc:	fb01 330e 	mla	r3, r1, lr, r3
 8019ae0:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8019ae4:	fb0b 3b01 	mla	fp, fp, r1, r3
 8019ae8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019aea:	0a2d      	lsrs	r5, r5, #8
 8019aec:	f8b3 c000 	ldrh.w	ip, [r3]
 8019af0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8019af4:	fb00 f307 	mul.w	r3, r0, r7
 8019af8:	1c58      	adds	r0, r3, #1
 8019afa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019afe:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8019b02:	ea45 050b 	orr.w	r5, r5, fp
 8019b06:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019b0a:	0c29      	lsrs	r1, r5, #16
 8019b0c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019b10:	ea4f 232c 	mov.w	r3, ip, asr #8
 8019b14:	b2c0      	uxtb	r0, r0
 8019b16:	fb11 f107 	smulbb	r1, r1, r7
 8019b1a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019b1e:	fb03 1300 	mla	r3, r3, r0, r1
 8019b22:	b299      	uxth	r1, r3
 8019b24:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019b28:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8019b2c:	fb13 f307 	smulbb	r3, r3, r7
 8019b30:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019b34:	fb02 3200 	mla	r2, r2, r0, r3
 8019b38:	b2ed      	uxtb	r5, r5
 8019b3a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8019b3e:	b2db      	uxtb	r3, r3
 8019b40:	fb15 f507 	smulbb	r5, r5, r7
 8019b44:	fb03 5500 	mla	r5, r3, r0, r5
 8019b48:	b292      	uxth	r2, r2
 8019b4a:	b2ad      	uxth	r5, r5
 8019b4c:	1c4b      	adds	r3, r1, #1
 8019b4e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019b52:	1c68      	adds	r0, r5, #1
 8019b54:	1c51      	adds	r1, r2, #1
 8019b56:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8019b5a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019b5e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019b62:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019b66:	0952      	lsrs	r2, r2, #5
 8019b68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019b6c:	432b      	orrs	r3, r5
 8019b6e:	4313      	orrs	r3, r2
 8019b70:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019b72:	8013      	strh	r3, [r2, #0]
 8019b74:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019b76:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019b78:	3302      	adds	r3, #2
 8019b7a:	9311      	str	r3, [sp, #68]	; 0x44
 8019b7c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019b7e:	4413      	add	r3, r2
 8019b80:	932b      	str	r3, [sp, #172]	; 0xac
 8019b82:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019b84:	441c      	add	r4, r3
 8019b86:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019b88:	3b01      	subs	r3, #1
 8019b8a:	9314      	str	r3, [sp, #80]	; 0x50
 8019b8c:	e6ae      	b.n	80198ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8019b8e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019b90:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019b92:	4413      	add	r3, r2
 8019b94:	932b      	str	r3, [sp, #172]	; 0xac
 8019b96:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019b98:	441c      	add	r4, r3
 8019b9a:	9b06      	ldr	r3, [sp, #24]
 8019b9c:	3b01      	subs	r3, #1
 8019b9e:	9306      	str	r3, [sp, #24]
 8019ba0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ba2:	3302      	adds	r3, #2
 8019ba4:	930a      	str	r3, [sp, #40]	; 0x28
 8019ba6:	e653      	b.n	8019850 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8019ba8:	f47f ae65 	bne.w	8019876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8019bac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019bae:	2b00      	cmp	r3, #0
 8019bb0:	f340 81a0 	ble.w	8019ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8019bb4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019bb8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019bbc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019bc0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019bc2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019bc6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019bca:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019bce:	eef0 6a48 	vmov.f32	s13, s16
 8019bd2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019bd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019bda:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019bde:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8019be2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019be6:	eef0 6a68 	vmov.f32	s13, s17
 8019bea:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019bee:	ee18 2a10 	vmov	r2, s16
 8019bf2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019bf6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bfa:	ee18 2a90 	vmov	r2, s17
 8019bfe:	932d      	str	r3, [sp, #180]	; 0xb4
 8019c00:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019c02:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c06:	932e      	str	r3, [sp, #184]	; 0xb8
 8019c08:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019c0a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019c0c:	3b01      	subs	r3, #1
 8019c0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c12:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c14:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019c16:	bf08      	it	eq
 8019c18:	4613      	moveq	r3, r2
 8019c1a:	ee16 4a90 	vmov	r4, s13
 8019c1e:	9306      	str	r3, [sp, #24]
 8019c20:	eef0 8a67 	vmov.f32	s17, s15
 8019c24:	eeb0 8a47 	vmov.f32	s16, s14
 8019c28:	e60b      	b.n	8019842 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8019c2a:	b151      	cbz	r1, 8019c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019c2c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019c2e:	58aa      	ldr	r2, [r5, r2]
 8019c30:	9208      	str	r2, [sp, #32]
 8019c32:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8019c36:	25ff      	movs	r5, #255	; 0xff
 8019c38:	46a8      	mov	r8, r5
 8019c3a:	e68f      	b.n	801995c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8019c3c:	25ff      	movs	r5, #255	; 0xff
 8019c3e:	46aa      	mov	sl, r5
 8019c40:	e68c      	b.n	801995c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8019c42:	25ff      	movs	r5, #255	; 0xff
 8019c44:	46aa      	mov	sl, r5
 8019c46:	e7f7      	b.n	8019c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 8019c48:	1c56      	adds	r6, r2, #1
 8019c4a:	d193      	bne.n	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c4c:	9d07      	ldr	r5, [sp, #28]
 8019c4e:	4295      	cmp	r5, r2
 8019c50:	dd90      	ble.n	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c52:	1c5d      	adds	r5, r3, #1
 8019c54:	db8e      	blt.n	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c56:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019c58:	429d      	cmp	r5, r3
 8019c5a:	dd8b      	ble.n	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c5c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019c5e:	9201      	str	r2, [sp, #4]
 8019c60:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8019c64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c66:	9300      	str	r3, [sp, #0]
 8019c68:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019c6c:	9b07      	ldr	r3, [sp, #28]
 8019c6e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019c70:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8019c74:	f7ff fc4e 	bl	8019514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019c78:	e77c      	b.n	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019c7a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019c7c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019c7e:	9d07      	ldr	r5, [sp, #28]
 8019c80:	1412      	asrs	r2, r2, #16
 8019c82:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8019c86:	1423      	asrs	r3, r4, #16
 8019c88:	fb05 2303 	mla	r3, r5, r3, r2
 8019c8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019c8e:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8019c92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8019c96:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019c9a:	0e1e      	lsrs	r6, r3, #24
 8019c9c:	2900      	cmp	r1, #0
 8019c9e:	f000 811a 	beq.w	8019ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8019ca2:	686a      	ldr	r2, [r5, #4]
 8019ca4:	920d      	str	r2, [sp, #52]	; 0x34
 8019ca6:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8019caa:	2800      	cmp	r0, #0
 8019cac:	f000 811c 	beq.w	8019ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8019cb0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019cb2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8019cb4:	18aa      	adds	r2, r5, r2
 8019cb6:	59ed      	ldr	r5, [r5, r7]
 8019cb8:	6852      	ldr	r2, [r2, #4]
 8019cba:	9509      	str	r5, [sp, #36]	; 0x24
 8019cbc:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8019cc0:	920f      	str	r2, [sp, #60]	; 0x3c
 8019cc2:	0e15      	lsrs	r5, r2, #24
 8019cc4:	b289      	uxth	r1, r1
 8019cc6:	b280      	uxth	r0, r0
 8019cc8:	fb01 f900 	mul.w	r9, r1, r0
 8019ccc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019cd0:	0109      	lsls	r1, r1, #4
 8019cd2:	eba1 0e09 	sub.w	lr, r1, r9
 8019cd6:	b280      	uxth	r0, r0
 8019cd8:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8019cdc:	fa1f fe8e 	uxth.w	lr, lr
 8019ce0:	1a12      	subs	r2, r2, r0
 8019ce2:	b292      	uxth	r2, r2
 8019ce4:	fb0e f10c 	mul.w	r1, lr, ip
 8019ce8:	fb02 1106 	mla	r1, r2, r6, r1
 8019cec:	fb00 1108 	mla	r1, r0, r8, r1
 8019cf0:	fb09 1105 	mla	r1, r9, r5, r1
 8019cf4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019cf8:	2900      	cmp	r1, #0
 8019cfa:	f000 80e0 	beq.w	8019ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8019cfe:	2eff      	cmp	r6, #255	; 0xff
 8019d00:	d016      	beq.n	8019d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8019d02:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8019d06:	4377      	muls	r7, r6
 8019d08:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019d0c:	435e      	muls	r6, r3
 8019d0e:	0a3b      	lsrs	r3, r7, #8
 8019d10:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019d14:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019d18:	443b      	add	r3, r7
 8019d1a:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8019d1e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8019d22:	0a1b      	lsrs	r3, r3, #8
 8019d24:	0a3f      	lsrs	r7, r7, #8
 8019d26:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019d2a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019d2e:	433b      	orrs	r3, r7
 8019d30:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019d34:	d01d      	beq.n	8019d72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8019d36:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8019d38:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8019d3a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019d3e:	fb0c f606 	mul.w	r6, ip, r6
 8019d42:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019d46:	fb0c fc07 	mul.w	ip, ip, r7
 8019d4a:	0a37      	lsrs	r7, r6, #8
 8019d4c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019d50:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8019d54:	4437      	add	r7, r6
 8019d56:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8019d5a:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8019d5e:	0a3f      	lsrs	r7, r7, #8
 8019d60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d64:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019d68:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019d6c:	ea47 060c 	orr.w	r6, r7, ip
 8019d70:	960d      	str	r6, [sp, #52]	; 0x34
 8019d72:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019d76:	d01d      	beq.n	8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8019d78:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8019d7a:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019d7e:	fb08 fc0c 	mul.w	ip, r8, ip
 8019d82:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019d86:	fb08 f806 	mul.w	r8, r8, r6
 8019d8a:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8019d8e:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8019d92:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019d96:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019d9a:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8019d9e:	4467      	add	r7, ip
 8019da0:	0a3f      	lsrs	r7, r7, #8
 8019da2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019da6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019daa:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019dae:	ea47 0608 	orr.w	r6, r7, r8
 8019db2:	9609      	str	r6, [sp, #36]	; 0x24
 8019db4:	2dff      	cmp	r5, #255	; 0xff
 8019db6:	d01a      	beq.n	8019dee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 8019db8:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8019dba:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019dbe:	fb05 fc0c 	mul.w	ip, r5, ip
 8019dc2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019dc6:	4375      	muls	r5, r6
 8019dc8:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8019dcc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019dd0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019dd4:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8019dd8:	4467      	add	r7, ip
 8019dda:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8019dde:	0a3f      	lsrs	r7, r7, #8
 8019de0:	0a2d      	lsrs	r5, r5, #8
 8019de2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019de6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8019dea:	433d      	orrs	r5, r7
 8019dec:	950f      	str	r5, [sp, #60]	; 0x3c
 8019dee:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019df0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019df4:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8019df8:	fb0e f505 	mul.w	r5, lr, r5
 8019dfc:	fb02 5506 	mla	r5, r2, r6, r5
 8019e00:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8019e02:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019e06:	fb00 5506 	mla	r5, r0, r6, r5
 8019e0a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8019e0c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019e10:	fb09 5506 	mla	r5, r9, r6, r5
 8019e14:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8019e16:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019e1a:	fb0e fe06 	mul.w	lr, lr, r6
 8019e1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019e22:	fb02 e303 	mla	r3, r2, r3, lr
 8019e26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019e28:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8019e2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019e2e:	fb00 3307 	mla	r3, r0, r7, r3
 8019e32:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019e36:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019e3a:	fb01 f10b 	mul.w	r1, r1, fp
 8019e3e:	0a2d      	lsrs	r5, r5, #8
 8019e40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e44:	f8ba 0000 	ldrh.w	r0, [sl]
 8019e48:	1c4b      	adds	r3, r1, #1
 8019e4a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019e4e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019e52:	ea45 050c 	orr.w	r5, r5, ip
 8019e56:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019e5a:	1202      	asrs	r2, r0, #8
 8019e5c:	0c2b      	lsrs	r3, r5, #16
 8019e5e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019e62:	b2c9      	uxtb	r1, r1
 8019e64:	fb13 f30b 	smulbb	r3, r3, fp
 8019e68:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019e6c:	fb02 3201 	mla	r2, r2, r1, r3
 8019e70:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8019e74:	10c3      	asrs	r3, r0, #3
 8019e76:	b2ed      	uxtb	r5, r5
 8019e78:	00c0      	lsls	r0, r0, #3
 8019e7a:	b2c0      	uxtb	r0, r0
 8019e7c:	fb15 f50b 	smulbb	r5, r5, fp
 8019e80:	fb00 5001 	mla	r0, r0, r1, r5
 8019e84:	b292      	uxth	r2, r2
 8019e86:	fb16 f60b 	smulbb	r6, r6, fp
 8019e8a:	b280      	uxth	r0, r0
 8019e8c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019e90:	fb03 6301 	mla	r3, r3, r1, r6
 8019e94:	1c51      	adds	r1, r2, #1
 8019e96:	1c46      	adds	r6, r0, #1
 8019e98:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019e9c:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8019ea0:	b29b      	uxth	r3, r3
 8019ea2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019ea6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019eaa:	4332      	orrs	r2, r6
 8019eac:	1c5e      	adds	r6, r3, #1
 8019eae:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8019eb2:	095b      	lsrs	r3, r3, #5
 8019eb4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019eb8:	431a      	orrs	r2, r3
 8019eba:	f8aa 2000 	strh.w	r2, [sl]
 8019ebe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019ec0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019ec2:	4413      	add	r3, r2
 8019ec4:	932b      	str	r3, [sp, #172]	; 0xac
 8019ec6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019ec8:	441c      	add	r4, r3
 8019eca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019ecc:	3b01      	subs	r3, #1
 8019ece:	f10a 0a02 	add.w	sl, sl, #2
 8019ed2:	9311      	str	r3, [sp, #68]	; 0x44
 8019ed4:	e4ea      	b.n	80198ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8019ed6:	b150      	cbz	r0, 8019eee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 8019ed8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019eda:	58aa      	ldr	r2, [r5, r2]
 8019edc:	9209      	str	r2, [sp, #36]	; 0x24
 8019ede:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019ee2:	25ff      	movs	r5, #255	; 0xff
 8019ee4:	46ac      	mov	ip, r5
 8019ee6:	e6ed      	b.n	8019cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8019ee8:	25ff      	movs	r5, #255	; 0xff
 8019eea:	46a8      	mov	r8, r5
 8019eec:	e6ea      	b.n	8019cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8019eee:	25ff      	movs	r5, #255	; 0xff
 8019ef0:	46a8      	mov	r8, r5
 8019ef2:	e7f7      	b.n	8019ee4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8019ef4:	b019      	add	sp, #100	; 0x64
 8019ef6:	ecbd 8b08 	vpop	{d8-d11}
 8019efa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019f00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f04:	8808      	ldrh	r0, [r1, #0]
 8019f06:	b085      	sub	sp, #20
 8019f08:	1206      	asrs	r6, r0, #8
 8019f0a:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8019f0e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019f12:	9600      	str	r6, [sp, #0]
 8019f14:	10c6      	asrs	r6, r0, #3
 8019f16:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f1a:	9601      	str	r6, [sp, #4]
 8019f1c:	00c0      	lsls	r0, r0, #3
 8019f1e:	fb04 c603 	mla	r6, r4, r3, ip
 8019f22:	b2c0      	uxtb	r0, r0
 8019f24:	4691      	mov	r9, r2
 8019f26:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8019f2a:	9a00      	ldr	r2, [sp, #0]
 8019f2c:	9002      	str	r0, [sp, #8]
 8019f2e:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8019f32:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8019f36:	9a01      	ldr	r2, [sp, #4]
 8019f38:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8019f3c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8019f40:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8019f44:	2c00      	cmp	r4, #0
 8019f46:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8019f4a:	db3a      	blt.n	8019fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019f4c:	45a0      	cmp	r8, r4
 8019f4e:	dd38      	ble.n	8019fc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019f50:	f1bc 0f00 	cmp.w	ip, #0
 8019f54:	db33      	blt.n	8019fbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019f56:	4563      	cmp	r3, ip
 8019f58:	dd31      	ble.n	8019fbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019f5a:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8019f5e:	f11c 0601 	adds.w	r6, ip, #1
 8019f62:	d431      	bmi.n	8019fc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019f64:	42b3      	cmp	r3, r6
 8019f66:	dd2f      	ble.n	8019fc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019f68:	b375      	cbz	r5, 8019fc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019f6a:	f8de 6004 	ldr.w	r6, [lr, #4]
 8019f6e:	3401      	adds	r4, #1
 8019f70:	d42e      	bmi.n	8019fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019f72:	45a0      	cmp	r8, r4
 8019f74:	dd2c      	ble.n	8019fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019f76:	b35f      	cbz	r7, 8019fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019f78:	f1bc 0f00 	cmp.w	ip, #0
 8019f7c:	db26      	blt.n	8019fcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019f7e:	4563      	cmp	r3, ip
 8019f80:	dd24      	ble.n	8019fcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019f82:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8019f86:	f11c 0c01 	adds.w	ip, ip, #1
 8019f8a:	d405      	bmi.n	8019f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019f8c:	4563      	cmp	r3, ip
 8019f8e:	dd03      	ble.n	8019f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019f90:	b115      	cbz	r5, 8019f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019f92:	3301      	adds	r3, #1
 8019f94:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8019f98:	2d0f      	cmp	r5, #15
 8019f9a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019f9e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8019fa2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019fa6:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8019faa:	d801      	bhi.n	8019fb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8019fac:	2f0f      	cmp	r7, #15
 8019fae:	d911      	bls.n	8019fd4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8019fb0:	4b7b      	ldr	r3, [pc, #492]	; (801a1a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8019fb2:	4a7c      	ldr	r2, [pc, #496]	; (801a1a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8019fb4:	487c      	ldr	r0, [pc, #496]	; (801a1a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 8019fb6:	f240 3173 	movw	r1, #883	; 0x373
 8019fba:	f001 fce7 	bl	801b98c <__assert_func>
 8019fbe:	4602      	mov	r2, r0
 8019fc0:	e7cd      	b.n	8019f5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8019fc2:	4606      	mov	r6, r0
 8019fc4:	4602      	mov	r2, r0
 8019fc6:	e7d2      	b.n	8019f6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8019fc8:	4606      	mov	r6, r0
 8019fca:	e7d0      	b.n	8019f6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8019fcc:	4604      	mov	r4, r0
 8019fce:	e7da      	b.n	8019f86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019fd0:	4604      	mov	r4, r0
 8019fd2:	e7e1      	b.n	8019f98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019fd4:	b2ab      	uxth	r3, r5
 8019fd6:	b2bf      	uxth	r7, r7
 8019fd8:	fb03 fe07 	mul.w	lr, r3, r7
 8019fdc:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019fe0:	011b      	lsls	r3, r3, #4
 8019fe2:	eba3 0c0e 	sub.w	ip, r3, lr
 8019fe6:	b2bf      	uxth	r7, r7
 8019fe8:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8019fec:	fa1f fc8c 	uxth.w	ip, ip
 8019ff0:	1bed      	subs	r5, r5, r7
 8019ff2:	b2ad      	uxth	r5, r5
 8019ff4:	fb0c f30a 	mul.w	r3, ip, sl
 8019ff8:	fb05 330b 	mla	r3, r5, fp, r3
 8019ffc:	fb07 3309 	mla	r3, r7, r9, r3
 801a000:	fb0e 3308 	mla	r3, lr, r8, r3
 801a004:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a008:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a00c:	9303      	str	r3, [sp, #12]
 801a00e:	d018      	beq.n	801a042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 801a010:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801a014:	fb0b f303 	mul.w	r3, fp, r3
 801a018:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a01c:	fb0b fb02 	mul.w	fp, fp, r2
 801a020:	0a1a      	lsrs	r2, r3, #8
 801a022:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a026:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801a02a:	441a      	add	r2, r3
 801a02c:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801a030:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801a034:	0a12      	lsrs	r2, r2, #8
 801a036:	0a1b      	lsrs	r3, r3, #8
 801a038:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a03c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a040:	431a      	orrs	r2, r3
 801a042:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a046:	d019      	beq.n	801a07c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 801a048:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801a04c:	fb0a fb0b 	mul.w	fp, sl, fp
 801a050:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a054:	fb0a fa06 	mul.w	sl, sl, r6
 801a058:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801a05c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a060:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a064:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 801a068:	445e      	add	r6, fp
 801a06a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801a06e:	0a36      	lsrs	r6, r6, #8
 801a070:	0a1b      	lsrs	r3, r3, #8
 801a072:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a076:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a07a:	431e      	orrs	r6, r3
 801a07c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a080:	d019      	beq.n	801a0b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801a082:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a086:	fb09 fa0a 	mul.w	sl, r9, sl
 801a08a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a08e:	fb09 f904 	mul.w	r9, r9, r4
 801a092:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a096:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a09a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a09e:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801a0a2:	4454      	add	r4, sl
 801a0a4:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801a0a8:	0a24      	lsrs	r4, r4, #8
 801a0aa:	0a1b      	lsrs	r3, r3, #8
 801a0ac:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a0b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a0b4:	431c      	orrs	r4, r3
 801a0b6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a0ba:	d019      	beq.n	801a0f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 801a0bc:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801a0c0:	fb08 f909 	mul.w	r9, r8, r9
 801a0c4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a0c8:	fb08 f800 	mul.w	r8, r8, r0
 801a0cc:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801a0d0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a0d4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a0d8:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801a0dc:	4448      	add	r0, r9
 801a0de:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801a0e2:	0a00      	lsrs	r0, r0, #8
 801a0e4:	0a1b      	lsrs	r3, r3, #8
 801a0e6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801a0ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a0ee:	4318      	orrs	r0, r3
 801a0f0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a0f4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a0f8:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801a0fc:	fb0c f808 	mul.w	r8, ip, r8
 801a100:	fb0c f606 	mul.w	r6, ip, r6
 801a104:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a108:	fb05 8803 	mla	r8, r5, r3, r8
 801a10c:	fb05 6202 	mla	r2, r5, r2, r6
 801a110:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801a114:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a118:	fb07 8803 	mla	r8, r7, r3, r8
 801a11c:	fb07 2704 	mla	r7, r7, r4, r2
 801a120:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801a124:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a128:	fb0e 8303 	mla	r3, lr, r3, r8
 801a12c:	fb0e 7e00 	mla	lr, lr, r0, r7
 801a130:	0a1b      	lsrs	r3, r3, #8
 801a132:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a136:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a13a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a13e:	ea43 0e0e 	orr.w	lr, r3, lr
 801a142:	9b03      	ldr	r3, [sp, #12]
 801a144:	9800      	ldr	r0, [sp, #0]
 801a146:	9c01      	ldr	r4, [sp, #4]
 801a148:	9a02      	ldr	r2, [sp, #8]
 801a14a:	43db      	mvns	r3, r3
 801a14c:	b2db      	uxtb	r3, r3
 801a14e:	4358      	muls	r0, r3
 801a150:	435c      	muls	r4, r3
 801a152:	435a      	muls	r2, r3
 801a154:	1c43      	adds	r3, r0, #1
 801a156:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a15a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801a15e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a162:	4b12      	ldr	r3, [pc, #72]	; (801a1ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 801a164:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 801a168:	1c50      	adds	r0, r2, #1
 801a16a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801a16e:	fa5f f28e 	uxtb.w	r2, lr
 801a172:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a176:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801a17a:	1c62      	adds	r2, r4, #1
 801a17c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a180:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801a184:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801a188:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a18c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801a190:	ea43 0e0e 	orr.w	lr, r3, lr
 801a194:	f8a1 e000 	strh.w	lr, [r1]
 801a198:	b005      	add	sp, #20
 801a19a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a19e:	bf00      	nop
 801a1a0:	0802112b 	.word	0x0802112b
 801a1a4:	08021689 	.word	0x08021689
 801a1a8:	080211b3 	.word	0x080211b3
 801a1ac:	fffff800 	.word	0xfffff800

0801a1b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801a1b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1b4:	ed2d 8b08 	vpush	{d8-d11}
 801a1b8:	b097      	sub	sp, #92	; 0x5c
 801a1ba:	eeb0 aa40 	vmov.f32	s20, s0
 801a1be:	9306      	str	r3, [sp, #24]
 801a1c0:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 801a1c4:	9307      	str	r3, [sp, #28]
 801a1c6:	9214      	str	r2, [sp, #80]	; 0x50
 801a1c8:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 801a1cc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a1ce:	9112      	str	r1, [sp, #72]	; 0x48
 801a1d0:	9310      	str	r3, [sp, #64]	; 0x40
 801a1d2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801a1d6:	9015      	str	r0, [sp, #84]	; 0x54
 801a1d8:	6850      	ldr	r0, [r2, #4]
 801a1da:	6812      	ldr	r2, [r2, #0]
 801a1dc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801a1de:	fb00 1303 	mla	r3, r0, r3, r1
 801a1e2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a1e6:	930a      	str	r3, [sp, #40]	; 0x28
 801a1e8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a1ea:	681b      	ldr	r3, [r3, #0]
 801a1ec:	9311      	str	r3, [sp, #68]	; 0x44
 801a1ee:	9b07      	ldr	r3, [sp, #28]
 801a1f0:	009b      	lsls	r3, r3, #2
 801a1f2:	eef0 9a60 	vmov.f32	s19, s1
 801a1f6:	eeb0 9a41 	vmov.f32	s18, s2
 801a1fa:	eeb0 8a62 	vmov.f32	s16, s5
 801a1fe:	eef0 8a43 	vmov.f32	s17, s6
 801a202:	eef0 ba44 	vmov.f32	s23, s8
 801a206:	eeb0 ba64 	vmov.f32	s22, s9
 801a20a:	eef0 aa45 	vmov.f32	s21, s10
 801a20e:	930e      	str	r3, [sp, #56]	; 0x38
 801a210:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a212:	2b00      	cmp	r3, #0
 801a214:	dc03      	bgt.n	801a21e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801a216:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a218:	2b00      	cmp	r3, #0
 801a21a:	f340 8361 	ble.w	801a8e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801a21e:	9b06      	ldr	r3, [sp, #24]
 801a220:	2b00      	cmp	r3, #0
 801a222:	f340 819b 	ble.w	801a55c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 801a226:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a228:	1412      	asrs	r2, r2, #16
 801a22a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a22e:	d42e      	bmi.n	801a28e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 801a230:	9807      	ldr	r0, [sp, #28]
 801a232:	1c51      	adds	r1, r2, #1
 801a234:	4288      	cmp	r0, r1
 801a236:	dd2d      	ble.n	801a294 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801a238:	2b00      	cmp	r3, #0
 801a23a:	db2b      	blt.n	801a294 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801a23c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801a23e:	1c59      	adds	r1, r3, #1
 801a240:	4288      	cmp	r0, r1
 801a242:	dd27      	ble.n	801a294 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801a244:	9b06      	ldr	r3, [sp, #24]
 801a246:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a248:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801a24a:	3b01      	subs	r3, #1
 801a24c:	fb02 1203 	mla	r2, r2, r3, r1
 801a250:	1412      	asrs	r2, r2, #16
 801a252:	d42a      	bmi.n	801a2aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801a254:	9907      	ldr	r1, [sp, #28]
 801a256:	3201      	adds	r2, #1
 801a258:	4291      	cmp	r1, r2
 801a25a:	dd26      	ble.n	801a2aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801a25c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801a25e:	fb02 5303 	mla	r3, r2, r3, r5
 801a262:	141b      	asrs	r3, r3, #16
 801a264:	d421      	bmi.n	801a2aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801a266:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a268:	3301      	adds	r3, #1
 801a26a:	429a      	cmp	r2, r3
 801a26c:	dd1d      	ble.n	801a2aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801a26e:	9b06      	ldr	r3, [sp, #24]
 801a270:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801a274:	9313      	str	r3, [sp, #76]	; 0x4c
 801a276:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a278:	2b00      	cmp	r3, #0
 801a27a:	f300 81e3 	bgt.w	801a644 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 801a27e:	9b06      	ldr	r3, [sp, #24]
 801a280:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a284:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a286:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a28a:	930a      	str	r3, [sp, #40]	; 0x28
 801a28c:	e168      	b.n	801a560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 801a28e:	1c51      	adds	r1, r2, #1
 801a290:	f040 8157 	bne.w	801a542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801a294:	9907      	ldr	r1, [sp, #28]
 801a296:	428a      	cmp	r2, r1
 801a298:	f280 8153 	bge.w	801a542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801a29c:	1c5f      	adds	r7, r3, #1
 801a29e:	f2c0 8150 	blt.w	801a542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801a2a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a2a4:	4293      	cmp	r3, r2
 801a2a6:	f280 814c 	bge.w	801a542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801a2aa:	9b06      	ldr	r3, [sp, #24]
 801a2ac:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a2ae:	9313      	str	r3, [sp, #76]	; 0x4c
 801a2b0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a2b2:	2b00      	cmp	r3, #0
 801a2b4:	dde3      	ble.n	801a27e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801a2b6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801a2b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a2ba:	1409      	asrs	r1, r1, #16
 801a2bc:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a2c0:	f3c2 3203 	ubfx	r2, r2, #12, #4
 801a2c4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a2c8:	f100 81a3 	bmi.w	801a612 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 801a2cc:	9c07      	ldr	r4, [sp, #28]
 801a2ce:	1c4e      	adds	r6, r1, #1
 801a2d0:	42b4      	cmp	r4, r6
 801a2d2:	f340 81a0 	ble.w	801a616 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801a2d6:	2b00      	cmp	r3, #0
 801a2d8:	f2c0 819d 	blt.w	801a616 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801a2dc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a2de:	1c5e      	adds	r6, r3, #1
 801a2e0:	42b4      	cmp	r4, r6
 801a2e2:	f340 8198 	ble.w	801a616 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801a2e6:	9c07      	ldr	r4, [sp, #28]
 801a2e8:	fb03 1304 	mla	r3, r3, r4, r1
 801a2ec:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a2ee:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 801a2f2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801a2f6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a2fa:	2a00      	cmp	r2, #0
 801a2fc:	f000 816f 	beq.w	801a5de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 801a300:	6871      	ldr	r1, [r6, #4]
 801a302:	910b      	str	r1, [sp, #44]	; 0x2c
 801a304:	ea4f 6811 	mov.w	r8, r1, lsr #24
 801a308:	2800      	cmp	r0, #0
 801a30a:	f000 8171 	beq.w	801a5f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 801a30e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a310:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a312:	1871      	adds	r1, r6, r1
 801a314:	5934      	ldr	r4, [r6, r4]
 801a316:	6849      	ldr	r1, [r1, #4]
 801a318:	9408      	str	r4, [sp, #32]
 801a31a:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 801a31e:	910c      	str	r1, [sp, #48]	; 0x30
 801a320:	0e0e      	lsrs	r6, r1, #24
 801a322:	b292      	uxth	r2, r2
 801a324:	b280      	uxth	r0, r0
 801a326:	fb02 fb00 	mul.w	fp, r2, r0
 801a32a:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801a32e:	0112      	lsls	r2, r2, #4
 801a330:	eba2 090b 	sub.w	r9, r2, fp
 801a334:	b280      	uxth	r0, r0
 801a336:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a33a:	fa1f f989 	uxth.w	r9, r9
 801a33e:	1a09      	subs	r1, r1, r0
 801a340:	b289      	uxth	r1, r1
 801a342:	fb09 f208 	mul.w	r2, r9, r8
 801a346:	fb01 220c 	mla	r2, r1, ip, r2
 801a34a:	fb00 220a 	mla	r2, r0, sl, r2
 801a34e:	fb0b 2206 	mla	r2, fp, r6, r2
 801a352:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a356:	2a00      	cmp	r2, #0
 801a358:	f000 80e8 	beq.w	801a52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a35c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a360:	d01b      	beq.n	801a39a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801a362:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801a366:	fb0c fe0e 	mul.w	lr, ip, lr
 801a36a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a36e:	fb0c fc03 	mul.w	ip, ip, r3
 801a372:	ea4f 231e 	mov.w	r3, lr, lsr #8
 801a376:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a37a:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801a37e:	4473      	add	r3, lr
 801a380:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801a384:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 801a388:	0a1b      	lsrs	r3, r3, #8
 801a38a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a38e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a392:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a396:	ea43 030e 	orr.w	r3, r3, lr
 801a39a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a39e:	d01e      	beq.n	801a3de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 801a3a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a3a2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a3a6:	fb08 fc0c 	mul.w	ip, r8, ip
 801a3aa:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801a3ae:	fb08 f80e 	mul.w	r8, r8, lr
 801a3b2:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801a3b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3ba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a3be:	44e6      	add	lr, ip
 801a3c0:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801a3c4:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801a3c8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a3cc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a3d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3d4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a3d8:	ea4e 0408 	orr.w	r4, lr, r8
 801a3dc:	940b      	str	r4, [sp, #44]	; 0x2c
 801a3de:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a3e2:	d01e      	beq.n	801a422 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 801a3e4:	9c08      	ldr	r4, [sp, #32]
 801a3e6:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a3ea:	fb0a f808 	mul.w	r8, sl, r8
 801a3ee:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a3f2:	fb0a fa0c 	mul.w	sl, sl, ip
 801a3f6:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801a3fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a3fe:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801a402:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a406:	44c6      	add	lr, r8
 801a408:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a40c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a410:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a414:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a418:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a41c:	ea4e 040a 	orr.w	r4, lr, sl
 801a420:	9408      	str	r4, [sp, #32]
 801a422:	2eff      	cmp	r6, #255	; 0xff
 801a424:	d01d      	beq.n	801a462 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 801a426:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a428:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a42c:	fb06 f808 	mul.w	r8, r6, r8
 801a430:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a434:	fb06 f60c 	mul.w	r6, r6, ip
 801a438:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801a43c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a440:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801a444:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 801a448:	44c6      	add	lr, r8
 801a44a:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801a44e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a452:	0a36      	lsrs	r6, r6, #8
 801a454:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a458:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a45c:	ea4e 0406 	orr.w	r4, lr, r6
 801a460:	940c      	str	r4, [sp, #48]	; 0x30
 801a462:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a464:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801a468:	9c08      	ldr	r4, [sp, #32]
 801a46a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a46e:	fb09 f606 	mul.w	r6, r9, r6
 801a472:	fb01 660c 	mla	r6, r1, ip, r6
 801a476:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a47a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a47c:	fb00 660c 	mla	r6, r0, ip, r6
 801a480:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a484:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a486:	fb0b 660c 	mla	r6, fp, ip, r6
 801a48a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a48e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a492:	fb09 f90c 	mul.w	r9, r9, ip
 801a496:	fb01 9303 	mla	r3, r1, r3, r9
 801a49a:	9908      	ldr	r1, [sp, #32]
 801a49c:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801a4a0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a4a2:	fb00 330e 	mla	r3, r0, lr, r3
 801a4a6:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a4aa:	fb0b 3b00 	mla	fp, fp, r0, r3
 801a4ae:	0a36      	lsrs	r6, r6, #8
 801a4b0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801a4b4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a4b8:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801a4bc:	ea46 060b 	orr.w	r6, r6, fp
 801a4c0:	2aff      	cmp	r2, #255	; 0xff
 801a4c2:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801a4c6:	f000 8099 	beq.w	801a5fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 801a4ca:	8839      	ldrh	r1, [r7, #0]
 801a4cc:	43d2      	mvns	r2, r2
 801a4ce:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801a4d2:	fa5f fe82 	uxtb.w	lr, r2
 801a4d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a4da:	fb0c fc0e 	mul.w	ip, ip, lr
 801a4de:	10c8      	asrs	r0, r1, #3
 801a4e0:	00ca      	lsls	r2, r1, #3
 801a4e2:	f10c 0101 	add.w	r1, ip, #1
 801a4e6:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801a4ea:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 801a4ee:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a4f2:	b2d2      	uxtb	r2, r2
 801a4f4:	4952      	ldr	r1, [pc, #328]	; (801a640 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 801a4f6:	fb02 f20e 	mul.w	r2, r2, lr
 801a4fa:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801a4fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a502:	1c51      	adds	r1, r2, #1
 801a504:	fb00 f00e 	mul.w	r0, r0, lr
 801a508:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a50c:	b2f6      	uxtb	r6, r6
 801a50e:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801a512:	1c42      	adds	r2, r0, #1
 801a514:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a518:	b2db      	uxtb	r3, r3
 801a51a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a51e:	00db      	lsls	r3, r3, #3
 801a520:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 801a524:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a528:	431e      	orrs	r6, r3
 801a52a:	803e      	strh	r6, [r7, #0]
 801a52c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a52e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a530:	441a      	add	r2, r3
 801a532:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a534:	9229      	str	r2, [sp, #164]	; 0xa4
 801a536:	441d      	add	r5, r3
 801a538:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a53a:	3b01      	subs	r3, #1
 801a53c:	3702      	adds	r7, #2
 801a53e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a540:	e6b6      	b.n	801a2b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 801a542:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a544:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a546:	441a      	add	r2, r3
 801a548:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a54a:	9229      	str	r2, [sp, #164]	; 0xa4
 801a54c:	441d      	add	r5, r3
 801a54e:	9b06      	ldr	r3, [sp, #24]
 801a550:	3b01      	subs	r3, #1
 801a552:	9306      	str	r3, [sp, #24]
 801a554:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a556:	3302      	adds	r3, #2
 801a558:	930a      	str	r3, [sp, #40]	; 0x28
 801a55a:	e660      	b.n	801a21e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801a55c:	f47f ae72 	bne.w	801a244 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801a560:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a562:	2b00      	cmp	r3, #0
 801a564:	f340 81bc 	ble.w	801a8e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801a568:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a56c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a570:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a574:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a576:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a57a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a57e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a582:	eef0 6a48 	vmov.f32	s13, s16
 801a586:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a58a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a58e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a592:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801a596:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a59a:	eef0 6a68 	vmov.f32	s13, s17
 801a59e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a5a2:	ee18 2a10 	vmov	r2, s16
 801a5a6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a5aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5ae:	ee18 2a90 	vmov	r2, s17
 801a5b2:	932b      	str	r3, [sp, #172]	; 0xac
 801a5b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a5b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5ba:	932c      	str	r3, [sp, #176]	; 0xb0
 801a5bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a5be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a5c0:	3b01      	subs	r3, #1
 801a5c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a5c6:	9312      	str	r3, [sp, #72]	; 0x48
 801a5c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a5ca:	bf08      	it	eq
 801a5cc:	4613      	moveq	r3, r2
 801a5ce:	ee16 5a90 	vmov	r5, s13
 801a5d2:	9306      	str	r3, [sp, #24]
 801a5d4:	eef0 8a67 	vmov.f32	s17, s15
 801a5d8:	eeb0 8a47 	vmov.f32	s16, s14
 801a5dc:	e618      	b.n	801a210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801a5de:	b150      	cbz	r0, 801a5f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 801a5e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a5e2:	5871      	ldr	r1, [r6, r1]
 801a5e4:	9108      	str	r1, [sp, #32]
 801a5e6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a5ea:	26ff      	movs	r6, #255	; 0xff
 801a5ec:	46b0      	mov	r8, r6
 801a5ee:	e698      	b.n	801a322 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 801a5f0:	26ff      	movs	r6, #255	; 0xff
 801a5f2:	46b2      	mov	sl, r6
 801a5f4:	e695      	b.n	801a322 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 801a5f6:	26ff      	movs	r6, #255	; 0xff
 801a5f8:	46b2      	mov	sl, r6
 801a5fa:	e7f7      	b.n	801a5ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 801a5fc:	0972      	lsrs	r2, r6, #5
 801a5fe:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a602:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a606:	f023 0307 	bic.w	r3, r3, #7
 801a60a:	4313      	orrs	r3, r2
 801a60c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a610:	e78a      	b.n	801a528 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 801a612:	1c4e      	adds	r6, r1, #1
 801a614:	d18a      	bne.n	801a52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a616:	9c07      	ldr	r4, [sp, #28]
 801a618:	428c      	cmp	r4, r1
 801a61a:	dd87      	ble.n	801a52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a61c:	1c5c      	adds	r4, r3, #1
 801a61e:	db85      	blt.n	801a52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a620:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801a622:	429c      	cmp	r4, r3
 801a624:	dd82      	ble.n	801a52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a626:	e9cd 2003 	strd	r2, r0, [sp, #12]
 801a62a:	e9cd 1301 	strd	r1, r3, [sp, #4]
 801a62e:	9400      	str	r4, [sp, #0]
 801a630:	9b07      	ldr	r3, [sp, #28]
 801a632:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a634:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a636:	4639      	mov	r1, r7
 801a638:	f7ff fc62 	bl	8019f00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a63c:	e776      	b.n	801a52c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 801a63e:	bf00      	nop
 801a640:	fffff800 	.word	0xfffff800
 801a644:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a646:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801a648:	9c07      	ldr	r4, [sp, #28]
 801a64a:	1409      	asrs	r1, r1, #16
 801a64c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a650:	142b      	asrs	r3, r5, #16
 801a652:	fb04 1303 	mla	r3, r4, r3, r1
 801a656:	9911      	ldr	r1, [sp, #68]	; 0x44
 801a658:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 801a65c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 801a660:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a664:	0e1f      	lsrs	r7, r3, #24
 801a666:	2a00      	cmp	r2, #0
 801a668:	f000 811d 	beq.w	801a8a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 801a66c:	6871      	ldr	r1, [r6, #4]
 801a66e:	910d      	str	r1, [sp, #52]	; 0x34
 801a670:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 801a674:	2800      	cmp	r0, #0
 801a676:	f000 811f 	beq.w	801a8b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 801a67a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a67c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a67e:	1871      	adds	r1, r6, r1
 801a680:	5934      	ldr	r4, [r6, r4]
 801a682:	6849      	ldr	r1, [r1, #4]
 801a684:	9409      	str	r4, [sp, #36]	; 0x24
 801a686:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a68a:	910f      	str	r1, [sp, #60]	; 0x3c
 801a68c:	0e0e      	lsrs	r6, r1, #24
 801a68e:	b292      	uxth	r2, r2
 801a690:	b280      	uxth	r0, r0
 801a692:	fb02 fb00 	mul.w	fp, r2, r0
 801a696:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801a69a:	0112      	lsls	r2, r2, #4
 801a69c:	eba2 080b 	sub.w	r8, r2, fp
 801a6a0:	b280      	uxth	r0, r0
 801a6a2:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a6a6:	fa1f f888 	uxth.w	r8, r8
 801a6aa:	1a09      	subs	r1, r1, r0
 801a6ac:	b289      	uxth	r1, r1
 801a6ae:	fb08 f20e 	mul.w	r2, r8, lr
 801a6b2:	fb01 2207 	mla	r2, r1, r7, r2
 801a6b6:	fb00 2209 	mla	r2, r0, r9, r2
 801a6ba:	fb0b 2206 	mla	r2, fp, r6, r2
 801a6be:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a6c2:	2a00      	cmp	r2, #0
 801a6c4:	f000 80e3 	beq.w	801a88e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801a6c8:	2fff      	cmp	r7, #255	; 0xff
 801a6ca:	d01a      	beq.n	801a702 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 801a6cc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a6d0:	fb07 fc0c 	mul.w	ip, r7, ip
 801a6d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a6d8:	435f      	muls	r7, r3
 801a6da:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801a6de:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a6e2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a6e6:	4463      	add	r3, ip
 801a6e8:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 801a6ec:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 801a6f0:	0a1b      	lsrs	r3, r3, #8
 801a6f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a6f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a6fa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a6fe:	ea43 030c 	orr.w	r3, r3, ip
 801a702:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a706:	d01e      	beq.n	801a746 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 801a708:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a70a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a70e:	fb0e f707 	mul.w	r7, lr, r7
 801a712:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801a716:	fb0e fe0c 	mul.w	lr, lr, ip
 801a71a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a71e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a722:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a726:	44bc      	add	ip, r7
 801a728:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801a72c:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 801a730:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a734:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a738:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a73c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a740:	ea4c 040e 	orr.w	r4, ip, lr
 801a744:	940d      	str	r4, [sp, #52]	; 0x34
 801a746:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a74a:	d01e      	beq.n	801a78a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 801a74c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a74e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a752:	fb09 fe0e 	mul.w	lr, r9, lr
 801a756:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a75a:	fb09 f907 	mul.w	r9, r9, r7
 801a75e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801a762:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a766:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801a76a:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801a76e:	44f4      	add	ip, lr
 801a770:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801a774:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a778:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a77c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a780:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a784:	ea4c 0409 	orr.w	r4, ip, r9
 801a788:	9409      	str	r4, [sp, #36]	; 0x24
 801a78a:	2eff      	cmp	r6, #255	; 0xff
 801a78c:	d01c      	beq.n	801a7c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 801a78e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a790:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801a794:	fb06 fe0e 	mul.w	lr, r6, lr
 801a798:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a79c:	437e      	muls	r6, r7
 801a79e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801a7a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a7a6:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801a7aa:	f506 7780 	add.w	r7, r6, #256	; 0x100
 801a7ae:	44f4      	add	ip, lr
 801a7b0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801a7b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a7b8:	0a36      	lsrs	r6, r6, #8
 801a7ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a7be:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a7c2:	ea4c 0406 	orr.w	r4, ip, r6
 801a7c6:	940f      	str	r4, [sp, #60]	; 0x3c
 801a7c8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a7ca:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 801a7ce:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801a7d0:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801a7d4:	fb08 f606 	mul.w	r6, r8, r6
 801a7d8:	fb01 6607 	mla	r6, r1, r7, r6
 801a7dc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a7e0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801a7e2:	fb00 6607 	mla	r6, r0, r7, r6
 801a7e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a7ea:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a7ec:	fb0b 6607 	mla	r6, fp, r7, r6
 801a7f0:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a7f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a7f8:	fb08 f807 	mul.w	r8, r8, r7
 801a7fc:	fb01 8303 	mla	r3, r1, r3, r8
 801a800:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a802:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a806:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a808:	fb00 330c 	mla	r3, r0, ip, r3
 801a80c:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801a810:	fb0b 3e0e 	mla	lr, fp, lr, r3
 801a814:	0a36      	lsrs	r6, r6, #8
 801a816:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a81a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a81e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a822:	ea46 060e 	orr.w	r6, r6, lr
 801a826:	2aff      	cmp	r2, #255	; 0xff
 801a828:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801a82c:	d04a      	beq.n	801a8c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801a82e:	f8ba 1000 	ldrh.w	r1, [sl]
 801a832:	43d2      	mvns	r2, r2
 801a834:	120f      	asrs	r7, r1, #8
 801a836:	fa5f fc82 	uxtb.w	ip, r2
 801a83a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a83e:	fb07 f70c 	mul.w	r7, r7, ip
 801a842:	10c8      	asrs	r0, r1, #3
 801a844:	00ca      	lsls	r2, r1, #3
 801a846:	1c79      	adds	r1, r7, #1
 801a848:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 801a84c:	0c37      	lsrs	r7, r6, #16
 801a84e:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801a852:	b2d2      	uxtb	r2, r2
 801a854:	4925      	ldr	r1, [pc, #148]	; (801a8ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 801a856:	fb02 f20c 	mul.w	r2, r2, ip
 801a85a:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 801a85e:	1c51      	adds	r1, r2, #1
 801a860:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a864:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a868:	b2f6      	uxtb	r6, r6
 801a86a:	fb00 f00c 	mul.w	r0, r0, ip
 801a86e:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801a872:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 801a876:	1c46      	adds	r6, r0, #1
 801a878:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 801a87c:	b2de      	uxtb	r6, r3
 801a87e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801a882:	00f6      	lsls	r6, r6, #3
 801a884:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a888:	4337      	orrs	r7, r6
 801a88a:	f8aa 7000 	strh.w	r7, [sl]
 801a88e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a890:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a892:	441a      	add	r2, r3
 801a894:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a896:	9229      	str	r2, [sp, #164]	; 0xa4
 801a898:	441d      	add	r5, r3
 801a89a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a89c:	3b01      	subs	r3, #1
 801a89e:	f10a 0a02 	add.w	sl, sl, #2
 801a8a2:	9313      	str	r3, [sp, #76]	; 0x4c
 801a8a4:	e4e7      	b.n	801a276 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 801a8a6:	b150      	cbz	r0, 801a8be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 801a8a8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a8aa:	5871      	ldr	r1, [r6, r1]
 801a8ac:	9109      	str	r1, [sp, #36]	; 0x24
 801a8ae:	ea4f 6911 	mov.w	r9, r1, lsr #24
 801a8b2:	26ff      	movs	r6, #255	; 0xff
 801a8b4:	46b6      	mov	lr, r6
 801a8b6:	e6ea      	b.n	801a68e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a8b8:	26ff      	movs	r6, #255	; 0xff
 801a8ba:	46b1      	mov	r9, r6
 801a8bc:	e6e7      	b.n	801a68e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a8be:	26ff      	movs	r6, #255	; 0xff
 801a8c0:	46b1      	mov	r9, r6
 801a8c2:	e7f7      	b.n	801a8b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 801a8c4:	0972      	lsrs	r2, r6, #5
 801a8c6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a8ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a8ce:	f023 0307 	bic.w	r3, r3, #7
 801a8d2:	4313      	orrs	r3, r2
 801a8d4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a8d8:	431e      	orrs	r6, r3
 801a8da:	f8aa 6000 	strh.w	r6, [sl]
 801a8de:	e7d6      	b.n	801a88e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801a8e0:	b017      	add	sp, #92	; 0x5c
 801a8e2:	ecbd 8b08 	vpop	{d8-d11}
 801a8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8ea:	bf00      	nop
 801a8ec:	fffff800 	.word	0xfffff800

0801a8f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a8f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a8f4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a8f8:	2c00      	cmp	r4, #0
 801a8fa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a8fe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a902:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a906:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a90a:	fb04 ce03 	mla	lr, r4, r3, ip
 801a90e:	db60      	blt.n	801a9d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a910:	45a1      	cmp	r9, r4
 801a912:	dd5e      	ble.n	801a9d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a914:	f1bc 0f00 	cmp.w	ip, #0
 801a918:	db59      	blt.n	801a9ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a91a:	45e0      	cmp	r8, ip
 801a91c:	dd57      	ble.n	801a9ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a91e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a922:	f01e 0f01 	tst.w	lr, #1
 801a926:	5c16      	ldrb	r6, [r2, r0]
 801a928:	bf0c      	ite	eq
 801a92a:	f006 060f 	andeq.w	r6, r6, #15
 801a92e:	1136      	asrne	r6, r6, #4
 801a930:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a934:	b2f6      	uxtb	r6, r6
 801a936:	f11c 0001 	adds.w	r0, ip, #1
 801a93a:	d44d      	bmi.n	801a9d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a93c:	4580      	cmp	r8, r0
 801a93e:	dd4b      	ble.n	801a9d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a940:	2d00      	cmp	r5, #0
 801a942:	d04b      	beq.n	801a9dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801a944:	f10e 0a01 	add.w	sl, lr, #1
 801a948:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a94c:	f01a 0f01 	tst.w	sl, #1
 801a950:	5c10      	ldrb	r0, [r2, r0]
 801a952:	bf0c      	ite	eq
 801a954:	f000 000f 	andeq.w	r0, r0, #15
 801a958:	1100      	asrne	r0, r0, #4
 801a95a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a95e:	b2c0      	uxtb	r0, r0
 801a960:	3401      	adds	r4, #1
 801a962:	d43f      	bmi.n	801a9e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a964:	45a1      	cmp	r9, r4
 801a966:	dd3d      	ble.n	801a9e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a968:	2f00      	cmp	r7, #0
 801a96a:	f000 80a0 	beq.w	801aaae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1be>
 801a96e:	f1bc 0f00 	cmp.w	ip, #0
 801a972:	db35      	blt.n	801a9e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a974:	45e0      	cmp	r8, ip
 801a976:	dd33      	ble.n	801a9e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a978:	eb03 090e 	add.w	r9, r3, lr
 801a97c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a980:	f019 0f01 	tst.w	r9, #1
 801a984:	5d14      	ldrb	r4, [r2, r4]
 801a986:	bf0c      	ite	eq
 801a988:	f004 040f 	andeq.w	r4, r4, #15
 801a98c:	1124      	asrne	r4, r4, #4
 801a98e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a992:	b2e4      	uxtb	r4, r4
 801a994:	f11c 0c01 	adds.w	ip, ip, #1
 801a998:	d427      	bmi.n	801a9ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a99a:	45e0      	cmp	r8, ip
 801a99c:	dd25      	ble.n	801a9ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a99e:	b335      	cbz	r5, 801a9ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801a9a0:	3301      	adds	r3, #1
 801a9a2:	449e      	add	lr, r3
 801a9a4:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a9a8:	f01e 0f01 	tst.w	lr, #1
 801a9ac:	5cd2      	ldrb	r2, [r2, r3]
 801a9ae:	bf0c      	ite	eq
 801a9b0:	f002 020f 	andeq.w	r2, r2, #15
 801a9b4:	1112      	asrne	r2, r2, #4
 801a9b6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a9ba:	b2d3      	uxtb	r3, r2
 801a9bc:	2d0f      	cmp	r5, #15
 801a9be:	d917      	bls.n	801a9f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801a9c0:	4b3d      	ldr	r3, [pc, #244]	; (801aab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a9c2:	4a3e      	ldr	r2, [pc, #248]	; (801aabc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a9c4:	483e      	ldr	r0, [pc, #248]	; (801aac0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801a9c6:	f240 3173 	movw	r1, #883	; 0x373
 801a9ca:	f000 ffdf 	bl	801b98c <__assert_func>
 801a9ce:	2600      	movs	r6, #0
 801a9d0:	e7b1      	b.n	801a936 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801a9d2:	2000      	movs	r0, #0
 801a9d4:	4606      	mov	r6, r0
 801a9d6:	e7c3      	b.n	801a960 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a9d8:	2000      	movs	r0, #0
 801a9da:	e7c1      	b.n	801a960 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a9dc:	4628      	mov	r0, r5
 801a9de:	e7bf      	b.n	801a960 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a9e0:	2400      	movs	r4, #0
 801a9e2:	e7d7      	b.n	801a994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801a9e4:	2300      	movs	r3, #0
 801a9e6:	461c      	mov	r4, r3
 801a9e8:	e7e8      	b.n	801a9bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a9ea:	2300      	movs	r3, #0
 801a9ec:	e7e6      	b.n	801a9bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a9ee:	462b      	mov	r3, r5
 801a9f0:	2f0f      	cmp	r7, #15
 801a9f2:	d8e5      	bhi.n	801a9c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a9f4:	b2ad      	uxth	r5, r5
 801a9f6:	b2bf      	uxth	r7, r7
 801a9f8:	fb05 fc07 	mul.w	ip, r5, r7
 801a9fc:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801aa00:	012d      	lsls	r5, r5, #4
 801aa02:	b2bf      	uxth	r7, r7
 801aa04:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801aa08:	eba5 050c 	sub.w	r5, r5, ip
 801aa0c:	1bd2      	subs	r2, r2, r7
 801aa0e:	b2ad      	uxth	r5, r5
 801aa10:	b292      	uxth	r2, r2
 801aa12:	4368      	muls	r0, r5
 801aa14:	fb06 0002 	mla	r0, r6, r2, r0
 801aa18:	fb07 0404 	mla	r4, r7, r4, r0
 801aa1c:	fb0c 4303 	mla	r3, ip, r3, r4
 801aa20:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801aa24:	2b00      	cmp	r3, #0
 801aa26:	d040      	beq.n	801aaaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801aa28:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801aa2c:	4a25      	ldr	r2, [pc, #148]	; (801aac4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d4>)
 801aa2e:	4343      	muls	r3, r0
 801aa30:	1c58      	adds	r0, r3, #1
 801aa32:	6816      	ldr	r6, [r2, #0]
 801aa34:	880a      	ldrh	r2, [r1, #0]
 801aa36:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801aa3a:	1200      	asrs	r0, r0, #8
 801aa3c:	b284      	uxth	r4, r0
 801aa3e:	1215      	asrs	r5, r2, #8
 801aa40:	43c0      	mvns	r0, r0
 801aa42:	b2c3      	uxtb	r3, r0
 801aa44:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801aa48:	1230      	asrs	r0, r6, #8
 801aa4a:	fb15 f503 	smulbb	r5, r5, r3
 801aa4e:	10d7      	asrs	r7, r2, #3
 801aa50:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aa54:	fb00 5004 	mla	r0, r0, r4, r5
 801aa58:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aa5c:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801aa60:	00d2      	lsls	r2, r2, #3
 801aa62:	fb17 f703 	smulbb	r7, r7, r3
 801aa66:	b2d2      	uxtb	r2, r2
 801aa68:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801aa6c:	00f6      	lsls	r6, r6, #3
 801aa6e:	fb05 7504 	mla	r5, r5, r4, r7
 801aa72:	fb12 f303 	smulbb	r3, r2, r3
 801aa76:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801aa7a:	fb06 3304 	mla	r3, r6, r4, r3
 801aa7e:	b2ad      	uxth	r5, r5
 801aa80:	b29a      	uxth	r2, r3
 801aa82:	b280      	uxth	r0, r0
 801aa84:	1c6b      	adds	r3, r5, #1
 801aa86:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801aa8a:	1c44      	adds	r4, r0, #1
 801aa8c:	095b      	lsrs	r3, r3, #5
 801aa8e:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801aa92:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801aa96:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aa9a:	4303      	orrs	r3, r0
 801aa9c:	1c50      	adds	r0, r2, #1
 801aa9e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801aaa2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aaa6:	4313      	orrs	r3, r2
 801aaa8:	800b      	strh	r3, [r1, #0]
 801aaaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801aaae:	2d0f      	cmp	r5, #15
 801aab0:	d886      	bhi.n	801a9c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801aab2:	463b      	mov	r3, r7
 801aab4:	463c      	mov	r4, r7
 801aab6:	e79d      	b.n	801a9f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801aab8:	0802112b 	.word	0x0802112b
 801aabc:	08021689 	.word	0x08021689
 801aac0:	080211b3 	.word	0x080211b3
 801aac4:	200017a8 	.word	0x200017a8

0801aac8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801aac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aacc:	ed2d 8b08 	vpush	{d8-d11}
 801aad0:	b099      	sub	sp, #100	; 0x64
 801aad2:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 801aad6:	9309      	str	r3, [sp, #36]	; 0x24
 801aad8:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801aadc:	930a      	str	r3, [sp, #40]	; 0x28
 801aade:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801aae2:	9216      	str	r2, [sp, #88]	; 0x58
 801aae4:	930b      	str	r3, [sp, #44]	; 0x2c
 801aae6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801aae8:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801aaec:	910f      	str	r1, [sp, #60]	; 0x3c
 801aaee:	9310      	str	r3, [sp, #64]	; 0x40
 801aaf0:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801aaf4:	9017      	str	r0, [sp, #92]	; 0x5c
 801aaf6:	6850      	ldr	r0, [r2, #4]
 801aaf8:	6812      	ldr	r2, [r2, #0]
 801aafa:	fb00 1303 	mla	r3, r0, r3, r1
 801aafe:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801ab02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ab04:	3301      	adds	r3, #1
 801ab06:	f023 0301 	bic.w	r3, r3, #1
 801ab0a:	930c      	str	r3, [sp, #48]	; 0x30
 801ab0c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801ab0e:	681f      	ldr	r7, [r3, #0]
 801ab10:	eeb0 aa40 	vmov.f32	s20, s0
 801ab14:	eef0 9a60 	vmov.f32	s19, s1
 801ab18:	eeb0 9a41 	vmov.f32	s18, s2
 801ab1c:	eeb0 8a62 	vmov.f32	s16, s5
 801ab20:	eef0 8a43 	vmov.f32	s17, s6
 801ab24:	eef0 ba44 	vmov.f32	s23, s8
 801ab28:	eeb0 ba64 	vmov.f32	s22, s9
 801ab2c:	eef0 aa45 	vmov.f32	s21, s10
 801ab30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ab32:	2b00      	cmp	r3, #0
 801ab34:	dc03      	bgt.n	801ab3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801ab36:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ab38:	2b00      	cmp	r3, #0
 801ab3a:	f340 826b 	ble.w	801b014 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 801ab3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab40:	2b00      	cmp	r3, #0
 801ab42:	f340 811f 	ble.w	801ad84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 801ab46:	1422      	asrs	r2, r4, #16
 801ab48:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ab4c:	d42d      	bmi.n	801abaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801ab4e:	980a      	ldr	r0, [sp, #40]	; 0x28
 801ab50:	1c51      	adds	r1, r2, #1
 801ab52:	4288      	cmp	r0, r1
 801ab54:	dd2c      	ble.n	801abb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801ab56:	2b00      	cmp	r3, #0
 801ab58:	db2a      	blt.n	801abb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801ab5a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ab5c:	1c59      	adds	r1, r3, #1
 801ab5e:	4288      	cmp	r0, r1
 801ab60:	dd26      	ble.n	801abb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801ab62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab64:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ab66:	3b01      	subs	r3, #1
 801ab68:	fb02 4203 	mla	r2, r2, r3, r4
 801ab6c:	1412      	asrs	r2, r2, #16
 801ab6e:	d42a      	bmi.n	801abc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801ab70:	990a      	ldr	r1, [sp, #40]	; 0x28
 801ab72:	3201      	adds	r2, #1
 801ab74:	4291      	cmp	r1, r2
 801ab76:	dd26      	ble.n	801abc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801ab78:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801ab7a:	fb02 6303 	mla	r3, r2, r3, r6
 801ab7e:	141b      	asrs	r3, r3, #16
 801ab80:	d421      	bmi.n	801abc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801ab82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ab84:	3301      	adds	r3, #1
 801ab86:	429a      	cmp	r2, r3
 801ab88:	dd1d      	ble.n	801abc6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801ab8a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801ab8e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ab92:	9311      	str	r3, [sp, #68]	; 0x44
 801ab94:	46d1      	mov	r9, sl
 801ab96:	f1bb 0f00 	cmp.w	fp, #0
 801ab9a:	f300 8163 	bgt.w	801ae64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39c>
 801ab9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aba0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801aba4:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801aba8:	e0ee      	b.n	801ad88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 801abaa:	1c51      	adds	r1, r2, #1
 801abac:	f040 80e0 	bne.w	801ad70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801abb0:	990a      	ldr	r1, [sp, #40]	; 0x28
 801abb2:	4291      	cmp	r1, r2
 801abb4:	f340 80dc 	ble.w	801ad70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801abb8:	1c5a      	adds	r2, r3, #1
 801abba:	f2c0 80d9 	blt.w	801ad70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801abbe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801abc0:	4293      	cmp	r3, r2
 801abc2:	f280 80d5 	bge.w	801ad70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801abc6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801abca:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801abce:	9311      	str	r3, [sp, #68]	; 0x44
 801abd0:	46d0      	mov	r8, sl
 801abd2:	f1b9 0f00 	cmp.w	r9, #0
 801abd6:	dde2      	ble.n	801ab9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801abd8:	1420      	asrs	r0, r4, #16
 801abda:	ea4f 4326 	mov.w	r3, r6, asr #16
 801abde:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801abe2:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801abe6:	f100 8122 	bmi.w	801ae2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801abea:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801abec:	f100 0c01 	add.w	ip, r0, #1
 801abf0:	4565      	cmp	r5, ip
 801abf2:	f340 811e 	ble.w	801ae32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801abf6:	2b00      	cmp	r3, #0
 801abf8:	f2c0 811b 	blt.w	801ae32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801abfc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801abfe:	f103 0c01 	add.w	ip, r3, #1
 801ac02:	4565      	cmp	r5, ip
 801ac04:	f340 8115 	ble.w	801ae32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801ac08:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ac0a:	fb03 0305 	mla	r3, r3, r5, r0
 801ac0e:	0858      	lsrs	r0, r3, #1
 801ac10:	07dd      	lsls	r5, r3, #31
 801ac12:	5c38      	ldrb	r0, [r7, r0]
 801ac14:	bf54      	ite	pl
 801ac16:	f000 000f 	andpl.w	r0, r0, #15
 801ac1a:	1100      	asrmi	r0, r0, #4
 801ac1c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ac20:	b2c0      	uxtb	r0, r0
 801ac22:	2a00      	cmp	r2, #0
 801ac24:	f000 80ef 	beq.w	801ae06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 801ac28:	f103 0e01 	add.w	lr, r3, #1
 801ac2c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801ac30:	f01e 0f01 	tst.w	lr, #1
 801ac34:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ac38:	bf0c      	ite	eq
 801ac3a:	f00c 0c0f 	andeq.w	ip, ip, #15
 801ac3e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801ac42:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ac46:	fa5f f58c 	uxtb.w	r5, ip
 801ac4a:	9512      	str	r5, [sp, #72]	; 0x48
 801ac4c:	b1f9      	cbz	r1, 801ac8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801ac4e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac50:	442b      	add	r3, r5
 801ac52:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ac56:	07dd      	lsls	r5, r3, #31
 801ac58:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ac5c:	bf54      	ite	pl
 801ac5e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ac62:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ac66:	3301      	adds	r3, #1
 801ac68:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ac6c:	fa5f f58c 	uxtb.w	r5, ip
 801ac70:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ac74:	950d      	str	r5, [sp, #52]	; 0x34
 801ac76:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ac7a:	07dd      	lsls	r5, r3, #31
 801ac7c:	bf54      	ite	pl
 801ac7e:	f00c 030f 	andpl.w	r3, ip, #15
 801ac82:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801ac86:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ac8a:	b2db      	uxtb	r3, r3
 801ac8c:	9313      	str	r3, [sp, #76]	; 0x4c
 801ac8e:	b292      	uxth	r2, r2
 801ac90:	b289      	uxth	r1, r1
 801ac92:	fb02 f301 	mul.w	r3, r2, r1
 801ac96:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ac9a:	0112      	lsls	r2, r2, #4
 801ac9c:	b289      	uxth	r1, r1
 801ac9e:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801aca2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801aca4:	1ad2      	subs	r2, r2, r3
 801aca6:	ebac 0c01 	sub.w	ip, ip, r1
 801acaa:	b292      	uxth	r2, r2
 801acac:	436a      	muls	r2, r5
 801acae:	fa1f fc8c 	uxth.w	ip, ip
 801acb2:	fb00 200c 	mla	r0, r0, ip, r2
 801acb6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801acb8:	fb01 0102 	mla	r1, r1, r2, r0
 801acbc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801acbe:	fb03 1302 	mla	r3, r3, r2, r1
 801acc2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801acc6:	2b00      	cmp	r3, #0
 801acc8:	d049      	beq.n	801ad5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801acca:	9910      	ldr	r1, [sp, #64]	; 0x40
 801accc:	4ac5      	ldr	r2, [pc, #788]	; (801afe4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801acce:	4dc6      	ldr	r5, [pc, #792]	; (801afe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801acd0:	f8d2 e000 	ldr.w	lr, [r2]
 801acd4:	f8b8 2000 	ldrh.w	r2, [r8]
 801acd8:	434b      	muls	r3, r1
 801acda:	1c59      	adds	r1, r3, #1
 801acdc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ace0:	121b      	asrs	r3, r3, #8
 801ace2:	b299      	uxth	r1, r3
 801ace4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ace8:	43db      	mvns	r3, r3
 801acea:	b2db      	uxtb	r3, r3
 801acec:	ea4f 202e 	mov.w	r0, lr, asr #8
 801acf0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801acf4:	fb1c fc03 	smulbb	ip, ip, r3
 801acf8:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801acfc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ad00:	fb00 c001 	mla	r0, r0, r1, ip
 801ad04:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ad08:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 801ad0c:	fb1b fb03 	smulbb	fp, fp, r3
 801ad10:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ad14:	00d2      	lsls	r2, r2, #3
 801ad16:	fb0c bc01 	mla	ip, ip, r1, fp
 801ad1a:	b2d2      	uxtb	r2, r2
 801ad1c:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 801ad20:	fb12 f303 	smulbb	r3, r2, r3
 801ad24:	fa1f fc8c 	uxth.w	ip, ip
 801ad28:	fa5f fe8e 	uxtb.w	lr, lr
 801ad2c:	b280      	uxth	r0, r0
 801ad2e:	fb0e 3101 	mla	r1, lr, r1, r3
 801ad32:	f10c 0201 	add.w	r2, ip, #1
 801ad36:	b289      	uxth	r1, r1
 801ad38:	1c43      	adds	r3, r0, #1
 801ad3a:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801ad3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ad42:	0952      	lsrs	r2, r2, #5
 801ad44:	1c4b      	adds	r3, r1, #1
 801ad46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad4a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ad4e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ad52:	4310      	orrs	r0, r2
 801ad54:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ad58:	4308      	orrs	r0, r1
 801ad5a:	f8a8 0000 	strh.w	r0, [r8]
 801ad5e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801ad60:	441c      	add	r4, r3
 801ad62:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ad64:	f108 0802 	add.w	r8, r8, #2
 801ad68:	441e      	add	r6, r3
 801ad6a:	f109 39ff 	add.w	r9, r9, #4294967295
 801ad6e:	e730      	b.n	801abd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 801ad70:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801ad72:	441c      	add	r4, r3
 801ad74:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ad76:	441e      	add	r6, r3
 801ad78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad7a:	3b01      	subs	r3, #1
 801ad7c:	9309      	str	r3, [sp, #36]	; 0x24
 801ad7e:	f10a 0a02 	add.w	sl, sl, #2
 801ad82:	e6dc      	b.n	801ab3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801ad84:	f47f aeed 	bne.w	801ab62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801ad88:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ad8a:	2b00      	cmp	r3, #0
 801ad8c:	f340 8142 	ble.w	801b014 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 801ad90:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ad94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ad98:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ad9c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ad9e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801ada2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801ada6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801adaa:	eef0 6a48 	vmov.f32	s13, s16
 801adae:	ee69 7a27 	vmul.f32	s15, s18, s15
 801adb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801adb6:	ee37 8a48 	vsub.f32	s16, s14, s16
 801adba:	ee16 4a90 	vmov	r4, s13
 801adbe:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801adc2:	eef0 6a68 	vmov.f32	s13, s17
 801adc6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801adca:	ee18 2a10 	vmov	r2, s16
 801adce:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801add2:	fb92 f3f3 	sdiv	r3, r2, r3
 801add6:	ee18 2a90 	vmov	r2, s17
 801adda:	932d      	str	r3, [sp, #180]	; 0xb4
 801addc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801adde:	fb92 f3f3 	sdiv	r3, r2, r3
 801ade2:	932e      	str	r3, [sp, #184]	; 0xb8
 801ade4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ade6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801ade8:	3b01      	subs	r3, #1
 801adea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801adee:	930f      	str	r3, [sp, #60]	; 0x3c
 801adf0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801adf2:	bf08      	it	eq
 801adf4:	4613      	moveq	r3, r2
 801adf6:	ee16 6a90 	vmov	r6, s13
 801adfa:	9309      	str	r3, [sp, #36]	; 0x24
 801adfc:	eef0 8a67 	vmov.f32	s17, s15
 801ae00:	eeb0 8a47 	vmov.f32	s16, s14
 801ae04:	e694      	b.n	801ab30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801ae06:	2900      	cmp	r1, #0
 801ae08:	f43f af41 	beq.w	801ac8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801ae0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ae0e:	442b      	add	r3, r5
 801ae10:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ae14:	07db      	lsls	r3, r3, #31
 801ae16:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ae1a:	bf54      	ite	pl
 801ae1c:	f00c 030f 	andpl.w	r3, ip, #15
 801ae20:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801ae24:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ae28:	b2db      	uxtb	r3, r3
 801ae2a:	930d      	str	r3, [sp, #52]	; 0x34
 801ae2c:	e72f      	b.n	801ac8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801ae2e:	1c45      	adds	r5, r0, #1
 801ae30:	d195      	bne.n	801ad5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801ae32:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801ae34:	4285      	cmp	r5, r0
 801ae36:	dd92      	ble.n	801ad5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801ae38:	1c5d      	adds	r5, r3, #1
 801ae3a:	db90      	blt.n	801ad5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801ae3c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ae3e:	429d      	cmp	r5, r3
 801ae40:	dd8d      	ble.n	801ad5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801ae42:	e9cd 3203 	strd	r3, r2, [sp, #12]
 801ae46:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ae48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ae4a:	9301      	str	r3, [sp, #4]
 801ae4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ae4e:	9002      	str	r0, [sp, #8]
 801ae50:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ae54:	9300      	str	r3, [sp, #0]
 801ae56:	463a      	mov	r2, r7
 801ae58:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ae5a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801ae5c:	4641      	mov	r1, r8
 801ae5e:	f7ff fd47 	bl	801a8f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801ae62:	e77c      	b.n	801ad5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801ae64:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ae66:	1422      	asrs	r2, r4, #16
 801ae68:	1433      	asrs	r3, r6, #16
 801ae6a:	fb05 2303 	mla	r3, r5, r3, r2
 801ae6e:	085a      	lsrs	r2, r3, #1
 801ae70:	07dd      	lsls	r5, r3, #31
 801ae72:	5cba      	ldrb	r2, [r7, r2]
 801ae74:	bf54      	ite	pl
 801ae76:	f002 020f 	andpl.w	r2, r2, #15
 801ae7a:	1112      	asrmi	r2, r2, #4
 801ae7c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ae80:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ae84:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ae88:	b2d2      	uxtb	r2, r2
 801ae8a:	2900      	cmp	r1, #0
 801ae8c:	f000 80ae 	beq.w	801afec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801ae90:	f103 0e01 	add.w	lr, r3, #1
 801ae94:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801ae98:	f01e 0f01 	tst.w	lr, #1
 801ae9c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aea0:	bf0c      	ite	eq
 801aea2:	f00c 0c0f 	andeq.w	ip, ip, #15
 801aea6:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801aeaa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aeae:	fa5f f58c 	uxtb.w	r5, ip
 801aeb2:	9514      	str	r5, [sp, #80]	; 0x50
 801aeb4:	b300      	cbz	r0, 801aef8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801aeb6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aeb8:	442b      	add	r3, r5
 801aeba:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801aebe:	07dd      	lsls	r5, r3, #31
 801aec0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aec4:	bf54      	ite	pl
 801aec6:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aeca:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aece:	3301      	adds	r3, #1
 801aed0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aed4:	fa5f f58c 	uxtb.w	r5, ip
 801aed8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801aedc:	950e      	str	r5, [sp, #56]	; 0x38
 801aede:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aee2:	07dd      	lsls	r5, r3, #31
 801aee4:	bf54      	ite	pl
 801aee6:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aeea:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aeee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aef2:	fa5f f38c 	uxtb.w	r3, ip
 801aef6:	9315      	str	r3, [sp, #84]	; 0x54
 801aef8:	b289      	uxth	r1, r1
 801aefa:	b280      	uxth	r0, r0
 801aefc:	fb01 f300 	mul.w	r3, r1, r0
 801af00:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801af04:	0109      	lsls	r1, r1, #4
 801af06:	b280      	uxth	r0, r0
 801af08:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801af0c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801af0e:	1ac9      	subs	r1, r1, r3
 801af10:	ebac 0c00 	sub.w	ip, ip, r0
 801af14:	b289      	uxth	r1, r1
 801af16:	4369      	muls	r1, r5
 801af18:	fa1f fc8c 	uxth.w	ip, ip
 801af1c:	fb02 120c 	mla	r2, r2, ip, r1
 801af20:	990e      	ldr	r1, [sp, #56]	; 0x38
 801af22:	fb00 2001 	mla	r0, r0, r1, r2
 801af26:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801af28:	fb03 0302 	mla	r3, r3, r2, r0
 801af2c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801af30:	2b00      	cmp	r3, #0
 801af32:	d04d      	beq.n	801afd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x508>
 801af34:	9910      	ldr	r1, [sp, #64]	; 0x40
 801af36:	4a2b      	ldr	r2, [pc, #172]	; (801afe4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801af38:	4d2b      	ldr	r5, [pc, #172]	; (801afe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801af3a:	f8d2 e000 	ldr.w	lr, [r2]
 801af3e:	f8b9 2000 	ldrh.w	r2, [r9]
 801af42:	434b      	muls	r3, r1
 801af44:	1c59      	adds	r1, r3, #1
 801af46:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801af4a:	121b      	asrs	r3, r3, #8
 801af4c:	b299      	uxth	r1, r3
 801af4e:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801af52:	43db      	mvns	r3, r3
 801af54:	b2db      	uxtb	r3, r3
 801af56:	ea4f 202e 	mov.w	r0, lr, asr #8
 801af5a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af5e:	fb1c fc03 	smulbb	ip, ip, r3
 801af62:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801af66:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801af6a:	fb00 c001 	mla	r0, r0, r1, ip
 801af6e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801af72:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 801af76:	fb18 f803 	smulbb	r8, r8, r3
 801af7a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801af7e:	00d2      	lsls	r2, r2, #3
 801af80:	fb0c 8c01 	mla	ip, ip, r1, r8
 801af84:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 801af88:	b2d2      	uxtb	r2, r2
 801af8a:	fa1f fc8c 	uxth.w	ip, ip
 801af8e:	fa5f fe8e 	uxtb.w	lr, lr
 801af92:	fb12 f203 	smulbb	r2, r2, r3
 801af96:	b280      	uxth	r0, r0
 801af98:	fb0e 2201 	mla	r2, lr, r1, r2
 801af9c:	f10c 0801 	add.w	r8, ip, #1
 801afa0:	b292      	uxth	r2, r2
 801afa2:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801afa6:	f100 0801 	add.w	r8, r0, #1
 801afaa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801afae:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801afb2:	1c51      	adds	r1, r2, #1
 801afb4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801afb8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801afbc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801afc0:	ea4c 0c00 	orr.w	ip, ip, r0
 801afc4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801afc8:	ea4c 0c02 	orr.w	ip, ip, r2
 801afcc:	f8a9 c000 	strh.w	ip, [r9]
 801afd0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801afd2:	441c      	add	r4, r3
 801afd4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801afd6:	f109 0902 	add.w	r9, r9, #2
 801afda:	441e      	add	r6, r3
 801afdc:	f10b 3bff 	add.w	fp, fp, #4294967295
 801afe0:	e5d9      	b.n	801ab96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801afe2:	bf00      	nop
 801afe4:	200017a8 	.word	0x200017a8
 801afe8:	0007fff8 	.word	0x0007fff8
 801afec:	2800      	cmp	r0, #0
 801afee:	d083      	beq.n	801aef8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801aff0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aff2:	442b      	add	r3, r5
 801aff4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801aff8:	07db      	lsls	r3, r3, #31
 801affa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801affe:	bf54      	ite	pl
 801b000:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b004:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b008:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b00c:	fa5f f38c 	uxtb.w	r3, ip
 801b010:	930e      	str	r3, [sp, #56]	; 0x38
 801b012:	e771      	b.n	801aef8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801b014:	b019      	add	sp, #100	; 0x64
 801b016:	ecbd 8b08 	vpop	{d8-d11}
 801b01a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b01e:	bf00      	nop

0801b020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801b020:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b024:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b028:	2c00      	cmp	r4, #0
 801b02a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b02e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b032:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b036:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b03a:	fb04 ce03 	mla	lr, r4, r3, ip
 801b03e:	db60      	blt.n	801b102 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b040:	45a1      	cmp	r9, r4
 801b042:	dd5e      	ble.n	801b102 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b044:	f1bc 0f00 	cmp.w	ip, #0
 801b048:	db59      	blt.n	801b0fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b04a:	45e0      	cmp	r8, ip
 801b04c:	dd57      	ble.n	801b0fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b04e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b052:	f01e 0f01 	tst.w	lr, #1
 801b056:	5c16      	ldrb	r6, [r2, r0]
 801b058:	bf0c      	ite	eq
 801b05a:	f006 060f 	andeq.w	r6, r6, #15
 801b05e:	1136      	asrne	r6, r6, #4
 801b060:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b064:	b2f6      	uxtb	r6, r6
 801b066:	f11c 0001 	adds.w	r0, ip, #1
 801b06a:	d44d      	bmi.n	801b108 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b06c:	4580      	cmp	r8, r0
 801b06e:	dd4b      	ble.n	801b108 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b070:	2d00      	cmp	r5, #0
 801b072:	d04b      	beq.n	801b10c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801b074:	f10e 0a01 	add.w	sl, lr, #1
 801b078:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b07c:	f01a 0f01 	tst.w	sl, #1
 801b080:	5c10      	ldrb	r0, [r2, r0]
 801b082:	bf0c      	ite	eq
 801b084:	f000 000f 	andeq.w	r0, r0, #15
 801b088:	1100      	asrne	r0, r0, #4
 801b08a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b08e:	b2c0      	uxtb	r0, r0
 801b090:	3401      	adds	r4, #1
 801b092:	d43f      	bmi.n	801b114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b094:	45a1      	cmp	r9, r4
 801b096:	dd3d      	ble.n	801b114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b098:	2f00      	cmp	r7, #0
 801b09a:	f000 8099 	beq.w	801b1d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>
 801b09e:	f1bc 0f00 	cmp.w	ip, #0
 801b0a2:	db35      	blt.n	801b110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b0a4:	45e0      	cmp	r8, ip
 801b0a6:	dd33      	ble.n	801b110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b0a8:	eb03 090e 	add.w	r9, r3, lr
 801b0ac:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801b0b0:	f019 0f01 	tst.w	r9, #1
 801b0b4:	5d14      	ldrb	r4, [r2, r4]
 801b0b6:	bf0c      	ite	eq
 801b0b8:	f004 040f 	andeq.w	r4, r4, #15
 801b0bc:	1124      	asrne	r4, r4, #4
 801b0be:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b0c2:	b2e4      	uxtb	r4, r4
 801b0c4:	f11c 0c01 	adds.w	ip, ip, #1
 801b0c8:	d427      	bmi.n	801b11a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b0ca:	45e0      	cmp	r8, ip
 801b0cc:	dd25      	ble.n	801b11a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b0ce:	b335      	cbz	r5, 801b11e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801b0d0:	3301      	adds	r3, #1
 801b0d2:	449e      	add	lr, r3
 801b0d4:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b0d8:	f01e 0f01 	tst.w	lr, #1
 801b0dc:	5cd2      	ldrb	r2, [r2, r3]
 801b0de:	bf0c      	ite	eq
 801b0e0:	f002 020f 	andeq.w	r2, r2, #15
 801b0e4:	1112      	asrne	r2, r2, #4
 801b0e6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b0ea:	b2d3      	uxtb	r3, r2
 801b0ec:	2d0f      	cmp	r5, #15
 801b0ee:	d917      	bls.n	801b120 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801b0f0:	4b3a      	ldr	r3, [pc, #232]	; (801b1dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801b0f2:	4a3b      	ldr	r2, [pc, #236]	; (801b1e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801b0f4:	483b      	ldr	r0, [pc, #236]	; (801b1e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801b0f6:	f240 3173 	movw	r1, #883	; 0x373
 801b0fa:	f000 fc47 	bl	801b98c <__assert_func>
 801b0fe:	2600      	movs	r6, #0
 801b100:	e7b1      	b.n	801b066 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801b102:	2000      	movs	r0, #0
 801b104:	4606      	mov	r6, r0
 801b106:	e7c3      	b.n	801b090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b108:	2000      	movs	r0, #0
 801b10a:	e7c1      	b.n	801b090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b10c:	4628      	mov	r0, r5
 801b10e:	e7bf      	b.n	801b090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b110:	2400      	movs	r4, #0
 801b112:	e7d7      	b.n	801b0c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801b114:	2300      	movs	r3, #0
 801b116:	461c      	mov	r4, r3
 801b118:	e7e8      	b.n	801b0ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b11a:	2300      	movs	r3, #0
 801b11c:	e7e6      	b.n	801b0ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b11e:	462b      	mov	r3, r5
 801b120:	2f0f      	cmp	r7, #15
 801b122:	d8e5      	bhi.n	801b0f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b124:	b2ad      	uxth	r5, r5
 801b126:	b2bf      	uxth	r7, r7
 801b128:	fb05 fc07 	mul.w	ip, r5, r7
 801b12c:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801b130:	012d      	lsls	r5, r5, #4
 801b132:	b2bf      	uxth	r7, r7
 801b134:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801b138:	eba5 050c 	sub.w	r5, r5, ip
 801b13c:	1bd2      	subs	r2, r2, r7
 801b13e:	b2ad      	uxth	r5, r5
 801b140:	b292      	uxth	r2, r2
 801b142:	4368      	muls	r0, r5
 801b144:	fb06 0002 	mla	r0, r6, r2, r0
 801b148:	fb07 0404 	mla	r4, r7, r4, r0
 801b14c:	fb0c 4303 	mla	r3, ip, r3, r4
 801b150:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b154:	2b00      	cmp	r3, #0
 801b156:	d039      	beq.n	801b1cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801b158:	4a23      	ldr	r2, [pc, #140]	; (801b1e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c8>)
 801b15a:	6816      	ldr	r6, [r2, #0]
 801b15c:	880a      	ldrh	r2, [r1, #0]
 801b15e:	b298      	uxth	r0, r3
 801b160:	1215      	asrs	r5, r2, #8
 801b162:	43db      	mvns	r3, r3
 801b164:	b2db      	uxtb	r3, r3
 801b166:	1234      	asrs	r4, r6, #8
 801b168:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b16c:	fb15 f503 	smulbb	r5, r5, r3
 801b170:	10d7      	asrs	r7, r2, #3
 801b172:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b176:	fb04 5400 	mla	r4, r4, r0, r5
 801b17a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b17e:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801b182:	fb17 f703 	smulbb	r7, r7, r3
 801b186:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b18a:	00d2      	lsls	r2, r2, #3
 801b18c:	fb05 7500 	mla	r5, r5, r0, r7
 801b190:	b2d2      	uxtb	r2, r2
 801b192:	00f6      	lsls	r6, r6, #3
 801b194:	fb12 f303 	smulbb	r3, r2, r3
 801b198:	b2ad      	uxth	r5, r5
 801b19a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b19e:	b2a4      	uxth	r4, r4
 801b1a0:	fb06 3000 	mla	r0, r6, r0, r3
 801b1a4:	1c6b      	adds	r3, r5, #1
 801b1a6:	b280      	uxth	r0, r0
 801b1a8:	1c62      	adds	r2, r4, #1
 801b1aa:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801b1ae:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801b1b2:	095b      	lsrs	r3, r3, #5
 801b1b4:	1c42      	adds	r2, r0, #1
 801b1b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b1ba:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b1be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b1c2:	4323      	orrs	r3, r4
 801b1c4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b1c8:	4303      	orrs	r3, r0
 801b1ca:	800b      	strh	r3, [r1, #0]
 801b1cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b1d0:	2d0f      	cmp	r5, #15
 801b1d2:	d88d      	bhi.n	801b0f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b1d4:	463b      	mov	r3, r7
 801b1d6:	463c      	mov	r4, r7
 801b1d8:	e7a4      	b.n	801b124 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801b1da:	bf00      	nop
 801b1dc:	0802112b 	.word	0x0802112b
 801b1e0:	08021689 	.word	0x08021689
 801b1e4:	080211b3 	.word	0x080211b3
 801b1e8:	200017a8 	.word	0x200017a8

0801b1ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801b1ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1f0:	ed2d 8b08 	vpush	{d8-d11}
 801b1f4:	b095      	sub	sp, #84	; 0x54
 801b1f6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801b1fa:	9306      	str	r3, [sp, #24]
 801b1fc:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 801b200:	9307      	str	r3, [sp, #28]
 801b202:	920d      	str	r2, [sp, #52]	; 0x34
 801b204:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801b208:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801b20a:	910a      	str	r1, [sp, #40]	; 0x28
 801b20c:	9308      	str	r3, [sp, #32]
 801b20e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801b212:	9013      	str	r0, [sp, #76]	; 0x4c
 801b214:	6850      	ldr	r0, [r2, #4]
 801b216:	6812      	ldr	r2, [r2, #0]
 801b218:	fb00 1303 	mla	r3, r0, r3, r1
 801b21c:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 801b220:	9b07      	ldr	r3, [sp, #28]
 801b222:	3301      	adds	r3, #1
 801b224:	f023 0301 	bic.w	r3, r3, #1
 801b228:	9309      	str	r3, [sp, #36]	; 0x24
 801b22a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b22c:	681f      	ldr	r7, [r3, #0]
 801b22e:	eeb0 aa40 	vmov.f32	s20, s0
 801b232:	eef0 9a60 	vmov.f32	s19, s1
 801b236:	eeb0 9a41 	vmov.f32	s18, s2
 801b23a:	eeb0 8a62 	vmov.f32	s16, s5
 801b23e:	eef0 8a43 	vmov.f32	s17, s6
 801b242:	eef0 ba44 	vmov.f32	s23, s8
 801b246:	eeb0 ba64 	vmov.f32	s22, s9
 801b24a:	eef0 aa45 	vmov.f32	s21, s10
 801b24e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b250:	2b00      	cmp	r3, #0
 801b252:	dc03      	bgt.n	801b25c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801b254:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b256:	2b00      	cmp	r3, #0
 801b258:	f340 8260 	ble.w	801b71c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801b25c:	9b06      	ldr	r3, [sp, #24]
 801b25e:	2b00      	cmp	r3, #0
 801b260:	f340 811c 	ble.w	801b49c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801b264:	1422      	asrs	r2, r4, #16
 801b266:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b26a:	d42d      	bmi.n	801b2c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801b26c:	9807      	ldr	r0, [sp, #28]
 801b26e:	1c51      	adds	r1, r2, #1
 801b270:	4288      	cmp	r0, r1
 801b272:	dd2c      	ble.n	801b2ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801b274:	2b00      	cmp	r3, #0
 801b276:	db2a      	blt.n	801b2ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801b278:	9808      	ldr	r0, [sp, #32]
 801b27a:	1c59      	adds	r1, r3, #1
 801b27c:	4288      	cmp	r0, r1
 801b27e:	dd26      	ble.n	801b2ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801b280:	9b06      	ldr	r3, [sp, #24]
 801b282:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b284:	3b01      	subs	r3, #1
 801b286:	fb02 4203 	mla	r2, r2, r3, r4
 801b28a:	1412      	asrs	r2, r2, #16
 801b28c:	d42a      	bmi.n	801b2e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801b28e:	9907      	ldr	r1, [sp, #28]
 801b290:	3201      	adds	r2, #1
 801b292:	4291      	cmp	r1, r2
 801b294:	dd26      	ble.n	801b2e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801b296:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801b298:	fb02 6303 	mla	r3, r2, r3, r6
 801b29c:	141b      	asrs	r3, r3, #16
 801b29e:	d421      	bmi.n	801b2e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801b2a0:	9a08      	ldr	r2, [sp, #32]
 801b2a2:	3301      	adds	r3, #1
 801b2a4:	429a      	cmp	r2, r3
 801b2a6:	dd1d      	ble.n	801b2e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801b2a8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801b2ac:	f8dd a018 	ldr.w	sl, [sp, #24]
 801b2b0:	930e      	str	r3, [sp, #56]	; 0x38
 801b2b2:	46d8      	mov	r8, fp
 801b2b4:	f1ba 0f00 	cmp.w	sl, #0
 801b2b8:	f300 8164 	bgt.w	801b584 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801b2bc:	9b06      	ldr	r3, [sp, #24]
 801b2be:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b2c2:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801b2c6:	e0eb      	b.n	801b4a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801b2c8:	1c51      	adds	r1, r2, #1
 801b2ca:	f040 80dd 	bne.w	801b488 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801b2ce:	9907      	ldr	r1, [sp, #28]
 801b2d0:	4291      	cmp	r1, r2
 801b2d2:	f340 80d9 	ble.w	801b488 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801b2d6:	1c5a      	adds	r2, r3, #1
 801b2d8:	f2c0 80d6 	blt.w	801b488 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801b2dc:	9a08      	ldr	r2, [sp, #32]
 801b2de:	4293      	cmp	r3, r2
 801b2e0:	f280 80d2 	bge.w	801b488 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801b2e4:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801b2e8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801b2ec:	46d8      	mov	r8, fp
 801b2ee:	f1b9 0f00 	cmp.w	r9, #0
 801b2f2:	dde3      	ble.n	801b2bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801b2f4:	1420      	asrs	r0, r4, #16
 801b2f6:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b2fa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b2fe:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b302:	f100 8127 	bmi.w	801b554 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801b306:	9d07      	ldr	r5, [sp, #28]
 801b308:	f100 0c01 	add.w	ip, r0, #1
 801b30c:	4565      	cmp	r5, ip
 801b30e:	f340 8123 	ble.w	801b558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801b312:	2b00      	cmp	r3, #0
 801b314:	f2c0 8120 	blt.w	801b558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801b318:	9d08      	ldr	r5, [sp, #32]
 801b31a:	f103 0c01 	add.w	ip, r3, #1
 801b31e:	4565      	cmp	r5, ip
 801b320:	f340 811a 	ble.w	801b558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801b324:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b326:	fb03 0305 	mla	r3, r3, r5, r0
 801b32a:	0858      	lsrs	r0, r3, #1
 801b32c:	07dd      	lsls	r5, r3, #31
 801b32e:	5c38      	ldrb	r0, [r7, r0]
 801b330:	bf54      	ite	pl
 801b332:	f000 000f 	andpl.w	r0, r0, #15
 801b336:	1100      	asrmi	r0, r0, #4
 801b338:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b33c:	b2c0      	uxtb	r0, r0
 801b33e:	2a00      	cmp	r2, #0
 801b340:	f000 80ed 	beq.w	801b51e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x332>
 801b344:	f103 0e01 	add.w	lr, r3, #1
 801b348:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801b34c:	f01e 0f01 	tst.w	lr, #1
 801b350:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b354:	bf0c      	ite	eq
 801b356:	f00c 0c0f 	andeq.w	ip, ip, #15
 801b35a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801b35e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b362:	fa5f fc8c 	uxtb.w	ip, ip
 801b366:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801b36a:	b1f9      	cbz	r1, 801b3ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801b36c:	4453      	add	r3, sl
 801b36e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b372:	07dd      	lsls	r5, r3, #31
 801b374:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b378:	bf54      	ite	pl
 801b37a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b37e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b382:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b386:	3301      	adds	r3, #1
 801b388:	fa5f fc8c 	uxtb.w	ip, ip
 801b38c:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801b390:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b394:	07dd      	lsls	r5, r3, #31
 801b396:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b39a:	bf54      	ite	pl
 801b39c:	f00c 030f 	andpl.w	r3, ip, #15
 801b3a0:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801b3a4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b3a8:	b2db      	uxtb	r3, r3
 801b3aa:	9310      	str	r3, [sp, #64]	; 0x40
 801b3ac:	b292      	uxth	r2, r2
 801b3ae:	b289      	uxth	r1, r1
 801b3b0:	fb02 f301 	mul.w	r3, r2, r1
 801b3b4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b3b8:	0112      	lsls	r2, r2, #4
 801b3ba:	b289      	uxth	r1, r1
 801b3bc:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801b3c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b3c2:	1ad2      	subs	r2, r2, r3
 801b3c4:	ebac 0c01 	sub.w	ip, ip, r1
 801b3c8:	b292      	uxth	r2, r2
 801b3ca:	436a      	muls	r2, r5
 801b3cc:	fa1f fc8c 	uxth.w	ip, ip
 801b3d0:	fb00 200c 	mla	r0, r0, ip, r2
 801b3d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b3d6:	fb01 0102 	mla	r1, r1, r2, r0
 801b3da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b3dc:	fb03 1302 	mla	r3, r3, r2, r1
 801b3e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b3e4:	2b00      	cmp	r3, #0
 801b3e6:	d046      	beq.n	801b476 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b3e8:	4ac7      	ldr	r2, [pc, #796]	; (801b708 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801b3ea:	49c8      	ldr	r1, [pc, #800]	; (801b70c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801b3ec:	6812      	ldr	r2, [r2, #0]
 801b3ee:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801b3f2:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801b3f6:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801b3fa:	b2d2      	uxtb	r2, r2
 801b3fc:	2bff      	cmp	r3, #255	; 0xff
 801b3fe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b402:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b406:	4615      	mov	r5, r2
 801b408:	f000 809c 	beq.w	801b544 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801b40c:	f8b8 0000 	ldrh.w	r0, [r8]
 801b410:	b29a      	uxth	r2, r3
 801b412:	1201      	asrs	r1, r0, #8
 801b414:	43db      	mvns	r3, r3
 801b416:	b2db      	uxtb	r3, r3
 801b418:	fb1e fe02 	smulbb	lr, lr, r2
 801b41c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b420:	fb01 e103 	mla	r1, r1, r3, lr
 801b424:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b428:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b42c:	fb1c fc02 	smulbb	ip, ip, r2
 801b430:	fb0e cc03 	mla	ip, lr, r3, ip
 801b434:	00c0      	lsls	r0, r0, #3
 801b436:	fa1f fc8c 	uxth.w	ip, ip
 801b43a:	fb15 f202 	smulbb	r2, r5, r2
 801b43e:	b2c0      	uxtb	r0, r0
 801b440:	b289      	uxth	r1, r1
 801b442:	fb00 2303 	mla	r3, r0, r3, r2
 801b446:	f10c 0e01 	add.w	lr, ip, #1
 801b44a:	b29b      	uxth	r3, r3
 801b44c:	1c4a      	adds	r2, r1, #1
 801b44e:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801b452:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b456:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b45a:	1c5a      	adds	r2, r3, #1
 801b45c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b460:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b464:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b468:	ea4c 0101 	orr.w	r1, ip, r1
 801b46c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b470:	4319      	orrs	r1, r3
 801b472:	f8a8 1000 	strh.w	r1, [r8]
 801b476:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b478:	441c      	add	r4, r3
 801b47a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b47c:	f108 0802 	add.w	r8, r8, #2
 801b480:	441e      	add	r6, r3
 801b482:	f109 39ff 	add.w	r9, r9, #4294967295
 801b486:	e732      	b.n	801b2ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801b488:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b48a:	441c      	add	r4, r3
 801b48c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b48e:	441e      	add	r6, r3
 801b490:	9b06      	ldr	r3, [sp, #24]
 801b492:	3b01      	subs	r3, #1
 801b494:	9306      	str	r3, [sp, #24]
 801b496:	f10b 0b02 	add.w	fp, fp, #2
 801b49a:	e6df      	b.n	801b25c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801b49c:	f47f aef0 	bne.w	801b280 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801b4a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b4a2:	2b00      	cmp	r3, #0
 801b4a4:	f340 813a 	ble.w	801b71c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801b4a8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b4ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b4b0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b4b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b4b6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b4ba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b4be:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b4c2:	eef0 6a48 	vmov.f32	s13, s16
 801b4c6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b4ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b4ce:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b4d2:	ee16 4a90 	vmov	r4, s13
 801b4d6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b4da:	eef0 6a68 	vmov.f32	s13, s17
 801b4de:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b4e2:	ee18 2a10 	vmov	r2, s16
 801b4e6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b4ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4ee:	ee18 2a90 	vmov	r2, s17
 801b4f2:	9329      	str	r3, [sp, #164]	; 0xa4
 801b4f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b4f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b4fa:	932a      	str	r3, [sp, #168]	; 0xa8
 801b4fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b4fe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b500:	3b01      	subs	r3, #1
 801b502:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b506:	930a      	str	r3, [sp, #40]	; 0x28
 801b508:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b50a:	bf08      	it	eq
 801b50c:	4613      	moveq	r3, r2
 801b50e:	ee16 6a90 	vmov	r6, s13
 801b512:	9306      	str	r3, [sp, #24]
 801b514:	eef0 8a67 	vmov.f32	s17, s15
 801b518:	eeb0 8a47 	vmov.f32	s16, s14
 801b51c:	e697      	b.n	801b24e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801b51e:	2900      	cmp	r1, #0
 801b520:	f43f af44 	beq.w	801b3ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801b524:	4453      	add	r3, sl
 801b526:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b52a:	07db      	lsls	r3, r3, #31
 801b52c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b530:	bf54      	ite	pl
 801b532:	f00c 030f 	andpl.w	r3, ip, #15
 801b536:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801b53a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b53e:	b2db      	uxtb	r3, r3
 801b540:	930b      	str	r3, [sp, #44]	; 0x2c
 801b542:	e733      	b.n	801b3ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801b544:	08d2      	lsrs	r2, r2, #3
 801b546:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801b54a:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801b54e:	f8a8 c000 	strh.w	ip, [r8]
 801b552:	e790      	b.n	801b476 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b554:	1c45      	adds	r5, r0, #1
 801b556:	d18e      	bne.n	801b476 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b558:	9d07      	ldr	r5, [sp, #28]
 801b55a:	4285      	cmp	r5, r0
 801b55c:	dd8b      	ble.n	801b476 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b55e:	1c5d      	adds	r5, r3, #1
 801b560:	db89      	blt.n	801b476 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b562:	9d08      	ldr	r5, [sp, #32]
 801b564:	429d      	cmp	r5, r3
 801b566:	dd86      	ble.n	801b476 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b568:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801b56c:	9b07      	ldr	r3, [sp, #28]
 801b56e:	9300      	str	r3, [sp, #0]
 801b570:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801b574:	9501      	str	r5, [sp, #4]
 801b576:	4653      	mov	r3, sl
 801b578:	463a      	mov	r2, r7
 801b57a:	4641      	mov	r1, r8
 801b57c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b57e:	f7ff fd4f 	bl	801b020 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b582:	e778      	b.n	801b476 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801b584:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b586:	1422      	asrs	r2, r4, #16
 801b588:	1433      	asrs	r3, r6, #16
 801b58a:	fb01 2303 	mla	r3, r1, r3, r2
 801b58e:	085a      	lsrs	r2, r3, #1
 801b590:	07d9      	lsls	r1, r3, #31
 801b592:	5cba      	ldrb	r2, [r7, r2]
 801b594:	bf54      	ite	pl
 801b596:	f002 020f 	andpl.w	r2, r2, #15
 801b59a:	1112      	asrmi	r2, r2, #4
 801b59c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b5a0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b5a4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b5a8:	b2d2      	uxtb	r2, r2
 801b5aa:	2800      	cmp	r0, #0
 801b5ac:	f000 809b 	beq.w	801b6e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fa>
 801b5b0:	f103 0e01 	add.w	lr, r3, #1
 801b5b4:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801b5b8:	f01e 0f01 	tst.w	lr, #1
 801b5bc:	5c79      	ldrb	r1, [r7, r1]
 801b5be:	bf0c      	ite	eq
 801b5c0:	f001 010f 	andeq.w	r1, r1, #15
 801b5c4:	1109      	asrne	r1, r1, #4
 801b5c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b5ca:	b2c9      	uxtb	r1, r1
 801b5cc:	9111      	str	r1, [sp, #68]	; 0x44
 801b5ce:	f1bc 0f00 	cmp.w	ip, #0
 801b5d2:	d018      	beq.n	801b606 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801b5d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b5d6:	440b      	add	r3, r1
 801b5d8:	0859      	lsrs	r1, r3, #1
 801b5da:	07dd      	lsls	r5, r3, #31
 801b5dc:	5c79      	ldrb	r1, [r7, r1]
 801b5de:	bf54      	ite	pl
 801b5e0:	f001 010f 	andpl.w	r1, r1, #15
 801b5e4:	1109      	asrmi	r1, r1, #4
 801b5e6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b5ea:	b2c9      	uxtb	r1, r1
 801b5ec:	3301      	adds	r3, #1
 801b5ee:	910c      	str	r1, [sp, #48]	; 0x30
 801b5f0:	0859      	lsrs	r1, r3, #1
 801b5f2:	07dd      	lsls	r5, r3, #31
 801b5f4:	5c79      	ldrb	r1, [r7, r1]
 801b5f6:	bf54      	ite	pl
 801b5f8:	f001 010f 	andpl.w	r1, r1, #15
 801b5fc:	1109      	asrmi	r1, r1, #4
 801b5fe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b602:	b2c9      	uxtb	r1, r1
 801b604:	9112      	str	r1, [sp, #72]	; 0x48
 801b606:	b280      	uxth	r0, r0
 801b608:	fa1f fc8c 	uxth.w	ip, ip
 801b60c:	fb00 f30c 	mul.w	r3, r0, ip
 801b610:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b614:	0100      	lsls	r0, r0, #4
 801b616:	fa1f fc8c 	uxth.w	ip, ip
 801b61a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b61e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b620:	1ac0      	subs	r0, r0, r3
 801b622:	eba1 010c 	sub.w	r1, r1, ip
 801b626:	b280      	uxth	r0, r0
 801b628:	b289      	uxth	r1, r1
 801b62a:	4368      	muls	r0, r5
 801b62c:	fb02 0201 	mla	r2, r2, r1, r0
 801b630:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b632:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b636:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b638:	fb03 c302 	mla	r3, r3, r2, ip
 801b63c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b640:	2b00      	cmp	r3, #0
 801b642:	d047      	beq.n	801b6d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801b644:	4a30      	ldr	r2, [pc, #192]	; (801b708 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801b646:	4931      	ldr	r1, [pc, #196]	; (801b70c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801b648:	6812      	ldr	r2, [r2, #0]
 801b64a:	2bff      	cmp	r3, #255	; 0xff
 801b64c:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801b650:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801b654:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801b658:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b65c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b660:	b2d2      	uxtb	r2, r2
 801b662:	d055      	beq.n	801b710 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801b664:	f8b8 0000 	ldrh.w	r0, [r8]
 801b668:	fa1f f983 	uxth.w	r9, r3
 801b66c:	1201      	asrs	r1, r0, #8
 801b66e:	43db      	mvns	r3, r3
 801b670:	b2db      	uxtb	r3, r3
 801b672:	fb1e fe09 	smulbb	lr, lr, r9
 801b676:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b67a:	fb01 e103 	mla	r1, r1, r3, lr
 801b67e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801b682:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b686:	fb1c fc09 	smulbb	ip, ip, r9
 801b68a:	fb0e cc03 	mla	ip, lr, r3, ip
 801b68e:	00c0      	lsls	r0, r0, #3
 801b690:	fa1f fc8c 	uxth.w	ip, ip
 801b694:	b2c0      	uxtb	r0, r0
 801b696:	fb12 f209 	smulbb	r2, r2, r9
 801b69a:	b289      	uxth	r1, r1
 801b69c:	fb00 2203 	mla	r2, r0, r3, r2
 801b6a0:	f10c 0e01 	add.w	lr, ip, #1
 801b6a4:	b292      	uxth	r2, r2
 801b6a6:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801b6aa:	f101 0e01 	add.w	lr, r1, #1
 801b6ae:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b6b2:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 801b6b6:	1c53      	adds	r3, r2, #1
 801b6b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b6bc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b6c0:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b6c4:	ea4c 0c01 	orr.w	ip, ip, r1
 801b6c8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b6cc:	ea4c 0c02 	orr.w	ip, ip, r2
 801b6d0:	f8a8 c000 	strh.w	ip, [r8]
 801b6d4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b6d6:	441c      	add	r4, r3
 801b6d8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b6da:	f108 0802 	add.w	r8, r8, #2
 801b6de:	441e      	add	r6, r3
 801b6e0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b6e4:	e5e6      	b.n	801b2b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801b6e6:	f1bc 0f00 	cmp.w	ip, #0
 801b6ea:	d08c      	beq.n	801b606 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801b6ec:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b6ee:	440b      	add	r3, r1
 801b6f0:	0859      	lsrs	r1, r3, #1
 801b6f2:	07db      	lsls	r3, r3, #31
 801b6f4:	5c79      	ldrb	r1, [r7, r1]
 801b6f6:	bf54      	ite	pl
 801b6f8:	f001 010f 	andpl.w	r1, r1, #15
 801b6fc:	1109      	asrmi	r1, r1, #4
 801b6fe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b702:	b2c9      	uxtb	r1, r1
 801b704:	910c      	str	r1, [sp, #48]	; 0x30
 801b706:	e77e      	b.n	801b606 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801b708:	200017a8 	.word	0x200017a8
 801b70c:	0007fff8 	.word	0x0007fff8
 801b710:	08d2      	lsrs	r2, r2, #3
 801b712:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801b716:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801b71a:	e7d9      	b.n	801b6d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e4>
 801b71c:	b015      	add	sp, #84	; 0x54
 801b71e:	ecbd 8b08 	vpop	{d8-d11}
 801b722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b726:	bf00      	nop

0801b728 <CRC_Lock>:
 801b728:	b530      	push	{r4, r5, lr}
 801b72a:	4a1d      	ldr	r2, [pc, #116]	; (801b7a0 <CRC_Lock+0x78>)
 801b72c:	6813      	ldr	r3, [r2, #0]
 801b72e:	f023 0301 	bic.w	r3, r3, #1
 801b732:	6013      	str	r3, [r2, #0]
 801b734:	4b1b      	ldr	r3, [pc, #108]	; (801b7a4 <CRC_Lock+0x7c>)
 801b736:	681a      	ldr	r2, [r3, #0]
 801b738:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b73c:	4022      	ands	r2, r4
 801b73e:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b742:	42aa      	cmp	r2, r5
 801b744:	d005      	beq.n	801b752 <CRC_Lock+0x2a>
 801b746:	681b      	ldr	r3, [r3, #0]
 801b748:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b74c:	4023      	ands	r3, r4
 801b74e:	4293      	cmp	r3, r2
 801b750:	d11d      	bne.n	801b78e <CRC_Lock+0x66>
 801b752:	4b15      	ldr	r3, [pc, #84]	; (801b7a8 <CRC_Lock+0x80>)
 801b754:	681b      	ldr	r3, [r3, #0]
 801b756:	b9d3      	cbnz	r3, 801b78e <CRC_Lock+0x66>
 801b758:	4a14      	ldr	r2, [pc, #80]	; (801b7ac <CRC_Lock+0x84>)
 801b75a:	6813      	ldr	r3, [r2, #0]
 801b75c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b760:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801b764:	d006      	beq.n	801b774 <CRC_Lock+0x4c>
 801b766:	6813      	ldr	r3, [r2, #0]
 801b768:	f240 4283 	movw	r2, #1155	; 0x483
 801b76c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b770:	4293      	cmp	r3, r2
 801b772:	d10c      	bne.n	801b78e <CRC_Lock+0x66>
 801b774:	4b0e      	ldr	r3, [pc, #56]	; (801b7b0 <CRC_Lock+0x88>)
 801b776:	2201      	movs	r2, #1
 801b778:	601a      	str	r2, [r3, #0]
 801b77a:	681a      	ldr	r2, [r3, #0]
 801b77c:	2a00      	cmp	r2, #0
 801b77e:	d1fc      	bne.n	801b77a <CRC_Lock+0x52>
 801b780:	4b0c      	ldr	r3, [pc, #48]	; (801b7b4 <CRC_Lock+0x8c>)
 801b782:	6018      	str	r0, [r3, #0]
 801b784:	6818      	ldr	r0, [r3, #0]
 801b786:	1a43      	subs	r3, r0, r1
 801b788:	4258      	negs	r0, r3
 801b78a:	4158      	adcs	r0, r3
 801b78c:	bd30      	pop	{r4, r5, pc}
 801b78e:	4b0a      	ldr	r3, [pc, #40]	; (801b7b8 <CRC_Lock+0x90>)
 801b790:	2201      	movs	r2, #1
 801b792:	601a      	str	r2, [r3, #0]
 801b794:	681a      	ldr	r2, [r3, #0]
 801b796:	2a00      	cmp	r2, #0
 801b798:	d1fc      	bne.n	801b794 <CRC_Lock+0x6c>
 801b79a:	4b08      	ldr	r3, [pc, #32]	; (801b7bc <CRC_Lock+0x94>)
 801b79c:	e7f1      	b.n	801b782 <CRC_Lock+0x5a>
 801b79e:	bf00      	nop
 801b7a0:	e0002000 	.word	0xe0002000
 801b7a4:	e000ed00 	.word	0xe000ed00
 801b7a8:	e0042000 	.word	0xe0042000
 801b7ac:	5c001000 	.word	0x5c001000
 801b7b0:	58024c08 	.word	0x58024c08
 801b7b4:	58024c00 	.word	0x58024c00
 801b7b8:	40023008 	.word	0x40023008
 801b7bc:	40023000 	.word	0x40023000

0801b7c0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b7c0:	6101      	str	r1, [r0, #16]
 801b7c2:	4770      	bx	lr

0801b7c4 <_ZN8touchgfx8Gestures4tickEv>:
 801b7c4:	7b83      	ldrb	r3, [r0, #14]
 801b7c6:	b14b      	cbz	r3, 801b7dc <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b7c8:	8903      	ldrh	r3, [r0, #8]
 801b7ca:	3301      	adds	r3, #1
 801b7cc:	b29b      	uxth	r3, r3
 801b7ce:	2b07      	cmp	r3, #7
 801b7d0:	8103      	strh	r3, [r0, #8]
 801b7d2:	bf81      	itttt	hi
 801b7d4:	2300      	movhi	r3, #0
 801b7d6:	8143      	strhhi	r3, [r0, #10]
 801b7d8:	8183      	strhhi	r3, [r0, #12]
 801b7da:	7383      	strbhi	r3, [r0, #14]
 801b7dc:	4770      	bx	lr
	...

0801b7e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b7e0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b7e4:	4604      	mov	r4, r0
 801b7e6:	8880      	ldrh	r0, [r0, #4]
 801b7e8:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b7ec:	4698      	mov	r8, r3
 801b7ee:	eba8 0000 	sub.w	r0, r8, r0
 801b7f2:	4b1c      	ldr	r3, [pc, #112]	; (801b864 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b7f4:	9300      	str	r3, [sp, #0]
 801b7f6:	b280      	uxth	r0, r0
 801b7f8:	2300      	movs	r3, #0
 801b7fa:	f88d 3004 	strb.w	r3, [sp, #4]
 801b7fe:	b203      	sxth	r3, r0
 801b800:	2b00      	cmp	r3, #0
 801b802:	bfb8      	it	lt
 801b804:	4240      	neglt	r0, r0
 801b806:	4617      	mov	r7, r2
 801b808:	8aa2      	ldrh	r2, [r4, #20]
 801b80a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b80e:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b812:	bfb8      	it	lt
 801b814:	b203      	sxthlt	r3, r0
 801b816:	460e      	mov	r6, r1
 801b818:	4293      	cmp	r3, r2
 801b81a:	88e1      	ldrh	r1, [r4, #6]
 801b81c:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b820:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b824:	dc08      	bgt.n	801b838 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b826:	1a69      	subs	r1, r5, r1
 801b828:	b289      	uxth	r1, r1
 801b82a:	b20b      	sxth	r3, r1
 801b82c:	2b00      	cmp	r3, #0
 801b82e:	bfbc      	itt	lt
 801b830:	4249      	neglt	r1, r1
 801b832:	b20b      	sxthlt	r3, r1
 801b834:	429a      	cmp	r2, r3
 801b836:	da13      	bge.n	801b860 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b838:	6920      	ldr	r0, [r4, #16]
 801b83a:	6803      	ldr	r3, [r0, #0]
 801b83c:	4669      	mov	r1, sp
 801b83e:	685b      	ldr	r3, [r3, #4]
 801b840:	4798      	blx	r3
 801b842:	eba8 0606 	sub.w	r6, r8, r6
 801b846:	2300      	movs	r3, #0
 801b848:	1bef      	subs	r7, r5, r7
 801b84a:	2001      	movs	r0, #1
 801b84c:	8123      	strh	r3, [r4, #8]
 801b84e:	8166      	strh	r6, [r4, #10]
 801b850:	81a7      	strh	r7, [r4, #12]
 801b852:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b856:	80e5      	strh	r5, [r4, #6]
 801b858:	73a0      	strb	r0, [r4, #14]
 801b85a:	b004      	add	sp, #16
 801b85c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b860:	2000      	movs	r0, #0
 801b862:	e7fa      	b.n	801b85a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b864:	08020468 	.word	0x08020468

0801b868 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b868:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b86a:	461e      	mov	r6, r3
 801b86c:	1e4b      	subs	r3, r1, #1
 801b86e:	2b01      	cmp	r3, #1
 801b870:	b085      	sub	sp, #20
 801b872:	4604      	mov	r4, r0
 801b874:	460d      	mov	r5, r1
 801b876:	4617      	mov	r7, r2
 801b878:	d84b      	bhi.n	801b912 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b87a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b87e:	1cd3      	adds	r3, r2, #3
 801b880:	b29b      	uxth	r3, r3
 801b882:	2b06      	cmp	r3, #6
 801b884:	d916      	bls.n	801b8b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b886:	f8df c098 	ldr.w	ip, [pc, #152]	; 801b920 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801b88a:	f8cd c004 	str.w	ip, [sp, #4]
 801b88e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b892:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b896:	6900      	ldr	r0, [r0, #16]
 801b898:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b89c:	f04f 0c00 	mov.w	ip, #0
 801b8a0:	f88d c008 	strb.w	ip, [sp, #8]
 801b8a4:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b8a8:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b8ac:	6803      	ldr	r3, [r0, #0]
 801b8ae:	a901      	add	r1, sp, #4
 801b8b0:	689b      	ldr	r3, [r3, #8]
 801b8b2:	4798      	blx	r3
 801b8b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b8b8:	1cd3      	adds	r3, r2, #3
 801b8ba:	b29b      	uxth	r3, r3
 801b8bc:	2b06      	cmp	r3, #6
 801b8be:	d916      	bls.n	801b8ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b8c0:	f8df c05c 	ldr.w	ip, [pc, #92]	; 801b920 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801b8c4:	f8cd c004 	str.w	ip, [sp, #4]
 801b8c8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b8cc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b8d0:	6920      	ldr	r0, [r4, #16]
 801b8d2:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b8d6:	f04f 0c01 	mov.w	ip, #1
 801b8da:	f88d c008 	strb.w	ip, [sp, #8]
 801b8de:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b8e2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b8e6:	6803      	ldr	r3, [r0, #0]
 801b8e8:	a901      	add	r1, sp, #4
 801b8ea:	689b      	ldr	r3, [r3, #8]
 801b8ec:	4798      	blx	r3
 801b8ee:	4b0b      	ldr	r3, [pc, #44]	; (801b91c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb4>)
 801b8f0:	9301      	str	r3, [sp, #4]
 801b8f2:	6920      	ldr	r0, [r4, #16]
 801b8f4:	f88d 5008 	strb.w	r5, [sp, #8]
 801b8f8:	2300      	movs	r3, #0
 801b8fa:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b8fe:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b902:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b906:	6803      	ldr	r3, [r0, #0]
 801b908:	a901      	add	r1, sp, #4
 801b90a:	681b      	ldr	r3, [r3, #0]
 801b90c:	4798      	blx	r3
 801b90e:	b005      	add	sp, #20
 801b910:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b912:	2900      	cmp	r1, #0
 801b914:	d1eb      	bne.n	801b8ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b916:	80a2      	strh	r2, [r4, #4]
 801b918:	80c6      	strh	r6, [r0, #6]
 801b91a:	e7e8      	b.n	801b8ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b91c:	08020454 	.word	0x08020454
 801b920:	0802047c 	.word	0x0802047c

0801b924 <__aeabi_atexit>:
 801b924:	460b      	mov	r3, r1
 801b926:	4601      	mov	r1, r0
 801b928:	4618      	mov	r0, r3
 801b92a:	f000 b857 	b.w	801b9dc <__cxa_atexit>

0801b92e <_ZdlPvj>:
 801b92e:	f000 b812 	b.w	801b956 <_ZdlPv>

0801b932 <__cxa_guard_acquire>:
 801b932:	6803      	ldr	r3, [r0, #0]
 801b934:	07db      	lsls	r3, r3, #31
 801b936:	d406      	bmi.n	801b946 <__cxa_guard_acquire+0x14>
 801b938:	7843      	ldrb	r3, [r0, #1]
 801b93a:	b103      	cbz	r3, 801b93e <__cxa_guard_acquire+0xc>
 801b93c:	deff      	udf	#255	; 0xff
 801b93e:	2301      	movs	r3, #1
 801b940:	7043      	strb	r3, [r0, #1]
 801b942:	4618      	mov	r0, r3
 801b944:	4770      	bx	lr
 801b946:	2000      	movs	r0, #0
 801b948:	4770      	bx	lr

0801b94a <__cxa_guard_release>:
 801b94a:	2301      	movs	r3, #1
 801b94c:	6003      	str	r3, [r0, #0]
 801b94e:	4770      	bx	lr

0801b950 <__cxa_pure_virtual>:
 801b950:	b508      	push	{r3, lr}
 801b952:	f000 f80f 	bl	801b974 <_ZSt9terminatev>

0801b956 <_ZdlPv>:
 801b956:	f000 b893 	b.w	801ba80 <free>

0801b95a <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b95a:	b508      	push	{r3, lr}
 801b95c:	4780      	blx	r0
 801b95e:	f000 f80e 	bl	801b97e <abort>
	...

0801b964 <_ZSt13get_terminatev>:
 801b964:	4b02      	ldr	r3, [pc, #8]	; (801b970 <_ZSt13get_terminatev+0xc>)
 801b966:	6818      	ldr	r0, [r3, #0]
 801b968:	f3bf 8f5b 	dmb	ish
 801b96c:	4770      	bx	lr
 801b96e:	bf00      	nop
 801b970:	20000098 	.word	0x20000098

0801b974 <_ZSt9terminatev>:
 801b974:	b508      	push	{r3, lr}
 801b976:	f7ff fff5 	bl	801b964 <_ZSt13get_terminatev>
 801b97a:	f7ff ffee 	bl	801b95a <_ZN10__cxxabiv111__terminateEPFvvE>

0801b97e <abort>:
 801b97e:	b508      	push	{r3, lr}
 801b980:	2006      	movs	r0, #6
 801b982:	f000 ff8f 	bl	801c8a4 <raise>
 801b986:	2001      	movs	r0, #1
 801b988:	f7e6 ffa8 	bl	80028dc <_exit>

0801b98c <__assert_func>:
 801b98c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b98e:	4614      	mov	r4, r2
 801b990:	461a      	mov	r2, r3
 801b992:	4b09      	ldr	r3, [pc, #36]	; (801b9b8 <__assert_func+0x2c>)
 801b994:	681b      	ldr	r3, [r3, #0]
 801b996:	4605      	mov	r5, r0
 801b998:	68d8      	ldr	r0, [r3, #12]
 801b99a:	b14c      	cbz	r4, 801b9b0 <__assert_func+0x24>
 801b99c:	4b07      	ldr	r3, [pc, #28]	; (801b9bc <__assert_func+0x30>)
 801b99e:	9100      	str	r1, [sp, #0]
 801b9a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801b9a4:	4906      	ldr	r1, [pc, #24]	; (801b9c0 <__assert_func+0x34>)
 801b9a6:	462b      	mov	r3, r5
 801b9a8:	f000 f82c 	bl	801ba04 <fiprintf>
 801b9ac:	f7ff ffe7 	bl	801b97e <abort>
 801b9b0:	4b04      	ldr	r3, [pc, #16]	; (801b9c4 <__assert_func+0x38>)
 801b9b2:	461c      	mov	r4, r3
 801b9b4:	e7f3      	b.n	801b99e <__assert_func+0x12>
 801b9b6:	bf00      	nop
 801b9b8:	2000009c 	.word	0x2000009c
 801b9bc:	080218c4 	.word	0x080218c4
 801b9c0:	080218d1 	.word	0x080218d1
 801b9c4:	080218ff 	.word	0x080218ff

0801b9c8 <atexit>:
 801b9c8:	2300      	movs	r3, #0
 801b9ca:	4601      	mov	r1, r0
 801b9cc:	461a      	mov	r2, r3
 801b9ce:	4618      	mov	r0, r3
 801b9d0:	f001 b8d0 	b.w	801cb74 <__register_exitproc>

0801b9d4 <atoi>:
 801b9d4:	220a      	movs	r2, #10
 801b9d6:	2100      	movs	r1, #0
 801b9d8:	f001 b802 	b.w	801c9e0 <strtol>

0801b9dc <__cxa_atexit>:
 801b9dc:	b510      	push	{r4, lr}
 801b9de:	4c05      	ldr	r4, [pc, #20]	; (801b9f4 <__cxa_atexit+0x18>)
 801b9e0:	4613      	mov	r3, r2
 801b9e2:	b12c      	cbz	r4, 801b9f0 <__cxa_atexit+0x14>
 801b9e4:	460a      	mov	r2, r1
 801b9e6:	4601      	mov	r1, r0
 801b9e8:	2002      	movs	r0, #2
 801b9ea:	f001 f8c3 	bl	801cb74 <__register_exitproc>
 801b9ee:	bd10      	pop	{r4, pc}
 801b9f0:	4620      	mov	r0, r4
 801b9f2:	e7fc      	b.n	801b9ee <__cxa_atexit+0x12>
 801b9f4:	0801cb75 	.word	0x0801cb75

0801b9f8 <__errno>:
 801b9f8:	4b01      	ldr	r3, [pc, #4]	; (801ba00 <__errno+0x8>)
 801b9fa:	6818      	ldr	r0, [r3, #0]
 801b9fc:	4770      	bx	lr
 801b9fe:	bf00      	nop
 801ba00:	2000009c 	.word	0x2000009c

0801ba04 <fiprintf>:
 801ba04:	b40e      	push	{r1, r2, r3}
 801ba06:	b503      	push	{r0, r1, lr}
 801ba08:	4601      	mov	r1, r0
 801ba0a:	ab03      	add	r3, sp, #12
 801ba0c:	4805      	ldr	r0, [pc, #20]	; (801ba24 <fiprintf+0x20>)
 801ba0e:	f853 2b04 	ldr.w	r2, [r3], #4
 801ba12:	6800      	ldr	r0, [r0, #0]
 801ba14:	9301      	str	r3, [sp, #4]
 801ba16:	f000 f95b 	bl	801bcd0 <_vfiprintf_r>
 801ba1a:	b002      	add	sp, #8
 801ba1c:	f85d eb04 	ldr.w	lr, [sp], #4
 801ba20:	b003      	add	sp, #12
 801ba22:	4770      	bx	lr
 801ba24:	2000009c 	.word	0x2000009c

0801ba28 <__libc_init_array>:
 801ba28:	b570      	push	{r4, r5, r6, lr}
 801ba2a:	4d0d      	ldr	r5, [pc, #52]	; (801ba60 <__libc_init_array+0x38>)
 801ba2c:	4c0d      	ldr	r4, [pc, #52]	; (801ba64 <__libc_init_array+0x3c>)
 801ba2e:	1b64      	subs	r4, r4, r5
 801ba30:	10a4      	asrs	r4, r4, #2
 801ba32:	2600      	movs	r6, #0
 801ba34:	42a6      	cmp	r6, r4
 801ba36:	d109      	bne.n	801ba4c <__libc_init_array+0x24>
 801ba38:	4d0b      	ldr	r5, [pc, #44]	; (801ba68 <__libc_init_array+0x40>)
 801ba3a:	4c0c      	ldr	r4, [pc, #48]	; (801ba6c <__libc_init_array+0x44>)
 801ba3c:	f002 fe0e 	bl	801e65c <_init>
 801ba40:	1b64      	subs	r4, r4, r5
 801ba42:	10a4      	asrs	r4, r4, #2
 801ba44:	2600      	movs	r6, #0
 801ba46:	42a6      	cmp	r6, r4
 801ba48:	d105      	bne.n	801ba56 <__libc_init_array+0x2e>
 801ba4a:	bd70      	pop	{r4, r5, r6, pc}
 801ba4c:	f855 3b04 	ldr.w	r3, [r5], #4
 801ba50:	4798      	blx	r3
 801ba52:	3601      	adds	r6, #1
 801ba54:	e7ee      	b.n	801ba34 <__libc_init_array+0xc>
 801ba56:	f855 3b04 	ldr.w	r3, [r5], #4
 801ba5a:	4798      	blx	r3
 801ba5c:	3601      	adds	r6, #1
 801ba5e:	e7f2      	b.n	801ba46 <__libc_init_array+0x1e>
 801ba60:	0802c438 	.word	0x0802c438
 801ba64:	0802c438 	.word	0x0802c438
 801ba68:	0802c438 	.word	0x0802c438
 801ba6c:	0802c44c 	.word	0x0802c44c

0801ba70 <malloc>:
 801ba70:	4b02      	ldr	r3, [pc, #8]	; (801ba7c <malloc+0xc>)
 801ba72:	4601      	mov	r1, r0
 801ba74:	6818      	ldr	r0, [r3, #0]
 801ba76:	f000 b88d 	b.w	801bb94 <_malloc_r>
 801ba7a:	bf00      	nop
 801ba7c:	2000009c 	.word	0x2000009c

0801ba80 <free>:
 801ba80:	4b02      	ldr	r3, [pc, #8]	; (801ba8c <free+0xc>)
 801ba82:	4601      	mov	r1, r0
 801ba84:	6818      	ldr	r0, [r3, #0]
 801ba86:	f000 b819 	b.w	801babc <_free_r>
 801ba8a:	bf00      	nop
 801ba8c:	2000009c 	.word	0x2000009c

0801ba90 <memcpy>:
 801ba90:	440a      	add	r2, r1
 801ba92:	4291      	cmp	r1, r2
 801ba94:	f100 33ff 	add.w	r3, r0, #4294967295
 801ba98:	d100      	bne.n	801ba9c <memcpy+0xc>
 801ba9a:	4770      	bx	lr
 801ba9c:	b510      	push	{r4, lr}
 801ba9e:	f811 4b01 	ldrb.w	r4, [r1], #1
 801baa2:	f803 4f01 	strb.w	r4, [r3, #1]!
 801baa6:	4291      	cmp	r1, r2
 801baa8:	d1f9      	bne.n	801ba9e <memcpy+0xe>
 801baaa:	bd10      	pop	{r4, pc}

0801baac <memset>:
 801baac:	4402      	add	r2, r0
 801baae:	4603      	mov	r3, r0
 801bab0:	4293      	cmp	r3, r2
 801bab2:	d100      	bne.n	801bab6 <memset+0xa>
 801bab4:	4770      	bx	lr
 801bab6:	f803 1b01 	strb.w	r1, [r3], #1
 801baba:	e7f9      	b.n	801bab0 <memset+0x4>

0801babc <_free_r>:
 801babc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801babe:	2900      	cmp	r1, #0
 801bac0:	d044      	beq.n	801bb4c <_free_r+0x90>
 801bac2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801bac6:	9001      	str	r0, [sp, #4]
 801bac8:	2b00      	cmp	r3, #0
 801baca:	f1a1 0404 	sub.w	r4, r1, #4
 801bace:	bfb8      	it	lt
 801bad0:	18e4      	addlt	r4, r4, r3
 801bad2:	f002 f951 	bl	801dd78 <__malloc_lock>
 801bad6:	4a1e      	ldr	r2, [pc, #120]	; (801bb50 <_free_r+0x94>)
 801bad8:	9801      	ldr	r0, [sp, #4]
 801bada:	6813      	ldr	r3, [r2, #0]
 801badc:	b933      	cbnz	r3, 801baec <_free_r+0x30>
 801bade:	6063      	str	r3, [r4, #4]
 801bae0:	6014      	str	r4, [r2, #0]
 801bae2:	b003      	add	sp, #12
 801bae4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801bae8:	f002 b94c 	b.w	801dd84 <__malloc_unlock>
 801baec:	42a3      	cmp	r3, r4
 801baee:	d908      	bls.n	801bb02 <_free_r+0x46>
 801baf0:	6825      	ldr	r5, [r4, #0]
 801baf2:	1961      	adds	r1, r4, r5
 801baf4:	428b      	cmp	r3, r1
 801baf6:	bf01      	itttt	eq
 801baf8:	6819      	ldreq	r1, [r3, #0]
 801bafa:	685b      	ldreq	r3, [r3, #4]
 801bafc:	1949      	addeq	r1, r1, r5
 801bafe:	6021      	streq	r1, [r4, #0]
 801bb00:	e7ed      	b.n	801bade <_free_r+0x22>
 801bb02:	461a      	mov	r2, r3
 801bb04:	685b      	ldr	r3, [r3, #4]
 801bb06:	b10b      	cbz	r3, 801bb0c <_free_r+0x50>
 801bb08:	42a3      	cmp	r3, r4
 801bb0a:	d9fa      	bls.n	801bb02 <_free_r+0x46>
 801bb0c:	6811      	ldr	r1, [r2, #0]
 801bb0e:	1855      	adds	r5, r2, r1
 801bb10:	42a5      	cmp	r5, r4
 801bb12:	d10b      	bne.n	801bb2c <_free_r+0x70>
 801bb14:	6824      	ldr	r4, [r4, #0]
 801bb16:	4421      	add	r1, r4
 801bb18:	1854      	adds	r4, r2, r1
 801bb1a:	42a3      	cmp	r3, r4
 801bb1c:	6011      	str	r1, [r2, #0]
 801bb1e:	d1e0      	bne.n	801bae2 <_free_r+0x26>
 801bb20:	681c      	ldr	r4, [r3, #0]
 801bb22:	685b      	ldr	r3, [r3, #4]
 801bb24:	6053      	str	r3, [r2, #4]
 801bb26:	4421      	add	r1, r4
 801bb28:	6011      	str	r1, [r2, #0]
 801bb2a:	e7da      	b.n	801bae2 <_free_r+0x26>
 801bb2c:	d902      	bls.n	801bb34 <_free_r+0x78>
 801bb2e:	230c      	movs	r3, #12
 801bb30:	6003      	str	r3, [r0, #0]
 801bb32:	e7d6      	b.n	801bae2 <_free_r+0x26>
 801bb34:	6825      	ldr	r5, [r4, #0]
 801bb36:	1961      	adds	r1, r4, r5
 801bb38:	428b      	cmp	r3, r1
 801bb3a:	bf04      	itt	eq
 801bb3c:	6819      	ldreq	r1, [r3, #0]
 801bb3e:	685b      	ldreq	r3, [r3, #4]
 801bb40:	6063      	str	r3, [r4, #4]
 801bb42:	bf04      	itt	eq
 801bb44:	1949      	addeq	r1, r1, r5
 801bb46:	6021      	streq	r1, [r4, #0]
 801bb48:	6054      	str	r4, [r2, #4]
 801bb4a:	e7ca      	b.n	801bae2 <_free_r+0x26>
 801bb4c:	b003      	add	sp, #12
 801bb4e:	bd30      	pop	{r4, r5, pc}
 801bb50:	200018bc 	.word	0x200018bc

0801bb54 <sbrk_aligned>:
 801bb54:	b570      	push	{r4, r5, r6, lr}
 801bb56:	4e0e      	ldr	r6, [pc, #56]	; (801bb90 <sbrk_aligned+0x3c>)
 801bb58:	460c      	mov	r4, r1
 801bb5a:	6831      	ldr	r1, [r6, #0]
 801bb5c:	4605      	mov	r5, r0
 801bb5e:	b911      	cbnz	r1, 801bb66 <sbrk_aligned+0x12>
 801bb60:	f000 fe68 	bl	801c834 <_sbrk_r>
 801bb64:	6030      	str	r0, [r6, #0]
 801bb66:	4621      	mov	r1, r4
 801bb68:	4628      	mov	r0, r5
 801bb6a:	f000 fe63 	bl	801c834 <_sbrk_r>
 801bb6e:	1c43      	adds	r3, r0, #1
 801bb70:	d00a      	beq.n	801bb88 <sbrk_aligned+0x34>
 801bb72:	1cc4      	adds	r4, r0, #3
 801bb74:	f024 0403 	bic.w	r4, r4, #3
 801bb78:	42a0      	cmp	r0, r4
 801bb7a:	d007      	beq.n	801bb8c <sbrk_aligned+0x38>
 801bb7c:	1a21      	subs	r1, r4, r0
 801bb7e:	4628      	mov	r0, r5
 801bb80:	f000 fe58 	bl	801c834 <_sbrk_r>
 801bb84:	3001      	adds	r0, #1
 801bb86:	d101      	bne.n	801bb8c <sbrk_aligned+0x38>
 801bb88:	f04f 34ff 	mov.w	r4, #4294967295
 801bb8c:	4620      	mov	r0, r4
 801bb8e:	bd70      	pop	{r4, r5, r6, pc}
 801bb90:	200018c0 	.word	0x200018c0

0801bb94 <_malloc_r>:
 801bb94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bb98:	1ccd      	adds	r5, r1, #3
 801bb9a:	f025 0503 	bic.w	r5, r5, #3
 801bb9e:	3508      	adds	r5, #8
 801bba0:	2d0c      	cmp	r5, #12
 801bba2:	bf38      	it	cc
 801bba4:	250c      	movcc	r5, #12
 801bba6:	2d00      	cmp	r5, #0
 801bba8:	4607      	mov	r7, r0
 801bbaa:	db01      	blt.n	801bbb0 <_malloc_r+0x1c>
 801bbac:	42a9      	cmp	r1, r5
 801bbae:	d905      	bls.n	801bbbc <_malloc_r+0x28>
 801bbb0:	230c      	movs	r3, #12
 801bbb2:	603b      	str	r3, [r7, #0]
 801bbb4:	2600      	movs	r6, #0
 801bbb6:	4630      	mov	r0, r6
 801bbb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bbbc:	4e2e      	ldr	r6, [pc, #184]	; (801bc78 <_malloc_r+0xe4>)
 801bbbe:	f002 f8db 	bl	801dd78 <__malloc_lock>
 801bbc2:	6833      	ldr	r3, [r6, #0]
 801bbc4:	461c      	mov	r4, r3
 801bbc6:	bb34      	cbnz	r4, 801bc16 <_malloc_r+0x82>
 801bbc8:	4629      	mov	r1, r5
 801bbca:	4638      	mov	r0, r7
 801bbcc:	f7ff ffc2 	bl	801bb54 <sbrk_aligned>
 801bbd0:	1c43      	adds	r3, r0, #1
 801bbd2:	4604      	mov	r4, r0
 801bbd4:	d14d      	bne.n	801bc72 <_malloc_r+0xde>
 801bbd6:	6834      	ldr	r4, [r6, #0]
 801bbd8:	4626      	mov	r6, r4
 801bbda:	2e00      	cmp	r6, #0
 801bbdc:	d140      	bne.n	801bc60 <_malloc_r+0xcc>
 801bbde:	6823      	ldr	r3, [r4, #0]
 801bbe0:	4631      	mov	r1, r6
 801bbe2:	4638      	mov	r0, r7
 801bbe4:	eb04 0803 	add.w	r8, r4, r3
 801bbe8:	f000 fe24 	bl	801c834 <_sbrk_r>
 801bbec:	4580      	cmp	r8, r0
 801bbee:	d13a      	bne.n	801bc66 <_malloc_r+0xd2>
 801bbf0:	6821      	ldr	r1, [r4, #0]
 801bbf2:	3503      	adds	r5, #3
 801bbf4:	1a6d      	subs	r5, r5, r1
 801bbf6:	f025 0503 	bic.w	r5, r5, #3
 801bbfa:	3508      	adds	r5, #8
 801bbfc:	2d0c      	cmp	r5, #12
 801bbfe:	bf38      	it	cc
 801bc00:	250c      	movcc	r5, #12
 801bc02:	4629      	mov	r1, r5
 801bc04:	4638      	mov	r0, r7
 801bc06:	f7ff ffa5 	bl	801bb54 <sbrk_aligned>
 801bc0a:	3001      	adds	r0, #1
 801bc0c:	d02b      	beq.n	801bc66 <_malloc_r+0xd2>
 801bc0e:	6823      	ldr	r3, [r4, #0]
 801bc10:	442b      	add	r3, r5
 801bc12:	6023      	str	r3, [r4, #0]
 801bc14:	e00e      	b.n	801bc34 <_malloc_r+0xa0>
 801bc16:	6822      	ldr	r2, [r4, #0]
 801bc18:	1b52      	subs	r2, r2, r5
 801bc1a:	d41e      	bmi.n	801bc5a <_malloc_r+0xc6>
 801bc1c:	2a0b      	cmp	r2, #11
 801bc1e:	d916      	bls.n	801bc4e <_malloc_r+0xba>
 801bc20:	1961      	adds	r1, r4, r5
 801bc22:	42a3      	cmp	r3, r4
 801bc24:	6025      	str	r5, [r4, #0]
 801bc26:	bf18      	it	ne
 801bc28:	6059      	strne	r1, [r3, #4]
 801bc2a:	6863      	ldr	r3, [r4, #4]
 801bc2c:	bf08      	it	eq
 801bc2e:	6031      	streq	r1, [r6, #0]
 801bc30:	5162      	str	r2, [r4, r5]
 801bc32:	604b      	str	r3, [r1, #4]
 801bc34:	4638      	mov	r0, r7
 801bc36:	f104 060b 	add.w	r6, r4, #11
 801bc3a:	f002 f8a3 	bl	801dd84 <__malloc_unlock>
 801bc3e:	f026 0607 	bic.w	r6, r6, #7
 801bc42:	1d23      	adds	r3, r4, #4
 801bc44:	1af2      	subs	r2, r6, r3
 801bc46:	d0b6      	beq.n	801bbb6 <_malloc_r+0x22>
 801bc48:	1b9b      	subs	r3, r3, r6
 801bc4a:	50a3      	str	r3, [r4, r2]
 801bc4c:	e7b3      	b.n	801bbb6 <_malloc_r+0x22>
 801bc4e:	6862      	ldr	r2, [r4, #4]
 801bc50:	42a3      	cmp	r3, r4
 801bc52:	bf0c      	ite	eq
 801bc54:	6032      	streq	r2, [r6, #0]
 801bc56:	605a      	strne	r2, [r3, #4]
 801bc58:	e7ec      	b.n	801bc34 <_malloc_r+0xa0>
 801bc5a:	4623      	mov	r3, r4
 801bc5c:	6864      	ldr	r4, [r4, #4]
 801bc5e:	e7b2      	b.n	801bbc6 <_malloc_r+0x32>
 801bc60:	4634      	mov	r4, r6
 801bc62:	6876      	ldr	r6, [r6, #4]
 801bc64:	e7b9      	b.n	801bbda <_malloc_r+0x46>
 801bc66:	230c      	movs	r3, #12
 801bc68:	603b      	str	r3, [r7, #0]
 801bc6a:	4638      	mov	r0, r7
 801bc6c:	f002 f88a 	bl	801dd84 <__malloc_unlock>
 801bc70:	e7a1      	b.n	801bbb6 <_malloc_r+0x22>
 801bc72:	6025      	str	r5, [r4, #0]
 801bc74:	e7de      	b.n	801bc34 <_malloc_r+0xa0>
 801bc76:	bf00      	nop
 801bc78:	200018bc 	.word	0x200018bc

0801bc7c <__sfputc_r>:
 801bc7c:	6893      	ldr	r3, [r2, #8]
 801bc7e:	3b01      	subs	r3, #1
 801bc80:	2b00      	cmp	r3, #0
 801bc82:	b410      	push	{r4}
 801bc84:	6093      	str	r3, [r2, #8]
 801bc86:	da08      	bge.n	801bc9a <__sfputc_r+0x1e>
 801bc88:	6994      	ldr	r4, [r2, #24]
 801bc8a:	42a3      	cmp	r3, r4
 801bc8c:	db01      	blt.n	801bc92 <__sfputc_r+0x16>
 801bc8e:	290a      	cmp	r1, #10
 801bc90:	d103      	bne.n	801bc9a <__sfputc_r+0x1e>
 801bc92:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bc96:	f000 bead 	b.w	801c9f4 <__swbuf_r>
 801bc9a:	6813      	ldr	r3, [r2, #0]
 801bc9c:	1c58      	adds	r0, r3, #1
 801bc9e:	6010      	str	r0, [r2, #0]
 801bca0:	7019      	strb	r1, [r3, #0]
 801bca2:	4608      	mov	r0, r1
 801bca4:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bca8:	4770      	bx	lr

0801bcaa <__sfputs_r>:
 801bcaa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bcac:	4606      	mov	r6, r0
 801bcae:	460f      	mov	r7, r1
 801bcb0:	4614      	mov	r4, r2
 801bcb2:	18d5      	adds	r5, r2, r3
 801bcb4:	42ac      	cmp	r4, r5
 801bcb6:	d101      	bne.n	801bcbc <__sfputs_r+0x12>
 801bcb8:	2000      	movs	r0, #0
 801bcba:	e007      	b.n	801bccc <__sfputs_r+0x22>
 801bcbc:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bcc0:	463a      	mov	r2, r7
 801bcc2:	4630      	mov	r0, r6
 801bcc4:	f7ff ffda 	bl	801bc7c <__sfputc_r>
 801bcc8:	1c43      	adds	r3, r0, #1
 801bcca:	d1f3      	bne.n	801bcb4 <__sfputs_r+0xa>
 801bccc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801bcd0 <_vfiprintf_r>:
 801bcd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcd4:	460d      	mov	r5, r1
 801bcd6:	b09d      	sub	sp, #116	; 0x74
 801bcd8:	4614      	mov	r4, r2
 801bcda:	4698      	mov	r8, r3
 801bcdc:	4606      	mov	r6, r0
 801bcde:	b118      	cbz	r0, 801bce8 <_vfiprintf_r+0x18>
 801bce0:	6983      	ldr	r3, [r0, #24]
 801bce2:	b90b      	cbnz	r3, 801bce8 <_vfiprintf_r+0x18>
 801bce4:	f001 ff3c 	bl	801db60 <__sinit>
 801bce8:	4b89      	ldr	r3, [pc, #548]	; (801bf10 <_vfiprintf_r+0x240>)
 801bcea:	429d      	cmp	r5, r3
 801bcec:	d11b      	bne.n	801bd26 <_vfiprintf_r+0x56>
 801bcee:	6875      	ldr	r5, [r6, #4]
 801bcf0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bcf2:	07d9      	lsls	r1, r3, #31
 801bcf4:	d405      	bmi.n	801bd02 <_vfiprintf_r+0x32>
 801bcf6:	89ab      	ldrh	r3, [r5, #12]
 801bcf8:	059a      	lsls	r2, r3, #22
 801bcfa:	d402      	bmi.n	801bd02 <_vfiprintf_r+0x32>
 801bcfc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bcfe:	f001 ffd2 	bl	801dca6 <__retarget_lock_acquire_recursive>
 801bd02:	89ab      	ldrh	r3, [r5, #12]
 801bd04:	071b      	lsls	r3, r3, #28
 801bd06:	d501      	bpl.n	801bd0c <_vfiprintf_r+0x3c>
 801bd08:	692b      	ldr	r3, [r5, #16]
 801bd0a:	b9eb      	cbnz	r3, 801bd48 <_vfiprintf_r+0x78>
 801bd0c:	4629      	mov	r1, r5
 801bd0e:	4630      	mov	r0, r6
 801bd10:	f000 fec2 	bl	801ca98 <__swsetup_r>
 801bd14:	b1c0      	cbz	r0, 801bd48 <_vfiprintf_r+0x78>
 801bd16:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bd18:	07dc      	lsls	r4, r3, #31
 801bd1a:	d50e      	bpl.n	801bd3a <_vfiprintf_r+0x6a>
 801bd1c:	f04f 30ff 	mov.w	r0, #4294967295
 801bd20:	b01d      	add	sp, #116	; 0x74
 801bd22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd26:	4b7b      	ldr	r3, [pc, #492]	; (801bf14 <_vfiprintf_r+0x244>)
 801bd28:	429d      	cmp	r5, r3
 801bd2a:	d101      	bne.n	801bd30 <_vfiprintf_r+0x60>
 801bd2c:	68b5      	ldr	r5, [r6, #8]
 801bd2e:	e7df      	b.n	801bcf0 <_vfiprintf_r+0x20>
 801bd30:	4b79      	ldr	r3, [pc, #484]	; (801bf18 <_vfiprintf_r+0x248>)
 801bd32:	429d      	cmp	r5, r3
 801bd34:	bf08      	it	eq
 801bd36:	68f5      	ldreq	r5, [r6, #12]
 801bd38:	e7da      	b.n	801bcf0 <_vfiprintf_r+0x20>
 801bd3a:	89ab      	ldrh	r3, [r5, #12]
 801bd3c:	0598      	lsls	r0, r3, #22
 801bd3e:	d4ed      	bmi.n	801bd1c <_vfiprintf_r+0x4c>
 801bd40:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bd42:	f001 ffb2 	bl	801dcaa <__retarget_lock_release_recursive>
 801bd46:	e7e9      	b.n	801bd1c <_vfiprintf_r+0x4c>
 801bd48:	2300      	movs	r3, #0
 801bd4a:	9309      	str	r3, [sp, #36]	; 0x24
 801bd4c:	2320      	movs	r3, #32
 801bd4e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801bd52:	f8cd 800c 	str.w	r8, [sp, #12]
 801bd56:	2330      	movs	r3, #48	; 0x30
 801bd58:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801bf1c <_vfiprintf_r+0x24c>
 801bd5c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801bd60:	f04f 0901 	mov.w	r9, #1
 801bd64:	4623      	mov	r3, r4
 801bd66:	469a      	mov	sl, r3
 801bd68:	f813 2b01 	ldrb.w	r2, [r3], #1
 801bd6c:	b10a      	cbz	r2, 801bd72 <_vfiprintf_r+0xa2>
 801bd6e:	2a25      	cmp	r2, #37	; 0x25
 801bd70:	d1f9      	bne.n	801bd66 <_vfiprintf_r+0x96>
 801bd72:	ebba 0b04 	subs.w	fp, sl, r4
 801bd76:	d00b      	beq.n	801bd90 <_vfiprintf_r+0xc0>
 801bd78:	465b      	mov	r3, fp
 801bd7a:	4622      	mov	r2, r4
 801bd7c:	4629      	mov	r1, r5
 801bd7e:	4630      	mov	r0, r6
 801bd80:	f7ff ff93 	bl	801bcaa <__sfputs_r>
 801bd84:	3001      	adds	r0, #1
 801bd86:	f000 80aa 	beq.w	801bede <_vfiprintf_r+0x20e>
 801bd8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bd8c:	445a      	add	r2, fp
 801bd8e:	9209      	str	r2, [sp, #36]	; 0x24
 801bd90:	f89a 3000 	ldrb.w	r3, [sl]
 801bd94:	2b00      	cmp	r3, #0
 801bd96:	f000 80a2 	beq.w	801bede <_vfiprintf_r+0x20e>
 801bd9a:	2300      	movs	r3, #0
 801bd9c:	f04f 32ff 	mov.w	r2, #4294967295
 801bda0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801bda4:	f10a 0a01 	add.w	sl, sl, #1
 801bda8:	9304      	str	r3, [sp, #16]
 801bdaa:	9307      	str	r3, [sp, #28]
 801bdac:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801bdb0:	931a      	str	r3, [sp, #104]	; 0x68
 801bdb2:	4654      	mov	r4, sl
 801bdb4:	2205      	movs	r2, #5
 801bdb6:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bdba:	4858      	ldr	r0, [pc, #352]	; (801bf1c <_vfiprintf_r+0x24c>)
 801bdbc:	f7e4 fa20 	bl	8000200 <memchr>
 801bdc0:	9a04      	ldr	r2, [sp, #16]
 801bdc2:	b9d8      	cbnz	r0, 801bdfc <_vfiprintf_r+0x12c>
 801bdc4:	06d1      	lsls	r1, r2, #27
 801bdc6:	bf44      	itt	mi
 801bdc8:	2320      	movmi	r3, #32
 801bdca:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801bdce:	0713      	lsls	r3, r2, #28
 801bdd0:	bf44      	itt	mi
 801bdd2:	232b      	movmi	r3, #43	; 0x2b
 801bdd4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801bdd8:	f89a 3000 	ldrb.w	r3, [sl]
 801bddc:	2b2a      	cmp	r3, #42	; 0x2a
 801bdde:	d015      	beq.n	801be0c <_vfiprintf_r+0x13c>
 801bde0:	9a07      	ldr	r2, [sp, #28]
 801bde2:	4654      	mov	r4, sl
 801bde4:	2000      	movs	r0, #0
 801bde6:	f04f 0c0a 	mov.w	ip, #10
 801bdea:	4621      	mov	r1, r4
 801bdec:	f811 3b01 	ldrb.w	r3, [r1], #1
 801bdf0:	3b30      	subs	r3, #48	; 0x30
 801bdf2:	2b09      	cmp	r3, #9
 801bdf4:	d94e      	bls.n	801be94 <_vfiprintf_r+0x1c4>
 801bdf6:	b1b0      	cbz	r0, 801be26 <_vfiprintf_r+0x156>
 801bdf8:	9207      	str	r2, [sp, #28]
 801bdfa:	e014      	b.n	801be26 <_vfiprintf_r+0x156>
 801bdfc:	eba0 0308 	sub.w	r3, r0, r8
 801be00:	fa09 f303 	lsl.w	r3, r9, r3
 801be04:	4313      	orrs	r3, r2
 801be06:	9304      	str	r3, [sp, #16]
 801be08:	46a2      	mov	sl, r4
 801be0a:	e7d2      	b.n	801bdb2 <_vfiprintf_r+0xe2>
 801be0c:	9b03      	ldr	r3, [sp, #12]
 801be0e:	1d19      	adds	r1, r3, #4
 801be10:	681b      	ldr	r3, [r3, #0]
 801be12:	9103      	str	r1, [sp, #12]
 801be14:	2b00      	cmp	r3, #0
 801be16:	bfbb      	ittet	lt
 801be18:	425b      	neglt	r3, r3
 801be1a:	f042 0202 	orrlt.w	r2, r2, #2
 801be1e:	9307      	strge	r3, [sp, #28]
 801be20:	9307      	strlt	r3, [sp, #28]
 801be22:	bfb8      	it	lt
 801be24:	9204      	strlt	r2, [sp, #16]
 801be26:	7823      	ldrb	r3, [r4, #0]
 801be28:	2b2e      	cmp	r3, #46	; 0x2e
 801be2a:	d10c      	bne.n	801be46 <_vfiprintf_r+0x176>
 801be2c:	7863      	ldrb	r3, [r4, #1]
 801be2e:	2b2a      	cmp	r3, #42	; 0x2a
 801be30:	d135      	bne.n	801be9e <_vfiprintf_r+0x1ce>
 801be32:	9b03      	ldr	r3, [sp, #12]
 801be34:	1d1a      	adds	r2, r3, #4
 801be36:	681b      	ldr	r3, [r3, #0]
 801be38:	9203      	str	r2, [sp, #12]
 801be3a:	2b00      	cmp	r3, #0
 801be3c:	bfb8      	it	lt
 801be3e:	f04f 33ff 	movlt.w	r3, #4294967295
 801be42:	3402      	adds	r4, #2
 801be44:	9305      	str	r3, [sp, #20]
 801be46:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801bf2c <_vfiprintf_r+0x25c>
 801be4a:	7821      	ldrb	r1, [r4, #0]
 801be4c:	2203      	movs	r2, #3
 801be4e:	4650      	mov	r0, sl
 801be50:	f7e4 f9d6 	bl	8000200 <memchr>
 801be54:	b140      	cbz	r0, 801be68 <_vfiprintf_r+0x198>
 801be56:	2340      	movs	r3, #64	; 0x40
 801be58:	eba0 000a 	sub.w	r0, r0, sl
 801be5c:	fa03 f000 	lsl.w	r0, r3, r0
 801be60:	9b04      	ldr	r3, [sp, #16]
 801be62:	4303      	orrs	r3, r0
 801be64:	3401      	adds	r4, #1
 801be66:	9304      	str	r3, [sp, #16]
 801be68:	f814 1b01 	ldrb.w	r1, [r4], #1
 801be6c:	482c      	ldr	r0, [pc, #176]	; (801bf20 <_vfiprintf_r+0x250>)
 801be6e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801be72:	2206      	movs	r2, #6
 801be74:	f7e4 f9c4 	bl	8000200 <memchr>
 801be78:	2800      	cmp	r0, #0
 801be7a:	d03f      	beq.n	801befc <_vfiprintf_r+0x22c>
 801be7c:	4b29      	ldr	r3, [pc, #164]	; (801bf24 <_vfiprintf_r+0x254>)
 801be7e:	bb1b      	cbnz	r3, 801bec8 <_vfiprintf_r+0x1f8>
 801be80:	9b03      	ldr	r3, [sp, #12]
 801be82:	3307      	adds	r3, #7
 801be84:	f023 0307 	bic.w	r3, r3, #7
 801be88:	3308      	adds	r3, #8
 801be8a:	9303      	str	r3, [sp, #12]
 801be8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be8e:	443b      	add	r3, r7
 801be90:	9309      	str	r3, [sp, #36]	; 0x24
 801be92:	e767      	b.n	801bd64 <_vfiprintf_r+0x94>
 801be94:	fb0c 3202 	mla	r2, ip, r2, r3
 801be98:	460c      	mov	r4, r1
 801be9a:	2001      	movs	r0, #1
 801be9c:	e7a5      	b.n	801bdea <_vfiprintf_r+0x11a>
 801be9e:	2300      	movs	r3, #0
 801bea0:	3401      	adds	r4, #1
 801bea2:	9305      	str	r3, [sp, #20]
 801bea4:	4619      	mov	r1, r3
 801bea6:	f04f 0c0a 	mov.w	ip, #10
 801beaa:	4620      	mov	r0, r4
 801beac:	f810 2b01 	ldrb.w	r2, [r0], #1
 801beb0:	3a30      	subs	r2, #48	; 0x30
 801beb2:	2a09      	cmp	r2, #9
 801beb4:	d903      	bls.n	801bebe <_vfiprintf_r+0x1ee>
 801beb6:	2b00      	cmp	r3, #0
 801beb8:	d0c5      	beq.n	801be46 <_vfiprintf_r+0x176>
 801beba:	9105      	str	r1, [sp, #20]
 801bebc:	e7c3      	b.n	801be46 <_vfiprintf_r+0x176>
 801bebe:	fb0c 2101 	mla	r1, ip, r1, r2
 801bec2:	4604      	mov	r4, r0
 801bec4:	2301      	movs	r3, #1
 801bec6:	e7f0      	b.n	801beaa <_vfiprintf_r+0x1da>
 801bec8:	ab03      	add	r3, sp, #12
 801beca:	9300      	str	r3, [sp, #0]
 801becc:	462a      	mov	r2, r5
 801bece:	4b16      	ldr	r3, [pc, #88]	; (801bf28 <_vfiprintf_r+0x258>)
 801bed0:	a904      	add	r1, sp, #16
 801bed2:	4630      	mov	r0, r6
 801bed4:	f000 f8cc 	bl	801c070 <_printf_float>
 801bed8:	4607      	mov	r7, r0
 801beda:	1c78      	adds	r0, r7, #1
 801bedc:	d1d6      	bne.n	801be8c <_vfiprintf_r+0x1bc>
 801bede:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bee0:	07d9      	lsls	r1, r3, #31
 801bee2:	d405      	bmi.n	801bef0 <_vfiprintf_r+0x220>
 801bee4:	89ab      	ldrh	r3, [r5, #12]
 801bee6:	059a      	lsls	r2, r3, #22
 801bee8:	d402      	bmi.n	801bef0 <_vfiprintf_r+0x220>
 801beea:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801beec:	f001 fedd 	bl	801dcaa <__retarget_lock_release_recursive>
 801bef0:	89ab      	ldrh	r3, [r5, #12]
 801bef2:	065b      	lsls	r3, r3, #25
 801bef4:	f53f af12 	bmi.w	801bd1c <_vfiprintf_r+0x4c>
 801bef8:	9809      	ldr	r0, [sp, #36]	; 0x24
 801befa:	e711      	b.n	801bd20 <_vfiprintf_r+0x50>
 801befc:	ab03      	add	r3, sp, #12
 801befe:	9300      	str	r3, [sp, #0]
 801bf00:	462a      	mov	r2, r5
 801bf02:	4b09      	ldr	r3, [pc, #36]	; (801bf28 <_vfiprintf_r+0x258>)
 801bf04:	a904      	add	r1, sp, #16
 801bf06:	4630      	mov	r0, r6
 801bf08:	f000 fb56 	bl	801c5b8 <_printf_i>
 801bf0c:	e7e4      	b.n	801bed8 <_vfiprintf_r+0x208>
 801bf0e:	bf00      	nop
 801bf10:	08021b00 	.word	0x08021b00
 801bf14:	08021b20 	.word	0x08021b20
 801bf18:	08021ae0 	.word	0x08021ae0
 801bf1c:	08021904 	.word	0x08021904
 801bf20:	0802190e 	.word	0x0802190e
 801bf24:	0801c071 	.word	0x0801c071
 801bf28:	0801bcab 	.word	0x0801bcab
 801bf2c:	0802190a 	.word	0x0802190a

0801bf30 <__cvt>:
 801bf30:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bf34:	ec55 4b10 	vmov	r4, r5, d0
 801bf38:	2d00      	cmp	r5, #0
 801bf3a:	460e      	mov	r6, r1
 801bf3c:	4619      	mov	r1, r3
 801bf3e:	462b      	mov	r3, r5
 801bf40:	bfbb      	ittet	lt
 801bf42:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 801bf46:	461d      	movlt	r5, r3
 801bf48:	2300      	movge	r3, #0
 801bf4a:	232d      	movlt	r3, #45	; 0x2d
 801bf4c:	700b      	strb	r3, [r1, #0]
 801bf4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf50:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801bf54:	4691      	mov	r9, r2
 801bf56:	f023 0820 	bic.w	r8, r3, #32
 801bf5a:	bfbc      	itt	lt
 801bf5c:	4622      	movlt	r2, r4
 801bf5e:	4614      	movlt	r4, r2
 801bf60:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801bf64:	d005      	beq.n	801bf72 <__cvt+0x42>
 801bf66:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 801bf6a:	d100      	bne.n	801bf6e <__cvt+0x3e>
 801bf6c:	3601      	adds	r6, #1
 801bf6e:	2102      	movs	r1, #2
 801bf70:	e000      	b.n	801bf74 <__cvt+0x44>
 801bf72:	2103      	movs	r1, #3
 801bf74:	ab03      	add	r3, sp, #12
 801bf76:	9301      	str	r3, [sp, #4]
 801bf78:	ab02      	add	r3, sp, #8
 801bf7a:	9300      	str	r3, [sp, #0]
 801bf7c:	ec45 4b10 	vmov	d0, r4, r5
 801bf80:	4653      	mov	r3, sl
 801bf82:	4632      	mov	r2, r6
 801bf84:	f000 fee4 	bl	801cd50 <_dtoa_r>
 801bf88:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 801bf8c:	4607      	mov	r7, r0
 801bf8e:	d102      	bne.n	801bf96 <__cvt+0x66>
 801bf90:	f019 0f01 	tst.w	r9, #1
 801bf94:	d022      	beq.n	801bfdc <__cvt+0xac>
 801bf96:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801bf9a:	eb07 0906 	add.w	r9, r7, r6
 801bf9e:	d110      	bne.n	801bfc2 <__cvt+0x92>
 801bfa0:	783b      	ldrb	r3, [r7, #0]
 801bfa2:	2b30      	cmp	r3, #48	; 0x30
 801bfa4:	d10a      	bne.n	801bfbc <__cvt+0x8c>
 801bfa6:	2200      	movs	r2, #0
 801bfa8:	2300      	movs	r3, #0
 801bfaa:	4620      	mov	r0, r4
 801bfac:	4629      	mov	r1, r5
 801bfae:	f7e4 fd9b 	bl	8000ae8 <__aeabi_dcmpeq>
 801bfb2:	b918      	cbnz	r0, 801bfbc <__cvt+0x8c>
 801bfb4:	f1c6 0601 	rsb	r6, r6, #1
 801bfb8:	f8ca 6000 	str.w	r6, [sl]
 801bfbc:	f8da 3000 	ldr.w	r3, [sl]
 801bfc0:	4499      	add	r9, r3
 801bfc2:	2200      	movs	r2, #0
 801bfc4:	2300      	movs	r3, #0
 801bfc6:	4620      	mov	r0, r4
 801bfc8:	4629      	mov	r1, r5
 801bfca:	f7e4 fd8d 	bl	8000ae8 <__aeabi_dcmpeq>
 801bfce:	b108      	cbz	r0, 801bfd4 <__cvt+0xa4>
 801bfd0:	f8cd 900c 	str.w	r9, [sp, #12]
 801bfd4:	2230      	movs	r2, #48	; 0x30
 801bfd6:	9b03      	ldr	r3, [sp, #12]
 801bfd8:	454b      	cmp	r3, r9
 801bfda:	d307      	bcc.n	801bfec <__cvt+0xbc>
 801bfdc:	9b03      	ldr	r3, [sp, #12]
 801bfde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bfe0:	1bdb      	subs	r3, r3, r7
 801bfe2:	4638      	mov	r0, r7
 801bfe4:	6013      	str	r3, [r2, #0]
 801bfe6:	b004      	add	sp, #16
 801bfe8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bfec:	1c59      	adds	r1, r3, #1
 801bfee:	9103      	str	r1, [sp, #12]
 801bff0:	701a      	strb	r2, [r3, #0]
 801bff2:	e7f0      	b.n	801bfd6 <__cvt+0xa6>

0801bff4 <__exponent>:
 801bff4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801bff6:	4603      	mov	r3, r0
 801bff8:	2900      	cmp	r1, #0
 801bffa:	bfb8      	it	lt
 801bffc:	4249      	neglt	r1, r1
 801bffe:	f803 2b02 	strb.w	r2, [r3], #2
 801c002:	bfb4      	ite	lt
 801c004:	222d      	movlt	r2, #45	; 0x2d
 801c006:	222b      	movge	r2, #43	; 0x2b
 801c008:	2909      	cmp	r1, #9
 801c00a:	7042      	strb	r2, [r0, #1]
 801c00c:	dd2a      	ble.n	801c064 <__exponent+0x70>
 801c00e:	f10d 0407 	add.w	r4, sp, #7
 801c012:	46a4      	mov	ip, r4
 801c014:	270a      	movs	r7, #10
 801c016:	46a6      	mov	lr, r4
 801c018:	460a      	mov	r2, r1
 801c01a:	fb91 f6f7 	sdiv	r6, r1, r7
 801c01e:	fb07 1516 	mls	r5, r7, r6, r1
 801c022:	3530      	adds	r5, #48	; 0x30
 801c024:	2a63      	cmp	r2, #99	; 0x63
 801c026:	f104 34ff 	add.w	r4, r4, #4294967295
 801c02a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 801c02e:	4631      	mov	r1, r6
 801c030:	dcf1      	bgt.n	801c016 <__exponent+0x22>
 801c032:	3130      	adds	r1, #48	; 0x30
 801c034:	f1ae 0502 	sub.w	r5, lr, #2
 801c038:	f804 1c01 	strb.w	r1, [r4, #-1]
 801c03c:	1c44      	adds	r4, r0, #1
 801c03e:	4629      	mov	r1, r5
 801c040:	4561      	cmp	r1, ip
 801c042:	d30a      	bcc.n	801c05a <__exponent+0x66>
 801c044:	f10d 0209 	add.w	r2, sp, #9
 801c048:	eba2 020e 	sub.w	r2, r2, lr
 801c04c:	4565      	cmp	r5, ip
 801c04e:	bf88      	it	hi
 801c050:	2200      	movhi	r2, #0
 801c052:	4413      	add	r3, r2
 801c054:	1a18      	subs	r0, r3, r0
 801c056:	b003      	add	sp, #12
 801c058:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c05a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801c05e:	f804 2f01 	strb.w	r2, [r4, #1]!
 801c062:	e7ed      	b.n	801c040 <__exponent+0x4c>
 801c064:	2330      	movs	r3, #48	; 0x30
 801c066:	3130      	adds	r1, #48	; 0x30
 801c068:	7083      	strb	r3, [r0, #2]
 801c06a:	70c1      	strb	r1, [r0, #3]
 801c06c:	1d03      	adds	r3, r0, #4
 801c06e:	e7f1      	b.n	801c054 <__exponent+0x60>

0801c070 <_printf_float>:
 801c070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c074:	ed2d 8b02 	vpush	{d8}
 801c078:	b08d      	sub	sp, #52	; 0x34
 801c07a:	460c      	mov	r4, r1
 801c07c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 801c080:	4616      	mov	r6, r2
 801c082:	461f      	mov	r7, r3
 801c084:	4605      	mov	r5, r0
 801c086:	f001 fe09 	bl	801dc9c <_localeconv_r>
 801c08a:	f8d0 a000 	ldr.w	sl, [r0]
 801c08e:	4650      	mov	r0, sl
 801c090:	f7e4 f8ae 	bl	80001f0 <strlen>
 801c094:	2300      	movs	r3, #0
 801c096:	930a      	str	r3, [sp, #40]	; 0x28
 801c098:	6823      	ldr	r3, [r4, #0]
 801c09a:	9305      	str	r3, [sp, #20]
 801c09c:	f8d8 3000 	ldr.w	r3, [r8]
 801c0a0:	f894 b018 	ldrb.w	fp, [r4, #24]
 801c0a4:	3307      	adds	r3, #7
 801c0a6:	f023 0307 	bic.w	r3, r3, #7
 801c0aa:	f103 0208 	add.w	r2, r3, #8
 801c0ae:	f8c8 2000 	str.w	r2, [r8]
 801c0b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 801c0b6:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 801c0ba:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 801c0be:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 801c0c2:	9307      	str	r3, [sp, #28]
 801c0c4:	f8cd 8018 	str.w	r8, [sp, #24]
 801c0c8:	ee08 0a10 	vmov	s16, r0
 801c0cc:	4b9f      	ldr	r3, [pc, #636]	; (801c34c <_printf_float+0x2dc>)
 801c0ce:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c0d2:	f04f 32ff 	mov.w	r2, #4294967295
 801c0d6:	f7e4 fd39 	bl	8000b4c <__aeabi_dcmpun>
 801c0da:	bb88      	cbnz	r0, 801c140 <_printf_float+0xd0>
 801c0dc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801c0e0:	4b9a      	ldr	r3, [pc, #616]	; (801c34c <_printf_float+0x2dc>)
 801c0e2:	f04f 32ff 	mov.w	r2, #4294967295
 801c0e6:	f7e4 fd13 	bl	8000b10 <__aeabi_dcmple>
 801c0ea:	bb48      	cbnz	r0, 801c140 <_printf_float+0xd0>
 801c0ec:	2200      	movs	r2, #0
 801c0ee:	2300      	movs	r3, #0
 801c0f0:	4640      	mov	r0, r8
 801c0f2:	4649      	mov	r1, r9
 801c0f4:	f7e4 fd02 	bl	8000afc <__aeabi_dcmplt>
 801c0f8:	b110      	cbz	r0, 801c100 <_printf_float+0x90>
 801c0fa:	232d      	movs	r3, #45	; 0x2d
 801c0fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c100:	4b93      	ldr	r3, [pc, #588]	; (801c350 <_printf_float+0x2e0>)
 801c102:	4894      	ldr	r0, [pc, #592]	; (801c354 <_printf_float+0x2e4>)
 801c104:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 801c108:	bf94      	ite	ls
 801c10a:	4698      	movls	r8, r3
 801c10c:	4680      	movhi	r8, r0
 801c10e:	2303      	movs	r3, #3
 801c110:	6123      	str	r3, [r4, #16]
 801c112:	9b05      	ldr	r3, [sp, #20]
 801c114:	f023 0204 	bic.w	r2, r3, #4
 801c118:	6022      	str	r2, [r4, #0]
 801c11a:	f04f 0900 	mov.w	r9, #0
 801c11e:	9700      	str	r7, [sp, #0]
 801c120:	4633      	mov	r3, r6
 801c122:	aa0b      	add	r2, sp, #44	; 0x2c
 801c124:	4621      	mov	r1, r4
 801c126:	4628      	mov	r0, r5
 801c128:	f000 f9d8 	bl	801c4dc <_printf_common>
 801c12c:	3001      	adds	r0, #1
 801c12e:	f040 8090 	bne.w	801c252 <_printf_float+0x1e2>
 801c132:	f04f 30ff 	mov.w	r0, #4294967295
 801c136:	b00d      	add	sp, #52	; 0x34
 801c138:	ecbd 8b02 	vpop	{d8}
 801c13c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c140:	4642      	mov	r2, r8
 801c142:	464b      	mov	r3, r9
 801c144:	4640      	mov	r0, r8
 801c146:	4649      	mov	r1, r9
 801c148:	f7e4 fd00 	bl	8000b4c <__aeabi_dcmpun>
 801c14c:	b140      	cbz	r0, 801c160 <_printf_float+0xf0>
 801c14e:	464b      	mov	r3, r9
 801c150:	2b00      	cmp	r3, #0
 801c152:	bfbc      	itt	lt
 801c154:	232d      	movlt	r3, #45	; 0x2d
 801c156:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 801c15a:	487f      	ldr	r0, [pc, #508]	; (801c358 <_printf_float+0x2e8>)
 801c15c:	4b7f      	ldr	r3, [pc, #508]	; (801c35c <_printf_float+0x2ec>)
 801c15e:	e7d1      	b.n	801c104 <_printf_float+0x94>
 801c160:	6863      	ldr	r3, [r4, #4]
 801c162:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 801c166:	9206      	str	r2, [sp, #24]
 801c168:	1c5a      	adds	r2, r3, #1
 801c16a:	d13f      	bne.n	801c1ec <_printf_float+0x17c>
 801c16c:	2306      	movs	r3, #6
 801c16e:	6063      	str	r3, [r4, #4]
 801c170:	9b05      	ldr	r3, [sp, #20]
 801c172:	6861      	ldr	r1, [r4, #4]
 801c174:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 801c178:	2300      	movs	r3, #0
 801c17a:	9303      	str	r3, [sp, #12]
 801c17c:	ab0a      	add	r3, sp, #40	; 0x28
 801c17e:	e9cd b301 	strd	fp, r3, [sp, #4]
 801c182:	ab09      	add	r3, sp, #36	; 0x24
 801c184:	ec49 8b10 	vmov	d0, r8, r9
 801c188:	9300      	str	r3, [sp, #0]
 801c18a:	6022      	str	r2, [r4, #0]
 801c18c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 801c190:	4628      	mov	r0, r5
 801c192:	f7ff fecd 	bl	801bf30 <__cvt>
 801c196:	9b06      	ldr	r3, [sp, #24]
 801c198:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c19a:	2b47      	cmp	r3, #71	; 0x47
 801c19c:	4680      	mov	r8, r0
 801c19e:	d108      	bne.n	801c1b2 <_printf_float+0x142>
 801c1a0:	1cc8      	adds	r0, r1, #3
 801c1a2:	db02      	blt.n	801c1aa <_printf_float+0x13a>
 801c1a4:	6863      	ldr	r3, [r4, #4]
 801c1a6:	4299      	cmp	r1, r3
 801c1a8:	dd41      	ble.n	801c22e <_printf_float+0x1be>
 801c1aa:	f1ab 0b02 	sub.w	fp, fp, #2
 801c1ae:	fa5f fb8b 	uxtb.w	fp, fp
 801c1b2:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801c1b6:	d820      	bhi.n	801c1fa <_printf_float+0x18a>
 801c1b8:	3901      	subs	r1, #1
 801c1ba:	465a      	mov	r2, fp
 801c1bc:	f104 0050 	add.w	r0, r4, #80	; 0x50
 801c1c0:	9109      	str	r1, [sp, #36]	; 0x24
 801c1c2:	f7ff ff17 	bl	801bff4 <__exponent>
 801c1c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c1c8:	1813      	adds	r3, r2, r0
 801c1ca:	2a01      	cmp	r2, #1
 801c1cc:	4681      	mov	r9, r0
 801c1ce:	6123      	str	r3, [r4, #16]
 801c1d0:	dc02      	bgt.n	801c1d8 <_printf_float+0x168>
 801c1d2:	6822      	ldr	r2, [r4, #0]
 801c1d4:	07d2      	lsls	r2, r2, #31
 801c1d6:	d501      	bpl.n	801c1dc <_printf_float+0x16c>
 801c1d8:	3301      	adds	r3, #1
 801c1da:	6123      	str	r3, [r4, #16]
 801c1dc:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 801c1e0:	2b00      	cmp	r3, #0
 801c1e2:	d09c      	beq.n	801c11e <_printf_float+0xae>
 801c1e4:	232d      	movs	r3, #45	; 0x2d
 801c1e6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c1ea:	e798      	b.n	801c11e <_printf_float+0xae>
 801c1ec:	9a06      	ldr	r2, [sp, #24]
 801c1ee:	2a47      	cmp	r2, #71	; 0x47
 801c1f0:	d1be      	bne.n	801c170 <_printf_float+0x100>
 801c1f2:	2b00      	cmp	r3, #0
 801c1f4:	d1bc      	bne.n	801c170 <_printf_float+0x100>
 801c1f6:	2301      	movs	r3, #1
 801c1f8:	e7b9      	b.n	801c16e <_printf_float+0xfe>
 801c1fa:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 801c1fe:	d118      	bne.n	801c232 <_printf_float+0x1c2>
 801c200:	2900      	cmp	r1, #0
 801c202:	6863      	ldr	r3, [r4, #4]
 801c204:	dd0b      	ble.n	801c21e <_printf_float+0x1ae>
 801c206:	6121      	str	r1, [r4, #16]
 801c208:	b913      	cbnz	r3, 801c210 <_printf_float+0x1a0>
 801c20a:	6822      	ldr	r2, [r4, #0]
 801c20c:	07d0      	lsls	r0, r2, #31
 801c20e:	d502      	bpl.n	801c216 <_printf_float+0x1a6>
 801c210:	3301      	adds	r3, #1
 801c212:	440b      	add	r3, r1
 801c214:	6123      	str	r3, [r4, #16]
 801c216:	65a1      	str	r1, [r4, #88]	; 0x58
 801c218:	f04f 0900 	mov.w	r9, #0
 801c21c:	e7de      	b.n	801c1dc <_printf_float+0x16c>
 801c21e:	b913      	cbnz	r3, 801c226 <_printf_float+0x1b6>
 801c220:	6822      	ldr	r2, [r4, #0]
 801c222:	07d2      	lsls	r2, r2, #31
 801c224:	d501      	bpl.n	801c22a <_printf_float+0x1ba>
 801c226:	3302      	adds	r3, #2
 801c228:	e7f4      	b.n	801c214 <_printf_float+0x1a4>
 801c22a:	2301      	movs	r3, #1
 801c22c:	e7f2      	b.n	801c214 <_printf_float+0x1a4>
 801c22e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 801c232:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c234:	4299      	cmp	r1, r3
 801c236:	db05      	blt.n	801c244 <_printf_float+0x1d4>
 801c238:	6823      	ldr	r3, [r4, #0]
 801c23a:	6121      	str	r1, [r4, #16]
 801c23c:	07d8      	lsls	r0, r3, #31
 801c23e:	d5ea      	bpl.n	801c216 <_printf_float+0x1a6>
 801c240:	1c4b      	adds	r3, r1, #1
 801c242:	e7e7      	b.n	801c214 <_printf_float+0x1a4>
 801c244:	2900      	cmp	r1, #0
 801c246:	bfd4      	ite	le
 801c248:	f1c1 0202 	rsble	r2, r1, #2
 801c24c:	2201      	movgt	r2, #1
 801c24e:	4413      	add	r3, r2
 801c250:	e7e0      	b.n	801c214 <_printf_float+0x1a4>
 801c252:	6823      	ldr	r3, [r4, #0]
 801c254:	055a      	lsls	r2, r3, #21
 801c256:	d407      	bmi.n	801c268 <_printf_float+0x1f8>
 801c258:	6923      	ldr	r3, [r4, #16]
 801c25a:	4642      	mov	r2, r8
 801c25c:	4631      	mov	r1, r6
 801c25e:	4628      	mov	r0, r5
 801c260:	47b8      	blx	r7
 801c262:	3001      	adds	r0, #1
 801c264:	d12c      	bne.n	801c2c0 <_printf_float+0x250>
 801c266:	e764      	b.n	801c132 <_printf_float+0xc2>
 801c268:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801c26c:	f240 80e0 	bls.w	801c430 <_printf_float+0x3c0>
 801c270:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801c274:	2200      	movs	r2, #0
 801c276:	2300      	movs	r3, #0
 801c278:	f7e4 fc36 	bl	8000ae8 <__aeabi_dcmpeq>
 801c27c:	2800      	cmp	r0, #0
 801c27e:	d034      	beq.n	801c2ea <_printf_float+0x27a>
 801c280:	4a37      	ldr	r2, [pc, #220]	; (801c360 <_printf_float+0x2f0>)
 801c282:	2301      	movs	r3, #1
 801c284:	4631      	mov	r1, r6
 801c286:	4628      	mov	r0, r5
 801c288:	47b8      	blx	r7
 801c28a:	3001      	adds	r0, #1
 801c28c:	f43f af51 	beq.w	801c132 <_printf_float+0xc2>
 801c290:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801c294:	429a      	cmp	r2, r3
 801c296:	db02      	blt.n	801c29e <_printf_float+0x22e>
 801c298:	6823      	ldr	r3, [r4, #0]
 801c29a:	07d8      	lsls	r0, r3, #31
 801c29c:	d510      	bpl.n	801c2c0 <_printf_float+0x250>
 801c29e:	ee18 3a10 	vmov	r3, s16
 801c2a2:	4652      	mov	r2, sl
 801c2a4:	4631      	mov	r1, r6
 801c2a6:	4628      	mov	r0, r5
 801c2a8:	47b8      	blx	r7
 801c2aa:	3001      	adds	r0, #1
 801c2ac:	f43f af41 	beq.w	801c132 <_printf_float+0xc2>
 801c2b0:	f04f 0800 	mov.w	r8, #0
 801c2b4:	f104 091a 	add.w	r9, r4, #26
 801c2b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c2ba:	3b01      	subs	r3, #1
 801c2bc:	4543      	cmp	r3, r8
 801c2be:	dc09      	bgt.n	801c2d4 <_printf_float+0x264>
 801c2c0:	6823      	ldr	r3, [r4, #0]
 801c2c2:	079b      	lsls	r3, r3, #30
 801c2c4:	f100 8105 	bmi.w	801c4d2 <_printf_float+0x462>
 801c2c8:	68e0      	ldr	r0, [r4, #12]
 801c2ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c2cc:	4298      	cmp	r0, r3
 801c2ce:	bfb8      	it	lt
 801c2d0:	4618      	movlt	r0, r3
 801c2d2:	e730      	b.n	801c136 <_printf_float+0xc6>
 801c2d4:	2301      	movs	r3, #1
 801c2d6:	464a      	mov	r2, r9
 801c2d8:	4631      	mov	r1, r6
 801c2da:	4628      	mov	r0, r5
 801c2dc:	47b8      	blx	r7
 801c2de:	3001      	adds	r0, #1
 801c2e0:	f43f af27 	beq.w	801c132 <_printf_float+0xc2>
 801c2e4:	f108 0801 	add.w	r8, r8, #1
 801c2e8:	e7e6      	b.n	801c2b8 <_printf_float+0x248>
 801c2ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c2ec:	2b00      	cmp	r3, #0
 801c2ee:	dc39      	bgt.n	801c364 <_printf_float+0x2f4>
 801c2f0:	4a1b      	ldr	r2, [pc, #108]	; (801c360 <_printf_float+0x2f0>)
 801c2f2:	2301      	movs	r3, #1
 801c2f4:	4631      	mov	r1, r6
 801c2f6:	4628      	mov	r0, r5
 801c2f8:	47b8      	blx	r7
 801c2fa:	3001      	adds	r0, #1
 801c2fc:	f43f af19 	beq.w	801c132 <_printf_float+0xc2>
 801c300:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801c304:	4313      	orrs	r3, r2
 801c306:	d102      	bne.n	801c30e <_printf_float+0x29e>
 801c308:	6823      	ldr	r3, [r4, #0]
 801c30a:	07d9      	lsls	r1, r3, #31
 801c30c:	d5d8      	bpl.n	801c2c0 <_printf_float+0x250>
 801c30e:	ee18 3a10 	vmov	r3, s16
 801c312:	4652      	mov	r2, sl
 801c314:	4631      	mov	r1, r6
 801c316:	4628      	mov	r0, r5
 801c318:	47b8      	blx	r7
 801c31a:	3001      	adds	r0, #1
 801c31c:	f43f af09 	beq.w	801c132 <_printf_float+0xc2>
 801c320:	f04f 0900 	mov.w	r9, #0
 801c324:	f104 0a1a 	add.w	sl, r4, #26
 801c328:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c32a:	425b      	negs	r3, r3
 801c32c:	454b      	cmp	r3, r9
 801c32e:	dc01      	bgt.n	801c334 <_printf_float+0x2c4>
 801c330:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c332:	e792      	b.n	801c25a <_printf_float+0x1ea>
 801c334:	2301      	movs	r3, #1
 801c336:	4652      	mov	r2, sl
 801c338:	4631      	mov	r1, r6
 801c33a:	4628      	mov	r0, r5
 801c33c:	47b8      	blx	r7
 801c33e:	3001      	adds	r0, #1
 801c340:	f43f aef7 	beq.w	801c132 <_printf_float+0xc2>
 801c344:	f109 0901 	add.w	r9, r9, #1
 801c348:	e7ee      	b.n	801c328 <_printf_float+0x2b8>
 801c34a:	bf00      	nop
 801c34c:	7fefffff 	.word	0x7fefffff
 801c350:	08021915 	.word	0x08021915
 801c354:	08021919 	.word	0x08021919
 801c358:	08021921 	.word	0x08021921
 801c35c:	0802191d 	.word	0x0802191d
 801c360:	080204c3 	.word	0x080204c3
 801c364:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c366:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801c368:	429a      	cmp	r2, r3
 801c36a:	bfa8      	it	ge
 801c36c:	461a      	movge	r2, r3
 801c36e:	2a00      	cmp	r2, #0
 801c370:	4691      	mov	r9, r2
 801c372:	dc37      	bgt.n	801c3e4 <_printf_float+0x374>
 801c374:	f04f 0b00 	mov.w	fp, #0
 801c378:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801c37c:	f104 021a 	add.w	r2, r4, #26
 801c380:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801c382:	9305      	str	r3, [sp, #20]
 801c384:	eba3 0309 	sub.w	r3, r3, r9
 801c388:	455b      	cmp	r3, fp
 801c38a:	dc33      	bgt.n	801c3f4 <_printf_float+0x384>
 801c38c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801c390:	429a      	cmp	r2, r3
 801c392:	db3b      	blt.n	801c40c <_printf_float+0x39c>
 801c394:	6823      	ldr	r3, [r4, #0]
 801c396:	07da      	lsls	r2, r3, #31
 801c398:	d438      	bmi.n	801c40c <_printf_float+0x39c>
 801c39a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c39c:	9a05      	ldr	r2, [sp, #20]
 801c39e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c3a0:	1a9a      	subs	r2, r3, r2
 801c3a2:	eba3 0901 	sub.w	r9, r3, r1
 801c3a6:	4591      	cmp	r9, r2
 801c3a8:	bfa8      	it	ge
 801c3aa:	4691      	movge	r9, r2
 801c3ac:	f1b9 0f00 	cmp.w	r9, #0
 801c3b0:	dc35      	bgt.n	801c41e <_printf_float+0x3ae>
 801c3b2:	f04f 0800 	mov.w	r8, #0
 801c3b6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801c3ba:	f104 0a1a 	add.w	sl, r4, #26
 801c3be:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801c3c2:	1a9b      	subs	r3, r3, r2
 801c3c4:	eba3 0309 	sub.w	r3, r3, r9
 801c3c8:	4543      	cmp	r3, r8
 801c3ca:	f77f af79 	ble.w	801c2c0 <_printf_float+0x250>
 801c3ce:	2301      	movs	r3, #1
 801c3d0:	4652      	mov	r2, sl
 801c3d2:	4631      	mov	r1, r6
 801c3d4:	4628      	mov	r0, r5
 801c3d6:	47b8      	blx	r7
 801c3d8:	3001      	adds	r0, #1
 801c3da:	f43f aeaa 	beq.w	801c132 <_printf_float+0xc2>
 801c3de:	f108 0801 	add.w	r8, r8, #1
 801c3e2:	e7ec      	b.n	801c3be <_printf_float+0x34e>
 801c3e4:	4613      	mov	r3, r2
 801c3e6:	4631      	mov	r1, r6
 801c3e8:	4642      	mov	r2, r8
 801c3ea:	4628      	mov	r0, r5
 801c3ec:	47b8      	blx	r7
 801c3ee:	3001      	adds	r0, #1
 801c3f0:	d1c0      	bne.n	801c374 <_printf_float+0x304>
 801c3f2:	e69e      	b.n	801c132 <_printf_float+0xc2>
 801c3f4:	2301      	movs	r3, #1
 801c3f6:	4631      	mov	r1, r6
 801c3f8:	4628      	mov	r0, r5
 801c3fa:	9205      	str	r2, [sp, #20]
 801c3fc:	47b8      	blx	r7
 801c3fe:	3001      	adds	r0, #1
 801c400:	f43f ae97 	beq.w	801c132 <_printf_float+0xc2>
 801c404:	9a05      	ldr	r2, [sp, #20]
 801c406:	f10b 0b01 	add.w	fp, fp, #1
 801c40a:	e7b9      	b.n	801c380 <_printf_float+0x310>
 801c40c:	ee18 3a10 	vmov	r3, s16
 801c410:	4652      	mov	r2, sl
 801c412:	4631      	mov	r1, r6
 801c414:	4628      	mov	r0, r5
 801c416:	47b8      	blx	r7
 801c418:	3001      	adds	r0, #1
 801c41a:	d1be      	bne.n	801c39a <_printf_float+0x32a>
 801c41c:	e689      	b.n	801c132 <_printf_float+0xc2>
 801c41e:	9a05      	ldr	r2, [sp, #20]
 801c420:	464b      	mov	r3, r9
 801c422:	4442      	add	r2, r8
 801c424:	4631      	mov	r1, r6
 801c426:	4628      	mov	r0, r5
 801c428:	47b8      	blx	r7
 801c42a:	3001      	adds	r0, #1
 801c42c:	d1c1      	bne.n	801c3b2 <_printf_float+0x342>
 801c42e:	e680      	b.n	801c132 <_printf_float+0xc2>
 801c430:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c432:	2a01      	cmp	r2, #1
 801c434:	dc01      	bgt.n	801c43a <_printf_float+0x3ca>
 801c436:	07db      	lsls	r3, r3, #31
 801c438:	d538      	bpl.n	801c4ac <_printf_float+0x43c>
 801c43a:	2301      	movs	r3, #1
 801c43c:	4642      	mov	r2, r8
 801c43e:	4631      	mov	r1, r6
 801c440:	4628      	mov	r0, r5
 801c442:	47b8      	blx	r7
 801c444:	3001      	adds	r0, #1
 801c446:	f43f ae74 	beq.w	801c132 <_printf_float+0xc2>
 801c44a:	ee18 3a10 	vmov	r3, s16
 801c44e:	4652      	mov	r2, sl
 801c450:	4631      	mov	r1, r6
 801c452:	4628      	mov	r0, r5
 801c454:	47b8      	blx	r7
 801c456:	3001      	adds	r0, #1
 801c458:	f43f ae6b 	beq.w	801c132 <_printf_float+0xc2>
 801c45c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801c460:	2200      	movs	r2, #0
 801c462:	2300      	movs	r3, #0
 801c464:	f7e4 fb40 	bl	8000ae8 <__aeabi_dcmpeq>
 801c468:	b9d8      	cbnz	r0, 801c4a2 <_printf_float+0x432>
 801c46a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c46c:	f108 0201 	add.w	r2, r8, #1
 801c470:	3b01      	subs	r3, #1
 801c472:	4631      	mov	r1, r6
 801c474:	4628      	mov	r0, r5
 801c476:	47b8      	blx	r7
 801c478:	3001      	adds	r0, #1
 801c47a:	d10e      	bne.n	801c49a <_printf_float+0x42a>
 801c47c:	e659      	b.n	801c132 <_printf_float+0xc2>
 801c47e:	2301      	movs	r3, #1
 801c480:	4652      	mov	r2, sl
 801c482:	4631      	mov	r1, r6
 801c484:	4628      	mov	r0, r5
 801c486:	47b8      	blx	r7
 801c488:	3001      	adds	r0, #1
 801c48a:	f43f ae52 	beq.w	801c132 <_printf_float+0xc2>
 801c48e:	f108 0801 	add.w	r8, r8, #1
 801c492:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c494:	3b01      	subs	r3, #1
 801c496:	4543      	cmp	r3, r8
 801c498:	dcf1      	bgt.n	801c47e <_printf_float+0x40e>
 801c49a:	464b      	mov	r3, r9
 801c49c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 801c4a0:	e6dc      	b.n	801c25c <_printf_float+0x1ec>
 801c4a2:	f04f 0800 	mov.w	r8, #0
 801c4a6:	f104 0a1a 	add.w	sl, r4, #26
 801c4aa:	e7f2      	b.n	801c492 <_printf_float+0x422>
 801c4ac:	2301      	movs	r3, #1
 801c4ae:	4642      	mov	r2, r8
 801c4b0:	e7df      	b.n	801c472 <_printf_float+0x402>
 801c4b2:	2301      	movs	r3, #1
 801c4b4:	464a      	mov	r2, r9
 801c4b6:	4631      	mov	r1, r6
 801c4b8:	4628      	mov	r0, r5
 801c4ba:	47b8      	blx	r7
 801c4bc:	3001      	adds	r0, #1
 801c4be:	f43f ae38 	beq.w	801c132 <_printf_float+0xc2>
 801c4c2:	f108 0801 	add.w	r8, r8, #1
 801c4c6:	68e3      	ldr	r3, [r4, #12]
 801c4c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c4ca:	1a5b      	subs	r3, r3, r1
 801c4cc:	4543      	cmp	r3, r8
 801c4ce:	dcf0      	bgt.n	801c4b2 <_printf_float+0x442>
 801c4d0:	e6fa      	b.n	801c2c8 <_printf_float+0x258>
 801c4d2:	f04f 0800 	mov.w	r8, #0
 801c4d6:	f104 0919 	add.w	r9, r4, #25
 801c4da:	e7f4      	b.n	801c4c6 <_printf_float+0x456>

0801c4dc <_printf_common>:
 801c4dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c4e0:	4616      	mov	r6, r2
 801c4e2:	4699      	mov	r9, r3
 801c4e4:	688a      	ldr	r2, [r1, #8]
 801c4e6:	690b      	ldr	r3, [r1, #16]
 801c4e8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801c4ec:	4293      	cmp	r3, r2
 801c4ee:	bfb8      	it	lt
 801c4f0:	4613      	movlt	r3, r2
 801c4f2:	6033      	str	r3, [r6, #0]
 801c4f4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801c4f8:	4607      	mov	r7, r0
 801c4fa:	460c      	mov	r4, r1
 801c4fc:	b10a      	cbz	r2, 801c502 <_printf_common+0x26>
 801c4fe:	3301      	adds	r3, #1
 801c500:	6033      	str	r3, [r6, #0]
 801c502:	6823      	ldr	r3, [r4, #0]
 801c504:	0699      	lsls	r1, r3, #26
 801c506:	bf42      	ittt	mi
 801c508:	6833      	ldrmi	r3, [r6, #0]
 801c50a:	3302      	addmi	r3, #2
 801c50c:	6033      	strmi	r3, [r6, #0]
 801c50e:	6825      	ldr	r5, [r4, #0]
 801c510:	f015 0506 	ands.w	r5, r5, #6
 801c514:	d106      	bne.n	801c524 <_printf_common+0x48>
 801c516:	f104 0a19 	add.w	sl, r4, #25
 801c51a:	68e3      	ldr	r3, [r4, #12]
 801c51c:	6832      	ldr	r2, [r6, #0]
 801c51e:	1a9b      	subs	r3, r3, r2
 801c520:	42ab      	cmp	r3, r5
 801c522:	dc26      	bgt.n	801c572 <_printf_common+0x96>
 801c524:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801c528:	1e13      	subs	r3, r2, #0
 801c52a:	6822      	ldr	r2, [r4, #0]
 801c52c:	bf18      	it	ne
 801c52e:	2301      	movne	r3, #1
 801c530:	0692      	lsls	r2, r2, #26
 801c532:	d42b      	bmi.n	801c58c <_printf_common+0xb0>
 801c534:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c538:	4649      	mov	r1, r9
 801c53a:	4638      	mov	r0, r7
 801c53c:	47c0      	blx	r8
 801c53e:	3001      	adds	r0, #1
 801c540:	d01e      	beq.n	801c580 <_printf_common+0xa4>
 801c542:	6823      	ldr	r3, [r4, #0]
 801c544:	68e5      	ldr	r5, [r4, #12]
 801c546:	6832      	ldr	r2, [r6, #0]
 801c548:	f003 0306 	and.w	r3, r3, #6
 801c54c:	2b04      	cmp	r3, #4
 801c54e:	bf08      	it	eq
 801c550:	1aad      	subeq	r5, r5, r2
 801c552:	68a3      	ldr	r3, [r4, #8]
 801c554:	6922      	ldr	r2, [r4, #16]
 801c556:	bf0c      	ite	eq
 801c558:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801c55c:	2500      	movne	r5, #0
 801c55e:	4293      	cmp	r3, r2
 801c560:	bfc4      	itt	gt
 801c562:	1a9b      	subgt	r3, r3, r2
 801c564:	18ed      	addgt	r5, r5, r3
 801c566:	2600      	movs	r6, #0
 801c568:	341a      	adds	r4, #26
 801c56a:	42b5      	cmp	r5, r6
 801c56c:	d11a      	bne.n	801c5a4 <_printf_common+0xc8>
 801c56e:	2000      	movs	r0, #0
 801c570:	e008      	b.n	801c584 <_printf_common+0xa8>
 801c572:	2301      	movs	r3, #1
 801c574:	4652      	mov	r2, sl
 801c576:	4649      	mov	r1, r9
 801c578:	4638      	mov	r0, r7
 801c57a:	47c0      	blx	r8
 801c57c:	3001      	adds	r0, #1
 801c57e:	d103      	bne.n	801c588 <_printf_common+0xac>
 801c580:	f04f 30ff 	mov.w	r0, #4294967295
 801c584:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c588:	3501      	adds	r5, #1
 801c58a:	e7c6      	b.n	801c51a <_printf_common+0x3e>
 801c58c:	18e1      	adds	r1, r4, r3
 801c58e:	1c5a      	adds	r2, r3, #1
 801c590:	2030      	movs	r0, #48	; 0x30
 801c592:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801c596:	4422      	add	r2, r4
 801c598:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801c59c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801c5a0:	3302      	adds	r3, #2
 801c5a2:	e7c7      	b.n	801c534 <_printf_common+0x58>
 801c5a4:	2301      	movs	r3, #1
 801c5a6:	4622      	mov	r2, r4
 801c5a8:	4649      	mov	r1, r9
 801c5aa:	4638      	mov	r0, r7
 801c5ac:	47c0      	blx	r8
 801c5ae:	3001      	adds	r0, #1
 801c5b0:	d0e6      	beq.n	801c580 <_printf_common+0xa4>
 801c5b2:	3601      	adds	r6, #1
 801c5b4:	e7d9      	b.n	801c56a <_printf_common+0x8e>
	...

0801c5b8 <_printf_i>:
 801c5b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c5bc:	7e0f      	ldrb	r7, [r1, #24]
 801c5be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c5c0:	2f78      	cmp	r7, #120	; 0x78
 801c5c2:	4691      	mov	r9, r2
 801c5c4:	4680      	mov	r8, r0
 801c5c6:	460c      	mov	r4, r1
 801c5c8:	469a      	mov	sl, r3
 801c5ca:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801c5ce:	d807      	bhi.n	801c5e0 <_printf_i+0x28>
 801c5d0:	2f62      	cmp	r7, #98	; 0x62
 801c5d2:	d80a      	bhi.n	801c5ea <_printf_i+0x32>
 801c5d4:	2f00      	cmp	r7, #0
 801c5d6:	f000 80d8 	beq.w	801c78a <_printf_i+0x1d2>
 801c5da:	2f58      	cmp	r7, #88	; 0x58
 801c5dc:	f000 80a3 	beq.w	801c726 <_printf_i+0x16e>
 801c5e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c5e4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801c5e8:	e03a      	b.n	801c660 <_printf_i+0xa8>
 801c5ea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801c5ee:	2b15      	cmp	r3, #21
 801c5f0:	d8f6      	bhi.n	801c5e0 <_printf_i+0x28>
 801c5f2:	a101      	add	r1, pc, #4	; (adr r1, 801c5f8 <_printf_i+0x40>)
 801c5f4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801c5f8:	0801c651 	.word	0x0801c651
 801c5fc:	0801c665 	.word	0x0801c665
 801c600:	0801c5e1 	.word	0x0801c5e1
 801c604:	0801c5e1 	.word	0x0801c5e1
 801c608:	0801c5e1 	.word	0x0801c5e1
 801c60c:	0801c5e1 	.word	0x0801c5e1
 801c610:	0801c665 	.word	0x0801c665
 801c614:	0801c5e1 	.word	0x0801c5e1
 801c618:	0801c5e1 	.word	0x0801c5e1
 801c61c:	0801c5e1 	.word	0x0801c5e1
 801c620:	0801c5e1 	.word	0x0801c5e1
 801c624:	0801c771 	.word	0x0801c771
 801c628:	0801c695 	.word	0x0801c695
 801c62c:	0801c753 	.word	0x0801c753
 801c630:	0801c5e1 	.word	0x0801c5e1
 801c634:	0801c5e1 	.word	0x0801c5e1
 801c638:	0801c793 	.word	0x0801c793
 801c63c:	0801c5e1 	.word	0x0801c5e1
 801c640:	0801c695 	.word	0x0801c695
 801c644:	0801c5e1 	.word	0x0801c5e1
 801c648:	0801c5e1 	.word	0x0801c5e1
 801c64c:	0801c75b 	.word	0x0801c75b
 801c650:	682b      	ldr	r3, [r5, #0]
 801c652:	1d1a      	adds	r2, r3, #4
 801c654:	681b      	ldr	r3, [r3, #0]
 801c656:	602a      	str	r2, [r5, #0]
 801c658:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c65c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801c660:	2301      	movs	r3, #1
 801c662:	e0a3      	b.n	801c7ac <_printf_i+0x1f4>
 801c664:	6820      	ldr	r0, [r4, #0]
 801c666:	6829      	ldr	r1, [r5, #0]
 801c668:	0606      	lsls	r6, r0, #24
 801c66a:	f101 0304 	add.w	r3, r1, #4
 801c66e:	d50a      	bpl.n	801c686 <_printf_i+0xce>
 801c670:	680e      	ldr	r6, [r1, #0]
 801c672:	602b      	str	r3, [r5, #0]
 801c674:	2e00      	cmp	r6, #0
 801c676:	da03      	bge.n	801c680 <_printf_i+0xc8>
 801c678:	232d      	movs	r3, #45	; 0x2d
 801c67a:	4276      	negs	r6, r6
 801c67c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c680:	485e      	ldr	r0, [pc, #376]	; (801c7fc <_printf_i+0x244>)
 801c682:	230a      	movs	r3, #10
 801c684:	e019      	b.n	801c6ba <_printf_i+0x102>
 801c686:	680e      	ldr	r6, [r1, #0]
 801c688:	602b      	str	r3, [r5, #0]
 801c68a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c68e:	bf18      	it	ne
 801c690:	b236      	sxthne	r6, r6
 801c692:	e7ef      	b.n	801c674 <_printf_i+0xbc>
 801c694:	682b      	ldr	r3, [r5, #0]
 801c696:	6820      	ldr	r0, [r4, #0]
 801c698:	1d19      	adds	r1, r3, #4
 801c69a:	6029      	str	r1, [r5, #0]
 801c69c:	0601      	lsls	r1, r0, #24
 801c69e:	d501      	bpl.n	801c6a4 <_printf_i+0xec>
 801c6a0:	681e      	ldr	r6, [r3, #0]
 801c6a2:	e002      	b.n	801c6aa <_printf_i+0xf2>
 801c6a4:	0646      	lsls	r6, r0, #25
 801c6a6:	d5fb      	bpl.n	801c6a0 <_printf_i+0xe8>
 801c6a8:	881e      	ldrh	r6, [r3, #0]
 801c6aa:	4854      	ldr	r0, [pc, #336]	; (801c7fc <_printf_i+0x244>)
 801c6ac:	2f6f      	cmp	r7, #111	; 0x6f
 801c6ae:	bf0c      	ite	eq
 801c6b0:	2308      	moveq	r3, #8
 801c6b2:	230a      	movne	r3, #10
 801c6b4:	2100      	movs	r1, #0
 801c6b6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801c6ba:	6865      	ldr	r5, [r4, #4]
 801c6bc:	60a5      	str	r5, [r4, #8]
 801c6be:	2d00      	cmp	r5, #0
 801c6c0:	bfa2      	ittt	ge
 801c6c2:	6821      	ldrge	r1, [r4, #0]
 801c6c4:	f021 0104 	bicge.w	r1, r1, #4
 801c6c8:	6021      	strge	r1, [r4, #0]
 801c6ca:	b90e      	cbnz	r6, 801c6d0 <_printf_i+0x118>
 801c6cc:	2d00      	cmp	r5, #0
 801c6ce:	d04d      	beq.n	801c76c <_printf_i+0x1b4>
 801c6d0:	4615      	mov	r5, r2
 801c6d2:	fbb6 f1f3 	udiv	r1, r6, r3
 801c6d6:	fb03 6711 	mls	r7, r3, r1, r6
 801c6da:	5dc7      	ldrb	r7, [r0, r7]
 801c6dc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801c6e0:	4637      	mov	r7, r6
 801c6e2:	42bb      	cmp	r3, r7
 801c6e4:	460e      	mov	r6, r1
 801c6e6:	d9f4      	bls.n	801c6d2 <_printf_i+0x11a>
 801c6e8:	2b08      	cmp	r3, #8
 801c6ea:	d10b      	bne.n	801c704 <_printf_i+0x14c>
 801c6ec:	6823      	ldr	r3, [r4, #0]
 801c6ee:	07de      	lsls	r6, r3, #31
 801c6f0:	d508      	bpl.n	801c704 <_printf_i+0x14c>
 801c6f2:	6923      	ldr	r3, [r4, #16]
 801c6f4:	6861      	ldr	r1, [r4, #4]
 801c6f6:	4299      	cmp	r1, r3
 801c6f8:	bfde      	ittt	le
 801c6fa:	2330      	movle	r3, #48	; 0x30
 801c6fc:	f805 3c01 	strble.w	r3, [r5, #-1]
 801c700:	f105 35ff 	addle.w	r5, r5, #4294967295
 801c704:	1b52      	subs	r2, r2, r5
 801c706:	6122      	str	r2, [r4, #16]
 801c708:	f8cd a000 	str.w	sl, [sp]
 801c70c:	464b      	mov	r3, r9
 801c70e:	aa03      	add	r2, sp, #12
 801c710:	4621      	mov	r1, r4
 801c712:	4640      	mov	r0, r8
 801c714:	f7ff fee2 	bl	801c4dc <_printf_common>
 801c718:	3001      	adds	r0, #1
 801c71a:	d14c      	bne.n	801c7b6 <_printf_i+0x1fe>
 801c71c:	f04f 30ff 	mov.w	r0, #4294967295
 801c720:	b004      	add	sp, #16
 801c722:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c726:	4835      	ldr	r0, [pc, #212]	; (801c7fc <_printf_i+0x244>)
 801c728:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801c72c:	6829      	ldr	r1, [r5, #0]
 801c72e:	6823      	ldr	r3, [r4, #0]
 801c730:	f851 6b04 	ldr.w	r6, [r1], #4
 801c734:	6029      	str	r1, [r5, #0]
 801c736:	061d      	lsls	r5, r3, #24
 801c738:	d514      	bpl.n	801c764 <_printf_i+0x1ac>
 801c73a:	07df      	lsls	r7, r3, #31
 801c73c:	bf44      	itt	mi
 801c73e:	f043 0320 	orrmi.w	r3, r3, #32
 801c742:	6023      	strmi	r3, [r4, #0]
 801c744:	b91e      	cbnz	r6, 801c74e <_printf_i+0x196>
 801c746:	6823      	ldr	r3, [r4, #0]
 801c748:	f023 0320 	bic.w	r3, r3, #32
 801c74c:	6023      	str	r3, [r4, #0]
 801c74e:	2310      	movs	r3, #16
 801c750:	e7b0      	b.n	801c6b4 <_printf_i+0xfc>
 801c752:	6823      	ldr	r3, [r4, #0]
 801c754:	f043 0320 	orr.w	r3, r3, #32
 801c758:	6023      	str	r3, [r4, #0]
 801c75a:	2378      	movs	r3, #120	; 0x78
 801c75c:	4828      	ldr	r0, [pc, #160]	; (801c800 <_printf_i+0x248>)
 801c75e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801c762:	e7e3      	b.n	801c72c <_printf_i+0x174>
 801c764:	0659      	lsls	r1, r3, #25
 801c766:	bf48      	it	mi
 801c768:	b2b6      	uxthmi	r6, r6
 801c76a:	e7e6      	b.n	801c73a <_printf_i+0x182>
 801c76c:	4615      	mov	r5, r2
 801c76e:	e7bb      	b.n	801c6e8 <_printf_i+0x130>
 801c770:	682b      	ldr	r3, [r5, #0]
 801c772:	6826      	ldr	r6, [r4, #0]
 801c774:	6961      	ldr	r1, [r4, #20]
 801c776:	1d18      	adds	r0, r3, #4
 801c778:	6028      	str	r0, [r5, #0]
 801c77a:	0635      	lsls	r5, r6, #24
 801c77c:	681b      	ldr	r3, [r3, #0]
 801c77e:	d501      	bpl.n	801c784 <_printf_i+0x1cc>
 801c780:	6019      	str	r1, [r3, #0]
 801c782:	e002      	b.n	801c78a <_printf_i+0x1d2>
 801c784:	0670      	lsls	r0, r6, #25
 801c786:	d5fb      	bpl.n	801c780 <_printf_i+0x1c8>
 801c788:	8019      	strh	r1, [r3, #0]
 801c78a:	2300      	movs	r3, #0
 801c78c:	6123      	str	r3, [r4, #16]
 801c78e:	4615      	mov	r5, r2
 801c790:	e7ba      	b.n	801c708 <_printf_i+0x150>
 801c792:	682b      	ldr	r3, [r5, #0]
 801c794:	1d1a      	adds	r2, r3, #4
 801c796:	602a      	str	r2, [r5, #0]
 801c798:	681d      	ldr	r5, [r3, #0]
 801c79a:	6862      	ldr	r2, [r4, #4]
 801c79c:	2100      	movs	r1, #0
 801c79e:	4628      	mov	r0, r5
 801c7a0:	f7e3 fd2e 	bl	8000200 <memchr>
 801c7a4:	b108      	cbz	r0, 801c7aa <_printf_i+0x1f2>
 801c7a6:	1b40      	subs	r0, r0, r5
 801c7a8:	6060      	str	r0, [r4, #4]
 801c7aa:	6863      	ldr	r3, [r4, #4]
 801c7ac:	6123      	str	r3, [r4, #16]
 801c7ae:	2300      	movs	r3, #0
 801c7b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c7b4:	e7a8      	b.n	801c708 <_printf_i+0x150>
 801c7b6:	6923      	ldr	r3, [r4, #16]
 801c7b8:	462a      	mov	r2, r5
 801c7ba:	4649      	mov	r1, r9
 801c7bc:	4640      	mov	r0, r8
 801c7be:	47d0      	blx	sl
 801c7c0:	3001      	adds	r0, #1
 801c7c2:	d0ab      	beq.n	801c71c <_printf_i+0x164>
 801c7c4:	6823      	ldr	r3, [r4, #0]
 801c7c6:	079b      	lsls	r3, r3, #30
 801c7c8:	d413      	bmi.n	801c7f2 <_printf_i+0x23a>
 801c7ca:	68e0      	ldr	r0, [r4, #12]
 801c7cc:	9b03      	ldr	r3, [sp, #12]
 801c7ce:	4298      	cmp	r0, r3
 801c7d0:	bfb8      	it	lt
 801c7d2:	4618      	movlt	r0, r3
 801c7d4:	e7a4      	b.n	801c720 <_printf_i+0x168>
 801c7d6:	2301      	movs	r3, #1
 801c7d8:	4632      	mov	r2, r6
 801c7da:	4649      	mov	r1, r9
 801c7dc:	4640      	mov	r0, r8
 801c7de:	47d0      	blx	sl
 801c7e0:	3001      	adds	r0, #1
 801c7e2:	d09b      	beq.n	801c71c <_printf_i+0x164>
 801c7e4:	3501      	adds	r5, #1
 801c7e6:	68e3      	ldr	r3, [r4, #12]
 801c7e8:	9903      	ldr	r1, [sp, #12]
 801c7ea:	1a5b      	subs	r3, r3, r1
 801c7ec:	42ab      	cmp	r3, r5
 801c7ee:	dcf2      	bgt.n	801c7d6 <_printf_i+0x21e>
 801c7f0:	e7eb      	b.n	801c7ca <_printf_i+0x212>
 801c7f2:	2500      	movs	r5, #0
 801c7f4:	f104 0619 	add.w	r6, r4, #25
 801c7f8:	e7f5      	b.n	801c7e6 <_printf_i+0x22e>
 801c7fa:	bf00      	nop
 801c7fc:	08021925 	.word	0x08021925
 801c800:	08021936 	.word	0x08021936

0801c804 <iprintf>:
 801c804:	b40f      	push	{r0, r1, r2, r3}
 801c806:	4b0a      	ldr	r3, [pc, #40]	; (801c830 <iprintf+0x2c>)
 801c808:	b513      	push	{r0, r1, r4, lr}
 801c80a:	681c      	ldr	r4, [r3, #0]
 801c80c:	b124      	cbz	r4, 801c818 <iprintf+0x14>
 801c80e:	69a3      	ldr	r3, [r4, #24]
 801c810:	b913      	cbnz	r3, 801c818 <iprintf+0x14>
 801c812:	4620      	mov	r0, r4
 801c814:	f001 f9a4 	bl	801db60 <__sinit>
 801c818:	ab05      	add	r3, sp, #20
 801c81a:	9a04      	ldr	r2, [sp, #16]
 801c81c:	68a1      	ldr	r1, [r4, #8]
 801c81e:	9301      	str	r3, [sp, #4]
 801c820:	4620      	mov	r0, r4
 801c822:	f7ff fa55 	bl	801bcd0 <_vfiprintf_r>
 801c826:	b002      	add	sp, #8
 801c828:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c82c:	b004      	add	sp, #16
 801c82e:	4770      	bx	lr
 801c830:	2000009c 	.word	0x2000009c

0801c834 <_sbrk_r>:
 801c834:	b538      	push	{r3, r4, r5, lr}
 801c836:	4d06      	ldr	r5, [pc, #24]	; (801c850 <_sbrk_r+0x1c>)
 801c838:	2300      	movs	r3, #0
 801c83a:	4604      	mov	r4, r0
 801c83c:	4608      	mov	r0, r1
 801c83e:	602b      	str	r3, [r5, #0]
 801c840:	f7e6 f8c4 	bl	80029cc <_sbrk>
 801c844:	1c43      	adds	r3, r0, #1
 801c846:	d102      	bne.n	801c84e <_sbrk_r+0x1a>
 801c848:	682b      	ldr	r3, [r5, #0]
 801c84a:	b103      	cbz	r3, 801c84e <_sbrk_r+0x1a>
 801c84c:	6023      	str	r3, [r4, #0]
 801c84e:	bd38      	pop	{r3, r4, r5, pc}
 801c850:	20001a60 	.word	0x20001a60

0801c854 <_raise_r>:
 801c854:	291f      	cmp	r1, #31
 801c856:	b538      	push	{r3, r4, r5, lr}
 801c858:	4604      	mov	r4, r0
 801c85a:	460d      	mov	r5, r1
 801c85c:	d904      	bls.n	801c868 <_raise_r+0x14>
 801c85e:	2316      	movs	r3, #22
 801c860:	6003      	str	r3, [r0, #0]
 801c862:	f04f 30ff 	mov.w	r0, #4294967295
 801c866:	bd38      	pop	{r3, r4, r5, pc}
 801c868:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801c86a:	b112      	cbz	r2, 801c872 <_raise_r+0x1e>
 801c86c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801c870:	b94b      	cbnz	r3, 801c886 <_raise_r+0x32>
 801c872:	4620      	mov	r0, r4
 801c874:	f000 f830 	bl	801c8d8 <_getpid_r>
 801c878:	462a      	mov	r2, r5
 801c87a:	4601      	mov	r1, r0
 801c87c:	4620      	mov	r0, r4
 801c87e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c882:	f000 b817 	b.w	801c8b4 <_kill_r>
 801c886:	2b01      	cmp	r3, #1
 801c888:	d00a      	beq.n	801c8a0 <_raise_r+0x4c>
 801c88a:	1c59      	adds	r1, r3, #1
 801c88c:	d103      	bne.n	801c896 <_raise_r+0x42>
 801c88e:	2316      	movs	r3, #22
 801c890:	6003      	str	r3, [r0, #0]
 801c892:	2001      	movs	r0, #1
 801c894:	e7e7      	b.n	801c866 <_raise_r+0x12>
 801c896:	2400      	movs	r4, #0
 801c898:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801c89c:	4628      	mov	r0, r5
 801c89e:	4798      	blx	r3
 801c8a0:	2000      	movs	r0, #0
 801c8a2:	e7e0      	b.n	801c866 <_raise_r+0x12>

0801c8a4 <raise>:
 801c8a4:	4b02      	ldr	r3, [pc, #8]	; (801c8b0 <raise+0xc>)
 801c8a6:	4601      	mov	r1, r0
 801c8a8:	6818      	ldr	r0, [r3, #0]
 801c8aa:	f7ff bfd3 	b.w	801c854 <_raise_r>
 801c8ae:	bf00      	nop
 801c8b0:	2000009c 	.word	0x2000009c

0801c8b4 <_kill_r>:
 801c8b4:	b538      	push	{r3, r4, r5, lr}
 801c8b6:	4d07      	ldr	r5, [pc, #28]	; (801c8d4 <_kill_r+0x20>)
 801c8b8:	2300      	movs	r3, #0
 801c8ba:	4604      	mov	r4, r0
 801c8bc:	4608      	mov	r0, r1
 801c8be:	4611      	mov	r1, r2
 801c8c0:	602b      	str	r3, [r5, #0]
 801c8c2:	f7e5 fffb 	bl	80028bc <_kill>
 801c8c6:	1c43      	adds	r3, r0, #1
 801c8c8:	d102      	bne.n	801c8d0 <_kill_r+0x1c>
 801c8ca:	682b      	ldr	r3, [r5, #0]
 801c8cc:	b103      	cbz	r3, 801c8d0 <_kill_r+0x1c>
 801c8ce:	6023      	str	r3, [r4, #0]
 801c8d0:	bd38      	pop	{r3, r4, r5, pc}
 801c8d2:	bf00      	nop
 801c8d4:	20001a60 	.word	0x20001a60

0801c8d8 <_getpid_r>:
 801c8d8:	f7e5 bfe8 	b.w	80028ac <_getpid>

0801c8dc <_strtol_l.constprop.0>:
 801c8dc:	2b01      	cmp	r3, #1
 801c8de:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c8e2:	d001      	beq.n	801c8e8 <_strtol_l.constprop.0+0xc>
 801c8e4:	2b24      	cmp	r3, #36	; 0x24
 801c8e6:	d906      	bls.n	801c8f6 <_strtol_l.constprop.0+0x1a>
 801c8e8:	f7ff f886 	bl	801b9f8 <__errno>
 801c8ec:	2316      	movs	r3, #22
 801c8ee:	6003      	str	r3, [r0, #0]
 801c8f0:	2000      	movs	r0, #0
 801c8f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c8f6:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 801c9dc <_strtol_l.constprop.0+0x100>
 801c8fa:	460d      	mov	r5, r1
 801c8fc:	462e      	mov	r6, r5
 801c8fe:	f815 4b01 	ldrb.w	r4, [r5], #1
 801c902:	f814 700c 	ldrb.w	r7, [r4, ip]
 801c906:	f017 0708 	ands.w	r7, r7, #8
 801c90a:	d1f7      	bne.n	801c8fc <_strtol_l.constprop.0+0x20>
 801c90c:	2c2d      	cmp	r4, #45	; 0x2d
 801c90e:	d132      	bne.n	801c976 <_strtol_l.constprop.0+0x9a>
 801c910:	782c      	ldrb	r4, [r5, #0]
 801c912:	2701      	movs	r7, #1
 801c914:	1cb5      	adds	r5, r6, #2
 801c916:	2b00      	cmp	r3, #0
 801c918:	d05b      	beq.n	801c9d2 <_strtol_l.constprop.0+0xf6>
 801c91a:	2b10      	cmp	r3, #16
 801c91c:	d109      	bne.n	801c932 <_strtol_l.constprop.0+0x56>
 801c91e:	2c30      	cmp	r4, #48	; 0x30
 801c920:	d107      	bne.n	801c932 <_strtol_l.constprop.0+0x56>
 801c922:	782c      	ldrb	r4, [r5, #0]
 801c924:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 801c928:	2c58      	cmp	r4, #88	; 0x58
 801c92a:	d14d      	bne.n	801c9c8 <_strtol_l.constprop.0+0xec>
 801c92c:	786c      	ldrb	r4, [r5, #1]
 801c92e:	2310      	movs	r3, #16
 801c930:	3502      	adds	r5, #2
 801c932:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 801c936:	f108 38ff 	add.w	r8, r8, #4294967295
 801c93a:	f04f 0c00 	mov.w	ip, #0
 801c93e:	fbb8 f9f3 	udiv	r9, r8, r3
 801c942:	4666      	mov	r6, ip
 801c944:	fb03 8a19 	mls	sl, r3, r9, r8
 801c948:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 801c94c:	f1be 0f09 	cmp.w	lr, #9
 801c950:	d816      	bhi.n	801c980 <_strtol_l.constprop.0+0xa4>
 801c952:	4674      	mov	r4, lr
 801c954:	42a3      	cmp	r3, r4
 801c956:	dd24      	ble.n	801c9a2 <_strtol_l.constprop.0+0xc6>
 801c958:	f1bc 0f00 	cmp.w	ip, #0
 801c95c:	db1e      	blt.n	801c99c <_strtol_l.constprop.0+0xc0>
 801c95e:	45b1      	cmp	r9, r6
 801c960:	d31c      	bcc.n	801c99c <_strtol_l.constprop.0+0xc0>
 801c962:	d101      	bne.n	801c968 <_strtol_l.constprop.0+0x8c>
 801c964:	45a2      	cmp	sl, r4
 801c966:	db19      	blt.n	801c99c <_strtol_l.constprop.0+0xc0>
 801c968:	fb06 4603 	mla	r6, r6, r3, r4
 801c96c:	f04f 0c01 	mov.w	ip, #1
 801c970:	f815 4b01 	ldrb.w	r4, [r5], #1
 801c974:	e7e8      	b.n	801c948 <_strtol_l.constprop.0+0x6c>
 801c976:	2c2b      	cmp	r4, #43	; 0x2b
 801c978:	bf04      	itt	eq
 801c97a:	782c      	ldrbeq	r4, [r5, #0]
 801c97c:	1cb5      	addeq	r5, r6, #2
 801c97e:	e7ca      	b.n	801c916 <_strtol_l.constprop.0+0x3a>
 801c980:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 801c984:	f1be 0f19 	cmp.w	lr, #25
 801c988:	d801      	bhi.n	801c98e <_strtol_l.constprop.0+0xb2>
 801c98a:	3c37      	subs	r4, #55	; 0x37
 801c98c:	e7e2      	b.n	801c954 <_strtol_l.constprop.0+0x78>
 801c98e:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 801c992:	f1be 0f19 	cmp.w	lr, #25
 801c996:	d804      	bhi.n	801c9a2 <_strtol_l.constprop.0+0xc6>
 801c998:	3c57      	subs	r4, #87	; 0x57
 801c99a:	e7db      	b.n	801c954 <_strtol_l.constprop.0+0x78>
 801c99c:	f04f 3cff 	mov.w	ip, #4294967295
 801c9a0:	e7e6      	b.n	801c970 <_strtol_l.constprop.0+0x94>
 801c9a2:	f1bc 0f00 	cmp.w	ip, #0
 801c9a6:	da05      	bge.n	801c9b4 <_strtol_l.constprop.0+0xd8>
 801c9a8:	2322      	movs	r3, #34	; 0x22
 801c9aa:	6003      	str	r3, [r0, #0]
 801c9ac:	4646      	mov	r6, r8
 801c9ae:	b942      	cbnz	r2, 801c9c2 <_strtol_l.constprop.0+0xe6>
 801c9b0:	4630      	mov	r0, r6
 801c9b2:	e79e      	b.n	801c8f2 <_strtol_l.constprop.0+0x16>
 801c9b4:	b107      	cbz	r7, 801c9b8 <_strtol_l.constprop.0+0xdc>
 801c9b6:	4276      	negs	r6, r6
 801c9b8:	2a00      	cmp	r2, #0
 801c9ba:	d0f9      	beq.n	801c9b0 <_strtol_l.constprop.0+0xd4>
 801c9bc:	f1bc 0f00 	cmp.w	ip, #0
 801c9c0:	d000      	beq.n	801c9c4 <_strtol_l.constprop.0+0xe8>
 801c9c2:	1e69      	subs	r1, r5, #1
 801c9c4:	6011      	str	r1, [r2, #0]
 801c9c6:	e7f3      	b.n	801c9b0 <_strtol_l.constprop.0+0xd4>
 801c9c8:	2430      	movs	r4, #48	; 0x30
 801c9ca:	2b00      	cmp	r3, #0
 801c9cc:	d1b1      	bne.n	801c932 <_strtol_l.constprop.0+0x56>
 801c9ce:	2308      	movs	r3, #8
 801c9d0:	e7af      	b.n	801c932 <_strtol_l.constprop.0+0x56>
 801c9d2:	2c30      	cmp	r4, #48	; 0x30
 801c9d4:	d0a5      	beq.n	801c922 <_strtol_l.constprop.0+0x46>
 801c9d6:	230a      	movs	r3, #10
 801c9d8:	e7ab      	b.n	801c932 <_strtol_l.constprop.0+0x56>
 801c9da:	bf00      	nop
 801c9dc:	0802194d 	.word	0x0802194d

0801c9e0 <strtol>:
 801c9e0:	4613      	mov	r3, r2
 801c9e2:	460a      	mov	r2, r1
 801c9e4:	4601      	mov	r1, r0
 801c9e6:	4802      	ldr	r0, [pc, #8]	; (801c9f0 <strtol+0x10>)
 801c9e8:	6800      	ldr	r0, [r0, #0]
 801c9ea:	f7ff bf77 	b.w	801c8dc <_strtol_l.constprop.0>
 801c9ee:	bf00      	nop
 801c9f0:	2000009c 	.word	0x2000009c

0801c9f4 <__swbuf_r>:
 801c9f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c9f6:	460e      	mov	r6, r1
 801c9f8:	4614      	mov	r4, r2
 801c9fa:	4605      	mov	r5, r0
 801c9fc:	b118      	cbz	r0, 801ca06 <__swbuf_r+0x12>
 801c9fe:	6983      	ldr	r3, [r0, #24]
 801ca00:	b90b      	cbnz	r3, 801ca06 <__swbuf_r+0x12>
 801ca02:	f001 f8ad 	bl	801db60 <__sinit>
 801ca06:	4b21      	ldr	r3, [pc, #132]	; (801ca8c <__swbuf_r+0x98>)
 801ca08:	429c      	cmp	r4, r3
 801ca0a:	d12b      	bne.n	801ca64 <__swbuf_r+0x70>
 801ca0c:	686c      	ldr	r4, [r5, #4]
 801ca0e:	69a3      	ldr	r3, [r4, #24]
 801ca10:	60a3      	str	r3, [r4, #8]
 801ca12:	89a3      	ldrh	r3, [r4, #12]
 801ca14:	071a      	lsls	r2, r3, #28
 801ca16:	d52f      	bpl.n	801ca78 <__swbuf_r+0x84>
 801ca18:	6923      	ldr	r3, [r4, #16]
 801ca1a:	b36b      	cbz	r3, 801ca78 <__swbuf_r+0x84>
 801ca1c:	6923      	ldr	r3, [r4, #16]
 801ca1e:	6820      	ldr	r0, [r4, #0]
 801ca20:	1ac0      	subs	r0, r0, r3
 801ca22:	6963      	ldr	r3, [r4, #20]
 801ca24:	b2f6      	uxtb	r6, r6
 801ca26:	4283      	cmp	r3, r0
 801ca28:	4637      	mov	r7, r6
 801ca2a:	dc04      	bgt.n	801ca36 <__swbuf_r+0x42>
 801ca2c:	4621      	mov	r1, r4
 801ca2e:	4628      	mov	r0, r5
 801ca30:	f001 f802 	bl	801da38 <_fflush_r>
 801ca34:	bb30      	cbnz	r0, 801ca84 <__swbuf_r+0x90>
 801ca36:	68a3      	ldr	r3, [r4, #8]
 801ca38:	3b01      	subs	r3, #1
 801ca3a:	60a3      	str	r3, [r4, #8]
 801ca3c:	6823      	ldr	r3, [r4, #0]
 801ca3e:	1c5a      	adds	r2, r3, #1
 801ca40:	6022      	str	r2, [r4, #0]
 801ca42:	701e      	strb	r6, [r3, #0]
 801ca44:	6963      	ldr	r3, [r4, #20]
 801ca46:	3001      	adds	r0, #1
 801ca48:	4283      	cmp	r3, r0
 801ca4a:	d004      	beq.n	801ca56 <__swbuf_r+0x62>
 801ca4c:	89a3      	ldrh	r3, [r4, #12]
 801ca4e:	07db      	lsls	r3, r3, #31
 801ca50:	d506      	bpl.n	801ca60 <__swbuf_r+0x6c>
 801ca52:	2e0a      	cmp	r6, #10
 801ca54:	d104      	bne.n	801ca60 <__swbuf_r+0x6c>
 801ca56:	4621      	mov	r1, r4
 801ca58:	4628      	mov	r0, r5
 801ca5a:	f000 ffed 	bl	801da38 <_fflush_r>
 801ca5e:	b988      	cbnz	r0, 801ca84 <__swbuf_r+0x90>
 801ca60:	4638      	mov	r0, r7
 801ca62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801ca64:	4b0a      	ldr	r3, [pc, #40]	; (801ca90 <__swbuf_r+0x9c>)
 801ca66:	429c      	cmp	r4, r3
 801ca68:	d101      	bne.n	801ca6e <__swbuf_r+0x7a>
 801ca6a:	68ac      	ldr	r4, [r5, #8]
 801ca6c:	e7cf      	b.n	801ca0e <__swbuf_r+0x1a>
 801ca6e:	4b09      	ldr	r3, [pc, #36]	; (801ca94 <__swbuf_r+0xa0>)
 801ca70:	429c      	cmp	r4, r3
 801ca72:	bf08      	it	eq
 801ca74:	68ec      	ldreq	r4, [r5, #12]
 801ca76:	e7ca      	b.n	801ca0e <__swbuf_r+0x1a>
 801ca78:	4621      	mov	r1, r4
 801ca7a:	4628      	mov	r0, r5
 801ca7c:	f000 f80c 	bl	801ca98 <__swsetup_r>
 801ca80:	2800      	cmp	r0, #0
 801ca82:	d0cb      	beq.n	801ca1c <__swbuf_r+0x28>
 801ca84:	f04f 37ff 	mov.w	r7, #4294967295
 801ca88:	e7ea      	b.n	801ca60 <__swbuf_r+0x6c>
 801ca8a:	bf00      	nop
 801ca8c:	08021b00 	.word	0x08021b00
 801ca90:	08021b20 	.word	0x08021b20
 801ca94:	08021ae0 	.word	0x08021ae0

0801ca98 <__swsetup_r>:
 801ca98:	4b32      	ldr	r3, [pc, #200]	; (801cb64 <__swsetup_r+0xcc>)
 801ca9a:	b570      	push	{r4, r5, r6, lr}
 801ca9c:	681d      	ldr	r5, [r3, #0]
 801ca9e:	4606      	mov	r6, r0
 801caa0:	460c      	mov	r4, r1
 801caa2:	b125      	cbz	r5, 801caae <__swsetup_r+0x16>
 801caa4:	69ab      	ldr	r3, [r5, #24]
 801caa6:	b913      	cbnz	r3, 801caae <__swsetup_r+0x16>
 801caa8:	4628      	mov	r0, r5
 801caaa:	f001 f859 	bl	801db60 <__sinit>
 801caae:	4b2e      	ldr	r3, [pc, #184]	; (801cb68 <__swsetup_r+0xd0>)
 801cab0:	429c      	cmp	r4, r3
 801cab2:	d10f      	bne.n	801cad4 <__swsetup_r+0x3c>
 801cab4:	686c      	ldr	r4, [r5, #4]
 801cab6:	89a3      	ldrh	r3, [r4, #12]
 801cab8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801cabc:	0719      	lsls	r1, r3, #28
 801cabe:	d42c      	bmi.n	801cb1a <__swsetup_r+0x82>
 801cac0:	06dd      	lsls	r5, r3, #27
 801cac2:	d411      	bmi.n	801cae8 <__swsetup_r+0x50>
 801cac4:	2309      	movs	r3, #9
 801cac6:	6033      	str	r3, [r6, #0]
 801cac8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801cacc:	81a3      	strh	r3, [r4, #12]
 801cace:	f04f 30ff 	mov.w	r0, #4294967295
 801cad2:	e03e      	b.n	801cb52 <__swsetup_r+0xba>
 801cad4:	4b25      	ldr	r3, [pc, #148]	; (801cb6c <__swsetup_r+0xd4>)
 801cad6:	429c      	cmp	r4, r3
 801cad8:	d101      	bne.n	801cade <__swsetup_r+0x46>
 801cada:	68ac      	ldr	r4, [r5, #8]
 801cadc:	e7eb      	b.n	801cab6 <__swsetup_r+0x1e>
 801cade:	4b24      	ldr	r3, [pc, #144]	; (801cb70 <__swsetup_r+0xd8>)
 801cae0:	429c      	cmp	r4, r3
 801cae2:	bf08      	it	eq
 801cae4:	68ec      	ldreq	r4, [r5, #12]
 801cae6:	e7e6      	b.n	801cab6 <__swsetup_r+0x1e>
 801cae8:	0758      	lsls	r0, r3, #29
 801caea:	d512      	bpl.n	801cb12 <__swsetup_r+0x7a>
 801caec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801caee:	b141      	cbz	r1, 801cb02 <__swsetup_r+0x6a>
 801caf0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801caf4:	4299      	cmp	r1, r3
 801caf6:	d002      	beq.n	801cafe <__swsetup_r+0x66>
 801caf8:	4630      	mov	r0, r6
 801cafa:	f7fe ffdf 	bl	801babc <_free_r>
 801cafe:	2300      	movs	r3, #0
 801cb00:	6363      	str	r3, [r4, #52]	; 0x34
 801cb02:	89a3      	ldrh	r3, [r4, #12]
 801cb04:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801cb08:	81a3      	strh	r3, [r4, #12]
 801cb0a:	2300      	movs	r3, #0
 801cb0c:	6063      	str	r3, [r4, #4]
 801cb0e:	6923      	ldr	r3, [r4, #16]
 801cb10:	6023      	str	r3, [r4, #0]
 801cb12:	89a3      	ldrh	r3, [r4, #12]
 801cb14:	f043 0308 	orr.w	r3, r3, #8
 801cb18:	81a3      	strh	r3, [r4, #12]
 801cb1a:	6923      	ldr	r3, [r4, #16]
 801cb1c:	b94b      	cbnz	r3, 801cb32 <__swsetup_r+0x9a>
 801cb1e:	89a3      	ldrh	r3, [r4, #12]
 801cb20:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801cb24:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801cb28:	d003      	beq.n	801cb32 <__swsetup_r+0x9a>
 801cb2a:	4621      	mov	r1, r4
 801cb2c:	4630      	mov	r0, r6
 801cb2e:	f001 f8e3 	bl	801dcf8 <__smakebuf_r>
 801cb32:	89a0      	ldrh	r0, [r4, #12]
 801cb34:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801cb38:	f010 0301 	ands.w	r3, r0, #1
 801cb3c:	d00a      	beq.n	801cb54 <__swsetup_r+0xbc>
 801cb3e:	2300      	movs	r3, #0
 801cb40:	60a3      	str	r3, [r4, #8]
 801cb42:	6963      	ldr	r3, [r4, #20]
 801cb44:	425b      	negs	r3, r3
 801cb46:	61a3      	str	r3, [r4, #24]
 801cb48:	6923      	ldr	r3, [r4, #16]
 801cb4a:	b943      	cbnz	r3, 801cb5e <__swsetup_r+0xc6>
 801cb4c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801cb50:	d1ba      	bne.n	801cac8 <__swsetup_r+0x30>
 801cb52:	bd70      	pop	{r4, r5, r6, pc}
 801cb54:	0781      	lsls	r1, r0, #30
 801cb56:	bf58      	it	pl
 801cb58:	6963      	ldrpl	r3, [r4, #20]
 801cb5a:	60a3      	str	r3, [r4, #8]
 801cb5c:	e7f4      	b.n	801cb48 <__swsetup_r+0xb0>
 801cb5e:	2000      	movs	r0, #0
 801cb60:	e7f7      	b.n	801cb52 <__swsetup_r+0xba>
 801cb62:	bf00      	nop
 801cb64:	2000009c 	.word	0x2000009c
 801cb68:	08021b00 	.word	0x08021b00
 801cb6c:	08021b20 	.word	0x08021b20
 801cb70:	08021ae0 	.word	0x08021ae0

0801cb74 <__register_exitproc>:
 801cb74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801cb78:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801cc34 <__register_exitproc+0xc0>
 801cb7c:	4606      	mov	r6, r0
 801cb7e:	f8d8 0000 	ldr.w	r0, [r8]
 801cb82:	461f      	mov	r7, r3
 801cb84:	460d      	mov	r5, r1
 801cb86:	4691      	mov	r9, r2
 801cb88:	f001 f88d 	bl	801dca6 <__retarget_lock_acquire_recursive>
 801cb8c:	4b25      	ldr	r3, [pc, #148]	; (801cc24 <__register_exitproc+0xb0>)
 801cb8e:	681c      	ldr	r4, [r3, #0]
 801cb90:	b934      	cbnz	r4, 801cba0 <__register_exitproc+0x2c>
 801cb92:	4c25      	ldr	r4, [pc, #148]	; (801cc28 <__register_exitproc+0xb4>)
 801cb94:	601c      	str	r4, [r3, #0]
 801cb96:	4b25      	ldr	r3, [pc, #148]	; (801cc2c <__register_exitproc+0xb8>)
 801cb98:	b113      	cbz	r3, 801cba0 <__register_exitproc+0x2c>
 801cb9a:	681b      	ldr	r3, [r3, #0]
 801cb9c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801cba0:	6863      	ldr	r3, [r4, #4]
 801cba2:	2b1f      	cmp	r3, #31
 801cba4:	dd07      	ble.n	801cbb6 <__register_exitproc+0x42>
 801cba6:	f8d8 0000 	ldr.w	r0, [r8]
 801cbaa:	f001 f87e 	bl	801dcaa <__retarget_lock_release_recursive>
 801cbae:	f04f 30ff 	mov.w	r0, #4294967295
 801cbb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801cbb6:	b34e      	cbz	r6, 801cc0c <__register_exitproc+0x98>
 801cbb8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801cbbc:	b988      	cbnz	r0, 801cbe2 <__register_exitproc+0x6e>
 801cbbe:	4b1c      	ldr	r3, [pc, #112]	; (801cc30 <__register_exitproc+0xbc>)
 801cbc0:	b923      	cbnz	r3, 801cbcc <__register_exitproc+0x58>
 801cbc2:	f8d8 0000 	ldr.w	r0, [r8]
 801cbc6:	f001 f86f 	bl	801dca8 <__retarget_lock_release>
 801cbca:	e7f0      	b.n	801cbae <__register_exitproc+0x3a>
 801cbcc:	f44f 7084 	mov.w	r0, #264	; 0x108
 801cbd0:	f7fe ff4e 	bl	801ba70 <malloc>
 801cbd4:	2800      	cmp	r0, #0
 801cbd6:	d0f4      	beq.n	801cbc2 <__register_exitproc+0x4e>
 801cbd8:	2300      	movs	r3, #0
 801cbda:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801cbde:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801cbe2:	6863      	ldr	r3, [r4, #4]
 801cbe4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801cbe8:	2201      	movs	r2, #1
 801cbea:	409a      	lsls	r2, r3
 801cbec:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801cbf0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801cbf4:	4313      	orrs	r3, r2
 801cbf6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801cbfa:	2e02      	cmp	r6, #2
 801cbfc:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801cc00:	bf02      	ittt	eq
 801cc02:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801cc06:	4313      	orreq	r3, r2
 801cc08:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801cc0c:	6863      	ldr	r3, [r4, #4]
 801cc0e:	f8d8 0000 	ldr.w	r0, [r8]
 801cc12:	1c5a      	adds	r2, r3, #1
 801cc14:	3302      	adds	r3, #2
 801cc16:	6062      	str	r2, [r4, #4]
 801cc18:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801cc1c:	f001 f845 	bl	801dcaa <__retarget_lock_release_recursive>
 801cc20:	2000      	movs	r0, #0
 801cc22:	e7c6      	b.n	801cbb2 <__register_exitproc+0x3e>
 801cc24:	20001a58 	.word	0x20001a58
 801cc28:	200019cc 	.word	0x200019cc
 801cc2c:	08021948 	.word	0x08021948
 801cc30:	0801ba71 	.word	0x0801ba71
 801cc34:	20000100 	.word	0x20000100

0801cc38 <quorem>:
 801cc38:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc3c:	6903      	ldr	r3, [r0, #16]
 801cc3e:	690c      	ldr	r4, [r1, #16]
 801cc40:	42a3      	cmp	r3, r4
 801cc42:	4607      	mov	r7, r0
 801cc44:	f2c0 8081 	blt.w	801cd4a <quorem+0x112>
 801cc48:	3c01      	subs	r4, #1
 801cc4a:	f101 0814 	add.w	r8, r1, #20
 801cc4e:	f100 0514 	add.w	r5, r0, #20
 801cc52:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801cc56:	9301      	str	r3, [sp, #4]
 801cc58:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801cc5c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801cc60:	3301      	adds	r3, #1
 801cc62:	429a      	cmp	r2, r3
 801cc64:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 801cc68:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801cc6c:	fbb2 f6f3 	udiv	r6, r2, r3
 801cc70:	d331      	bcc.n	801ccd6 <quorem+0x9e>
 801cc72:	f04f 0e00 	mov.w	lr, #0
 801cc76:	4640      	mov	r0, r8
 801cc78:	46ac      	mov	ip, r5
 801cc7a:	46f2      	mov	sl, lr
 801cc7c:	f850 2b04 	ldr.w	r2, [r0], #4
 801cc80:	b293      	uxth	r3, r2
 801cc82:	fb06 e303 	mla	r3, r6, r3, lr
 801cc86:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 801cc8a:	b29b      	uxth	r3, r3
 801cc8c:	ebaa 0303 	sub.w	r3, sl, r3
 801cc90:	f8dc a000 	ldr.w	sl, [ip]
 801cc94:	0c12      	lsrs	r2, r2, #16
 801cc96:	fa13 f38a 	uxtah	r3, r3, sl
 801cc9a:	fb06 e202 	mla	r2, r6, r2, lr
 801cc9e:	9300      	str	r3, [sp, #0]
 801cca0:	9b00      	ldr	r3, [sp, #0]
 801cca2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 801cca6:	b292      	uxth	r2, r2
 801cca8:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 801ccac:	eb02 4223 	add.w	r2, r2, r3, asr #16
 801ccb0:	f8bd 3000 	ldrh.w	r3, [sp]
 801ccb4:	4581      	cmp	r9, r0
 801ccb6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ccba:	f84c 3b04 	str.w	r3, [ip], #4
 801ccbe:	ea4f 4a22 	mov.w	sl, r2, asr #16
 801ccc2:	d2db      	bcs.n	801cc7c <quorem+0x44>
 801ccc4:	f855 300b 	ldr.w	r3, [r5, fp]
 801ccc8:	b92b      	cbnz	r3, 801ccd6 <quorem+0x9e>
 801ccca:	9b01      	ldr	r3, [sp, #4]
 801cccc:	3b04      	subs	r3, #4
 801ccce:	429d      	cmp	r5, r3
 801ccd0:	461a      	mov	r2, r3
 801ccd2:	d32e      	bcc.n	801cd32 <quorem+0xfa>
 801ccd4:	613c      	str	r4, [r7, #16]
 801ccd6:	4638      	mov	r0, r7
 801ccd8:	f001 fadc 	bl	801e294 <__mcmp>
 801ccdc:	2800      	cmp	r0, #0
 801ccde:	db24      	blt.n	801cd2a <quorem+0xf2>
 801cce0:	3601      	adds	r6, #1
 801cce2:	4628      	mov	r0, r5
 801cce4:	f04f 0c00 	mov.w	ip, #0
 801cce8:	f858 2b04 	ldr.w	r2, [r8], #4
 801ccec:	f8d0 e000 	ldr.w	lr, [r0]
 801ccf0:	b293      	uxth	r3, r2
 801ccf2:	ebac 0303 	sub.w	r3, ip, r3
 801ccf6:	0c12      	lsrs	r2, r2, #16
 801ccf8:	fa13 f38e 	uxtah	r3, r3, lr
 801ccfc:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 801cd00:	eb02 4223 	add.w	r2, r2, r3, asr #16
 801cd04:	b29b      	uxth	r3, r3
 801cd06:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801cd0a:	45c1      	cmp	r9, r8
 801cd0c:	f840 3b04 	str.w	r3, [r0], #4
 801cd10:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801cd14:	d2e8      	bcs.n	801cce8 <quorem+0xb0>
 801cd16:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801cd1a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801cd1e:	b922      	cbnz	r2, 801cd2a <quorem+0xf2>
 801cd20:	3b04      	subs	r3, #4
 801cd22:	429d      	cmp	r5, r3
 801cd24:	461a      	mov	r2, r3
 801cd26:	d30a      	bcc.n	801cd3e <quorem+0x106>
 801cd28:	613c      	str	r4, [r7, #16]
 801cd2a:	4630      	mov	r0, r6
 801cd2c:	b003      	add	sp, #12
 801cd2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd32:	6812      	ldr	r2, [r2, #0]
 801cd34:	3b04      	subs	r3, #4
 801cd36:	2a00      	cmp	r2, #0
 801cd38:	d1cc      	bne.n	801ccd4 <quorem+0x9c>
 801cd3a:	3c01      	subs	r4, #1
 801cd3c:	e7c7      	b.n	801ccce <quorem+0x96>
 801cd3e:	6812      	ldr	r2, [r2, #0]
 801cd40:	3b04      	subs	r3, #4
 801cd42:	2a00      	cmp	r2, #0
 801cd44:	d1f0      	bne.n	801cd28 <quorem+0xf0>
 801cd46:	3c01      	subs	r4, #1
 801cd48:	e7eb      	b.n	801cd22 <quorem+0xea>
 801cd4a:	2000      	movs	r0, #0
 801cd4c:	e7ee      	b.n	801cd2c <quorem+0xf4>
	...

0801cd50 <_dtoa_r>:
 801cd50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd54:	ed2d 8b04 	vpush	{d8-d9}
 801cd58:	ec57 6b10 	vmov	r6, r7, d0
 801cd5c:	b093      	sub	sp, #76	; 0x4c
 801cd5e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 801cd60:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 801cd64:	9106      	str	r1, [sp, #24]
 801cd66:	ee10 aa10 	vmov	sl, s0
 801cd6a:	4604      	mov	r4, r0
 801cd6c:	9209      	str	r2, [sp, #36]	; 0x24
 801cd6e:	930c      	str	r3, [sp, #48]	; 0x30
 801cd70:	46bb      	mov	fp, r7
 801cd72:	b975      	cbnz	r5, 801cd92 <_dtoa_r+0x42>
 801cd74:	2010      	movs	r0, #16
 801cd76:	f7fe fe7b 	bl	801ba70 <malloc>
 801cd7a:	4602      	mov	r2, r0
 801cd7c:	6260      	str	r0, [r4, #36]	; 0x24
 801cd7e:	b920      	cbnz	r0, 801cd8a <_dtoa_r+0x3a>
 801cd80:	4ba7      	ldr	r3, [pc, #668]	; (801d020 <_dtoa_r+0x2d0>)
 801cd82:	21ea      	movs	r1, #234	; 0xea
 801cd84:	48a7      	ldr	r0, [pc, #668]	; (801d024 <_dtoa_r+0x2d4>)
 801cd86:	f7fe fe01 	bl	801b98c <__assert_func>
 801cd8a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 801cd8e:	6005      	str	r5, [r0, #0]
 801cd90:	60c5      	str	r5, [r0, #12]
 801cd92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801cd94:	6819      	ldr	r1, [r3, #0]
 801cd96:	b151      	cbz	r1, 801cdae <_dtoa_r+0x5e>
 801cd98:	685a      	ldr	r2, [r3, #4]
 801cd9a:	604a      	str	r2, [r1, #4]
 801cd9c:	2301      	movs	r3, #1
 801cd9e:	4093      	lsls	r3, r2
 801cda0:	608b      	str	r3, [r1, #8]
 801cda2:	4620      	mov	r0, r4
 801cda4:	f001 f834 	bl	801de10 <_Bfree>
 801cda8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801cdaa:	2200      	movs	r2, #0
 801cdac:	601a      	str	r2, [r3, #0]
 801cdae:	1e3b      	subs	r3, r7, #0
 801cdb0:	bfaa      	itet	ge
 801cdb2:	2300      	movge	r3, #0
 801cdb4:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 801cdb8:	f8c8 3000 	strge.w	r3, [r8]
 801cdbc:	4b9a      	ldr	r3, [pc, #616]	; (801d028 <_dtoa_r+0x2d8>)
 801cdbe:	bfbc      	itt	lt
 801cdc0:	2201      	movlt	r2, #1
 801cdc2:	f8c8 2000 	strlt.w	r2, [r8]
 801cdc6:	ea33 030b 	bics.w	r3, r3, fp
 801cdca:	d11b      	bne.n	801ce04 <_dtoa_r+0xb4>
 801cdcc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cdce:	f242 730f 	movw	r3, #9999	; 0x270f
 801cdd2:	6013      	str	r3, [r2, #0]
 801cdd4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 801cdd8:	4333      	orrs	r3, r6
 801cdda:	f000 8592 	beq.w	801d902 <_dtoa_r+0xbb2>
 801cdde:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cde0:	b963      	cbnz	r3, 801cdfc <_dtoa_r+0xac>
 801cde2:	4b92      	ldr	r3, [pc, #584]	; (801d02c <_dtoa_r+0x2dc>)
 801cde4:	e022      	b.n	801ce2c <_dtoa_r+0xdc>
 801cde6:	4b92      	ldr	r3, [pc, #584]	; (801d030 <_dtoa_r+0x2e0>)
 801cde8:	9301      	str	r3, [sp, #4]
 801cdea:	3308      	adds	r3, #8
 801cdec:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cdee:	6013      	str	r3, [r2, #0]
 801cdf0:	9801      	ldr	r0, [sp, #4]
 801cdf2:	b013      	add	sp, #76	; 0x4c
 801cdf4:	ecbd 8b04 	vpop	{d8-d9}
 801cdf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdfc:	4b8b      	ldr	r3, [pc, #556]	; (801d02c <_dtoa_r+0x2dc>)
 801cdfe:	9301      	str	r3, [sp, #4]
 801ce00:	3303      	adds	r3, #3
 801ce02:	e7f3      	b.n	801cdec <_dtoa_r+0x9c>
 801ce04:	2200      	movs	r2, #0
 801ce06:	2300      	movs	r3, #0
 801ce08:	4650      	mov	r0, sl
 801ce0a:	4659      	mov	r1, fp
 801ce0c:	f7e3 fe6c 	bl	8000ae8 <__aeabi_dcmpeq>
 801ce10:	ec4b ab19 	vmov	d9, sl, fp
 801ce14:	4680      	mov	r8, r0
 801ce16:	b158      	cbz	r0, 801ce30 <_dtoa_r+0xe0>
 801ce18:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ce1a:	2301      	movs	r3, #1
 801ce1c:	6013      	str	r3, [r2, #0]
 801ce1e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801ce20:	2b00      	cmp	r3, #0
 801ce22:	f000 856b 	beq.w	801d8fc <_dtoa_r+0xbac>
 801ce26:	4883      	ldr	r0, [pc, #524]	; (801d034 <_dtoa_r+0x2e4>)
 801ce28:	6018      	str	r0, [r3, #0]
 801ce2a:	1e43      	subs	r3, r0, #1
 801ce2c:	9301      	str	r3, [sp, #4]
 801ce2e:	e7df      	b.n	801cdf0 <_dtoa_r+0xa0>
 801ce30:	ec4b ab10 	vmov	d0, sl, fp
 801ce34:	aa10      	add	r2, sp, #64	; 0x40
 801ce36:	a911      	add	r1, sp, #68	; 0x44
 801ce38:	4620      	mov	r0, r4
 801ce3a:	f001 fad1 	bl	801e3e0 <__d2b>
 801ce3e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 801ce42:	ee08 0a10 	vmov	s16, r0
 801ce46:	2d00      	cmp	r5, #0
 801ce48:	f000 8084 	beq.w	801cf54 <_dtoa_r+0x204>
 801ce4c:	ee19 3a90 	vmov	r3, s19
 801ce50:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801ce54:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 801ce58:	4656      	mov	r6, sl
 801ce5a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 801ce5e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 801ce62:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801ce66:	4b74      	ldr	r3, [pc, #464]	; (801d038 <_dtoa_r+0x2e8>)
 801ce68:	2200      	movs	r2, #0
 801ce6a:	4630      	mov	r0, r6
 801ce6c:	4639      	mov	r1, r7
 801ce6e:	f7e3 fa1b 	bl	80002a8 <__aeabi_dsub>
 801ce72:	a365      	add	r3, pc, #404	; (adr r3, 801d008 <_dtoa_r+0x2b8>)
 801ce74:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ce78:	f7e3 fbce 	bl	8000618 <__aeabi_dmul>
 801ce7c:	a364      	add	r3, pc, #400	; (adr r3, 801d010 <_dtoa_r+0x2c0>)
 801ce7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ce82:	f7e3 fa13 	bl	80002ac <__adddf3>
 801ce86:	4606      	mov	r6, r0
 801ce88:	4628      	mov	r0, r5
 801ce8a:	460f      	mov	r7, r1
 801ce8c:	f7e3 fb5a 	bl	8000544 <__aeabi_i2d>
 801ce90:	a361      	add	r3, pc, #388	; (adr r3, 801d018 <_dtoa_r+0x2c8>)
 801ce92:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ce96:	f7e3 fbbf 	bl	8000618 <__aeabi_dmul>
 801ce9a:	4602      	mov	r2, r0
 801ce9c:	460b      	mov	r3, r1
 801ce9e:	4630      	mov	r0, r6
 801cea0:	4639      	mov	r1, r7
 801cea2:	f7e3 fa03 	bl	80002ac <__adddf3>
 801cea6:	4606      	mov	r6, r0
 801cea8:	460f      	mov	r7, r1
 801ceaa:	f7e3 fe65 	bl	8000b78 <__aeabi_d2iz>
 801ceae:	2200      	movs	r2, #0
 801ceb0:	9000      	str	r0, [sp, #0]
 801ceb2:	2300      	movs	r3, #0
 801ceb4:	4630      	mov	r0, r6
 801ceb6:	4639      	mov	r1, r7
 801ceb8:	f7e3 fe20 	bl	8000afc <__aeabi_dcmplt>
 801cebc:	b150      	cbz	r0, 801ced4 <_dtoa_r+0x184>
 801cebe:	9800      	ldr	r0, [sp, #0]
 801cec0:	f7e3 fb40 	bl	8000544 <__aeabi_i2d>
 801cec4:	4632      	mov	r2, r6
 801cec6:	463b      	mov	r3, r7
 801cec8:	f7e3 fe0e 	bl	8000ae8 <__aeabi_dcmpeq>
 801cecc:	b910      	cbnz	r0, 801ced4 <_dtoa_r+0x184>
 801cece:	9b00      	ldr	r3, [sp, #0]
 801ced0:	3b01      	subs	r3, #1
 801ced2:	9300      	str	r3, [sp, #0]
 801ced4:	9b00      	ldr	r3, [sp, #0]
 801ced6:	2b16      	cmp	r3, #22
 801ced8:	d85a      	bhi.n	801cf90 <_dtoa_r+0x240>
 801ceda:	9a00      	ldr	r2, [sp, #0]
 801cedc:	4b57      	ldr	r3, [pc, #348]	; (801d03c <_dtoa_r+0x2ec>)
 801cede:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801cee2:	e9d3 2300 	ldrd	r2, r3, [r3]
 801cee6:	ec51 0b19 	vmov	r0, r1, d9
 801ceea:	f7e3 fe07 	bl	8000afc <__aeabi_dcmplt>
 801ceee:	2800      	cmp	r0, #0
 801cef0:	d050      	beq.n	801cf94 <_dtoa_r+0x244>
 801cef2:	9b00      	ldr	r3, [sp, #0]
 801cef4:	3b01      	subs	r3, #1
 801cef6:	9300      	str	r3, [sp, #0]
 801cef8:	2300      	movs	r3, #0
 801cefa:	930b      	str	r3, [sp, #44]	; 0x2c
 801cefc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cefe:	1b5d      	subs	r5, r3, r5
 801cf00:	1e6b      	subs	r3, r5, #1
 801cf02:	9305      	str	r3, [sp, #20]
 801cf04:	bf45      	ittet	mi
 801cf06:	f1c5 0301 	rsbmi	r3, r5, #1
 801cf0a:	9304      	strmi	r3, [sp, #16]
 801cf0c:	2300      	movpl	r3, #0
 801cf0e:	2300      	movmi	r3, #0
 801cf10:	bf4c      	ite	mi
 801cf12:	9305      	strmi	r3, [sp, #20]
 801cf14:	9304      	strpl	r3, [sp, #16]
 801cf16:	9b00      	ldr	r3, [sp, #0]
 801cf18:	2b00      	cmp	r3, #0
 801cf1a:	db3d      	blt.n	801cf98 <_dtoa_r+0x248>
 801cf1c:	9b05      	ldr	r3, [sp, #20]
 801cf1e:	9a00      	ldr	r2, [sp, #0]
 801cf20:	920a      	str	r2, [sp, #40]	; 0x28
 801cf22:	4413      	add	r3, r2
 801cf24:	9305      	str	r3, [sp, #20]
 801cf26:	2300      	movs	r3, #0
 801cf28:	9307      	str	r3, [sp, #28]
 801cf2a:	9b06      	ldr	r3, [sp, #24]
 801cf2c:	2b09      	cmp	r3, #9
 801cf2e:	f200 8089 	bhi.w	801d044 <_dtoa_r+0x2f4>
 801cf32:	2b05      	cmp	r3, #5
 801cf34:	bfc4      	itt	gt
 801cf36:	3b04      	subgt	r3, #4
 801cf38:	9306      	strgt	r3, [sp, #24]
 801cf3a:	9b06      	ldr	r3, [sp, #24]
 801cf3c:	f1a3 0302 	sub.w	r3, r3, #2
 801cf40:	bfcc      	ite	gt
 801cf42:	2500      	movgt	r5, #0
 801cf44:	2501      	movle	r5, #1
 801cf46:	2b03      	cmp	r3, #3
 801cf48:	f200 8087 	bhi.w	801d05a <_dtoa_r+0x30a>
 801cf4c:	e8df f003 	tbb	[pc, r3]
 801cf50:	59383a2d 	.word	0x59383a2d
 801cf54:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 801cf58:	441d      	add	r5, r3
 801cf5a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 801cf5e:	2b20      	cmp	r3, #32
 801cf60:	bfc1      	itttt	gt
 801cf62:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 801cf66:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 801cf6a:	fa0b f303 	lslgt.w	r3, fp, r3
 801cf6e:	fa26 f000 	lsrgt.w	r0, r6, r0
 801cf72:	bfda      	itte	le
 801cf74:	f1c3 0320 	rsble	r3, r3, #32
 801cf78:	fa06 f003 	lslle.w	r0, r6, r3
 801cf7c:	4318      	orrgt	r0, r3
 801cf7e:	f7e3 fad1 	bl	8000524 <__aeabi_ui2d>
 801cf82:	2301      	movs	r3, #1
 801cf84:	4606      	mov	r6, r0
 801cf86:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 801cf8a:	3d01      	subs	r5, #1
 801cf8c:	930e      	str	r3, [sp, #56]	; 0x38
 801cf8e:	e76a      	b.n	801ce66 <_dtoa_r+0x116>
 801cf90:	2301      	movs	r3, #1
 801cf92:	e7b2      	b.n	801cefa <_dtoa_r+0x1aa>
 801cf94:	900b      	str	r0, [sp, #44]	; 0x2c
 801cf96:	e7b1      	b.n	801cefc <_dtoa_r+0x1ac>
 801cf98:	9b04      	ldr	r3, [sp, #16]
 801cf9a:	9a00      	ldr	r2, [sp, #0]
 801cf9c:	1a9b      	subs	r3, r3, r2
 801cf9e:	9304      	str	r3, [sp, #16]
 801cfa0:	4253      	negs	r3, r2
 801cfa2:	9307      	str	r3, [sp, #28]
 801cfa4:	2300      	movs	r3, #0
 801cfa6:	930a      	str	r3, [sp, #40]	; 0x28
 801cfa8:	e7bf      	b.n	801cf2a <_dtoa_r+0x1da>
 801cfaa:	2300      	movs	r3, #0
 801cfac:	9308      	str	r3, [sp, #32]
 801cfae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cfb0:	2b00      	cmp	r3, #0
 801cfb2:	dc55      	bgt.n	801d060 <_dtoa_r+0x310>
 801cfb4:	2301      	movs	r3, #1
 801cfb6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801cfba:	461a      	mov	r2, r3
 801cfbc:	9209      	str	r2, [sp, #36]	; 0x24
 801cfbe:	e00c      	b.n	801cfda <_dtoa_r+0x28a>
 801cfc0:	2301      	movs	r3, #1
 801cfc2:	e7f3      	b.n	801cfac <_dtoa_r+0x25c>
 801cfc4:	2300      	movs	r3, #0
 801cfc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cfc8:	9308      	str	r3, [sp, #32]
 801cfca:	9b00      	ldr	r3, [sp, #0]
 801cfcc:	4413      	add	r3, r2
 801cfce:	9302      	str	r3, [sp, #8]
 801cfd0:	3301      	adds	r3, #1
 801cfd2:	2b01      	cmp	r3, #1
 801cfd4:	9303      	str	r3, [sp, #12]
 801cfd6:	bfb8      	it	lt
 801cfd8:	2301      	movlt	r3, #1
 801cfda:	6a60      	ldr	r0, [r4, #36]	; 0x24
 801cfdc:	2200      	movs	r2, #0
 801cfde:	6042      	str	r2, [r0, #4]
 801cfe0:	2204      	movs	r2, #4
 801cfe2:	f102 0614 	add.w	r6, r2, #20
 801cfe6:	429e      	cmp	r6, r3
 801cfe8:	6841      	ldr	r1, [r0, #4]
 801cfea:	d93d      	bls.n	801d068 <_dtoa_r+0x318>
 801cfec:	4620      	mov	r0, r4
 801cfee:	f000 fecf 	bl	801dd90 <_Balloc>
 801cff2:	9001      	str	r0, [sp, #4]
 801cff4:	2800      	cmp	r0, #0
 801cff6:	d13b      	bne.n	801d070 <_dtoa_r+0x320>
 801cff8:	4b11      	ldr	r3, [pc, #68]	; (801d040 <_dtoa_r+0x2f0>)
 801cffa:	4602      	mov	r2, r0
 801cffc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 801d000:	e6c0      	b.n	801cd84 <_dtoa_r+0x34>
 801d002:	2301      	movs	r3, #1
 801d004:	e7df      	b.n	801cfc6 <_dtoa_r+0x276>
 801d006:	bf00      	nop
 801d008:	636f4361 	.word	0x636f4361
 801d00c:	3fd287a7 	.word	0x3fd287a7
 801d010:	8b60c8b3 	.word	0x8b60c8b3
 801d014:	3fc68a28 	.word	0x3fc68a28
 801d018:	509f79fb 	.word	0x509f79fb
 801d01c:	3fd34413 	.word	0x3fd34413
 801d020:	08021a5a 	.word	0x08021a5a
 801d024:	08021a71 	.word	0x08021a71
 801d028:	7ff00000 	.word	0x7ff00000
 801d02c:	08021a56 	.word	0x08021a56
 801d030:	08021a4d 	.word	0x08021a4d
 801d034:	080204c4 	.word	0x080204c4
 801d038:	3ff80000 	.word	0x3ff80000
 801d03c:	08021bc8 	.word	0x08021bc8
 801d040:	08021acc 	.word	0x08021acc
 801d044:	2501      	movs	r5, #1
 801d046:	2300      	movs	r3, #0
 801d048:	9306      	str	r3, [sp, #24]
 801d04a:	9508      	str	r5, [sp, #32]
 801d04c:	f04f 33ff 	mov.w	r3, #4294967295
 801d050:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801d054:	2200      	movs	r2, #0
 801d056:	2312      	movs	r3, #18
 801d058:	e7b0      	b.n	801cfbc <_dtoa_r+0x26c>
 801d05a:	2301      	movs	r3, #1
 801d05c:	9308      	str	r3, [sp, #32]
 801d05e:	e7f5      	b.n	801d04c <_dtoa_r+0x2fc>
 801d060:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d062:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801d066:	e7b8      	b.n	801cfda <_dtoa_r+0x28a>
 801d068:	3101      	adds	r1, #1
 801d06a:	6041      	str	r1, [r0, #4]
 801d06c:	0052      	lsls	r2, r2, #1
 801d06e:	e7b8      	b.n	801cfe2 <_dtoa_r+0x292>
 801d070:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801d072:	9a01      	ldr	r2, [sp, #4]
 801d074:	601a      	str	r2, [r3, #0]
 801d076:	9b03      	ldr	r3, [sp, #12]
 801d078:	2b0e      	cmp	r3, #14
 801d07a:	f200 809d 	bhi.w	801d1b8 <_dtoa_r+0x468>
 801d07e:	2d00      	cmp	r5, #0
 801d080:	f000 809a 	beq.w	801d1b8 <_dtoa_r+0x468>
 801d084:	9b00      	ldr	r3, [sp, #0]
 801d086:	2b00      	cmp	r3, #0
 801d088:	dd32      	ble.n	801d0f0 <_dtoa_r+0x3a0>
 801d08a:	4ab7      	ldr	r2, [pc, #732]	; (801d368 <_dtoa_r+0x618>)
 801d08c:	f003 030f 	and.w	r3, r3, #15
 801d090:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801d094:	e9d3 8900 	ldrd	r8, r9, [r3]
 801d098:	9b00      	ldr	r3, [sp, #0]
 801d09a:	05d8      	lsls	r0, r3, #23
 801d09c:	ea4f 1723 	mov.w	r7, r3, asr #4
 801d0a0:	d516      	bpl.n	801d0d0 <_dtoa_r+0x380>
 801d0a2:	4bb2      	ldr	r3, [pc, #712]	; (801d36c <_dtoa_r+0x61c>)
 801d0a4:	ec51 0b19 	vmov	r0, r1, d9
 801d0a8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801d0ac:	f7e3 fbde 	bl	800086c <__aeabi_ddiv>
 801d0b0:	f007 070f 	and.w	r7, r7, #15
 801d0b4:	4682      	mov	sl, r0
 801d0b6:	468b      	mov	fp, r1
 801d0b8:	2503      	movs	r5, #3
 801d0ba:	4eac      	ldr	r6, [pc, #688]	; (801d36c <_dtoa_r+0x61c>)
 801d0bc:	b957      	cbnz	r7, 801d0d4 <_dtoa_r+0x384>
 801d0be:	4642      	mov	r2, r8
 801d0c0:	464b      	mov	r3, r9
 801d0c2:	4650      	mov	r0, sl
 801d0c4:	4659      	mov	r1, fp
 801d0c6:	f7e3 fbd1 	bl	800086c <__aeabi_ddiv>
 801d0ca:	4682      	mov	sl, r0
 801d0cc:	468b      	mov	fp, r1
 801d0ce:	e028      	b.n	801d122 <_dtoa_r+0x3d2>
 801d0d0:	2502      	movs	r5, #2
 801d0d2:	e7f2      	b.n	801d0ba <_dtoa_r+0x36a>
 801d0d4:	07f9      	lsls	r1, r7, #31
 801d0d6:	d508      	bpl.n	801d0ea <_dtoa_r+0x39a>
 801d0d8:	4640      	mov	r0, r8
 801d0da:	4649      	mov	r1, r9
 801d0dc:	e9d6 2300 	ldrd	r2, r3, [r6]
 801d0e0:	f7e3 fa9a 	bl	8000618 <__aeabi_dmul>
 801d0e4:	3501      	adds	r5, #1
 801d0e6:	4680      	mov	r8, r0
 801d0e8:	4689      	mov	r9, r1
 801d0ea:	107f      	asrs	r7, r7, #1
 801d0ec:	3608      	adds	r6, #8
 801d0ee:	e7e5      	b.n	801d0bc <_dtoa_r+0x36c>
 801d0f0:	f000 809b 	beq.w	801d22a <_dtoa_r+0x4da>
 801d0f4:	9b00      	ldr	r3, [sp, #0]
 801d0f6:	4f9d      	ldr	r7, [pc, #628]	; (801d36c <_dtoa_r+0x61c>)
 801d0f8:	425e      	negs	r6, r3
 801d0fa:	4b9b      	ldr	r3, [pc, #620]	; (801d368 <_dtoa_r+0x618>)
 801d0fc:	f006 020f 	and.w	r2, r6, #15
 801d100:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d104:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d108:	ec51 0b19 	vmov	r0, r1, d9
 801d10c:	f7e3 fa84 	bl	8000618 <__aeabi_dmul>
 801d110:	1136      	asrs	r6, r6, #4
 801d112:	4682      	mov	sl, r0
 801d114:	468b      	mov	fp, r1
 801d116:	2300      	movs	r3, #0
 801d118:	2502      	movs	r5, #2
 801d11a:	2e00      	cmp	r6, #0
 801d11c:	d17a      	bne.n	801d214 <_dtoa_r+0x4c4>
 801d11e:	2b00      	cmp	r3, #0
 801d120:	d1d3      	bne.n	801d0ca <_dtoa_r+0x37a>
 801d122:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d124:	2b00      	cmp	r3, #0
 801d126:	f000 8082 	beq.w	801d22e <_dtoa_r+0x4de>
 801d12a:	4b91      	ldr	r3, [pc, #580]	; (801d370 <_dtoa_r+0x620>)
 801d12c:	2200      	movs	r2, #0
 801d12e:	4650      	mov	r0, sl
 801d130:	4659      	mov	r1, fp
 801d132:	f7e3 fce3 	bl	8000afc <__aeabi_dcmplt>
 801d136:	2800      	cmp	r0, #0
 801d138:	d079      	beq.n	801d22e <_dtoa_r+0x4de>
 801d13a:	9b03      	ldr	r3, [sp, #12]
 801d13c:	2b00      	cmp	r3, #0
 801d13e:	d076      	beq.n	801d22e <_dtoa_r+0x4de>
 801d140:	9b02      	ldr	r3, [sp, #8]
 801d142:	2b00      	cmp	r3, #0
 801d144:	dd36      	ble.n	801d1b4 <_dtoa_r+0x464>
 801d146:	9b00      	ldr	r3, [sp, #0]
 801d148:	4650      	mov	r0, sl
 801d14a:	4659      	mov	r1, fp
 801d14c:	1e5f      	subs	r7, r3, #1
 801d14e:	2200      	movs	r2, #0
 801d150:	4b88      	ldr	r3, [pc, #544]	; (801d374 <_dtoa_r+0x624>)
 801d152:	f7e3 fa61 	bl	8000618 <__aeabi_dmul>
 801d156:	9e02      	ldr	r6, [sp, #8]
 801d158:	4682      	mov	sl, r0
 801d15a:	468b      	mov	fp, r1
 801d15c:	3501      	adds	r5, #1
 801d15e:	4628      	mov	r0, r5
 801d160:	f7e3 f9f0 	bl	8000544 <__aeabi_i2d>
 801d164:	4652      	mov	r2, sl
 801d166:	465b      	mov	r3, fp
 801d168:	f7e3 fa56 	bl	8000618 <__aeabi_dmul>
 801d16c:	4b82      	ldr	r3, [pc, #520]	; (801d378 <_dtoa_r+0x628>)
 801d16e:	2200      	movs	r2, #0
 801d170:	f7e3 f89c 	bl	80002ac <__adddf3>
 801d174:	46d0      	mov	r8, sl
 801d176:	46d9      	mov	r9, fp
 801d178:	4682      	mov	sl, r0
 801d17a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 801d17e:	2e00      	cmp	r6, #0
 801d180:	d158      	bne.n	801d234 <_dtoa_r+0x4e4>
 801d182:	4b7e      	ldr	r3, [pc, #504]	; (801d37c <_dtoa_r+0x62c>)
 801d184:	2200      	movs	r2, #0
 801d186:	4640      	mov	r0, r8
 801d188:	4649      	mov	r1, r9
 801d18a:	f7e3 f88d 	bl	80002a8 <__aeabi_dsub>
 801d18e:	4652      	mov	r2, sl
 801d190:	465b      	mov	r3, fp
 801d192:	4680      	mov	r8, r0
 801d194:	4689      	mov	r9, r1
 801d196:	f7e3 fccf 	bl	8000b38 <__aeabi_dcmpgt>
 801d19a:	2800      	cmp	r0, #0
 801d19c:	f040 8295 	bne.w	801d6ca <_dtoa_r+0x97a>
 801d1a0:	4652      	mov	r2, sl
 801d1a2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 801d1a6:	4640      	mov	r0, r8
 801d1a8:	4649      	mov	r1, r9
 801d1aa:	f7e3 fca7 	bl	8000afc <__aeabi_dcmplt>
 801d1ae:	2800      	cmp	r0, #0
 801d1b0:	f040 8289 	bne.w	801d6c6 <_dtoa_r+0x976>
 801d1b4:	ec5b ab19 	vmov	sl, fp, d9
 801d1b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d1ba:	2b00      	cmp	r3, #0
 801d1bc:	f2c0 8148 	blt.w	801d450 <_dtoa_r+0x700>
 801d1c0:	9a00      	ldr	r2, [sp, #0]
 801d1c2:	2a0e      	cmp	r2, #14
 801d1c4:	f300 8144 	bgt.w	801d450 <_dtoa_r+0x700>
 801d1c8:	4b67      	ldr	r3, [pc, #412]	; (801d368 <_dtoa_r+0x618>)
 801d1ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d1ce:	e9d3 8900 	ldrd	r8, r9, [r3]
 801d1d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d1d4:	2b00      	cmp	r3, #0
 801d1d6:	f280 80d5 	bge.w	801d384 <_dtoa_r+0x634>
 801d1da:	9b03      	ldr	r3, [sp, #12]
 801d1dc:	2b00      	cmp	r3, #0
 801d1de:	f300 80d1 	bgt.w	801d384 <_dtoa_r+0x634>
 801d1e2:	f040 826f 	bne.w	801d6c4 <_dtoa_r+0x974>
 801d1e6:	4b65      	ldr	r3, [pc, #404]	; (801d37c <_dtoa_r+0x62c>)
 801d1e8:	2200      	movs	r2, #0
 801d1ea:	4640      	mov	r0, r8
 801d1ec:	4649      	mov	r1, r9
 801d1ee:	f7e3 fa13 	bl	8000618 <__aeabi_dmul>
 801d1f2:	4652      	mov	r2, sl
 801d1f4:	465b      	mov	r3, fp
 801d1f6:	f7e3 fc95 	bl	8000b24 <__aeabi_dcmpge>
 801d1fa:	9e03      	ldr	r6, [sp, #12]
 801d1fc:	4637      	mov	r7, r6
 801d1fe:	2800      	cmp	r0, #0
 801d200:	f040 8245 	bne.w	801d68e <_dtoa_r+0x93e>
 801d204:	9d01      	ldr	r5, [sp, #4]
 801d206:	2331      	movs	r3, #49	; 0x31
 801d208:	f805 3b01 	strb.w	r3, [r5], #1
 801d20c:	9b00      	ldr	r3, [sp, #0]
 801d20e:	3301      	adds	r3, #1
 801d210:	9300      	str	r3, [sp, #0]
 801d212:	e240      	b.n	801d696 <_dtoa_r+0x946>
 801d214:	07f2      	lsls	r2, r6, #31
 801d216:	d505      	bpl.n	801d224 <_dtoa_r+0x4d4>
 801d218:	e9d7 2300 	ldrd	r2, r3, [r7]
 801d21c:	f7e3 f9fc 	bl	8000618 <__aeabi_dmul>
 801d220:	3501      	adds	r5, #1
 801d222:	2301      	movs	r3, #1
 801d224:	1076      	asrs	r6, r6, #1
 801d226:	3708      	adds	r7, #8
 801d228:	e777      	b.n	801d11a <_dtoa_r+0x3ca>
 801d22a:	2502      	movs	r5, #2
 801d22c:	e779      	b.n	801d122 <_dtoa_r+0x3d2>
 801d22e:	9f00      	ldr	r7, [sp, #0]
 801d230:	9e03      	ldr	r6, [sp, #12]
 801d232:	e794      	b.n	801d15e <_dtoa_r+0x40e>
 801d234:	9901      	ldr	r1, [sp, #4]
 801d236:	4b4c      	ldr	r3, [pc, #304]	; (801d368 <_dtoa_r+0x618>)
 801d238:	4431      	add	r1, r6
 801d23a:	910d      	str	r1, [sp, #52]	; 0x34
 801d23c:	9908      	ldr	r1, [sp, #32]
 801d23e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 801d242:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801d246:	2900      	cmp	r1, #0
 801d248:	d043      	beq.n	801d2d2 <_dtoa_r+0x582>
 801d24a:	494d      	ldr	r1, [pc, #308]	; (801d380 <_dtoa_r+0x630>)
 801d24c:	2000      	movs	r0, #0
 801d24e:	f7e3 fb0d 	bl	800086c <__aeabi_ddiv>
 801d252:	4652      	mov	r2, sl
 801d254:	465b      	mov	r3, fp
 801d256:	f7e3 f827 	bl	80002a8 <__aeabi_dsub>
 801d25a:	9d01      	ldr	r5, [sp, #4]
 801d25c:	4682      	mov	sl, r0
 801d25e:	468b      	mov	fp, r1
 801d260:	4649      	mov	r1, r9
 801d262:	4640      	mov	r0, r8
 801d264:	f7e3 fc88 	bl	8000b78 <__aeabi_d2iz>
 801d268:	4606      	mov	r6, r0
 801d26a:	f7e3 f96b 	bl	8000544 <__aeabi_i2d>
 801d26e:	4602      	mov	r2, r0
 801d270:	460b      	mov	r3, r1
 801d272:	4640      	mov	r0, r8
 801d274:	4649      	mov	r1, r9
 801d276:	f7e3 f817 	bl	80002a8 <__aeabi_dsub>
 801d27a:	3630      	adds	r6, #48	; 0x30
 801d27c:	f805 6b01 	strb.w	r6, [r5], #1
 801d280:	4652      	mov	r2, sl
 801d282:	465b      	mov	r3, fp
 801d284:	4680      	mov	r8, r0
 801d286:	4689      	mov	r9, r1
 801d288:	f7e3 fc38 	bl	8000afc <__aeabi_dcmplt>
 801d28c:	2800      	cmp	r0, #0
 801d28e:	d163      	bne.n	801d358 <_dtoa_r+0x608>
 801d290:	4642      	mov	r2, r8
 801d292:	464b      	mov	r3, r9
 801d294:	4936      	ldr	r1, [pc, #216]	; (801d370 <_dtoa_r+0x620>)
 801d296:	2000      	movs	r0, #0
 801d298:	f7e3 f806 	bl	80002a8 <__aeabi_dsub>
 801d29c:	4652      	mov	r2, sl
 801d29e:	465b      	mov	r3, fp
 801d2a0:	f7e3 fc2c 	bl	8000afc <__aeabi_dcmplt>
 801d2a4:	2800      	cmp	r0, #0
 801d2a6:	f040 80b5 	bne.w	801d414 <_dtoa_r+0x6c4>
 801d2aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2ac:	429d      	cmp	r5, r3
 801d2ae:	d081      	beq.n	801d1b4 <_dtoa_r+0x464>
 801d2b0:	4b30      	ldr	r3, [pc, #192]	; (801d374 <_dtoa_r+0x624>)
 801d2b2:	2200      	movs	r2, #0
 801d2b4:	4650      	mov	r0, sl
 801d2b6:	4659      	mov	r1, fp
 801d2b8:	f7e3 f9ae 	bl	8000618 <__aeabi_dmul>
 801d2bc:	4b2d      	ldr	r3, [pc, #180]	; (801d374 <_dtoa_r+0x624>)
 801d2be:	4682      	mov	sl, r0
 801d2c0:	468b      	mov	fp, r1
 801d2c2:	4640      	mov	r0, r8
 801d2c4:	4649      	mov	r1, r9
 801d2c6:	2200      	movs	r2, #0
 801d2c8:	f7e3 f9a6 	bl	8000618 <__aeabi_dmul>
 801d2cc:	4680      	mov	r8, r0
 801d2ce:	4689      	mov	r9, r1
 801d2d0:	e7c6      	b.n	801d260 <_dtoa_r+0x510>
 801d2d2:	4650      	mov	r0, sl
 801d2d4:	4659      	mov	r1, fp
 801d2d6:	f7e3 f99f 	bl	8000618 <__aeabi_dmul>
 801d2da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d2dc:	9d01      	ldr	r5, [sp, #4]
 801d2de:	930f      	str	r3, [sp, #60]	; 0x3c
 801d2e0:	4682      	mov	sl, r0
 801d2e2:	468b      	mov	fp, r1
 801d2e4:	4649      	mov	r1, r9
 801d2e6:	4640      	mov	r0, r8
 801d2e8:	f7e3 fc46 	bl	8000b78 <__aeabi_d2iz>
 801d2ec:	4606      	mov	r6, r0
 801d2ee:	f7e3 f929 	bl	8000544 <__aeabi_i2d>
 801d2f2:	3630      	adds	r6, #48	; 0x30
 801d2f4:	4602      	mov	r2, r0
 801d2f6:	460b      	mov	r3, r1
 801d2f8:	4640      	mov	r0, r8
 801d2fa:	4649      	mov	r1, r9
 801d2fc:	f7e2 ffd4 	bl	80002a8 <__aeabi_dsub>
 801d300:	f805 6b01 	strb.w	r6, [r5], #1
 801d304:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d306:	429d      	cmp	r5, r3
 801d308:	4680      	mov	r8, r0
 801d30a:	4689      	mov	r9, r1
 801d30c:	f04f 0200 	mov.w	r2, #0
 801d310:	d124      	bne.n	801d35c <_dtoa_r+0x60c>
 801d312:	4b1b      	ldr	r3, [pc, #108]	; (801d380 <_dtoa_r+0x630>)
 801d314:	4650      	mov	r0, sl
 801d316:	4659      	mov	r1, fp
 801d318:	f7e2 ffc8 	bl	80002ac <__adddf3>
 801d31c:	4602      	mov	r2, r0
 801d31e:	460b      	mov	r3, r1
 801d320:	4640      	mov	r0, r8
 801d322:	4649      	mov	r1, r9
 801d324:	f7e3 fc08 	bl	8000b38 <__aeabi_dcmpgt>
 801d328:	2800      	cmp	r0, #0
 801d32a:	d173      	bne.n	801d414 <_dtoa_r+0x6c4>
 801d32c:	4652      	mov	r2, sl
 801d32e:	465b      	mov	r3, fp
 801d330:	4913      	ldr	r1, [pc, #76]	; (801d380 <_dtoa_r+0x630>)
 801d332:	2000      	movs	r0, #0
 801d334:	f7e2 ffb8 	bl	80002a8 <__aeabi_dsub>
 801d338:	4602      	mov	r2, r0
 801d33a:	460b      	mov	r3, r1
 801d33c:	4640      	mov	r0, r8
 801d33e:	4649      	mov	r1, r9
 801d340:	f7e3 fbdc 	bl	8000afc <__aeabi_dcmplt>
 801d344:	2800      	cmp	r0, #0
 801d346:	f43f af35 	beq.w	801d1b4 <_dtoa_r+0x464>
 801d34a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d34c:	1e6b      	subs	r3, r5, #1
 801d34e:	930f      	str	r3, [sp, #60]	; 0x3c
 801d350:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 801d354:	2b30      	cmp	r3, #48	; 0x30
 801d356:	d0f8      	beq.n	801d34a <_dtoa_r+0x5fa>
 801d358:	9700      	str	r7, [sp, #0]
 801d35a:	e049      	b.n	801d3f0 <_dtoa_r+0x6a0>
 801d35c:	4b05      	ldr	r3, [pc, #20]	; (801d374 <_dtoa_r+0x624>)
 801d35e:	f7e3 f95b 	bl	8000618 <__aeabi_dmul>
 801d362:	4680      	mov	r8, r0
 801d364:	4689      	mov	r9, r1
 801d366:	e7bd      	b.n	801d2e4 <_dtoa_r+0x594>
 801d368:	08021bc8 	.word	0x08021bc8
 801d36c:	08021ba0 	.word	0x08021ba0
 801d370:	3ff00000 	.word	0x3ff00000
 801d374:	40240000 	.word	0x40240000
 801d378:	401c0000 	.word	0x401c0000
 801d37c:	40140000 	.word	0x40140000
 801d380:	3fe00000 	.word	0x3fe00000
 801d384:	9d01      	ldr	r5, [sp, #4]
 801d386:	4656      	mov	r6, sl
 801d388:	465f      	mov	r7, fp
 801d38a:	4642      	mov	r2, r8
 801d38c:	464b      	mov	r3, r9
 801d38e:	4630      	mov	r0, r6
 801d390:	4639      	mov	r1, r7
 801d392:	f7e3 fa6b 	bl	800086c <__aeabi_ddiv>
 801d396:	f7e3 fbef 	bl	8000b78 <__aeabi_d2iz>
 801d39a:	4682      	mov	sl, r0
 801d39c:	f7e3 f8d2 	bl	8000544 <__aeabi_i2d>
 801d3a0:	4642      	mov	r2, r8
 801d3a2:	464b      	mov	r3, r9
 801d3a4:	f7e3 f938 	bl	8000618 <__aeabi_dmul>
 801d3a8:	4602      	mov	r2, r0
 801d3aa:	460b      	mov	r3, r1
 801d3ac:	4630      	mov	r0, r6
 801d3ae:	4639      	mov	r1, r7
 801d3b0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 801d3b4:	f7e2 ff78 	bl	80002a8 <__aeabi_dsub>
 801d3b8:	f805 6b01 	strb.w	r6, [r5], #1
 801d3bc:	9e01      	ldr	r6, [sp, #4]
 801d3be:	9f03      	ldr	r7, [sp, #12]
 801d3c0:	1bae      	subs	r6, r5, r6
 801d3c2:	42b7      	cmp	r7, r6
 801d3c4:	4602      	mov	r2, r0
 801d3c6:	460b      	mov	r3, r1
 801d3c8:	d135      	bne.n	801d436 <_dtoa_r+0x6e6>
 801d3ca:	f7e2 ff6f 	bl	80002ac <__adddf3>
 801d3ce:	4642      	mov	r2, r8
 801d3d0:	464b      	mov	r3, r9
 801d3d2:	4606      	mov	r6, r0
 801d3d4:	460f      	mov	r7, r1
 801d3d6:	f7e3 fbaf 	bl	8000b38 <__aeabi_dcmpgt>
 801d3da:	b9d0      	cbnz	r0, 801d412 <_dtoa_r+0x6c2>
 801d3dc:	4642      	mov	r2, r8
 801d3de:	464b      	mov	r3, r9
 801d3e0:	4630      	mov	r0, r6
 801d3e2:	4639      	mov	r1, r7
 801d3e4:	f7e3 fb80 	bl	8000ae8 <__aeabi_dcmpeq>
 801d3e8:	b110      	cbz	r0, 801d3f0 <_dtoa_r+0x6a0>
 801d3ea:	f01a 0f01 	tst.w	sl, #1
 801d3ee:	d110      	bne.n	801d412 <_dtoa_r+0x6c2>
 801d3f0:	4620      	mov	r0, r4
 801d3f2:	ee18 1a10 	vmov	r1, s16
 801d3f6:	f000 fd0b 	bl	801de10 <_Bfree>
 801d3fa:	2300      	movs	r3, #0
 801d3fc:	9800      	ldr	r0, [sp, #0]
 801d3fe:	702b      	strb	r3, [r5, #0]
 801d400:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d402:	3001      	adds	r0, #1
 801d404:	6018      	str	r0, [r3, #0]
 801d406:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d408:	2b00      	cmp	r3, #0
 801d40a:	f43f acf1 	beq.w	801cdf0 <_dtoa_r+0xa0>
 801d40e:	601d      	str	r5, [r3, #0]
 801d410:	e4ee      	b.n	801cdf0 <_dtoa_r+0xa0>
 801d412:	9f00      	ldr	r7, [sp, #0]
 801d414:	462b      	mov	r3, r5
 801d416:	461d      	mov	r5, r3
 801d418:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801d41c:	2a39      	cmp	r2, #57	; 0x39
 801d41e:	d106      	bne.n	801d42e <_dtoa_r+0x6de>
 801d420:	9a01      	ldr	r2, [sp, #4]
 801d422:	429a      	cmp	r2, r3
 801d424:	d1f7      	bne.n	801d416 <_dtoa_r+0x6c6>
 801d426:	9901      	ldr	r1, [sp, #4]
 801d428:	2230      	movs	r2, #48	; 0x30
 801d42a:	3701      	adds	r7, #1
 801d42c:	700a      	strb	r2, [r1, #0]
 801d42e:	781a      	ldrb	r2, [r3, #0]
 801d430:	3201      	adds	r2, #1
 801d432:	701a      	strb	r2, [r3, #0]
 801d434:	e790      	b.n	801d358 <_dtoa_r+0x608>
 801d436:	4ba6      	ldr	r3, [pc, #664]	; (801d6d0 <_dtoa_r+0x980>)
 801d438:	2200      	movs	r2, #0
 801d43a:	f7e3 f8ed 	bl	8000618 <__aeabi_dmul>
 801d43e:	2200      	movs	r2, #0
 801d440:	2300      	movs	r3, #0
 801d442:	4606      	mov	r6, r0
 801d444:	460f      	mov	r7, r1
 801d446:	f7e3 fb4f 	bl	8000ae8 <__aeabi_dcmpeq>
 801d44a:	2800      	cmp	r0, #0
 801d44c:	d09d      	beq.n	801d38a <_dtoa_r+0x63a>
 801d44e:	e7cf      	b.n	801d3f0 <_dtoa_r+0x6a0>
 801d450:	9a08      	ldr	r2, [sp, #32]
 801d452:	2a00      	cmp	r2, #0
 801d454:	f000 80d7 	beq.w	801d606 <_dtoa_r+0x8b6>
 801d458:	9a06      	ldr	r2, [sp, #24]
 801d45a:	2a01      	cmp	r2, #1
 801d45c:	f300 80ba 	bgt.w	801d5d4 <_dtoa_r+0x884>
 801d460:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d462:	2a00      	cmp	r2, #0
 801d464:	f000 80b2 	beq.w	801d5cc <_dtoa_r+0x87c>
 801d468:	f203 4333 	addw	r3, r3, #1075	; 0x433
 801d46c:	9e07      	ldr	r6, [sp, #28]
 801d46e:	9d04      	ldr	r5, [sp, #16]
 801d470:	9a04      	ldr	r2, [sp, #16]
 801d472:	441a      	add	r2, r3
 801d474:	9204      	str	r2, [sp, #16]
 801d476:	9a05      	ldr	r2, [sp, #20]
 801d478:	2101      	movs	r1, #1
 801d47a:	441a      	add	r2, r3
 801d47c:	4620      	mov	r0, r4
 801d47e:	9205      	str	r2, [sp, #20]
 801d480:	f000 fd7e 	bl	801df80 <__i2b>
 801d484:	4607      	mov	r7, r0
 801d486:	2d00      	cmp	r5, #0
 801d488:	dd0c      	ble.n	801d4a4 <_dtoa_r+0x754>
 801d48a:	9b05      	ldr	r3, [sp, #20]
 801d48c:	2b00      	cmp	r3, #0
 801d48e:	dd09      	ble.n	801d4a4 <_dtoa_r+0x754>
 801d490:	42ab      	cmp	r3, r5
 801d492:	9a04      	ldr	r2, [sp, #16]
 801d494:	bfa8      	it	ge
 801d496:	462b      	movge	r3, r5
 801d498:	1ad2      	subs	r2, r2, r3
 801d49a:	9204      	str	r2, [sp, #16]
 801d49c:	9a05      	ldr	r2, [sp, #20]
 801d49e:	1aed      	subs	r5, r5, r3
 801d4a0:	1ad3      	subs	r3, r2, r3
 801d4a2:	9305      	str	r3, [sp, #20]
 801d4a4:	9b07      	ldr	r3, [sp, #28]
 801d4a6:	b31b      	cbz	r3, 801d4f0 <_dtoa_r+0x7a0>
 801d4a8:	9b08      	ldr	r3, [sp, #32]
 801d4aa:	2b00      	cmp	r3, #0
 801d4ac:	f000 80af 	beq.w	801d60e <_dtoa_r+0x8be>
 801d4b0:	2e00      	cmp	r6, #0
 801d4b2:	dd13      	ble.n	801d4dc <_dtoa_r+0x78c>
 801d4b4:	4639      	mov	r1, r7
 801d4b6:	4632      	mov	r2, r6
 801d4b8:	4620      	mov	r0, r4
 801d4ba:	f000 fe21 	bl	801e100 <__pow5mult>
 801d4be:	ee18 2a10 	vmov	r2, s16
 801d4c2:	4601      	mov	r1, r0
 801d4c4:	4607      	mov	r7, r0
 801d4c6:	4620      	mov	r0, r4
 801d4c8:	f000 fd70 	bl	801dfac <__multiply>
 801d4cc:	ee18 1a10 	vmov	r1, s16
 801d4d0:	4680      	mov	r8, r0
 801d4d2:	4620      	mov	r0, r4
 801d4d4:	f000 fc9c 	bl	801de10 <_Bfree>
 801d4d8:	ee08 8a10 	vmov	s16, r8
 801d4dc:	9b07      	ldr	r3, [sp, #28]
 801d4de:	1b9a      	subs	r2, r3, r6
 801d4e0:	d006      	beq.n	801d4f0 <_dtoa_r+0x7a0>
 801d4e2:	ee18 1a10 	vmov	r1, s16
 801d4e6:	4620      	mov	r0, r4
 801d4e8:	f000 fe0a 	bl	801e100 <__pow5mult>
 801d4ec:	ee08 0a10 	vmov	s16, r0
 801d4f0:	2101      	movs	r1, #1
 801d4f2:	4620      	mov	r0, r4
 801d4f4:	f000 fd44 	bl	801df80 <__i2b>
 801d4f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d4fa:	2b00      	cmp	r3, #0
 801d4fc:	4606      	mov	r6, r0
 801d4fe:	f340 8088 	ble.w	801d612 <_dtoa_r+0x8c2>
 801d502:	461a      	mov	r2, r3
 801d504:	4601      	mov	r1, r0
 801d506:	4620      	mov	r0, r4
 801d508:	f000 fdfa 	bl	801e100 <__pow5mult>
 801d50c:	9b06      	ldr	r3, [sp, #24]
 801d50e:	2b01      	cmp	r3, #1
 801d510:	4606      	mov	r6, r0
 801d512:	f340 8081 	ble.w	801d618 <_dtoa_r+0x8c8>
 801d516:	f04f 0800 	mov.w	r8, #0
 801d51a:	6933      	ldr	r3, [r6, #16]
 801d51c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 801d520:	6918      	ldr	r0, [r3, #16]
 801d522:	f000 fcdd 	bl	801dee0 <__hi0bits>
 801d526:	f1c0 0020 	rsb	r0, r0, #32
 801d52a:	9b05      	ldr	r3, [sp, #20]
 801d52c:	4418      	add	r0, r3
 801d52e:	f010 001f 	ands.w	r0, r0, #31
 801d532:	f000 8092 	beq.w	801d65a <_dtoa_r+0x90a>
 801d536:	f1c0 0320 	rsb	r3, r0, #32
 801d53a:	2b04      	cmp	r3, #4
 801d53c:	f340 808a 	ble.w	801d654 <_dtoa_r+0x904>
 801d540:	f1c0 001c 	rsb	r0, r0, #28
 801d544:	9b04      	ldr	r3, [sp, #16]
 801d546:	4403      	add	r3, r0
 801d548:	9304      	str	r3, [sp, #16]
 801d54a:	9b05      	ldr	r3, [sp, #20]
 801d54c:	4403      	add	r3, r0
 801d54e:	4405      	add	r5, r0
 801d550:	9305      	str	r3, [sp, #20]
 801d552:	9b04      	ldr	r3, [sp, #16]
 801d554:	2b00      	cmp	r3, #0
 801d556:	dd07      	ble.n	801d568 <_dtoa_r+0x818>
 801d558:	ee18 1a10 	vmov	r1, s16
 801d55c:	461a      	mov	r2, r3
 801d55e:	4620      	mov	r0, r4
 801d560:	f000 fe28 	bl	801e1b4 <__lshift>
 801d564:	ee08 0a10 	vmov	s16, r0
 801d568:	9b05      	ldr	r3, [sp, #20]
 801d56a:	2b00      	cmp	r3, #0
 801d56c:	dd05      	ble.n	801d57a <_dtoa_r+0x82a>
 801d56e:	4631      	mov	r1, r6
 801d570:	461a      	mov	r2, r3
 801d572:	4620      	mov	r0, r4
 801d574:	f000 fe1e 	bl	801e1b4 <__lshift>
 801d578:	4606      	mov	r6, r0
 801d57a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d57c:	2b00      	cmp	r3, #0
 801d57e:	d06e      	beq.n	801d65e <_dtoa_r+0x90e>
 801d580:	ee18 0a10 	vmov	r0, s16
 801d584:	4631      	mov	r1, r6
 801d586:	f000 fe85 	bl	801e294 <__mcmp>
 801d58a:	2800      	cmp	r0, #0
 801d58c:	da67      	bge.n	801d65e <_dtoa_r+0x90e>
 801d58e:	9b00      	ldr	r3, [sp, #0]
 801d590:	3b01      	subs	r3, #1
 801d592:	ee18 1a10 	vmov	r1, s16
 801d596:	9300      	str	r3, [sp, #0]
 801d598:	220a      	movs	r2, #10
 801d59a:	2300      	movs	r3, #0
 801d59c:	4620      	mov	r0, r4
 801d59e:	f000 fc59 	bl	801de54 <__multadd>
 801d5a2:	9b08      	ldr	r3, [sp, #32]
 801d5a4:	ee08 0a10 	vmov	s16, r0
 801d5a8:	2b00      	cmp	r3, #0
 801d5aa:	f000 81b1 	beq.w	801d910 <_dtoa_r+0xbc0>
 801d5ae:	2300      	movs	r3, #0
 801d5b0:	4639      	mov	r1, r7
 801d5b2:	220a      	movs	r2, #10
 801d5b4:	4620      	mov	r0, r4
 801d5b6:	f000 fc4d 	bl	801de54 <__multadd>
 801d5ba:	9b02      	ldr	r3, [sp, #8]
 801d5bc:	2b00      	cmp	r3, #0
 801d5be:	4607      	mov	r7, r0
 801d5c0:	f300 808e 	bgt.w	801d6e0 <_dtoa_r+0x990>
 801d5c4:	9b06      	ldr	r3, [sp, #24]
 801d5c6:	2b02      	cmp	r3, #2
 801d5c8:	dc51      	bgt.n	801d66e <_dtoa_r+0x91e>
 801d5ca:	e089      	b.n	801d6e0 <_dtoa_r+0x990>
 801d5cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d5ce:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 801d5d2:	e74b      	b.n	801d46c <_dtoa_r+0x71c>
 801d5d4:	9b03      	ldr	r3, [sp, #12]
 801d5d6:	1e5e      	subs	r6, r3, #1
 801d5d8:	9b07      	ldr	r3, [sp, #28]
 801d5da:	42b3      	cmp	r3, r6
 801d5dc:	bfbf      	itttt	lt
 801d5de:	9b07      	ldrlt	r3, [sp, #28]
 801d5e0:	9607      	strlt	r6, [sp, #28]
 801d5e2:	1af2      	sublt	r2, r6, r3
 801d5e4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 801d5e6:	bfb6      	itet	lt
 801d5e8:	189b      	addlt	r3, r3, r2
 801d5ea:	1b9e      	subge	r6, r3, r6
 801d5ec:	930a      	strlt	r3, [sp, #40]	; 0x28
 801d5ee:	9b03      	ldr	r3, [sp, #12]
 801d5f0:	bfb8      	it	lt
 801d5f2:	2600      	movlt	r6, #0
 801d5f4:	2b00      	cmp	r3, #0
 801d5f6:	bfb7      	itett	lt
 801d5f8:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 801d5fc:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 801d600:	1a9d      	sublt	r5, r3, r2
 801d602:	2300      	movlt	r3, #0
 801d604:	e734      	b.n	801d470 <_dtoa_r+0x720>
 801d606:	9e07      	ldr	r6, [sp, #28]
 801d608:	9d04      	ldr	r5, [sp, #16]
 801d60a:	9f08      	ldr	r7, [sp, #32]
 801d60c:	e73b      	b.n	801d486 <_dtoa_r+0x736>
 801d60e:	9a07      	ldr	r2, [sp, #28]
 801d610:	e767      	b.n	801d4e2 <_dtoa_r+0x792>
 801d612:	9b06      	ldr	r3, [sp, #24]
 801d614:	2b01      	cmp	r3, #1
 801d616:	dc18      	bgt.n	801d64a <_dtoa_r+0x8fa>
 801d618:	f1ba 0f00 	cmp.w	sl, #0
 801d61c:	d115      	bne.n	801d64a <_dtoa_r+0x8fa>
 801d61e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 801d622:	b993      	cbnz	r3, 801d64a <_dtoa_r+0x8fa>
 801d624:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 801d628:	0d1b      	lsrs	r3, r3, #20
 801d62a:	051b      	lsls	r3, r3, #20
 801d62c:	b183      	cbz	r3, 801d650 <_dtoa_r+0x900>
 801d62e:	9b04      	ldr	r3, [sp, #16]
 801d630:	3301      	adds	r3, #1
 801d632:	9304      	str	r3, [sp, #16]
 801d634:	9b05      	ldr	r3, [sp, #20]
 801d636:	3301      	adds	r3, #1
 801d638:	9305      	str	r3, [sp, #20]
 801d63a:	f04f 0801 	mov.w	r8, #1
 801d63e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d640:	2b00      	cmp	r3, #0
 801d642:	f47f af6a 	bne.w	801d51a <_dtoa_r+0x7ca>
 801d646:	2001      	movs	r0, #1
 801d648:	e76f      	b.n	801d52a <_dtoa_r+0x7da>
 801d64a:	f04f 0800 	mov.w	r8, #0
 801d64e:	e7f6      	b.n	801d63e <_dtoa_r+0x8ee>
 801d650:	4698      	mov	r8, r3
 801d652:	e7f4      	b.n	801d63e <_dtoa_r+0x8ee>
 801d654:	f43f af7d 	beq.w	801d552 <_dtoa_r+0x802>
 801d658:	4618      	mov	r0, r3
 801d65a:	301c      	adds	r0, #28
 801d65c:	e772      	b.n	801d544 <_dtoa_r+0x7f4>
 801d65e:	9b03      	ldr	r3, [sp, #12]
 801d660:	2b00      	cmp	r3, #0
 801d662:	dc37      	bgt.n	801d6d4 <_dtoa_r+0x984>
 801d664:	9b06      	ldr	r3, [sp, #24]
 801d666:	2b02      	cmp	r3, #2
 801d668:	dd34      	ble.n	801d6d4 <_dtoa_r+0x984>
 801d66a:	9b03      	ldr	r3, [sp, #12]
 801d66c:	9302      	str	r3, [sp, #8]
 801d66e:	9b02      	ldr	r3, [sp, #8]
 801d670:	b96b      	cbnz	r3, 801d68e <_dtoa_r+0x93e>
 801d672:	4631      	mov	r1, r6
 801d674:	2205      	movs	r2, #5
 801d676:	4620      	mov	r0, r4
 801d678:	f000 fbec 	bl	801de54 <__multadd>
 801d67c:	4601      	mov	r1, r0
 801d67e:	4606      	mov	r6, r0
 801d680:	ee18 0a10 	vmov	r0, s16
 801d684:	f000 fe06 	bl	801e294 <__mcmp>
 801d688:	2800      	cmp	r0, #0
 801d68a:	f73f adbb 	bgt.w	801d204 <_dtoa_r+0x4b4>
 801d68e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d690:	9d01      	ldr	r5, [sp, #4]
 801d692:	43db      	mvns	r3, r3
 801d694:	9300      	str	r3, [sp, #0]
 801d696:	f04f 0800 	mov.w	r8, #0
 801d69a:	4631      	mov	r1, r6
 801d69c:	4620      	mov	r0, r4
 801d69e:	f000 fbb7 	bl	801de10 <_Bfree>
 801d6a2:	2f00      	cmp	r7, #0
 801d6a4:	f43f aea4 	beq.w	801d3f0 <_dtoa_r+0x6a0>
 801d6a8:	f1b8 0f00 	cmp.w	r8, #0
 801d6ac:	d005      	beq.n	801d6ba <_dtoa_r+0x96a>
 801d6ae:	45b8      	cmp	r8, r7
 801d6b0:	d003      	beq.n	801d6ba <_dtoa_r+0x96a>
 801d6b2:	4641      	mov	r1, r8
 801d6b4:	4620      	mov	r0, r4
 801d6b6:	f000 fbab 	bl	801de10 <_Bfree>
 801d6ba:	4639      	mov	r1, r7
 801d6bc:	4620      	mov	r0, r4
 801d6be:	f000 fba7 	bl	801de10 <_Bfree>
 801d6c2:	e695      	b.n	801d3f0 <_dtoa_r+0x6a0>
 801d6c4:	2600      	movs	r6, #0
 801d6c6:	4637      	mov	r7, r6
 801d6c8:	e7e1      	b.n	801d68e <_dtoa_r+0x93e>
 801d6ca:	9700      	str	r7, [sp, #0]
 801d6cc:	4637      	mov	r7, r6
 801d6ce:	e599      	b.n	801d204 <_dtoa_r+0x4b4>
 801d6d0:	40240000 	.word	0x40240000
 801d6d4:	9b08      	ldr	r3, [sp, #32]
 801d6d6:	2b00      	cmp	r3, #0
 801d6d8:	f000 80ca 	beq.w	801d870 <_dtoa_r+0xb20>
 801d6dc:	9b03      	ldr	r3, [sp, #12]
 801d6de:	9302      	str	r3, [sp, #8]
 801d6e0:	2d00      	cmp	r5, #0
 801d6e2:	dd05      	ble.n	801d6f0 <_dtoa_r+0x9a0>
 801d6e4:	4639      	mov	r1, r7
 801d6e6:	462a      	mov	r2, r5
 801d6e8:	4620      	mov	r0, r4
 801d6ea:	f000 fd63 	bl	801e1b4 <__lshift>
 801d6ee:	4607      	mov	r7, r0
 801d6f0:	f1b8 0f00 	cmp.w	r8, #0
 801d6f4:	d05b      	beq.n	801d7ae <_dtoa_r+0xa5e>
 801d6f6:	6879      	ldr	r1, [r7, #4]
 801d6f8:	4620      	mov	r0, r4
 801d6fa:	f000 fb49 	bl	801dd90 <_Balloc>
 801d6fe:	4605      	mov	r5, r0
 801d700:	b928      	cbnz	r0, 801d70e <_dtoa_r+0x9be>
 801d702:	4b87      	ldr	r3, [pc, #540]	; (801d920 <_dtoa_r+0xbd0>)
 801d704:	4602      	mov	r2, r0
 801d706:	f240 21ea 	movw	r1, #746	; 0x2ea
 801d70a:	f7ff bb3b 	b.w	801cd84 <_dtoa_r+0x34>
 801d70e:	693a      	ldr	r2, [r7, #16]
 801d710:	3202      	adds	r2, #2
 801d712:	0092      	lsls	r2, r2, #2
 801d714:	f107 010c 	add.w	r1, r7, #12
 801d718:	300c      	adds	r0, #12
 801d71a:	f7fe f9b9 	bl	801ba90 <memcpy>
 801d71e:	2201      	movs	r2, #1
 801d720:	4629      	mov	r1, r5
 801d722:	4620      	mov	r0, r4
 801d724:	f000 fd46 	bl	801e1b4 <__lshift>
 801d728:	9b01      	ldr	r3, [sp, #4]
 801d72a:	f103 0901 	add.w	r9, r3, #1
 801d72e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801d732:	4413      	add	r3, r2
 801d734:	9305      	str	r3, [sp, #20]
 801d736:	f00a 0301 	and.w	r3, sl, #1
 801d73a:	46b8      	mov	r8, r7
 801d73c:	9304      	str	r3, [sp, #16]
 801d73e:	4607      	mov	r7, r0
 801d740:	4631      	mov	r1, r6
 801d742:	ee18 0a10 	vmov	r0, s16
 801d746:	f7ff fa77 	bl	801cc38 <quorem>
 801d74a:	4641      	mov	r1, r8
 801d74c:	9002      	str	r0, [sp, #8]
 801d74e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 801d752:	ee18 0a10 	vmov	r0, s16
 801d756:	f000 fd9d 	bl	801e294 <__mcmp>
 801d75a:	463a      	mov	r2, r7
 801d75c:	9003      	str	r0, [sp, #12]
 801d75e:	4631      	mov	r1, r6
 801d760:	4620      	mov	r0, r4
 801d762:	f000 fdb3 	bl	801e2cc <__mdiff>
 801d766:	68c2      	ldr	r2, [r0, #12]
 801d768:	f109 3bff 	add.w	fp, r9, #4294967295
 801d76c:	4605      	mov	r5, r0
 801d76e:	bb02      	cbnz	r2, 801d7b2 <_dtoa_r+0xa62>
 801d770:	4601      	mov	r1, r0
 801d772:	ee18 0a10 	vmov	r0, s16
 801d776:	f000 fd8d 	bl	801e294 <__mcmp>
 801d77a:	4602      	mov	r2, r0
 801d77c:	4629      	mov	r1, r5
 801d77e:	4620      	mov	r0, r4
 801d780:	9207      	str	r2, [sp, #28]
 801d782:	f000 fb45 	bl	801de10 <_Bfree>
 801d786:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801d78a:	ea43 0102 	orr.w	r1, r3, r2
 801d78e:	9b04      	ldr	r3, [sp, #16]
 801d790:	430b      	orrs	r3, r1
 801d792:	464d      	mov	r5, r9
 801d794:	d10f      	bne.n	801d7b6 <_dtoa_r+0xa66>
 801d796:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801d79a:	d02a      	beq.n	801d7f2 <_dtoa_r+0xaa2>
 801d79c:	9b03      	ldr	r3, [sp, #12]
 801d79e:	2b00      	cmp	r3, #0
 801d7a0:	dd02      	ble.n	801d7a8 <_dtoa_r+0xa58>
 801d7a2:	9b02      	ldr	r3, [sp, #8]
 801d7a4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 801d7a8:	f88b a000 	strb.w	sl, [fp]
 801d7ac:	e775      	b.n	801d69a <_dtoa_r+0x94a>
 801d7ae:	4638      	mov	r0, r7
 801d7b0:	e7ba      	b.n	801d728 <_dtoa_r+0x9d8>
 801d7b2:	2201      	movs	r2, #1
 801d7b4:	e7e2      	b.n	801d77c <_dtoa_r+0xa2c>
 801d7b6:	9b03      	ldr	r3, [sp, #12]
 801d7b8:	2b00      	cmp	r3, #0
 801d7ba:	db04      	blt.n	801d7c6 <_dtoa_r+0xa76>
 801d7bc:	9906      	ldr	r1, [sp, #24]
 801d7be:	430b      	orrs	r3, r1
 801d7c0:	9904      	ldr	r1, [sp, #16]
 801d7c2:	430b      	orrs	r3, r1
 801d7c4:	d122      	bne.n	801d80c <_dtoa_r+0xabc>
 801d7c6:	2a00      	cmp	r2, #0
 801d7c8:	ddee      	ble.n	801d7a8 <_dtoa_r+0xa58>
 801d7ca:	ee18 1a10 	vmov	r1, s16
 801d7ce:	2201      	movs	r2, #1
 801d7d0:	4620      	mov	r0, r4
 801d7d2:	f000 fcef 	bl	801e1b4 <__lshift>
 801d7d6:	4631      	mov	r1, r6
 801d7d8:	ee08 0a10 	vmov	s16, r0
 801d7dc:	f000 fd5a 	bl	801e294 <__mcmp>
 801d7e0:	2800      	cmp	r0, #0
 801d7e2:	dc03      	bgt.n	801d7ec <_dtoa_r+0xa9c>
 801d7e4:	d1e0      	bne.n	801d7a8 <_dtoa_r+0xa58>
 801d7e6:	f01a 0f01 	tst.w	sl, #1
 801d7ea:	d0dd      	beq.n	801d7a8 <_dtoa_r+0xa58>
 801d7ec:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801d7f0:	d1d7      	bne.n	801d7a2 <_dtoa_r+0xa52>
 801d7f2:	2339      	movs	r3, #57	; 0x39
 801d7f4:	f88b 3000 	strb.w	r3, [fp]
 801d7f8:	462b      	mov	r3, r5
 801d7fa:	461d      	mov	r5, r3
 801d7fc:	3b01      	subs	r3, #1
 801d7fe:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 801d802:	2a39      	cmp	r2, #57	; 0x39
 801d804:	d071      	beq.n	801d8ea <_dtoa_r+0xb9a>
 801d806:	3201      	adds	r2, #1
 801d808:	701a      	strb	r2, [r3, #0]
 801d80a:	e746      	b.n	801d69a <_dtoa_r+0x94a>
 801d80c:	2a00      	cmp	r2, #0
 801d80e:	dd07      	ble.n	801d820 <_dtoa_r+0xad0>
 801d810:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801d814:	d0ed      	beq.n	801d7f2 <_dtoa_r+0xaa2>
 801d816:	f10a 0301 	add.w	r3, sl, #1
 801d81a:	f88b 3000 	strb.w	r3, [fp]
 801d81e:	e73c      	b.n	801d69a <_dtoa_r+0x94a>
 801d820:	9b05      	ldr	r3, [sp, #20]
 801d822:	f809 ac01 	strb.w	sl, [r9, #-1]
 801d826:	4599      	cmp	r9, r3
 801d828:	d047      	beq.n	801d8ba <_dtoa_r+0xb6a>
 801d82a:	ee18 1a10 	vmov	r1, s16
 801d82e:	2300      	movs	r3, #0
 801d830:	220a      	movs	r2, #10
 801d832:	4620      	mov	r0, r4
 801d834:	f000 fb0e 	bl	801de54 <__multadd>
 801d838:	45b8      	cmp	r8, r7
 801d83a:	ee08 0a10 	vmov	s16, r0
 801d83e:	f04f 0300 	mov.w	r3, #0
 801d842:	f04f 020a 	mov.w	r2, #10
 801d846:	4641      	mov	r1, r8
 801d848:	4620      	mov	r0, r4
 801d84a:	d106      	bne.n	801d85a <_dtoa_r+0xb0a>
 801d84c:	f000 fb02 	bl	801de54 <__multadd>
 801d850:	4680      	mov	r8, r0
 801d852:	4607      	mov	r7, r0
 801d854:	f109 0901 	add.w	r9, r9, #1
 801d858:	e772      	b.n	801d740 <_dtoa_r+0x9f0>
 801d85a:	f000 fafb 	bl	801de54 <__multadd>
 801d85e:	4639      	mov	r1, r7
 801d860:	4680      	mov	r8, r0
 801d862:	2300      	movs	r3, #0
 801d864:	220a      	movs	r2, #10
 801d866:	4620      	mov	r0, r4
 801d868:	f000 faf4 	bl	801de54 <__multadd>
 801d86c:	4607      	mov	r7, r0
 801d86e:	e7f1      	b.n	801d854 <_dtoa_r+0xb04>
 801d870:	9b03      	ldr	r3, [sp, #12]
 801d872:	9302      	str	r3, [sp, #8]
 801d874:	9d01      	ldr	r5, [sp, #4]
 801d876:	ee18 0a10 	vmov	r0, s16
 801d87a:	4631      	mov	r1, r6
 801d87c:	f7ff f9dc 	bl	801cc38 <quorem>
 801d880:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 801d884:	9b01      	ldr	r3, [sp, #4]
 801d886:	f805 ab01 	strb.w	sl, [r5], #1
 801d88a:	1aea      	subs	r2, r5, r3
 801d88c:	9b02      	ldr	r3, [sp, #8]
 801d88e:	4293      	cmp	r3, r2
 801d890:	dd09      	ble.n	801d8a6 <_dtoa_r+0xb56>
 801d892:	ee18 1a10 	vmov	r1, s16
 801d896:	2300      	movs	r3, #0
 801d898:	220a      	movs	r2, #10
 801d89a:	4620      	mov	r0, r4
 801d89c:	f000 fada 	bl	801de54 <__multadd>
 801d8a0:	ee08 0a10 	vmov	s16, r0
 801d8a4:	e7e7      	b.n	801d876 <_dtoa_r+0xb26>
 801d8a6:	9b02      	ldr	r3, [sp, #8]
 801d8a8:	2b00      	cmp	r3, #0
 801d8aa:	bfc8      	it	gt
 801d8ac:	461d      	movgt	r5, r3
 801d8ae:	9b01      	ldr	r3, [sp, #4]
 801d8b0:	bfd8      	it	le
 801d8b2:	2501      	movle	r5, #1
 801d8b4:	441d      	add	r5, r3
 801d8b6:	f04f 0800 	mov.w	r8, #0
 801d8ba:	ee18 1a10 	vmov	r1, s16
 801d8be:	2201      	movs	r2, #1
 801d8c0:	4620      	mov	r0, r4
 801d8c2:	f000 fc77 	bl	801e1b4 <__lshift>
 801d8c6:	4631      	mov	r1, r6
 801d8c8:	ee08 0a10 	vmov	s16, r0
 801d8cc:	f000 fce2 	bl	801e294 <__mcmp>
 801d8d0:	2800      	cmp	r0, #0
 801d8d2:	dc91      	bgt.n	801d7f8 <_dtoa_r+0xaa8>
 801d8d4:	d102      	bne.n	801d8dc <_dtoa_r+0xb8c>
 801d8d6:	f01a 0f01 	tst.w	sl, #1
 801d8da:	d18d      	bne.n	801d7f8 <_dtoa_r+0xaa8>
 801d8dc:	462b      	mov	r3, r5
 801d8de:	461d      	mov	r5, r3
 801d8e0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801d8e4:	2a30      	cmp	r2, #48	; 0x30
 801d8e6:	d0fa      	beq.n	801d8de <_dtoa_r+0xb8e>
 801d8e8:	e6d7      	b.n	801d69a <_dtoa_r+0x94a>
 801d8ea:	9a01      	ldr	r2, [sp, #4]
 801d8ec:	429a      	cmp	r2, r3
 801d8ee:	d184      	bne.n	801d7fa <_dtoa_r+0xaaa>
 801d8f0:	9b00      	ldr	r3, [sp, #0]
 801d8f2:	3301      	adds	r3, #1
 801d8f4:	9300      	str	r3, [sp, #0]
 801d8f6:	2331      	movs	r3, #49	; 0x31
 801d8f8:	7013      	strb	r3, [r2, #0]
 801d8fa:	e6ce      	b.n	801d69a <_dtoa_r+0x94a>
 801d8fc:	4b09      	ldr	r3, [pc, #36]	; (801d924 <_dtoa_r+0xbd4>)
 801d8fe:	f7ff ba95 	b.w	801ce2c <_dtoa_r+0xdc>
 801d902:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d904:	2b00      	cmp	r3, #0
 801d906:	f47f aa6e 	bne.w	801cde6 <_dtoa_r+0x96>
 801d90a:	4b07      	ldr	r3, [pc, #28]	; (801d928 <_dtoa_r+0xbd8>)
 801d90c:	f7ff ba8e 	b.w	801ce2c <_dtoa_r+0xdc>
 801d910:	9b02      	ldr	r3, [sp, #8]
 801d912:	2b00      	cmp	r3, #0
 801d914:	dcae      	bgt.n	801d874 <_dtoa_r+0xb24>
 801d916:	9b06      	ldr	r3, [sp, #24]
 801d918:	2b02      	cmp	r3, #2
 801d91a:	f73f aea8 	bgt.w	801d66e <_dtoa_r+0x91e>
 801d91e:	e7a9      	b.n	801d874 <_dtoa_r+0xb24>
 801d920:	08021acc 	.word	0x08021acc
 801d924:	080204c3 	.word	0x080204c3
 801d928:	08021a4d 	.word	0x08021a4d

0801d92c <__sflush_r>:
 801d92c:	898a      	ldrh	r2, [r1, #12]
 801d92e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d932:	4605      	mov	r5, r0
 801d934:	0710      	lsls	r0, r2, #28
 801d936:	460c      	mov	r4, r1
 801d938:	d458      	bmi.n	801d9ec <__sflush_r+0xc0>
 801d93a:	684b      	ldr	r3, [r1, #4]
 801d93c:	2b00      	cmp	r3, #0
 801d93e:	dc05      	bgt.n	801d94c <__sflush_r+0x20>
 801d940:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801d942:	2b00      	cmp	r3, #0
 801d944:	dc02      	bgt.n	801d94c <__sflush_r+0x20>
 801d946:	2000      	movs	r0, #0
 801d948:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d94c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d94e:	2e00      	cmp	r6, #0
 801d950:	d0f9      	beq.n	801d946 <__sflush_r+0x1a>
 801d952:	2300      	movs	r3, #0
 801d954:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801d958:	682f      	ldr	r7, [r5, #0]
 801d95a:	602b      	str	r3, [r5, #0]
 801d95c:	d032      	beq.n	801d9c4 <__sflush_r+0x98>
 801d95e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801d960:	89a3      	ldrh	r3, [r4, #12]
 801d962:	075a      	lsls	r2, r3, #29
 801d964:	d505      	bpl.n	801d972 <__sflush_r+0x46>
 801d966:	6863      	ldr	r3, [r4, #4]
 801d968:	1ac0      	subs	r0, r0, r3
 801d96a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801d96c:	b10b      	cbz	r3, 801d972 <__sflush_r+0x46>
 801d96e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d970:	1ac0      	subs	r0, r0, r3
 801d972:	2300      	movs	r3, #0
 801d974:	4602      	mov	r2, r0
 801d976:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d978:	6a21      	ldr	r1, [r4, #32]
 801d97a:	4628      	mov	r0, r5
 801d97c:	47b0      	blx	r6
 801d97e:	1c43      	adds	r3, r0, #1
 801d980:	89a3      	ldrh	r3, [r4, #12]
 801d982:	d106      	bne.n	801d992 <__sflush_r+0x66>
 801d984:	6829      	ldr	r1, [r5, #0]
 801d986:	291d      	cmp	r1, #29
 801d988:	d82c      	bhi.n	801d9e4 <__sflush_r+0xb8>
 801d98a:	4a2a      	ldr	r2, [pc, #168]	; (801da34 <__sflush_r+0x108>)
 801d98c:	40ca      	lsrs	r2, r1
 801d98e:	07d6      	lsls	r6, r2, #31
 801d990:	d528      	bpl.n	801d9e4 <__sflush_r+0xb8>
 801d992:	2200      	movs	r2, #0
 801d994:	6062      	str	r2, [r4, #4]
 801d996:	04d9      	lsls	r1, r3, #19
 801d998:	6922      	ldr	r2, [r4, #16]
 801d99a:	6022      	str	r2, [r4, #0]
 801d99c:	d504      	bpl.n	801d9a8 <__sflush_r+0x7c>
 801d99e:	1c42      	adds	r2, r0, #1
 801d9a0:	d101      	bne.n	801d9a6 <__sflush_r+0x7a>
 801d9a2:	682b      	ldr	r3, [r5, #0]
 801d9a4:	b903      	cbnz	r3, 801d9a8 <__sflush_r+0x7c>
 801d9a6:	6560      	str	r0, [r4, #84]	; 0x54
 801d9a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d9aa:	602f      	str	r7, [r5, #0]
 801d9ac:	2900      	cmp	r1, #0
 801d9ae:	d0ca      	beq.n	801d946 <__sflush_r+0x1a>
 801d9b0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801d9b4:	4299      	cmp	r1, r3
 801d9b6:	d002      	beq.n	801d9be <__sflush_r+0x92>
 801d9b8:	4628      	mov	r0, r5
 801d9ba:	f7fe f87f 	bl	801babc <_free_r>
 801d9be:	2000      	movs	r0, #0
 801d9c0:	6360      	str	r0, [r4, #52]	; 0x34
 801d9c2:	e7c1      	b.n	801d948 <__sflush_r+0x1c>
 801d9c4:	6a21      	ldr	r1, [r4, #32]
 801d9c6:	2301      	movs	r3, #1
 801d9c8:	4628      	mov	r0, r5
 801d9ca:	47b0      	blx	r6
 801d9cc:	1c41      	adds	r1, r0, #1
 801d9ce:	d1c7      	bne.n	801d960 <__sflush_r+0x34>
 801d9d0:	682b      	ldr	r3, [r5, #0]
 801d9d2:	2b00      	cmp	r3, #0
 801d9d4:	d0c4      	beq.n	801d960 <__sflush_r+0x34>
 801d9d6:	2b1d      	cmp	r3, #29
 801d9d8:	d001      	beq.n	801d9de <__sflush_r+0xb2>
 801d9da:	2b16      	cmp	r3, #22
 801d9dc:	d101      	bne.n	801d9e2 <__sflush_r+0xb6>
 801d9de:	602f      	str	r7, [r5, #0]
 801d9e0:	e7b1      	b.n	801d946 <__sflush_r+0x1a>
 801d9e2:	89a3      	ldrh	r3, [r4, #12]
 801d9e4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d9e8:	81a3      	strh	r3, [r4, #12]
 801d9ea:	e7ad      	b.n	801d948 <__sflush_r+0x1c>
 801d9ec:	690f      	ldr	r7, [r1, #16]
 801d9ee:	2f00      	cmp	r7, #0
 801d9f0:	d0a9      	beq.n	801d946 <__sflush_r+0x1a>
 801d9f2:	0793      	lsls	r3, r2, #30
 801d9f4:	680e      	ldr	r6, [r1, #0]
 801d9f6:	bf08      	it	eq
 801d9f8:	694b      	ldreq	r3, [r1, #20]
 801d9fa:	600f      	str	r7, [r1, #0]
 801d9fc:	bf18      	it	ne
 801d9fe:	2300      	movne	r3, #0
 801da00:	eba6 0807 	sub.w	r8, r6, r7
 801da04:	608b      	str	r3, [r1, #8]
 801da06:	f1b8 0f00 	cmp.w	r8, #0
 801da0a:	dd9c      	ble.n	801d946 <__sflush_r+0x1a>
 801da0c:	6a21      	ldr	r1, [r4, #32]
 801da0e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801da10:	4643      	mov	r3, r8
 801da12:	463a      	mov	r2, r7
 801da14:	4628      	mov	r0, r5
 801da16:	47b0      	blx	r6
 801da18:	2800      	cmp	r0, #0
 801da1a:	dc06      	bgt.n	801da2a <__sflush_r+0xfe>
 801da1c:	89a3      	ldrh	r3, [r4, #12]
 801da1e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801da22:	81a3      	strh	r3, [r4, #12]
 801da24:	f04f 30ff 	mov.w	r0, #4294967295
 801da28:	e78e      	b.n	801d948 <__sflush_r+0x1c>
 801da2a:	4407      	add	r7, r0
 801da2c:	eba8 0800 	sub.w	r8, r8, r0
 801da30:	e7e9      	b.n	801da06 <__sflush_r+0xda>
 801da32:	bf00      	nop
 801da34:	20400001 	.word	0x20400001

0801da38 <_fflush_r>:
 801da38:	b538      	push	{r3, r4, r5, lr}
 801da3a:	690b      	ldr	r3, [r1, #16]
 801da3c:	4605      	mov	r5, r0
 801da3e:	460c      	mov	r4, r1
 801da40:	b913      	cbnz	r3, 801da48 <_fflush_r+0x10>
 801da42:	2500      	movs	r5, #0
 801da44:	4628      	mov	r0, r5
 801da46:	bd38      	pop	{r3, r4, r5, pc}
 801da48:	b118      	cbz	r0, 801da52 <_fflush_r+0x1a>
 801da4a:	6983      	ldr	r3, [r0, #24]
 801da4c:	b90b      	cbnz	r3, 801da52 <_fflush_r+0x1a>
 801da4e:	f000 f887 	bl	801db60 <__sinit>
 801da52:	4b14      	ldr	r3, [pc, #80]	; (801daa4 <_fflush_r+0x6c>)
 801da54:	429c      	cmp	r4, r3
 801da56:	d11b      	bne.n	801da90 <_fflush_r+0x58>
 801da58:	686c      	ldr	r4, [r5, #4]
 801da5a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801da5e:	2b00      	cmp	r3, #0
 801da60:	d0ef      	beq.n	801da42 <_fflush_r+0xa>
 801da62:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801da64:	07d0      	lsls	r0, r2, #31
 801da66:	d404      	bmi.n	801da72 <_fflush_r+0x3a>
 801da68:	0599      	lsls	r1, r3, #22
 801da6a:	d402      	bmi.n	801da72 <_fflush_r+0x3a>
 801da6c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801da6e:	f000 f91a 	bl	801dca6 <__retarget_lock_acquire_recursive>
 801da72:	4628      	mov	r0, r5
 801da74:	4621      	mov	r1, r4
 801da76:	f7ff ff59 	bl	801d92c <__sflush_r>
 801da7a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801da7c:	07da      	lsls	r2, r3, #31
 801da7e:	4605      	mov	r5, r0
 801da80:	d4e0      	bmi.n	801da44 <_fflush_r+0xc>
 801da82:	89a3      	ldrh	r3, [r4, #12]
 801da84:	059b      	lsls	r3, r3, #22
 801da86:	d4dd      	bmi.n	801da44 <_fflush_r+0xc>
 801da88:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801da8a:	f000 f90e 	bl	801dcaa <__retarget_lock_release_recursive>
 801da8e:	e7d9      	b.n	801da44 <_fflush_r+0xc>
 801da90:	4b05      	ldr	r3, [pc, #20]	; (801daa8 <_fflush_r+0x70>)
 801da92:	429c      	cmp	r4, r3
 801da94:	d101      	bne.n	801da9a <_fflush_r+0x62>
 801da96:	68ac      	ldr	r4, [r5, #8]
 801da98:	e7df      	b.n	801da5a <_fflush_r+0x22>
 801da9a:	4b04      	ldr	r3, [pc, #16]	; (801daac <_fflush_r+0x74>)
 801da9c:	429c      	cmp	r4, r3
 801da9e:	bf08      	it	eq
 801daa0:	68ec      	ldreq	r4, [r5, #12]
 801daa2:	e7da      	b.n	801da5a <_fflush_r+0x22>
 801daa4:	08021b00 	.word	0x08021b00
 801daa8:	08021b20 	.word	0x08021b20
 801daac:	08021ae0 	.word	0x08021ae0

0801dab0 <std>:
 801dab0:	2300      	movs	r3, #0
 801dab2:	b510      	push	{r4, lr}
 801dab4:	4604      	mov	r4, r0
 801dab6:	e9c0 3300 	strd	r3, r3, [r0]
 801daba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801dabe:	6083      	str	r3, [r0, #8]
 801dac0:	8181      	strh	r1, [r0, #12]
 801dac2:	6643      	str	r3, [r0, #100]	; 0x64
 801dac4:	81c2      	strh	r2, [r0, #14]
 801dac6:	6183      	str	r3, [r0, #24]
 801dac8:	4619      	mov	r1, r3
 801daca:	2208      	movs	r2, #8
 801dacc:	305c      	adds	r0, #92	; 0x5c
 801dace:	f7fd ffed 	bl	801baac <memset>
 801dad2:	4b05      	ldr	r3, [pc, #20]	; (801dae8 <std+0x38>)
 801dad4:	6263      	str	r3, [r4, #36]	; 0x24
 801dad6:	4b05      	ldr	r3, [pc, #20]	; (801daec <std+0x3c>)
 801dad8:	62a3      	str	r3, [r4, #40]	; 0x28
 801dada:	4b05      	ldr	r3, [pc, #20]	; (801daf0 <std+0x40>)
 801dadc:	62e3      	str	r3, [r4, #44]	; 0x2c
 801dade:	4b05      	ldr	r3, [pc, #20]	; (801daf4 <std+0x44>)
 801dae0:	6224      	str	r4, [r4, #32]
 801dae2:	6323      	str	r3, [r4, #48]	; 0x30
 801dae4:	bd10      	pop	{r4, pc}
 801dae6:	bf00      	nop
 801dae8:	0801e4c5 	.word	0x0801e4c5
 801daec:	0801e4e7 	.word	0x0801e4e7
 801daf0:	0801e51f 	.word	0x0801e51f
 801daf4:	0801e543 	.word	0x0801e543

0801daf8 <_cleanup_r>:
 801daf8:	4901      	ldr	r1, [pc, #4]	; (801db00 <_cleanup_r+0x8>)
 801dafa:	f000 b8af 	b.w	801dc5c <_fwalk_reent>
 801dafe:	bf00      	nop
 801db00:	0801da39 	.word	0x0801da39

0801db04 <__sfmoreglue>:
 801db04:	b570      	push	{r4, r5, r6, lr}
 801db06:	2268      	movs	r2, #104	; 0x68
 801db08:	1e4d      	subs	r5, r1, #1
 801db0a:	4355      	muls	r5, r2
 801db0c:	460e      	mov	r6, r1
 801db0e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801db12:	f7fe f83f 	bl	801bb94 <_malloc_r>
 801db16:	4604      	mov	r4, r0
 801db18:	b140      	cbz	r0, 801db2c <__sfmoreglue+0x28>
 801db1a:	2100      	movs	r1, #0
 801db1c:	e9c0 1600 	strd	r1, r6, [r0]
 801db20:	300c      	adds	r0, #12
 801db22:	60a0      	str	r0, [r4, #8]
 801db24:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801db28:	f7fd ffc0 	bl	801baac <memset>
 801db2c:	4620      	mov	r0, r4
 801db2e:	bd70      	pop	{r4, r5, r6, pc}

0801db30 <__sfp_lock_acquire>:
 801db30:	4801      	ldr	r0, [pc, #4]	; (801db38 <__sfp_lock_acquire+0x8>)
 801db32:	f000 b8b8 	b.w	801dca6 <__retarget_lock_acquire_recursive>
 801db36:	bf00      	nop
 801db38:	20001a5e 	.word	0x20001a5e

0801db3c <__sfp_lock_release>:
 801db3c:	4801      	ldr	r0, [pc, #4]	; (801db44 <__sfp_lock_release+0x8>)
 801db3e:	f000 b8b4 	b.w	801dcaa <__retarget_lock_release_recursive>
 801db42:	bf00      	nop
 801db44:	20001a5e 	.word	0x20001a5e

0801db48 <__sinit_lock_acquire>:
 801db48:	4801      	ldr	r0, [pc, #4]	; (801db50 <__sinit_lock_acquire+0x8>)
 801db4a:	f000 b8ac 	b.w	801dca6 <__retarget_lock_acquire_recursive>
 801db4e:	bf00      	nop
 801db50:	20001a5f 	.word	0x20001a5f

0801db54 <__sinit_lock_release>:
 801db54:	4801      	ldr	r0, [pc, #4]	; (801db5c <__sinit_lock_release+0x8>)
 801db56:	f000 b8a8 	b.w	801dcaa <__retarget_lock_release_recursive>
 801db5a:	bf00      	nop
 801db5c:	20001a5f 	.word	0x20001a5f

0801db60 <__sinit>:
 801db60:	b510      	push	{r4, lr}
 801db62:	4604      	mov	r4, r0
 801db64:	f7ff fff0 	bl	801db48 <__sinit_lock_acquire>
 801db68:	69a3      	ldr	r3, [r4, #24]
 801db6a:	b11b      	cbz	r3, 801db74 <__sinit+0x14>
 801db6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801db70:	f7ff bff0 	b.w	801db54 <__sinit_lock_release>
 801db74:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801db78:	6523      	str	r3, [r4, #80]	; 0x50
 801db7a:	4b13      	ldr	r3, [pc, #76]	; (801dbc8 <__sinit+0x68>)
 801db7c:	4a13      	ldr	r2, [pc, #76]	; (801dbcc <__sinit+0x6c>)
 801db7e:	681b      	ldr	r3, [r3, #0]
 801db80:	62a2      	str	r2, [r4, #40]	; 0x28
 801db82:	42a3      	cmp	r3, r4
 801db84:	bf04      	itt	eq
 801db86:	2301      	moveq	r3, #1
 801db88:	61a3      	streq	r3, [r4, #24]
 801db8a:	4620      	mov	r0, r4
 801db8c:	f000 f820 	bl	801dbd0 <__sfp>
 801db90:	6060      	str	r0, [r4, #4]
 801db92:	4620      	mov	r0, r4
 801db94:	f000 f81c 	bl	801dbd0 <__sfp>
 801db98:	60a0      	str	r0, [r4, #8]
 801db9a:	4620      	mov	r0, r4
 801db9c:	f000 f818 	bl	801dbd0 <__sfp>
 801dba0:	2200      	movs	r2, #0
 801dba2:	60e0      	str	r0, [r4, #12]
 801dba4:	2104      	movs	r1, #4
 801dba6:	6860      	ldr	r0, [r4, #4]
 801dba8:	f7ff ff82 	bl	801dab0 <std>
 801dbac:	68a0      	ldr	r0, [r4, #8]
 801dbae:	2201      	movs	r2, #1
 801dbb0:	2109      	movs	r1, #9
 801dbb2:	f7ff ff7d 	bl	801dab0 <std>
 801dbb6:	68e0      	ldr	r0, [r4, #12]
 801dbb8:	2202      	movs	r2, #2
 801dbba:	2112      	movs	r1, #18
 801dbbc:	f7ff ff78 	bl	801dab0 <std>
 801dbc0:	2301      	movs	r3, #1
 801dbc2:	61a3      	str	r3, [r4, #24]
 801dbc4:	e7d2      	b.n	801db6c <__sinit+0xc>
 801dbc6:	bf00      	nop
 801dbc8:	08021900 	.word	0x08021900
 801dbcc:	0801daf9 	.word	0x0801daf9

0801dbd0 <__sfp>:
 801dbd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dbd2:	4607      	mov	r7, r0
 801dbd4:	f7ff ffac 	bl	801db30 <__sfp_lock_acquire>
 801dbd8:	4b1e      	ldr	r3, [pc, #120]	; (801dc54 <__sfp+0x84>)
 801dbda:	681e      	ldr	r6, [r3, #0]
 801dbdc:	69b3      	ldr	r3, [r6, #24]
 801dbde:	b913      	cbnz	r3, 801dbe6 <__sfp+0x16>
 801dbe0:	4630      	mov	r0, r6
 801dbe2:	f7ff ffbd 	bl	801db60 <__sinit>
 801dbe6:	3648      	adds	r6, #72	; 0x48
 801dbe8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801dbec:	3b01      	subs	r3, #1
 801dbee:	d503      	bpl.n	801dbf8 <__sfp+0x28>
 801dbf0:	6833      	ldr	r3, [r6, #0]
 801dbf2:	b30b      	cbz	r3, 801dc38 <__sfp+0x68>
 801dbf4:	6836      	ldr	r6, [r6, #0]
 801dbf6:	e7f7      	b.n	801dbe8 <__sfp+0x18>
 801dbf8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801dbfc:	b9d5      	cbnz	r5, 801dc34 <__sfp+0x64>
 801dbfe:	4b16      	ldr	r3, [pc, #88]	; (801dc58 <__sfp+0x88>)
 801dc00:	60e3      	str	r3, [r4, #12]
 801dc02:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801dc06:	6665      	str	r5, [r4, #100]	; 0x64
 801dc08:	f000 f84c 	bl	801dca4 <__retarget_lock_init_recursive>
 801dc0c:	f7ff ff96 	bl	801db3c <__sfp_lock_release>
 801dc10:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801dc14:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801dc18:	6025      	str	r5, [r4, #0]
 801dc1a:	61a5      	str	r5, [r4, #24]
 801dc1c:	2208      	movs	r2, #8
 801dc1e:	4629      	mov	r1, r5
 801dc20:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801dc24:	f7fd ff42 	bl	801baac <memset>
 801dc28:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801dc2c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801dc30:	4620      	mov	r0, r4
 801dc32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dc34:	3468      	adds	r4, #104	; 0x68
 801dc36:	e7d9      	b.n	801dbec <__sfp+0x1c>
 801dc38:	2104      	movs	r1, #4
 801dc3a:	4638      	mov	r0, r7
 801dc3c:	f7ff ff62 	bl	801db04 <__sfmoreglue>
 801dc40:	4604      	mov	r4, r0
 801dc42:	6030      	str	r0, [r6, #0]
 801dc44:	2800      	cmp	r0, #0
 801dc46:	d1d5      	bne.n	801dbf4 <__sfp+0x24>
 801dc48:	f7ff ff78 	bl	801db3c <__sfp_lock_release>
 801dc4c:	230c      	movs	r3, #12
 801dc4e:	603b      	str	r3, [r7, #0]
 801dc50:	e7ee      	b.n	801dc30 <__sfp+0x60>
 801dc52:	bf00      	nop
 801dc54:	08021900 	.word	0x08021900
 801dc58:	ffff0001 	.word	0xffff0001

0801dc5c <_fwalk_reent>:
 801dc5c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801dc60:	4606      	mov	r6, r0
 801dc62:	4688      	mov	r8, r1
 801dc64:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801dc68:	2700      	movs	r7, #0
 801dc6a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801dc6e:	f1b9 0901 	subs.w	r9, r9, #1
 801dc72:	d505      	bpl.n	801dc80 <_fwalk_reent+0x24>
 801dc74:	6824      	ldr	r4, [r4, #0]
 801dc76:	2c00      	cmp	r4, #0
 801dc78:	d1f7      	bne.n	801dc6a <_fwalk_reent+0xe>
 801dc7a:	4638      	mov	r0, r7
 801dc7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801dc80:	89ab      	ldrh	r3, [r5, #12]
 801dc82:	2b01      	cmp	r3, #1
 801dc84:	d907      	bls.n	801dc96 <_fwalk_reent+0x3a>
 801dc86:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801dc8a:	3301      	adds	r3, #1
 801dc8c:	d003      	beq.n	801dc96 <_fwalk_reent+0x3a>
 801dc8e:	4629      	mov	r1, r5
 801dc90:	4630      	mov	r0, r6
 801dc92:	47c0      	blx	r8
 801dc94:	4307      	orrs	r7, r0
 801dc96:	3568      	adds	r5, #104	; 0x68
 801dc98:	e7e9      	b.n	801dc6e <_fwalk_reent+0x12>
	...

0801dc9c <_localeconv_r>:
 801dc9c:	4800      	ldr	r0, [pc, #0]	; (801dca0 <_localeconv_r+0x4>)
 801dc9e:	4770      	bx	lr
 801dca0:	200001f4 	.word	0x200001f4

0801dca4 <__retarget_lock_init_recursive>:
 801dca4:	4770      	bx	lr

0801dca6 <__retarget_lock_acquire_recursive>:
 801dca6:	4770      	bx	lr

0801dca8 <__retarget_lock_release>:
 801dca8:	4770      	bx	lr

0801dcaa <__retarget_lock_release_recursive>:
 801dcaa:	4770      	bx	lr

0801dcac <__swhatbuf_r>:
 801dcac:	b570      	push	{r4, r5, r6, lr}
 801dcae:	460e      	mov	r6, r1
 801dcb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801dcb4:	2900      	cmp	r1, #0
 801dcb6:	b096      	sub	sp, #88	; 0x58
 801dcb8:	4614      	mov	r4, r2
 801dcba:	461d      	mov	r5, r3
 801dcbc:	da08      	bge.n	801dcd0 <__swhatbuf_r+0x24>
 801dcbe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801dcc2:	2200      	movs	r2, #0
 801dcc4:	602a      	str	r2, [r5, #0]
 801dcc6:	061a      	lsls	r2, r3, #24
 801dcc8:	d410      	bmi.n	801dcec <__swhatbuf_r+0x40>
 801dcca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801dcce:	e00e      	b.n	801dcee <__swhatbuf_r+0x42>
 801dcd0:	466a      	mov	r2, sp
 801dcd2:	f000 fc5d 	bl	801e590 <_fstat_r>
 801dcd6:	2800      	cmp	r0, #0
 801dcd8:	dbf1      	blt.n	801dcbe <__swhatbuf_r+0x12>
 801dcda:	9a01      	ldr	r2, [sp, #4]
 801dcdc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801dce0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801dce4:	425a      	negs	r2, r3
 801dce6:	415a      	adcs	r2, r3
 801dce8:	602a      	str	r2, [r5, #0]
 801dcea:	e7ee      	b.n	801dcca <__swhatbuf_r+0x1e>
 801dcec:	2340      	movs	r3, #64	; 0x40
 801dcee:	2000      	movs	r0, #0
 801dcf0:	6023      	str	r3, [r4, #0]
 801dcf2:	b016      	add	sp, #88	; 0x58
 801dcf4:	bd70      	pop	{r4, r5, r6, pc}
	...

0801dcf8 <__smakebuf_r>:
 801dcf8:	898b      	ldrh	r3, [r1, #12]
 801dcfa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801dcfc:	079d      	lsls	r5, r3, #30
 801dcfe:	4606      	mov	r6, r0
 801dd00:	460c      	mov	r4, r1
 801dd02:	d507      	bpl.n	801dd14 <__smakebuf_r+0x1c>
 801dd04:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801dd08:	6023      	str	r3, [r4, #0]
 801dd0a:	6123      	str	r3, [r4, #16]
 801dd0c:	2301      	movs	r3, #1
 801dd0e:	6163      	str	r3, [r4, #20]
 801dd10:	b002      	add	sp, #8
 801dd12:	bd70      	pop	{r4, r5, r6, pc}
 801dd14:	ab01      	add	r3, sp, #4
 801dd16:	466a      	mov	r2, sp
 801dd18:	f7ff ffc8 	bl	801dcac <__swhatbuf_r>
 801dd1c:	9900      	ldr	r1, [sp, #0]
 801dd1e:	4605      	mov	r5, r0
 801dd20:	4630      	mov	r0, r6
 801dd22:	f7fd ff37 	bl	801bb94 <_malloc_r>
 801dd26:	b948      	cbnz	r0, 801dd3c <__smakebuf_r+0x44>
 801dd28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801dd2c:	059a      	lsls	r2, r3, #22
 801dd2e:	d4ef      	bmi.n	801dd10 <__smakebuf_r+0x18>
 801dd30:	f023 0303 	bic.w	r3, r3, #3
 801dd34:	f043 0302 	orr.w	r3, r3, #2
 801dd38:	81a3      	strh	r3, [r4, #12]
 801dd3a:	e7e3      	b.n	801dd04 <__smakebuf_r+0xc>
 801dd3c:	4b0d      	ldr	r3, [pc, #52]	; (801dd74 <__smakebuf_r+0x7c>)
 801dd3e:	62b3      	str	r3, [r6, #40]	; 0x28
 801dd40:	89a3      	ldrh	r3, [r4, #12]
 801dd42:	6020      	str	r0, [r4, #0]
 801dd44:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801dd48:	81a3      	strh	r3, [r4, #12]
 801dd4a:	9b00      	ldr	r3, [sp, #0]
 801dd4c:	6163      	str	r3, [r4, #20]
 801dd4e:	9b01      	ldr	r3, [sp, #4]
 801dd50:	6120      	str	r0, [r4, #16]
 801dd52:	b15b      	cbz	r3, 801dd6c <__smakebuf_r+0x74>
 801dd54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801dd58:	4630      	mov	r0, r6
 801dd5a:	f000 fc2b 	bl	801e5b4 <_isatty_r>
 801dd5e:	b128      	cbz	r0, 801dd6c <__smakebuf_r+0x74>
 801dd60:	89a3      	ldrh	r3, [r4, #12]
 801dd62:	f023 0303 	bic.w	r3, r3, #3
 801dd66:	f043 0301 	orr.w	r3, r3, #1
 801dd6a:	81a3      	strh	r3, [r4, #12]
 801dd6c:	89a0      	ldrh	r0, [r4, #12]
 801dd6e:	4305      	orrs	r5, r0
 801dd70:	81a5      	strh	r5, [r4, #12]
 801dd72:	e7cd      	b.n	801dd10 <__smakebuf_r+0x18>
 801dd74:	0801daf9 	.word	0x0801daf9

0801dd78 <__malloc_lock>:
 801dd78:	4801      	ldr	r0, [pc, #4]	; (801dd80 <__malloc_lock+0x8>)
 801dd7a:	f7ff bf94 	b.w	801dca6 <__retarget_lock_acquire_recursive>
 801dd7e:	bf00      	nop
 801dd80:	20001a5d 	.word	0x20001a5d

0801dd84 <__malloc_unlock>:
 801dd84:	4801      	ldr	r0, [pc, #4]	; (801dd8c <__malloc_unlock+0x8>)
 801dd86:	f7ff bf90 	b.w	801dcaa <__retarget_lock_release_recursive>
 801dd8a:	bf00      	nop
 801dd8c:	20001a5d 	.word	0x20001a5d

0801dd90 <_Balloc>:
 801dd90:	b570      	push	{r4, r5, r6, lr}
 801dd92:	6a46      	ldr	r6, [r0, #36]	; 0x24
 801dd94:	4604      	mov	r4, r0
 801dd96:	460d      	mov	r5, r1
 801dd98:	b976      	cbnz	r6, 801ddb8 <_Balloc+0x28>
 801dd9a:	2010      	movs	r0, #16
 801dd9c:	f7fd fe68 	bl	801ba70 <malloc>
 801dda0:	4602      	mov	r2, r0
 801dda2:	6260      	str	r0, [r4, #36]	; 0x24
 801dda4:	b920      	cbnz	r0, 801ddb0 <_Balloc+0x20>
 801dda6:	4b18      	ldr	r3, [pc, #96]	; (801de08 <_Balloc+0x78>)
 801dda8:	4818      	ldr	r0, [pc, #96]	; (801de0c <_Balloc+0x7c>)
 801ddaa:	2166      	movs	r1, #102	; 0x66
 801ddac:	f7fd fdee 	bl	801b98c <__assert_func>
 801ddb0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801ddb4:	6006      	str	r6, [r0, #0]
 801ddb6:	60c6      	str	r6, [r0, #12]
 801ddb8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 801ddba:	68f3      	ldr	r3, [r6, #12]
 801ddbc:	b183      	cbz	r3, 801dde0 <_Balloc+0x50>
 801ddbe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801ddc0:	68db      	ldr	r3, [r3, #12]
 801ddc2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 801ddc6:	b9b8      	cbnz	r0, 801ddf8 <_Balloc+0x68>
 801ddc8:	2101      	movs	r1, #1
 801ddca:	fa01 f605 	lsl.w	r6, r1, r5
 801ddce:	1d72      	adds	r2, r6, #5
 801ddd0:	0092      	lsls	r2, r2, #2
 801ddd2:	4620      	mov	r0, r4
 801ddd4:	f000 fb60 	bl	801e498 <_calloc_r>
 801ddd8:	b160      	cbz	r0, 801ddf4 <_Balloc+0x64>
 801ddda:	e9c0 5601 	strd	r5, r6, [r0, #4]
 801ddde:	e00e      	b.n	801ddfe <_Balloc+0x6e>
 801dde0:	2221      	movs	r2, #33	; 0x21
 801dde2:	2104      	movs	r1, #4
 801dde4:	4620      	mov	r0, r4
 801dde6:	f000 fb57 	bl	801e498 <_calloc_r>
 801ddea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801ddec:	60f0      	str	r0, [r6, #12]
 801ddee:	68db      	ldr	r3, [r3, #12]
 801ddf0:	2b00      	cmp	r3, #0
 801ddf2:	d1e4      	bne.n	801ddbe <_Balloc+0x2e>
 801ddf4:	2000      	movs	r0, #0
 801ddf6:	bd70      	pop	{r4, r5, r6, pc}
 801ddf8:	6802      	ldr	r2, [r0, #0]
 801ddfa:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 801ddfe:	2300      	movs	r3, #0
 801de00:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801de04:	e7f7      	b.n	801ddf6 <_Balloc+0x66>
 801de06:	bf00      	nop
 801de08:	08021a5a 	.word	0x08021a5a
 801de0c:	08021b40 	.word	0x08021b40

0801de10 <_Bfree>:
 801de10:	b570      	push	{r4, r5, r6, lr}
 801de12:	6a46      	ldr	r6, [r0, #36]	; 0x24
 801de14:	4605      	mov	r5, r0
 801de16:	460c      	mov	r4, r1
 801de18:	b976      	cbnz	r6, 801de38 <_Bfree+0x28>
 801de1a:	2010      	movs	r0, #16
 801de1c:	f7fd fe28 	bl	801ba70 <malloc>
 801de20:	4602      	mov	r2, r0
 801de22:	6268      	str	r0, [r5, #36]	; 0x24
 801de24:	b920      	cbnz	r0, 801de30 <_Bfree+0x20>
 801de26:	4b09      	ldr	r3, [pc, #36]	; (801de4c <_Bfree+0x3c>)
 801de28:	4809      	ldr	r0, [pc, #36]	; (801de50 <_Bfree+0x40>)
 801de2a:	218a      	movs	r1, #138	; 0x8a
 801de2c:	f7fd fdae 	bl	801b98c <__assert_func>
 801de30:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801de34:	6006      	str	r6, [r0, #0]
 801de36:	60c6      	str	r6, [r0, #12]
 801de38:	b13c      	cbz	r4, 801de4a <_Bfree+0x3a>
 801de3a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 801de3c:	6862      	ldr	r2, [r4, #4]
 801de3e:	68db      	ldr	r3, [r3, #12]
 801de40:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801de44:	6021      	str	r1, [r4, #0]
 801de46:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 801de4a:	bd70      	pop	{r4, r5, r6, pc}
 801de4c:	08021a5a 	.word	0x08021a5a
 801de50:	08021b40 	.word	0x08021b40

0801de54 <__multadd>:
 801de54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801de58:	690d      	ldr	r5, [r1, #16]
 801de5a:	4607      	mov	r7, r0
 801de5c:	460c      	mov	r4, r1
 801de5e:	461e      	mov	r6, r3
 801de60:	f101 0c14 	add.w	ip, r1, #20
 801de64:	2000      	movs	r0, #0
 801de66:	f8dc 3000 	ldr.w	r3, [ip]
 801de6a:	b299      	uxth	r1, r3
 801de6c:	fb02 6101 	mla	r1, r2, r1, r6
 801de70:	0c1e      	lsrs	r6, r3, #16
 801de72:	0c0b      	lsrs	r3, r1, #16
 801de74:	fb02 3306 	mla	r3, r2, r6, r3
 801de78:	b289      	uxth	r1, r1
 801de7a:	3001      	adds	r0, #1
 801de7c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801de80:	4285      	cmp	r5, r0
 801de82:	f84c 1b04 	str.w	r1, [ip], #4
 801de86:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801de8a:	dcec      	bgt.n	801de66 <__multadd+0x12>
 801de8c:	b30e      	cbz	r6, 801ded2 <__multadd+0x7e>
 801de8e:	68a3      	ldr	r3, [r4, #8]
 801de90:	42ab      	cmp	r3, r5
 801de92:	dc19      	bgt.n	801dec8 <__multadd+0x74>
 801de94:	6861      	ldr	r1, [r4, #4]
 801de96:	4638      	mov	r0, r7
 801de98:	3101      	adds	r1, #1
 801de9a:	f7ff ff79 	bl	801dd90 <_Balloc>
 801de9e:	4680      	mov	r8, r0
 801dea0:	b928      	cbnz	r0, 801deae <__multadd+0x5a>
 801dea2:	4602      	mov	r2, r0
 801dea4:	4b0c      	ldr	r3, [pc, #48]	; (801ded8 <__multadd+0x84>)
 801dea6:	480d      	ldr	r0, [pc, #52]	; (801dedc <__multadd+0x88>)
 801dea8:	21b5      	movs	r1, #181	; 0xb5
 801deaa:	f7fd fd6f 	bl	801b98c <__assert_func>
 801deae:	6922      	ldr	r2, [r4, #16]
 801deb0:	3202      	adds	r2, #2
 801deb2:	f104 010c 	add.w	r1, r4, #12
 801deb6:	0092      	lsls	r2, r2, #2
 801deb8:	300c      	adds	r0, #12
 801deba:	f7fd fde9 	bl	801ba90 <memcpy>
 801debe:	4621      	mov	r1, r4
 801dec0:	4638      	mov	r0, r7
 801dec2:	f7ff ffa5 	bl	801de10 <_Bfree>
 801dec6:	4644      	mov	r4, r8
 801dec8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801decc:	3501      	adds	r5, #1
 801dece:	615e      	str	r6, [r3, #20]
 801ded0:	6125      	str	r5, [r4, #16]
 801ded2:	4620      	mov	r0, r4
 801ded4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ded8:	08021acc 	.word	0x08021acc
 801dedc:	08021b40 	.word	0x08021b40

0801dee0 <__hi0bits>:
 801dee0:	0c03      	lsrs	r3, r0, #16
 801dee2:	041b      	lsls	r3, r3, #16
 801dee4:	b9d3      	cbnz	r3, 801df1c <__hi0bits+0x3c>
 801dee6:	0400      	lsls	r0, r0, #16
 801dee8:	2310      	movs	r3, #16
 801deea:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 801deee:	bf04      	itt	eq
 801def0:	0200      	lsleq	r0, r0, #8
 801def2:	3308      	addeq	r3, #8
 801def4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 801def8:	bf04      	itt	eq
 801defa:	0100      	lsleq	r0, r0, #4
 801defc:	3304      	addeq	r3, #4
 801defe:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 801df02:	bf04      	itt	eq
 801df04:	0080      	lsleq	r0, r0, #2
 801df06:	3302      	addeq	r3, #2
 801df08:	2800      	cmp	r0, #0
 801df0a:	db05      	blt.n	801df18 <__hi0bits+0x38>
 801df0c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 801df10:	f103 0301 	add.w	r3, r3, #1
 801df14:	bf08      	it	eq
 801df16:	2320      	moveq	r3, #32
 801df18:	4618      	mov	r0, r3
 801df1a:	4770      	bx	lr
 801df1c:	2300      	movs	r3, #0
 801df1e:	e7e4      	b.n	801deea <__hi0bits+0xa>

0801df20 <__lo0bits>:
 801df20:	6803      	ldr	r3, [r0, #0]
 801df22:	f013 0207 	ands.w	r2, r3, #7
 801df26:	4601      	mov	r1, r0
 801df28:	d00b      	beq.n	801df42 <__lo0bits+0x22>
 801df2a:	07da      	lsls	r2, r3, #31
 801df2c:	d423      	bmi.n	801df76 <__lo0bits+0x56>
 801df2e:	0798      	lsls	r0, r3, #30
 801df30:	bf49      	itett	mi
 801df32:	085b      	lsrmi	r3, r3, #1
 801df34:	089b      	lsrpl	r3, r3, #2
 801df36:	2001      	movmi	r0, #1
 801df38:	600b      	strmi	r3, [r1, #0]
 801df3a:	bf5c      	itt	pl
 801df3c:	600b      	strpl	r3, [r1, #0]
 801df3e:	2002      	movpl	r0, #2
 801df40:	4770      	bx	lr
 801df42:	b298      	uxth	r0, r3
 801df44:	b9a8      	cbnz	r0, 801df72 <__lo0bits+0x52>
 801df46:	0c1b      	lsrs	r3, r3, #16
 801df48:	2010      	movs	r0, #16
 801df4a:	b2da      	uxtb	r2, r3
 801df4c:	b90a      	cbnz	r2, 801df52 <__lo0bits+0x32>
 801df4e:	3008      	adds	r0, #8
 801df50:	0a1b      	lsrs	r3, r3, #8
 801df52:	071a      	lsls	r2, r3, #28
 801df54:	bf04      	itt	eq
 801df56:	091b      	lsreq	r3, r3, #4
 801df58:	3004      	addeq	r0, #4
 801df5a:	079a      	lsls	r2, r3, #30
 801df5c:	bf04      	itt	eq
 801df5e:	089b      	lsreq	r3, r3, #2
 801df60:	3002      	addeq	r0, #2
 801df62:	07da      	lsls	r2, r3, #31
 801df64:	d403      	bmi.n	801df6e <__lo0bits+0x4e>
 801df66:	085b      	lsrs	r3, r3, #1
 801df68:	f100 0001 	add.w	r0, r0, #1
 801df6c:	d005      	beq.n	801df7a <__lo0bits+0x5a>
 801df6e:	600b      	str	r3, [r1, #0]
 801df70:	4770      	bx	lr
 801df72:	4610      	mov	r0, r2
 801df74:	e7e9      	b.n	801df4a <__lo0bits+0x2a>
 801df76:	2000      	movs	r0, #0
 801df78:	4770      	bx	lr
 801df7a:	2020      	movs	r0, #32
 801df7c:	4770      	bx	lr
	...

0801df80 <__i2b>:
 801df80:	b510      	push	{r4, lr}
 801df82:	460c      	mov	r4, r1
 801df84:	2101      	movs	r1, #1
 801df86:	f7ff ff03 	bl	801dd90 <_Balloc>
 801df8a:	4602      	mov	r2, r0
 801df8c:	b928      	cbnz	r0, 801df9a <__i2b+0x1a>
 801df8e:	4b05      	ldr	r3, [pc, #20]	; (801dfa4 <__i2b+0x24>)
 801df90:	4805      	ldr	r0, [pc, #20]	; (801dfa8 <__i2b+0x28>)
 801df92:	f44f 71a0 	mov.w	r1, #320	; 0x140
 801df96:	f7fd fcf9 	bl	801b98c <__assert_func>
 801df9a:	2301      	movs	r3, #1
 801df9c:	6144      	str	r4, [r0, #20]
 801df9e:	6103      	str	r3, [r0, #16]
 801dfa0:	bd10      	pop	{r4, pc}
 801dfa2:	bf00      	nop
 801dfa4:	08021acc 	.word	0x08021acc
 801dfa8:	08021b40 	.word	0x08021b40

0801dfac <__multiply>:
 801dfac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfb0:	4691      	mov	r9, r2
 801dfb2:	690a      	ldr	r2, [r1, #16]
 801dfb4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 801dfb8:	429a      	cmp	r2, r3
 801dfba:	bfb8      	it	lt
 801dfbc:	460b      	movlt	r3, r1
 801dfbe:	460c      	mov	r4, r1
 801dfc0:	bfbc      	itt	lt
 801dfc2:	464c      	movlt	r4, r9
 801dfc4:	4699      	movlt	r9, r3
 801dfc6:	6927      	ldr	r7, [r4, #16]
 801dfc8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 801dfcc:	68a3      	ldr	r3, [r4, #8]
 801dfce:	6861      	ldr	r1, [r4, #4]
 801dfd0:	eb07 060a 	add.w	r6, r7, sl
 801dfd4:	42b3      	cmp	r3, r6
 801dfd6:	b085      	sub	sp, #20
 801dfd8:	bfb8      	it	lt
 801dfda:	3101      	addlt	r1, #1
 801dfdc:	f7ff fed8 	bl	801dd90 <_Balloc>
 801dfe0:	b930      	cbnz	r0, 801dff0 <__multiply+0x44>
 801dfe2:	4602      	mov	r2, r0
 801dfe4:	4b44      	ldr	r3, [pc, #272]	; (801e0f8 <__multiply+0x14c>)
 801dfe6:	4845      	ldr	r0, [pc, #276]	; (801e0fc <__multiply+0x150>)
 801dfe8:	f240 115d 	movw	r1, #349	; 0x15d
 801dfec:	f7fd fcce 	bl	801b98c <__assert_func>
 801dff0:	f100 0514 	add.w	r5, r0, #20
 801dff4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 801dff8:	462b      	mov	r3, r5
 801dffa:	2200      	movs	r2, #0
 801dffc:	4543      	cmp	r3, r8
 801dffe:	d321      	bcc.n	801e044 <__multiply+0x98>
 801e000:	f104 0314 	add.w	r3, r4, #20
 801e004:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 801e008:	f109 0314 	add.w	r3, r9, #20
 801e00c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 801e010:	9202      	str	r2, [sp, #8]
 801e012:	1b3a      	subs	r2, r7, r4
 801e014:	3a15      	subs	r2, #21
 801e016:	f022 0203 	bic.w	r2, r2, #3
 801e01a:	3204      	adds	r2, #4
 801e01c:	f104 0115 	add.w	r1, r4, #21
 801e020:	428f      	cmp	r7, r1
 801e022:	bf38      	it	cc
 801e024:	2204      	movcc	r2, #4
 801e026:	9201      	str	r2, [sp, #4]
 801e028:	9a02      	ldr	r2, [sp, #8]
 801e02a:	9303      	str	r3, [sp, #12]
 801e02c:	429a      	cmp	r2, r3
 801e02e:	d80c      	bhi.n	801e04a <__multiply+0x9e>
 801e030:	2e00      	cmp	r6, #0
 801e032:	dd03      	ble.n	801e03c <__multiply+0x90>
 801e034:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 801e038:	2b00      	cmp	r3, #0
 801e03a:	d05a      	beq.n	801e0f2 <__multiply+0x146>
 801e03c:	6106      	str	r6, [r0, #16]
 801e03e:	b005      	add	sp, #20
 801e040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e044:	f843 2b04 	str.w	r2, [r3], #4
 801e048:	e7d8      	b.n	801dffc <__multiply+0x50>
 801e04a:	f8b3 a000 	ldrh.w	sl, [r3]
 801e04e:	f1ba 0f00 	cmp.w	sl, #0
 801e052:	d024      	beq.n	801e09e <__multiply+0xf2>
 801e054:	f104 0e14 	add.w	lr, r4, #20
 801e058:	46a9      	mov	r9, r5
 801e05a:	f04f 0c00 	mov.w	ip, #0
 801e05e:	f85e 2b04 	ldr.w	r2, [lr], #4
 801e062:	f8d9 1000 	ldr.w	r1, [r9]
 801e066:	fa1f fb82 	uxth.w	fp, r2
 801e06a:	b289      	uxth	r1, r1
 801e06c:	fb0a 110b 	mla	r1, sl, fp, r1
 801e070:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 801e074:	f8d9 2000 	ldr.w	r2, [r9]
 801e078:	4461      	add	r1, ip
 801e07a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801e07e:	fb0a c20b 	mla	r2, sl, fp, ip
 801e082:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 801e086:	b289      	uxth	r1, r1
 801e088:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 801e08c:	4577      	cmp	r7, lr
 801e08e:	f849 1b04 	str.w	r1, [r9], #4
 801e092:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801e096:	d8e2      	bhi.n	801e05e <__multiply+0xb2>
 801e098:	9a01      	ldr	r2, [sp, #4]
 801e09a:	f845 c002 	str.w	ip, [r5, r2]
 801e09e:	9a03      	ldr	r2, [sp, #12]
 801e0a0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 801e0a4:	3304      	adds	r3, #4
 801e0a6:	f1b9 0f00 	cmp.w	r9, #0
 801e0aa:	d020      	beq.n	801e0ee <__multiply+0x142>
 801e0ac:	6829      	ldr	r1, [r5, #0]
 801e0ae:	f104 0c14 	add.w	ip, r4, #20
 801e0b2:	46ae      	mov	lr, r5
 801e0b4:	f04f 0a00 	mov.w	sl, #0
 801e0b8:	f8bc b000 	ldrh.w	fp, [ip]
 801e0bc:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801e0c0:	fb09 220b 	mla	r2, r9, fp, r2
 801e0c4:	4492      	add	sl, r2
 801e0c6:	b289      	uxth	r1, r1
 801e0c8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 801e0cc:	f84e 1b04 	str.w	r1, [lr], #4
 801e0d0:	f85c 2b04 	ldr.w	r2, [ip], #4
 801e0d4:	f8be 1000 	ldrh.w	r1, [lr]
 801e0d8:	0c12      	lsrs	r2, r2, #16
 801e0da:	fb09 1102 	mla	r1, r9, r2, r1
 801e0de:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 801e0e2:	4567      	cmp	r7, ip
 801e0e4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 801e0e8:	d8e6      	bhi.n	801e0b8 <__multiply+0x10c>
 801e0ea:	9a01      	ldr	r2, [sp, #4]
 801e0ec:	50a9      	str	r1, [r5, r2]
 801e0ee:	3504      	adds	r5, #4
 801e0f0:	e79a      	b.n	801e028 <__multiply+0x7c>
 801e0f2:	3e01      	subs	r6, #1
 801e0f4:	e79c      	b.n	801e030 <__multiply+0x84>
 801e0f6:	bf00      	nop
 801e0f8:	08021acc 	.word	0x08021acc
 801e0fc:	08021b40 	.word	0x08021b40

0801e100 <__pow5mult>:
 801e100:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e104:	4615      	mov	r5, r2
 801e106:	f012 0203 	ands.w	r2, r2, #3
 801e10a:	4606      	mov	r6, r0
 801e10c:	460f      	mov	r7, r1
 801e10e:	d007      	beq.n	801e120 <__pow5mult+0x20>
 801e110:	4c25      	ldr	r4, [pc, #148]	; (801e1a8 <__pow5mult+0xa8>)
 801e112:	3a01      	subs	r2, #1
 801e114:	2300      	movs	r3, #0
 801e116:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 801e11a:	f7ff fe9b 	bl	801de54 <__multadd>
 801e11e:	4607      	mov	r7, r0
 801e120:	10ad      	asrs	r5, r5, #2
 801e122:	d03d      	beq.n	801e1a0 <__pow5mult+0xa0>
 801e124:	6a74      	ldr	r4, [r6, #36]	; 0x24
 801e126:	b97c      	cbnz	r4, 801e148 <__pow5mult+0x48>
 801e128:	2010      	movs	r0, #16
 801e12a:	f7fd fca1 	bl	801ba70 <malloc>
 801e12e:	4602      	mov	r2, r0
 801e130:	6270      	str	r0, [r6, #36]	; 0x24
 801e132:	b928      	cbnz	r0, 801e140 <__pow5mult+0x40>
 801e134:	4b1d      	ldr	r3, [pc, #116]	; (801e1ac <__pow5mult+0xac>)
 801e136:	481e      	ldr	r0, [pc, #120]	; (801e1b0 <__pow5mult+0xb0>)
 801e138:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 801e13c:	f7fd fc26 	bl	801b98c <__assert_func>
 801e140:	e9c0 4401 	strd	r4, r4, [r0, #4]
 801e144:	6004      	str	r4, [r0, #0]
 801e146:	60c4      	str	r4, [r0, #12]
 801e148:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 801e14c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 801e150:	b94c      	cbnz	r4, 801e166 <__pow5mult+0x66>
 801e152:	f240 2171 	movw	r1, #625	; 0x271
 801e156:	4630      	mov	r0, r6
 801e158:	f7ff ff12 	bl	801df80 <__i2b>
 801e15c:	2300      	movs	r3, #0
 801e15e:	f8c8 0008 	str.w	r0, [r8, #8]
 801e162:	4604      	mov	r4, r0
 801e164:	6003      	str	r3, [r0, #0]
 801e166:	f04f 0900 	mov.w	r9, #0
 801e16a:	07eb      	lsls	r3, r5, #31
 801e16c:	d50a      	bpl.n	801e184 <__pow5mult+0x84>
 801e16e:	4639      	mov	r1, r7
 801e170:	4622      	mov	r2, r4
 801e172:	4630      	mov	r0, r6
 801e174:	f7ff ff1a 	bl	801dfac <__multiply>
 801e178:	4639      	mov	r1, r7
 801e17a:	4680      	mov	r8, r0
 801e17c:	4630      	mov	r0, r6
 801e17e:	f7ff fe47 	bl	801de10 <_Bfree>
 801e182:	4647      	mov	r7, r8
 801e184:	106d      	asrs	r5, r5, #1
 801e186:	d00b      	beq.n	801e1a0 <__pow5mult+0xa0>
 801e188:	6820      	ldr	r0, [r4, #0]
 801e18a:	b938      	cbnz	r0, 801e19c <__pow5mult+0x9c>
 801e18c:	4622      	mov	r2, r4
 801e18e:	4621      	mov	r1, r4
 801e190:	4630      	mov	r0, r6
 801e192:	f7ff ff0b 	bl	801dfac <__multiply>
 801e196:	6020      	str	r0, [r4, #0]
 801e198:	f8c0 9000 	str.w	r9, [r0]
 801e19c:	4604      	mov	r4, r0
 801e19e:	e7e4      	b.n	801e16a <__pow5mult+0x6a>
 801e1a0:	4638      	mov	r0, r7
 801e1a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e1a6:	bf00      	nop
 801e1a8:	08021c90 	.word	0x08021c90
 801e1ac:	08021a5a 	.word	0x08021a5a
 801e1b0:	08021b40 	.word	0x08021b40

0801e1b4 <__lshift>:
 801e1b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e1b8:	460c      	mov	r4, r1
 801e1ba:	6849      	ldr	r1, [r1, #4]
 801e1bc:	6923      	ldr	r3, [r4, #16]
 801e1be:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801e1c2:	68a3      	ldr	r3, [r4, #8]
 801e1c4:	4607      	mov	r7, r0
 801e1c6:	4691      	mov	r9, r2
 801e1c8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 801e1cc:	f108 0601 	add.w	r6, r8, #1
 801e1d0:	42b3      	cmp	r3, r6
 801e1d2:	db0b      	blt.n	801e1ec <__lshift+0x38>
 801e1d4:	4638      	mov	r0, r7
 801e1d6:	f7ff fddb 	bl	801dd90 <_Balloc>
 801e1da:	4605      	mov	r5, r0
 801e1dc:	b948      	cbnz	r0, 801e1f2 <__lshift+0x3e>
 801e1de:	4602      	mov	r2, r0
 801e1e0:	4b2a      	ldr	r3, [pc, #168]	; (801e28c <__lshift+0xd8>)
 801e1e2:	482b      	ldr	r0, [pc, #172]	; (801e290 <__lshift+0xdc>)
 801e1e4:	f240 11d9 	movw	r1, #473	; 0x1d9
 801e1e8:	f7fd fbd0 	bl	801b98c <__assert_func>
 801e1ec:	3101      	adds	r1, #1
 801e1ee:	005b      	lsls	r3, r3, #1
 801e1f0:	e7ee      	b.n	801e1d0 <__lshift+0x1c>
 801e1f2:	2300      	movs	r3, #0
 801e1f4:	f100 0114 	add.w	r1, r0, #20
 801e1f8:	f100 0210 	add.w	r2, r0, #16
 801e1fc:	4618      	mov	r0, r3
 801e1fe:	4553      	cmp	r3, sl
 801e200:	db37      	blt.n	801e272 <__lshift+0xbe>
 801e202:	6920      	ldr	r0, [r4, #16]
 801e204:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 801e208:	f104 0314 	add.w	r3, r4, #20
 801e20c:	f019 091f 	ands.w	r9, r9, #31
 801e210:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801e214:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 801e218:	d02f      	beq.n	801e27a <__lshift+0xc6>
 801e21a:	f1c9 0e20 	rsb	lr, r9, #32
 801e21e:	468a      	mov	sl, r1
 801e220:	f04f 0c00 	mov.w	ip, #0
 801e224:	681a      	ldr	r2, [r3, #0]
 801e226:	fa02 f209 	lsl.w	r2, r2, r9
 801e22a:	ea42 020c 	orr.w	r2, r2, ip
 801e22e:	f84a 2b04 	str.w	r2, [sl], #4
 801e232:	f853 2b04 	ldr.w	r2, [r3], #4
 801e236:	4298      	cmp	r0, r3
 801e238:	fa22 fc0e 	lsr.w	ip, r2, lr
 801e23c:	d8f2      	bhi.n	801e224 <__lshift+0x70>
 801e23e:	1b03      	subs	r3, r0, r4
 801e240:	3b15      	subs	r3, #21
 801e242:	f023 0303 	bic.w	r3, r3, #3
 801e246:	3304      	adds	r3, #4
 801e248:	f104 0215 	add.w	r2, r4, #21
 801e24c:	4290      	cmp	r0, r2
 801e24e:	bf38      	it	cc
 801e250:	2304      	movcc	r3, #4
 801e252:	f841 c003 	str.w	ip, [r1, r3]
 801e256:	f1bc 0f00 	cmp.w	ip, #0
 801e25a:	d001      	beq.n	801e260 <__lshift+0xac>
 801e25c:	f108 0602 	add.w	r6, r8, #2
 801e260:	3e01      	subs	r6, #1
 801e262:	4638      	mov	r0, r7
 801e264:	612e      	str	r6, [r5, #16]
 801e266:	4621      	mov	r1, r4
 801e268:	f7ff fdd2 	bl	801de10 <_Bfree>
 801e26c:	4628      	mov	r0, r5
 801e26e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e272:	f842 0f04 	str.w	r0, [r2, #4]!
 801e276:	3301      	adds	r3, #1
 801e278:	e7c1      	b.n	801e1fe <__lshift+0x4a>
 801e27a:	3904      	subs	r1, #4
 801e27c:	f853 2b04 	ldr.w	r2, [r3], #4
 801e280:	f841 2f04 	str.w	r2, [r1, #4]!
 801e284:	4298      	cmp	r0, r3
 801e286:	d8f9      	bhi.n	801e27c <__lshift+0xc8>
 801e288:	e7ea      	b.n	801e260 <__lshift+0xac>
 801e28a:	bf00      	nop
 801e28c:	08021acc 	.word	0x08021acc
 801e290:	08021b40 	.word	0x08021b40

0801e294 <__mcmp>:
 801e294:	b530      	push	{r4, r5, lr}
 801e296:	6902      	ldr	r2, [r0, #16]
 801e298:	690c      	ldr	r4, [r1, #16]
 801e29a:	1b12      	subs	r2, r2, r4
 801e29c:	d10e      	bne.n	801e2bc <__mcmp+0x28>
 801e29e:	f100 0314 	add.w	r3, r0, #20
 801e2a2:	3114      	adds	r1, #20
 801e2a4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 801e2a8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 801e2ac:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 801e2b0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 801e2b4:	42a5      	cmp	r5, r4
 801e2b6:	d003      	beq.n	801e2c0 <__mcmp+0x2c>
 801e2b8:	d305      	bcc.n	801e2c6 <__mcmp+0x32>
 801e2ba:	2201      	movs	r2, #1
 801e2bc:	4610      	mov	r0, r2
 801e2be:	bd30      	pop	{r4, r5, pc}
 801e2c0:	4283      	cmp	r3, r0
 801e2c2:	d3f3      	bcc.n	801e2ac <__mcmp+0x18>
 801e2c4:	e7fa      	b.n	801e2bc <__mcmp+0x28>
 801e2c6:	f04f 32ff 	mov.w	r2, #4294967295
 801e2ca:	e7f7      	b.n	801e2bc <__mcmp+0x28>

0801e2cc <__mdiff>:
 801e2cc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2d0:	460c      	mov	r4, r1
 801e2d2:	4606      	mov	r6, r0
 801e2d4:	4611      	mov	r1, r2
 801e2d6:	4620      	mov	r0, r4
 801e2d8:	4690      	mov	r8, r2
 801e2da:	f7ff ffdb 	bl	801e294 <__mcmp>
 801e2de:	1e05      	subs	r5, r0, #0
 801e2e0:	d110      	bne.n	801e304 <__mdiff+0x38>
 801e2e2:	4629      	mov	r1, r5
 801e2e4:	4630      	mov	r0, r6
 801e2e6:	f7ff fd53 	bl	801dd90 <_Balloc>
 801e2ea:	b930      	cbnz	r0, 801e2fa <__mdiff+0x2e>
 801e2ec:	4b3a      	ldr	r3, [pc, #232]	; (801e3d8 <__mdiff+0x10c>)
 801e2ee:	4602      	mov	r2, r0
 801e2f0:	f240 2132 	movw	r1, #562	; 0x232
 801e2f4:	4839      	ldr	r0, [pc, #228]	; (801e3dc <__mdiff+0x110>)
 801e2f6:	f7fd fb49 	bl	801b98c <__assert_func>
 801e2fa:	2301      	movs	r3, #1
 801e2fc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 801e300:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e304:	bfa4      	itt	ge
 801e306:	4643      	movge	r3, r8
 801e308:	46a0      	movge	r8, r4
 801e30a:	4630      	mov	r0, r6
 801e30c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801e310:	bfa6      	itte	ge
 801e312:	461c      	movge	r4, r3
 801e314:	2500      	movge	r5, #0
 801e316:	2501      	movlt	r5, #1
 801e318:	f7ff fd3a 	bl	801dd90 <_Balloc>
 801e31c:	b920      	cbnz	r0, 801e328 <__mdiff+0x5c>
 801e31e:	4b2e      	ldr	r3, [pc, #184]	; (801e3d8 <__mdiff+0x10c>)
 801e320:	4602      	mov	r2, r0
 801e322:	f44f 7110 	mov.w	r1, #576	; 0x240
 801e326:	e7e5      	b.n	801e2f4 <__mdiff+0x28>
 801e328:	f8d8 7010 	ldr.w	r7, [r8, #16]
 801e32c:	6926      	ldr	r6, [r4, #16]
 801e32e:	60c5      	str	r5, [r0, #12]
 801e330:	f104 0914 	add.w	r9, r4, #20
 801e334:	f108 0514 	add.w	r5, r8, #20
 801e338:	f100 0e14 	add.w	lr, r0, #20
 801e33c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 801e340:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 801e344:	f108 0210 	add.w	r2, r8, #16
 801e348:	46f2      	mov	sl, lr
 801e34a:	2100      	movs	r1, #0
 801e34c:	f859 3b04 	ldr.w	r3, [r9], #4
 801e350:	f852 bf04 	ldr.w	fp, [r2, #4]!
 801e354:	fa1f f883 	uxth.w	r8, r3
 801e358:	fa11 f18b 	uxtah	r1, r1, fp
 801e35c:	0c1b      	lsrs	r3, r3, #16
 801e35e:	eba1 0808 	sub.w	r8, r1, r8
 801e362:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 801e366:	eb03 4328 	add.w	r3, r3, r8, asr #16
 801e36a:	fa1f f888 	uxth.w	r8, r8
 801e36e:	1419      	asrs	r1, r3, #16
 801e370:	454e      	cmp	r6, r9
 801e372:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 801e376:	f84a 3b04 	str.w	r3, [sl], #4
 801e37a:	d8e7      	bhi.n	801e34c <__mdiff+0x80>
 801e37c:	1b33      	subs	r3, r6, r4
 801e37e:	3b15      	subs	r3, #21
 801e380:	f023 0303 	bic.w	r3, r3, #3
 801e384:	3304      	adds	r3, #4
 801e386:	3415      	adds	r4, #21
 801e388:	42a6      	cmp	r6, r4
 801e38a:	bf38      	it	cc
 801e38c:	2304      	movcc	r3, #4
 801e38e:	441d      	add	r5, r3
 801e390:	4473      	add	r3, lr
 801e392:	469e      	mov	lr, r3
 801e394:	462e      	mov	r6, r5
 801e396:	4566      	cmp	r6, ip
 801e398:	d30e      	bcc.n	801e3b8 <__mdiff+0xec>
 801e39a:	f10c 0203 	add.w	r2, ip, #3
 801e39e:	1b52      	subs	r2, r2, r5
 801e3a0:	f022 0203 	bic.w	r2, r2, #3
 801e3a4:	3d03      	subs	r5, #3
 801e3a6:	45ac      	cmp	ip, r5
 801e3a8:	bf38      	it	cc
 801e3aa:	2200      	movcc	r2, #0
 801e3ac:	441a      	add	r2, r3
 801e3ae:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 801e3b2:	b17b      	cbz	r3, 801e3d4 <__mdiff+0x108>
 801e3b4:	6107      	str	r7, [r0, #16]
 801e3b6:	e7a3      	b.n	801e300 <__mdiff+0x34>
 801e3b8:	f856 8b04 	ldr.w	r8, [r6], #4
 801e3bc:	fa11 f288 	uxtah	r2, r1, r8
 801e3c0:	1414      	asrs	r4, r2, #16
 801e3c2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 801e3c6:	b292      	uxth	r2, r2
 801e3c8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 801e3cc:	f84e 2b04 	str.w	r2, [lr], #4
 801e3d0:	1421      	asrs	r1, r4, #16
 801e3d2:	e7e0      	b.n	801e396 <__mdiff+0xca>
 801e3d4:	3f01      	subs	r7, #1
 801e3d6:	e7ea      	b.n	801e3ae <__mdiff+0xe2>
 801e3d8:	08021acc 	.word	0x08021acc
 801e3dc:	08021b40 	.word	0x08021b40

0801e3e0 <__d2b>:
 801e3e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801e3e4:	4689      	mov	r9, r1
 801e3e6:	2101      	movs	r1, #1
 801e3e8:	ec57 6b10 	vmov	r6, r7, d0
 801e3ec:	4690      	mov	r8, r2
 801e3ee:	f7ff fccf 	bl	801dd90 <_Balloc>
 801e3f2:	4604      	mov	r4, r0
 801e3f4:	b930      	cbnz	r0, 801e404 <__d2b+0x24>
 801e3f6:	4602      	mov	r2, r0
 801e3f8:	4b25      	ldr	r3, [pc, #148]	; (801e490 <__d2b+0xb0>)
 801e3fa:	4826      	ldr	r0, [pc, #152]	; (801e494 <__d2b+0xb4>)
 801e3fc:	f240 310a 	movw	r1, #778	; 0x30a
 801e400:	f7fd fac4 	bl	801b98c <__assert_func>
 801e404:	f3c7 550a 	ubfx	r5, r7, #20, #11
 801e408:	f3c7 0313 	ubfx	r3, r7, #0, #20
 801e40c:	bb35      	cbnz	r5, 801e45c <__d2b+0x7c>
 801e40e:	2e00      	cmp	r6, #0
 801e410:	9301      	str	r3, [sp, #4]
 801e412:	d028      	beq.n	801e466 <__d2b+0x86>
 801e414:	4668      	mov	r0, sp
 801e416:	9600      	str	r6, [sp, #0]
 801e418:	f7ff fd82 	bl	801df20 <__lo0bits>
 801e41c:	9900      	ldr	r1, [sp, #0]
 801e41e:	b300      	cbz	r0, 801e462 <__d2b+0x82>
 801e420:	9a01      	ldr	r2, [sp, #4]
 801e422:	f1c0 0320 	rsb	r3, r0, #32
 801e426:	fa02 f303 	lsl.w	r3, r2, r3
 801e42a:	430b      	orrs	r3, r1
 801e42c:	40c2      	lsrs	r2, r0
 801e42e:	6163      	str	r3, [r4, #20]
 801e430:	9201      	str	r2, [sp, #4]
 801e432:	9b01      	ldr	r3, [sp, #4]
 801e434:	61a3      	str	r3, [r4, #24]
 801e436:	2b00      	cmp	r3, #0
 801e438:	bf14      	ite	ne
 801e43a:	2202      	movne	r2, #2
 801e43c:	2201      	moveq	r2, #1
 801e43e:	6122      	str	r2, [r4, #16]
 801e440:	b1d5      	cbz	r5, 801e478 <__d2b+0x98>
 801e442:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 801e446:	4405      	add	r5, r0
 801e448:	f8c9 5000 	str.w	r5, [r9]
 801e44c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 801e450:	f8c8 0000 	str.w	r0, [r8]
 801e454:	4620      	mov	r0, r4
 801e456:	b003      	add	sp, #12
 801e458:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e45c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801e460:	e7d5      	b.n	801e40e <__d2b+0x2e>
 801e462:	6161      	str	r1, [r4, #20]
 801e464:	e7e5      	b.n	801e432 <__d2b+0x52>
 801e466:	a801      	add	r0, sp, #4
 801e468:	f7ff fd5a 	bl	801df20 <__lo0bits>
 801e46c:	9b01      	ldr	r3, [sp, #4]
 801e46e:	6163      	str	r3, [r4, #20]
 801e470:	2201      	movs	r2, #1
 801e472:	6122      	str	r2, [r4, #16]
 801e474:	3020      	adds	r0, #32
 801e476:	e7e3      	b.n	801e440 <__d2b+0x60>
 801e478:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e47c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 801e480:	f8c9 0000 	str.w	r0, [r9]
 801e484:	6918      	ldr	r0, [r3, #16]
 801e486:	f7ff fd2b 	bl	801dee0 <__hi0bits>
 801e48a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 801e48e:	e7df      	b.n	801e450 <__d2b+0x70>
 801e490:	08021acc 	.word	0x08021acc
 801e494:	08021b40 	.word	0x08021b40

0801e498 <_calloc_r>:
 801e498:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801e49a:	fba1 2402 	umull	r2, r4, r1, r2
 801e49e:	b94c      	cbnz	r4, 801e4b4 <_calloc_r+0x1c>
 801e4a0:	4611      	mov	r1, r2
 801e4a2:	9201      	str	r2, [sp, #4]
 801e4a4:	f7fd fb76 	bl	801bb94 <_malloc_r>
 801e4a8:	9a01      	ldr	r2, [sp, #4]
 801e4aa:	4605      	mov	r5, r0
 801e4ac:	b930      	cbnz	r0, 801e4bc <_calloc_r+0x24>
 801e4ae:	4628      	mov	r0, r5
 801e4b0:	b003      	add	sp, #12
 801e4b2:	bd30      	pop	{r4, r5, pc}
 801e4b4:	220c      	movs	r2, #12
 801e4b6:	6002      	str	r2, [r0, #0]
 801e4b8:	2500      	movs	r5, #0
 801e4ba:	e7f8      	b.n	801e4ae <_calloc_r+0x16>
 801e4bc:	4621      	mov	r1, r4
 801e4be:	f7fd faf5 	bl	801baac <memset>
 801e4c2:	e7f4      	b.n	801e4ae <_calloc_r+0x16>

0801e4c4 <__sread>:
 801e4c4:	b510      	push	{r4, lr}
 801e4c6:	460c      	mov	r4, r1
 801e4c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e4cc:	f000 f8a6 	bl	801e61c <_read_r>
 801e4d0:	2800      	cmp	r0, #0
 801e4d2:	bfab      	itete	ge
 801e4d4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801e4d6:	89a3      	ldrhlt	r3, [r4, #12]
 801e4d8:	181b      	addge	r3, r3, r0
 801e4da:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801e4de:	bfac      	ite	ge
 801e4e0:	6563      	strge	r3, [r4, #84]	; 0x54
 801e4e2:	81a3      	strhlt	r3, [r4, #12]
 801e4e4:	bd10      	pop	{r4, pc}

0801e4e6 <__swrite>:
 801e4e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e4ea:	461f      	mov	r7, r3
 801e4ec:	898b      	ldrh	r3, [r1, #12]
 801e4ee:	05db      	lsls	r3, r3, #23
 801e4f0:	4605      	mov	r5, r0
 801e4f2:	460c      	mov	r4, r1
 801e4f4:	4616      	mov	r6, r2
 801e4f6:	d505      	bpl.n	801e504 <__swrite+0x1e>
 801e4f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e4fc:	2302      	movs	r3, #2
 801e4fe:	2200      	movs	r2, #0
 801e500:	f000 f868 	bl	801e5d4 <_lseek_r>
 801e504:	89a3      	ldrh	r3, [r4, #12]
 801e506:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e50a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801e50e:	81a3      	strh	r3, [r4, #12]
 801e510:	4632      	mov	r2, r6
 801e512:	463b      	mov	r3, r7
 801e514:	4628      	mov	r0, r5
 801e516:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801e51a:	f000 b817 	b.w	801e54c <_write_r>

0801e51e <__sseek>:
 801e51e:	b510      	push	{r4, lr}
 801e520:	460c      	mov	r4, r1
 801e522:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e526:	f000 f855 	bl	801e5d4 <_lseek_r>
 801e52a:	1c43      	adds	r3, r0, #1
 801e52c:	89a3      	ldrh	r3, [r4, #12]
 801e52e:	bf15      	itete	ne
 801e530:	6560      	strne	r0, [r4, #84]	; 0x54
 801e532:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801e536:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801e53a:	81a3      	strheq	r3, [r4, #12]
 801e53c:	bf18      	it	ne
 801e53e:	81a3      	strhne	r3, [r4, #12]
 801e540:	bd10      	pop	{r4, pc}

0801e542 <__sclose>:
 801e542:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e546:	f000 b813 	b.w	801e570 <_close_r>
	...

0801e54c <_write_r>:
 801e54c:	b538      	push	{r3, r4, r5, lr}
 801e54e:	4d07      	ldr	r5, [pc, #28]	; (801e56c <_write_r+0x20>)
 801e550:	4604      	mov	r4, r0
 801e552:	4608      	mov	r0, r1
 801e554:	4611      	mov	r1, r2
 801e556:	2200      	movs	r2, #0
 801e558:	602a      	str	r2, [r5, #0]
 801e55a:	461a      	mov	r2, r3
 801e55c:	f7e4 f9e5 	bl	800292a <_write>
 801e560:	1c43      	adds	r3, r0, #1
 801e562:	d102      	bne.n	801e56a <_write_r+0x1e>
 801e564:	682b      	ldr	r3, [r5, #0]
 801e566:	b103      	cbz	r3, 801e56a <_write_r+0x1e>
 801e568:	6023      	str	r3, [r4, #0]
 801e56a:	bd38      	pop	{r3, r4, r5, pc}
 801e56c:	20001a60 	.word	0x20001a60

0801e570 <_close_r>:
 801e570:	b538      	push	{r3, r4, r5, lr}
 801e572:	4d06      	ldr	r5, [pc, #24]	; (801e58c <_close_r+0x1c>)
 801e574:	2300      	movs	r3, #0
 801e576:	4604      	mov	r4, r0
 801e578:	4608      	mov	r0, r1
 801e57a:	602b      	str	r3, [r5, #0]
 801e57c:	f7e4 f9f1 	bl	8002962 <_close>
 801e580:	1c43      	adds	r3, r0, #1
 801e582:	d102      	bne.n	801e58a <_close_r+0x1a>
 801e584:	682b      	ldr	r3, [r5, #0]
 801e586:	b103      	cbz	r3, 801e58a <_close_r+0x1a>
 801e588:	6023      	str	r3, [r4, #0]
 801e58a:	bd38      	pop	{r3, r4, r5, pc}
 801e58c:	20001a60 	.word	0x20001a60

0801e590 <_fstat_r>:
 801e590:	b538      	push	{r3, r4, r5, lr}
 801e592:	4d07      	ldr	r5, [pc, #28]	; (801e5b0 <_fstat_r+0x20>)
 801e594:	2300      	movs	r3, #0
 801e596:	4604      	mov	r4, r0
 801e598:	4608      	mov	r0, r1
 801e59a:	4611      	mov	r1, r2
 801e59c:	602b      	str	r3, [r5, #0]
 801e59e:	f7e4 f9ec 	bl	800297a <_fstat>
 801e5a2:	1c43      	adds	r3, r0, #1
 801e5a4:	d102      	bne.n	801e5ac <_fstat_r+0x1c>
 801e5a6:	682b      	ldr	r3, [r5, #0]
 801e5a8:	b103      	cbz	r3, 801e5ac <_fstat_r+0x1c>
 801e5aa:	6023      	str	r3, [r4, #0]
 801e5ac:	bd38      	pop	{r3, r4, r5, pc}
 801e5ae:	bf00      	nop
 801e5b0:	20001a60 	.word	0x20001a60

0801e5b4 <_isatty_r>:
 801e5b4:	b538      	push	{r3, r4, r5, lr}
 801e5b6:	4d06      	ldr	r5, [pc, #24]	; (801e5d0 <_isatty_r+0x1c>)
 801e5b8:	2300      	movs	r3, #0
 801e5ba:	4604      	mov	r4, r0
 801e5bc:	4608      	mov	r0, r1
 801e5be:	602b      	str	r3, [r5, #0]
 801e5c0:	f7e4 f9eb 	bl	800299a <_isatty>
 801e5c4:	1c43      	adds	r3, r0, #1
 801e5c6:	d102      	bne.n	801e5ce <_isatty_r+0x1a>
 801e5c8:	682b      	ldr	r3, [r5, #0]
 801e5ca:	b103      	cbz	r3, 801e5ce <_isatty_r+0x1a>
 801e5cc:	6023      	str	r3, [r4, #0]
 801e5ce:	bd38      	pop	{r3, r4, r5, pc}
 801e5d0:	20001a60 	.word	0x20001a60

0801e5d4 <_lseek_r>:
 801e5d4:	b538      	push	{r3, r4, r5, lr}
 801e5d6:	4d07      	ldr	r5, [pc, #28]	; (801e5f4 <_lseek_r+0x20>)
 801e5d8:	4604      	mov	r4, r0
 801e5da:	4608      	mov	r0, r1
 801e5dc:	4611      	mov	r1, r2
 801e5de:	2200      	movs	r2, #0
 801e5e0:	602a      	str	r2, [r5, #0]
 801e5e2:	461a      	mov	r2, r3
 801e5e4:	f7e4 f9e4 	bl	80029b0 <_lseek>
 801e5e8:	1c43      	adds	r3, r0, #1
 801e5ea:	d102      	bne.n	801e5f2 <_lseek_r+0x1e>
 801e5ec:	682b      	ldr	r3, [r5, #0]
 801e5ee:	b103      	cbz	r3, 801e5f2 <_lseek_r+0x1e>
 801e5f0:	6023      	str	r3, [r4, #0]
 801e5f2:	bd38      	pop	{r3, r4, r5, pc}
 801e5f4:	20001a60 	.word	0x20001a60

0801e5f8 <__ascii_mbtowc>:
 801e5f8:	b082      	sub	sp, #8
 801e5fa:	b901      	cbnz	r1, 801e5fe <__ascii_mbtowc+0x6>
 801e5fc:	a901      	add	r1, sp, #4
 801e5fe:	b142      	cbz	r2, 801e612 <__ascii_mbtowc+0x1a>
 801e600:	b14b      	cbz	r3, 801e616 <__ascii_mbtowc+0x1e>
 801e602:	7813      	ldrb	r3, [r2, #0]
 801e604:	600b      	str	r3, [r1, #0]
 801e606:	7812      	ldrb	r2, [r2, #0]
 801e608:	1e10      	subs	r0, r2, #0
 801e60a:	bf18      	it	ne
 801e60c:	2001      	movne	r0, #1
 801e60e:	b002      	add	sp, #8
 801e610:	4770      	bx	lr
 801e612:	4610      	mov	r0, r2
 801e614:	e7fb      	b.n	801e60e <__ascii_mbtowc+0x16>
 801e616:	f06f 0001 	mvn.w	r0, #1
 801e61a:	e7f8      	b.n	801e60e <__ascii_mbtowc+0x16>

0801e61c <_read_r>:
 801e61c:	b538      	push	{r3, r4, r5, lr}
 801e61e:	4d07      	ldr	r5, [pc, #28]	; (801e63c <_read_r+0x20>)
 801e620:	4604      	mov	r4, r0
 801e622:	4608      	mov	r0, r1
 801e624:	4611      	mov	r1, r2
 801e626:	2200      	movs	r2, #0
 801e628:	602a      	str	r2, [r5, #0]
 801e62a:	461a      	mov	r2, r3
 801e62c:	f7e4 f960 	bl	80028f0 <_read>
 801e630:	1c43      	adds	r3, r0, #1
 801e632:	d102      	bne.n	801e63a <_read_r+0x1e>
 801e634:	682b      	ldr	r3, [r5, #0]
 801e636:	b103      	cbz	r3, 801e63a <_read_r+0x1e>
 801e638:	6023      	str	r3, [r4, #0]
 801e63a:	bd38      	pop	{r3, r4, r5, pc}
 801e63c:	20001a60 	.word	0x20001a60

0801e640 <__ascii_wctomb>:
 801e640:	b149      	cbz	r1, 801e656 <__ascii_wctomb+0x16>
 801e642:	2aff      	cmp	r2, #255	; 0xff
 801e644:	bf85      	ittet	hi
 801e646:	238a      	movhi	r3, #138	; 0x8a
 801e648:	6003      	strhi	r3, [r0, #0]
 801e64a:	700a      	strbls	r2, [r1, #0]
 801e64c:	f04f 30ff 	movhi.w	r0, #4294967295
 801e650:	bf98      	it	ls
 801e652:	2001      	movls	r0, #1
 801e654:	4770      	bx	lr
 801e656:	4608      	mov	r0, r1
 801e658:	4770      	bx	lr
	...

0801e65c <_init>:
 801e65c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e65e:	bf00      	nop
 801e660:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e662:	bc08      	pop	{r3}
 801e664:	469e      	mov	lr, r3
 801e666:	4770      	bx	lr

0801e668 <_fini>:
 801e668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e66a:	bf00      	nop
 801e66c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e66e:	bc08      	pop	{r3}
 801e670:	469e      	mov	lr, r3
 801e672:	4770      	bx	lr
